
Interpreter746.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002715c  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000010f4  08027330  08027330  00037330  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08028424  08028424  000401e8  2**0
                  CONTENTS
  4 .ARM          00000008  08028424  08028424  00038424  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0802842c  0802842c  000401e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000034  0802842c  0802842c  0003842c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000034  08028460  08028460  00038460  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e8  20000000  08028494  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000055c  200001e8  0802867c  000401e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000744  0802867c  00040744  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000401e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   002c3517  00000000  00000000  00040218  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000fedb  00000000  00000000  0030372f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 0000ff08  00000000  00000000  00313610  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 0000fd70  00000000  00000000  00323518  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0003130a  00000000  00000000  00333288  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0005f355  00000000  00000000  00364592  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0021cb27  00000000  00000000  003c38e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  005e040e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0004e8f4  00000000  00000000  005e0464  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001e8 	.word	0x200001e8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08027314 	.word	0x08027314

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001ec 	.word	0x200001ec
 800020c:	08027314 	.word	0x08027314

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_uldivmod>:
 8000cc8:	b953      	cbnz	r3, 8000ce0 <__aeabi_uldivmod+0x18>
 8000cca:	b94a      	cbnz	r2, 8000ce0 <__aeabi_uldivmod+0x18>
 8000ccc:	2900      	cmp	r1, #0
 8000cce:	bf08      	it	eq
 8000cd0:	2800      	cmpeq	r0, #0
 8000cd2:	bf1c      	itt	ne
 8000cd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cdc:	f000 b9a4 	b.w	8001028 <__aeabi_idiv0>
 8000ce0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ce4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ce8:	f000 f83c 	bl	8000d64 <__udivmoddi4>
 8000cec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf4:	b004      	add	sp, #16
 8000cf6:	4770      	bx	lr

08000cf8 <__aeabi_d2lz>:
 8000cf8:	b538      	push	{r3, r4, r5, lr}
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	4604      	mov	r4, r0
 8000d00:	460d      	mov	r5, r1
 8000d02:	f7ff ff0b 	bl	8000b1c <__aeabi_dcmplt>
 8000d06:	b928      	cbnz	r0, 8000d14 <__aeabi_d2lz+0x1c>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	4629      	mov	r1, r5
 8000d0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d10:	f000 b80a 	b.w	8000d28 <__aeabi_d2ulz>
 8000d14:	4620      	mov	r0, r4
 8000d16:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000d1a:	f000 f805 	bl	8000d28 <__aeabi_d2ulz>
 8000d1e:	4240      	negs	r0, r0
 8000d20:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d24:	bd38      	pop	{r3, r4, r5, pc}
 8000d26:	bf00      	nop

08000d28 <__aeabi_d2ulz>:
 8000d28:	b5d0      	push	{r4, r6, r7, lr}
 8000d2a:	4b0c      	ldr	r3, [pc, #48]	; (8000d5c <__aeabi_d2ulz+0x34>)
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	4606      	mov	r6, r0
 8000d30:	460f      	mov	r7, r1
 8000d32:	f7ff fc81 	bl	8000638 <__aeabi_dmul>
 8000d36:	f7ff ff57 	bl	8000be8 <__aeabi_d2uiz>
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	f7ff fc02 	bl	8000544 <__aeabi_ui2d>
 8000d40:	4b07      	ldr	r3, [pc, #28]	; (8000d60 <__aeabi_d2ulz+0x38>)
 8000d42:	2200      	movs	r2, #0
 8000d44:	f7ff fc78 	bl	8000638 <__aeabi_dmul>
 8000d48:	4602      	mov	r2, r0
 8000d4a:	460b      	mov	r3, r1
 8000d4c:	4630      	mov	r0, r6
 8000d4e:	4639      	mov	r1, r7
 8000d50:	f7ff faba 	bl	80002c8 <__aeabi_dsub>
 8000d54:	f7ff ff48 	bl	8000be8 <__aeabi_d2uiz>
 8000d58:	4621      	mov	r1, r4
 8000d5a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d5c:	3df00000 	.word	0x3df00000
 8000d60:	41f00000 	.word	0x41f00000

08000d64 <__udivmoddi4>:
 8000d64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d68:	9d08      	ldr	r5, [sp, #32]
 8000d6a:	4604      	mov	r4, r0
 8000d6c:	468c      	mov	ip, r1
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	f040 8083 	bne.w	8000e7a <__udivmoddi4+0x116>
 8000d74:	428a      	cmp	r2, r1
 8000d76:	4617      	mov	r7, r2
 8000d78:	d947      	bls.n	8000e0a <__udivmoddi4+0xa6>
 8000d7a:	fab2 f282 	clz	r2, r2
 8000d7e:	b142      	cbz	r2, 8000d92 <__udivmoddi4+0x2e>
 8000d80:	f1c2 0020 	rsb	r0, r2, #32
 8000d84:	fa24 f000 	lsr.w	r0, r4, r0
 8000d88:	4091      	lsls	r1, r2
 8000d8a:	4097      	lsls	r7, r2
 8000d8c:	ea40 0c01 	orr.w	ip, r0, r1
 8000d90:	4094      	lsls	r4, r2
 8000d92:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000d96:	0c23      	lsrs	r3, r4, #16
 8000d98:	fbbc f6f8 	udiv	r6, ip, r8
 8000d9c:	fa1f fe87 	uxth.w	lr, r7
 8000da0:	fb08 c116 	mls	r1, r8, r6, ip
 8000da4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000da8:	fb06 f10e 	mul.w	r1, r6, lr
 8000dac:	4299      	cmp	r1, r3
 8000dae:	d909      	bls.n	8000dc4 <__udivmoddi4+0x60>
 8000db0:	18fb      	adds	r3, r7, r3
 8000db2:	f106 30ff 	add.w	r0, r6, #4294967295
 8000db6:	f080 8119 	bcs.w	8000fec <__udivmoddi4+0x288>
 8000dba:	4299      	cmp	r1, r3
 8000dbc:	f240 8116 	bls.w	8000fec <__udivmoddi4+0x288>
 8000dc0:	3e02      	subs	r6, #2
 8000dc2:	443b      	add	r3, r7
 8000dc4:	1a5b      	subs	r3, r3, r1
 8000dc6:	b2a4      	uxth	r4, r4
 8000dc8:	fbb3 f0f8 	udiv	r0, r3, r8
 8000dcc:	fb08 3310 	mls	r3, r8, r0, r3
 8000dd0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000dd4:	fb00 fe0e 	mul.w	lr, r0, lr
 8000dd8:	45a6      	cmp	lr, r4
 8000dda:	d909      	bls.n	8000df0 <__udivmoddi4+0x8c>
 8000ddc:	193c      	adds	r4, r7, r4
 8000dde:	f100 33ff 	add.w	r3, r0, #4294967295
 8000de2:	f080 8105 	bcs.w	8000ff0 <__udivmoddi4+0x28c>
 8000de6:	45a6      	cmp	lr, r4
 8000de8:	f240 8102 	bls.w	8000ff0 <__udivmoddi4+0x28c>
 8000dec:	3802      	subs	r0, #2
 8000dee:	443c      	add	r4, r7
 8000df0:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000df4:	eba4 040e 	sub.w	r4, r4, lr
 8000df8:	2600      	movs	r6, #0
 8000dfa:	b11d      	cbz	r5, 8000e04 <__udivmoddi4+0xa0>
 8000dfc:	40d4      	lsrs	r4, r2
 8000dfe:	2300      	movs	r3, #0
 8000e00:	e9c5 4300 	strd	r4, r3, [r5]
 8000e04:	4631      	mov	r1, r6
 8000e06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e0a:	b902      	cbnz	r2, 8000e0e <__udivmoddi4+0xaa>
 8000e0c:	deff      	udf	#255	; 0xff
 8000e0e:	fab2 f282 	clz	r2, r2
 8000e12:	2a00      	cmp	r2, #0
 8000e14:	d150      	bne.n	8000eb8 <__udivmoddi4+0x154>
 8000e16:	1bcb      	subs	r3, r1, r7
 8000e18:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000e1c:	fa1f f887 	uxth.w	r8, r7
 8000e20:	2601      	movs	r6, #1
 8000e22:	fbb3 fcfe 	udiv	ip, r3, lr
 8000e26:	0c21      	lsrs	r1, r4, #16
 8000e28:	fb0e 331c 	mls	r3, lr, ip, r3
 8000e2c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e30:	fb08 f30c 	mul.w	r3, r8, ip
 8000e34:	428b      	cmp	r3, r1
 8000e36:	d907      	bls.n	8000e48 <__udivmoddi4+0xe4>
 8000e38:	1879      	adds	r1, r7, r1
 8000e3a:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000e3e:	d202      	bcs.n	8000e46 <__udivmoddi4+0xe2>
 8000e40:	428b      	cmp	r3, r1
 8000e42:	f200 80e9 	bhi.w	8001018 <__udivmoddi4+0x2b4>
 8000e46:	4684      	mov	ip, r0
 8000e48:	1ac9      	subs	r1, r1, r3
 8000e4a:	b2a3      	uxth	r3, r4
 8000e4c:	fbb1 f0fe 	udiv	r0, r1, lr
 8000e50:	fb0e 1110 	mls	r1, lr, r0, r1
 8000e54:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000e58:	fb08 f800 	mul.w	r8, r8, r0
 8000e5c:	45a0      	cmp	r8, r4
 8000e5e:	d907      	bls.n	8000e70 <__udivmoddi4+0x10c>
 8000e60:	193c      	adds	r4, r7, r4
 8000e62:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e66:	d202      	bcs.n	8000e6e <__udivmoddi4+0x10a>
 8000e68:	45a0      	cmp	r8, r4
 8000e6a:	f200 80d9 	bhi.w	8001020 <__udivmoddi4+0x2bc>
 8000e6e:	4618      	mov	r0, r3
 8000e70:	eba4 0408 	sub.w	r4, r4, r8
 8000e74:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000e78:	e7bf      	b.n	8000dfa <__udivmoddi4+0x96>
 8000e7a:	428b      	cmp	r3, r1
 8000e7c:	d909      	bls.n	8000e92 <__udivmoddi4+0x12e>
 8000e7e:	2d00      	cmp	r5, #0
 8000e80:	f000 80b1 	beq.w	8000fe6 <__udivmoddi4+0x282>
 8000e84:	2600      	movs	r6, #0
 8000e86:	e9c5 0100 	strd	r0, r1, [r5]
 8000e8a:	4630      	mov	r0, r6
 8000e8c:	4631      	mov	r1, r6
 8000e8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e92:	fab3 f683 	clz	r6, r3
 8000e96:	2e00      	cmp	r6, #0
 8000e98:	d14a      	bne.n	8000f30 <__udivmoddi4+0x1cc>
 8000e9a:	428b      	cmp	r3, r1
 8000e9c:	d302      	bcc.n	8000ea4 <__udivmoddi4+0x140>
 8000e9e:	4282      	cmp	r2, r0
 8000ea0:	f200 80b8 	bhi.w	8001014 <__udivmoddi4+0x2b0>
 8000ea4:	1a84      	subs	r4, r0, r2
 8000ea6:	eb61 0103 	sbc.w	r1, r1, r3
 8000eaa:	2001      	movs	r0, #1
 8000eac:	468c      	mov	ip, r1
 8000eae:	2d00      	cmp	r5, #0
 8000eb0:	d0a8      	beq.n	8000e04 <__udivmoddi4+0xa0>
 8000eb2:	e9c5 4c00 	strd	r4, ip, [r5]
 8000eb6:	e7a5      	b.n	8000e04 <__udivmoddi4+0xa0>
 8000eb8:	f1c2 0320 	rsb	r3, r2, #32
 8000ebc:	fa20 f603 	lsr.w	r6, r0, r3
 8000ec0:	4097      	lsls	r7, r2
 8000ec2:	fa01 f002 	lsl.w	r0, r1, r2
 8000ec6:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000eca:	40d9      	lsrs	r1, r3
 8000ecc:	4330      	orrs	r0, r6
 8000ece:	0c03      	lsrs	r3, r0, #16
 8000ed0:	fbb1 f6fe 	udiv	r6, r1, lr
 8000ed4:	fa1f f887 	uxth.w	r8, r7
 8000ed8:	fb0e 1116 	mls	r1, lr, r6, r1
 8000edc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ee0:	fb06 f108 	mul.w	r1, r6, r8
 8000ee4:	4299      	cmp	r1, r3
 8000ee6:	fa04 f402 	lsl.w	r4, r4, r2
 8000eea:	d909      	bls.n	8000f00 <__udivmoddi4+0x19c>
 8000eec:	18fb      	adds	r3, r7, r3
 8000eee:	f106 3cff 	add.w	ip, r6, #4294967295
 8000ef2:	f080 808d 	bcs.w	8001010 <__udivmoddi4+0x2ac>
 8000ef6:	4299      	cmp	r1, r3
 8000ef8:	f240 808a 	bls.w	8001010 <__udivmoddi4+0x2ac>
 8000efc:	3e02      	subs	r6, #2
 8000efe:	443b      	add	r3, r7
 8000f00:	1a5b      	subs	r3, r3, r1
 8000f02:	b281      	uxth	r1, r0
 8000f04:	fbb3 f0fe 	udiv	r0, r3, lr
 8000f08:	fb0e 3310 	mls	r3, lr, r0, r3
 8000f0c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f10:	fb00 f308 	mul.w	r3, r0, r8
 8000f14:	428b      	cmp	r3, r1
 8000f16:	d907      	bls.n	8000f28 <__udivmoddi4+0x1c4>
 8000f18:	1879      	adds	r1, r7, r1
 8000f1a:	f100 3cff 	add.w	ip, r0, #4294967295
 8000f1e:	d273      	bcs.n	8001008 <__udivmoddi4+0x2a4>
 8000f20:	428b      	cmp	r3, r1
 8000f22:	d971      	bls.n	8001008 <__udivmoddi4+0x2a4>
 8000f24:	3802      	subs	r0, #2
 8000f26:	4439      	add	r1, r7
 8000f28:	1acb      	subs	r3, r1, r3
 8000f2a:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8000f2e:	e778      	b.n	8000e22 <__udivmoddi4+0xbe>
 8000f30:	f1c6 0c20 	rsb	ip, r6, #32
 8000f34:	fa03 f406 	lsl.w	r4, r3, r6
 8000f38:	fa22 f30c 	lsr.w	r3, r2, ip
 8000f3c:	431c      	orrs	r4, r3
 8000f3e:	fa20 f70c 	lsr.w	r7, r0, ip
 8000f42:	fa01 f306 	lsl.w	r3, r1, r6
 8000f46:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000f4a:	fa21 f10c 	lsr.w	r1, r1, ip
 8000f4e:	431f      	orrs	r7, r3
 8000f50:	0c3b      	lsrs	r3, r7, #16
 8000f52:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f56:	fa1f f884 	uxth.w	r8, r4
 8000f5a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f5e:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000f62:	fb09 fa08 	mul.w	sl, r9, r8
 8000f66:	458a      	cmp	sl, r1
 8000f68:	fa02 f206 	lsl.w	r2, r2, r6
 8000f6c:	fa00 f306 	lsl.w	r3, r0, r6
 8000f70:	d908      	bls.n	8000f84 <__udivmoddi4+0x220>
 8000f72:	1861      	adds	r1, r4, r1
 8000f74:	f109 30ff 	add.w	r0, r9, #4294967295
 8000f78:	d248      	bcs.n	800100c <__udivmoddi4+0x2a8>
 8000f7a:	458a      	cmp	sl, r1
 8000f7c:	d946      	bls.n	800100c <__udivmoddi4+0x2a8>
 8000f7e:	f1a9 0902 	sub.w	r9, r9, #2
 8000f82:	4421      	add	r1, r4
 8000f84:	eba1 010a 	sub.w	r1, r1, sl
 8000f88:	b2bf      	uxth	r7, r7
 8000f8a:	fbb1 f0fe 	udiv	r0, r1, lr
 8000f8e:	fb0e 1110 	mls	r1, lr, r0, r1
 8000f92:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000f96:	fb00 f808 	mul.w	r8, r0, r8
 8000f9a:	45b8      	cmp	r8, r7
 8000f9c:	d907      	bls.n	8000fae <__udivmoddi4+0x24a>
 8000f9e:	19e7      	adds	r7, r4, r7
 8000fa0:	f100 31ff 	add.w	r1, r0, #4294967295
 8000fa4:	d22e      	bcs.n	8001004 <__udivmoddi4+0x2a0>
 8000fa6:	45b8      	cmp	r8, r7
 8000fa8:	d92c      	bls.n	8001004 <__udivmoddi4+0x2a0>
 8000faa:	3802      	subs	r0, #2
 8000fac:	4427      	add	r7, r4
 8000fae:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000fb2:	eba7 0708 	sub.w	r7, r7, r8
 8000fb6:	fba0 8902 	umull	r8, r9, r0, r2
 8000fba:	454f      	cmp	r7, r9
 8000fbc:	46c6      	mov	lr, r8
 8000fbe:	4649      	mov	r1, r9
 8000fc0:	d31a      	bcc.n	8000ff8 <__udivmoddi4+0x294>
 8000fc2:	d017      	beq.n	8000ff4 <__udivmoddi4+0x290>
 8000fc4:	b15d      	cbz	r5, 8000fde <__udivmoddi4+0x27a>
 8000fc6:	ebb3 020e 	subs.w	r2, r3, lr
 8000fca:	eb67 0701 	sbc.w	r7, r7, r1
 8000fce:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000fd2:	40f2      	lsrs	r2, r6
 8000fd4:	ea4c 0202 	orr.w	r2, ip, r2
 8000fd8:	40f7      	lsrs	r7, r6
 8000fda:	e9c5 2700 	strd	r2, r7, [r5]
 8000fde:	2600      	movs	r6, #0
 8000fe0:	4631      	mov	r1, r6
 8000fe2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fe6:	462e      	mov	r6, r5
 8000fe8:	4628      	mov	r0, r5
 8000fea:	e70b      	b.n	8000e04 <__udivmoddi4+0xa0>
 8000fec:	4606      	mov	r6, r0
 8000fee:	e6e9      	b.n	8000dc4 <__udivmoddi4+0x60>
 8000ff0:	4618      	mov	r0, r3
 8000ff2:	e6fd      	b.n	8000df0 <__udivmoddi4+0x8c>
 8000ff4:	4543      	cmp	r3, r8
 8000ff6:	d2e5      	bcs.n	8000fc4 <__udivmoddi4+0x260>
 8000ff8:	ebb8 0e02 	subs.w	lr, r8, r2
 8000ffc:	eb69 0104 	sbc.w	r1, r9, r4
 8001000:	3801      	subs	r0, #1
 8001002:	e7df      	b.n	8000fc4 <__udivmoddi4+0x260>
 8001004:	4608      	mov	r0, r1
 8001006:	e7d2      	b.n	8000fae <__udivmoddi4+0x24a>
 8001008:	4660      	mov	r0, ip
 800100a:	e78d      	b.n	8000f28 <__udivmoddi4+0x1c4>
 800100c:	4681      	mov	r9, r0
 800100e:	e7b9      	b.n	8000f84 <__udivmoddi4+0x220>
 8001010:	4666      	mov	r6, ip
 8001012:	e775      	b.n	8000f00 <__udivmoddi4+0x19c>
 8001014:	4630      	mov	r0, r6
 8001016:	e74a      	b.n	8000eae <__udivmoddi4+0x14a>
 8001018:	f1ac 0c02 	sub.w	ip, ip, #2
 800101c:	4439      	add	r1, r7
 800101e:	e713      	b.n	8000e48 <__udivmoddi4+0xe4>
 8001020:	3802      	subs	r0, #2
 8001022:	443c      	add	r4, r7
 8001024:	e724      	b.n	8000e70 <__udivmoddi4+0x10c>
 8001026:	bf00      	nop

08001028 <__aeabi_idiv0>:
 8001028:	4770      	bx	lr
 800102a:	bf00      	nop

0800102c <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
 800102c:	b580      	push	{r7, lr}
 800102e:	b084      	sub	sp, #16
 8001030:	af00      	add	r7, sp, #0
 8001032:	6078      	str	r0, [r7, #4]
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	60fb      	str	r3, [r7, #12]
      return __builtin_is_constant_evaluated();
 8001038:	2300      	movs	r3, #0
      {
#if __cplusplus >= 201703L
	if (__constant_string_p(__s))
 800103a:	2b00      	cmp	r3, #0
 800103c:	d004      	beq.n	8001048 <_ZNSt11char_traitsIcE6lengthEPKc+0x1c>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
 800103e:	6878      	ldr	r0, [r7, #4]
 8001040:	f000 f930 	bl	80012a4 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
 8001044:	4603      	mov	r3, r0
 8001046:	e004      	b.n	8001052 <_ZNSt11char_traitsIcE6lengthEPKc+0x26>
#endif
	return __builtin_strlen(__s);
 8001048:	6878      	ldr	r0, [r7, #4]
 800104a:	f7ff f931 	bl	80002b0 <strlen>
 800104e:	4603      	mov	r3, r0
 8001050:	bf00      	nop
      }
 8001052:	4618      	mov	r0, r3
 8001054:	3710      	adds	r7, #16
 8001056:	46bd      	mov	sp, r7
 8001058:	bd80      	pop	{r7, pc}

0800105a <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800105a:	b480      	push	{r7}
 800105c:	b083      	sub	sp, #12
 800105e:	af00      	add	r7, sp, #0
 8001060:	6078      	str	r0, [r7, #4]
 8001062:	6039      	str	r1, [r7, #0]
 8001064:	683b      	ldr	r3, [r7, #0]
 8001066:	4618      	mov	r0, r3
 8001068:	370c      	adds	r7, #12
 800106a:	46bd      	mov	sp, r7
 800106c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001070:	4770      	bx	lr

08001072 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
 8001072:	b580      	push	{r7, lr}
 8001074:	b082      	sub	sp, #8
 8001076:	af00      	add	r7, sp, #0
 8001078:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_color = _S_red;
 800107a:	687b      	ldr	r3, [r7, #4]
 800107c:	2200      	movs	r2, #0
 800107e:	701a      	strb	r2, [r3, #0]
      _M_reset();
 8001080:	6878      	ldr	r0, [r7, #4]
 8001082:	f000 f805 	bl	8001090 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	4618      	mov	r0, r3
 800108a:	3708      	adds	r7, #8
 800108c:	46bd      	mov	sp, r7
 800108e:	bd80      	pop	{r7, pc}

08001090 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
 8001090:	b480      	push	{r7}
 8001092:	b083      	sub	sp, #12
 8001094:	af00      	add	r7, sp, #0
 8001096:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_parent = 0;
 8001098:	687b      	ldr	r3, [r7, #4]
 800109a:	2200      	movs	r2, #0
 800109c:	605a      	str	r2, [r3, #4]
      _M_header._M_left = &_M_header;
 800109e:	687a      	ldr	r2, [r7, #4]
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	609a      	str	r2, [r3, #8]
      _M_header._M_right = &_M_header;
 80010a4:	687a      	ldr	r2, [r7, #4]
 80010a6:	687b      	ldr	r3, [r7, #4]
 80010a8:	60da      	str	r2, [r3, #12]
      _M_node_count = 0;
 80010aa:	687b      	ldr	r3, [r7, #4]
 80010ac:	2200      	movs	r2, #0
 80010ae:	611a      	str	r2, [r3, #16]
    }
 80010b0:	bf00      	nop
 80010b2:	370c      	adds	r7, #12
 80010b4:	46bd      	mov	sp, r7
 80010b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ba:	4770      	bx	lr

080010bc <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>:
   *
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80010bc:	b480      	push	{r7}
 80010be:	b083      	sub	sp, #12
 80010c0:	af00      	add	r7, sp, #0
 80010c2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80010c4:	687b      	ldr	r3, [r7, #4]
 80010c6:	4618      	mov	r0, r3
 80010c8:	370c      	adds	r7, #12
 80010ca:	46bd      	mov	sp, r7
 80010cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010d0:	4770      	bx	lr

080010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>:
   *
   *  @tparam _T1  Type of first object.
   *  @tparam _T2  Type of second object.
   */
  template<typename _T1, typename _T2>
    struct pair
 80010d2:	b580      	push	{r7, lr}
 80010d4:	b082      	sub	sp, #8
 80010d6:	af00      	add	r7, sp, #0
 80010d8:	6078      	str	r0, [r7, #4]
 80010da:	687b      	ldr	r3, [r7, #4]
 80010dc:	4618      	mov	r0, r3
 80010de:	f021 ff8a 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80010e2:	687b      	ldr	r3, [r7, #4]
 80010e4:	4618      	mov	r0, r3
 80010e6:	3708      	adds	r7, #8
 80010e8:	46bd      	mov	sp, r7
 80010ea:	bd80      	pop	{r7, pc}

080010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
 80010ec:	b5b0      	push	{r4, r5, r7, lr}
 80010ee:	b086      	sub	sp, #24
 80010f0:	af00      	add	r7, sp, #0
 80010f2:	60f8      	str	r0, [r7, #12]
 80010f4:	60b9      	str	r1, [r7, #8]
 80010f6:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80010f8:	68fc      	ldr	r4, [r7, #12]
 80010fa:	68b8      	ldr	r0, [r7, #8]
 80010fc:	f000 f93a 	bl	8001374 <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 8001100:	4605      	mov	r5, r0
 8001102:	f107 0314 	add.w	r3, r7, #20
 8001106:	4618      	mov	r0, r3
 8001108:	f021 fdaf 	bl	8022c6a <_ZNSaIcEC1Ev>
 800110c:	f107 0314 	add.w	r3, r7, #20
 8001110:	461a      	mov	r2, r3
 8001112:	4629      	mov	r1, r5
 8001114:	4620      	mov	r0, r4
 8001116:	f000 f938 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800111a:	f107 0314 	add.w	r3, r7, #20
 800111e:	4618      	mov	r0, r3
 8001120:	f021 fda4 	bl	8022c6c <_ZNSaIcED1Ev>
 8001124:	6878      	ldr	r0, [r7, #4]
 8001126:	f7ff ffc9 	bl	80010bc <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 800112a:	4603      	mov	r3, r0
 800112c:	781a      	ldrb	r2, [r3, #0]
 800112e:	68fb      	ldr	r3, [r7, #12]
 8001130:	761a      	strb	r2, [r3, #24]
 8001132:	68fb      	ldr	r3, [r7, #12]
 8001134:	4618      	mov	r0, r3
 8001136:	3718      	adds	r7, #24
 8001138:	46bd      	mov	sp, r7
 800113a:	bdb0      	pop	{r4, r5, r7, pc}

0800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 800113c:	b5b0      	push	{r4, r5, r7, lr}
 800113e:	b086      	sub	sp, #24
 8001140:	af00      	add	r7, sp, #0
 8001142:	60f8      	str	r0, [r7, #12]
 8001144:	60b9      	str	r1, [r7, #8]
 8001146:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001148:	68fc      	ldr	r4, [r7, #12]
 800114a:	68b8      	ldr	r0, [r7, #8]
 800114c:	f000 f943 	bl	80013d6 <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 8001150:	4605      	mov	r5, r0
 8001152:	f107 0314 	add.w	r3, r7, #20
 8001156:	4618      	mov	r0, r3
 8001158:	f021 fd87 	bl	8022c6a <_ZNSaIcEC1Ev>
 800115c:	f107 0314 	add.w	r3, r7, #20
 8001160:	461a      	mov	r2, r3
 8001162:	4629      	mov	r1, r5
 8001164:	4620      	mov	r0, r4
 8001166:	f000 f910 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800116a:	f107 0314 	add.w	r3, r7, #20
 800116e:	4618      	mov	r0, r3
 8001170:	f021 fd7c 	bl	8022c6c <_ZNSaIcED1Ev>
 8001174:	6878      	ldr	r0, [r7, #4]
 8001176:	f7ff ffa1 	bl	80010bc <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 800117a:	4603      	mov	r3, r0
 800117c:	781a      	ldrb	r2, [r3, #0]
 800117e:	68fb      	ldr	r3, [r7, #12]
 8001180:	761a      	strb	r2, [r3, #24]
 8001182:	68fb      	ldr	r3, [r7, #12]
 8001184:	4618      	mov	r0, r3
 8001186:	3718      	adds	r7, #24
 8001188:	46bd      	mov	sp, r7
 800118a:	bdb0      	pop	{r4, r5, r7, pc}

0800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 800118c:	b5b0      	push	{r4, r5, r7, lr}
 800118e:	b086      	sub	sp, #24
 8001190:	af00      	add	r7, sp, #0
 8001192:	60f8      	str	r0, [r7, #12]
 8001194:	60b9      	str	r1, [r7, #8]
 8001196:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001198:	68fc      	ldr	r4, [r7, #12]
 800119a:	68b8      	ldr	r0, [r7, #8]
 800119c:	f000 f926 	bl	80013ec <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80011a0:	4605      	mov	r5, r0
 80011a2:	f107 0314 	add.w	r3, r7, #20
 80011a6:	4618      	mov	r0, r3
 80011a8:	f021 fd5f 	bl	8022c6a <_ZNSaIcEC1Ev>
 80011ac:	f107 0314 	add.w	r3, r7, #20
 80011b0:	461a      	mov	r2, r3
 80011b2:	4629      	mov	r1, r5
 80011b4:	4620      	mov	r0, r4
 80011b6:	f000 f8e8 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80011ba:	f107 0314 	add.w	r3, r7, #20
 80011be:	4618      	mov	r0, r3
 80011c0:	f021 fd54 	bl	8022c6c <_ZNSaIcED1Ev>
 80011c4:	6878      	ldr	r0, [r7, #4]
 80011c6:	f7ff ff79 	bl	80010bc <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 80011ca:	4603      	mov	r3, r0
 80011cc:	781a      	ldrb	r2, [r3, #0]
 80011ce:	68fb      	ldr	r3, [r7, #12]
 80011d0:	761a      	strb	r2, [r3, #24]
 80011d2:	68fb      	ldr	r3, [r7, #12]
 80011d4:	4618      	mov	r0, r3
 80011d6:	3718      	adds	r7, #24
 80011d8:	46bd      	mov	sp, r7
 80011da:	bdb0      	pop	{r4, r5, r7, pc}

080011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80011dc:	b5b0      	push	{r4, r5, r7, lr}
 80011de:	b086      	sub	sp, #24
 80011e0:	af00      	add	r7, sp, #0
 80011e2:	60f8      	str	r0, [r7, #12]
 80011e4:	60b9      	str	r1, [r7, #8]
 80011e6:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80011e8:	68fc      	ldr	r4, [r7, #12]
 80011ea:	68b8      	ldr	r0, [r7, #8]
 80011ec:	f000 f909 	bl	8001402 <_ZSt7forwardIRA3_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80011f0:	4605      	mov	r5, r0
 80011f2:	f107 0314 	add.w	r3, r7, #20
 80011f6:	4618      	mov	r0, r3
 80011f8:	f021 fd37 	bl	8022c6a <_ZNSaIcEC1Ev>
 80011fc:	f107 0314 	add.w	r3, r7, #20
 8001200:	461a      	mov	r2, r3
 8001202:	4629      	mov	r1, r5
 8001204:	4620      	mov	r0, r4
 8001206:	f000 f8c0 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800120a:	f107 0314 	add.w	r3, r7, #20
 800120e:	4618      	mov	r0, r3
 8001210:	f021 fd2c 	bl	8022c6c <_ZNSaIcED1Ev>
 8001214:	6878      	ldr	r0, [r7, #4]
 8001216:	f7ff ff51 	bl	80010bc <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 800121a:	4603      	mov	r3, r0
 800121c:	781a      	ldrb	r2, [r3, #0]
 800121e:	68fb      	ldr	r3, [r7, #12]
 8001220:	761a      	strb	r2, [r3, #24]
 8001222:	68fb      	ldr	r3, [r7, #12]
 8001224:	4618      	mov	r0, r3
 8001226:	3718      	adds	r7, #24
 8001228:	46bd      	mov	sp, r7
 800122a:	bdb0      	pop	{r4, r5, r7, pc}

0800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 800122c:	b5b0      	push	{r4, r5, r7, lr}
 800122e:	b086      	sub	sp, #24
 8001230:	af00      	add	r7, sp, #0
 8001232:	60f8      	str	r0, [r7, #12]
 8001234:	60b9      	str	r1, [r7, #8]
 8001236:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001238:	68fc      	ldr	r4, [r7, #12]
 800123a:	68b8      	ldr	r0, [r7, #8]
 800123c:	f000 f8ec 	bl	8001418 <_ZSt7forwardIRA4_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 8001240:	4605      	mov	r5, r0
 8001242:	f107 0314 	add.w	r3, r7, #20
 8001246:	4618      	mov	r0, r3
 8001248:	f021 fd0f 	bl	8022c6a <_ZNSaIcEC1Ev>
 800124c:	f107 0314 	add.w	r3, r7, #20
 8001250:	461a      	mov	r2, r3
 8001252:	4629      	mov	r1, r5
 8001254:	4620      	mov	r0, r4
 8001256:	f000 f898 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800125a:	f107 0314 	add.w	r3, r7, #20
 800125e:	4618      	mov	r0, r3
 8001260:	f021 fd04 	bl	8022c6c <_ZNSaIcED1Ev>
 8001264:	6878      	ldr	r0, [r7, #4]
 8001266:	f7ff ff29 	bl	80010bc <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 800126a:	4603      	mov	r3, r0
 800126c:	781a      	ldrb	r2, [r3, #0]
 800126e:	68fb      	ldr	r3, [r7, #12]
 8001270:	761a      	strb	r2, [r3, #24]
 8001272:	68fb      	ldr	r3, [r7, #12]
 8001274:	4618      	mov	r0, r3
 8001276:	3718      	adds	r7, #24
 8001278:	46bd      	mov	sp, r7
 800127a:	bdb0      	pop	{r4, r5, r7, pc}

0800127c <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
 800127c:	b480      	push	{r7}
 800127e:	b083      	sub	sp, #12
 8001280:	af00      	add	r7, sp, #0
 8001282:	6078      	str	r0, [r7, #4]
 8001284:	6039      	str	r1, [r7, #0]
      { return __c1 == __c2; }
 8001286:	687b      	ldr	r3, [r7, #4]
 8001288:	781a      	ldrb	r2, [r3, #0]
 800128a:	683b      	ldr	r3, [r7, #0]
 800128c:	781b      	ldrb	r3, [r3, #0]
 800128e:	429a      	cmp	r2, r3
 8001290:	bf0c      	ite	eq
 8001292:	2301      	moveq	r3, #1
 8001294:	2300      	movne	r3, #0
 8001296:	b2db      	uxtb	r3, r3
 8001298:	4618      	mov	r0, r3
 800129a:	370c      	adds	r7, #12
 800129c:	46bd      	mov	sp, r7
 800129e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012a2:	4770      	bx	lr

080012a4 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
 80012a4:	b580      	push	{r7, lr}
 80012a6:	b084      	sub	sp, #16
 80012a8:	af00      	add	r7, sp, #0
 80012aa:	6078      	str	r0, [r7, #4]
      std::size_t __i = 0;
 80012ac:	2300      	movs	r3, #0
 80012ae:	60fb      	str	r3, [r7, #12]
      while (!eq(__p[__i], char_type()))
 80012b0:	687a      	ldr	r2, [r7, #4]
 80012b2:	68fb      	ldr	r3, [r7, #12]
 80012b4:	4413      	add	r3, r2
 80012b6:	2200      	movs	r2, #0
 80012b8:	72fa      	strb	r2, [r7, #11]
 80012ba:	f107 020b 	add.w	r2, r7, #11
 80012be:	4611      	mov	r1, r2
 80012c0:	4618      	mov	r0, r3
 80012c2:	f7ff ffdb 	bl	800127c <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
 80012c6:	4603      	mov	r3, r0
 80012c8:	f083 0301 	eor.w	r3, r3, #1
 80012cc:	b2db      	uxtb	r3, r3
 80012ce:	2b00      	cmp	r3, #0
 80012d0:	d003      	beq.n	80012da <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x36>
        ++__i;
 80012d2:	68fb      	ldr	r3, [r7, #12]
 80012d4:	3301      	adds	r3, #1
 80012d6:	60fb      	str	r3, [r7, #12]
      while (!eq(__p[__i], char_type()))
 80012d8:	e7ea      	b.n	80012b0 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0xc>
      return __i;
 80012da:	68fb      	ldr	r3, [r7, #12]
    }
 80012dc:	4618      	mov	r0, r3
 80012de:	3710      	adds	r7, #16
 80012e0:	46bd      	mov	sp, r7
 80012e2:	bd80      	pop	{r7, pc}

080012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
 80012e4:	b580      	push	{r7, lr}
 80012e6:	b082      	sub	sp, #8
 80012e8:	af00      	add	r7, sp, #0
 80012ea:	6078      	str	r0, [r7, #4]
 80012ec:	6878      	ldr	r0, [r7, #4]
 80012ee:	f000 f93d 	bl	800156c <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1Ev>
 80012f2:	687b      	ldr	r3, [r7, #4]
 80012f4:	4618      	mov	r0, r3
 80012f6:	3708      	adds	r7, #8
 80012f8:	46bd      	mov	sp, r7
 80012fa:	bd80      	pop	{r7, pc}

080012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

      ~allocator() _GLIBCXX_NOTHROW { }
 80012fc:	b580      	push	{r7, lr}
 80012fe:	b082      	sub	sp, #8
 8001300:	af00      	add	r7, sp, #0
 8001302:	6078      	str	r0, [r7, #4]
 8001304:	6878      	ldr	r0, [r7, #4]
 8001306:	f000 f93c 	bl	8001582 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEED1Ev>
 800130a:	687b      	ldr	r3, [r7, #4]
 800130c:	4618      	mov	r0, r3
 800130e:	3708      	adds	r7, #8
 8001310:	46bd      	mov	sp, r7
 8001312:	bd80      	pop	{r7, pc}

08001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>:
       *  Create a %map consisting of copies of the elements in the
       *  initializer_list @a __l.
       *  This is linear in N if the range is already sorted, and NlogN
       *  otherwise (where N is @a __l.size()).
       */
      map(initializer_list<value_type> __l,
 8001314:	b5b0      	push	{r4, r5, r7, lr}
 8001316:	b086      	sub	sp, #24
 8001318:	af00      	add	r7, sp, #0
 800131a:	60f8      	str	r0, [r7, #12]
 800131c:	1d38      	adds	r0, r7, #4
 800131e:	e880 0006 	stmia.w	r0, {r1, r2}
 8001322:	603b      	str	r3, [r7, #0]
	  const _Compare& __comp = _Compare(),
	  const allocator_type& __a = allocator_type())
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001324:	68fc      	ldr	r4, [r7, #12]
 8001326:	f107 0314 	add.w	r3, r7, #20
 800132a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800132c:	4618      	mov	r0, r3
 800132e:	f000 f933 	bl	8001598 <_ZNSaISt4pairIKc10token_typeEEC1ERKS3_>
 8001332:	f107 0314 	add.w	r3, r7, #20
 8001336:	461a      	mov	r2, r3
 8001338:	6839      	ldr	r1, [r7, #0]
 800133a:	4620      	mov	r0, r4
 800133c:	f000 f946 	bl	80015cc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>
 8001340:	f107 0314 	add.w	r3, r7, #20
 8001344:	4618      	mov	r0, r3
 8001346:	f7ff ffd9 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 800134a:	68fc      	ldr	r4, [r7, #12]
 800134c:	1d3b      	adds	r3, r7, #4
 800134e:	4618      	mov	r0, r3
 8001350:	f000 f96f 	bl	8001632 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>
 8001354:	4605      	mov	r5, r0
 8001356:	1d3b      	adds	r3, r7, #4
 8001358:	4618      	mov	r0, r3
 800135a:	f000 f976 	bl	800164a <_ZNKSt16initializer_listISt4pairIKc10token_typeEE3endEv>
 800135e:	4603      	mov	r3, r0
 8001360:	461a      	mov	r2, r3
 8001362:	4629      	mov	r1, r5
 8001364:	4620      	mov	r0, r4
 8001366:	f000 f982 	bl	800166e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>
 800136a:	68fb      	ldr	r3, [r7, #12]
 800136c:	4618      	mov	r0, r3
 800136e:	3718      	adds	r7, #24
 8001370:	46bd      	mov	sp, r7
 8001372:	bdb0      	pop	{r4, r5, r7, pc}

08001374 <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001374:	b480      	push	{r7}
 8001376:	b083      	sub	sp, #12
 8001378:	af00      	add	r7, sp, #0
 800137a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800137c:	687b      	ldr	r3, [r7, #4]
 800137e:	4618      	mov	r0, r3
 8001380:	370c      	adds	r7, #12
 8001382:	46bd      	mov	sp, r7
 8001384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001388:	4770      	bx	lr

0800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
#if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 800138a:	b590      	push	{r4, r7, lr}
 800138c:	b085      	sub	sp, #20
 800138e:	af00      	add	r7, sp, #0
 8001390:	60f8      	str	r0, [r7, #12]
 8001392:	60b9      	str	r1, [r7, #8]
 8001394:	607a      	str	r2, [r7, #4]
      : _M_dataplus(_M_local_data(), __a)
 8001396:	68fc      	ldr	r4, [r7, #12]
 8001398:	68f8      	ldr	r0, [r7, #12]
 800139a:	f021 fd36 	bl	8022e0a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
 800139e:	4603      	mov	r3, r0
 80013a0:	687a      	ldr	r2, [r7, #4]
 80013a2:	4619      	mov	r1, r3
 80013a4:	4620      	mov	r0, r4
 80013a6:	f021 ff31 	bl	802320c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
      { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 80013aa:	68bb      	ldr	r3, [r7, #8]
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	d006      	beq.n	80013be <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x34>
 80013b0:	68b8      	ldr	r0, [r7, #8]
 80013b2:	f7ff fe3b 	bl	800102c <_ZNSt11char_traitsIcE6lengthEPKc>
 80013b6:	4602      	mov	r2, r0
 80013b8:	68bb      	ldr	r3, [r7, #8]
 80013ba:	4413      	add	r3, r2
 80013bc:	e001      	b.n	80013c2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x38>
 80013be:	68bb      	ldr	r3, [r7, #8]
 80013c0:	3b01      	subs	r3, #1
 80013c2:	461a      	mov	r2, r3
 80013c4:	68b9      	ldr	r1, [r7, #8]
 80013c6:	68f8      	ldr	r0, [r7, #12]
 80013c8:	f000 f8c1 	bl	800154e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>
 80013cc:	68fb      	ldr	r3, [r7, #12]
 80013ce:	4618      	mov	r0, r3
 80013d0:	3714      	adds	r7, #20
 80013d2:	46bd      	mov	sp, r7
 80013d4:	bd90      	pop	{r4, r7, pc}

080013d6 <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80013d6:	b480      	push	{r7}
 80013d8:	b083      	sub	sp, #12
 80013da:	af00      	add	r7, sp, #0
 80013dc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	4618      	mov	r0, r3
 80013e2:	370c      	adds	r7, #12
 80013e4:	46bd      	mov	sp, r7
 80013e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013ea:	4770      	bx	lr

080013ec <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80013ec:	b480      	push	{r7}
 80013ee:	b083      	sub	sp, #12
 80013f0:	af00      	add	r7, sp, #0
 80013f2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80013f4:	687b      	ldr	r3, [r7, #4]
 80013f6:	4618      	mov	r0, r3
 80013f8:	370c      	adds	r7, #12
 80013fa:	46bd      	mov	sp, r7
 80013fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001400:	4770      	bx	lr

08001402 <_ZSt7forwardIRA3_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001402:	b480      	push	{r7}
 8001404:	b083      	sub	sp, #12
 8001406:	af00      	add	r7, sp, #0
 8001408:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800140a:	687b      	ldr	r3, [r7, #4]
 800140c:	4618      	mov	r0, r3
 800140e:	370c      	adds	r7, #12
 8001410:	46bd      	mov	sp, r7
 8001412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001416:	4770      	bx	lr

08001418 <_ZSt7forwardIRA4_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001418:	b480      	push	{r7}
 800141a:	b083      	sub	sp, #12
 800141c:	af00      	add	r7, sp, #0
 800141e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001420:	687b      	ldr	r3, [r7, #4]
 8001422:	4618      	mov	r0, r3
 8001424:	370c      	adds	r7, #12
 8001426:	46bd      	mov	sp, r7
 8001428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800142c:	4770      	bx	lr

0800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 800142e:	b580      	push	{r7, lr}
 8001430:	b082      	sub	sp, #8
 8001432:	af00      	add	r7, sp, #0
 8001434:	6078      	str	r0, [r7, #4]
 8001436:	6878      	ldr	r0, [r7, #4]
 8001438:	f000 f945 	bl	80016c6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800143c:	687b      	ldr	r3, [r7, #4]
 800143e:	4618      	mov	r0, r3
 8001440:	3708      	adds	r7, #8
 8001442:	46bd      	mov	sp, r7
 8001444:	bd80      	pop	{r7, pc}

08001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001446:	b580      	push	{r7, lr}
 8001448:	b082      	sub	sp, #8
 800144a:	af00      	add	r7, sp, #0
 800144c:	6078      	str	r0, [r7, #4]
 800144e:	6878      	ldr	r0, [r7, #4]
 8001450:	f000 f944 	bl	80016dc <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8001454:	687b      	ldr	r3, [r7, #4]
 8001456:	4618      	mov	r0, r3
 8001458:	3708      	adds	r7, #8
 800145a:	46bd      	mov	sp, r7
 800145c:	bd80      	pop	{r7, pc}

0800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>:
      map(initializer_list<value_type> __l,
 800145e:	b5b0      	push	{r4, r5, r7, lr}
 8001460:	b086      	sub	sp, #24
 8001462:	af00      	add	r7, sp, #0
 8001464:	60f8      	str	r0, [r7, #12]
 8001466:	1d38      	adds	r0, r7, #4
 8001468:	e880 0006 	stmia.w	r0, {r1, r2}
 800146c:	603b      	str	r3, [r7, #0]
      : _M_t(__comp, _Pair_alloc_type(__a))
 800146e:	68fc      	ldr	r4, [r7, #12]
 8001470:	f107 0314 	add.w	r3, r7, #20
 8001474:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001476:	4618      	mov	r0, r3
 8001478:	f000 f93b 	bl	80016f2 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKS9_>
 800147c:	f107 0314 	add.w	r3, r7, #20
 8001480:	461a      	mov	r2, r3
 8001482:	6839      	ldr	r1, [r7, #0]
 8001484:	4620      	mov	r0, r4
 8001486:	f000 f94e 	bl	8001726 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1ERKSD_RKSE_>
 800148a:	f107 0314 	add.w	r3, r7, #20
 800148e:	4618      	mov	r0, r3
 8001490:	f7ff ffd9 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001494:	68fc      	ldr	r4, [r7, #12]
 8001496:	1d3b      	adds	r3, r7, #4
 8001498:	4618      	mov	r0, r3
 800149a:	f000 f977 	bl	800178c <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>
 800149e:	4605      	mov	r5, r0
 80014a0:	1d3b      	adds	r3, r7, #4
 80014a2:	4618      	mov	r0, r3
 80014a4:	f000 f97e 	bl	80017a4 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE3endEv>
 80014a8:	4603      	mov	r3, r0
 80014aa:	461a      	mov	r2, r3
 80014ac:	4629      	mov	r1, r5
 80014ae:	4620      	mov	r0, r4
 80014b0:	f000 f98d 	bl	80017ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_>
 80014b4:	68fb      	ldr	r3, [r7, #12]
 80014b6:	4618      	mov	r0, r3
 80014b8:	3718      	adds	r7, #24
 80014ba:	46bd      	mov	sp, r7
 80014bc:	bdb0      	pop	{r4, r5, r7, pc}

080014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 80014be:	b580      	push	{r7, lr}
 80014c0:	b082      	sub	sp, #8
 80014c2:	af00      	add	r7, sp, #0
 80014c4:	6078      	str	r0, [r7, #4]
 80014c6:	6878      	ldr	r0, [r7, #4]
 80014c8:	f000 f9ad 	bl	8001826 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1Ev>
 80014cc:	687b      	ldr	r3, [r7, #4]
 80014ce:	4618      	mov	r0, r3
 80014d0:	3708      	adds	r7, #8
 80014d2:	46bd      	mov	sp, r7
 80014d4:	bd80      	pop	{r7, pc}

080014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 80014d6:	b580      	push	{r7, lr}
 80014d8:	b082      	sub	sp, #8
 80014da:	af00      	add	r7, sp, #0
 80014dc:	6078      	str	r0, [r7, #4]
 80014de:	6878      	ldr	r0, [r7, #4]
 80014e0:	f000 f9ac 	bl	800183c <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEED1Ev>
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	4618      	mov	r0, r3
 80014e8:	3708      	adds	r7, #8
 80014ea:	46bd      	mov	sp, r7
 80014ec:	bd80      	pop	{r7, pc}

080014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>:
      map(initializer_list<value_type> __l,
 80014ee:	b5b0      	push	{r4, r5, r7, lr}
 80014f0:	b086      	sub	sp, #24
 80014f2:	af00      	add	r7, sp, #0
 80014f4:	60f8      	str	r0, [r7, #12]
 80014f6:	1d38      	adds	r0, r7, #4
 80014f8:	e880 0006 	stmia.w	r0, {r1, r2}
 80014fc:	603b      	str	r3, [r7, #0]
      : _M_t(__comp, _Pair_alloc_type(__a))
 80014fe:	68fc      	ldr	r4, [r7, #12]
 8001500:	f107 0314 	add.w	r3, r7, #20
 8001504:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001506:	4618      	mov	r0, r3
 8001508:	f000 f9a3 	bl	8001852 <_ZNSaISt4pairIKc12double_tokenEEC1ERKS3_>
 800150c:	f107 0314 	add.w	r3, r7, #20
 8001510:	461a      	mov	r2, r3
 8001512:	6839      	ldr	r1, [r7, #0]
 8001514:	4620      	mov	r0, r4
 8001516:	f000 f9b6 	bl	8001886 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>
 800151a:	f107 0314 	add.w	r3, r7, #20
 800151e:	4618      	mov	r0, r3
 8001520:	f7ff ffd9 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001524:	68fc      	ldr	r4, [r7, #12]
 8001526:	1d3b      	adds	r3, r7, #4
 8001528:	4618      	mov	r0, r3
 800152a:	f000 f9df 	bl	80018ec <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>
 800152e:	4605      	mov	r5, r0
 8001530:	1d3b      	adds	r3, r7, #4
 8001532:	4618      	mov	r0, r3
 8001534:	f000 f9e6 	bl	8001904 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE3endEv>
 8001538:	4603      	mov	r3, r0
 800153a:	461a      	mov	r2, r3
 800153c:	4629      	mov	r1, r5
 800153e:	4620      	mov	r0, r4
 8001540:	f000 f9f4 	bl	800192c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>
 8001544:	68fb      	ldr	r3, [r7, #12]
 8001546:	4618      	mov	r0, r3
 8001548:	3718      	adds	r7, #24
 800154a:	46bd      	mov	sp, r7
 800154c:	bdb0      	pop	{r4, r5, r7, pc}

0800154e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>:
        _M_construct(_InIterator __beg, _InIterator __end)
 800154e:	b580      	push	{r7, lr}
 8001550:	b084      	sub	sp, #16
 8001552:	af00      	add	r7, sp, #0
 8001554:	60f8      	str	r0, [r7, #12]
 8001556:	60b9      	str	r1, [r7, #8]
 8001558:	607a      	str	r2, [r7, #4]
	  _M_construct_aux(__beg, __end, _Integral());
 800155a:	687a      	ldr	r2, [r7, #4]
 800155c:	68b9      	ldr	r1, [r7, #8]
 800155e:	68f8      	ldr	r0, [r7, #12]
 8001560:	f000 fa10 	bl	8001984 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type>
        }
 8001564:	bf00      	nop
 8001566:	3710      	adds	r7, #16
 8001568:	46bd      	mov	sp, r7
 800156a:	bd80      	pop	{r7, pc}

0800156c <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800156c:	b480      	push	{r7}
 800156e:	b083      	sub	sp, #12
 8001570:	af00      	add	r7, sp, #0
 8001572:	6078      	str	r0, [r7, #4]
 8001574:	687b      	ldr	r3, [r7, #4]
 8001576:	4618      	mov	r0, r3
 8001578:	370c      	adds	r7, #12
 800157a:	46bd      	mov	sp, r7
 800157c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001580:	4770      	bx	lr

08001582 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8001582:	b480      	push	{r7}
 8001584:	b083      	sub	sp, #12
 8001586:	af00      	add	r7, sp, #0
 8001588:	6078      	str	r0, [r7, #4]
 800158a:	687b      	ldr	r3, [r7, #4]
 800158c:	4618      	mov	r0, r3
 800158e:	370c      	adds	r7, #12
 8001590:	46bd      	mov	sp, r7
 8001592:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001596:	4770      	bx	lr

08001598 <_ZNSaISt4pairIKc10token_typeEEC1ERKS3_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8001598:	b580      	push	{r7, lr}
 800159a:	b082      	sub	sp, #8
 800159c:	af00      	add	r7, sp, #0
 800159e:	6078      	str	r0, [r7, #4]
 80015a0:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80015a2:	6839      	ldr	r1, [r7, #0]
 80015a4:	6878      	ldr	r0, [r7, #4]
 80015a6:	f000 f9fe 	bl	80019a6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1ERKS5_>
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	4618      	mov	r0, r3
 80015ae:	3708      	adds	r7, #8
 80015b0:	46bd      	mov	sp, r7
 80015b2:	bd80      	pop	{r7, pc}

080015b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
 80015b4:	b580      	push	{r7, lr}
 80015b6:	b082      	sub	sp, #8
 80015b8:	af00      	add	r7, sp, #0
 80015ba:	6078      	str	r0, [r7, #4]
 80015bc:	6878      	ldr	r0, [r7, #4]
 80015be:	f000 fa0b 	bl	80019d8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 80015c2:	687b      	ldr	r3, [r7, #4]
 80015c4:	4618      	mov	r0, r3
 80015c6:	3708      	adds	r7, #8
 80015c8:	46bd      	mov	sp, r7
 80015ca:	bd80      	pop	{r7, pc}

080015cc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>:
      _Rb_tree() { }
#else
      _Rb_tree() = default;
#endif

      _Rb_tree(const _Compare& __comp,
 80015cc:	b590      	push	{r4, r7, lr}
 80015ce:	b087      	sub	sp, #28
 80015d0:	af00      	add	r7, sp, #0
 80015d2:	60f8      	str	r0, [r7, #12]
 80015d4:	60b9      	str	r1, [r7, #8]
 80015d6:	607a      	str	r2, [r7, #4]
	       const allocator_type& __a = allocator_type())
      : _M_impl(__comp, _Node_allocator(__a)) { }
 80015d8:	68fc      	ldr	r4, [r7, #12]
 80015da:	f107 0314 	add.w	r3, r7, #20
 80015de:	6879      	ldr	r1, [r7, #4]
 80015e0:	4618      	mov	r0, r3
 80015e2:	f000 f9ec 	bl	80019be <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1IS3_EERKSaIT_E>
 80015e6:	f107 0314 	add.w	r3, r7, #20
 80015ea:	461a      	mov	r2, r3
 80015ec:	68b9      	ldr	r1, [r7, #8]
 80015ee:	4620      	mov	r0, r4
 80015f0:	f000 f9fe 	bl	80019f0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>
 80015f4:	f107 0314 	add.w	r3, r7, #20
 80015f8:	4618      	mov	r0, r3
 80015fa:	f000 f9ed 	bl	80019d8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 80015fe:	68fb      	ldr	r3, [r7, #12]
 8001600:	4618      	mov	r0, r3
 8001602:	371c      	adds	r7, #28
 8001604:	46bd      	mov	sp, r7
 8001606:	bd90      	pop	{r4, r7, pc}

08001608 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8001608:	b580      	push	{r7, lr}
 800160a:	b082      	sub	sp, #8
 800160c:	af00      	add	r7, sp, #0
 800160e:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 8001610:	6878      	ldr	r0, [r7, #4]
 8001612:	f000 fa29 	bl	8001a68 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8001616:	4603      	mov	r3, r0
 8001618:	4619      	mov	r1, r3
 800161a:	6878      	ldr	r0, [r7, #4]
 800161c:	f000 fa05 	bl	8001a2a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	4618      	mov	r0, r3
 8001624:	f7ff ffc6 	bl	80015b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	4618      	mov	r0, r3
 800162c:	3708      	adds	r7, #8
 800162e:	46bd      	mov	sp, r7
 8001630:	bd80      	pop	{r7, pc}

08001632 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
 8001632:	b480      	push	{r7}
 8001634:	b083      	sub	sp, #12
 8001636:	af00      	add	r7, sp, #0
 8001638:	6078      	str	r0, [r7, #4]
 800163a:	687b      	ldr	r3, [r7, #4]
 800163c:	681b      	ldr	r3, [r3, #0]
 800163e:	4618      	mov	r0, r3
 8001640:	370c      	adds	r7, #12
 8001642:	46bd      	mov	sp, r7
 8001644:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001648:	4770      	bx	lr

0800164a <_ZNKSt16initializer_listISt4pairIKc10token_typeEE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
 800164a:	b590      	push	{r4, r7, lr}
 800164c:	b083      	sub	sp, #12
 800164e:	af00      	add	r7, sp, #0
 8001650:	6078      	str	r0, [r7, #4]
 8001652:	6878      	ldr	r0, [r7, #4]
 8001654:	f7ff ffed 	bl	8001632 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>
 8001658:	4604      	mov	r4, r0
 800165a:	6878      	ldr	r0, [r7, #4]
 800165c:	f000 fa10 	bl	8001a80 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE4sizeEv>
 8001660:	4603      	mov	r3, r0
 8001662:	005b      	lsls	r3, r3, #1
 8001664:	4423      	add	r3, r4
 8001666:	4618      	mov	r0, r3
 8001668:	370c      	adds	r7, #12
 800166a:	46bd      	mov	sp, r7
 800166c:	bd90      	pop	{r4, r7, pc}

0800166e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>:
	using __same_value_type
	  = is_same<value_type, typename iterator_traits<_Iter>::value_type>;

      template<typename _InputIterator>
	__enable_if_t<__same_value_type<_InputIterator>::value>
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 800166e:	b580      	push	{r7, lr}
 8001670:	b088      	sub	sp, #32
 8001672:	af00      	add	r7, sp, #0
 8001674:	60f8      	str	r0, [r7, #12]
 8001676:	60b9      	str	r1, [r7, #8]
 8001678:	607a      	str	r2, [r7, #4]
	{
	  _Alloc_node __an(*this);
 800167a:	f107 0314 	add.w	r3, r7, #20
 800167e:	68f9      	ldr	r1, [r7, #12]
 8001680:	4618      	mov	r0, r3
 8001682:	f000 fa09 	bl	8001a98 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>
	  for (; __first != __last; ++__first)
 8001686:	68ba      	ldr	r2, [r7, #8]
 8001688:	687b      	ldr	r3, [r7, #4]
 800168a:	429a      	cmp	r2, r3
 800168c:	d017      	beq.n	80016be <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 800168e:	68f8      	ldr	r0, [r7, #12]
 8001690:	f000 fa11 	bl	8001ab6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8001694:	4603      	mov	r3, r0
 8001696:	61fb      	str	r3, [r7, #28]
 8001698:	f107 021c 	add.w	r2, r7, #28
 800169c:	f107 0318 	add.w	r3, r7, #24
 80016a0:	4611      	mov	r1, r2
 80016a2:	4618      	mov	r0, r3
 80016a4:	f000 fa18 	bl	8001ad8 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1ERKSt17_Rb_tree_iteratorIS3_E>
 80016a8:	f107 0314 	add.w	r3, r7, #20
 80016ac:	68ba      	ldr	r2, [r7, #8]
 80016ae:	69b9      	ldr	r1, [r7, #24]
 80016b0:	68f8      	ldr	r0, [r7, #12]
 80016b2:	f000 fa21 	bl	8001af8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>
	  for (; __first != __last; ++__first)
 80016b6:	68bb      	ldr	r3, [r7, #8]
 80016b8:	3302      	adds	r3, #2
 80016ba:	60bb      	str	r3, [r7, #8]
 80016bc:	e7e3      	b.n	8001686 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x18>
	}
 80016be:	bf00      	nop
 80016c0:	3720      	adds	r7, #32
 80016c2:	46bd      	mov	sp, r7
 80016c4:	bd80      	pop	{r7, pc}

080016c6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80016c6:	b480      	push	{r7}
 80016c8:	b083      	sub	sp, #12
 80016ca:	af00      	add	r7, sp, #0
 80016cc:	6078      	str	r0, [r7, #4]
 80016ce:	687b      	ldr	r3, [r7, #4]
 80016d0:	4618      	mov	r0, r3
 80016d2:	370c      	adds	r7, #12
 80016d4:	46bd      	mov	sp, r7
 80016d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016da:	4770      	bx	lr

080016dc <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80016dc:	b480      	push	{r7}
 80016de:	b083      	sub	sp, #12
 80016e0:	af00      	add	r7, sp, #0
 80016e2:	6078      	str	r0, [r7, #4]
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	4618      	mov	r0, r3
 80016e8:	370c      	adds	r7, #12
 80016ea:	46bd      	mov	sp, r7
 80016ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016f0:	4770      	bx	lr

080016f2 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKS9_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80016f2:	b580      	push	{r7, lr}
 80016f4:	b082      	sub	sp, #8
 80016f6:	af00      	add	r7, sp, #0
 80016f8:	6078      	str	r0, [r7, #4]
 80016fa:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80016fc:	6839      	ldr	r1, [r7, #0]
 80016fe:	6878      	ldr	r0, [r7, #4]
 8001700:	f000 fa2d 	bl	8001b5e <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSB_>
 8001704:	687b      	ldr	r3, [r7, #4]
 8001706:	4618      	mov	r0, r3
 8001708:	3708      	adds	r7, #8
 800170a:	46bd      	mov	sp, r7
 800170c:	bd80      	pop	{r7, pc}

0800170e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>:
	struct _Rb_tree_impl
 800170e:	b580      	push	{r7, lr}
 8001710:	b082      	sub	sp, #8
 8001712:	af00      	add	r7, sp, #0
 8001714:	6078      	str	r0, [r7, #4]
 8001716:	6878      	ldr	r0, [r7, #4]
 8001718:	f000 fa3a 	bl	8001b90 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 800171c:	687b      	ldr	r3, [r7, #4]
 800171e:	4618      	mov	r0, r3
 8001720:	3708      	adds	r7, #8
 8001722:	46bd      	mov	sp, r7
 8001724:	bd80      	pop	{r7, pc}

08001726 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1ERKSD_RKSE_>:
      _Rb_tree(const _Compare& __comp,
 8001726:	b590      	push	{r4, r7, lr}
 8001728:	b087      	sub	sp, #28
 800172a:	af00      	add	r7, sp, #0
 800172c:	60f8      	str	r0, [r7, #12]
 800172e:	60b9      	str	r1, [r7, #8]
 8001730:	607a      	str	r2, [r7, #4]
      : _M_impl(__comp, _Node_allocator(__a)) { }
 8001732:	68fc      	ldr	r4, [r7, #12]
 8001734:	f107 0314 	add.w	r3, r7, #20
 8001738:	6879      	ldr	r1, [r7, #4]
 800173a:	4618      	mov	r0, r3
 800173c:	f000 fa1b 	bl	8001b76 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1IS9_EERKSaIT_E>
 8001740:	f107 0314 	add.w	r3, r7, #20
 8001744:	461a      	mov	r2, r3
 8001746:	68b9      	ldr	r1, [r7, #8]
 8001748:	4620      	mov	r0, r4
 800174a:	f000 fa2d 	bl	8001ba8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1ERKSD_OSaISt13_Rb_tree_nodeIS9_EE>
 800174e:	f107 0314 	add.w	r3, r7, #20
 8001752:	4618      	mov	r0, r3
 8001754:	f000 fa1c 	bl	8001b90 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 8001758:	68fb      	ldr	r3, [r7, #12]
 800175a:	4618      	mov	r0, r3
 800175c:	371c      	adds	r7, #28
 800175e:	46bd      	mov	sp, r7
 8001760:	bd90      	pop	{r4, r7, pc}

08001762 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8001762:	b580      	push	{r7, lr}
 8001764:	b082      	sub	sp, #8
 8001766:	af00      	add	r7, sp, #0
 8001768:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 800176a:	6878      	ldr	r0, [r7, #4]
 800176c:	f000 fa58 	bl	8001c20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8001770:	4603      	mov	r3, r0
 8001772:	4619      	mov	r1, r3
 8001774:	6878      	ldr	r0, [r7, #4]
 8001776:	f000 fa34 	bl	8001be2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
 800177a:	687b      	ldr	r3, [r7, #4]
 800177c:	4618      	mov	r0, r3
 800177e:	f7ff ffc6 	bl	800170e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>
 8001782:	687b      	ldr	r3, [r7, #4]
 8001784:	4618      	mov	r0, r3
 8001786:	3708      	adds	r7, #8
 8001788:	46bd      	mov	sp, r7
 800178a:	bd80      	pop	{r7, pc}

0800178c <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>:
      begin() const noexcept { return _M_array; }
 800178c:	b480      	push	{r7}
 800178e:	b083      	sub	sp, #12
 8001790:	af00      	add	r7, sp, #0
 8001792:	6078      	str	r0, [r7, #4]
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	681b      	ldr	r3, [r3, #0]
 8001798:	4618      	mov	r0, r3
 800179a:	370c      	adds	r7, #12
 800179c:	46bd      	mov	sp, r7
 800179e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a2:	4770      	bx	lr

080017a4 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE3endEv>:
      end() const noexcept { return begin() + size(); }
 80017a4:	b590      	push	{r4, r7, lr}
 80017a6:	b083      	sub	sp, #12
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	6078      	str	r0, [r7, #4]
 80017ac:	6878      	ldr	r0, [r7, #4]
 80017ae:	f7ff ffed 	bl	800178c <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>
 80017b2:	4604      	mov	r4, r0
 80017b4:	6878      	ldr	r0, [r7, #4]
 80017b6:	f000 fa3f 	bl	8001c38 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE4sizeEv>
 80017ba:	4602      	mov	r2, r0
 80017bc:	4613      	mov	r3, r2
 80017be:	00db      	lsls	r3, r3, #3
 80017c0:	1a9b      	subs	r3, r3, r2
 80017c2:	009b      	lsls	r3, r3, #2
 80017c4:	4423      	add	r3, r4
 80017c6:	4618      	mov	r0, r3
 80017c8:	370c      	adds	r7, #12
 80017ca:	46bd      	mov	sp, r7
 80017cc:	bd90      	pop	{r4, r7, pc}

080017ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 80017ce:	b580      	push	{r7, lr}
 80017d0:	b088      	sub	sp, #32
 80017d2:	af00      	add	r7, sp, #0
 80017d4:	60f8      	str	r0, [r7, #12]
 80017d6:	60b9      	str	r1, [r7, #8]
 80017d8:	607a      	str	r2, [r7, #4]
	  _Alloc_node __an(*this);
 80017da:	f107 0314 	add.w	r3, r7, #20
 80017de:	68f9      	ldr	r1, [r7, #12]
 80017e0:	4618      	mov	r0, r3
 80017e2:	f000 fa35 	bl	8001c50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>
	  for (; __first != __last; ++__first)
 80017e6:	68ba      	ldr	r2, [r7, #8]
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	429a      	cmp	r2, r3
 80017ec:	d017      	beq.n	800181e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 80017ee:	68f8      	ldr	r0, [r7, #12]
 80017f0:	f000 fa3d 	bl	8001c6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 80017f4:	4603      	mov	r3, r0
 80017f6:	61fb      	str	r3, [r7, #28]
 80017f8:	f107 021c 	add.w	r2, r7, #28
 80017fc:	f107 0318 	add.w	r3, r7, #24
 8001800:	4611      	mov	r1, r2
 8001802:	4618      	mov	r0, r3
 8001804:	f000 fa44 	bl	8001c90 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSt17_Rb_tree_iteratorIS9_E>
 8001808:	f107 0314 	add.w	r3, r7, #20
 800180c:	68ba      	ldr	r2, [r7, #8]
 800180e:	69b9      	ldr	r1, [r7, #24]
 8001810:	68f8      	ldr	r0, [r7, #12]
 8001812:	f000 fa4d 	bl	8001cb0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_>
	  for (; __first != __last; ++__first)
 8001816:	68bb      	ldr	r3, [r7, #8]
 8001818:	331c      	adds	r3, #28
 800181a:	60bb      	str	r3, [r7, #8]
 800181c:	e7e3      	b.n	80017e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_+0x18>
	}
 800181e:	bf00      	nop
 8001820:	3720      	adds	r7, #32
 8001822:	46bd      	mov	sp, r7
 8001824:	bd80      	pop	{r7, pc}

08001826 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8001826:	b480      	push	{r7}
 8001828:	b083      	sub	sp, #12
 800182a:	af00      	add	r7, sp, #0
 800182c:	6078      	str	r0, [r7, #4]
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	4618      	mov	r0, r3
 8001832:	370c      	adds	r7, #12
 8001834:	46bd      	mov	sp, r7
 8001836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800183a:	4770      	bx	lr

0800183c <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800183c:	b480      	push	{r7}
 800183e:	b083      	sub	sp, #12
 8001840:	af00      	add	r7, sp, #0
 8001842:	6078      	str	r0, [r7, #4]
 8001844:	687b      	ldr	r3, [r7, #4]
 8001846:	4618      	mov	r0, r3
 8001848:	370c      	adds	r7, #12
 800184a:	46bd      	mov	sp, r7
 800184c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001850:	4770      	bx	lr

08001852 <_ZNSaISt4pairIKc12double_tokenEEC1ERKS3_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8001852:	b580      	push	{r7, lr}
 8001854:	b082      	sub	sp, #8
 8001856:	af00      	add	r7, sp, #0
 8001858:	6078      	str	r0, [r7, #4]
 800185a:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 800185c:	6839      	ldr	r1, [r7, #0]
 800185e:	6878      	ldr	r0, [r7, #4]
 8001860:	f000 fa59 	bl	8001d16 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1ERKS5_>
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	4618      	mov	r0, r3
 8001868:	3708      	adds	r7, #8
 800186a:	46bd      	mov	sp, r7
 800186c:	bd80      	pop	{r7, pc}

0800186e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>:
	struct _Rb_tree_impl
 800186e:	b580      	push	{r7, lr}
 8001870:	b082      	sub	sp, #8
 8001872:	af00      	add	r7, sp, #0
 8001874:	6078      	str	r0, [r7, #4]
 8001876:	6878      	ldr	r0, [r7, #4]
 8001878:	f000 fa66 	bl	8001d48 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 800187c:	687b      	ldr	r3, [r7, #4]
 800187e:	4618      	mov	r0, r3
 8001880:	3708      	adds	r7, #8
 8001882:	46bd      	mov	sp, r7
 8001884:	bd80      	pop	{r7, pc}

08001886 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>:
      _Rb_tree(const _Compare& __comp,
 8001886:	b590      	push	{r4, r7, lr}
 8001888:	b087      	sub	sp, #28
 800188a:	af00      	add	r7, sp, #0
 800188c:	60f8      	str	r0, [r7, #12]
 800188e:	60b9      	str	r1, [r7, #8]
 8001890:	607a      	str	r2, [r7, #4]
      : _M_impl(__comp, _Node_allocator(__a)) { }
 8001892:	68fc      	ldr	r4, [r7, #12]
 8001894:	f107 0314 	add.w	r3, r7, #20
 8001898:	6879      	ldr	r1, [r7, #4]
 800189a:	4618      	mov	r0, r3
 800189c:	f000 fa47 	bl	8001d2e <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1IS3_EERKSaIT_E>
 80018a0:	f107 0314 	add.w	r3, r7, #20
 80018a4:	461a      	mov	r2, r3
 80018a6:	68b9      	ldr	r1, [r7, #8]
 80018a8:	4620      	mov	r0, r4
 80018aa:	f000 fa59 	bl	8001d60 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>
 80018ae:	f107 0314 	add.w	r3, r7, #20
 80018b2:	4618      	mov	r0, r3
 80018b4:	f000 fa48 	bl	8001d48 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 80018b8:	68fb      	ldr	r3, [r7, #12]
 80018ba:	4618      	mov	r0, r3
 80018bc:	371c      	adds	r7, #28
 80018be:	46bd      	mov	sp, r7
 80018c0:	bd90      	pop	{r4, r7, pc}

080018c2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 80018c2:	b580      	push	{r7, lr}
 80018c4:	b082      	sub	sp, #8
 80018c6:	af00      	add	r7, sp, #0
 80018c8:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 80018ca:	6878      	ldr	r0, [r7, #4]
 80018cc:	f000 fa84 	bl	8001dd8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 80018d0:	4603      	mov	r3, r0
 80018d2:	4619      	mov	r1, r3
 80018d4:	6878      	ldr	r0, [r7, #4]
 80018d6:	f000 fa60 	bl	8001d9a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
 80018da:	687b      	ldr	r3, [r7, #4]
 80018dc:	4618      	mov	r0, r3
 80018de:	f7ff ffc6 	bl	800186e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>
 80018e2:	687b      	ldr	r3, [r7, #4]
 80018e4:	4618      	mov	r0, r3
 80018e6:	3708      	adds	r7, #8
 80018e8:	46bd      	mov	sp, r7
 80018ea:	bd80      	pop	{r7, pc}

080018ec <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>:
      begin() const noexcept { return _M_array; }
 80018ec:	b480      	push	{r7}
 80018ee:	b083      	sub	sp, #12
 80018f0:	af00      	add	r7, sp, #0
 80018f2:	6078      	str	r0, [r7, #4]
 80018f4:	687b      	ldr	r3, [r7, #4]
 80018f6:	681b      	ldr	r3, [r3, #0]
 80018f8:	4618      	mov	r0, r3
 80018fa:	370c      	adds	r7, #12
 80018fc:	46bd      	mov	sp, r7
 80018fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001902:	4770      	bx	lr

08001904 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE3endEv>:
      end() const noexcept { return begin() + size(); }
 8001904:	b590      	push	{r4, r7, lr}
 8001906:	b083      	sub	sp, #12
 8001908:	af00      	add	r7, sp, #0
 800190a:	6078      	str	r0, [r7, #4]
 800190c:	6878      	ldr	r0, [r7, #4]
 800190e:	f7ff ffed 	bl	80018ec <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>
 8001912:	4604      	mov	r4, r0
 8001914:	6878      	ldr	r0, [r7, #4]
 8001916:	f000 fa6b 	bl	8001df0 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE4sizeEv>
 800191a:	4602      	mov	r2, r0
 800191c:	4613      	mov	r3, r2
 800191e:	005b      	lsls	r3, r3, #1
 8001920:	4413      	add	r3, r2
 8001922:	4423      	add	r3, r4
 8001924:	4618      	mov	r0, r3
 8001926:	370c      	adds	r7, #12
 8001928:	46bd      	mov	sp, r7
 800192a:	bd90      	pop	{r4, r7, pc}

0800192c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 800192c:	b580      	push	{r7, lr}
 800192e:	b088      	sub	sp, #32
 8001930:	af00      	add	r7, sp, #0
 8001932:	60f8      	str	r0, [r7, #12]
 8001934:	60b9      	str	r1, [r7, #8]
 8001936:	607a      	str	r2, [r7, #4]
	  _Alloc_node __an(*this);
 8001938:	f107 0314 	add.w	r3, r7, #20
 800193c:	68f9      	ldr	r1, [r7, #12]
 800193e:	4618      	mov	r0, r3
 8001940:	f000 fa62 	bl	8001e08 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>
	  for (; __first != __last; ++__first)
 8001944:	68ba      	ldr	r2, [r7, #8]
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	429a      	cmp	r2, r3
 800194a:	d017      	beq.n	800197c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 800194c:	68f8      	ldr	r0, [r7, #12]
 800194e:	f000 fa6a 	bl	8001e26 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8001952:	4603      	mov	r3, r0
 8001954:	61fb      	str	r3, [r7, #28]
 8001956:	f107 021c 	add.w	r2, r7, #28
 800195a:	f107 0318 	add.w	r3, r7, #24
 800195e:	4611      	mov	r1, r2
 8001960:	4618      	mov	r0, r3
 8001962:	f000 fa71 	bl	8001e48 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1ERKSt17_Rb_tree_iteratorIS3_E>
 8001966:	f107 0314 	add.w	r3, r7, #20
 800196a:	68ba      	ldr	r2, [r7, #8]
 800196c:	69b9      	ldr	r1, [r7, #24]
 800196e:	68f8      	ldr	r0, [r7, #12]
 8001970:	f000 fa7a 	bl	8001e68 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>
	  for (; __first != __last; ++__first)
 8001974:	68bb      	ldr	r3, [r7, #8]
 8001976:	3303      	adds	r3, #3
 8001978:	60bb      	str	r3, [r7, #8]
 800197a:	e7e3      	b.n	8001944 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x18>
	}
 800197c:	bf00      	nop
 800197e:	3720      	adds	r7, #32
 8001980:	46bd      	mov	sp, r7
 8001982:	bd80      	pop	{r7, pc}

08001984 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type>:
        _M_construct_aux(_InIterator __beg, _InIterator __end,
 8001984:	b590      	push	{r4, r7, lr}
 8001986:	b087      	sub	sp, #28
 8001988:	af00      	add	r7, sp, #0
 800198a:	60f8      	str	r0, [r7, #12]
 800198c:	60b9      	str	r1, [r7, #8]
 800198e:	607a      	str	r2, [r7, #4]
 8001990:	703b      	strb	r3, [r7, #0]
          _M_construct(__beg, __end, _Tag());
 8001992:	4623      	mov	r3, r4
 8001994:	687a      	ldr	r2, [r7, #4]
 8001996:	68b9      	ldr	r1, [r7, #8]
 8001998:	68f8      	ldr	r0, [r7, #12]
 800199a:	f000 faad 	bl	8001ef8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
	}
 800199e:	bf00      	nop
 80019a0:	371c      	adds	r7, #28
 80019a2:	46bd      	mov	sp, r7
 80019a4:	bd90      	pop	{r4, r7, pc}

080019a6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1ERKS5_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 80019a6:	b480      	push	{r7}
 80019a8:	b083      	sub	sp, #12
 80019aa:	af00      	add	r7, sp, #0
 80019ac:	6078      	str	r0, [r7, #4]
 80019ae:	6039      	str	r1, [r7, #0]
 80019b0:	687b      	ldr	r3, [r7, #4]
 80019b2:	4618      	mov	r0, r3
 80019b4:	370c      	adds	r7, #12
 80019b6:	46bd      	mov	sp, r7
 80019b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019bc:	4770      	bx	lr

080019be <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1IS3_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 80019be:	b580      	push	{r7, lr}
 80019c0:	b082      	sub	sp, #8
 80019c2:	af00      	add	r7, sp, #0
 80019c4:	6078      	str	r0, [r7, #4]
 80019c6:	6039      	str	r1, [r7, #0]
 80019c8:	6878      	ldr	r0, [r7, #4]
 80019ca:	f000 fadd 	bl	8001f88 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1Ev>
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	4618      	mov	r0, r3
 80019d2:	3708      	adds	r7, #8
 80019d4:	46bd      	mov	sp, r7
 80019d6:	bd80      	pop	{r7, pc}

080019d8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 80019d8:	b580      	push	{r7, lr}
 80019da:	b082      	sub	sp, #8
 80019dc:	af00      	add	r7, sp, #0
 80019de:	6078      	str	r0, [r7, #4]
 80019e0:	6878      	ldr	r0, [r7, #4]
 80019e2:	f000 fadc 	bl	8001f9e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 80019e6:	687b      	ldr	r3, [r7, #4]
 80019e8:	4618      	mov	r0, r3
 80019ea:	3708      	adds	r7, #8
 80019ec:	46bd      	mov	sp, r7
 80019ee:	bd80      	pop	{r7, pc}

080019f0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 80019f0:	b580      	push	{r7, lr}
 80019f2:	b084      	sub	sp, #16
 80019f4:	af00      	add	r7, sp, #0
 80019f6:	60f8      	str	r0, [r7, #12]
 80019f8:	60b9      	str	r1, [r7, #8]
 80019fa:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 80019fc:	6878      	ldr	r0, [r7, #4]
 80019fe:	f000 fad9 	bl	8001fb4 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEEONSt16remove_referenceIT_E4typeEOS9_>
 8001a02:	4603      	mov	r3, r0
 8001a04:	4619      	mov	r1, r3
 8001a06:	68f8      	ldr	r0, [r7, #12]
 8001a08:	f000 fadf 	bl	8001fca <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS5_>
 8001a0c:	68fb      	ldr	r3, [r7, #12]
 8001a0e:	68b9      	ldr	r1, [r7, #8]
 8001a10:	4618      	mov	r0, r3
 8001a12:	f000 fae8 	bl	8001fe6 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>
 8001a16:	68fb      	ldr	r3, [r7, #12]
 8001a18:	3304      	adds	r3, #4
 8001a1a:	4618      	mov	r0, r3
 8001a1c:	f7ff fb29 	bl	8001072 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8001a20:	68fb      	ldr	r3, [r7, #12]
 8001a22:	4618      	mov	r0, r3
 8001a24:	3710      	adds	r7, #16
 8001a26:	46bd      	mov	sp, r7
 8001a28:	bd80      	pop	{r7, pc}

08001a2a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8001a2a:	b580      	push	{r7, lr}
 8001a2c:	b084      	sub	sp, #16
 8001a2e:	af00      	add	r7, sp, #0
 8001a30:	6078      	str	r0, [r7, #4]
 8001a32:	6039      	str	r1, [r7, #0]
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
 8001a34:	683b      	ldr	r3, [r7, #0]
 8001a36:	2b00      	cmp	r3, #0
 8001a38:	d012      	beq.n	8001a60 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x36>
	{
	  _M_erase(_S_right(__x));
 8001a3a:	6838      	ldr	r0, [r7, #0]
 8001a3c:	f000 fadf 	bl	8001ffe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8001a40:	4603      	mov	r3, r0
 8001a42:	4619      	mov	r1, r3
 8001a44:	6878      	ldr	r0, [r7, #4]
 8001a46:	f7ff fff0 	bl	8001a2a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
	  _Link_type __y = _S_left(__x);
 8001a4a:	6838      	ldr	r0, [r7, #0]
 8001a4c:	f000 fae3 	bl	8002016 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8001a50:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8001a52:	6839      	ldr	r1, [r7, #0]
 8001a54:	6878      	ldr	r0, [r7, #4]
 8001a56:	f000 faea 	bl	800202e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>
	  __x = __y;
 8001a5a:	68fb      	ldr	r3, [r7, #12]
 8001a5c:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8001a5e:	e7e9      	b.n	8001a34 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0xa>
	}
    }
 8001a60:	bf00      	nop
 8001a62:	3710      	adds	r7, #16
 8001a64:	46bd      	mov	sp, r7
 8001a66:	bd80      	pop	{r7, pc}

08001a68 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8001a68:	b480      	push	{r7}
 8001a6a:	b083      	sub	sp, #12
 8001a6c:	af00      	add	r7, sp, #0
 8001a6e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8001a70:	687b      	ldr	r3, [r7, #4]
 8001a72:	689b      	ldr	r3, [r3, #8]
 8001a74:	4618      	mov	r0, r3
 8001a76:	370c      	adds	r7, #12
 8001a78:	46bd      	mov	sp, r7
 8001a7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a7e:	4770      	bx	lr

08001a80 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE4sizeEv>:
      size() const noexcept { return _M_len; }
 8001a80:	b480      	push	{r7}
 8001a82:	b083      	sub	sp, #12
 8001a84:	af00      	add	r7, sp, #0
 8001a86:	6078      	str	r0, [r7, #4]
 8001a88:	687b      	ldr	r3, [r7, #4]
 8001a8a:	685b      	ldr	r3, [r3, #4]
 8001a8c:	4618      	mov	r0, r3
 8001a8e:	370c      	adds	r7, #12
 8001a90:	46bd      	mov	sp, r7
 8001a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a96:	4770      	bx	lr

08001a98 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>:
	_Alloc_node(_Rb_tree& __t)
 8001a98:	b480      	push	{r7}
 8001a9a:	b083      	sub	sp, #12
 8001a9c:	af00      	add	r7, sp, #0
 8001a9e:	6078      	str	r0, [r7, #4]
 8001aa0:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 8001aa2:	687b      	ldr	r3, [r7, #4]
 8001aa4:	683a      	ldr	r2, [r7, #0]
 8001aa6:	601a      	str	r2, [r3, #0]
 8001aa8:	687b      	ldr	r3, [r7, #4]
 8001aaa:	4618      	mov	r0, r3
 8001aac:	370c      	adds	r7, #12
 8001aae:	46bd      	mov	sp, r7
 8001ab0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ab4:	4770      	bx	lr

08001ab6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8001ab6:	b580      	push	{r7, lr}
 8001ab8:	b084      	sub	sp, #16
 8001aba:	af00      	add	r7, sp, #0
 8001abc:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8001abe:	687b      	ldr	r3, [r7, #4]
 8001ac0:	1d1a      	adds	r2, r3, #4
 8001ac2:	f107 030c 	add.w	r3, r7, #12
 8001ac6:	4611      	mov	r1, r2
 8001ac8:	4618      	mov	r0, r3
 8001aca:	f000 fac1 	bl	8002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8001ace:	68fb      	ldr	r3, [r7, #12]
 8001ad0:	4618      	mov	r0, r3
 8001ad2:	3710      	adds	r7, #16
 8001ad4:	46bd      	mov	sp, r7
 8001ad6:	bd80      	pop	{r7, pc}

08001ad8 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1ERKSt17_Rb_tree_iteratorIS3_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8001ad8:	b480      	push	{r7}
 8001ada:	b083      	sub	sp, #12
 8001adc:	af00      	add	r7, sp, #0
 8001ade:	6078      	str	r0, [r7, #4]
 8001ae0:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8001ae2:	683b      	ldr	r3, [r7, #0]
 8001ae4:	681a      	ldr	r2, [r3, #0]
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	601a      	str	r2, [r3, #0]
 8001aea:	687b      	ldr	r3, [r7, #4]
 8001aec:	4618      	mov	r0, r3
 8001aee:	370c      	adds	r7, #12
 8001af0:	46bd      	mov	sp, r7
 8001af2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001af6:	4770      	bx	lr

08001af8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>:
    template<typename _Arg, typename _NodeGen>
#else
    template<typename _NodeGen>
#endif
      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8001af8:	b5b0      	push	{r4, r5, r7, lr}
 8001afa:	b08a      	sub	sp, #40	; 0x28
 8001afc:	af02      	add	r7, sp, #8
 8001afe:	60f8      	str	r0, [r7, #12]
 8001b00:	60b9      	str	r1, [r7, #8]
 8001b02:	607a      	str	r2, [r7, #4]
 8001b04:	603b      	str	r3, [r7, #0]
			const _Val& __v,
#endif
			_NodeGen& __node_gen)
    {
      pair<_Base_ptr, _Base_ptr> __res
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 8001b06:	f107 0318 	add.w	r3, r7, #24
 8001b0a:	6879      	ldr	r1, [r7, #4]
 8001b0c:	4618      	mov	r0, r3
 8001b0e:	f000 fbd1 	bl	80022b4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 8001b12:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 8001b14:	f107 0010 	add.w	r0, r7, #16
 8001b18:	68ba      	ldr	r2, [r7, #8]
 8001b1a:	68f9      	ldr	r1, [r7, #12]
 8001b1c:	f000 faa7 	bl	800206e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>

      if (__res.second)
 8001b20:	697b      	ldr	r3, [r7, #20]
 8001b22:	2b00      	cmp	r3, #0
 8001b24:	d00f      	beq.n	8001b46 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x4e>
	return _M_insert_(__res.first, __res.second,
			  _GLIBCXX_FORWARD(_Arg, __v),
			  __node_gen);
 8001b26:	693c      	ldr	r4, [r7, #16]
 8001b28:	697d      	ldr	r5, [r7, #20]
 8001b2a:	6878      	ldr	r0, [r7, #4]
 8001b2c:	f000 fbce 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8001b30:	4602      	mov	r2, r0
 8001b32:	683b      	ldr	r3, [r7, #0]
 8001b34:	9300      	str	r3, [sp, #0]
 8001b36:	4613      	mov	r3, r2
 8001b38:	462a      	mov	r2, r5
 8001b3a:	4621      	mov	r1, r4
 8001b3c:	68f8      	ldr	r0, [r7, #12]
 8001b3e:	f000 fbd0 	bl	80022e2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>
 8001b42:	4603      	mov	r3, r0
 8001b44:	e007      	b.n	8001b56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x5e>
      return iterator(__res.first);
 8001b46:	693a      	ldr	r2, [r7, #16]
 8001b48:	f107 031c 	add.w	r3, r7, #28
 8001b4c:	4611      	mov	r1, r2
 8001b4e:	4618      	mov	r0, r3
 8001b50:	f000 fa7e 	bl	8002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8001b54:	69fb      	ldr	r3, [r7, #28]
    }
 8001b56:	4618      	mov	r0, r3
 8001b58:	3720      	adds	r7, #32
 8001b5a:	46bd      	mov	sp, r7
 8001b5c:	bdb0      	pop	{r4, r5, r7, pc}

08001b5e <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSB_>:
 8001b5e:	b480      	push	{r7}
 8001b60:	b083      	sub	sp, #12
 8001b62:	af00      	add	r7, sp, #0
 8001b64:	6078      	str	r0, [r7, #4]
 8001b66:	6039      	str	r1, [r7, #0]
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	4618      	mov	r0, r3
 8001b6c:	370c      	adds	r7, #12
 8001b6e:	46bd      	mov	sp, r7
 8001b70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b74:	4770      	bx	lr

08001b76 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1IS9_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 8001b76:	b580      	push	{r7, lr}
 8001b78:	b082      	sub	sp, #8
 8001b7a:	af00      	add	r7, sp, #0
 8001b7c:	6078      	str	r0, [r7, #4]
 8001b7e:	6039      	str	r1, [r7, #0]
 8001b80:	6878      	ldr	r0, [r7, #4]
 8001b82:	f000 fbf7 	bl	8002374 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1Ev>
 8001b86:	687b      	ldr	r3, [r7, #4]
 8001b88:	4618      	mov	r0, r3
 8001b8a:	3708      	adds	r7, #8
 8001b8c:	46bd      	mov	sp, r7
 8001b8e:	bd80      	pop	{r7, pc}

08001b90 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001b90:	b580      	push	{r7, lr}
 8001b92:	b082      	sub	sp, #8
 8001b94:	af00      	add	r7, sp, #0
 8001b96:	6078      	str	r0, [r7, #4]
 8001b98:	6878      	ldr	r0, [r7, #4]
 8001b9a:	f000 fbf6 	bl	800238a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 8001b9e:	687b      	ldr	r3, [r7, #4]
 8001ba0:	4618      	mov	r0, r3
 8001ba2:	3708      	adds	r7, #8
 8001ba4:	46bd      	mov	sp, r7
 8001ba6:	bd80      	pop	{r7, pc}

08001ba8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1ERKSD_OSaISt13_Rb_tree_nodeIS9_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 8001ba8:	b580      	push	{r7, lr}
 8001baa:	b084      	sub	sp, #16
 8001bac:	af00      	add	r7, sp, #0
 8001bae:	60f8      	str	r0, [r7, #12]
 8001bb0:	60b9      	str	r1, [r7, #8]
 8001bb2:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 8001bb4:	6878      	ldr	r0, [r7, #4]
 8001bb6:	f000 fbf3 	bl	80023a0 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEEONSt16remove_referenceIT_E4typeEOSF_>
 8001bba:	4603      	mov	r3, r0
 8001bbc:	4619      	mov	r1, r3
 8001bbe:	68f8      	ldr	r0, [r7, #12]
 8001bc0:	f000 fbf9 	bl	80023b6 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSB_>
 8001bc4:	68fb      	ldr	r3, [r7, #12]
 8001bc6:	68b9      	ldr	r1, [r7, #8]
 8001bc8:	4618      	mov	r0, r3
 8001bca:	f000 fc02 	bl	80023d2 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_>
 8001bce:	68fb      	ldr	r3, [r7, #12]
 8001bd0:	3304      	adds	r3, #4
 8001bd2:	4618      	mov	r0, r3
 8001bd4:	f7ff fa4d 	bl	8001072 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8001bd8:	68fb      	ldr	r3, [r7, #12]
 8001bda:	4618      	mov	r0, r3
 8001bdc:	3710      	adds	r7, #16
 8001bde:	46bd      	mov	sp, r7
 8001be0:	bd80      	pop	{r7, pc}

08001be2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8001be2:	b580      	push	{r7, lr}
 8001be4:	b084      	sub	sp, #16
 8001be6:	af00      	add	r7, sp, #0
 8001be8:	6078      	str	r0, [r7, #4]
 8001bea:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 8001bec:	683b      	ldr	r3, [r7, #0]
 8001bee:	2b00      	cmp	r3, #0
 8001bf0:	d012      	beq.n	8001c18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0x36>
	  _M_erase(_S_right(__x));
 8001bf2:	6838      	ldr	r0, [r7, #0]
 8001bf4:	f000 fbf9 	bl	80023ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8001bf8:	4603      	mov	r3, r0
 8001bfa:	4619      	mov	r1, r3
 8001bfc:	6878      	ldr	r0, [r7, #4]
 8001bfe:	f7ff fff0 	bl	8001be2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
	  _Link_type __y = _S_left(__x);
 8001c02:	6838      	ldr	r0, [r7, #0]
 8001c04:	f000 fbfd 	bl	8002402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8001c08:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8001c0a:	6839      	ldr	r1, [r7, #0]
 8001c0c:	6878      	ldr	r0, [r7, #4]
 8001c0e:	f000 fc04 	bl	800241a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	  __x = __y;
 8001c12:	68fb      	ldr	r3, [r7, #12]
 8001c14:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8001c16:	e7e9      	b.n	8001bec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0xa>
    }
 8001c18:	bf00      	nop
 8001c1a:	3710      	adds	r7, #16
 8001c1c:	46bd      	mov	sp, r7
 8001c1e:	bd80      	pop	{r7, pc}

08001c20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8001c20:	b480      	push	{r7}
 8001c22:	b083      	sub	sp, #12
 8001c24:	af00      	add	r7, sp, #0
 8001c26:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8001c28:	687b      	ldr	r3, [r7, #4]
 8001c2a:	689b      	ldr	r3, [r3, #8]
 8001c2c:	4618      	mov	r0, r3
 8001c2e:	370c      	adds	r7, #12
 8001c30:	46bd      	mov	sp, r7
 8001c32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c36:	4770      	bx	lr

08001c38 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE4sizeEv>:
 8001c38:	b480      	push	{r7}
 8001c3a:	b083      	sub	sp, #12
 8001c3c:	af00      	add	r7, sp, #0
 8001c3e:	6078      	str	r0, [r7, #4]
 8001c40:	687b      	ldr	r3, [r7, #4]
 8001c42:	685b      	ldr	r3, [r3, #4]
 8001c44:	4618      	mov	r0, r3
 8001c46:	370c      	adds	r7, #12
 8001c48:	46bd      	mov	sp, r7
 8001c4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c4e:	4770      	bx	lr

08001c50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>:
	_Alloc_node(_Rb_tree& __t)
 8001c50:	b480      	push	{r7}
 8001c52:	b083      	sub	sp, #12
 8001c54:	af00      	add	r7, sp, #0
 8001c56:	6078      	str	r0, [r7, #4]
 8001c58:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 8001c5a:	687b      	ldr	r3, [r7, #4]
 8001c5c:	683a      	ldr	r2, [r7, #0]
 8001c5e:	601a      	str	r2, [r3, #0]
 8001c60:	687b      	ldr	r3, [r7, #4]
 8001c62:	4618      	mov	r0, r3
 8001c64:	370c      	adds	r7, #12
 8001c66:	46bd      	mov	sp, r7
 8001c68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c6c:	4770      	bx	lr

08001c6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8001c6e:	b580      	push	{r7, lr}
 8001c70:	b084      	sub	sp, #16
 8001c72:	af00      	add	r7, sp, #0
 8001c74:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	1d1a      	adds	r2, r3, #4
 8001c7a:	f107 030c 	add.w	r3, r7, #12
 8001c7e:	4611      	mov	r1, r2
 8001c80:	4618      	mov	r0, r3
 8001c82:	f000 fbdb 	bl	800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8001c86:	68fb      	ldr	r3, [r7, #12]
 8001c88:	4618      	mov	r0, r3
 8001c8a:	3710      	adds	r7, #16
 8001c8c:	46bd      	mov	sp, r7
 8001c8e:	bd80      	pop	{r7, pc}

08001c90 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSt17_Rb_tree_iteratorIS9_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8001c90:	b480      	push	{r7}
 8001c92:	b083      	sub	sp, #12
 8001c94:	af00      	add	r7, sp, #0
 8001c96:	6078      	str	r0, [r7, #4]
 8001c98:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8001c9a:	683b      	ldr	r3, [r7, #0]
 8001c9c:	681a      	ldr	r2, [r3, #0]
 8001c9e:	687b      	ldr	r3, [r7, #4]
 8001ca0:	601a      	str	r2, [r3, #0]
 8001ca2:	687b      	ldr	r3, [r7, #4]
 8001ca4:	4618      	mov	r0, r3
 8001ca6:	370c      	adds	r7, #12
 8001ca8:	46bd      	mov	sp, r7
 8001caa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cae:	4770      	bx	lr

08001cb0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8001cb0:	b5b0      	push	{r4, r5, r7, lr}
 8001cb2:	b08a      	sub	sp, #40	; 0x28
 8001cb4:	af02      	add	r7, sp, #8
 8001cb6:	60f8      	str	r0, [r7, #12]
 8001cb8:	60b9      	str	r1, [r7, #8]
 8001cba:	607a      	str	r2, [r7, #4]
 8001cbc:	603b      	str	r3, [r7, #0]
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 8001cbe:	f107 0318 	add.w	r3, r7, #24
 8001cc2:	6879      	ldr	r1, [r7, #4]
 8001cc4:	4618      	mov	r0, r3
 8001cc6:	f000 fceb 	bl	80026a0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 8001cca:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 8001ccc:	f107 0010 	add.w	r0, r7, #16
 8001cd0:	68ba      	ldr	r2, [r7, #8]
 8001cd2:	68f9      	ldr	r1, [r7, #12]
 8001cd4:	f000 fbc1 	bl	800245a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>
      if (__res.second)
 8001cd8:	697b      	ldr	r3, [r7, #20]
 8001cda:	2b00      	cmp	r3, #0
 8001cdc:	d00f      	beq.n	8001cfe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_+0x4e>
			  __node_gen);
 8001cde:	693c      	ldr	r4, [r7, #16]
 8001ce0:	697d      	ldr	r5, [r7, #20]
 8001ce2:	6878      	ldr	r0, [r7, #4]
 8001ce4:	f000 fce8 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8001ce8:	4602      	mov	r2, r0
 8001cea:	683b      	ldr	r3, [r7, #0]
 8001cec:	9300      	str	r3, [sp, #0]
 8001cee:	4613      	mov	r3, r2
 8001cf0:	462a      	mov	r2, r5
 8001cf2:	4621      	mov	r1, r4
 8001cf4:	68f8      	ldr	r0, [r7, #12]
 8001cf6:	f000 fcea 	bl	80026ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_>
 8001cfa:	4603      	mov	r3, r0
 8001cfc:	e007      	b.n	8001d0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_+0x5e>
      return iterator(__res.first);
 8001cfe:	693a      	ldr	r2, [r7, #16]
 8001d00:	f107 031c 	add.w	r3, r7, #28
 8001d04:	4611      	mov	r1, r2
 8001d06:	4618      	mov	r0, r3
 8001d08:	f000 fb98 	bl	800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8001d0c:	69fb      	ldr	r3, [r7, #28]
    }
 8001d0e:	4618      	mov	r0, r3
 8001d10:	3720      	adds	r7, #32
 8001d12:	46bd      	mov	sp, r7
 8001d14:	bdb0      	pop	{r4, r5, r7, pc}

08001d16 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1ERKS5_>:
 8001d16:	b480      	push	{r7}
 8001d18:	b083      	sub	sp, #12
 8001d1a:	af00      	add	r7, sp, #0
 8001d1c:	6078      	str	r0, [r7, #4]
 8001d1e:	6039      	str	r1, [r7, #0]
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	4618      	mov	r0, r3
 8001d24:	370c      	adds	r7, #12
 8001d26:	46bd      	mov	sp, r7
 8001d28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d2c:	4770      	bx	lr

08001d2e <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1IS3_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 8001d2e:	b580      	push	{r7, lr}
 8001d30:	b082      	sub	sp, #8
 8001d32:	af00      	add	r7, sp, #0
 8001d34:	6078      	str	r0, [r7, #4]
 8001d36:	6039      	str	r1, [r7, #0]
 8001d38:	6878      	ldr	r0, [r7, #4]
 8001d3a:	f000 fd11 	bl	8002760 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1Ev>
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	4618      	mov	r0, r3
 8001d42:	3708      	adds	r7, #8
 8001d44:	46bd      	mov	sp, r7
 8001d46:	bd80      	pop	{r7, pc}

08001d48 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001d48:	b580      	push	{r7, lr}
 8001d4a:	b082      	sub	sp, #8
 8001d4c:	af00      	add	r7, sp, #0
 8001d4e:	6078      	str	r0, [r7, #4]
 8001d50:	6878      	ldr	r0, [r7, #4]
 8001d52:	f000 fd10 	bl	8002776 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 8001d56:	687b      	ldr	r3, [r7, #4]
 8001d58:	4618      	mov	r0, r3
 8001d5a:	3708      	adds	r7, #8
 8001d5c:	46bd      	mov	sp, r7
 8001d5e:	bd80      	pop	{r7, pc}

08001d60 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 8001d60:	b580      	push	{r7, lr}
 8001d62:	b084      	sub	sp, #16
 8001d64:	af00      	add	r7, sp, #0
 8001d66:	60f8      	str	r0, [r7, #12]
 8001d68:	60b9      	str	r1, [r7, #8]
 8001d6a:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 8001d6c:	6878      	ldr	r0, [r7, #4]
 8001d6e:	f000 fd0d 	bl	800278c <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEEONSt16remove_referenceIT_E4typeEOS9_>
 8001d72:	4603      	mov	r3, r0
 8001d74:	4619      	mov	r1, r3
 8001d76:	68f8      	ldr	r0, [r7, #12]
 8001d78:	f000 fd13 	bl	80027a2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS5_>
 8001d7c:	68fb      	ldr	r3, [r7, #12]
 8001d7e:	68b9      	ldr	r1, [r7, #8]
 8001d80:	4618      	mov	r0, r3
 8001d82:	f000 f930 	bl	8001fe6 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>
 8001d86:	68fb      	ldr	r3, [r7, #12]
 8001d88:	3304      	adds	r3, #4
 8001d8a:	4618      	mov	r0, r3
 8001d8c:	f7ff f971 	bl	8001072 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8001d90:	68fb      	ldr	r3, [r7, #12]
 8001d92:	4618      	mov	r0, r3
 8001d94:	3710      	adds	r7, #16
 8001d96:	46bd      	mov	sp, r7
 8001d98:	bd80      	pop	{r7, pc}

08001d9a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8001d9a:	b580      	push	{r7, lr}
 8001d9c:	b084      	sub	sp, #16
 8001d9e:	af00      	add	r7, sp, #0
 8001da0:	6078      	str	r0, [r7, #4]
 8001da2:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 8001da4:	683b      	ldr	r3, [r7, #0]
 8001da6:	2b00      	cmp	r3, #0
 8001da8:	d012      	beq.n	8001dd0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x36>
	  _M_erase(_S_right(__x));
 8001daa:	6838      	ldr	r0, [r7, #0]
 8001dac:	f000 fd07 	bl	80027be <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8001db0:	4603      	mov	r3, r0
 8001db2:	4619      	mov	r1, r3
 8001db4:	6878      	ldr	r0, [r7, #4]
 8001db6:	f7ff fff0 	bl	8001d9a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
	  _Link_type __y = _S_left(__x);
 8001dba:	6838      	ldr	r0, [r7, #0]
 8001dbc:	f000 fd0b 	bl	80027d6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8001dc0:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8001dc2:	6839      	ldr	r1, [r7, #0]
 8001dc4:	6878      	ldr	r0, [r7, #4]
 8001dc6:	f000 fd12 	bl	80027ee <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>
	  __x = __y;
 8001dca:	68fb      	ldr	r3, [r7, #12]
 8001dcc:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8001dce:	e7e9      	b.n	8001da4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0xa>
    }
 8001dd0:	bf00      	nop
 8001dd2:	3710      	adds	r7, #16
 8001dd4:	46bd      	mov	sp, r7
 8001dd6:	bd80      	pop	{r7, pc}

08001dd8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8001dd8:	b480      	push	{r7}
 8001dda:	b083      	sub	sp, #12
 8001ddc:	af00      	add	r7, sp, #0
 8001dde:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8001de0:	687b      	ldr	r3, [r7, #4]
 8001de2:	689b      	ldr	r3, [r3, #8]
 8001de4:	4618      	mov	r0, r3
 8001de6:	370c      	adds	r7, #12
 8001de8:	46bd      	mov	sp, r7
 8001dea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dee:	4770      	bx	lr

08001df0 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE4sizeEv>:
 8001df0:	b480      	push	{r7}
 8001df2:	b083      	sub	sp, #12
 8001df4:	af00      	add	r7, sp, #0
 8001df6:	6078      	str	r0, [r7, #4]
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	685b      	ldr	r3, [r3, #4]
 8001dfc:	4618      	mov	r0, r3
 8001dfe:	370c      	adds	r7, #12
 8001e00:	46bd      	mov	sp, r7
 8001e02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e06:	4770      	bx	lr

08001e08 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>:
	_Alloc_node(_Rb_tree& __t)
 8001e08:	b480      	push	{r7}
 8001e0a:	b083      	sub	sp, #12
 8001e0c:	af00      	add	r7, sp, #0
 8001e0e:	6078      	str	r0, [r7, #4]
 8001e10:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	683a      	ldr	r2, [r7, #0]
 8001e16:	601a      	str	r2, [r3, #0]
 8001e18:	687b      	ldr	r3, [r7, #4]
 8001e1a:	4618      	mov	r0, r3
 8001e1c:	370c      	adds	r7, #12
 8001e1e:	46bd      	mov	sp, r7
 8001e20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e24:	4770      	bx	lr

08001e26 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8001e26:	b580      	push	{r7, lr}
 8001e28:	b084      	sub	sp, #16
 8001e2a:	af00      	add	r7, sp, #0
 8001e2c:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8001e2e:	687b      	ldr	r3, [r7, #4]
 8001e30:	1d1a      	adds	r2, r3, #4
 8001e32:	f107 030c 	add.w	r3, r7, #12
 8001e36:	4611      	mov	r1, r2
 8001e38:	4618      	mov	r0, r3
 8001e3a:	f000 fce9 	bl	8002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8001e3e:	68fb      	ldr	r3, [r7, #12]
 8001e40:	4618      	mov	r0, r3
 8001e42:	3710      	adds	r7, #16
 8001e44:	46bd      	mov	sp, r7
 8001e46:	bd80      	pop	{r7, pc}

08001e48 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1ERKSt17_Rb_tree_iteratorIS3_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8001e48:	b480      	push	{r7}
 8001e4a:	b083      	sub	sp, #12
 8001e4c:	af00      	add	r7, sp, #0
 8001e4e:	6078      	str	r0, [r7, #4]
 8001e50:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8001e52:	683b      	ldr	r3, [r7, #0]
 8001e54:	681a      	ldr	r2, [r3, #0]
 8001e56:	687b      	ldr	r3, [r7, #4]
 8001e58:	601a      	str	r2, [r3, #0]
 8001e5a:	687b      	ldr	r3, [r7, #4]
 8001e5c:	4618      	mov	r0, r3
 8001e5e:	370c      	adds	r7, #12
 8001e60:	46bd      	mov	sp, r7
 8001e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e66:	4770      	bx	lr

08001e68 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8001e68:	b5b0      	push	{r4, r5, r7, lr}
 8001e6a:	b08a      	sub	sp, #40	; 0x28
 8001e6c:	af02      	add	r7, sp, #8
 8001e6e:	60f8      	str	r0, [r7, #12]
 8001e70:	60b9      	str	r1, [r7, #8]
 8001e72:	607a      	str	r2, [r7, #4]
 8001e74:	603b      	str	r3, [r7, #0]
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 8001e76:	f107 0318 	add.w	r3, r7, #24
 8001e7a:	6879      	ldr	r1, [r7, #4]
 8001e7c:	4618      	mov	r0, r3
 8001e7e:	f000 fdf9 	bl	8002a74 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 8001e82:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 8001e84:	f107 0010 	add.w	r0, r7, #16
 8001e88:	68ba      	ldr	r2, [r7, #8]
 8001e8a:	68f9      	ldr	r1, [r7, #12]
 8001e8c:	f000 fccf 	bl	800282e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>
      if (__res.second)
 8001e90:	697b      	ldr	r3, [r7, #20]
 8001e92:	2b00      	cmp	r3, #0
 8001e94:	d00f      	beq.n	8001eb6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x4e>
			  __node_gen);
 8001e96:	693c      	ldr	r4, [r7, #16]
 8001e98:	697d      	ldr	r5, [r7, #20]
 8001e9a:	6878      	ldr	r0, [r7, #4]
 8001e9c:	f000 fdf6 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8001ea0:	4602      	mov	r2, r0
 8001ea2:	683b      	ldr	r3, [r7, #0]
 8001ea4:	9300      	str	r3, [sp, #0]
 8001ea6:	4613      	mov	r3, r2
 8001ea8:	462a      	mov	r2, r5
 8001eaa:	4621      	mov	r1, r4
 8001eac:	68f8      	ldr	r0, [r7, #12]
 8001eae:	f000 fdf8 	bl	8002aa2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>
 8001eb2:	4603      	mov	r3, r0
 8001eb4:	e007      	b.n	8001ec6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x5e>
      return iterator(__res.first);
 8001eb6:	693a      	ldr	r2, [r7, #16]
 8001eb8:	f107 031c 	add.w	r3, r7, #28
 8001ebc:	4611      	mov	r1, r2
 8001ebe:	4618      	mov	r0, r3
 8001ec0:	f000 fca6 	bl	8002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8001ec4:	69fb      	ldr	r3, [r7, #28]
    }
 8001ec6:	4618      	mov	r0, r3
 8001ec8:	3720      	adds	r7, #32
 8001eca:	46bd      	mov	sp, r7
 8001ecc:	bdb0      	pop	{r4, r5, r7, pc}

08001ece <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
   *  and are constant time.  For other %iterator classes they are linear time.
  */
  template<typename _InputIterator>
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
 8001ece:	b5b0      	push	{r4, r5, r7, lr}
 8001ed0:	b082      	sub	sp, #8
 8001ed2:	af00      	add	r7, sp, #0
 8001ed4:	6078      	str	r0, [r7, #4]
 8001ed6:	6039      	str	r1, [r7, #0]
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
 8001ed8:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 8001eda:	1d3b      	adds	r3, r7, #4
 8001edc:	4618      	mov	r0, r3
 8001ede:	f000 fe39 	bl	8002b54 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
 8001ee2:	462a      	mov	r2, r5
 8001ee4:	6839      	ldr	r1, [r7, #0]
 8001ee6:	4620      	mov	r0, r4
 8001ee8:	f000 fe3e 	bl	8002b68 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
 8001eec:	4603      	mov	r3, r0
    }
 8001eee:	4618      	mov	r0, r3
 8001ef0:	3708      	adds	r7, #8
 8001ef2:	46bd      	mov	sp, r7
 8001ef4:	bdb0      	pop	{r4, r5, r7, pc}
	...

08001ef8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      }

  template<typename _CharT, typename _Traits, typename _Alloc>
    template<typename _InIterator>
      void
      basic_string<_CharT, _Traits, _Alloc>::
 8001ef8:	b580      	push	{r7, lr}
 8001efa:	b086      	sub	sp, #24
 8001efc:	af00      	add	r7, sp, #0
 8001efe:	60f8      	str	r0, [r7, #12]
 8001f00:	60b9      	str	r1, [r7, #8]
 8001f02:	607a      	str	r2, [r7, #4]
 8001f04:	703b      	strb	r3, [r7, #0]
      _M_construct(_InIterator __beg, _InIterator __end,
		   std::forward_iterator_tag)
      {
	// NB: Not required, but considered best practice.
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 8001f06:	68b8      	ldr	r0, [r7, #8]
 8001f08:	f000 fe14 	bl	8002b34 <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_>
 8001f0c:	4603      	mov	r3, r0
 8001f0e:	2b00      	cmp	r3, #0
 8001f10:	d005      	beq.n	8001f1e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x26>
 8001f12:	68ba      	ldr	r2, [r7, #8]
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	429a      	cmp	r2, r3
 8001f18:	d001      	beq.n	8001f1e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x26>
 8001f1a:	2301      	movs	r3, #1
 8001f1c:	e000      	b.n	8001f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x28>
 8001f1e:	2300      	movs	r3, #0
 8001f20:	2b00      	cmp	r3, #0
 8001f22:	d002      	beq.n	8001f2a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x32>
	  std::__throw_logic_error(__N("basic_string::"
 8001f24:	4817      	ldr	r0, [pc, #92]	; (8001f84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x8c>)
 8001f26:	f020 ff57 	bl	8022dd8 <_ZSt19__throw_logic_errorPKc>
				       "_M_construct null not valid"));

	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 8001f2a:	6879      	ldr	r1, [r7, #4]
 8001f2c:	68b8      	ldr	r0, [r7, #8]
 8001f2e:	f7ff ffce 	bl	8001ece <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
 8001f32:	4603      	mov	r3, r0
 8001f34:	617b      	str	r3, [r7, #20]

	if (__dnew > size_type(_S_local_capacity))
 8001f36:	697b      	ldr	r3, [r7, #20]
 8001f38:	2b0f      	cmp	r3, #15
 8001f3a:	d910      	bls.n	8001f5e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x66>
	  {
	    _M_data(_M_create(__dnew, size_type(0)));
 8001f3c:	f107 0314 	add.w	r3, r7, #20
 8001f40:	2200      	movs	r2, #0
 8001f42:	4619      	mov	r1, r3
 8001f44:	68f8      	ldr	r0, [r7, #12]
 8001f46:	f020 ff69 	bl	8022e1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8001f4a:	4603      	mov	r3, r0
 8001f4c:	4619      	mov	r1, r3
 8001f4e:	68f8      	ldr	r0, [r7, #12]
 8001f50:	f020 ff57 	bl	8022e02 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
 8001f54:	697b      	ldr	r3, [r7, #20]
 8001f56:	4619      	mov	r1, r3
 8001f58:	68f8      	ldr	r0, [r7, #12]
 8001f5a:	f020 ff58 	bl	8022e0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>
	  }

	// Check for out_of_range and length_error exceptions.
	__try
	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 8001f5e:	68f8      	ldr	r0, [r7, #12]
 8001f60:	f020 ff51 	bl	8022e06 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
 8001f64:	4603      	mov	r3, r0
 8001f66:	687a      	ldr	r2, [r7, #4]
 8001f68:	68b9      	ldr	r1, [r7, #8]
 8001f6a:	4618      	mov	r0, r3
 8001f6c:	f020 ffa6 	bl	8022ebc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
	  {
	    _M_dispose();
	    __throw_exception_again;
	  }

	_M_set_length(__dnew);
 8001f70:	697b      	ldr	r3, [r7, #20]
 8001f72:	4619      	mov	r1, r3
 8001f74:	68f8      	ldr	r0, [r7, #12]
 8001f76:	f020 ff4c 	bl	8022e12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>
      }
 8001f7a:	bf00      	nop
 8001f7c:	3718      	adds	r7, #24
 8001f7e:	46bd      	mov	sp, r7
 8001f80:	bd80      	pop	{r7, pc}
 8001f82:	bf00      	nop
 8001f84:	08027330 	.word	0x08027330

08001f88 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8001f88:	b480      	push	{r7}
 8001f8a:	b083      	sub	sp, #12
 8001f8c:	af00      	add	r7, sp, #0
 8001f8e:	6078      	str	r0, [r7, #4]
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	4618      	mov	r0, r3
 8001f94:	370c      	adds	r7, #12
 8001f96:	46bd      	mov	sp, r7
 8001f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f9c:	4770      	bx	lr

08001f9e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8001f9e:	b480      	push	{r7}
 8001fa0:	b083      	sub	sp, #12
 8001fa2:	af00      	add	r7, sp, #0
 8001fa4:	6078      	str	r0, [r7, #4]
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	4618      	mov	r0, r3
 8001faa:	370c      	adds	r7, #12
 8001fac:	46bd      	mov	sp, r7
 8001fae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fb2:	4770      	bx	lr

08001fb4 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEEONSt16remove_referenceIT_E4typeEOS9_>:
   *  @param  __t  A thing of arbitrary type.
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
 8001fb4:	b480      	push	{r7}
 8001fb6:	b083      	sub	sp, #12
 8001fb8:	af00      	add	r7, sp, #0
 8001fba:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	4618      	mov	r0, r3
 8001fc0:	370c      	adds	r7, #12
 8001fc2:	46bd      	mov	sp, r7
 8001fc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fc8:	4770      	bx	lr

08001fca <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8001fca:	b580      	push	{r7, lr}
 8001fcc:	b082      	sub	sp, #8
 8001fce:	af00      	add	r7, sp, #0
 8001fd0:	6078      	str	r0, [r7, #4]
 8001fd2:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8001fd4:	6839      	ldr	r1, [r7, #0]
 8001fd6:	6878      	ldr	r0, [r7, #4]
 8001fd8:	f000 fdd5 	bl	8002b86 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS7_>
 8001fdc:	687b      	ldr	r3, [r7, #4]
 8001fde:	4618      	mov	r0, r3
 8001fe0:	3708      	adds	r7, #8
 8001fe2:	46bd      	mov	sp, r7
 8001fe4:	bd80      	pop	{r7, pc}

08001fe6 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
 8001fe6:	b480      	push	{r7}
 8001fe8:	b083      	sub	sp, #12
 8001fea:	af00      	add	r7, sp, #0
 8001fec:	6078      	str	r0, [r7, #4]
 8001fee:	6039      	str	r1, [r7, #0]
      { }
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	4618      	mov	r0, r3
 8001ff4:	370c      	adds	r7, #12
 8001ff6:	46bd      	mov	sp, r7
 8001ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ffc:	4770      	bx	lr

08001ffe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8001ffe:	b480      	push	{r7}
 8002000:	b083      	sub	sp, #12
 8002002:	af00      	add	r7, sp, #0
 8002004:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	68db      	ldr	r3, [r3, #12]
 800200a:	4618      	mov	r0, r3
 800200c:	370c      	adds	r7, #12
 800200e:	46bd      	mov	sp, r7
 8002010:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002014:	4770      	bx	lr

08002016 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8002016:	b480      	push	{r7}
 8002018:	b083      	sub	sp, #12
 800201a:	af00      	add	r7, sp, #0
 800201c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800201e:	687b      	ldr	r3, [r7, #4]
 8002020:	689b      	ldr	r3, [r3, #8]
 8002022:	4618      	mov	r0, r3
 8002024:	370c      	adds	r7, #12
 8002026:	46bd      	mov	sp, r7
 8002028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800202c:	4770      	bx	lr

0800202e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800202e:	b580      	push	{r7, lr}
 8002030:	b082      	sub	sp, #8
 8002032:	af00      	add	r7, sp, #0
 8002034:	6078      	str	r0, [r7, #4]
 8002036:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8002038:	6839      	ldr	r1, [r7, #0]
 800203a:	6878      	ldr	r0, [r7, #4]
 800203c:	f000 fdaf 	bl	8002b9e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>
	_M_put_node(__p);
 8002040:	6839      	ldr	r1, [r7, #0]
 8002042:	6878      	ldr	r0, [r7, #4]
 8002044:	f000 fdc0 	bl	8002bc8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>
      }
 8002048:	bf00      	nop
 800204a:	3708      	adds	r7, #8
 800204c:	46bd      	mov	sp, r7
 800204e:	bd80      	pop	{r7, pc}

08002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8002050:	b480      	push	{r7}
 8002052:	b083      	sub	sp, #12
 8002054:	af00      	add	r7, sp, #0
 8002056:	6078      	str	r0, [r7, #4]
 8002058:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	683a      	ldr	r2, [r7, #0]
 800205e:	601a      	str	r2, [r3, #0]
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	4618      	mov	r0, r3
 8002064:	370c      	adds	r7, #12
 8002066:	46bd      	mov	sp, r7
 8002068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800206c:	4770      	bx	lr

0800206e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800206e:	b590      	push	{r4, r7, lr}
 8002070:	b08d      	sub	sp, #52	; 0x34
 8002072:	af00      	add	r7, sp, #0
 8002074:	60f8      	str	r0, [r7, #12]
 8002076:	60b9      	str	r1, [r7, #8]
 8002078:	607a      	str	r2, [r7, #4]
 800207a:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 800207c:	1d3b      	adds	r3, r7, #4
 800207e:	4618      	mov	r0, r3
 8002080:	f000 fdb4 	bl	8002bec <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEE13_M_const_castEv>
 8002084:	4603      	mov	r3, r0
 8002086:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8002088:	69bc      	ldr	r4, [r7, #24]
 800208a:	68b8      	ldr	r0, [r7, #8]
 800208c:	f000 fdbf 	bl	8002c0e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8002090:	4603      	mov	r3, r0
 8002092:	429c      	cmp	r4, r3
 8002094:	bf0c      	ite	eq
 8002096:	2301      	moveq	r3, #1
 8002098:	2300      	movne	r3, #0
 800209a:	b2db      	uxtb	r3, r3
 800209c:	2b00      	cmp	r3, #0
 800209e:	d030      	beq.n	8002102 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x94>
	  if (size() > 0
 80020a0:	68b8      	ldr	r0, [r7, #8]
 80020a2:	f000 fdc0 	bl	8002c26 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>
 80020a6:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 80020a8:	2b00      	cmp	r3, #0
 80020aa:	d013      	beq.n	80020d4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 80020ac:	68bc      	ldr	r4, [r7, #8]
 80020ae:	68b8      	ldr	r0, [r7, #8]
 80020b0:	f000 fdc5 	bl	8002c3e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80020b4:	4603      	mov	r3, r0
 80020b6:	681b      	ldr	r3, [r3, #0]
 80020b8:	4618      	mov	r0, r3
 80020ba:	f000 fdcc 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80020be:	4603      	mov	r3, r0
 80020c0:	683a      	ldr	r2, [r7, #0]
 80020c2:	4619      	mov	r1, r3
 80020c4:	4620      	mov	r0, r4
 80020c6:	f000 fdd2 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 80020ca:	4603      	mov	r3, r0
 80020cc:	2b00      	cmp	r3, #0
 80020ce:	d001      	beq.n	80020d4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 80020d0:	2301      	movs	r3, #1
 80020d2:	e000      	b.n	80020d6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x68>
 80020d4:	2300      	movs	r3, #0
	  if (size() > 0
 80020d6:	2b00      	cmp	r3, #0
 80020d8:	d00c      	beq.n	80020f4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x86>
	    return _Res(0, _M_rightmost());
 80020da:	2300      	movs	r3, #0
 80020dc:	61fb      	str	r3, [r7, #28]
 80020de:	68b8      	ldr	r0, [r7, #8]
 80020e0:	f000 fdad 	bl	8002c3e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80020e4:	4602      	mov	r2, r0
 80020e6:	f107 031c 	add.w	r3, r7, #28
 80020ea:	4619      	mov	r1, r3
 80020ec:	68f8      	ldr	r0, [r7, #12]
 80020ee:	f000 fdd3 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80020f2:	e0db      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80020f4:	68fb      	ldr	r3, [r7, #12]
 80020f6:	683a      	ldr	r2, [r7, #0]
 80020f8:	68b9      	ldr	r1, [r7, #8]
 80020fa:	4618      	mov	r0, r3
 80020fc:	f000 fde2 	bl	8002cc4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8002100:	e0d4      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8002102:	68bc      	ldr	r4, [r7, #8]
 8002104:	69bb      	ldr	r3, [r7, #24]
 8002106:	4618      	mov	r0, r3
 8002108:	f000 fda5 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800210c:	4603      	mov	r3, r0
 800210e:	461a      	mov	r2, r3
 8002110:	6839      	ldr	r1, [r7, #0]
 8002112:	4620      	mov	r0, r4
 8002114:	f000 fdab 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002118:	4603      	mov	r3, r0
 800211a:	2b00      	cmp	r3, #0
 800211c:	d057      	beq.n	80021ce <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x160>
	  iterator __before = __pos;
 800211e:	69bb      	ldr	r3, [r7, #24]
 8002120:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8002122:	69bc      	ldr	r4, [r7, #24]
 8002124:	68b8      	ldr	r0, [r7, #8]
 8002126:	f000 fe52 	bl	8002dce <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 800212a:	4603      	mov	r3, r0
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	429c      	cmp	r4, r3
 8002130:	bf0c      	ite	eq
 8002132:	2301      	moveq	r3, #1
 8002134:	2300      	movne	r3, #0
 8002136:	b2db      	uxtb	r3, r3
 8002138:	2b00      	cmp	r3, #0
 800213a:	d00d      	beq.n	8002158 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 800213c:	68b8      	ldr	r0, [r7, #8]
 800213e:	f000 fe46 	bl	8002dce <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8002142:	4604      	mov	r4, r0
 8002144:	68b8      	ldr	r0, [r7, #8]
 8002146:	f000 fe42 	bl	8002dce <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 800214a:	4603      	mov	r3, r0
 800214c:	461a      	mov	r2, r3
 800214e:	4621      	mov	r1, r4
 8002150:	68f8      	ldr	r0, [r7, #12]
 8002152:	f000 fe48 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8002156:	e0a9      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8002158:	68bc      	ldr	r4, [r7, #8]
 800215a:	f107 0314 	add.w	r3, r7, #20
 800215e:	4618      	mov	r0, r3
 8002160:	f000 fe5a 	bl	8002e18 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>
 8002164:	4603      	mov	r3, r0
 8002166:	681b      	ldr	r3, [r3, #0]
 8002168:	4618      	mov	r0, r3
 800216a:	f000 fd74 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800216e:	4603      	mov	r3, r0
 8002170:	683a      	ldr	r2, [r7, #0]
 8002172:	4619      	mov	r1, r3
 8002174:	4620      	mov	r0, r4
 8002176:	f000 fd7a 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 800217a:	4603      	mov	r3, r0
 800217c:	2b00      	cmp	r3, #0
 800217e:	d01f      	beq.n	80021c0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8002180:	697b      	ldr	r3, [r7, #20]
 8002182:	4618      	mov	r0, r3
 8002184:	f7ff ff3b 	bl	8001ffe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8002188:	4603      	mov	r3, r0
 800218a:	2b00      	cmp	r3, #0
 800218c:	bf0c      	ite	eq
 800218e:	2301      	moveq	r3, #1
 8002190:	2300      	movne	r3, #0
 8002192:	b2db      	uxtb	r3, r3
 8002194:	2b00      	cmp	r3, #0
 8002196:	d00a      	beq.n	80021ae <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x140>
		return _Res(0, __before._M_node);
 8002198:	2300      	movs	r3, #0
 800219a:	623b      	str	r3, [r7, #32]
 800219c:	f107 0214 	add.w	r2, r7, #20
 80021a0:	f107 0320 	add.w	r3, r7, #32
 80021a4:	4619      	mov	r1, r3
 80021a6:	68f8      	ldr	r0, [r7, #12]
 80021a8:	f000 fd76 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80021ac:	e07e      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 80021ae:	f107 0218 	add.w	r2, r7, #24
 80021b2:	f107 0318 	add.w	r3, r7, #24
 80021b6:	4619      	mov	r1, r3
 80021b8:	68f8      	ldr	r0, [r7, #12]
 80021ba:	f000 fe14 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80021be:	e075      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80021c0:	68fb      	ldr	r3, [r7, #12]
 80021c2:	683a      	ldr	r2, [r7, #0]
 80021c4:	68b9      	ldr	r1, [r7, #8]
 80021c6:	4618      	mov	r0, r3
 80021c8:	f000 fd7c 	bl	8002cc4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 80021cc:	e06e      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 80021ce:	68bc      	ldr	r4, [r7, #8]
 80021d0:	69bb      	ldr	r3, [r7, #24]
 80021d2:	4618      	mov	r0, r3
 80021d4:	f000 fd3f 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80021d8:	4603      	mov	r3, r0
 80021da:	683a      	ldr	r2, [r7, #0]
 80021dc:	4619      	mov	r1, r3
 80021de:	4620      	mov	r0, r4
 80021e0:	f000 fd45 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 80021e4:	4603      	mov	r3, r0
 80021e6:	2b00      	cmp	r3, #0
 80021e8:	d056      	beq.n	8002298 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x22a>
	  iterator __after = __pos;
 80021ea:	69bb      	ldr	r3, [r7, #24]
 80021ec:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 80021ee:	69bc      	ldr	r4, [r7, #24]
 80021f0:	68b8      	ldr	r0, [r7, #8]
 80021f2:	f000 fd24 	bl	8002c3e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80021f6:	4603      	mov	r3, r0
 80021f8:	681b      	ldr	r3, [r3, #0]
 80021fa:	429c      	cmp	r4, r3
 80021fc:	bf0c      	ite	eq
 80021fe:	2301      	moveq	r3, #1
 8002200:	2300      	movne	r3, #0
 8002202:	b2db      	uxtb	r3, r3
 8002204:	2b00      	cmp	r3, #0
 8002206:	d00c      	beq.n	8002222 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x1b4>
	    return _Res(0, _M_rightmost());
 8002208:	2300      	movs	r3, #0
 800220a:	627b      	str	r3, [r7, #36]	; 0x24
 800220c:	68b8      	ldr	r0, [r7, #8]
 800220e:	f000 fd16 	bl	8002c3e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8002212:	4602      	mov	r2, r0
 8002214:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002218:	4619      	mov	r1, r3
 800221a:	68f8      	ldr	r0, [r7, #12]
 800221c:	f000 fd3c 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8002220:	e044      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8002222:	68bc      	ldr	r4, [r7, #8]
 8002224:	f107 0310 	add.w	r3, r7, #16
 8002228:	4618      	mov	r0, r3
 800222a:	f000 fe06 	bl	8002e3a <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEppEv>
 800222e:	4603      	mov	r3, r0
 8002230:	681b      	ldr	r3, [r3, #0]
 8002232:	4618      	mov	r0, r3
 8002234:	f000 fd0f 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8002238:	4603      	mov	r3, r0
 800223a:	461a      	mov	r2, r3
 800223c:	6839      	ldr	r1, [r7, #0]
 800223e:	4620      	mov	r0, r4
 8002240:	f000 fd15 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002244:	4603      	mov	r3, r0
 8002246:	2b00      	cmp	r3, #0
 8002248:	d01f      	beq.n	800228a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 800224a:	69bb      	ldr	r3, [r7, #24]
 800224c:	4618      	mov	r0, r3
 800224e:	f7ff fed6 	bl	8001ffe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8002252:	4603      	mov	r3, r0
 8002254:	2b00      	cmp	r3, #0
 8002256:	bf0c      	ite	eq
 8002258:	2301      	moveq	r3, #1
 800225a:	2300      	movne	r3, #0
 800225c:	b2db      	uxtb	r3, r3
 800225e:	2b00      	cmp	r3, #0
 8002260:	d00a      	beq.n	8002278 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x20a>
		return _Res(0, __pos._M_node);
 8002262:	2300      	movs	r3, #0
 8002264:	62bb      	str	r3, [r7, #40]	; 0x28
 8002266:	f107 0218 	add.w	r2, r7, #24
 800226a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800226e:	4619      	mov	r1, r3
 8002270:	68f8      	ldr	r0, [r7, #12]
 8002272:	f000 fd11 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8002276:	e019      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8002278:	f107 0210 	add.w	r2, r7, #16
 800227c:	f107 0310 	add.w	r3, r7, #16
 8002280:	4619      	mov	r1, r3
 8002282:	68f8      	ldr	r0, [r7, #12]
 8002284:	f000 fdaf 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8002288:	e010      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 800228a:	68fb      	ldr	r3, [r7, #12]
 800228c:	683a      	ldr	r2, [r7, #0]
 800228e:	68b9      	ldr	r1, [r7, #8]
 8002290:	4618      	mov	r0, r3
 8002292:	f000 fd17 	bl	8002cc4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8002296:	e009      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	return _Res(__pos._M_node, 0);
 8002298:	2300      	movs	r3, #0
 800229a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800229c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80022a0:	f107 0318 	add.w	r3, r7, #24
 80022a4:	4619      	mov	r1, r3
 80022a6:	68f8      	ldr	r0, [r7, #12]
 80022a8:	f000 fdd8 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80022ac:	68f8      	ldr	r0, [r7, #12]
 80022ae:	3734      	adds	r7, #52	; 0x34
 80022b0:	46bd      	mov	sp, r7
 80022b2:	bd90      	pop	{r4, r7, pc}

080022b4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
 80022b4:	b480      	push	{r7}
 80022b6:	b083      	sub	sp, #12
 80022b8:	af00      	add	r7, sp, #0
 80022ba:	6078      	str	r0, [r7, #4]
 80022bc:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 80022be:	683b      	ldr	r3, [r7, #0]
 80022c0:	4618      	mov	r0, r3
 80022c2:	370c      	adds	r7, #12
 80022c4:	46bd      	mov	sp, r7
 80022c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ca:	4770      	bx	lr

080022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80022cc:	b480      	push	{r7}
 80022ce:	b083      	sub	sp, #12
 80022d0:	af00      	add	r7, sp, #0
 80022d2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80022d4:	687b      	ldr	r3, [r7, #4]
 80022d6:	4618      	mov	r0, r3
 80022d8:	370c      	adds	r7, #12
 80022da:	46bd      	mov	sp, r7
 80022dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022e0:	4770      	bx	lr

080022e2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80022e2:	b5b0      	push	{r4, r5, r7, lr}
 80022e4:	b088      	sub	sp, #32
 80022e6:	af00      	add	r7, sp, #0
 80022e8:	60f8      	str	r0, [r7, #12]
 80022ea:	60b9      	str	r1, [r7, #8]
 80022ec:	607a      	str	r2, [r7, #4]
 80022ee:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80022f0:	68bb      	ldr	r3, [r7, #8]
 80022f2:	2b00      	cmp	r3, #0
 80022f4:	d11a      	bne.n	800232c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 80022f6:	68f8      	ldr	r0, [r7, #12]
 80022f8:	f000 fc89 	bl	8002c0e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 80022fc:	4602      	mov	r2, r0
 80022fe:	687b      	ldr	r3, [r7, #4]
 8002300:	4293      	cmp	r3, r2
 8002302:	d013      	beq.n	800232c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8002304:	68fc      	ldr	r4, [r7, #12]
 8002306:	f107 0310 	add.w	r3, r7, #16
 800230a:	6839      	ldr	r1, [r7, #0]
 800230c:	4618      	mov	r0, r3
 800230e:	f7ff ffd1 	bl	80022b4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 8002312:	4605      	mov	r5, r0
 8002314:	6878      	ldr	r0, [r7, #4]
 8002316:	f000 fc9e 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800231a:	4603      	mov	r3, r0
 800231c:	461a      	mov	r2, r3
 800231e:	4629      	mov	r1, r5
 8002320:	4620      	mov	r0, r4
 8002322:	f000 fca4 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002326:	4603      	mov	r3, r0
 8002328:	2b00      	cmp	r3, #0
 800232a:	d001      	beq.n	8002330 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4e>
 800232c:	2301      	movs	r3, #1
 800232e:	e000      	b.n	8002332 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x50>
 8002330:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8002332:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8002334:	6838      	ldr	r0, [r7, #0]
 8002336:	f7ff ffc9 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 800233a:	4603      	mov	r3, r0
 800233c:	4619      	mov	r1, r3
 800233e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8002340:	f000 fda2 	bl	8002e88 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>
 8002344:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8002346:	68fb      	ldr	r3, [r7, #12]
 8002348:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 800234a:	7ff8      	ldrb	r0, [r7, #31]
 800234c:	687a      	ldr	r2, [r7, #4]
 800234e:	69b9      	ldr	r1, [r7, #24]
 8002350:	f020 fce3 	bl	8022d1a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8002354:	68fb      	ldr	r3, [r7, #12]
 8002356:	695b      	ldr	r3, [r3, #20]
 8002358:	1c5a      	adds	r2, r3, #1
 800235a:	68fb      	ldr	r3, [r7, #12]
 800235c:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 800235e:	f107 0314 	add.w	r3, r7, #20
 8002362:	69b9      	ldr	r1, [r7, #24]
 8002364:	4618      	mov	r0, r3
 8002366:	f7ff fe73 	bl	8002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 800236a:	697b      	ldr	r3, [r7, #20]
      }
 800236c:	4618      	mov	r0, r3
 800236e:	3720      	adds	r7, #32
 8002370:	46bd      	mov	sp, r7
 8002372:	bdb0      	pop	{r4, r5, r7, pc}

08002374 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002374:	b480      	push	{r7}
 8002376:	b083      	sub	sp, #12
 8002378:	af00      	add	r7, sp, #0
 800237a:	6078      	str	r0, [r7, #4]
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	4618      	mov	r0, r3
 8002380:	370c      	adds	r7, #12
 8002382:	46bd      	mov	sp, r7
 8002384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002388:	4770      	bx	lr

0800238a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800238a:	b480      	push	{r7}
 800238c:	b083      	sub	sp, #12
 800238e:	af00      	add	r7, sp, #0
 8002390:	6078      	str	r0, [r7, #4]
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	4618      	mov	r0, r3
 8002396:	370c      	adds	r7, #12
 8002398:	46bd      	mov	sp, r7
 800239a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800239e:	4770      	bx	lr

080023a0 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEEONSt16remove_referenceIT_E4typeEOSF_>:
    move(_Tp&& __t) noexcept
 80023a0:	b480      	push	{r7}
 80023a2:	b083      	sub	sp, #12
 80023a4:	af00      	add	r7, sp, #0
 80023a6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	4618      	mov	r0, r3
 80023ac:	370c      	adds	r7, #12
 80023ae:	46bd      	mov	sp, r7
 80023b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023b4:	4770      	bx	lr

080023b6 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSB_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80023b6:	b580      	push	{r7, lr}
 80023b8:	b082      	sub	sp, #8
 80023ba:	af00      	add	r7, sp, #0
 80023bc:	6078      	str	r0, [r7, #4]
 80023be:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80023c0:	6839      	ldr	r1, [r7, #0]
 80023c2:	6878      	ldr	r0, [r7, #4]
 80023c4:	f000 fd74 	bl	8002eb0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSD_>
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	4618      	mov	r0, r3
 80023cc:	3708      	adds	r7, #8
 80023ce:	46bd      	mov	sp, r7
 80023d0:	bd80      	pop	{r7, pc}

080023d2 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
 80023d2:	b480      	push	{r7}
 80023d4:	b083      	sub	sp, #12
 80023d6:	af00      	add	r7, sp, #0
 80023d8:	6078      	str	r0, [r7, #4]
 80023da:	6039      	str	r1, [r7, #0]
      { }
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	4618      	mov	r0, r3
 80023e0:	370c      	adds	r7, #12
 80023e2:	46bd      	mov	sp, r7
 80023e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023e8:	4770      	bx	lr

080023ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80023ea:	b480      	push	{r7}
 80023ec:	b083      	sub	sp, #12
 80023ee:	af00      	add	r7, sp, #0
 80023f0:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	68db      	ldr	r3, [r3, #12]
 80023f6:	4618      	mov	r0, r3
 80023f8:	370c      	adds	r7, #12
 80023fa:	46bd      	mov	sp, r7
 80023fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002400:	4770      	bx	lr

08002402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8002402:	b480      	push	{r7}
 8002404:	b083      	sub	sp, #12
 8002406:	af00      	add	r7, sp, #0
 8002408:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	689b      	ldr	r3, [r3, #8]
 800240e:	4618      	mov	r0, r3
 8002410:	370c      	adds	r7, #12
 8002412:	46bd      	mov	sp, r7
 8002414:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002418:	4770      	bx	lr

0800241a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800241a:	b580      	push	{r7, lr}
 800241c:	b082      	sub	sp, #8
 800241e:	af00      	add	r7, sp, #0
 8002420:	6078      	str	r0, [r7, #4]
 8002422:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8002424:	6839      	ldr	r1, [r7, #0]
 8002426:	6878      	ldr	r0, [r7, #4]
 8002428:	f000 fd4e 	bl	8002ec8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>
	_M_put_node(__p);
 800242c:	6839      	ldr	r1, [r7, #0]
 800242e:	6878      	ldr	r0, [r7, #4]
 8002430:	f000 fd5f 	bl	8002ef2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>
      }
 8002434:	bf00      	nop
 8002436:	3708      	adds	r7, #8
 8002438:	46bd      	mov	sp, r7
 800243a:	bd80      	pop	{r7, pc}

0800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800243c:	b480      	push	{r7}
 800243e:	b083      	sub	sp, #12
 8002440:	af00      	add	r7, sp, #0
 8002442:	6078      	str	r0, [r7, #4]
 8002444:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8002446:	687b      	ldr	r3, [r7, #4]
 8002448:	683a      	ldr	r2, [r7, #0]
 800244a:	601a      	str	r2, [r3, #0]
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	4618      	mov	r0, r3
 8002450:	370c      	adds	r7, #12
 8002452:	46bd      	mov	sp, r7
 8002454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002458:	4770      	bx	lr

0800245a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800245a:	b590      	push	{r4, r7, lr}
 800245c:	b08d      	sub	sp, #52	; 0x34
 800245e:	af00      	add	r7, sp, #0
 8002460:	60f8      	str	r0, [r7, #12]
 8002462:	60b9      	str	r1, [r7, #8]
 8002464:	607a      	str	r2, [r7, #4]
 8002466:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 8002468:	1d3b      	adds	r3, r7, #4
 800246a:	4618      	mov	r0, r3
 800246c:	f000 fd53 	bl	8002f16 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE13_M_const_castEv>
 8002470:	4603      	mov	r3, r0
 8002472:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8002474:	69bc      	ldr	r4, [r7, #24]
 8002476:	68b8      	ldr	r0, [r7, #8]
 8002478:	f000 fd5e 	bl	8002f38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 800247c:	4603      	mov	r3, r0
 800247e:	429c      	cmp	r4, r3
 8002480:	bf0c      	ite	eq
 8002482:	2301      	moveq	r3, #1
 8002484:	2300      	movne	r3, #0
 8002486:	b2db      	uxtb	r3, r3
 8002488:	2b00      	cmp	r3, #0
 800248a:	d030      	beq.n	80024ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x94>
	  if (size() > 0
 800248c:	68b8      	ldr	r0, [r7, #8]
 800248e:	f000 fd5f 	bl	8002f50 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>
 8002492:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 8002494:	2b00      	cmp	r3, #0
 8002496:	d013      	beq.n	80024c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 8002498:	68bc      	ldr	r4, [r7, #8]
 800249a:	68b8      	ldr	r0, [r7, #8]
 800249c:	f000 fd64 	bl	8002f68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80024a0:	4603      	mov	r3, r0
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	4618      	mov	r0, r3
 80024a6:	f000 fd6b 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80024aa:	4603      	mov	r3, r0
 80024ac:	683a      	ldr	r2, [r7, #0]
 80024ae:	4619      	mov	r1, r3
 80024b0:	4620      	mov	r0, r4
 80024b2:	f000 fd71 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80024b6:	4603      	mov	r3, r0
 80024b8:	2b00      	cmp	r3, #0
 80024ba:	d001      	beq.n	80024c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 80024bc:	2301      	movs	r3, #1
 80024be:	e000      	b.n	80024c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x68>
 80024c0:	2300      	movs	r3, #0
	  if (size() > 0
 80024c2:	2b00      	cmp	r3, #0
 80024c4:	d00c      	beq.n	80024e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x86>
	    return _Res(0, _M_rightmost());
 80024c6:	2300      	movs	r3, #0
 80024c8:	61fb      	str	r3, [r7, #28]
 80024ca:	68b8      	ldr	r0, [r7, #8]
 80024cc:	f000 fd4c 	bl	8002f68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80024d0:	4602      	mov	r2, r0
 80024d2:	f107 031c 	add.w	r3, r7, #28
 80024d6:	4619      	mov	r1, r3
 80024d8:	68f8      	ldr	r0, [r7, #12]
 80024da:	f000 fbdd 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80024de:	e0db      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80024e0:	68fb      	ldr	r3, [r7, #12]
 80024e2:	683a      	ldr	r2, [r7, #0]
 80024e4:	68b9      	ldr	r1, [r7, #8]
 80024e6:	4618      	mov	r0, r3
 80024e8:	f000 fd65 	bl	8002fb6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80024ec:	e0d4      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 80024ee:	68bc      	ldr	r4, [r7, #8]
 80024f0:	69bb      	ldr	r3, [r7, #24]
 80024f2:	4618      	mov	r0, r3
 80024f4:	f000 fd44 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80024f8:	4603      	mov	r3, r0
 80024fa:	461a      	mov	r2, r3
 80024fc:	6839      	ldr	r1, [r7, #0]
 80024fe:	4620      	mov	r0, r4
 8002500:	f000 fd4a 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8002504:	4603      	mov	r3, r0
 8002506:	2b00      	cmp	r3, #0
 8002508:	d057      	beq.n	80025ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x160>
	  iterator __before = __pos;
 800250a:	69bb      	ldr	r3, [r7, #24]
 800250c:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 800250e:	69bc      	ldr	r4, [r7, #24]
 8002510:	68b8      	ldr	r0, [r7, #8]
 8002512:	f000 fdd5 	bl	80030c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8002516:	4603      	mov	r3, r0
 8002518:	681b      	ldr	r3, [r3, #0]
 800251a:	429c      	cmp	r4, r3
 800251c:	bf0c      	ite	eq
 800251e:	2301      	moveq	r3, #1
 8002520:	2300      	movne	r3, #0
 8002522:	b2db      	uxtb	r3, r3
 8002524:	2b00      	cmp	r3, #0
 8002526:	d00d      	beq.n	8002544 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 8002528:	68b8      	ldr	r0, [r7, #8]
 800252a:	f000 fdc9 	bl	80030c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 800252e:	4604      	mov	r4, r0
 8002530:	68b8      	ldr	r0, [r7, #8]
 8002532:	f000 fdc5 	bl	80030c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8002536:	4603      	mov	r3, r0
 8002538:	461a      	mov	r2, r3
 800253a:	4621      	mov	r1, r4
 800253c:	68f8      	ldr	r0, [r7, #12]
 800253e:	f000 fc52 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8002542:	e0a9      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8002544:	68bc      	ldr	r4, [r7, #8]
 8002546:	f107 0314 	add.w	r3, r7, #20
 800254a:	4618      	mov	r0, r3
 800254c:	f000 fdc4 	bl	80030d8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>
 8002550:	4603      	mov	r3, r0
 8002552:	681b      	ldr	r3, [r3, #0]
 8002554:	4618      	mov	r0, r3
 8002556:	f000 fd13 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800255a:	4603      	mov	r3, r0
 800255c:	683a      	ldr	r2, [r7, #0]
 800255e:	4619      	mov	r1, r3
 8002560:	4620      	mov	r0, r4
 8002562:	f000 fd19 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8002566:	4603      	mov	r3, r0
 8002568:	2b00      	cmp	r3, #0
 800256a:	d01f      	beq.n	80025ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x152>
	      if (_S_right(__before._M_node) == 0)
 800256c:	697b      	ldr	r3, [r7, #20]
 800256e:	4618      	mov	r0, r3
 8002570:	f7ff ff3b 	bl	80023ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8002574:	4603      	mov	r3, r0
 8002576:	2b00      	cmp	r3, #0
 8002578:	bf0c      	ite	eq
 800257a:	2301      	moveq	r3, #1
 800257c:	2300      	movne	r3, #0
 800257e:	b2db      	uxtb	r3, r3
 8002580:	2b00      	cmp	r3, #0
 8002582:	d00a      	beq.n	800259a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x140>
		return _Res(0, __before._M_node);
 8002584:	2300      	movs	r3, #0
 8002586:	623b      	str	r3, [r7, #32]
 8002588:	f107 0214 	add.w	r2, r7, #20
 800258c:	f107 0320 	add.w	r3, r7, #32
 8002590:	4619      	mov	r1, r3
 8002592:	68f8      	ldr	r0, [r7, #12]
 8002594:	f000 fb80 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8002598:	e07e      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 800259a:	f107 0218 	add.w	r2, r7, #24
 800259e:	f107 0318 	add.w	r3, r7, #24
 80025a2:	4619      	mov	r1, r3
 80025a4:	68f8      	ldr	r0, [r7, #12]
 80025a6:	f000 fc1e 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80025aa:	e075      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80025ac:	68fb      	ldr	r3, [r7, #12]
 80025ae:	683a      	ldr	r2, [r7, #0]
 80025b0:	68b9      	ldr	r1, [r7, #8]
 80025b2:	4618      	mov	r0, r3
 80025b4:	f000 fcff 	bl	8002fb6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80025b8:	e06e      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 80025ba:	68bc      	ldr	r4, [r7, #8]
 80025bc:	69bb      	ldr	r3, [r7, #24]
 80025be:	4618      	mov	r0, r3
 80025c0:	f000 fcde 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80025c4:	4603      	mov	r3, r0
 80025c6:	683a      	ldr	r2, [r7, #0]
 80025c8:	4619      	mov	r1, r3
 80025ca:	4620      	mov	r0, r4
 80025cc:	f000 fce4 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80025d0:	4603      	mov	r3, r0
 80025d2:	2b00      	cmp	r3, #0
 80025d4:	d056      	beq.n	8002684 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x22a>
	  iterator __after = __pos;
 80025d6:	69bb      	ldr	r3, [r7, #24]
 80025d8:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 80025da:	69bc      	ldr	r4, [r7, #24]
 80025dc:	68b8      	ldr	r0, [r7, #8]
 80025de:	f000 fcc3 	bl	8002f68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80025e2:	4603      	mov	r3, r0
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	429c      	cmp	r4, r3
 80025e8:	bf0c      	ite	eq
 80025ea:	2301      	moveq	r3, #1
 80025ec:	2300      	movne	r3, #0
 80025ee:	b2db      	uxtb	r3, r3
 80025f0:	2b00      	cmp	r3, #0
 80025f2:	d00c      	beq.n	800260e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x1b4>
	    return _Res(0, _M_rightmost());
 80025f4:	2300      	movs	r3, #0
 80025f6:	627b      	str	r3, [r7, #36]	; 0x24
 80025f8:	68b8      	ldr	r0, [r7, #8]
 80025fa:	f000 fcb5 	bl	8002f68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80025fe:	4602      	mov	r2, r0
 8002600:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002604:	4619      	mov	r1, r3
 8002606:	68f8      	ldr	r0, [r7, #12]
 8002608:	f000 fb46 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 800260c:	e044      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 800260e:	68bc      	ldr	r4, [r7, #8]
 8002610:	f107 0310 	add.w	r3, r7, #16
 8002614:	4618      	mov	r0, r3
 8002616:	f000 fd70 	bl	80030fa <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEppEv>
 800261a:	4603      	mov	r3, r0
 800261c:	681b      	ldr	r3, [r3, #0]
 800261e:	4618      	mov	r0, r3
 8002620:	f000 fcae 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8002624:	4603      	mov	r3, r0
 8002626:	461a      	mov	r2, r3
 8002628:	6839      	ldr	r1, [r7, #0]
 800262a:	4620      	mov	r0, r4
 800262c:	f000 fcb4 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8002630:	4603      	mov	r3, r0
 8002632:	2b00      	cmp	r3, #0
 8002634:	d01f      	beq.n	8002676 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 8002636:	69bb      	ldr	r3, [r7, #24]
 8002638:	4618      	mov	r0, r3
 800263a:	f7ff fed6 	bl	80023ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 800263e:	4603      	mov	r3, r0
 8002640:	2b00      	cmp	r3, #0
 8002642:	bf0c      	ite	eq
 8002644:	2301      	moveq	r3, #1
 8002646:	2300      	movne	r3, #0
 8002648:	b2db      	uxtb	r3, r3
 800264a:	2b00      	cmp	r3, #0
 800264c:	d00a      	beq.n	8002664 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x20a>
		return _Res(0, __pos._M_node);
 800264e:	2300      	movs	r3, #0
 8002650:	62bb      	str	r3, [r7, #40]	; 0x28
 8002652:	f107 0218 	add.w	r2, r7, #24
 8002656:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800265a:	4619      	mov	r1, r3
 800265c:	68f8      	ldr	r0, [r7, #12]
 800265e:	f000 fb1b 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8002662:	e019      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8002664:	f107 0210 	add.w	r2, r7, #16
 8002668:	f107 0310 	add.w	r3, r7, #16
 800266c:	4619      	mov	r1, r3
 800266e:	68f8      	ldr	r0, [r7, #12]
 8002670:	f000 fbb9 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8002674:	e010      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8002676:	68fb      	ldr	r3, [r7, #12]
 8002678:	683a      	ldr	r2, [r7, #0]
 800267a:	68b9      	ldr	r1, [r7, #8]
 800267c:	4618      	mov	r0, r3
 800267e:	f000 fc9a 	bl	8002fb6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8002682:	e009      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	return _Res(__pos._M_node, 0);
 8002684:	2300      	movs	r3, #0
 8002686:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002688:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800268c:	f107 0318 	add.w	r3, r7, #24
 8002690:	4619      	mov	r1, r3
 8002692:	68f8      	ldr	r0, [r7, #12]
 8002694:	f000 fbe2 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8002698:	68f8      	ldr	r0, [r7, #12]
 800269a:	3734      	adds	r7, #52	; 0x34
 800269c:	46bd      	mov	sp, r7
 800269e:	bd90      	pop	{r4, r7, pc}

080026a0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>:
      operator()(const _Pair& __x) const
 80026a0:	b480      	push	{r7}
 80026a2:	b083      	sub	sp, #12
 80026a4:	af00      	add	r7, sp, #0
 80026a6:	6078      	str	r0, [r7, #4]
 80026a8:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 80026aa:	683b      	ldr	r3, [r7, #0]
 80026ac:	4618      	mov	r0, r3
 80026ae:	370c      	adds	r7, #12
 80026b0:	46bd      	mov	sp, r7
 80026b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026b6:	4770      	bx	lr

080026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80026b8:	b480      	push	{r7}
 80026ba:	b083      	sub	sp, #12
 80026bc:	af00      	add	r7, sp, #0
 80026be:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	4618      	mov	r0, r3
 80026c4:	370c      	adds	r7, #12
 80026c6:	46bd      	mov	sp, r7
 80026c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026cc:	4770      	bx	lr

080026ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80026ce:	b5b0      	push	{r4, r5, r7, lr}
 80026d0:	b088      	sub	sp, #32
 80026d2:	af00      	add	r7, sp, #0
 80026d4:	60f8      	str	r0, [r7, #12]
 80026d6:	60b9      	str	r1, [r7, #8]
 80026d8:	607a      	str	r2, [r7, #4]
 80026da:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80026dc:	68bb      	ldr	r3, [r7, #8]
 80026de:	2b00      	cmp	r3, #0
 80026e0:	d11a      	bne.n	8002718 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 80026e2:	68f8      	ldr	r0, [r7, #12]
 80026e4:	f000 fc28 	bl	8002f38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 80026e8:	4602      	mov	r2, r0
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	4293      	cmp	r3, r2
 80026ee:	d013      	beq.n	8002718 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80026f0:	68fc      	ldr	r4, [r7, #12]
 80026f2:	f107 0310 	add.w	r3, r7, #16
 80026f6:	6839      	ldr	r1, [r7, #0]
 80026f8:	4618      	mov	r0, r3
 80026fa:	f7ff ffd1 	bl	80026a0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 80026fe:	4605      	mov	r5, r0
 8002700:	6878      	ldr	r0, [r7, #4]
 8002702:	f000 fc3d 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8002706:	4603      	mov	r3, r0
 8002708:	461a      	mov	r2, r3
 800270a:	4629      	mov	r1, r5
 800270c:	4620      	mov	r0, r4
 800270e:	f000 fc43 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8002712:	4603      	mov	r3, r0
 8002714:	2b00      	cmp	r3, #0
 8002716:	d001      	beq.n	800271c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4e>
 8002718:	2301      	movs	r3, #1
 800271a:	e000      	b.n	800271e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x50>
 800271c:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 800271e:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8002720:	6838      	ldr	r0, [r7, #0]
 8002722:	f7ff ffc9 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8002726:	4603      	mov	r3, r0
 8002728:	4619      	mov	r1, r3
 800272a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800272c:	f000 fcf6 	bl	800311c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIRKS9_EEPSt13_Rb_tree_nodeIS9_EOT_>
 8002730:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8002732:	68fb      	ldr	r3, [r7, #12]
 8002734:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8002736:	7ff8      	ldrb	r0, [r7, #31]
 8002738:	687a      	ldr	r2, [r7, #4]
 800273a:	69b9      	ldr	r1, [r7, #24]
 800273c:	f020 faed 	bl	8022d1a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8002740:	68fb      	ldr	r3, [r7, #12]
 8002742:	695b      	ldr	r3, [r3, #20]
 8002744:	1c5a      	adds	r2, r3, #1
 8002746:	68fb      	ldr	r3, [r7, #12]
 8002748:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 800274a:	f107 0314 	add.w	r3, r7, #20
 800274e:	69b9      	ldr	r1, [r7, #24]
 8002750:	4618      	mov	r0, r3
 8002752:	f7ff fe73 	bl	800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8002756:	697b      	ldr	r3, [r7, #20]
      }
 8002758:	4618      	mov	r0, r3
 800275a:	3720      	adds	r7, #32
 800275c:	46bd      	mov	sp, r7
 800275e:	bdb0      	pop	{r4, r5, r7, pc}

08002760 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002760:	b480      	push	{r7}
 8002762:	b083      	sub	sp, #12
 8002764:	af00      	add	r7, sp, #0
 8002766:	6078      	str	r0, [r7, #4]
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	4618      	mov	r0, r3
 800276c:	370c      	adds	r7, #12
 800276e:	46bd      	mov	sp, r7
 8002770:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002774:	4770      	bx	lr

08002776 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002776:	b480      	push	{r7}
 8002778:	b083      	sub	sp, #12
 800277a:	af00      	add	r7, sp, #0
 800277c:	6078      	str	r0, [r7, #4]
 800277e:	687b      	ldr	r3, [r7, #4]
 8002780:	4618      	mov	r0, r3
 8002782:	370c      	adds	r7, #12
 8002784:	46bd      	mov	sp, r7
 8002786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800278a:	4770      	bx	lr

0800278c <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
 800278c:	b480      	push	{r7}
 800278e:	b083      	sub	sp, #12
 8002790:	af00      	add	r7, sp, #0
 8002792:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	4618      	mov	r0, r3
 8002798:	370c      	adds	r7, #12
 800279a:	46bd      	mov	sp, r7
 800279c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027a0:	4770      	bx	lr

080027a2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80027a2:	b580      	push	{r7, lr}
 80027a4:	b082      	sub	sp, #8
 80027a6:	af00      	add	r7, sp, #0
 80027a8:	6078      	str	r0, [r7, #4]
 80027aa:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80027ac:	6839      	ldr	r1, [r7, #0]
 80027ae:	6878      	ldr	r0, [r7, #4]
 80027b0:	f000 fcc8 	bl	8003144 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS7_>
 80027b4:	687b      	ldr	r3, [r7, #4]
 80027b6:	4618      	mov	r0, r3
 80027b8:	3708      	adds	r7, #8
 80027ba:	46bd      	mov	sp, r7
 80027bc:	bd80      	pop	{r7, pc}

080027be <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80027be:	b480      	push	{r7}
 80027c0:	b083      	sub	sp, #12
 80027c2:	af00      	add	r7, sp, #0
 80027c4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	68db      	ldr	r3, [r3, #12]
 80027ca:	4618      	mov	r0, r3
 80027cc:	370c      	adds	r7, #12
 80027ce:	46bd      	mov	sp, r7
 80027d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027d4:	4770      	bx	lr

080027d6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80027d6:	b480      	push	{r7}
 80027d8:	b083      	sub	sp, #12
 80027da:	af00      	add	r7, sp, #0
 80027dc:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 80027de:	687b      	ldr	r3, [r7, #4]
 80027e0:	689b      	ldr	r3, [r3, #8]
 80027e2:	4618      	mov	r0, r3
 80027e4:	370c      	adds	r7, #12
 80027e6:	46bd      	mov	sp, r7
 80027e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027ec:	4770      	bx	lr

080027ee <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80027ee:	b580      	push	{r7, lr}
 80027f0:	b082      	sub	sp, #8
 80027f2:	af00      	add	r7, sp, #0
 80027f4:	6078      	str	r0, [r7, #4]
 80027f6:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 80027f8:	6839      	ldr	r1, [r7, #0]
 80027fa:	6878      	ldr	r0, [r7, #4]
 80027fc:	f000 fcae 	bl	800315c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>
	_M_put_node(__p);
 8002800:	6839      	ldr	r1, [r7, #0]
 8002802:	6878      	ldr	r0, [r7, #4]
 8002804:	f000 fcbf 	bl	8003186 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>
      }
 8002808:	bf00      	nop
 800280a:	3708      	adds	r7, #8
 800280c:	46bd      	mov	sp, r7
 800280e:	bd80      	pop	{r7, pc}

08002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8002810:	b480      	push	{r7}
 8002812:	b083      	sub	sp, #12
 8002814:	af00      	add	r7, sp, #0
 8002816:	6078      	str	r0, [r7, #4]
 8002818:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	683a      	ldr	r2, [r7, #0]
 800281e:	601a      	str	r2, [r3, #0]
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	4618      	mov	r0, r3
 8002824:	370c      	adds	r7, #12
 8002826:	46bd      	mov	sp, r7
 8002828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800282c:	4770      	bx	lr

0800282e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800282e:	b590      	push	{r4, r7, lr}
 8002830:	b08d      	sub	sp, #52	; 0x34
 8002832:	af00      	add	r7, sp, #0
 8002834:	60f8      	str	r0, [r7, #12]
 8002836:	60b9      	str	r1, [r7, #8]
 8002838:	607a      	str	r2, [r7, #4]
 800283a:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 800283c:	1d3b      	adds	r3, r7, #4
 800283e:	4618      	mov	r0, r3
 8002840:	f000 fcb3 	bl	80031aa <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEE13_M_const_castEv>
 8002844:	4603      	mov	r3, r0
 8002846:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8002848:	69bc      	ldr	r4, [r7, #24]
 800284a:	68b8      	ldr	r0, [r7, #8]
 800284c:	f000 fcbe 	bl	80031cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8002850:	4603      	mov	r3, r0
 8002852:	429c      	cmp	r4, r3
 8002854:	bf0c      	ite	eq
 8002856:	2301      	moveq	r3, #1
 8002858:	2300      	movne	r3, #0
 800285a:	b2db      	uxtb	r3, r3
 800285c:	2b00      	cmp	r3, #0
 800285e:	d030      	beq.n	80028c2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x94>
	  if (size() > 0
 8002860:	68b8      	ldr	r0, [r7, #8]
 8002862:	f000 fcbf 	bl	80031e4 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>
 8002866:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 8002868:	2b00      	cmp	r3, #0
 800286a:	d013      	beq.n	8002894 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 800286c:	68bc      	ldr	r4, [r7, #8]
 800286e:	68b8      	ldr	r0, [r7, #8]
 8002870:	f000 fcc4 	bl	80031fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8002874:	4603      	mov	r3, r0
 8002876:	681b      	ldr	r3, [r3, #0]
 8002878:	4618      	mov	r0, r3
 800287a:	f000 fccb 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800287e:	4603      	mov	r3, r0
 8002880:	683a      	ldr	r2, [r7, #0]
 8002882:	4619      	mov	r1, r3
 8002884:	4620      	mov	r0, r4
 8002886:	f000 f9f2 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 800288a:	4603      	mov	r3, r0
 800288c:	2b00      	cmp	r3, #0
 800288e:	d001      	beq.n	8002894 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 8002890:	2301      	movs	r3, #1
 8002892:	e000      	b.n	8002896 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x68>
 8002894:	2300      	movs	r3, #0
	  if (size() > 0
 8002896:	2b00      	cmp	r3, #0
 8002898:	d00c      	beq.n	80028b4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x86>
	    return _Res(0, _M_rightmost());
 800289a:	2300      	movs	r3, #0
 800289c:	61fb      	str	r3, [r7, #28]
 800289e:	68b8      	ldr	r0, [r7, #8]
 80028a0:	f000 fcac 	bl	80031fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80028a4:	4602      	mov	r2, r0
 80028a6:	f107 031c 	add.w	r3, r7, #28
 80028aa:	4619      	mov	r1, r3
 80028ac:	68f8      	ldr	r0, [r7, #12]
 80028ae:	f000 f9f3 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80028b2:	e0db      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80028b4:	68fb      	ldr	r3, [r7, #12]
 80028b6:	683a      	ldr	r2, [r7, #0]
 80028b8:	68b9      	ldr	r1, [r7, #8]
 80028ba:	4618      	mov	r0, r3
 80028bc:	f000 fcb6 	bl	800322c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 80028c0:	e0d4      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 80028c2:	68bc      	ldr	r4, [r7, #8]
 80028c4:	69bb      	ldr	r3, [r7, #24]
 80028c6:	4618      	mov	r0, r3
 80028c8:	f000 fca4 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80028cc:	4603      	mov	r3, r0
 80028ce:	461a      	mov	r2, r3
 80028d0:	6839      	ldr	r1, [r7, #0]
 80028d2:	4620      	mov	r0, r4
 80028d4:	f000 f9cb 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 80028d8:	4603      	mov	r3, r0
 80028da:	2b00      	cmp	r3, #0
 80028dc:	d057      	beq.n	800298e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x160>
	  iterator __before = __pos;
 80028de:	69bb      	ldr	r3, [r7, #24]
 80028e0:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 80028e2:	69bc      	ldr	r4, [r7, #24]
 80028e4:	68b8      	ldr	r0, [r7, #8]
 80028e6:	f000 fd26 	bl	8003336 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 80028ea:	4603      	mov	r3, r0
 80028ec:	681b      	ldr	r3, [r3, #0]
 80028ee:	429c      	cmp	r4, r3
 80028f0:	bf0c      	ite	eq
 80028f2:	2301      	moveq	r3, #1
 80028f4:	2300      	movne	r3, #0
 80028f6:	b2db      	uxtb	r3, r3
 80028f8:	2b00      	cmp	r3, #0
 80028fa:	d00d      	beq.n	8002918 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 80028fc:	68b8      	ldr	r0, [r7, #8]
 80028fe:	f000 fd1a 	bl	8003336 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8002902:	4604      	mov	r4, r0
 8002904:	68b8      	ldr	r0, [r7, #8]
 8002906:	f000 fd16 	bl	8003336 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 800290a:	4603      	mov	r3, r0
 800290c:	461a      	mov	r2, r3
 800290e:	4621      	mov	r1, r4
 8002910:	68f8      	ldr	r0, [r7, #12]
 8002912:	f000 fa68 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8002916:	e0a9      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8002918:	68bc      	ldr	r4, [r7, #8]
 800291a:	f107 0314 	add.w	r3, r7, #20
 800291e:	4618      	mov	r0, r3
 8002920:	f000 fd15 	bl	800334e <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>
 8002924:	4603      	mov	r3, r0
 8002926:	681b      	ldr	r3, [r3, #0]
 8002928:	4618      	mov	r0, r3
 800292a:	f000 fc73 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800292e:	4603      	mov	r3, r0
 8002930:	683a      	ldr	r2, [r7, #0]
 8002932:	4619      	mov	r1, r3
 8002934:	4620      	mov	r0, r4
 8002936:	f000 f99a 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 800293a:	4603      	mov	r3, r0
 800293c:	2b00      	cmp	r3, #0
 800293e:	d01f      	beq.n	8002980 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8002940:	697b      	ldr	r3, [r7, #20]
 8002942:	4618      	mov	r0, r3
 8002944:	f7ff ff3b 	bl	80027be <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8002948:	4603      	mov	r3, r0
 800294a:	2b00      	cmp	r3, #0
 800294c:	bf0c      	ite	eq
 800294e:	2301      	moveq	r3, #1
 8002950:	2300      	movne	r3, #0
 8002952:	b2db      	uxtb	r3, r3
 8002954:	2b00      	cmp	r3, #0
 8002956:	d00a      	beq.n	800296e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x140>
		return _Res(0, __before._M_node);
 8002958:	2300      	movs	r3, #0
 800295a:	623b      	str	r3, [r7, #32]
 800295c:	f107 0214 	add.w	r2, r7, #20
 8002960:	f107 0320 	add.w	r3, r7, #32
 8002964:	4619      	mov	r1, r3
 8002966:	68f8      	ldr	r0, [r7, #12]
 8002968:	f000 f996 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 800296c:	e07e      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 800296e:	f107 0218 	add.w	r2, r7, #24
 8002972:	f107 0318 	add.w	r3, r7, #24
 8002976:	4619      	mov	r1, r3
 8002978:	68f8      	ldr	r0, [r7, #12]
 800297a:	f000 fa34 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 800297e:	e075      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8002980:	68fb      	ldr	r3, [r7, #12]
 8002982:	683a      	ldr	r2, [r7, #0]
 8002984:	68b9      	ldr	r1, [r7, #8]
 8002986:	4618      	mov	r0, r3
 8002988:	f000 fc50 	bl	800322c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 800298c:	e06e      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 800298e:	68bc      	ldr	r4, [r7, #8]
 8002990:	69bb      	ldr	r3, [r7, #24]
 8002992:	4618      	mov	r0, r3
 8002994:	f000 fc3e 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8002998:	4603      	mov	r3, r0
 800299a:	683a      	ldr	r2, [r7, #0]
 800299c:	4619      	mov	r1, r3
 800299e:	4620      	mov	r0, r4
 80029a0:	f000 f965 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 80029a4:	4603      	mov	r3, r0
 80029a6:	2b00      	cmp	r3, #0
 80029a8:	d056      	beq.n	8002a58 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x22a>
	  iterator __after = __pos;
 80029aa:	69bb      	ldr	r3, [r7, #24]
 80029ac:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 80029ae:	69bc      	ldr	r4, [r7, #24]
 80029b0:	68b8      	ldr	r0, [r7, #8]
 80029b2:	f000 fc23 	bl	80031fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80029b6:	4603      	mov	r3, r0
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	429c      	cmp	r4, r3
 80029bc:	bf0c      	ite	eq
 80029be:	2301      	moveq	r3, #1
 80029c0:	2300      	movne	r3, #0
 80029c2:	b2db      	uxtb	r3, r3
 80029c4:	2b00      	cmp	r3, #0
 80029c6:	d00c      	beq.n	80029e2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x1b4>
	    return _Res(0, _M_rightmost());
 80029c8:	2300      	movs	r3, #0
 80029ca:	627b      	str	r3, [r7, #36]	; 0x24
 80029cc:	68b8      	ldr	r0, [r7, #8]
 80029ce:	f000 fc15 	bl	80031fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80029d2:	4602      	mov	r2, r0
 80029d4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80029d8:	4619      	mov	r1, r3
 80029da:	68f8      	ldr	r0, [r7, #12]
 80029dc:	f000 f95c 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80029e0:	e044      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 80029e2:	68bc      	ldr	r4, [r7, #8]
 80029e4:	f107 0310 	add.w	r3, r7, #16
 80029e8:	4618      	mov	r0, r3
 80029ea:	f000 fcc1 	bl	8003370 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEppEv>
 80029ee:	4603      	mov	r3, r0
 80029f0:	681b      	ldr	r3, [r3, #0]
 80029f2:	4618      	mov	r0, r3
 80029f4:	f000 fc0e 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80029f8:	4603      	mov	r3, r0
 80029fa:	461a      	mov	r2, r3
 80029fc:	6839      	ldr	r1, [r7, #0]
 80029fe:	4620      	mov	r0, r4
 8002a00:	f000 f935 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002a04:	4603      	mov	r3, r0
 8002a06:	2b00      	cmp	r3, #0
 8002a08:	d01f      	beq.n	8002a4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 8002a0a:	69bb      	ldr	r3, [r7, #24]
 8002a0c:	4618      	mov	r0, r3
 8002a0e:	f7ff fed6 	bl	80027be <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8002a12:	4603      	mov	r3, r0
 8002a14:	2b00      	cmp	r3, #0
 8002a16:	bf0c      	ite	eq
 8002a18:	2301      	moveq	r3, #1
 8002a1a:	2300      	movne	r3, #0
 8002a1c:	b2db      	uxtb	r3, r3
 8002a1e:	2b00      	cmp	r3, #0
 8002a20:	d00a      	beq.n	8002a38 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x20a>
		return _Res(0, __pos._M_node);
 8002a22:	2300      	movs	r3, #0
 8002a24:	62bb      	str	r3, [r7, #40]	; 0x28
 8002a26:	f107 0218 	add.w	r2, r7, #24
 8002a2a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002a2e:	4619      	mov	r1, r3
 8002a30:	68f8      	ldr	r0, [r7, #12]
 8002a32:	f000 f931 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8002a36:	e019      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8002a38:	f107 0210 	add.w	r2, r7, #16
 8002a3c:	f107 0310 	add.w	r3, r7, #16
 8002a40:	4619      	mov	r1, r3
 8002a42:	68f8      	ldr	r0, [r7, #12]
 8002a44:	f000 f9cf 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8002a48:	e010      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8002a4a:	68fb      	ldr	r3, [r7, #12]
 8002a4c:	683a      	ldr	r2, [r7, #0]
 8002a4e:	68b9      	ldr	r1, [r7, #8]
 8002a50:	4618      	mov	r0, r3
 8002a52:	f000 fbeb 	bl	800322c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8002a56:	e009      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	return _Res(__pos._M_node, 0);
 8002a58:	2300      	movs	r3, #0
 8002a5a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002a5c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8002a60:	f107 0318 	add.w	r3, r7, #24
 8002a64:	4619      	mov	r1, r3
 8002a66:	68f8      	ldr	r0, [r7, #12]
 8002a68:	f000 f9f8 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8002a6c:	68f8      	ldr	r0, [r7, #12]
 8002a6e:	3734      	adds	r7, #52	; 0x34
 8002a70:	46bd      	mov	sp, r7
 8002a72:	bd90      	pop	{r4, r7, pc}

08002a74 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>:
      operator()(const _Pair& __x) const
 8002a74:	b480      	push	{r7}
 8002a76:	b083      	sub	sp, #12
 8002a78:	af00      	add	r7, sp, #0
 8002a7a:	6078      	str	r0, [r7, #4]
 8002a7c:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8002a7e:	683b      	ldr	r3, [r7, #0]
 8002a80:	4618      	mov	r0, r3
 8002a82:	370c      	adds	r7, #12
 8002a84:	46bd      	mov	sp, r7
 8002a86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a8a:	4770      	bx	lr

08002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8002a8c:	b480      	push	{r7}
 8002a8e:	b083      	sub	sp, #12
 8002a90:	af00      	add	r7, sp, #0
 8002a92:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	4618      	mov	r0, r3
 8002a98:	370c      	adds	r7, #12
 8002a9a:	46bd      	mov	sp, r7
 8002a9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002aa0:	4770      	bx	lr

08002aa2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8002aa2:	b5b0      	push	{r4, r5, r7, lr}
 8002aa4:	b088      	sub	sp, #32
 8002aa6:	af00      	add	r7, sp, #0
 8002aa8:	60f8      	str	r0, [r7, #12]
 8002aaa:	60b9      	str	r1, [r7, #8]
 8002aac:	607a      	str	r2, [r7, #4]
 8002aae:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8002ab0:	68bb      	ldr	r3, [r7, #8]
 8002ab2:	2b00      	cmp	r3, #0
 8002ab4:	d11a      	bne.n	8002aec <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8002ab6:	68f8      	ldr	r0, [r7, #12]
 8002ab8:	f000 fb88 	bl	80031cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8002abc:	4602      	mov	r2, r0
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	4293      	cmp	r3, r2
 8002ac2:	d013      	beq.n	8002aec <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8002ac4:	68fc      	ldr	r4, [r7, #12]
 8002ac6:	f107 0310 	add.w	r3, r7, #16
 8002aca:	6839      	ldr	r1, [r7, #0]
 8002acc:	4618      	mov	r0, r3
 8002ace:	f7ff ffd1 	bl	8002a74 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 8002ad2:	4605      	mov	r5, r0
 8002ad4:	6878      	ldr	r0, [r7, #4]
 8002ad6:	f000 fb9d 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8002ada:	4603      	mov	r3, r0
 8002adc:	461a      	mov	r2, r3
 8002ade:	4629      	mov	r1, r5
 8002ae0:	4620      	mov	r0, r4
 8002ae2:	f000 f8c4 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002ae6:	4603      	mov	r3, r0
 8002ae8:	2b00      	cmp	r3, #0
 8002aea:	d001      	beq.n	8002af0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4e>
 8002aec:	2301      	movs	r3, #1
 8002aee:	e000      	b.n	8002af2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x50>
 8002af0:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8002af2:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8002af4:	6838      	ldr	r0, [r7, #0]
 8002af6:	f7ff ffc9 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8002afa:	4603      	mov	r3, r0
 8002afc:	4619      	mov	r1, r3
 8002afe:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8002b00:	f000 fc47 	bl	8003392 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>
 8002b04:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8002b06:	68fb      	ldr	r3, [r7, #12]
 8002b08:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8002b0a:	7ff8      	ldrb	r0, [r7, #31]
 8002b0c:	687a      	ldr	r2, [r7, #4]
 8002b0e:	69b9      	ldr	r1, [r7, #24]
 8002b10:	f020 f903 	bl	8022d1a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8002b14:	68fb      	ldr	r3, [r7, #12]
 8002b16:	695b      	ldr	r3, [r3, #20]
 8002b18:	1c5a      	adds	r2, r3, #1
 8002b1a:	68fb      	ldr	r3, [r7, #12]
 8002b1c:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 8002b1e:	f107 0314 	add.w	r3, r7, #20
 8002b22:	69b9      	ldr	r1, [r7, #24]
 8002b24:	4618      	mov	r0, r3
 8002b26:	f7ff fe73 	bl	8002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8002b2a:	697b      	ldr	r3, [r7, #20]
      }
 8002b2c:	4618      	mov	r0, r3
 8002b2e:	3720      	adds	r7, #32
 8002b30:	46bd      	mov	sp, r7
 8002b32:	bdb0      	pop	{r4, r5, r7, pc}

08002b34 <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_>:


  // For use in string and vstring.
  template<typename _Type>
    inline bool
    __is_null_pointer(_Type* __ptr)
 8002b34:	b480      	push	{r7}
 8002b36:	b083      	sub	sp, #12
 8002b38:	af00      	add	r7, sp, #0
 8002b3a:	6078      	str	r0, [r7, #4]
    { return __ptr == 0; }
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	2b00      	cmp	r3, #0
 8002b40:	bf0c      	ite	eq
 8002b42:	2301      	moveq	r3, #1
 8002b44:	2300      	movne	r3, #0
 8002b46:	b2db      	uxtb	r3, r3
 8002b48:	4618      	mov	r0, r3
 8002b4a:	370c      	adds	r7, #12
 8002b4c:	46bd      	mov	sp, r7
 8002b4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b52:	4770      	bx	lr

08002b54 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
 8002b54:	b480      	push	{r7}
 8002b56:	b083      	sub	sp, #12
 8002b58:	af00      	add	r7, sp, #0
 8002b5a:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 8002b5c:	4618      	mov	r0, r3
 8002b5e:	370c      	adds	r7, #12
 8002b60:	46bd      	mov	sp, r7
 8002b62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b66:	4770      	bx	lr

08002b68 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 8002b68:	b480      	push	{r7}
 8002b6a:	b085      	sub	sp, #20
 8002b6c:	af00      	add	r7, sp, #0
 8002b6e:	60f8      	str	r0, [r7, #12]
 8002b70:	60b9      	str	r1, [r7, #8]
 8002b72:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 8002b74:	68ba      	ldr	r2, [r7, #8]
 8002b76:	68fb      	ldr	r3, [r7, #12]
 8002b78:	1ad3      	subs	r3, r2, r3
    }
 8002b7a:	4618      	mov	r0, r3
 8002b7c:	3714      	adds	r7, #20
 8002b7e:	46bd      	mov	sp, r7
 8002b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b84:	4770      	bx	lr

08002b86 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS7_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 8002b86:	b480      	push	{r7}
 8002b88:	b083      	sub	sp, #12
 8002b8a:	af00      	add	r7, sp, #0
 8002b8c:	6078      	str	r0, [r7, #4]
 8002b8e:	6039      	str	r1, [r7, #0]
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	4618      	mov	r0, r3
 8002b94:	370c      	adds	r7, #12
 8002b96:	46bd      	mov	sp, r7
 8002b98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b9c:	4770      	bx	lr

08002b9e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8002b9e:	b590      	push	{r4, r7, lr}
 8002ba0:	b083      	sub	sp, #12
 8002ba2:	af00      	add	r7, sp, #0
 8002ba4:	6078      	str	r0, [r7, #4]
 8002ba6:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8002ba8:	6878      	ldr	r0, [r7, #4]
 8002baa:	f000 fc06 	bl	80033ba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8002bae:	4604      	mov	r4, r0
 8002bb0:	6838      	ldr	r0, [r7, #0]
 8002bb2:	f000 fc0d 	bl	80033d0 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 8002bb6:	4603      	mov	r3, r0
 8002bb8:	4619      	mov	r1, r3
 8002bba:	4620      	mov	r0, r4
 8002bbc:	f000 fc16 	bl	80033ec <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE7destroyIS4_EEvRS6_PT_>
      }
 8002bc0:	bf00      	nop
 8002bc2:	370c      	adds	r7, #12
 8002bc4:	46bd      	mov	sp, r7
 8002bc6:	bd90      	pop	{r4, r7, pc}

08002bc8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8002bc8:	b580      	push	{r7, lr}
 8002bca:	b082      	sub	sp, #8
 8002bcc:	af00      	add	r7, sp, #0
 8002bce:	6078      	str	r0, [r7, #4]
 8002bd0:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8002bd2:	6878      	ldr	r0, [r7, #4]
 8002bd4:	f000 fbf1 	bl	80033ba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8002bd8:	4603      	mov	r3, r0
 8002bda:	2201      	movs	r2, #1
 8002bdc:	6839      	ldr	r1, [r7, #0]
 8002bde:	4618      	mov	r0, r3
 8002be0:	f000 fc11 	bl	8003406 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE10deallocateERS6_PS5_j>
 8002be4:	bf00      	nop
 8002be6:	3708      	adds	r7, #8
 8002be8:	46bd      	mov	sp, r7
 8002bea:	bd80      	pop	{r7, pc}

08002bec <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8002bec:	b580      	push	{r7, lr}
 8002bee:	b084      	sub	sp, #16
 8002bf0:	af00      	add	r7, sp, #0
 8002bf2:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8002bf4:	687b      	ldr	r3, [r7, #4]
 8002bf6:	681a      	ldr	r2, [r3, #0]
 8002bf8:	f107 030c 	add.w	r3, r7, #12
 8002bfc:	4611      	mov	r1, r2
 8002bfe:	4618      	mov	r0, r3
 8002c00:	f7ff fa26 	bl	8002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8002c04:	68fb      	ldr	r3, [r7, #12]
 8002c06:	4618      	mov	r0, r3
 8002c08:	3710      	adds	r7, #16
 8002c0a:	46bd      	mov	sp, r7
 8002c0c:	bd80      	pop	{r7, pc}

08002c0e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8002c0e:	b480      	push	{r7}
 8002c10:	b083      	sub	sp, #12
 8002c12:	af00      	add	r7, sp, #0
 8002c14:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	3304      	adds	r3, #4
 8002c1a:	4618      	mov	r0, r3
 8002c1c:	370c      	adds	r7, #12
 8002c1e:	46bd      	mov	sp, r7
 8002c20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c24:	4770      	bx	lr

08002c26 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8002c26:	b480      	push	{r7}
 8002c28:	b083      	sub	sp, #12
 8002c2a:	af00      	add	r7, sp, #0
 8002c2c:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	695b      	ldr	r3, [r3, #20]
 8002c32:	4618      	mov	r0, r3
 8002c34:	370c      	adds	r7, #12
 8002c36:	46bd      	mov	sp, r7
 8002c38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c3c:	4770      	bx	lr

08002c3e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8002c3e:	b480      	push	{r7}
 8002c40:	b083      	sub	sp, #12
 8002c42:	af00      	add	r7, sp, #0
 8002c44:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	3310      	adds	r3, #16
 8002c4a:	4618      	mov	r0, r3
 8002c4c:	370c      	adds	r7, #12
 8002c4e:	46bd      	mov	sp, r7
 8002c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c54:	4770      	bx	lr

08002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8002c56:	b580      	push	{r7, lr}
 8002c58:	b082      	sub	sp, #8
 8002c5a:	af00      	add	r7, sp, #0
 8002c5c:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8002c5e:	6878      	ldr	r0, [r7, #4]
 8002c60:	f000 fbe0 	bl	8003424 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8002c64:	4603      	mov	r3, r0
 8002c66:	4618      	mov	r0, r3
 8002c68:	3708      	adds	r7, #8
 8002c6a:	46bd      	mov	sp, r7
 8002c6c:	bd80      	pop	{r7, pc}

08002c6e <_ZNKSt4lessIcEclERKcS2_>:
      operator()(const _Tp& __x, const _Tp& __y) const
 8002c6e:	b480      	push	{r7}
 8002c70:	b085      	sub	sp, #20
 8002c72:	af00      	add	r7, sp, #0
 8002c74:	60f8      	str	r0, [r7, #12]
 8002c76:	60b9      	str	r1, [r7, #8]
 8002c78:	607a      	str	r2, [r7, #4]
      { return __x < __y; }
 8002c7a:	68bb      	ldr	r3, [r7, #8]
 8002c7c:	781a      	ldrb	r2, [r3, #0]
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	781b      	ldrb	r3, [r3, #0]
 8002c82:	429a      	cmp	r2, r3
 8002c84:	bf34      	ite	cc
 8002c86:	2301      	movcc	r3, #1
 8002c88:	2300      	movcs	r3, #0
 8002c8a:	b2db      	uxtb	r3, r3
 8002c8c:	4618      	mov	r0, r3
 8002c8e:	3714      	adds	r7, #20
 8002c90:	46bd      	mov	sp, r7
 8002c92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c96:	4770      	bx	lr

08002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>:
       constexpr pair(const _T1& __x, _U2&& __y)
 8002c98:	b580      	push	{r7, lr}
 8002c9a:	b084      	sub	sp, #16
 8002c9c:	af00      	add	r7, sp, #0
 8002c9e:	60f8      	str	r0, [r7, #12]
 8002ca0:	60b9      	str	r1, [r7, #8]
 8002ca2:	607a      	str	r2, [r7, #4]
       : first(__x), second(std::forward<_U2>(__y)) { }
 8002ca4:	68bb      	ldr	r3, [r7, #8]
 8002ca6:	681a      	ldr	r2, [r3, #0]
 8002ca8:	68fb      	ldr	r3, [r7, #12]
 8002caa:	601a      	str	r2, [r3, #0]
 8002cac:	6878      	ldr	r0, [r7, #4]
 8002cae:	f000 fbcc 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8002cb2:	4603      	mov	r3, r0
 8002cb4:	681a      	ldr	r2, [r3, #0]
 8002cb6:	68fb      	ldr	r3, [r7, #12]
 8002cb8:	605a      	str	r2, [r3, #4]
 8002cba:	68fb      	ldr	r3, [r7, #12]
 8002cbc:	4618      	mov	r0, r3
 8002cbe:	3710      	adds	r7, #16
 8002cc0:	46bd      	mov	sp, r7
 8002cc2:	bd80      	pop	{r7, pc}

08002cc4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8002cc4:	b590      	push	{r4, r7, lr}
 8002cc6:	b08b      	sub	sp, #44	; 0x2c
 8002cc8:	af00      	add	r7, sp, #0
 8002cca:	60f8      	str	r0, [r7, #12]
 8002ccc:	60b9      	str	r1, [r7, #8]
 8002cce:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8002cd0:	68b8      	ldr	r0, [r7, #8]
 8002cd2:	f7fe fec9 	bl	8001a68 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8002cd6:	4603      	mov	r3, r0
 8002cd8:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8002cda:	68b8      	ldr	r0, [r7, #8]
 8002cdc:	f7ff ff97 	bl	8002c0e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8002ce0:	4603      	mov	r3, r0
 8002ce2:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8002ce4:	2301      	movs	r3, #1
 8002ce6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8002cea:	69bb      	ldr	r3, [r7, #24]
 8002cec:	2b00      	cmp	r3, #0
 8002cee:	d020      	beq.n	8002d32 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6e>
	  __y = __x;
 8002cf0:	69bb      	ldr	r3, [r7, #24]
 8002cf2:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8002cf4:	68bc      	ldr	r4, [r7, #8]
 8002cf6:	69bb      	ldr	r3, [r7, #24]
 8002cf8:	4618      	mov	r0, r3
 8002cfa:	f000 fb93 	bl	8003424 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8002cfe:	4603      	mov	r3, r0
 8002d00:	461a      	mov	r2, r3
 8002d02:	6879      	ldr	r1, [r7, #4]
 8002d04:	4620      	mov	r0, r4
 8002d06:	f7ff ffb2 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002d0a:	4603      	mov	r3, r0
 8002d0c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8002d10:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002d14:	2b00      	cmp	r3, #0
 8002d16:	d005      	beq.n	8002d24 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x60>
 8002d18:	69bb      	ldr	r3, [r7, #24]
 8002d1a:	4618      	mov	r0, r3
 8002d1c:	f7ff f97b 	bl	8002016 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8002d20:	4603      	mov	r3, r0
 8002d22:	e004      	b.n	8002d2e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6a>
 8002d24:	69bb      	ldr	r3, [r7, #24]
 8002d26:	4618      	mov	r0, r3
 8002d28:	f7ff f969 	bl	8001ffe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8002d2c:	4603      	mov	r3, r0
 8002d2e:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8002d30:	e7db      	b.n	8002cea <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x26>
      iterator __j = iterator(__y);
 8002d32:	697a      	ldr	r2, [r7, #20]
 8002d34:	f107 0310 	add.w	r3, r7, #16
 8002d38:	4611      	mov	r1, r2
 8002d3a:	4618      	mov	r0, r3
 8002d3c:	f7ff f988 	bl	8002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8002d40:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002d44:	2b00      	cmp	r3, #0
 8002d46:	d01d      	beq.n	8002d84 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xc0>
	  if (__j == begin())
 8002d48:	68b8      	ldr	r0, [r7, #8]
 8002d4a:	f000 fb89 	bl	8003460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>
 8002d4e:	4603      	mov	r3, r0
 8002d50:	61fb      	str	r3, [r7, #28]
 8002d52:	f107 021c 	add.w	r2, r7, #28
 8002d56:	f107 0310 	add.w	r3, r7, #16
 8002d5a:	4611      	mov	r1, r2
 8002d5c:	4618      	mov	r0, r3
 8002d5e:	f000 fb90 	bl	8003482 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc10token_typeEES6_>
 8002d62:	4603      	mov	r3, r0
 8002d64:	2b00      	cmp	r3, #0
 8002d66:	d008      	beq.n	8002d7a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xb6>
	    return _Res(__x, __y);
 8002d68:	f107 0214 	add.w	r2, r7, #20
 8002d6c:	f107 0318 	add.w	r3, r7, #24
 8002d70:	4619      	mov	r1, r3
 8002d72:	68f8      	ldr	r0, [r7, #12]
 8002d74:	f000 fb99 	bl	80034aa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>
 8002d78:	e025      	b.n	8002dc6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
	    --__j;
 8002d7a:	f107 0310 	add.w	r3, r7, #16
 8002d7e:	4618      	mov	r0, r3
 8002d80:	f000 f84a 	bl	8002e18 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8002d84:	68bc      	ldr	r4, [r7, #8]
 8002d86:	693b      	ldr	r3, [r7, #16]
 8002d88:	4618      	mov	r0, r3
 8002d8a:	f7ff ff64 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8002d8e:	4603      	mov	r3, r0
 8002d90:	687a      	ldr	r2, [r7, #4]
 8002d92:	4619      	mov	r1, r3
 8002d94:	4620      	mov	r0, r4
 8002d96:	f7ff ff6a 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002d9a:	4603      	mov	r3, r0
 8002d9c:	2b00      	cmp	r3, #0
 8002d9e:	d008      	beq.n	8002db2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xee>
	return _Res(__x, __y);
 8002da0:	f107 0214 	add.w	r2, r7, #20
 8002da4:	f107 0318 	add.w	r3, r7, #24
 8002da8:	4619      	mov	r1, r3
 8002daa:	68f8      	ldr	r0, [r7, #12]
 8002dac:	f000 fb7d 	bl	80034aa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>
 8002db0:	e009      	b.n	8002dc6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
      return _Res(__j._M_node, 0);
 8002db2:	2300      	movs	r3, #0
 8002db4:	623b      	str	r3, [r7, #32]
 8002db6:	f107 0220 	add.w	r2, r7, #32
 8002dba:	f107 0310 	add.w	r3, r7, #16
 8002dbe:	4619      	mov	r1, r3
 8002dc0:	68f8      	ldr	r0, [r7, #12]
 8002dc2:	f000 f84b 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8002dc6:	68f8      	ldr	r0, [r7, #12]
 8002dc8:	372c      	adds	r7, #44	; 0x2c
 8002dca:	46bd      	mov	sp, r7
 8002dcc:	bd90      	pop	{r4, r7, pc}

08002dce <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8002dce:	b480      	push	{r7}
 8002dd0:	b083      	sub	sp, #12
 8002dd2:	af00      	add	r7, sp, #0
 8002dd4:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 8002dd6:	687b      	ldr	r3, [r7, #4]
 8002dd8:	330c      	adds	r3, #12
 8002dda:	4618      	mov	r0, r3
 8002ddc:	370c      	adds	r7, #12
 8002dde:	46bd      	mov	sp, r7
 8002de0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002de4:	4770      	bx	lr

08002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8002de6:	b580      	push	{r7, lr}
 8002de8:	b084      	sub	sp, #16
 8002dea:	af00      	add	r7, sp, #0
 8002dec:	60f8      	str	r0, [r7, #12]
 8002dee:	60b9      	str	r1, [r7, #8]
 8002df0:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8002df2:	68b8      	ldr	r0, [r7, #8]
 8002df4:	f000 fb29 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8002df8:	4603      	mov	r3, r0
 8002dfa:	681a      	ldr	r2, [r3, #0]
 8002dfc:	68fb      	ldr	r3, [r7, #12]
 8002dfe:	601a      	str	r2, [r3, #0]
 8002e00:	6878      	ldr	r0, [r7, #4]
 8002e02:	f000 fb22 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8002e06:	4603      	mov	r3, r0
 8002e08:	681a      	ldr	r2, [r3, #0]
 8002e0a:	68fb      	ldr	r3, [r7, #12]
 8002e0c:	605a      	str	r2, [r3, #4]
 8002e0e:	68fb      	ldr	r3, [r7, #12]
 8002e10:	4618      	mov	r0, r3
 8002e12:	3710      	adds	r7, #16
 8002e14:	46bd      	mov	sp, r7
 8002e16:	bd80      	pop	{r7, pc}

08002e18 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8002e18:	b580      	push	{r7, lr}
 8002e1a:	b082      	sub	sp, #8
 8002e1c:	af00      	add	r7, sp, #0
 8002e1e:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	681b      	ldr	r3, [r3, #0]
 8002e24:	4618      	mov	r0, r3
 8002e26:	f01f ff76 	bl	8022d16 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8002e2a:	4602      	mov	r2, r0
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	601a      	str	r2, [r3, #0]
	return *this;
 8002e30:	687b      	ldr	r3, [r7, #4]
      }
 8002e32:	4618      	mov	r0, r3
 8002e34:	3708      	adds	r7, #8
 8002e36:	46bd      	mov	sp, r7
 8002e38:	bd80      	pop	{r7, pc}

08002e3a <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8002e3a:	b580      	push	{r7, lr}
 8002e3c:	b082      	sub	sp, #8
 8002e3e:	af00      	add	r7, sp, #0
 8002e40:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	681b      	ldr	r3, [r3, #0]
 8002e46:	4618      	mov	r0, r3
 8002e48:	f01f ff52 	bl	8022cf0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8002e4c:	4602      	mov	r2, r0
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	601a      	str	r2, [r3, #0]
	return *this;
 8002e52:	687b      	ldr	r3, [r7, #4]
      }
 8002e54:	4618      	mov	r0, r3
 8002e56:	3708      	adds	r7, #8
 8002e58:	46bd      	mov	sp, r7
 8002e5a:	bd80      	pop	{r7, pc}

08002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 8002e5c:	b580      	push	{r7, lr}
 8002e5e:	b084      	sub	sp, #16
 8002e60:	af00      	add	r7, sp, #0
 8002e62:	60f8      	str	r0, [r7, #12]
 8002e64:	60b9      	str	r1, [r7, #8]
 8002e66:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 8002e68:	68b8      	ldr	r0, [r7, #8]
 8002e6a:	f000 faee 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8002e6e:	4603      	mov	r3, r0
 8002e70:	681a      	ldr	r2, [r3, #0]
 8002e72:	68fb      	ldr	r3, [r7, #12]
 8002e74:	601a      	str	r2, [r3, #0]
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	681a      	ldr	r2, [r3, #0]
 8002e7a:	68fb      	ldr	r3, [r7, #12]
 8002e7c:	605a      	str	r2, [r3, #4]
 8002e7e:	68fb      	ldr	r3, [r7, #12]
 8002e80:	4618      	mov	r0, r3
 8002e82:	3710      	adds	r7, #16
 8002e84:	46bd      	mov	sp, r7
 8002e86:	bd80      	pop	{r7, pc}

08002e88 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>:
	  operator()(_Arg&& __arg) const
 8002e88:	b590      	push	{r4, r7, lr}
 8002e8a:	b083      	sub	sp, #12
 8002e8c:	af00      	add	r7, sp, #0
 8002e8e:	6078      	str	r0, [r7, #4]
 8002e90:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	681c      	ldr	r4, [r3, #0]
 8002e96:	6838      	ldr	r0, [r7, #0]
 8002e98:	f7ff fa18 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8002e9c:	4603      	mov	r3, r0
 8002e9e:	4619      	mov	r1, r3
 8002ea0:	4620      	mov	r0, r4
 8002ea2:	f000 fb1b 	bl	80034dc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>
 8002ea6:	4603      	mov	r3, r0
 8002ea8:	4618      	mov	r0, r3
 8002eaa:	370c      	adds	r7, #12
 8002eac:	46bd      	mov	sp, r7
 8002eae:	bd90      	pop	{r4, r7, pc}

08002eb0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSD_>:
 8002eb0:	b480      	push	{r7}
 8002eb2:	b083      	sub	sp, #12
 8002eb4:	af00      	add	r7, sp, #0
 8002eb6:	6078      	str	r0, [r7, #4]
 8002eb8:	6039      	str	r1, [r7, #0]
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	4618      	mov	r0, r3
 8002ebe:	370c      	adds	r7, #12
 8002ec0:	46bd      	mov	sp, r7
 8002ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ec6:	4770      	bx	lr

08002ec8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8002ec8:	b590      	push	{r4, r7, lr}
 8002eca:	b083      	sub	sp, #12
 8002ecc:	af00      	add	r7, sp, #0
 8002ece:	6078      	str	r0, [r7, #4]
 8002ed0:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8002ed2:	6878      	ldr	r0, [r7, #4]
 8002ed4:	f000 fb19 	bl	800350a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8002ed8:	4604      	mov	r4, r0
 8002eda:	6838      	ldr	r0, [r7, #0]
 8002edc:	f000 fb20 	bl	8003520 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8002ee0:	4603      	mov	r3, r0
 8002ee2:	4619      	mov	r1, r3
 8002ee4:	4620      	mov	r0, r4
 8002ee6:	f000 fb29 	bl	800353c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE7destroyISA_EEvRSC_PT_>
      }
 8002eea:	bf00      	nop
 8002eec:	370c      	adds	r7, #12
 8002eee:	46bd      	mov	sp, r7
 8002ef0:	bd90      	pop	{r4, r7, pc}

08002ef2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8002ef2:	b580      	push	{r7, lr}
 8002ef4:	b082      	sub	sp, #8
 8002ef6:	af00      	add	r7, sp, #0
 8002ef8:	6078      	str	r0, [r7, #4]
 8002efa:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8002efc:	6878      	ldr	r0, [r7, #4]
 8002efe:	f000 fb04 	bl	800350a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8002f02:	4603      	mov	r3, r0
 8002f04:	2201      	movs	r2, #1
 8002f06:	6839      	ldr	r1, [r7, #0]
 8002f08:	4618      	mov	r0, r3
 8002f0a:	f000 fb24 	bl	8003556 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE10deallocateERSC_PSB_j>
 8002f0e:	bf00      	nop
 8002f10:	3708      	adds	r7, #8
 8002f12:	46bd      	mov	sp, r7
 8002f14:	bd80      	pop	{r7, pc}

08002f16 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8002f16:	b580      	push	{r7, lr}
 8002f18:	b084      	sub	sp, #16
 8002f1a:	af00      	add	r7, sp, #0
 8002f1c:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	681a      	ldr	r2, [r3, #0]
 8002f22:	f107 030c 	add.w	r3, r7, #12
 8002f26:	4611      	mov	r1, r2
 8002f28:	4618      	mov	r0, r3
 8002f2a:	f7ff fa87 	bl	800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8002f2e:	68fb      	ldr	r3, [r7, #12]
 8002f30:	4618      	mov	r0, r3
 8002f32:	3710      	adds	r7, #16
 8002f34:	46bd      	mov	sp, r7
 8002f36:	bd80      	pop	{r7, pc}

08002f38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8002f38:	b480      	push	{r7}
 8002f3a:	b083      	sub	sp, #12
 8002f3c:	af00      	add	r7, sp, #0
 8002f3e:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	3304      	adds	r3, #4
 8002f44:	4618      	mov	r0, r3
 8002f46:	370c      	adds	r7, #12
 8002f48:	46bd      	mov	sp, r7
 8002f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f4e:	4770      	bx	lr

08002f50 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8002f50:	b480      	push	{r7}
 8002f52:	b083      	sub	sp, #12
 8002f54:	af00      	add	r7, sp, #0
 8002f56:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	695b      	ldr	r3, [r3, #20]
 8002f5c:	4618      	mov	r0, r3
 8002f5e:	370c      	adds	r7, #12
 8002f60:	46bd      	mov	sp, r7
 8002f62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f66:	4770      	bx	lr

08002f68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8002f68:	b480      	push	{r7}
 8002f6a:	b083      	sub	sp, #12
 8002f6c:	af00      	add	r7, sp, #0
 8002f6e:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	3310      	adds	r3, #16
 8002f74:	4618      	mov	r0, r3
 8002f76:	370c      	adds	r7, #12
 8002f78:	46bd      	mov	sp, r7
 8002f7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f7e:	4770      	bx	lr

08002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8002f80:	b580      	push	{r7, lr}
 8002f82:	b082      	sub	sp, #8
 8002f84:	af00      	add	r7, sp, #0
 8002f86:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8002f88:	6878      	ldr	r0, [r7, #4]
 8002f8a:	f000 faf3 	bl	8003574 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8002f8e:	4603      	mov	r3, r0
 8002f90:	4618      	mov	r0, r3
 8002f92:	3708      	adds	r7, #8
 8002f94:	46bd      	mov	sp, r7
 8002f96:	bd80      	pop	{r7, pc}

08002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
      operator()(const _Tp& __x, const _Tp& __y) const
 8002f98:	b580      	push	{r7, lr}
 8002f9a:	b084      	sub	sp, #16
 8002f9c:	af00      	add	r7, sp, #0
 8002f9e:	60f8      	str	r0, [r7, #12]
 8002fa0:	60b9      	str	r1, [r7, #8]
 8002fa2:	607a      	str	r2, [r7, #4]
      { return __x < __y; }
 8002fa4:	6879      	ldr	r1, [r7, #4]
 8002fa6:	68b8      	ldr	r0, [r7, #8]
 8002fa8:	f000 faf7 	bl	800359a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
 8002fac:	4603      	mov	r3, r0
 8002fae:	4618      	mov	r0, r3
 8002fb0:	3710      	adds	r7, #16
 8002fb2:	46bd      	mov	sp, r7
 8002fb4:	bd80      	pop	{r7, pc}

08002fb6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8002fb6:	b590      	push	{r4, r7, lr}
 8002fb8:	b08b      	sub	sp, #44	; 0x2c
 8002fba:	af00      	add	r7, sp, #0
 8002fbc:	60f8      	str	r0, [r7, #12]
 8002fbe:	60b9      	str	r1, [r7, #8]
 8002fc0:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8002fc2:	68b8      	ldr	r0, [r7, #8]
 8002fc4:	f7fe fe2c 	bl	8001c20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8002fc8:	4603      	mov	r3, r0
 8002fca:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8002fcc:	68b8      	ldr	r0, [r7, #8]
 8002fce:	f7ff ffb3 	bl	8002f38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8002fd2:	4603      	mov	r3, r0
 8002fd4:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8002fd6:	2301      	movs	r3, #1
 8002fd8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8002fdc:	69bb      	ldr	r3, [r7, #24]
 8002fde:	2b00      	cmp	r3, #0
 8002fe0:	d020      	beq.n	8003024 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 8002fe2:	69bb      	ldr	r3, [r7, #24]
 8002fe4:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8002fe6:	68bc      	ldr	r4, [r7, #8]
 8002fe8:	69bb      	ldr	r3, [r7, #24]
 8002fea:	4618      	mov	r0, r3
 8002fec:	f000 fac2 	bl	8003574 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8002ff0:	4603      	mov	r3, r0
 8002ff2:	461a      	mov	r2, r3
 8002ff4:	6879      	ldr	r1, [r7, #4]
 8002ff6:	4620      	mov	r0, r4
 8002ff8:	f7ff ffce 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8002ffc:	4603      	mov	r3, r0
 8002ffe:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8003002:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003006:	2b00      	cmp	r3, #0
 8003008:	d005      	beq.n	8003016 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x60>
 800300a:	69bb      	ldr	r3, [r7, #24]
 800300c:	4618      	mov	r0, r3
 800300e:	f7ff f9f8 	bl	8002402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8003012:	4603      	mov	r3, r0
 8003014:	e004      	b.n	8003020 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6a>
 8003016:	69bb      	ldr	r3, [r7, #24]
 8003018:	4618      	mov	r0, r3
 800301a:	f7ff f9e6 	bl	80023ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 800301e:	4603      	mov	r3, r0
 8003020:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8003022:	e7db      	b.n	8002fdc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 8003024:	697a      	ldr	r2, [r7, #20]
 8003026:	f107 0310 	add.w	r3, r7, #16
 800302a:	4611      	mov	r1, r2
 800302c:	4618      	mov	r0, r3
 800302e:	f7ff fa05 	bl	800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8003032:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003036:	2b00      	cmp	r3, #0
 8003038:	d01d      	beq.n	8003076 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 800303a:	68b8      	ldr	r0, [r7, #8]
 800303c:	f000 fabd 	bl	80035ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 8003040:	4603      	mov	r3, r0
 8003042:	61fb      	str	r3, [r7, #28]
 8003044:	f107 021c 	add.w	r2, r7, #28
 8003048:	f107 0310 	add.w	r3, r7, #16
 800304c:	4611      	mov	r1, r2
 800304e:	4618      	mov	r0, r3
 8003050:	f000 fac4 	bl	80035dc <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 8003054:	4603      	mov	r3, r0
 8003056:	2b00      	cmp	r3, #0
 8003058:	d008      	beq.n	800306c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 800305a:	f107 0214 	add.w	r2, r7, #20
 800305e:	f107 0318 	add.w	r3, r7, #24
 8003062:	4619      	mov	r1, r3
 8003064:	68f8      	ldr	r0, [r7, #12]
 8003066:	f000 facd 	bl	8003604 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>
 800306a:	e025      	b.n	80030b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 800306c:	f107 0310 	add.w	r3, r7, #16
 8003070:	4618      	mov	r0, r3
 8003072:	f000 f831 	bl	80030d8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8003076:	68bc      	ldr	r4, [r7, #8]
 8003078:	693b      	ldr	r3, [r7, #16]
 800307a:	4618      	mov	r0, r3
 800307c:	f7ff ff80 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8003080:	4603      	mov	r3, r0
 8003082:	687a      	ldr	r2, [r7, #4]
 8003084:	4619      	mov	r1, r3
 8003086:	4620      	mov	r0, r4
 8003088:	f7ff ff86 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800308c:	4603      	mov	r3, r0
 800308e:	2b00      	cmp	r3, #0
 8003090:	d008      	beq.n	80030a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 8003092:	f107 0214 	add.w	r2, r7, #20
 8003096:	f107 0318 	add.w	r3, r7, #24
 800309a:	4619      	mov	r1, r3
 800309c:	68f8      	ldr	r0, [r7, #12]
 800309e:	f000 fab1 	bl	8003604 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>
 80030a2:	e009      	b.n	80030b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 80030a4:	2300      	movs	r3, #0
 80030a6:	623b      	str	r3, [r7, #32]
 80030a8:	f107 0220 	add.w	r2, r7, #32
 80030ac:	f107 0310 	add.w	r3, r7, #16
 80030b0:	4619      	mov	r1, r3
 80030b2:	68f8      	ldr	r0, [r7, #12]
 80030b4:	f7ff fed2 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80030b8:	68f8      	ldr	r0, [r7, #12]
 80030ba:	372c      	adds	r7, #44	; 0x2c
 80030bc:	46bd      	mov	sp, r7
 80030be:	bd90      	pop	{r4, r7, pc}

080030c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 80030c0:	b480      	push	{r7}
 80030c2:	b083      	sub	sp, #12
 80030c4:	af00      	add	r7, sp, #0
 80030c6:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	330c      	adds	r3, #12
 80030cc:	4618      	mov	r0, r3
 80030ce:	370c      	adds	r7, #12
 80030d0:	46bd      	mov	sp, r7
 80030d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030d6:	4770      	bx	lr

080030d8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 80030d8:	b580      	push	{r7, lr}
 80030da:	b082      	sub	sp, #8
 80030dc:	af00      	add	r7, sp, #0
 80030de:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	681b      	ldr	r3, [r3, #0]
 80030e4:	4618      	mov	r0, r3
 80030e6:	f01f fe16 	bl	8022d16 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 80030ea:	4602      	mov	r2, r0
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	601a      	str	r2, [r3, #0]
	return *this;
 80030f0:	687b      	ldr	r3, [r7, #4]
      }
 80030f2:	4618      	mov	r0, r3
 80030f4:	3708      	adds	r7, #8
 80030f6:	46bd      	mov	sp, r7
 80030f8:	bd80      	pop	{r7, pc}

080030fa <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 80030fa:	b580      	push	{r7, lr}
 80030fc:	b082      	sub	sp, #8
 80030fe:	af00      	add	r7, sp, #0
 8003100:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	4618      	mov	r0, r3
 8003108:	f01f fdf2 	bl	8022cf0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 800310c:	4602      	mov	r2, r0
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	601a      	str	r2, [r3, #0]
	return *this;
 8003112:	687b      	ldr	r3, [r7, #4]
      }
 8003114:	4618      	mov	r0, r3
 8003116:	3708      	adds	r7, #8
 8003118:	46bd      	mov	sp, r7
 800311a:	bd80      	pop	{r7, pc}

0800311c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIRKS9_EEPSt13_Rb_tree_nodeIS9_EOT_>:
	  operator()(_Arg&& __arg) const
 800311c:	b590      	push	{r4, r7, lr}
 800311e:	b083      	sub	sp, #12
 8003120:	af00      	add	r7, sp, #0
 8003122:	6078      	str	r0, [r7, #4]
 8003124:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	681c      	ldr	r4, [r3, #0]
 800312a:	6838      	ldr	r0, [r7, #0]
 800312c:	f7ff fac4 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8003130:	4603      	mov	r3, r0
 8003132:	4619      	mov	r1, r3
 8003134:	4620      	mov	r0, r4
 8003136:	f000 fa7e 	bl	8003636 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 800313a:	4603      	mov	r3, r0
 800313c:	4618      	mov	r0, r3
 800313e:	370c      	adds	r7, #12
 8003140:	46bd      	mov	sp, r7
 8003142:	bd90      	pop	{r4, r7, pc}

08003144 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS7_>:
 8003144:	b480      	push	{r7}
 8003146:	b083      	sub	sp, #12
 8003148:	af00      	add	r7, sp, #0
 800314a:	6078      	str	r0, [r7, #4]
 800314c:	6039      	str	r1, [r7, #0]
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	4618      	mov	r0, r3
 8003152:	370c      	adds	r7, #12
 8003154:	46bd      	mov	sp, r7
 8003156:	f85d 7b04 	ldr.w	r7, [sp], #4
 800315a:	4770      	bx	lr

0800315c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800315c:	b590      	push	{r4, r7, lr}
 800315e:	b083      	sub	sp, #12
 8003160:	af00      	add	r7, sp, #0
 8003162:	6078      	str	r0, [r7, #4]
 8003164:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8003166:	6878      	ldr	r0, [r7, #4]
 8003168:	f000 fa7c 	bl	8003664 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 800316c:	4604      	mov	r4, r0
 800316e:	6838      	ldr	r0, [r7, #0]
 8003170:	f000 fa83 	bl	800367a <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 8003174:	4603      	mov	r3, r0
 8003176:	4619      	mov	r1, r3
 8003178:	4620      	mov	r0, r4
 800317a:	f000 fa8c 	bl	8003696 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE7destroyIS4_EEvRS6_PT_>
      }
 800317e:	bf00      	nop
 8003180:	370c      	adds	r7, #12
 8003182:	46bd      	mov	sp, r7
 8003184:	bd90      	pop	{r4, r7, pc}

08003186 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8003186:	b580      	push	{r7, lr}
 8003188:	b082      	sub	sp, #8
 800318a:	af00      	add	r7, sp, #0
 800318c:	6078      	str	r0, [r7, #4]
 800318e:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8003190:	6878      	ldr	r0, [r7, #4]
 8003192:	f000 fa67 	bl	8003664 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8003196:	4603      	mov	r3, r0
 8003198:	2201      	movs	r2, #1
 800319a:	6839      	ldr	r1, [r7, #0]
 800319c:	4618      	mov	r0, r3
 800319e:	f000 fa87 	bl	80036b0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE10deallocateERS6_PS5_j>
 80031a2:	bf00      	nop
 80031a4:	3708      	adds	r7, #8
 80031a6:	46bd      	mov	sp, r7
 80031a8:	bd80      	pop	{r7, pc}

080031aa <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 80031aa:	b580      	push	{r7, lr}
 80031ac:	b084      	sub	sp, #16
 80031ae:	af00      	add	r7, sp, #0
 80031b0:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 80031b2:	687b      	ldr	r3, [r7, #4]
 80031b4:	681a      	ldr	r2, [r3, #0]
 80031b6:	f107 030c 	add.w	r3, r7, #12
 80031ba:	4611      	mov	r1, r2
 80031bc:	4618      	mov	r0, r3
 80031be:	f7ff fb27 	bl	8002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 80031c2:	68fb      	ldr	r3, [r7, #12]
 80031c4:	4618      	mov	r0, r3
 80031c6:	3710      	adds	r7, #16
 80031c8:	46bd      	mov	sp, r7
 80031ca:	bd80      	pop	{r7, pc}

080031cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 80031cc:	b480      	push	{r7}
 80031ce:	b083      	sub	sp, #12
 80031d0:	af00      	add	r7, sp, #0
 80031d2:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	3304      	adds	r3, #4
 80031d8:	4618      	mov	r0, r3
 80031da:	370c      	adds	r7, #12
 80031dc:	46bd      	mov	sp, r7
 80031de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031e2:	4770      	bx	lr

080031e4 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 80031e4:	b480      	push	{r7}
 80031e6:	b083      	sub	sp, #12
 80031e8:	af00      	add	r7, sp, #0
 80031ea:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	695b      	ldr	r3, [r3, #20]
 80031f0:	4618      	mov	r0, r3
 80031f2:	370c      	adds	r7, #12
 80031f4:	46bd      	mov	sp, r7
 80031f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031fa:	4770      	bx	lr

080031fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 80031fc:	b480      	push	{r7}
 80031fe:	b083      	sub	sp, #12
 8003200:	af00      	add	r7, sp, #0
 8003202:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8003204:	687b      	ldr	r3, [r7, #4]
 8003206:	3310      	adds	r3, #16
 8003208:	4618      	mov	r0, r3
 800320a:	370c      	adds	r7, #12
 800320c:	46bd      	mov	sp, r7
 800320e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003212:	4770      	bx	lr

08003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8003214:	b580      	push	{r7, lr}
 8003216:	b082      	sub	sp, #8
 8003218:	af00      	add	r7, sp, #0
 800321a:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 800321c:	6878      	ldr	r0, [r7, #4]
 800321e:	f000 fa56 	bl	80036ce <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8003222:	4603      	mov	r3, r0
 8003224:	4618      	mov	r0, r3
 8003226:	3708      	adds	r7, #8
 8003228:	46bd      	mov	sp, r7
 800322a:	bd80      	pop	{r7, pc}

0800322c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800322c:	b590      	push	{r4, r7, lr}
 800322e:	b08b      	sub	sp, #44	; 0x2c
 8003230:	af00      	add	r7, sp, #0
 8003232:	60f8      	str	r0, [r7, #12]
 8003234:	60b9      	str	r1, [r7, #8]
 8003236:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8003238:	68b8      	ldr	r0, [r7, #8]
 800323a:	f7fe fdcd 	bl	8001dd8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 800323e:	4603      	mov	r3, r0
 8003240:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8003242:	68b8      	ldr	r0, [r7, #8]
 8003244:	f7ff ffc2 	bl	80031cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8003248:	4603      	mov	r3, r0
 800324a:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 800324c:	2301      	movs	r3, #1
 800324e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8003252:	69bb      	ldr	r3, [r7, #24]
 8003254:	2b00      	cmp	r3, #0
 8003256:	d020      	beq.n	800329a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6e>
	  __y = __x;
 8003258:	69bb      	ldr	r3, [r7, #24]
 800325a:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 800325c:	68bc      	ldr	r4, [r7, #8]
 800325e:	69bb      	ldr	r3, [r7, #24]
 8003260:	4618      	mov	r0, r3
 8003262:	f000 fa34 	bl	80036ce <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8003266:	4603      	mov	r3, r0
 8003268:	461a      	mov	r2, r3
 800326a:	6879      	ldr	r1, [r7, #4]
 800326c:	4620      	mov	r0, r4
 800326e:	f7ff fcfe 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8003272:	4603      	mov	r3, r0
 8003274:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8003278:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800327c:	2b00      	cmp	r3, #0
 800327e:	d005      	beq.n	800328c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x60>
 8003280:	69bb      	ldr	r3, [r7, #24]
 8003282:	4618      	mov	r0, r3
 8003284:	f7ff faa7 	bl	80027d6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8003288:	4603      	mov	r3, r0
 800328a:	e004      	b.n	8003296 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6a>
 800328c:	69bb      	ldr	r3, [r7, #24]
 800328e:	4618      	mov	r0, r3
 8003290:	f7ff fa95 	bl	80027be <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8003294:	4603      	mov	r3, r0
 8003296:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8003298:	e7db      	b.n	8003252 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x26>
      iterator __j = iterator(__y);
 800329a:	697a      	ldr	r2, [r7, #20]
 800329c:	f107 0310 	add.w	r3, r7, #16
 80032a0:	4611      	mov	r1, r2
 80032a2:	4618      	mov	r0, r3
 80032a4:	f7ff fab4 	bl	8002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 80032a8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80032ac:	2b00      	cmp	r3, #0
 80032ae:	d01d      	beq.n	80032ec <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xc0>
	  if (__j == begin())
 80032b0:	68b8      	ldr	r0, [r7, #8]
 80032b2:	f000 fa1f 	bl	80036f4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>
 80032b6:	4603      	mov	r3, r0
 80032b8:	61fb      	str	r3, [r7, #28]
 80032ba:	f107 021c 	add.w	r2, r7, #28
 80032be:	f107 0310 	add.w	r3, r7, #16
 80032c2:	4611      	mov	r1, r2
 80032c4:	4618      	mov	r0, r3
 80032c6:	f000 fa26 	bl	8003716 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEES6_>
 80032ca:	4603      	mov	r3, r0
 80032cc:	2b00      	cmp	r3, #0
 80032ce:	d008      	beq.n	80032e2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xb6>
	    return _Res(__x, __y);
 80032d0:	f107 0214 	add.w	r2, r7, #20
 80032d4:	f107 0318 	add.w	r3, r7, #24
 80032d8:	4619      	mov	r1, r3
 80032da:	68f8      	ldr	r0, [r7, #12]
 80032dc:	f000 fa2f 	bl	800373e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>
 80032e0:	e025      	b.n	800332e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
	    --__j;
 80032e2:	f107 0310 	add.w	r3, r7, #16
 80032e6:	4618      	mov	r0, r3
 80032e8:	f000 f831 	bl	800334e <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 80032ec:	68bc      	ldr	r4, [r7, #8]
 80032ee:	693b      	ldr	r3, [r7, #16]
 80032f0:	4618      	mov	r0, r3
 80032f2:	f7ff ff8f 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80032f6:	4603      	mov	r3, r0
 80032f8:	687a      	ldr	r2, [r7, #4]
 80032fa:	4619      	mov	r1, r3
 80032fc:	4620      	mov	r0, r4
 80032fe:	f7ff fcb6 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8003302:	4603      	mov	r3, r0
 8003304:	2b00      	cmp	r3, #0
 8003306:	d008      	beq.n	800331a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xee>
	return _Res(__x, __y);
 8003308:	f107 0214 	add.w	r2, r7, #20
 800330c:	f107 0318 	add.w	r3, r7, #24
 8003310:	4619      	mov	r1, r3
 8003312:	68f8      	ldr	r0, [r7, #12]
 8003314:	f000 fa13 	bl	800373e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>
 8003318:	e009      	b.n	800332e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
      return _Res(__j._M_node, 0);
 800331a:	2300      	movs	r3, #0
 800331c:	623b      	str	r3, [r7, #32]
 800331e:	f107 0220 	add.w	r2, r7, #32
 8003322:	f107 0310 	add.w	r3, r7, #16
 8003326:	4619      	mov	r1, r3
 8003328:	68f8      	ldr	r0, [r7, #12]
 800332a:	f7ff fd97 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 800332e:	68f8      	ldr	r0, [r7, #12]
 8003330:	372c      	adds	r7, #44	; 0x2c
 8003332:	46bd      	mov	sp, r7
 8003334:	bd90      	pop	{r4, r7, pc}

08003336 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8003336:	b480      	push	{r7}
 8003338:	b083      	sub	sp, #12
 800333a:	af00      	add	r7, sp, #0
 800333c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	330c      	adds	r3, #12
 8003342:	4618      	mov	r0, r3
 8003344:	370c      	adds	r7, #12
 8003346:	46bd      	mov	sp, r7
 8003348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800334c:	4770      	bx	lr

0800334e <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 800334e:	b580      	push	{r7, lr}
 8003350:	b082      	sub	sp, #8
 8003352:	af00      	add	r7, sp, #0
 8003354:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	4618      	mov	r0, r3
 800335c:	f01f fcdb 	bl	8022d16 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8003360:	4602      	mov	r2, r0
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	601a      	str	r2, [r3, #0]
	return *this;
 8003366:	687b      	ldr	r3, [r7, #4]
      }
 8003368:	4618      	mov	r0, r3
 800336a:	3708      	adds	r7, #8
 800336c:	46bd      	mov	sp, r7
 800336e:	bd80      	pop	{r7, pc}

08003370 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8003370:	b580      	push	{r7, lr}
 8003372:	b082      	sub	sp, #8
 8003374:	af00      	add	r7, sp, #0
 8003376:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	681b      	ldr	r3, [r3, #0]
 800337c:	4618      	mov	r0, r3
 800337e:	f01f fcb7 	bl	8022cf0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8003382:	4602      	mov	r2, r0
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	601a      	str	r2, [r3, #0]
	return *this;
 8003388:	687b      	ldr	r3, [r7, #4]
      }
 800338a:	4618      	mov	r0, r3
 800338c:	3708      	adds	r7, #8
 800338e:	46bd      	mov	sp, r7
 8003390:	bd80      	pop	{r7, pc}

08003392 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>:
	  operator()(_Arg&& __arg) const
 8003392:	b590      	push	{r4, r7, lr}
 8003394:	b083      	sub	sp, #12
 8003396:	af00      	add	r7, sp, #0
 8003398:	6078      	str	r0, [r7, #4]
 800339a:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	681c      	ldr	r4, [r3, #0]
 80033a0:	6838      	ldr	r0, [r7, #0]
 80033a2:	f7ff fb73 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 80033a6:	4603      	mov	r3, r0
 80033a8:	4619      	mov	r1, r3
 80033aa:	4620      	mov	r0, r4
 80033ac:	f000 f9e0 	bl	8003770 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>
 80033b0:	4603      	mov	r3, r0
 80033b2:	4618      	mov	r0, r3
 80033b4:	370c      	adds	r7, #12
 80033b6:	46bd      	mov	sp, r7
 80033b8:	bd90      	pop	{r4, r7, pc}

080033ba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 80033ba:	b480      	push	{r7}
 80033bc:	b083      	sub	sp, #12
 80033be:	af00      	add	r7, sp, #0
 80033c0:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80033c2:	687b      	ldr	r3, [r7, #4]
 80033c4:	4618      	mov	r0, r3
 80033c6:	370c      	adds	r7, #12
 80033c8:	46bd      	mov	sp, r7
 80033ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ce:	4770      	bx	lr

080033d0 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>:
      _M_valptr()
 80033d0:	b580      	push	{r7, lr}
 80033d2:	b082      	sub	sp, #8
 80033d4:	af00      	add	r7, sp, #0
 80033d6:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	3310      	adds	r3, #16
 80033dc:	4618      	mov	r0, r3
 80033de:	f000 f9de 	bl	800379e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>
 80033e2:	4603      	mov	r3, r0
 80033e4:	4618      	mov	r0, r3
 80033e6:	3708      	adds	r7, #8
 80033e8:	46bd      	mov	sp, r7
 80033ea:	bd80      	pop	{r7, pc}

080033ec <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE7destroyIS4_EEvRS6_PT_>:
       *
       *  Calls @c __a.destroy(__p).
      */
      template<typename _Up>
	static void
	destroy(allocator_type& __a, _Up* __p)
 80033ec:	b580      	push	{r7, lr}
 80033ee:	b082      	sub	sp, #8
 80033f0:	af00      	add	r7, sp, #0
 80033f2:	6078      	str	r0, [r7, #4]
 80033f4:	6039      	str	r1, [r7, #0]
	noexcept(noexcept(__a.destroy(__p)))
	{ __a.destroy(__p); }
 80033f6:	6839      	ldr	r1, [r7, #0]
 80033f8:	6878      	ldr	r0, [r7, #4]
 80033fa:	f000 f9dc 	bl	80037b6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE7destroyIS5_EEvPT_>
 80033fe:	bf00      	nop
 8003400:	3708      	adds	r7, #8
 8003402:	46bd      	mov	sp, r7
 8003404:	bd80      	pop	{r7, pc}

08003406 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8003406:	b580      	push	{r7, lr}
 8003408:	b084      	sub	sp, #16
 800340a:	af00      	add	r7, sp, #0
 800340c:	60f8      	str	r0, [r7, #12]
 800340e:	60b9      	str	r1, [r7, #8]
 8003410:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8003412:	687a      	ldr	r2, [r7, #4]
 8003414:	68b9      	ldr	r1, [r7, #8]
 8003416:	68f8      	ldr	r0, [r7, #12]
 8003418:	f000 f9d8 	bl	80037cc <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE10deallocateEPS6_j>
 800341c:	bf00      	nop
 800341e:	3710      	adds	r7, #16
 8003420:	46bd      	mov	sp, r7
 8003422:	bd80      	pop	{r7, pc}

08003424 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>:
      _S_key(_Const_Link_type __x)
 8003424:	b580      	push	{r7, lr}
 8003426:	b084      	sub	sp, #16
 8003428:	af00      	add	r7, sp, #0
 800342a:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 800342c:	6878      	ldr	r0, [r7, #4]
 800342e:	f000 f9d9 	bl	80037e4 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 8003432:	4602      	mov	r2, r0
 8003434:	f107 030c 	add.w	r3, r7, #12
 8003438:	4611      	mov	r1, r2
 800343a:	4618      	mov	r0, r3
 800343c:	f7fe ff3a 	bl	80022b4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 8003440:	4603      	mov	r3, r0
      }
 8003442:	4618      	mov	r0, r3
 8003444:	3710      	adds	r7, #16
 8003446:	46bd      	mov	sp, r7
 8003448:	bd80      	pop	{r7, pc}

0800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800344a:	b480      	push	{r7}
 800344c:	b083      	sub	sp, #12
 800344e:	af00      	add	r7, sp, #0
 8003450:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	4618      	mov	r0, r3
 8003456:	370c      	adds	r7, #12
 8003458:	46bd      	mov	sp, r7
 800345a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800345e:	4770      	bx	lr

08003460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8003460:	b580      	push	{r7, lr}
 8003462:	b084      	sub	sp, #16
 8003464:	af00      	add	r7, sp, #0
 8003466:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	68da      	ldr	r2, [r3, #12]
 800346c:	f107 030c 	add.w	r3, r7, #12
 8003470:	4611      	mov	r1, r2
 8003472:	4618      	mov	r0, r3
 8003474:	f7fe fdec 	bl	8002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8003478:	68fb      	ldr	r3, [r7, #12]
 800347a:	4618      	mov	r0, r3
 800347c:	3710      	adds	r7, #16
 800347e:	46bd      	mov	sp, r7
 8003480:	bd80      	pop	{r7, pc}

08003482 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc10token_typeEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8003482:	b480      	push	{r7}
 8003484:	b083      	sub	sp, #12
 8003486:	af00      	add	r7, sp, #0
 8003488:	6078      	str	r0, [r7, #4]
 800348a:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	681a      	ldr	r2, [r3, #0]
 8003490:	683b      	ldr	r3, [r7, #0]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	429a      	cmp	r2, r3
 8003496:	bf0c      	ite	eq
 8003498:	2301      	moveq	r3, #1
 800349a:	2300      	movne	r3, #0
 800349c:	b2db      	uxtb	r3, r3
 800349e:	4618      	mov	r0, r3
 80034a0:	370c      	adds	r7, #12
 80034a2:	46bd      	mov	sp, r7
 80034a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034a8:	4770      	bx	lr

080034aa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80034aa:	b580      	push	{r7, lr}
 80034ac:	b084      	sub	sp, #16
 80034ae:	af00      	add	r7, sp, #0
 80034b0:	60f8      	str	r0, [r7, #12]
 80034b2:	60b9      	str	r1, [r7, #8]
 80034b4:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80034b6:	68b8      	ldr	r0, [r7, #8]
 80034b8:	f000 f9a2 	bl	8003800 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc10token_typeEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80034bc:	4603      	mov	r3, r0
 80034be:	681a      	ldr	r2, [r3, #0]
 80034c0:	68fb      	ldr	r3, [r7, #12]
 80034c2:	601a      	str	r2, [r3, #0]
 80034c4:	6878      	ldr	r0, [r7, #4]
 80034c6:	f7ff ffc0 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 80034ca:	4603      	mov	r3, r0
 80034cc:	681a      	ldr	r2, [r3, #0]
 80034ce:	68fb      	ldr	r3, [r7, #12]
 80034d0:	605a      	str	r2, [r3, #4]
 80034d2:	68fb      	ldr	r3, [r7, #12]
 80034d4:	4618      	mov	r0, r3
 80034d6:	3710      	adds	r7, #16
 80034d8:	46bd      	mov	sp, r7
 80034da:	bd80      	pop	{r7, pc}

080034dc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_create_node(_Args&&... __args)
 80034dc:	b580      	push	{r7, lr}
 80034de:	b084      	sub	sp, #16
 80034e0:	af00      	add	r7, sp, #0
 80034e2:	6078      	str	r0, [r7, #4]
 80034e4:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 80034e6:	6878      	ldr	r0, [r7, #4]
 80034e8:	f000 f995 	bl	8003816 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>
 80034ec:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 80034ee:	6838      	ldr	r0, [r7, #0]
 80034f0:	f7fe feec 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 80034f4:	4603      	mov	r3, r0
 80034f6:	461a      	mov	r2, r3
 80034f8:	68f9      	ldr	r1, [r7, #12]
 80034fa:	6878      	ldr	r0, [r7, #4]
 80034fc:	f000 f99c 	bl	8003838 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>
	  return __tmp;
 8003500:	68fb      	ldr	r3, [r7, #12]
	}
 8003502:	4618      	mov	r0, r3
 8003504:	3710      	adds	r7, #16
 8003506:	46bd      	mov	sp, r7
 8003508:	bd80      	pop	{r7, pc}

0800350a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 800350a:	b480      	push	{r7}
 800350c:	b083      	sub	sp, #12
 800350e:	af00      	add	r7, sp, #0
 8003510:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	4618      	mov	r0, r3
 8003516:	370c      	adds	r7, #12
 8003518:	46bd      	mov	sp, r7
 800351a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800351e:	4770      	bx	lr

08003520 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>:
      _M_valptr()
 8003520:	b580      	push	{r7, lr}
 8003522:	b082      	sub	sp, #8
 8003524:	af00      	add	r7, sp, #0
 8003526:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	3310      	adds	r3, #16
 800352c:	4618      	mov	r0, r3
 800352e:	f000 f9a3 	bl	8003878 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>
 8003532:	4603      	mov	r3, r0
 8003534:	4618      	mov	r0, r3
 8003536:	3708      	adds	r7, #8
 8003538:	46bd      	mov	sp, r7
 800353a:	bd80      	pop	{r7, pc}

0800353c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE7destroyISA_EEvRSC_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 800353c:	b580      	push	{r7, lr}
 800353e:	b082      	sub	sp, #8
 8003540:	af00      	add	r7, sp, #0
 8003542:	6078      	str	r0, [r7, #4]
 8003544:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 8003546:	6839      	ldr	r1, [r7, #0]
 8003548:	6878      	ldr	r0, [r7, #4]
 800354a:	f000 f9a1 	bl	8003890 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE7destroyISB_EEvPT_>
 800354e:	bf00      	nop
 8003550:	3708      	adds	r7, #8
 8003552:	46bd      	mov	sp, r7
 8003554:	bd80      	pop	{r7, pc}

08003556 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE10deallocateERSC_PSB_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8003556:	b580      	push	{r7, lr}
 8003558:	b084      	sub	sp, #16
 800355a:	af00      	add	r7, sp, #0
 800355c:	60f8      	str	r0, [r7, #12]
 800355e:	60b9      	str	r1, [r7, #8]
 8003560:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8003562:	687a      	ldr	r2, [r7, #4]
 8003564:	68b9      	ldr	r1, [r7, #8]
 8003566:	68f8      	ldr	r0, [r7, #12]
 8003568:	f000 f99e 	bl	80038a8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE10deallocateEPSC_j>
 800356c:	bf00      	nop
 800356e:	3710      	adds	r7, #16
 8003570:	46bd      	mov	sp, r7
 8003572:	bd80      	pop	{r7, pc}

08003574 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>:
      _S_key(_Const_Link_type __x)
 8003574:	b580      	push	{r7, lr}
 8003576:	b084      	sub	sp, #16
 8003578:	af00      	add	r7, sp, #0
 800357a:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 800357c:	6878      	ldr	r0, [r7, #4]
 800357e:	f000 f99f 	bl	80038c0 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8003582:	4602      	mov	r2, r0
 8003584:	f107 030c 	add.w	r3, r7, #12
 8003588:	4611      	mov	r1, r2
 800358a:	4618      	mov	r0, r3
 800358c:	f7ff f888 	bl	80026a0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 8003590:	4603      	mov	r3, r0
      }
 8003592:	4618      	mov	r0, r3
 8003594:	3710      	adds	r7, #16
 8003596:	46bd      	mov	sp, r7
 8003598:	bd80      	pop	{r7, pc}

0800359a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 800359a:	b580      	push	{r7, lr}
 800359c:	b082      	sub	sp, #8
 800359e:	af00      	add	r7, sp, #0
 80035a0:	6078      	str	r0, [r7, #4]
 80035a2:	6039      	str	r1, [r7, #0]
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
 80035a4:	6839      	ldr	r1, [r7, #0]
 80035a6:	6878      	ldr	r0, [r7, #4]
 80035a8:	f01f fe0e 	bl	80231c8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
 80035ac:	4603      	mov	r3, r0
 80035ae:	0fdb      	lsrs	r3, r3, #31
 80035b0:	b2db      	uxtb	r3, r3
 80035b2:	4618      	mov	r0, r3
 80035b4:	3708      	adds	r7, #8
 80035b6:	46bd      	mov	sp, r7
 80035b8:	bd80      	pop	{r7, pc}

080035ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80035ba:	b580      	push	{r7, lr}
 80035bc:	b084      	sub	sp, #16
 80035be:	af00      	add	r7, sp, #0
 80035c0:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 80035c2:	687b      	ldr	r3, [r7, #4]
 80035c4:	68da      	ldr	r2, [r3, #12]
 80035c6:	f107 030c 	add.w	r3, r7, #12
 80035ca:	4611      	mov	r1, r2
 80035cc:	4618      	mov	r0, r3
 80035ce:	f7fe ff35 	bl	800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 80035d2:	68fb      	ldr	r3, [r7, #12]
 80035d4:	4618      	mov	r0, r3
 80035d6:	3710      	adds	r7, #16
 80035d8:	46bd      	mov	sp, r7
 80035da:	bd80      	pop	{r7, pc}

080035dc <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 80035dc:	b480      	push	{r7}
 80035de:	b083      	sub	sp, #12
 80035e0:	af00      	add	r7, sp, #0
 80035e2:	6078      	str	r0, [r7, #4]
 80035e4:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	681a      	ldr	r2, [r3, #0]
 80035ea:	683b      	ldr	r3, [r7, #0]
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	429a      	cmp	r2, r3
 80035f0:	bf0c      	ite	eq
 80035f2:	2301      	moveq	r3, #1
 80035f4:	2300      	movne	r3, #0
 80035f6:	b2db      	uxtb	r3, r3
 80035f8:	4618      	mov	r0, r3
 80035fa:	370c      	adds	r7, #12
 80035fc:	46bd      	mov	sp, r7
 80035fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003602:	4770      	bx	lr

08003604 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8003604:	b580      	push	{r7, lr}
 8003606:	b084      	sub	sp, #16
 8003608:	af00      	add	r7, sp, #0
 800360a:	60f8      	str	r0, [r7, #12]
 800360c:	60b9      	str	r1, [r7, #8]
 800360e:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8003610:	68b8      	ldr	r0, [r7, #8]
 8003612:	f000 f963 	bl	80038dc <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003616:	4603      	mov	r3, r0
 8003618:	681a      	ldr	r2, [r3, #0]
 800361a:	68fb      	ldr	r3, [r7, #12]
 800361c:	601a      	str	r2, [r3, #0]
 800361e:	6878      	ldr	r0, [r7, #4]
 8003620:	f7ff ff13 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8003624:	4603      	mov	r3, r0
 8003626:	681a      	ldr	r2, [r3, #0]
 8003628:	68fb      	ldr	r3, [r7, #12]
 800362a:	605a      	str	r2, [r3, #4]
 800362c:	68fb      	ldr	r3, [r7, #12]
 800362e:	4618      	mov	r0, r3
 8003630:	3710      	adds	r7, #16
 8003632:	46bd      	mov	sp, r7
 8003634:	bd80      	pop	{r7, pc}

08003636 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8003636:	b580      	push	{r7, lr}
 8003638:	b084      	sub	sp, #16
 800363a:	af00      	add	r7, sp, #0
 800363c:	6078      	str	r0, [r7, #4]
 800363e:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8003640:	6878      	ldr	r0, [r7, #4]
 8003642:	f000 f956 	bl	80038f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 8003646:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8003648:	6838      	ldr	r0, [r7, #0]
 800364a:	f7ff f835 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 800364e:	4603      	mov	r3, r0
 8003650:	461a      	mov	r2, r3
 8003652:	68f9      	ldr	r1, [r7, #12]
 8003654:	6878      	ldr	r0, [r7, #4]
 8003656:	f000 f95d 	bl	8003914 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 800365a:	68fb      	ldr	r3, [r7, #12]
	}
 800365c:	4618      	mov	r0, r3
 800365e:	3710      	adds	r7, #16
 8003660:	46bd      	mov	sp, r7
 8003662:	bd80      	pop	{r7, pc}

08003664 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 8003664:	b480      	push	{r7}
 8003666:	b083      	sub	sp, #12
 8003668:	af00      	add	r7, sp, #0
 800366a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	4618      	mov	r0, r3
 8003670:	370c      	adds	r7, #12
 8003672:	46bd      	mov	sp, r7
 8003674:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003678:	4770      	bx	lr

0800367a <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>:
      _M_valptr()
 800367a:	b580      	push	{r7, lr}
 800367c:	b082      	sub	sp, #8
 800367e:	af00      	add	r7, sp, #0
 8003680:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	3310      	adds	r3, #16
 8003686:	4618      	mov	r0, r3
 8003688:	f000 f964 	bl	8003954 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>
 800368c:	4603      	mov	r3, r0
 800368e:	4618      	mov	r0, r3
 8003690:	3708      	adds	r7, #8
 8003692:	46bd      	mov	sp, r7
 8003694:	bd80      	pop	{r7, pc}

08003696 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE7destroyIS4_EEvRS6_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 8003696:	b580      	push	{r7, lr}
 8003698:	b082      	sub	sp, #8
 800369a:	af00      	add	r7, sp, #0
 800369c:	6078      	str	r0, [r7, #4]
 800369e:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 80036a0:	6839      	ldr	r1, [r7, #0]
 80036a2:	6878      	ldr	r0, [r7, #4]
 80036a4:	f000 f962 	bl	800396c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE7destroyIS5_EEvPT_>
 80036a8:	bf00      	nop
 80036aa:	3708      	adds	r7, #8
 80036ac:	46bd      	mov	sp, r7
 80036ae:	bd80      	pop	{r7, pc}

080036b0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 80036b0:	b580      	push	{r7, lr}
 80036b2:	b084      	sub	sp, #16
 80036b4:	af00      	add	r7, sp, #0
 80036b6:	60f8      	str	r0, [r7, #12]
 80036b8:	60b9      	str	r1, [r7, #8]
 80036ba:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80036bc:	687a      	ldr	r2, [r7, #4]
 80036be:	68b9      	ldr	r1, [r7, #8]
 80036c0:	68f8      	ldr	r0, [r7, #12]
 80036c2:	f000 f95e 	bl	8003982 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE10deallocateEPS6_j>
 80036c6:	bf00      	nop
 80036c8:	3710      	adds	r7, #16
 80036ca:	46bd      	mov	sp, r7
 80036cc:	bd80      	pop	{r7, pc}

080036ce <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>:
      _S_key(_Const_Link_type __x)
 80036ce:	b580      	push	{r7, lr}
 80036d0:	b084      	sub	sp, #16
 80036d2:	af00      	add	r7, sp, #0
 80036d4:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 80036d6:	6878      	ldr	r0, [r7, #4]
 80036d8:	f000 f95f 	bl	800399a <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 80036dc:	4602      	mov	r2, r0
 80036de:	f107 030c 	add.w	r3, r7, #12
 80036e2:	4611      	mov	r1, r2
 80036e4:	4618      	mov	r0, r3
 80036e6:	f7ff f9c5 	bl	8002a74 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 80036ea:	4603      	mov	r3, r0
      }
 80036ec:	4618      	mov	r0, r3
 80036ee:	3710      	adds	r7, #16
 80036f0:	46bd      	mov	sp, r7
 80036f2:	bd80      	pop	{r7, pc}

080036f4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80036f4:	b580      	push	{r7, lr}
 80036f6:	b084      	sub	sp, #16
 80036f8:	af00      	add	r7, sp, #0
 80036fa:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	68da      	ldr	r2, [r3, #12]
 8003700:	f107 030c 	add.w	r3, r7, #12
 8003704:	4611      	mov	r1, r2
 8003706:	4618      	mov	r0, r3
 8003708:	f7ff f882 	bl	8002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 800370c:	68fb      	ldr	r3, [r7, #12]
 800370e:	4618      	mov	r0, r3
 8003710:	3710      	adds	r7, #16
 8003712:	46bd      	mov	sp, r7
 8003714:	bd80      	pop	{r7, pc}

08003716 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8003716:	b480      	push	{r7}
 8003718:	b083      	sub	sp, #12
 800371a:	af00      	add	r7, sp, #0
 800371c:	6078      	str	r0, [r7, #4]
 800371e:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	681a      	ldr	r2, [r3, #0]
 8003724:	683b      	ldr	r3, [r7, #0]
 8003726:	681b      	ldr	r3, [r3, #0]
 8003728:	429a      	cmp	r2, r3
 800372a:	bf0c      	ite	eq
 800372c:	2301      	moveq	r3, #1
 800372e:	2300      	movne	r3, #0
 8003730:	b2db      	uxtb	r3, r3
 8003732:	4618      	mov	r0, r3
 8003734:	370c      	adds	r7, #12
 8003736:	46bd      	mov	sp, r7
 8003738:	f85d 7b04 	ldr.w	r7, [sp], #4
 800373c:	4770      	bx	lr

0800373e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 800373e:	b580      	push	{r7, lr}
 8003740:	b084      	sub	sp, #16
 8003742:	af00      	add	r7, sp, #0
 8003744:	60f8      	str	r0, [r7, #12]
 8003746:	60b9      	str	r1, [r7, #8]
 8003748:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 800374a:	68b8      	ldr	r0, [r7, #8]
 800374c:	f000 f933 	bl	80039b6 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8003750:	4603      	mov	r3, r0
 8003752:	681a      	ldr	r2, [r3, #0]
 8003754:	68fb      	ldr	r3, [r7, #12]
 8003756:	601a      	str	r2, [r3, #0]
 8003758:	6878      	ldr	r0, [r7, #4]
 800375a:	f7ff fe76 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 800375e:	4603      	mov	r3, r0
 8003760:	681a      	ldr	r2, [r3, #0]
 8003762:	68fb      	ldr	r3, [r7, #12]
 8003764:	605a      	str	r2, [r3, #4]
 8003766:	68fb      	ldr	r3, [r7, #12]
 8003768:	4618      	mov	r0, r3
 800376a:	3710      	adds	r7, #16
 800376c:	46bd      	mov	sp, r7
 800376e:	bd80      	pop	{r7, pc}

08003770 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8003770:	b580      	push	{r7, lr}
 8003772:	b084      	sub	sp, #16
 8003774:	af00      	add	r7, sp, #0
 8003776:	6078      	str	r0, [r7, #4]
 8003778:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 800377a:	6878      	ldr	r0, [r7, #4]
 800377c:	f000 f926 	bl	80039cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>
 8003780:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8003782:	6838      	ldr	r0, [r7, #0]
 8003784:	f7ff f982 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003788:	4603      	mov	r3, r0
 800378a:	461a      	mov	r2, r3
 800378c:	68f9      	ldr	r1, [r7, #12]
 800378e:	6878      	ldr	r0, [r7, #4]
 8003790:	f000 f92d 	bl	80039ee <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>
	  return __tmp;
 8003794:	68fb      	ldr	r3, [r7, #12]
	}
 8003796:	4618      	mov	r0, r3
 8003798:	3710      	adds	r7, #16
 800379a:	46bd      	mov	sp, r7
 800379c:	bd80      	pop	{r7, pc}

0800379e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
 800379e:	b580      	push	{r7, lr}
 80037a0:	b082      	sub	sp, #8
 80037a2:	af00      	add	r7, sp, #0
 80037a4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 80037a6:	6878      	ldr	r0, [r7, #4]
 80037a8:	f000 f941 	bl	8003a2e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>
 80037ac:	4603      	mov	r3, r0
 80037ae:	4618      	mov	r0, r3
 80037b0:	3708      	adds	r7, #8
 80037b2:	46bd      	mov	sp, r7
 80037b4:	bd80      	pop	{r7, pc}

080037b6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE7destroyIS5_EEvPT_>:
			    _Up(std::forward<_Args>(__args)...)))
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }

      template<typename _Up>
	void
	destroy(_Up* __p)
 80037b6:	b480      	push	{r7}
 80037b8:	b083      	sub	sp, #12
 80037ba:	af00      	add	r7, sp, #0
 80037bc:	6078      	str	r0, [r7, #4]
 80037be:	6039      	str	r1, [r7, #0]
	noexcept(noexcept( __p->~_Up()))
	{ __p->~_Up(); }
 80037c0:	bf00      	nop
 80037c2:	370c      	adds	r7, #12
 80037c4:	46bd      	mov	sp, r7
 80037c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037ca:	4770      	bx	lr

080037cc <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 80037cc:	b580      	push	{r7, lr}
 80037ce:	b084      	sub	sp, #16
 80037d0:	af00      	add	r7, sp, #0
 80037d2:	60f8      	str	r0, [r7, #12]
 80037d4:	60b9      	str	r1, [r7, #8]
 80037d6:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80037d8:	68b8      	ldr	r0, [r7, #8]
 80037da:	f01f fa22 	bl	8022c22 <_ZdlPv>
      }
 80037de:	3710      	adds	r7, #16
 80037e0:	46bd      	mov	sp, r7
 80037e2:	bd80      	pop	{r7, pc}

080037e4 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>:
      _M_valptr() const
 80037e4:	b580      	push	{r7, lr}
 80037e6:	b082      	sub	sp, #8
 80037e8:	af00      	add	r7, sp, #0
 80037ea:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	3310      	adds	r3, #16
 80037f0:	4618      	mov	r0, r3
 80037f2:	f000 f927 	bl	8003a44 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>
 80037f6:	4603      	mov	r3, r0
 80037f8:	4618      	mov	r0, r3
 80037fa:	3708      	adds	r7, #8
 80037fc:	46bd      	mov	sp, r7
 80037fe:	bd80      	pop	{r7, pc}

08003800 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc10token_typeEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003800:	b480      	push	{r7}
 8003802:	b083      	sub	sp, #12
 8003804:	af00      	add	r7, sp, #0
 8003806:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	4618      	mov	r0, r3
 800380c:	370c      	adds	r7, #12
 800380e:	46bd      	mov	sp, r7
 8003810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003814:	4770      	bx	lr

08003816 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>:
      _M_get_node()
 8003816:	b580      	push	{r7, lr}
 8003818:	b082      	sub	sp, #8
 800381a:	af00      	add	r7, sp, #0
 800381c:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 800381e:	6878      	ldr	r0, [r7, #4]
 8003820:	f7ff fdcb 	bl	80033ba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8003824:	4603      	mov	r3, r0
 8003826:	2101      	movs	r1, #1
 8003828:	4618      	mov	r0, r3
 800382a:	f000 f917 	bl	8003a5c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE8allocateERS6_j>
 800382e:	4603      	mov	r3, r0
 8003830:	4618      	mov	r0, r3
 8003832:	3708      	adds	r7, #8
 8003834:	46bd      	mov	sp, r7
 8003836:	bd80      	pop	{r7, pc}

08003838 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8003838:	b5b0      	push	{r4, r5, r7, lr}
 800383a:	b084      	sub	sp, #16
 800383c:	af00      	add	r7, sp, #0
 800383e:	60f8      	str	r0, [r7, #12]
 8003840:	60b9      	str	r1, [r7, #8]
 8003842:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8003844:	68bb      	ldr	r3, [r7, #8]
 8003846:	4619      	mov	r1, r3
 8003848:	2014      	movs	r0, #20
 800384a:	f7fd fc06 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 800384e:	68f8      	ldr	r0, [r7, #12]
 8003850:	f7ff fdb3 	bl	80033ba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8003854:	4604      	mov	r4, r0
 8003856:	68b8      	ldr	r0, [r7, #8]
 8003858:	f7ff fdba 	bl	80033d0 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 800385c:	4605      	mov	r5, r0
 800385e:	6878      	ldr	r0, [r7, #4]
 8003860:	f7fe fd34 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003864:	4603      	mov	r3, r0
 8003866:	461a      	mov	r2, r3
 8003868:	4629      	mov	r1, r5
 800386a:	4620      	mov	r0, r4
 800386c:	f000 f905 	bl	8003a7a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>
	}
 8003870:	bf00      	nop
 8003872:	3710      	adds	r7, #16
 8003874:	46bd      	mov	sp, r7
 8003876:	bdb0      	pop	{r4, r5, r7, pc}

08003878 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>:
      _M_ptr() noexcept
 8003878:	b580      	push	{r7, lr}
 800387a:	b082      	sub	sp, #8
 800387c:	af00      	add	r7, sp, #0
 800387e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8003880:	6878      	ldr	r0, [r7, #4]
 8003882:	f000 f90d 	bl	8003aa0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>
 8003886:	4603      	mov	r3, r0
 8003888:	4618      	mov	r0, r3
 800388a:	3708      	adds	r7, #8
 800388c:	46bd      	mov	sp, r7
 800388e:	bd80      	pop	{r7, pc}

08003890 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE7destroyISB_EEvPT_>:
	destroy(_Up* __p)
 8003890:	b580      	push	{r7, lr}
 8003892:	b082      	sub	sp, #8
 8003894:	af00      	add	r7, sp, #0
 8003896:	6078      	str	r0, [r7, #4]
 8003898:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 800389a:	6838      	ldr	r0, [r7, #0]
 800389c:	f7fd fc19 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 80038a0:	bf00      	nop
 80038a2:	3708      	adds	r7, #8
 80038a4:	46bd      	mov	sp, r7
 80038a6:	bd80      	pop	{r7, pc}

080038a8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE10deallocateEPSC_j>:
      deallocate(pointer __p, size_type)
 80038a8:	b580      	push	{r7, lr}
 80038aa:	b084      	sub	sp, #16
 80038ac:	af00      	add	r7, sp, #0
 80038ae:	60f8      	str	r0, [r7, #12]
 80038b0:	60b9      	str	r1, [r7, #8]
 80038b2:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80038b4:	68b8      	ldr	r0, [r7, #8]
 80038b6:	f01f f9b4 	bl	8022c22 <_ZdlPv>
      }
 80038ba:	3710      	adds	r7, #16
 80038bc:	46bd      	mov	sp, r7
 80038be:	bd80      	pop	{r7, pc}

080038c0 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>:
      _M_valptr() const
 80038c0:	b580      	push	{r7, lr}
 80038c2:	b082      	sub	sp, #8
 80038c4:	af00      	add	r7, sp, #0
 80038c6:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	3310      	adds	r3, #16
 80038cc:	4618      	mov	r0, r3
 80038ce:	f000 f8f2 	bl	8003ab6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>
 80038d2:	4603      	mov	r3, r0
 80038d4:	4618      	mov	r0, r3
 80038d6:	3708      	adds	r7, #8
 80038d8:	46bd      	mov	sp, r7
 80038da:	bd80      	pop	{r7, pc}

080038dc <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80038dc:	b480      	push	{r7}
 80038de:	b083      	sub	sp, #12
 80038e0:	af00      	add	r7, sp, #0
 80038e2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	4618      	mov	r0, r3
 80038e8:	370c      	adds	r7, #12
 80038ea:	46bd      	mov	sp, r7
 80038ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038f0:	4770      	bx	lr

080038f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>:
      _M_get_node()
 80038f2:	b580      	push	{r7, lr}
 80038f4:	b082      	sub	sp, #8
 80038f6:	af00      	add	r7, sp, #0
 80038f8:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 80038fa:	6878      	ldr	r0, [r7, #4]
 80038fc:	f7ff fe05 	bl	800350a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8003900:	4603      	mov	r3, r0
 8003902:	2101      	movs	r1, #1
 8003904:	4618      	mov	r0, r3
 8003906:	f000 f8e2 	bl	8003ace <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE8allocateERSC_j>
 800390a:	4603      	mov	r3, r0
 800390c:	4618      	mov	r0, r3
 800390e:	3708      	adds	r7, #8
 8003910:	46bd      	mov	sp, r7
 8003912:	bd80      	pop	{r7, pc}

08003914 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8003914:	b5b0      	push	{r4, r5, r7, lr}
 8003916:	b084      	sub	sp, #16
 8003918:	af00      	add	r7, sp, #0
 800391a:	60f8      	str	r0, [r7, #12]
 800391c:	60b9      	str	r1, [r7, #8]
 800391e:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8003920:	68bb      	ldr	r3, [r7, #8]
 8003922:	4619      	mov	r1, r3
 8003924:	202c      	movs	r0, #44	; 0x2c
 8003926:	f7fd fb98 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 800392a:	68f8      	ldr	r0, [r7, #12]
 800392c:	f7ff fded 	bl	800350a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8003930:	4604      	mov	r4, r0
 8003932:	68b8      	ldr	r0, [r7, #8]
 8003934:	f7ff fdf4 	bl	8003520 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8003938:	4605      	mov	r5, r0
 800393a:	6878      	ldr	r0, [r7, #4]
 800393c:	f7fe febc 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8003940:	4603      	mov	r3, r0
 8003942:	461a      	mov	r2, r3
 8003944:	4629      	mov	r1, r5
 8003946:	4620      	mov	r0, r4
 8003948:	f000 f8d0 	bl	8003aec <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE9constructISA_JRKSA_EEEvRSC_PT_DpOT0_>
	}
 800394c:	bf00      	nop
 800394e:	3710      	adds	r7, #16
 8003950:	46bd      	mov	sp, r7
 8003952:	bdb0      	pop	{r4, r5, r7, pc}

08003954 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>:
      _M_ptr() noexcept
 8003954:	b580      	push	{r7, lr}
 8003956:	b082      	sub	sp, #8
 8003958:	af00      	add	r7, sp, #0
 800395a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800395c:	6878      	ldr	r0, [r7, #4]
 800395e:	f000 f8d8 	bl	8003b12 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>
 8003962:	4603      	mov	r3, r0
 8003964:	4618      	mov	r0, r3
 8003966:	3708      	adds	r7, #8
 8003968:	46bd      	mov	sp, r7
 800396a:	bd80      	pop	{r7, pc}

0800396c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE7destroyIS5_EEvPT_>:
	destroy(_Up* __p)
 800396c:	b480      	push	{r7}
 800396e:	b083      	sub	sp, #12
 8003970:	af00      	add	r7, sp, #0
 8003972:	6078      	str	r0, [r7, #4]
 8003974:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8003976:	bf00      	nop
 8003978:	370c      	adds	r7, #12
 800397a:	46bd      	mov	sp, r7
 800397c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003980:	4770      	bx	lr

08003982 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 8003982:	b580      	push	{r7, lr}
 8003984:	b084      	sub	sp, #16
 8003986:	af00      	add	r7, sp, #0
 8003988:	60f8      	str	r0, [r7, #12]
 800398a:	60b9      	str	r1, [r7, #8]
 800398c:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800398e:	68b8      	ldr	r0, [r7, #8]
 8003990:	f01f f947 	bl	8022c22 <_ZdlPv>
      }
 8003994:	3710      	adds	r7, #16
 8003996:	46bd      	mov	sp, r7
 8003998:	bd80      	pop	{r7, pc}

0800399a <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>:
      _M_valptr() const
 800399a:	b580      	push	{r7, lr}
 800399c:	b082      	sub	sp, #8
 800399e:	af00      	add	r7, sp, #0
 80039a0:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	3310      	adds	r3, #16
 80039a6:	4618      	mov	r0, r3
 80039a8:	f000 f8be 	bl	8003b28 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>
 80039ac:	4603      	mov	r3, r0
 80039ae:	4618      	mov	r0, r3
 80039b0:	3708      	adds	r7, #8
 80039b2:	46bd      	mov	sp, r7
 80039b4:	bd80      	pop	{r7, pc}

080039b6 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80039b6:	b480      	push	{r7}
 80039b8:	b083      	sub	sp, #12
 80039ba:	af00      	add	r7, sp, #0
 80039bc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80039be:	687b      	ldr	r3, [r7, #4]
 80039c0:	4618      	mov	r0, r3
 80039c2:	370c      	adds	r7, #12
 80039c4:	46bd      	mov	sp, r7
 80039c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039ca:	4770      	bx	lr

080039cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>:
      _M_get_node()
 80039cc:	b580      	push	{r7, lr}
 80039ce:	b082      	sub	sp, #8
 80039d0:	af00      	add	r7, sp, #0
 80039d2:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 80039d4:	6878      	ldr	r0, [r7, #4]
 80039d6:	f7ff fe45 	bl	8003664 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 80039da:	4603      	mov	r3, r0
 80039dc:	2101      	movs	r1, #1
 80039de:	4618      	mov	r0, r3
 80039e0:	f000 f8ae 	bl	8003b40 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE8allocateERS6_j>
 80039e4:	4603      	mov	r3, r0
 80039e6:	4618      	mov	r0, r3
 80039e8:	3708      	adds	r7, #8
 80039ea:	46bd      	mov	sp, r7
 80039ec:	bd80      	pop	{r7, pc}

080039ee <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 80039ee:	b5b0      	push	{r4, r5, r7, lr}
 80039f0:	b084      	sub	sp, #16
 80039f2:	af00      	add	r7, sp, #0
 80039f4:	60f8      	str	r0, [r7, #12]
 80039f6:	60b9      	str	r1, [r7, #8]
 80039f8:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 80039fa:	68bb      	ldr	r3, [r7, #8]
 80039fc:	4619      	mov	r1, r3
 80039fe:	2014      	movs	r0, #20
 8003a00:	f7fd fb2b 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8003a04:	68f8      	ldr	r0, [r7, #12]
 8003a06:	f7ff fe2d 	bl	8003664 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8003a0a:	4604      	mov	r4, r0
 8003a0c:	68b8      	ldr	r0, [r7, #8]
 8003a0e:	f7ff fe34 	bl	800367a <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 8003a12:	4605      	mov	r5, r0
 8003a14:	6878      	ldr	r0, [r7, #4]
 8003a16:	f7ff f839 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003a1a:	4603      	mov	r3, r0
 8003a1c:	461a      	mov	r2, r3
 8003a1e:	4629      	mov	r1, r5
 8003a20:	4620      	mov	r0, r4
 8003a22:	f000 f89c 	bl	8003b5e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>
	}
 8003a26:	bf00      	nop
 8003a28:	3710      	adds	r7, #16
 8003a2a:	46bd      	mov	sp, r7
 8003a2c:	bdb0      	pop	{r4, r5, r7, pc}

08003a2e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>:
      _M_addr() noexcept
 8003a2e:	b480      	push	{r7}
 8003a30:	b083      	sub	sp, #12
 8003a32:	af00      	add	r7, sp, #0
 8003a34:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	4618      	mov	r0, r3
 8003a3a:	370c      	adds	r7, #12
 8003a3c:	46bd      	mov	sp, r7
 8003a3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a42:	4770      	bx	lr

08003a44 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
 8003a44:	b580      	push	{r7, lr}
 8003a46:	b082      	sub	sp, #8
 8003a48:	af00      	add	r7, sp, #0
 8003a4a:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8003a4c:	6878      	ldr	r0, [r7, #4]
 8003a4e:	f000 f899 	bl	8003b84 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>
 8003a52:	4603      	mov	r3, r0
 8003a54:	4618      	mov	r0, r3
 8003a56:	3708      	adds	r7, #8
 8003a58:	46bd      	mov	sp, r7
 8003a5a:	bd80      	pop	{r7, pc}

08003a5c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 8003a5c:	b580      	push	{r7, lr}
 8003a5e:	b082      	sub	sp, #8
 8003a60:	af00      	add	r7, sp, #0
 8003a62:	6078      	str	r0, [r7, #4]
 8003a64:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8003a66:	2200      	movs	r2, #0
 8003a68:	6839      	ldr	r1, [r7, #0]
 8003a6a:	6878      	ldr	r0, [r7, #4]
 8003a6c:	f000 f895 	bl	8003b9a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv>
 8003a70:	4603      	mov	r3, r0
 8003a72:	4618      	mov	r0, r3
 8003a74:	3708      	adds	r7, #8
 8003a76:	46bd      	mov	sp, r7
 8003a78:	bd80      	pop	{r7, pc}

08003a7a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8003a7a:	b580      	push	{r7, lr}
 8003a7c:	b084      	sub	sp, #16
 8003a7e:	af00      	add	r7, sp, #0
 8003a80:	60f8      	str	r0, [r7, #12]
 8003a82:	60b9      	str	r1, [r7, #8]
 8003a84:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8003a86:	6878      	ldr	r0, [r7, #4]
 8003a88:	f7fe fc20 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003a8c:	4603      	mov	r3, r0
 8003a8e:	461a      	mov	r2, r3
 8003a90:	68b9      	ldr	r1, [r7, #8]
 8003a92:	68f8      	ldr	r0, [r7, #12]
 8003a94:	f000 f8a3 	bl	8003bde <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>
 8003a98:	bf00      	nop
 8003a9a:	3710      	adds	r7, #16
 8003a9c:	46bd      	mov	sp, r7
 8003a9e:	bd80      	pop	{r7, pc}

08003aa0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>:
      _M_addr() noexcept
 8003aa0:	b480      	push	{r7}
 8003aa2:	b083      	sub	sp, #12
 8003aa4:	af00      	add	r7, sp, #0
 8003aa6:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	4618      	mov	r0, r3
 8003aac:	370c      	adds	r7, #12
 8003aae:	46bd      	mov	sp, r7
 8003ab0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ab4:	4770      	bx	lr

08003ab6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8003ab6:	b580      	push	{r7, lr}
 8003ab8:	b082      	sub	sp, #8
 8003aba:	af00      	add	r7, sp, #0
 8003abc:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8003abe:	6878      	ldr	r0, [r7, #4]
 8003ac0:	f000 f8a5 	bl	8003c0e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>
 8003ac4:	4603      	mov	r3, r0
 8003ac6:	4618      	mov	r0, r3
 8003ac8:	3708      	adds	r7, #8
 8003aca:	46bd      	mov	sp, r7
 8003acc:	bd80      	pop	{r7, pc}

08003ace <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE8allocateERSC_j>:
      allocate(allocator_type& __a, size_type __n)
 8003ace:	b580      	push	{r7, lr}
 8003ad0:	b082      	sub	sp, #8
 8003ad2:	af00      	add	r7, sp, #0
 8003ad4:	6078      	str	r0, [r7, #4]
 8003ad6:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8003ad8:	2200      	movs	r2, #0
 8003ada:	6839      	ldr	r1, [r7, #0]
 8003adc:	6878      	ldr	r0, [r7, #4]
 8003ade:	f000 f8a1 	bl	8003c24 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv>
 8003ae2:	4603      	mov	r3, r0
 8003ae4:	4618      	mov	r0, r3
 8003ae6:	3708      	adds	r7, #8
 8003ae8:	46bd      	mov	sp, r7
 8003aea:	bd80      	pop	{r7, pc}

08003aec <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE9constructISA_JRKSA_EEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8003aec:	b580      	push	{r7, lr}
 8003aee:	b084      	sub	sp, #16
 8003af0:	af00      	add	r7, sp, #0
 8003af2:	60f8      	str	r0, [r7, #12]
 8003af4:	60b9      	str	r1, [r7, #8]
 8003af6:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8003af8:	6878      	ldr	r0, [r7, #4]
 8003afa:	f7fe fddd 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8003afe:	4603      	mov	r3, r0
 8003b00:	461a      	mov	r2, r3
 8003b02:	68b9      	ldr	r1, [r7, #8]
 8003b04:	68f8      	ldr	r0, [r7, #12]
 8003b06:	f000 f8c2 	bl	8003c8e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE9constructISB_JRKSB_EEEvPT_DpOT0_>
 8003b0a:	bf00      	nop
 8003b0c:	3710      	adds	r7, #16
 8003b0e:	46bd      	mov	sp, r7
 8003b10:	bd80      	pop	{r7, pc}

08003b12 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>:
      _M_addr() noexcept
 8003b12:	b480      	push	{r7}
 8003b14:	b083      	sub	sp, #12
 8003b16:	af00      	add	r7, sp, #0
 8003b18:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8003b1a:	687b      	ldr	r3, [r7, #4]
 8003b1c:	4618      	mov	r0, r3
 8003b1e:	370c      	adds	r7, #12
 8003b20:	46bd      	mov	sp, r7
 8003b22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b26:	4770      	bx	lr

08003b28 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8003b28:	b580      	push	{r7, lr}
 8003b2a:	b082      	sub	sp, #8
 8003b2c:	af00      	add	r7, sp, #0
 8003b2e:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8003b30:	6878      	ldr	r0, [r7, #4]
 8003b32:	f000 f8c4 	bl	8003cbe <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>
 8003b36:	4603      	mov	r3, r0
 8003b38:	4618      	mov	r0, r3
 8003b3a:	3708      	adds	r7, #8
 8003b3c:	46bd      	mov	sp, r7
 8003b3e:	bd80      	pop	{r7, pc}

08003b40 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 8003b40:	b580      	push	{r7, lr}
 8003b42:	b082      	sub	sp, #8
 8003b44:	af00      	add	r7, sp, #0
 8003b46:	6078      	str	r0, [r7, #4]
 8003b48:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8003b4a:	2200      	movs	r2, #0
 8003b4c:	6839      	ldr	r1, [r7, #0]
 8003b4e:	6878      	ldr	r0, [r7, #4]
 8003b50:	f000 f8c0 	bl	8003cd4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv>
 8003b54:	4603      	mov	r3, r0
 8003b56:	4618      	mov	r0, r3
 8003b58:	3708      	adds	r7, #8
 8003b5a:	46bd      	mov	sp, r7
 8003b5c:	bd80      	pop	{r7, pc}

08003b5e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8003b5e:	b580      	push	{r7, lr}
 8003b60:	b084      	sub	sp, #16
 8003b62:	af00      	add	r7, sp, #0
 8003b64:	60f8      	str	r0, [r7, #12]
 8003b66:	60b9      	str	r1, [r7, #8]
 8003b68:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8003b6a:	6878      	ldr	r0, [r7, #4]
 8003b6c:	f7fe ff8e 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003b70:	4603      	mov	r3, r0
 8003b72:	461a      	mov	r2, r3
 8003b74:	68b9      	ldr	r1, [r7, #8]
 8003b76:	68f8      	ldr	r0, [r7, #12]
 8003b78:	f000 f8ce 	bl	8003d18 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>
 8003b7c:	bf00      	nop
 8003b7e:	3710      	adds	r7, #16
 8003b80:	46bd      	mov	sp, r7
 8003b82:	bd80      	pop	{r7, pc}

08003b84 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>:
      _M_addr() const noexcept
 8003b84:	b480      	push	{r7}
 8003b86:	b083      	sub	sp, #12
 8003b88:	af00      	add	r7, sp, #0
 8003b8a:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	4618      	mov	r0, r3
 8003b90:	370c      	adds	r7, #12
 8003b92:	46bd      	mov	sp, r7
 8003b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b98:	4770      	bx	lr

08003b9a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8003b9a:	b580      	push	{r7, lr}
 8003b9c:	b084      	sub	sp, #16
 8003b9e:	af00      	add	r7, sp, #0
 8003ba0:	60f8      	str	r0, [r7, #12]
 8003ba2:	60b9      	str	r1, [r7, #8]
 8003ba4:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8003ba6:	68f8      	ldr	r0, [r7, #12]
 8003ba8:	f000 f8d0 	bl	8003d4c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv>
 8003bac:	4602      	mov	r2, r0
 8003bae:	68bb      	ldr	r3, [r7, #8]
 8003bb0:	4293      	cmp	r3, r2
 8003bb2:	bf8c      	ite	hi
 8003bb4:	2301      	movhi	r3, #1
 8003bb6:	2300      	movls	r3, #0
 8003bb8:	b2db      	uxtb	r3, r3
 8003bba:	2b00      	cmp	r3, #0
 8003bbc:	d001      	beq.n	8003bc2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8003bbe:	f01f f908 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8003bc2:	68ba      	ldr	r2, [r7, #8]
 8003bc4:	4613      	mov	r3, r2
 8003bc6:	009b      	lsls	r3, r3, #2
 8003bc8:	4413      	add	r3, r2
 8003bca:	009b      	lsls	r3, r3, #2
 8003bcc:	4618      	mov	r0, r3
 8003bce:	f01f f83b 	bl	8022c48 <_Znwj>
 8003bd2:	4603      	mov	r3, r0
 8003bd4:	bf00      	nop
      }
 8003bd6:	4618      	mov	r0, r3
 8003bd8:	3710      	adds	r7, #16
 8003bda:	46bd      	mov	sp, r7
 8003bdc:	bd80      	pop	{r7, pc}

08003bde <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8003bde:	b590      	push	{r4, r7, lr}
 8003be0:	b085      	sub	sp, #20
 8003be2:	af00      	add	r7, sp, #0
 8003be4:	60f8      	str	r0, [r7, #12]
 8003be6:	60b9      	str	r1, [r7, #8]
 8003be8:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8003bea:	6878      	ldr	r0, [r7, #4]
 8003bec:	f7fe fb6e 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003bf0:	4604      	mov	r4, r0
 8003bf2:	68bb      	ldr	r3, [r7, #8]
 8003bf4:	4619      	mov	r1, r3
 8003bf6:	2002      	movs	r0, #2
 8003bf8:	f7fd fa2f 	bl	800105a <_ZnwjPv>
 8003bfc:	4603      	mov	r3, r0
 8003bfe:	461a      	mov	r2, r3
 8003c00:	4623      	mov	r3, r4
 8003c02:	881b      	ldrh	r3, [r3, #0]
 8003c04:	8013      	strh	r3, [r2, #0]
 8003c06:	bf00      	nop
 8003c08:	3714      	adds	r7, #20
 8003c0a:	46bd      	mov	sp, r7
 8003c0c:	bd90      	pop	{r4, r7, pc}

08003c0e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>:
      _M_addr() const noexcept
 8003c0e:	b480      	push	{r7}
 8003c10:	b083      	sub	sp, #12
 8003c12:	af00      	add	r7, sp, #0
 8003c14:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	4618      	mov	r0, r3
 8003c1a:	370c      	adds	r7, #12
 8003c1c:	46bd      	mov	sp, r7
 8003c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c22:	4770      	bx	lr

08003c24 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8003c24:	b580      	push	{r7, lr}
 8003c26:	b084      	sub	sp, #16
 8003c28:	af00      	add	r7, sp, #0
 8003c2a:	60f8      	str	r0, [r7, #12]
 8003c2c:	60b9      	str	r1, [r7, #8]
 8003c2e:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8003c30:	68f8      	ldr	r0, [r7, #12]
 8003c32:	f000 f899 	bl	8003d68 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv>
 8003c36:	4602      	mov	r2, r0
 8003c38:	68bb      	ldr	r3, [r7, #8]
 8003c3a:	4293      	cmp	r3, r2
 8003c3c:	bf8c      	ite	hi
 8003c3e:	2301      	movhi	r3, #1
 8003c40:	2300      	movls	r3, #0
 8003c42:	b2db      	uxtb	r3, r3
 8003c44:	2b00      	cmp	r3, #0
 8003c46:	d001      	beq.n	8003c4c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8003c48:	f01f f8c3 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8003c4c:	68bb      	ldr	r3, [r7, #8]
 8003c4e:	222c      	movs	r2, #44	; 0x2c
 8003c50:	fb02 f303 	mul.w	r3, r2, r3
 8003c54:	4618      	mov	r0, r3
 8003c56:	f01e fff7 	bl	8022c48 <_Znwj>
 8003c5a:	4603      	mov	r3, r0
 8003c5c:	bf00      	nop
      }
 8003c5e:	4618      	mov	r0, r3
 8003c60:	3710      	adds	r7, #16
 8003c62:	46bd      	mov	sp, r7
 8003c64:	bd80      	pop	{r7, pc}

08003c66 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1ERKS8_>:
      constexpr pair(const pair&) = default;
 8003c66:	b580      	push	{r7, lr}
 8003c68:	b082      	sub	sp, #8
 8003c6a:	af00      	add	r7, sp, #0
 8003c6c:	6078      	str	r0, [r7, #4]
 8003c6e:	6039      	str	r1, [r7, #0]
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	683a      	ldr	r2, [r7, #0]
 8003c74:	4611      	mov	r1, r2
 8003c76:	4618      	mov	r0, r3
 8003c78:	f01f faee 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8003c7c:	683b      	ldr	r3, [r7, #0]
 8003c7e:	7e1a      	ldrb	r2, [r3, #24]
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	761a      	strb	r2, [r3, #24]
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	4618      	mov	r0, r3
 8003c88:	3708      	adds	r7, #8
 8003c8a:	46bd      	mov	sp, r7
 8003c8c:	bd80      	pop	{r7, pc}

08003c8e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE9constructISB_JRKSB_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8003c8e:	b590      	push	{r4, r7, lr}
 8003c90:	b085      	sub	sp, #20
 8003c92:	af00      	add	r7, sp, #0
 8003c94:	60f8      	str	r0, [r7, #12]
 8003c96:	60b9      	str	r1, [r7, #8]
 8003c98:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8003c9a:	6878      	ldr	r0, [r7, #4]
 8003c9c:	f7fe fd0c 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8003ca0:	4604      	mov	r4, r0
 8003ca2:	68bb      	ldr	r3, [r7, #8]
 8003ca4:	4619      	mov	r1, r3
 8003ca6:	201c      	movs	r0, #28
 8003ca8:	f7fd f9d7 	bl	800105a <_ZnwjPv>
 8003cac:	4603      	mov	r3, r0
 8003cae:	4621      	mov	r1, r4
 8003cb0:	4618      	mov	r0, r3
 8003cb2:	f7ff ffd8 	bl	8003c66 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1ERKS8_>
 8003cb6:	bf00      	nop
 8003cb8:	3714      	adds	r7, #20
 8003cba:	46bd      	mov	sp, r7
 8003cbc:	bd90      	pop	{r4, r7, pc}

08003cbe <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>:
      _M_addr() const noexcept
 8003cbe:	b480      	push	{r7}
 8003cc0:	b083      	sub	sp, #12
 8003cc2:	af00      	add	r7, sp, #0
 8003cc4:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	4618      	mov	r0, r3
 8003cca:	370c      	adds	r7, #12
 8003ccc:	46bd      	mov	sp, r7
 8003cce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cd2:	4770      	bx	lr

08003cd4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8003cd4:	b580      	push	{r7, lr}
 8003cd6:	b084      	sub	sp, #16
 8003cd8:	af00      	add	r7, sp, #0
 8003cda:	60f8      	str	r0, [r7, #12]
 8003cdc:	60b9      	str	r1, [r7, #8]
 8003cde:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8003ce0:	68f8      	ldr	r0, [r7, #12]
 8003ce2:	f000 f84f 	bl	8003d84 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv>
 8003ce6:	4602      	mov	r2, r0
 8003ce8:	68bb      	ldr	r3, [r7, #8]
 8003cea:	4293      	cmp	r3, r2
 8003cec:	bf8c      	ite	hi
 8003cee:	2301      	movhi	r3, #1
 8003cf0:	2300      	movls	r3, #0
 8003cf2:	b2db      	uxtb	r3, r3
 8003cf4:	2b00      	cmp	r3, #0
 8003cf6:	d001      	beq.n	8003cfc <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8003cf8:	f01f f86b 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8003cfc:	68ba      	ldr	r2, [r7, #8]
 8003cfe:	4613      	mov	r3, r2
 8003d00:	009b      	lsls	r3, r3, #2
 8003d02:	4413      	add	r3, r2
 8003d04:	009b      	lsls	r3, r3, #2
 8003d06:	4618      	mov	r0, r3
 8003d08:	f01e ff9e 	bl	8022c48 <_Znwj>
 8003d0c:	4603      	mov	r3, r0
 8003d0e:	bf00      	nop
      }
 8003d10:	4618      	mov	r0, r3
 8003d12:	3710      	adds	r7, #16
 8003d14:	46bd      	mov	sp, r7
 8003d16:	bd80      	pop	{r7, pc}

08003d18 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8003d18:	b590      	push	{r4, r7, lr}
 8003d1a:	b085      	sub	sp, #20
 8003d1c:	af00      	add	r7, sp, #0
 8003d1e:	60f8      	str	r0, [r7, #12]
 8003d20:	60b9      	str	r1, [r7, #8]
 8003d22:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8003d24:	6878      	ldr	r0, [r7, #4]
 8003d26:	f7fe feb1 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003d2a:	4604      	mov	r4, r0
 8003d2c:	68bb      	ldr	r3, [r7, #8]
 8003d2e:	4619      	mov	r1, r3
 8003d30:	2003      	movs	r0, #3
 8003d32:	f7fd f992 	bl	800105a <_ZnwjPv>
 8003d36:	4603      	mov	r3, r0
 8003d38:	4622      	mov	r2, r4
 8003d3a:	8811      	ldrh	r1, [r2, #0]
 8003d3c:	7892      	ldrb	r2, [r2, #2]
 8003d3e:	8019      	strh	r1, [r3, #0]
 8003d40:	709a      	strb	r2, [r3, #2]
 8003d42:	bf00      	nop
 8003d44:	3714      	adds	r7, #20
 8003d46:	46bd      	mov	sp, r7
 8003d48:	bd90      	pop	{r4, r7, pc}
	...

08003d4c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8003d4c:	b480      	push	{r7}
 8003d4e:	b083      	sub	sp, #12
 8003d50:	af00      	add	r7, sp, #0
 8003d52:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8003d54:	4b03      	ldr	r3, [pc, #12]	; (8003d64 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv+0x18>)
      }
 8003d56:	4618      	mov	r0, r3
 8003d58:	370c      	adds	r7, #12
 8003d5a:	46bd      	mov	sp, r7
 8003d5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d60:	4770      	bx	lr
 8003d62:	bf00      	nop
 8003d64:	06666666 	.word	0x06666666

08003d68 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8003d68:	b480      	push	{r7}
 8003d6a:	b083      	sub	sp, #12
 8003d6c:	af00      	add	r7, sp, #0
 8003d6e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8003d70:	4b03      	ldr	r3, [pc, #12]	; (8003d80 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv+0x18>)
      }
 8003d72:	4618      	mov	r0, r3
 8003d74:	370c      	adds	r7, #12
 8003d76:	46bd      	mov	sp, r7
 8003d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d7c:	4770      	bx	lr
 8003d7e:	bf00      	nop
 8003d80:	02e8ba2e 	.word	0x02e8ba2e

08003d84 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8003d84:	b480      	push	{r7}
 8003d86:	b083      	sub	sp, #12
 8003d88:	af00      	add	r7, sp, #0
 8003d8a:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8003d8c:	4b03      	ldr	r3, [pc, #12]	; (8003d9c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv+0x18>)
      }
 8003d8e:	4618      	mov	r0, r3
 8003d90:	370c      	adds	r7, #12
 8003d92:	46bd      	mov	sp, r7
 8003d94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d98:	4770      	bx	lr
 8003d9a:	bf00      	nop
 8003d9c:	06666666 	.word	0x06666666

08003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
 8003da0:	b580      	push	{r7, lr}
 8003da2:	b082      	sub	sp, #8
 8003da4:	af00      	add	r7, sp, #0
 8003da6:	6078      	str	r0, [r7, #4]
 8003da8:	687b      	ldr	r3, [r7, #4]
 8003daa:	4618      	mov	r0, r3
 8003dac:	f7fd fd89 	bl	80018c2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>
 8003db0:	687b      	ldr	r3, [r7, #4]
 8003db2:	4618      	mov	r0, r3
 8003db4:	3708      	adds	r7, #8
 8003db6:	46bd      	mov	sp, r7
 8003db8:	bd80      	pop	{r7, pc}

08003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>:
 8003dba:	b580      	push	{r7, lr}
 8003dbc:	b082      	sub	sp, #8
 8003dbe:	af00      	add	r7, sp, #0
 8003dc0:	6078      	str	r0, [r7, #4]
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	4618      	mov	r0, r3
 8003dc6:	f7fd fccc 	bl	8001762 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	4618      	mov	r0, r3
 8003dce:	3708      	adds	r7, #8
 8003dd0:	46bd      	mov	sp, r7
 8003dd2:	bd80      	pop	{r7, pc}

08003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>:
 8003dd4:	b580      	push	{r7, lr}
 8003dd6:	b082      	sub	sp, #8
 8003dd8:	af00      	add	r7, sp, #0
 8003dda:	6078      	str	r0, [r7, #4]
 8003ddc:	687b      	ldr	r3, [r7, #4]
 8003dde:	4618      	mov	r0, r3
 8003de0:	f7fd fc12 	bl	8001608 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>
 8003de4:	687b      	ldr	r3, [r7, #4]
 8003de6:	4618      	mov	r0, r3
 8003de8:	3708      	adds	r7, #8
 8003dea:	46bd      	mov	sp, r7
 8003dec:	bd80      	pop	{r7, pc}
	...

08003df0 <_Z41__static_initialization_and_destruction_0ii>:
#include <Executor.h>

void Executor::execute(Program p)
{

}
 8003df0:	b590      	push	{r4, r7, lr}
 8003df2:	b0e7      	sub	sp, #412	; 0x19c
 8003df4:	af02      	add	r7, sp, #8
 8003df6:	1d3b      	adds	r3, r7, #4
 8003df8:	6018      	str	r0, [r3, #0]
 8003dfa:	463b      	mov	r3, r7
 8003dfc:	6019      	str	r1, [r3, #0]
 8003dfe:	1d3b      	adds	r3, r7, #4
 8003e00:	681b      	ldr	r3, [r3, #0]
 8003e02:	2b01      	cmp	r3, #1
 8003e04:	f040 819d 	bne.w	8004142 <_Z41__static_initialization_and_destruction_0ii+0x352>
 8003e08:	463b      	mov	r3, r7
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003e10:	4293      	cmp	r3, r2
 8003e12:	f040 8196 	bne.w	8004142 <_Z41__static_initialization_and_destruction_0ii+0x352>
	{'^', TOKEN_POWER},
	{'%', TOKEN_MODULO},
	{'(', TOKEN_LEFT_BRACKET},
	{')', TOKEN_RIGHT_BRACKET},
	{'\0', TOKEN_END_OF_FILE},
};
 8003e16:	f107 0314 	add.w	r3, r7, #20
 8003e1a:	4618      	mov	r0, r3
 8003e1c:	2322      	movs	r3, #34	; 0x22
 8003e1e:	461a      	mov	r2, r3
 8003e20:	2100      	movs	r1, #0
 8003e22:	f020 fa97 	bl	8024354 <memset>
 8003e26:	f107 0314 	add.w	r3, r7, #20
 8003e2a:	223a      	movs	r2, #58	; 0x3a
 8003e2c:	701a      	strb	r2, [r3, #0]
 8003e2e:	f107 0314 	add.w	r3, r7, #20
 8003e32:	2201      	movs	r2, #1
 8003e34:	705a      	strb	r2, [r3, #1]
 8003e36:	f107 0314 	add.w	r3, r7, #20
 8003e3a:	220a      	movs	r2, #10
 8003e3c:	709a      	strb	r2, [r3, #2]
 8003e3e:	f107 0314 	add.w	r3, r7, #20
 8003e42:	220a      	movs	r2, #10
 8003e44:	70da      	strb	r2, [r3, #3]
 8003e46:	f107 0314 	add.w	r3, r7, #20
 8003e4a:	222c      	movs	r2, #44	; 0x2c
 8003e4c:	711a      	strb	r2, [r3, #4]
 8003e4e:	f107 0314 	add.w	r3, r7, #20
 8003e52:	220c      	movs	r2, #12
 8003e54:	715a      	strb	r2, [r3, #5]
 8003e56:	f107 0314 	add.w	r3, r7, #20
 8003e5a:	222e      	movs	r2, #46	; 0x2e
 8003e5c:	719a      	strb	r2, [r3, #6]
 8003e5e:	f107 0314 	add.w	r3, r7, #20
 8003e62:	220b      	movs	r2, #11
 8003e64:	71da      	strb	r2, [r3, #7]
 8003e66:	f107 0314 	add.w	r3, r7, #20
 8003e6a:	225b      	movs	r2, #91	; 0x5b
 8003e6c:	721a      	strb	r2, [r3, #8]
 8003e6e:	f107 0314 	add.w	r3, r7, #20
 8003e72:	220d      	movs	r2, #13
 8003e74:	725a      	strb	r2, [r3, #9]
 8003e76:	f107 0314 	add.w	r3, r7, #20
 8003e7a:	225d      	movs	r2, #93	; 0x5d
 8003e7c:	729a      	strb	r2, [r3, #10]
 8003e7e:	f107 0314 	add.w	r3, r7, #20
 8003e82:	220e      	movs	r2, #14
 8003e84:	72da      	strb	r2, [r3, #11]
 8003e86:	f107 0314 	add.w	r3, r7, #20
 8003e8a:	227c      	movs	r2, #124	; 0x7c
 8003e8c:	731a      	strb	r2, [r3, #12]
 8003e8e:	f107 0314 	add.w	r3, r7, #20
 8003e92:	2215      	movs	r2, #21
 8003e94:	735a      	strb	r2, [r3, #13]
 8003e96:	f107 0314 	add.w	r3, r7, #20
 8003e9a:	2226      	movs	r2, #38	; 0x26
 8003e9c:	739a      	strb	r2, [r3, #14]
 8003e9e:	f107 0314 	add.w	r3, r7, #20
 8003ea2:	2216      	movs	r2, #22
 8003ea4:	73da      	strb	r2, [r3, #15]
 8003ea6:	f107 0314 	add.w	r3, r7, #20
 8003eaa:	222b      	movs	r2, #43	; 0x2b
 8003eac:	741a      	strb	r2, [r3, #16]
 8003eae:	f107 0314 	add.w	r3, r7, #20
 8003eb2:	221f      	movs	r2, #31
 8003eb4:	745a      	strb	r2, [r3, #17]
 8003eb6:	f107 0314 	add.w	r3, r7, #20
 8003eba:	222d      	movs	r2, #45	; 0x2d
 8003ebc:	749a      	strb	r2, [r3, #18]
 8003ebe:	f107 0314 	add.w	r3, r7, #20
 8003ec2:	2220      	movs	r2, #32
 8003ec4:	74da      	strb	r2, [r3, #19]
 8003ec6:	f107 0314 	add.w	r3, r7, #20
 8003eca:	222a      	movs	r2, #42	; 0x2a
 8003ecc:	751a      	strb	r2, [r3, #20]
 8003ece:	f107 0314 	add.w	r3, r7, #20
 8003ed2:	2221      	movs	r2, #33	; 0x21
 8003ed4:	755a      	strb	r2, [r3, #21]
 8003ed6:	f107 0314 	add.w	r3, r7, #20
 8003eda:	222f      	movs	r2, #47	; 0x2f
 8003edc:	759a      	strb	r2, [r3, #22]
 8003ede:	f107 0314 	add.w	r3, r7, #20
 8003ee2:	2222      	movs	r2, #34	; 0x22
 8003ee4:	75da      	strb	r2, [r3, #23]
 8003ee6:	f107 0314 	add.w	r3, r7, #20
 8003eea:	225e      	movs	r2, #94	; 0x5e
 8003eec:	761a      	strb	r2, [r3, #24]
 8003eee:	f107 0314 	add.w	r3, r7, #20
 8003ef2:	2223      	movs	r2, #35	; 0x23
 8003ef4:	765a      	strb	r2, [r3, #25]
 8003ef6:	f107 0314 	add.w	r3, r7, #20
 8003efa:	2225      	movs	r2, #37	; 0x25
 8003efc:	769a      	strb	r2, [r3, #26]
 8003efe:	f107 0314 	add.w	r3, r7, #20
 8003f02:	2224      	movs	r2, #36	; 0x24
 8003f04:	76da      	strb	r2, [r3, #27]
 8003f06:	f107 0314 	add.w	r3, r7, #20
 8003f0a:	2228      	movs	r2, #40	; 0x28
 8003f0c:	771a      	strb	r2, [r3, #28]
 8003f0e:	f107 0314 	add.w	r3, r7, #20
 8003f12:	2226      	movs	r2, #38	; 0x26
 8003f14:	775a      	strb	r2, [r3, #29]
 8003f16:	f107 0314 	add.w	r3, r7, #20
 8003f1a:	2229      	movs	r2, #41	; 0x29
 8003f1c:	779a      	strb	r2, [r3, #30]
 8003f1e:	f107 0314 	add.w	r3, r7, #20
 8003f22:	2227      	movs	r2, #39	; 0x27
 8003f24:	77da      	strb	r2, [r3, #31]
 8003f26:	f107 0314 	add.w	r3, r7, #20
 8003f2a:	2225      	movs	r2, #37	; 0x25
 8003f2c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8003f30:	f107 030c 	add.w	r3, r7, #12
 8003f34:	f107 0214 	add.w	r2, r7, #20
 8003f38:	601a      	str	r2, [r3, #0]
 8003f3a:	f107 030c 	add.w	r3, r7, #12
 8003f3e:	2211      	movs	r2, #17
 8003f40:	605a      	str	r2, [r3, #4]
 8003f42:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8003f46:	4618      	mov	r0, r3
 8003f48:	f7fd f9cc 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8003f4c:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8003f50:	f107 020c 	add.w	r2, r7, #12
 8003f54:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8003f58:	9300      	str	r3, [sp, #0]
 8003f5a:	460b      	mov	r3, r1
 8003f5c:	ca06      	ldmia	r2, {r1, r2}
 8003f5e:	4885      	ldr	r0, [pc, #532]	; (8004174 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8003f60:	f7fd f9d8 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8003f64:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8003f68:	4618      	mov	r0, r3
 8003f6a:	f7fd f9c7 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>

static const std::map<std::string, token_type> token_strings
{
	{"true", TOKEN_TRUE},
 8003f6e:	2305      	movs	r3, #5
 8003f70:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
	{"if", TOKEN_IF},
	{"elseif", TOKEN_ELSEIF},
	{"else", TOKEN_ELSE},
	{"while", TOKEN_WHILE},
	{"end", TOKEN_END},
};
 8003f74:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8003f78:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003f7c:	497e      	ldr	r1, [pc, #504]	; (8004178 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8003f7e:	4618      	mov	r0, r3
 8003f80:	f7fd f8b4 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8003f84:	2306      	movs	r3, #6
 8003f86:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8003f8a:	f207 1263 	addw	r2, r7, #355	; 0x163
 8003f8e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003f92:	331c      	adds	r3, #28
 8003f94:	4979      	ldr	r1, [pc, #484]	; (800417c <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8003f96:	4618      	mov	r0, r3
 8003f98:	f7fd f8d0 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8003f9c:	2307      	movs	r3, #7
 8003f9e:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8003fa2:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8003fa6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003faa:	3338      	adds	r3, #56	; 0x38
 8003fac:	4974      	ldr	r1, [pc, #464]	; (8004180 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8003fae:	4618      	mov	r0, r3
 8003fb0:	f7fd f8c4 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8003fb4:	2308      	movs	r3, #8
 8003fb6:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8003fba:	f207 1265 	addw	r2, r7, #357	; 0x165
 8003fbe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003fc2:	3354      	adds	r3, #84	; 0x54
 8003fc4:	496f      	ldr	r1, [pc, #444]	; (8004184 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8003fc6:	4618      	mov	r0, r3
 8003fc8:	f7fd f890 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8003fcc:	2309      	movs	r3, #9
 8003fce:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8003fd2:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8003fd6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003fda:	3370      	adds	r3, #112	; 0x70
 8003fdc:	496a      	ldr	r1, [pc, #424]	; (8004188 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8003fde:	4618      	mov	r0, r3
 8003fe0:	f7fd f8d4 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8003fe4:	2310      	movs	r3, #16
 8003fe6:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8003fea:	f207 1267 	addw	r2, r7, #359	; 0x167
 8003fee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003ff2:	338c      	adds	r3, #140	; 0x8c
 8003ff4:	4965      	ldr	r1, [pc, #404]	; (800418c <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8003ff6:	4618      	mov	r0, r3
 8003ff8:	f7fd f8f0 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8003ffc:	2311      	movs	r3, #17
 8003ffe:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8004002:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8004006:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800400a:	33a8      	adds	r3, #168	; 0xa8
 800400c:	4960      	ldr	r1, [pc, #384]	; (8004190 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800400e:	4618      	mov	r0, r3
 8004010:	f7fd f8bc 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8004014:	2312      	movs	r3, #18
 8004016:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800401a:	f207 1269 	addw	r2, r7, #361	; 0x169
 800401e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8004022:	33c4      	adds	r3, #196	; 0xc4
 8004024:	495b      	ldr	r1, [pc, #364]	; (8004194 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8004026:	4618      	mov	r0, r3
 8004028:	f7fd f860 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800402c:	2313      	movs	r3, #19
 800402e:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8004032:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8004036:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800403a:	33e0      	adds	r3, #224	; 0xe0
 800403c:	4956      	ldr	r1, [pc, #344]	; (8004198 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800403e:	4618      	mov	r0, r3
 8004040:	f7fd f87c 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8004044:	2314      	movs	r3, #20
 8004046:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800404a:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800404e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8004052:	33fc      	adds	r3, #252	; 0xfc
 8004054:	4951      	ldr	r1, [pc, #324]	; (800419c <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8004056:	4618      	mov	r0, r3
 8004058:	f7fd f8e8 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800405c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8004060:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8004064:	601a      	str	r2, [r3, #0]
 8004066:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800406a:	220a      	movs	r2, #10
 800406c:	605a      	str	r2, [r3, #4]
 800406e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8004072:	4618      	mov	r0, r3
 8004074:	f7fd f9db 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8004078:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800407c:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8004080:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8004084:	9300      	str	r3, [sp, #0]
 8004086:	460b      	mov	r3, r1
 8004088:	ca06      	ldmia	r2, {r1, r2}
 800408a:	4845      	ldr	r0, [pc, #276]	; (80041a0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800408c:	f7fd f9e7 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8004090:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8004094:	4618      	mov	r0, r3
 8004096:	f7fd f9d6 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800409a:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800409e:	f504 748c 	add.w	r4, r4, #280	; 0x118
 80040a2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80040a6:	429c      	cmp	r4, r3
 80040a8:	d004      	beq.n	80040b4 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 80040aa:	3c1c      	subs	r4, #28
 80040ac:	4620      	mov	r0, r4
 80040ae:	f7fd f810 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 80040b2:	e7f6      	b.n	80040a2 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
{
	{'<', {TOKEN_SMALLER_THAN, TOKEN_SMALLER_OR_EQUAL}},
	{'>', {TOKEN_GREATER_THAN, TOKEN_GREATER_OR_EQUAL}},
	{'=', {TOKEN_ASSIGN, TOKEN_EQUALS}},
	{'!', {TOKEN_EXCLAMATION, TOKEN_NOT_EQUAL}},
};
 80040b4:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80040b8:	2200      	movs	r2, #0
 80040ba:	601a      	str	r2, [r3, #0]
 80040bc:	605a      	str	r2, [r3, #4]
 80040be:	609a      	str	r2, [r3, #8]
 80040c0:	233c      	movs	r3, #60	; 0x3c
 80040c2:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 80040c6:	231b      	movs	r3, #27
 80040c8:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 80040cc:	231c      	movs	r3, #28
 80040ce:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 80040d2:	233e      	movs	r3, #62	; 0x3e
 80040d4:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 80040d8:	2319      	movs	r3, #25
 80040da:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 80040de:	231a      	movs	r3, #26
 80040e0:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 80040e4:	233d      	movs	r3, #61	; 0x3d
 80040e6:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 80040ea:	2318      	movs	r3, #24
 80040ec:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 80040f0:	231d      	movs	r3, #29
 80040f2:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 80040f6:	2321      	movs	r3, #33	; 0x21
 80040f8:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 80040fc:	2317      	movs	r3, #23
 80040fe:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8004102:	231e      	movs	r3, #30
 8004104:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8004108:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800410c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8004110:	2304      	movs	r3, #4
 8004112:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8004116:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800411a:	4618      	mov	r0, r3
 800411c:	f7fd f9cf 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8004120:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8004124:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8004128:	9300      	str	r3, [sp, #0]
 800412a:	4613      	mov	r3, r2
 800412c:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8004130:	ca06      	ldmia	r2, {r1, r2}
 8004132:	481c      	ldr	r0, [pc, #112]	; (80041a4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8004134:	f7fd f9db 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8004138:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800413c:	4618      	mov	r0, r3
 800413e:	f7fd f9ca 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8004142:	1d3b      	adds	r3, r7, #4
 8004144:	681b      	ldr	r3, [r3, #0]
 8004146:	2b00      	cmp	r3, #0
 8004148:	d10e      	bne.n	8004168 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800414a:	463b      	mov	r3, r7
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004152:	4293      	cmp	r3, r2
 8004154:	d108      	bne.n	8004168 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8004156:	4813      	ldr	r0, [pc, #76]	; (80041a4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8004158:	f7ff fe22 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800415c:	4810      	ldr	r0, [pc, #64]	; (80041a0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800415e:	f7ff fe2c 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8004162:	4804      	ldr	r0, [pc, #16]	; (8004174 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8004164:	f7ff fe36 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8004168:	bf00      	nop
 800416a:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800416e:	46bd      	mov	sp, r7
 8004170:	bd90      	pop	{r4, r7, pc}
 8004172:	bf00      	nop
 8004174:	20000204 	.word	0x20000204
 8004178:	0802735c 	.word	0x0802735c
 800417c:	08027364 	.word	0x08027364
 8004180:	0802736c 	.word	0x0802736c
 8004184:	08027374 	.word	0x08027374
 8004188:	0802737c 	.word	0x0802737c
 800418c:	08027384 	.word	0x08027384
 8004190:	08027388 	.word	0x08027388
 8004194:	08027390 	.word	0x08027390
 8004198:	08027398 	.word	0x08027398
 800419c:	080273a0 	.word	0x080273a0
 80041a0:	2000021c 	.word	0x2000021c
 80041a4:	20000234 	.word	0x20000234

080041a8 <_GLOBAL__sub_I__ZN8Executor7executeE7Program>:
 80041a8:	b580      	push	{r7, lr}
 80041aa:	af00      	add	r7, sp, #0
 80041ac:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80041b0:	2001      	movs	r0, #1
 80041b2:	f7ff fe1d 	bl	8003df0 <_Z41__static_initialization_and_destruction_0ii>
 80041b6:	bd80      	pop	{r7, pc}

080041b8 <_GLOBAL__sub_D__ZN8Executor7executeE7Program>:
 80041b8:	b580      	push	{r7, lr}
 80041ba:	af00      	add	r7, sp, #0
 80041bc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80041c0:	2000      	movs	r0, #0
 80041c2:	f7ff fe15 	bl	8003df0 <_Z41__static_initialization_and_destruction_0ii>
 80041c6:	bd80      	pop	{r7, pc}

080041c8 <_ZSt26__throw_bad_variant_accessPKc>:
    friend void __throw_bad_variant_access(const char* __what);
  };

  inline void
  __throw_bad_variant_access(const char* __what)
  { _GLIBCXX_THROW_OR_ABORT(bad_variant_access(__what)); }
 80041c8:	b580      	push	{r7, lr}
 80041ca:	b082      	sub	sp, #8
 80041cc:	af00      	add	r7, sp, #0
 80041ce:	6078      	str	r0, [r7, #4]
 80041d0:	f020 f810 	bl	80241f4 <abort>

080041d4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 80041d4:	b580      	push	{r7, lr}
 80041d6:	b082      	sub	sp, #8
 80041d8:	af00      	add	r7, sp, #0
 80041da:	6078      	str	r0, [r7, #4]
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	4618      	mov	r0, r3
 80041e0:	f000 fa21 	bl	8004626 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	4618      	mov	r0, r3
 80041e8:	3708      	adds	r7, #8
 80041ea:	46bd      	mov	sp, r7
 80041ec:	bd80      	pop	{r7, pc}

080041ee <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 80041ee:	b580      	push	{r7, lr}
 80041f0:	b082      	sub	sp, #8
 80041f2:	af00      	add	r7, sp, #0
 80041f4:	6078      	str	r0, [r7, #4]
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	4618      	mov	r0, r3
 80041fa:	f7ff ffeb 	bl	80041d4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	4618      	mov	r0, r3
 8004202:	3708      	adds	r7, #8
 8004204:	46bd      	mov	sp, r7
 8004206:	bd80      	pop	{r7, pc}

08004208 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 8004208:	b580      	push	{r7, lr}
 800420a:	b082      	sub	sp, #8
 800420c:	af00      	add	r7, sp, #0
 800420e:	6078      	str	r0, [r7, #4]
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	4618      	mov	r0, r3
 8004214:	f7ff ffeb 	bl	80041ee <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	4618      	mov	r0, r3
 800421c:	3708      	adds	r7, #8
 800421e:	46bd      	mov	sp, r7
 8004220:	bd80      	pop	{r7, pc}

08004222 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 8004222:	b580      	push	{r7, lr}
 8004224:	b082      	sub	sp, #8
 8004226:	af00      	add	r7, sp, #0
 8004228:	6078      	str	r0, [r7, #4]
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	4618      	mov	r0, r3
 800422e:	f7ff ffeb 	bl	8004208 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	4618      	mov	r0, r3
 8004236:	3708      	adds	r7, #8
 8004238:	46bd      	mov	sp, r7
 800423a:	bd80      	pop	{r7, pc}

0800423c <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 800423c:	b580      	push	{r7, lr}
 800423e:	b082      	sub	sp, #8
 8004240:	af00      	add	r7, sp, #0
 8004242:	6078      	str	r0, [r7, #4]
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	4618      	mov	r0, r3
 8004248:	f7ff ffeb 	bl	8004222 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	4618      	mov	r0, r3
 8004250:	3708      	adds	r7, #8
 8004252:	46bd      	mov	sp, r7
 8004254:	bd80      	pop	{r7, pc}

08004256 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
      variant() = default;
      variant(const variant& __rhs) = default;
      variant(variant&&) = default;
      variant& operator=(const variant&) = default;
      variant& operator=(variant&&) = default;
      ~variant() = default;
 8004256:	b580      	push	{r7, lr}
 8004258:	b082      	sub	sp, #8
 800425a:	af00      	add	r7, sp, #0
 800425c:	6078      	str	r0, [r7, #4]
 800425e:	687b      	ldr	r3, [r7, #4]
 8004260:	4618      	mov	r0, r3
 8004262:	f7ff ffeb 	bl	800423c <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8004266:	687b      	ldr	r3, [r7, #4]
 8004268:	4618      	mov	r0, r3
 800426a:	3708      	adds	r7, #8
 800426c:	46bd      	mov	sp, r7
 800426e:	bd80      	pop	{r7, pc}

08004270 <_ZN17Primal_expressionD1Ev>:
#include <Expression.h>

Primal_expression::~Primal_expression()
 8004270:	b590      	push	{r4, r7, lr}
 8004272:	b083      	sub	sp, #12
 8004274:	af00      	add	r7, sp, #0
 8004276:	6078      	str	r0, [r7, #4]
{
	if(std::holds_alternative<Variable*>(content))
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	3304      	adds	r3, #4
 800427c:	4618      	mov	r0, r3
 800427e:	f000 f9f1 	bl	8004664 <_ZSt17holds_alternativeIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEEbRKSt7variantIJDpT0_EE>
 8004282:	4603      	mov	r3, r0
 8004284:	2b00      	cmp	r3, #0
 8004286:	d010      	beq.n	80042aa <_ZN17Primal_expressionD1Ev+0x3a>
	{
		delete std::get<Variable*>(content);
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	3304      	adds	r3, #4
 800428c:	4618      	mov	r0, r3
 800428e:	f000 f9fa 	bl	8004686 <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>
 8004292:	4603      	mov	r3, r0
 8004294:	681c      	ldr	r4, [r3, #0]
 8004296:	2c00      	cmp	r4, #0
 8004298:	d01f      	beq.n	80042da <_ZN17Primal_expressionD1Ev+0x6a>
 800429a:	4620      	mov	r0, r4
 800429c:	f012 fd1e 	bl	8016cdc <_ZN8VariableD1Ev>
 80042a0:	2120      	movs	r1, #32
 80042a2:	4620      	mov	r0, r4
 80042a4:	f01e fcbf 	bl	8022c26 <_ZdlPvj>
 80042a8:	e017      	b.n	80042da <_ZN17Primal_expressionD1Ev+0x6a>
	}
	else if(std::holds_alternative<Function_call*>(content))
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	3304      	adds	r3, #4
 80042ae:	4618      	mov	r0, r3
 80042b0:	f000 f9f5 	bl	800469e <_ZSt17holds_alternativeIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EEbRKSt7variantIJDpT0_EE>
 80042b4:	4603      	mov	r3, r0
 80042b6:	2b00      	cmp	r3, #0
 80042b8:	d00f      	beq.n	80042da <_ZN17Primal_expressionD1Ev+0x6a>
	{
		delete std::get<Function_call*>(content);
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	3304      	adds	r3, #4
 80042be:	4618      	mov	r0, r3
 80042c0:	f000 f9fe 	bl	80046c0 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>
 80042c4:	4603      	mov	r3, r0
 80042c6:	681c      	ldr	r4, [r3, #0]
 80042c8:	2c00      	cmp	r4, #0
 80042ca:	d006      	beq.n	80042da <_ZN17Primal_expressionD1Ev+0x6a>
 80042cc:	4620      	mov	r0, r4
 80042ce:	f012 fc8b 	bl	8016be8 <_ZN13Function_callD1Ev>
 80042d2:	212c      	movs	r1, #44	; 0x2c
 80042d4:	4620      	mov	r0, r4
 80042d6:	f01e fca6 	bl	8022c26 <_ZdlPvj>
Primal_expression::~Primal_expression()
 80042da:	687b      	ldr	r3, [r7, #4]
 80042dc:	3304      	adds	r3, #4
 80042de:	4618      	mov	r0, r3
 80042e0:	f7ff ffb9 	bl	8004256 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
	}
}
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	4618      	mov	r0, r3
 80042e8:	370c      	adds	r7, #12
 80042ea:	46bd      	mov	sp, r7
 80042ec:	bd90      	pop	{r4, r7, pc}

080042ee <_ZN19Priority_expressionD1Ev>:

Priority_expression::~Priority_expression()
 80042ee:	b590      	push	{r4, r7, lr}
 80042f0:	b083      	sub	sp, #12
 80042f2:	af00      	add	r7, sp, #0
 80042f4:	6078      	str	r0, [r7, #4]
{
	if(std::holds_alternative<Expression*>(exp))
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	4618      	mov	r0, r3
 80042fa:	f000 fa00 	bl	80046fe <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>
 80042fe:	4603      	mov	r3, r0
 8004300:	2b00      	cmp	r3, #0
 8004302:	d00f      	beq.n	8004324 <_ZN19Priority_expressionD1Ev+0x36>
	{
		delete std::get<Expression*>(exp);
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	4618      	mov	r0, r3
 8004308:	f000 fa0a 	bl	8004720 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>
 800430c:	4603      	mov	r3, r0
 800430e:	681c      	ldr	r4, [r3, #0]
 8004310:	2c00      	cmp	r4, #0
 8004312:	d016      	beq.n	8004342 <_ZN19Priority_expressionD1Ev+0x54>
 8004314:	4620      	mov	r0, r4
 8004316:	f000 f948 	bl	80045aa <_ZN10ExpressionD1Ev>
 800431a:	2114      	movs	r1, #20
 800431c:	4620      	mov	r0, r4
 800431e:	f01e fc82 	bl	8022c26 <_ZdlPvj>
 8004322:	e00e      	b.n	8004342 <_ZN19Priority_expressionD1Ev+0x54>
	}
	else
	{
		delete std::get<Primal_expression*>(exp);
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	4618      	mov	r0, r3
 8004328:	f000 fa06 	bl	8004738 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>
 800432c:	4603      	mov	r3, r0
 800432e:	681c      	ldr	r4, [r3, #0]
 8004330:	2c00      	cmp	r4, #0
 8004332:	d006      	beq.n	8004342 <_ZN19Priority_expressionD1Ev+0x54>
 8004334:	4620      	mov	r0, r4
 8004336:	f7ff ff9b 	bl	8004270 <_ZN17Primal_expressionD1Ev>
 800433a:	2120      	movs	r1, #32
 800433c:	4620      	mov	r0, r4
 800433e:	f01e fc72 	bl	8022c26 <_ZdlPvj>
	}
}
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	4618      	mov	r0, r3
 8004346:	370c      	adds	r7, #12
 8004348:	46bd      	mov	sp, r7
 800434a:	bd90      	pop	{r4, r7, pc}

0800434c <_ZN16Unary_expressionD1Ev>:

Unary_expression::~Unary_expression()
 800434c:	b590      	push	{r4, r7, lr}
 800434e:	b083      	sub	sp, #12
 8004350:	af00      	add	r7, sp, #0
 8004352:	6078      	str	r0, [r7, #4]
{
	delete prior_exp;
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	681c      	ldr	r4, [r3, #0]
 8004358:	2c00      	cmp	r4, #0
 800435a:	d006      	beq.n	800436a <_ZN16Unary_expressionD1Ev+0x1e>
 800435c:	4620      	mov	r0, r4
 800435e:	f7ff ffc6 	bl	80042ee <_ZN19Priority_expressionD1Ev>
 8004362:	2108      	movs	r1, #8
 8004364:	4620      	mov	r0, r4
 8004366:	f01e fc5e 	bl	8022c26 <_ZdlPvj>
}
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	4618      	mov	r0, r3
 800436e:	370c      	adds	r7, #12
 8004370:	46bd      	mov	sp, r7
 8004372:	bd90      	pop	{r4, r7, pc}

08004374 <_ZN16Power_expressionD1Ev>:

Power_expression::~Power_expression()
 8004374:	b590      	push	{r4, r7, lr}
 8004376:	b083      	sub	sp, #12
 8004378:	af00      	add	r7, sp, #0
 800437a:	6078      	str	r0, [r7, #4]
{
	delete left_un_exp;
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	681c      	ldr	r4, [r3, #0]
 8004380:	2c00      	cmp	r4, #0
 8004382:	d006      	beq.n	8004392 <_ZN16Power_expressionD1Ev+0x1e>
 8004384:	4620      	mov	r0, r4
 8004386:	f7ff ffe1 	bl	800434c <_ZN16Unary_expressionD1Ev>
 800438a:	2108      	movs	r1, #8
 800438c:	4620      	mov	r0, r4
 800438e:	f01e fc4a 	bl	8022c26 <_ZdlPvj>
	delete right_un_exp;
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	685c      	ldr	r4, [r3, #4]
 8004396:	2c00      	cmp	r4, #0
 8004398:	d006      	beq.n	80043a8 <_ZN16Power_expressionD1Ev+0x34>
 800439a:	4620      	mov	r0, r4
 800439c:	f7ff ffd6 	bl	800434c <_ZN16Unary_expressionD1Ev>
 80043a0:	2108      	movs	r1, #8
 80043a2:	4620      	mov	r0, r4
 80043a4:	f01e fc3f 	bl	8022c26 <_ZdlPvj>
}
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	4618      	mov	r0, r3
 80043ac:	370c      	adds	r7, #12
 80043ae:	46bd      	mov	sp, r7
 80043b0:	bd90      	pop	{r4, r7, pc}

080043b2 <_ZN19Multiply_expressionD1Ev>:

Multiply_expression::~Multiply_expression()
 80043b2:	b590      	push	{r4, r7, lr}
 80043b4:	b087      	sub	sp, #28
 80043b6:	af00      	add	r7, sp, #0
 80043b8:	6078      	str	r0, [r7, #4]
{
	for(Power_expression* exp : pow_exps)
 80043ba:	687b      	ldr	r3, [r7, #4]
 80043bc:	617b      	str	r3, [r7, #20]
 80043be:	6978      	ldr	r0, [r7, #20]
 80043c0:	f000 f9fc 	bl	80047bc <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>
 80043c4:	4603      	mov	r3, r0
 80043c6:	60fb      	str	r3, [r7, #12]
 80043c8:	6978      	ldr	r0, [r7, #20]
 80043ca:	f000 fa07 	bl	80047dc <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 80043ce:	4603      	mov	r3, r0
 80043d0:	60bb      	str	r3, [r7, #8]
 80043d2:	f107 0208 	add.w	r2, r7, #8
 80043d6:	f107 030c 	add.w	r3, r7, #12
 80043da:	4611      	mov	r1, r2
 80043dc:	4618      	mov	r0, r3
 80043de:	f000 fa0e 	bl	80047fe <_ZN9__gnu_cxxneIPP16Power_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 80043e2:	4603      	mov	r3, r0
 80043e4:	2b00      	cmp	r3, #0
 80043e6:	d017      	beq.n	8004418 <_ZN19Multiply_expressionD1Ev+0x66>
 80043e8:	f107 030c 	add.w	r3, r7, #12
 80043ec:	4618      	mov	r0, r3
 80043ee:	f000 fa2e 	bl	800484e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 80043f2:	4603      	mov	r3, r0
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 80043f8:	693c      	ldr	r4, [r7, #16]
 80043fa:	2c00      	cmp	r4, #0
 80043fc:	d006      	beq.n	800440c <_ZN19Multiply_expressionD1Ev+0x5a>
 80043fe:	4620      	mov	r0, r4
 8004400:	f7ff ffb8 	bl	8004374 <_ZN16Power_expressionD1Ev>
 8004404:	2108      	movs	r1, #8
 8004406:	4620      	mov	r0, r4
 8004408:	f01e fc0d 	bl	8022c26 <_ZdlPvj>
	for(Power_expression* exp : pow_exps)
 800440c:	f107 030c 	add.w	r3, r7, #12
 8004410:	4618      	mov	r0, r3
 8004412:	f000 fa0c 	bl	800482e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8004416:	e7dc      	b.n	80043d2 <_ZN19Multiply_expressionD1Ev+0x20>
Multiply_expression::~Multiply_expression()
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	330c      	adds	r3, #12
 800441c:	4618      	mov	r0, r3
 800441e:	f000 f9b2 	bl	8004786 <_ZNSt6vectorI13mult_operatorSaIS0_EED1Ev>
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	4618      	mov	r0, r3
 8004426:	f000 f993 	bl	8004750 <_ZNSt6vectorIP16Power_expressionSaIS1_EED1Ev>
	}
}
 800442a:	687b      	ldr	r3, [r7, #4]
 800442c:	4618      	mov	r0, r3
 800442e:	371c      	adds	r7, #28
 8004430:	46bd      	mov	sp, r7
 8004432:	bd90      	pop	{r4, r7, pc}

08004434 <_ZN14Sum_expressionD1Ev>:

Sum_expression::~Sum_expression()
 8004434:	b590      	push	{r4, r7, lr}
 8004436:	b087      	sub	sp, #28
 8004438:	af00      	add	r7, sp, #0
 800443a:	6078      	str	r0, [r7, #4]
{
	for(Multiply_expression* exp : mult_exps)
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	617b      	str	r3, [r7, #20]
 8004440:	6978      	ldr	r0, [r7, #20]
 8004442:	f000 fa46 	bl	80048d2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>
 8004446:	4603      	mov	r3, r0
 8004448:	60fb      	str	r3, [r7, #12]
 800444a:	6978      	ldr	r0, [r7, #20]
 800444c:	f000 fa51 	bl	80048f2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 8004450:	4603      	mov	r3, r0
 8004452:	60bb      	str	r3, [r7, #8]
 8004454:	f107 0208 	add.w	r2, r7, #8
 8004458:	f107 030c 	add.w	r3, r7, #12
 800445c:	4611      	mov	r1, r2
 800445e:	4618      	mov	r0, r3
 8004460:	f000 fa58 	bl	8004914 <_ZN9__gnu_cxxneIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8004464:	4603      	mov	r3, r0
 8004466:	2b00      	cmp	r3, #0
 8004468:	d017      	beq.n	800449a <_ZN14Sum_expressionD1Ev+0x66>
 800446a:	f107 030c 	add.w	r3, r7, #12
 800446e:	4618      	mov	r0, r3
 8004470:	f000 fa78 	bl	8004964 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8004474:	4603      	mov	r3, r0
 8004476:	681b      	ldr	r3, [r3, #0]
 8004478:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 800447a:	693c      	ldr	r4, [r7, #16]
 800447c:	2c00      	cmp	r4, #0
 800447e:	d006      	beq.n	800448e <_ZN14Sum_expressionD1Ev+0x5a>
 8004480:	4620      	mov	r0, r4
 8004482:	f7ff ff96 	bl	80043b2 <_ZN19Multiply_expressionD1Ev>
 8004486:	2118      	movs	r1, #24
 8004488:	4620      	mov	r0, r4
 800448a:	f01e fbcc 	bl	8022c26 <_ZdlPvj>
	for(Multiply_expression* exp : mult_exps)
 800448e:	f107 030c 	add.w	r3, r7, #12
 8004492:	4618      	mov	r0, r3
 8004494:	f000 fa56 	bl	8004944 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8004498:	e7dc      	b.n	8004454 <_ZN14Sum_expressionD1Ev+0x20>
Sum_expression::~Sum_expression()
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	330c      	adds	r3, #12
 800449e:	4618      	mov	r0, r3
 80044a0:	f000 f9fc 	bl	800489c <_ZNSt6vectorI12sum_operatorSaIS0_EED1Ev>
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	4618      	mov	r0, r3
 80044a8:	f000 f9dd 	bl	8004866 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EED1Ev>
	}
}
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	4618      	mov	r0, r3
 80044b0:	371c      	adds	r7, #28
 80044b2:	46bd      	mov	sp, r7
 80044b4:	bd90      	pop	{r4, r7, pc}

080044b6 <_ZN19Relation_expressionD1Ev>:

Relation_expression::~Relation_expression()
 80044b6:	b590      	push	{r4, r7, lr}
 80044b8:	b083      	sub	sp, #12
 80044ba:	af00      	add	r7, sp, #0
 80044bc:	6078      	str	r0, [r7, #4]
{
	delete left_sum_exp;
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	681c      	ldr	r4, [r3, #0]
 80044c2:	2c00      	cmp	r4, #0
 80044c4:	d006      	beq.n	80044d4 <_ZN19Relation_expressionD1Ev+0x1e>
 80044c6:	4620      	mov	r0, r4
 80044c8:	f7ff ffb4 	bl	8004434 <_ZN14Sum_expressionD1Ev>
 80044cc:	2118      	movs	r1, #24
 80044ce:	4620      	mov	r0, r4
 80044d0:	f01e fba9 	bl	8022c26 <_ZdlPvj>
	delete right_sum_exp;
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	685c      	ldr	r4, [r3, #4]
 80044d8:	2c00      	cmp	r4, #0
 80044da:	d006      	beq.n	80044ea <_ZN19Relation_expressionD1Ev+0x34>
 80044dc:	4620      	mov	r0, r4
 80044de:	f7ff ffa9 	bl	8004434 <_ZN14Sum_expressionD1Ev>
 80044e2:	2118      	movs	r1, #24
 80044e4:	4620      	mov	r0, r4
 80044e6:	f01e fb9e 	bl	8022c26 <_ZdlPvj>
}
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	4618      	mov	r0, r3
 80044ee:	370c      	adds	r7, #12
 80044f0:	46bd      	mov	sp, r7
 80044f2:	bd90      	pop	{r4, r7, pc}

080044f4 <_ZN18Compare_expressionD1Ev>:

Compare_expression::~Compare_expression()
 80044f4:	b590      	push	{r4, r7, lr}
 80044f6:	b083      	sub	sp, #12
 80044f8:	af00      	add	r7, sp, #0
 80044fa:	6078      	str	r0, [r7, #4]
{
	delete left_rel_exp;
 80044fc:	687b      	ldr	r3, [r7, #4]
 80044fe:	681c      	ldr	r4, [r3, #0]
 8004500:	2c00      	cmp	r4, #0
 8004502:	d006      	beq.n	8004512 <_ZN18Compare_expressionD1Ev+0x1e>
 8004504:	4620      	mov	r0, r4
 8004506:	f7ff ffd6 	bl	80044b6 <_ZN19Relation_expressionD1Ev>
 800450a:	210c      	movs	r1, #12
 800450c:	4620      	mov	r0, r4
 800450e:	f01e fb8a 	bl	8022c26 <_ZdlPvj>
	delete right_rel_exp;
 8004512:	687b      	ldr	r3, [r7, #4]
 8004514:	685c      	ldr	r4, [r3, #4]
 8004516:	2c00      	cmp	r4, #0
 8004518:	d006      	beq.n	8004528 <_ZN18Compare_expressionD1Ev+0x34>
 800451a:	4620      	mov	r0, r4
 800451c:	f7ff ffcb 	bl	80044b6 <_ZN19Relation_expressionD1Ev>
 8004520:	210c      	movs	r1, #12
 8004522:	4620      	mov	r0, r4
 8004524:	f01e fb7f 	bl	8022c26 <_ZdlPvj>
}
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	4618      	mov	r0, r3
 800452c:	370c      	adds	r7, #12
 800452e:	46bd      	mov	sp, r7
 8004530:	bd90      	pop	{r4, r7, pc}

08004532 <_ZN14And_expressionD1Ev>:

And_expression::~And_expression()
 8004532:	b590      	push	{r4, r7, lr}
 8004534:	b087      	sub	sp, #28
 8004536:	af00      	add	r7, sp, #0
 8004538:	6078      	str	r0, [r7, #4]
{
	for(Compare_expression* exp : comp_exps)
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	617b      	str	r3, [r7, #20]
 800453e:	6978      	ldr	r0, [r7, #20]
 8004540:	f000 fa37 	bl	80049b2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 8004544:	4603      	mov	r3, r0
 8004546:	60fb      	str	r3, [r7, #12]
 8004548:	6978      	ldr	r0, [r7, #20]
 800454a:	f000 fa42 	bl	80049d2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 800454e:	4603      	mov	r3, r0
 8004550:	60bb      	str	r3, [r7, #8]
 8004552:	f107 0208 	add.w	r2, r7, #8
 8004556:	f107 030c 	add.w	r3, r7, #12
 800455a:	4611      	mov	r1, r2
 800455c:	4618      	mov	r0, r3
 800455e:	f000 fa49 	bl	80049f4 <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8004562:	4603      	mov	r3, r0
 8004564:	2b00      	cmp	r3, #0
 8004566:	d017      	beq.n	8004598 <_ZN14And_expressionD1Ev+0x66>
 8004568:	f107 030c 	add.w	r3, r7, #12
 800456c:	4618      	mov	r0, r3
 800456e:	f000 fa69 	bl	8004a44 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8004572:	4603      	mov	r3, r0
 8004574:	681b      	ldr	r3, [r3, #0]
 8004576:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8004578:	693c      	ldr	r4, [r7, #16]
 800457a:	2c00      	cmp	r4, #0
 800457c:	d006      	beq.n	800458c <_ZN14And_expressionD1Ev+0x5a>
 800457e:	4620      	mov	r0, r4
 8004580:	f7ff ffb8 	bl	80044f4 <_ZN18Compare_expressionD1Ev>
 8004584:	210c      	movs	r1, #12
 8004586:	4620      	mov	r0, r4
 8004588:	f01e fb4d 	bl	8022c26 <_ZdlPvj>
	for(Compare_expression* exp : comp_exps)
 800458c:	f107 030c 	add.w	r3, r7, #12
 8004590:	4618      	mov	r0, r3
 8004592:	f000 fa47 	bl	8004a24 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8004596:	e7dc      	b.n	8004552 <_ZN14And_expressionD1Ev+0x20>
And_expression::~And_expression()
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	4618      	mov	r0, r3
 800459c:	f000 f9ee 	bl	800497c <_ZNSt6vectorIP18Compare_expressionSaIS1_EED1Ev>
	}
}
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	4618      	mov	r0, r3
 80045a4:	371c      	adds	r7, #28
 80045a6:	46bd      	mov	sp, r7
 80045a8:	bd90      	pop	{r4, r7, pc}

080045aa <_ZN10ExpressionD1Ev>:

Expression::~Expression()
 80045aa:	b590      	push	{r4, r7, lr}
 80045ac:	b087      	sub	sp, #28
 80045ae:	af00      	add	r7, sp, #0
 80045b0:	6078      	str	r0, [r7, #4]
{
	for(And_expression* exp : and_exps)
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	3308      	adds	r3, #8
 80045b6:	617b      	str	r3, [r7, #20]
 80045b8:	6978      	ldr	r0, [r7, #20]
 80045ba:	f000 fa6a 	bl	8004a92 <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 80045be:	4603      	mov	r3, r0
 80045c0:	60fb      	str	r3, [r7, #12]
 80045c2:	6978      	ldr	r0, [r7, #20]
 80045c4:	f000 fa75 	bl	8004ab2 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 80045c8:	4603      	mov	r3, r0
 80045ca:	60bb      	str	r3, [r7, #8]
 80045cc:	f107 0208 	add.w	r2, r7, #8
 80045d0:	f107 030c 	add.w	r3, r7, #12
 80045d4:	4611      	mov	r1, r2
 80045d6:	4618      	mov	r0, r3
 80045d8:	f000 fa7c 	bl	8004ad4 <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 80045dc:	4603      	mov	r3, r0
 80045de:	2b00      	cmp	r3, #0
 80045e0:	d017      	beq.n	8004612 <_ZN10ExpressionD1Ev+0x68>
 80045e2:	f107 030c 	add.w	r3, r7, #12
 80045e6:	4618      	mov	r0, r3
 80045e8:	f000 fa9c 	bl	8004b24 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 80045ec:	4603      	mov	r3, r0
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 80045f2:	693c      	ldr	r4, [r7, #16]
 80045f4:	2c00      	cmp	r4, #0
 80045f6:	d006      	beq.n	8004606 <_ZN10ExpressionD1Ev+0x5c>
 80045f8:	4620      	mov	r0, r4
 80045fa:	f7ff ff9a 	bl	8004532 <_ZN14And_expressionD1Ev>
 80045fe:	210c      	movs	r1, #12
 8004600:	4620      	mov	r0, r4
 8004602:	f01e fb10 	bl	8022c26 <_ZdlPvj>
	for(And_expression* exp : and_exps)
 8004606:	f107 030c 	add.w	r3, r7, #12
 800460a:	4618      	mov	r0, r3
 800460c:	f000 fa7a 	bl	8004b04 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8004610:	e7dc      	b.n	80045cc <_ZN10ExpressionD1Ev+0x22>
Expression::~Expression()
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	3308      	adds	r3, #8
 8004616:	4618      	mov	r0, r3
 8004618:	f000 fa20 	bl	8004a5c <_ZNSt6vectorIP14And_expressionSaIS1_EED1Ev>
	}
}
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	4618      	mov	r0, r3
 8004620:	371c      	adds	r7, #28
 8004622:	46bd      	mov	sp, r7
 8004624:	bd90      	pop	{r4, r7, pc}

08004626 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
      ~_Variant_storage()
 8004626:	b580      	push	{r7, lr}
 8004628:	b082      	sub	sp, #8
 800462a:	af00      	add	r7, sp, #0
 800462c:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 800462e:	6878      	ldr	r0, [r7, #4]
 8004630:	f000 fa84 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	4618      	mov	r0, r3
 8004638:	3708      	adds	r7, #8
 800463a:	46bd      	mov	sp, r7
 800463c:	bd80      	pop	{r7, pc}

0800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>:
	}

      constexpr bool valueless_by_exception() const noexcept
      { return !this->_M_valid(); }

      constexpr size_t index() const noexcept
 800463e:	b480      	push	{r7}
 8004640:	b083      	sub	sp, #12
 8004642:	af00      	add	r7, sp, #0
 8004644:	6078      	str	r0, [r7, #4]
      {
	if (this->_M_index ==
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	7e1b      	ldrb	r3, [r3, #24]
 800464a:	2bff      	cmp	r3, #255	; 0xff
 800464c:	d102      	bne.n	8004654 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv+0x16>
	    typename _Base::__index_type(variant_npos))
	  return variant_npos;
 800464e:	f04f 33ff 	mov.w	r3, #4294967295
 8004652:	e001      	b.n	8004658 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv+0x1a>
	return this->_M_index;
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	7e1b      	ldrb	r3, [r3, #24]
      }
 8004658:	4618      	mov	r0, r3
 800465a:	370c      	adds	r7, #12
 800465c:	46bd      	mov	sp, r7
 800465e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004662:	4770      	bx	lr

08004664 <_ZSt17holds_alternativeIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 8004664:	b580      	push	{r7, lr}
 8004666:	b082      	sub	sp, #8
 8004668:	af00      	add	r7, sp, #0
 800466a:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 800466c:	6878      	ldr	r0, [r7, #4]
 800466e:	f7ff ffe6 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8004672:	4603      	mov	r3, r0
 8004674:	2b04      	cmp	r3, #4
 8004676:	bf0c      	ite	eq
 8004678:	2301      	moveq	r3, #1
 800467a:	2300      	movne	r3, #0
 800467c:	b2db      	uxtb	r3, r3
    }
 800467e:	4618      	mov	r0, r3
 8004680:	3708      	adds	r7, #8
 8004682:	46bd      	mov	sp, r7
 8004684:	bd80      	pop	{r7, pc}

08004686 <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8004686:	b580      	push	{r7, lr}
 8004688:	b082      	sub	sp, #8
 800468a:	af00      	add	r7, sp, #0
 800468c:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800468e:	6878      	ldr	r0, [r7, #4]
 8004690:	f000 facc 	bl	8004c2c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8004694:	4603      	mov	r3, r0
    }
 8004696:	4618      	mov	r0, r3
 8004698:	3708      	adds	r7, #8
 800469a:	46bd      	mov	sp, r7
 800469c:	bd80      	pop	{r7, pc}

0800469e <_ZSt17holds_alternativeIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 800469e:	b580      	push	{r7, lr}
 80046a0:	b082      	sub	sp, #8
 80046a2:	af00      	add	r7, sp, #0
 80046a4:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 80046a6:	6878      	ldr	r0, [r7, #4]
 80046a8:	f7ff ffc9 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 80046ac:	4603      	mov	r3, r0
 80046ae:	2b05      	cmp	r3, #5
 80046b0:	bf0c      	ite	eq
 80046b2:	2301      	moveq	r3, #1
 80046b4:	2300      	movne	r3, #0
 80046b6:	b2db      	uxtb	r3, r3
    }
 80046b8:	4618      	mov	r0, r3
 80046ba:	3708      	adds	r7, #8
 80046bc:	46bd      	mov	sp, r7
 80046be:	bd80      	pop	{r7, pc}

080046c0 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 80046c0:	b580      	push	{r7, lr}
 80046c2:	b082      	sub	sp, #8
 80046c4:	af00      	add	r7, sp, #0
 80046c6:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 80046c8:	6878      	ldr	r0, [r7, #4]
 80046ca:	f000 fb47 	bl	8004d5c <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80046ce:	4603      	mov	r3, r0
    }
 80046d0:	4618      	mov	r0, r3
 80046d2:	3708      	adds	r7, #8
 80046d4:	46bd      	mov	sp, r7
 80046d6:	bd80      	pop	{r7, pc}

080046d8 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>:
      constexpr size_t index() const noexcept
 80046d8:	b480      	push	{r7}
 80046da:	b083      	sub	sp, #12
 80046dc:	af00      	add	r7, sp, #0
 80046de:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	791b      	ldrb	r3, [r3, #4]
 80046e4:	2bff      	cmp	r3, #255	; 0xff
 80046e6:	d102      	bne.n	80046ee <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv+0x16>
	  return variant_npos;
 80046e8:	f04f 33ff 	mov.w	r3, #4294967295
 80046ec:	e001      	b.n	80046f2 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv+0x1a>
	return this->_M_index;
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	791b      	ldrb	r3, [r3, #4]
      }
 80046f2:	4618      	mov	r0, r3
 80046f4:	370c      	adds	r7, #12
 80046f6:	46bd      	mov	sp, r7
 80046f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046fc:	4770      	bx	lr

080046fe <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 80046fe:	b580      	push	{r7, lr}
 8004700:	b082      	sub	sp, #8
 8004702:	af00      	add	r7, sp, #0
 8004704:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 8004706:	6878      	ldr	r0, [r7, #4]
 8004708:	f7ff ffe6 	bl	80046d8 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 800470c:	4603      	mov	r3, r0
 800470e:	2b01      	cmp	r3, #1
 8004710:	bf0c      	ite	eq
 8004712:	2301      	moveq	r3, #1
 8004714:	2300      	movne	r3, #0
 8004716:	b2db      	uxtb	r3, r3
    }
 8004718:	4618      	mov	r0, r3
 800471a:	3708      	adds	r7, #8
 800471c:	46bd      	mov	sp, r7
 800471e:	bd80      	pop	{r7, pc}

08004720 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8004720:	b580      	push	{r7, lr}
 8004722:	b082      	sub	sp, #8
 8004724:	af00      	add	r7, sp, #0
 8004726:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8004728:	6878      	ldr	r0, [r7, #4]
 800472a:	f000 fb67 	bl	8004dfc <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 800472e:	4603      	mov	r3, r0
    }
 8004730:	4618      	mov	r0, r3
 8004732:	3708      	adds	r7, #8
 8004734:	46bd      	mov	sp, r7
 8004736:	bd80      	pop	{r7, pc}

08004738 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8004738:	b580      	push	{r7, lr}
 800473a:	b082      	sub	sp, #8
 800473c:	af00      	add	r7, sp, #0
 800473e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8004740:	6878      	ldr	r0, [r7, #4]
 8004742:	f000 fb99 	bl	8004e78 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 8004746:	4603      	mov	r3, r0
    }
 8004748:	4618      	mov	r0, r3
 800474a:	3708      	adds	r7, #8
 800474c:	46bd      	mov	sp, r7
 800474e:	bd80      	pop	{r7, pc}

08004750 <_ZNSt6vectorIP16Power_expressionSaIS1_EED1Ev>:
       *  The dtor only erases the elements, and note that if the
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      ~vector() _GLIBCXX_NOEXCEPT
 8004750:	b5b0      	push	{r4, r5, r7, lr}
 8004752:	b082      	sub	sp, #8
 8004754:	af00      	add	r7, sp, #0
 8004756:	6078      	str	r0, [r7, #4]
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	681c      	ldr	r4, [r3, #0]
 800475c:	687b      	ldr	r3, [r7, #4]
 800475e:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8004760:	687b      	ldr	r3, [r7, #4]
 8004762:	4618      	mov	r0, r3
 8004764:	f000 fbc9 	bl	8004efa <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8004768:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800476a:	461a      	mov	r2, r3
 800476c:	4629      	mov	r1, r5
 800476e:	4620      	mov	r0, r4
 8004770:	f000 fbce 	bl	8004f10 <_ZSt8_DestroyIPP16Power_expressionS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	4618      	mov	r0, r3
 8004778:	f000 fba6 	bl	8004ec8 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EED1Ev>
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	4618      	mov	r0, r3
 8004780:	3708      	adds	r7, #8
 8004782:	46bd      	mov	sp, r7
 8004784:	bdb0      	pop	{r4, r5, r7, pc}

08004786 <_ZNSt6vectorI13mult_operatorSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8004786:	b5b0      	push	{r4, r5, r7, lr}
 8004788:	b082      	sub	sp, #8
 800478a:	af00      	add	r7, sp, #0
 800478c:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	681c      	ldr	r4, [r3, #0]
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	4618      	mov	r0, r3
 800479a:	f000 fbeb 	bl	8004f74 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 800479e:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80047a0:	461a      	mov	r2, r3
 80047a2:	4629      	mov	r1, r5
 80047a4:	4620      	mov	r0, r4
 80047a6:	f000 fbf0 	bl	8004f8a <_ZSt8_DestroyIP13mult_operatorS0_EvT_S2_RSaIT0_E>
      }
 80047aa:	687b      	ldr	r3, [r7, #4]
 80047ac:	4618      	mov	r0, r3
 80047ae:	f000 fbc9 	bl	8004f44 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EED1Ev>
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	4618      	mov	r0, r3
 80047b6:	3708      	adds	r7, #8
 80047b8:	46bd      	mov	sp, r7
 80047ba:	bdb0      	pop	{r4, r5, r7, pc}

080047bc <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>:
       *  Returns a read/write iterator that points to the first
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      iterator
      begin() _GLIBCXX_NOEXCEPT
 80047bc:	b580      	push	{r7, lr}
 80047be:	b084      	sub	sp, #16
 80047c0:	af00      	add	r7, sp, #0
 80047c2:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 80047c4:	687a      	ldr	r2, [r7, #4]
 80047c6:	f107 030c 	add.w	r3, r7, #12
 80047ca:	4611      	mov	r1, r2
 80047cc:	4618      	mov	r0, r3
 80047ce:	f000 fbea 	bl	8004fa6 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80047d2:	68fb      	ldr	r3, [r7, #12]
 80047d4:	4618      	mov	r0, r3
 80047d6:	3710      	adds	r7, #16
 80047d8:	46bd      	mov	sp, r7
 80047da:	bd80      	pop	{r7, pc}

080047dc <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>:
       *  Returns a read/write iterator that points one past the last
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      iterator
      end() _GLIBCXX_NOEXCEPT
 80047dc:	b580      	push	{r7, lr}
 80047de:	b084      	sub	sp, #16
 80047e0:	af00      	add	r7, sp, #0
 80047e2:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	1d1a      	adds	r2, r3, #4
 80047e8:	f107 030c 	add.w	r3, r7, #12
 80047ec:	4611      	mov	r1, r2
 80047ee:	4618      	mov	r0, r3
 80047f0:	f000 fbd9 	bl	8004fa6 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80047f4:	68fb      	ldr	r3, [r7, #12]
 80047f6:	4618      	mov	r0, r3
 80047f8:	3710      	adds	r7, #16
 80047fa:	46bd      	mov	sp, r7
 80047fc:	bd80      	pop	{r7, pc}

080047fe <_ZN9__gnu_cxxneIPP16Power_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 80047fe:	b590      	push	{r4, r7, lr}
 8004800:	b083      	sub	sp, #12
 8004802:	af00      	add	r7, sp, #0
 8004804:	6078      	str	r0, [r7, #4]
 8004806:	6039      	str	r1, [r7, #0]
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
 8004808:	6878      	ldr	r0, [r7, #4]
 800480a:	f000 fbdc 	bl	8004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800480e:	4603      	mov	r3, r0
 8004810:	681c      	ldr	r4, [r3, #0]
 8004812:	6838      	ldr	r0, [r7, #0]
 8004814:	f000 fbd7 	bl	8004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8004818:	4603      	mov	r3, r0
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	429c      	cmp	r4, r3
 800481e:	bf14      	ite	ne
 8004820:	2301      	movne	r3, #1
 8004822:	2300      	moveq	r3, #0
 8004824:	b2db      	uxtb	r3, r3
 8004826:	4618      	mov	r0, r3
 8004828:	370c      	adds	r7, #12
 800482a:	46bd      	mov	sp, r7
 800482c:	bd90      	pop	{r4, r7, pc}

0800482e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800482e:	b480      	push	{r7}
 8004830:	b083      	sub	sp, #12
 8004832:	af00      	add	r7, sp, #0
 8004834:	6078      	str	r0, [r7, #4]
	++_M_current;
 8004836:	687b      	ldr	r3, [r7, #4]
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	1d1a      	adds	r2, r3, #4
 800483c:	687b      	ldr	r3, [r7, #4]
 800483e:	601a      	str	r2, [r3, #0]
	return *this;
 8004840:	687b      	ldr	r3, [r7, #4]
      }
 8004842:	4618      	mov	r0, r3
 8004844:	370c      	adds	r7, #12
 8004846:	46bd      	mov	sp, r7
 8004848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800484c:	4770      	bx	lr

0800484e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800484e:	b480      	push	{r7}
 8004850:	b083      	sub	sp, #12
 8004852:	af00      	add	r7, sp, #0
 8004854:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	4618      	mov	r0, r3
 800485c:	370c      	adds	r7, #12
 800485e:	46bd      	mov	sp, r7
 8004860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004864:	4770      	bx	lr

08004866 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8004866:	b5b0      	push	{r4, r5, r7, lr}
 8004868:	b082      	sub	sp, #8
 800486a:	af00      	add	r7, sp, #0
 800486c:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	681c      	ldr	r4, [r3, #0]
 8004872:	687b      	ldr	r3, [r7, #4]
 8004874:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	4618      	mov	r0, r3
 800487a:	f000 fbd4 	bl	8005026 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800487e:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8004880:	461a      	mov	r2, r3
 8004882:	4629      	mov	r1, r5
 8004884:	4620      	mov	r0, r4
 8004886:	f000 fbd9 	bl	800503c <_ZSt8_DestroyIPP19Multiply_expressionS1_EvT_S3_RSaIT0_E>
      }
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	4618      	mov	r0, r3
 800488e:	f000 fbb1 	bl	8004ff4 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EED1Ev>
 8004892:	687b      	ldr	r3, [r7, #4]
 8004894:	4618      	mov	r0, r3
 8004896:	3708      	adds	r7, #8
 8004898:	46bd      	mov	sp, r7
 800489a:	bdb0      	pop	{r4, r5, r7, pc}

0800489c <_ZNSt6vectorI12sum_operatorSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800489c:	b5b0      	push	{r4, r5, r7, lr}
 800489e:	b082      	sub	sp, #8
 80048a0:	af00      	add	r7, sp, #0
 80048a2:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	681c      	ldr	r4, [r3, #0]
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	4618      	mov	r0, r3
 80048b0:	f000 fbf6 	bl	80050a0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 80048b4:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80048b6:	461a      	mov	r2, r3
 80048b8:	4629      	mov	r1, r5
 80048ba:	4620      	mov	r0, r4
 80048bc:	f000 fbfb 	bl	80050b6 <_ZSt8_DestroyIP12sum_operatorS0_EvT_S2_RSaIT0_E>
      }
 80048c0:	687b      	ldr	r3, [r7, #4]
 80048c2:	4618      	mov	r0, r3
 80048c4:	f000 fbd4 	bl	8005070 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EED1Ev>
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	4618      	mov	r0, r3
 80048cc:	3708      	adds	r7, #8
 80048ce:	46bd      	mov	sp, r7
 80048d0:	bdb0      	pop	{r4, r5, r7, pc}

080048d2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80048d2:	b580      	push	{r7, lr}
 80048d4:	b084      	sub	sp, #16
 80048d6:	af00      	add	r7, sp, #0
 80048d8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 80048da:	687a      	ldr	r2, [r7, #4]
 80048dc:	f107 030c 	add.w	r3, r7, #12
 80048e0:	4611      	mov	r1, r2
 80048e2:	4618      	mov	r0, r3
 80048e4:	f000 fbf5 	bl	80050d2 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80048e8:	68fb      	ldr	r3, [r7, #12]
 80048ea:	4618      	mov	r0, r3
 80048ec:	3710      	adds	r7, #16
 80048ee:	46bd      	mov	sp, r7
 80048f0:	bd80      	pop	{r7, pc}

080048f2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 80048f2:	b580      	push	{r7, lr}
 80048f4:	b084      	sub	sp, #16
 80048f6:	af00      	add	r7, sp, #0
 80048f8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 80048fa:	687b      	ldr	r3, [r7, #4]
 80048fc:	1d1a      	adds	r2, r3, #4
 80048fe:	f107 030c 	add.w	r3, r7, #12
 8004902:	4611      	mov	r1, r2
 8004904:	4618      	mov	r0, r3
 8004906:	f000 fbe4 	bl	80050d2 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800490a:	68fb      	ldr	r3, [r7, #12]
 800490c:	4618      	mov	r0, r3
 800490e:	3710      	adds	r7, #16
 8004910:	46bd      	mov	sp, r7
 8004912:	bd80      	pop	{r7, pc}

08004914 <_ZN9__gnu_cxxneIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8004914:	b590      	push	{r4, r7, lr}
 8004916:	b083      	sub	sp, #12
 8004918:	af00      	add	r7, sp, #0
 800491a:	6078      	str	r0, [r7, #4]
 800491c:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800491e:	6878      	ldr	r0, [r7, #4]
 8004920:	f000 fbe7 	bl	80050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8004924:	4603      	mov	r3, r0
 8004926:	681c      	ldr	r4, [r3, #0]
 8004928:	6838      	ldr	r0, [r7, #0]
 800492a:	f000 fbe2 	bl	80050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800492e:	4603      	mov	r3, r0
 8004930:	681b      	ldr	r3, [r3, #0]
 8004932:	429c      	cmp	r4, r3
 8004934:	bf14      	ite	ne
 8004936:	2301      	movne	r3, #1
 8004938:	2300      	moveq	r3, #0
 800493a:	b2db      	uxtb	r3, r3
 800493c:	4618      	mov	r0, r3
 800493e:	370c      	adds	r7, #12
 8004940:	46bd      	mov	sp, r7
 8004942:	bd90      	pop	{r4, r7, pc}

08004944 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8004944:	b480      	push	{r7}
 8004946:	b083      	sub	sp, #12
 8004948:	af00      	add	r7, sp, #0
 800494a:	6078      	str	r0, [r7, #4]
	++_M_current;
 800494c:	687b      	ldr	r3, [r7, #4]
 800494e:	681b      	ldr	r3, [r3, #0]
 8004950:	1d1a      	adds	r2, r3, #4
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	601a      	str	r2, [r3, #0]
	return *this;
 8004956:	687b      	ldr	r3, [r7, #4]
      }
 8004958:	4618      	mov	r0, r3
 800495a:	370c      	adds	r7, #12
 800495c:	46bd      	mov	sp, r7
 800495e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004962:	4770      	bx	lr

08004964 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8004964:	b480      	push	{r7}
 8004966:	b083      	sub	sp, #12
 8004968:	af00      	add	r7, sp, #0
 800496a:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800496c:	687b      	ldr	r3, [r7, #4]
 800496e:	681b      	ldr	r3, [r3, #0]
 8004970:	4618      	mov	r0, r3
 8004972:	370c      	adds	r7, #12
 8004974:	46bd      	mov	sp, r7
 8004976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800497a:	4770      	bx	lr

0800497c <_ZNSt6vectorIP18Compare_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800497c:	b5b0      	push	{r4, r5, r7, lr}
 800497e:	b082      	sub	sp, #8
 8004980:	af00      	add	r7, sp, #0
 8004982:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8004984:	687b      	ldr	r3, [r7, #4]
 8004986:	681c      	ldr	r4, [r3, #0]
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800498c:	687b      	ldr	r3, [r7, #4]
 800498e:	4618      	mov	r0, r3
 8004990:	f000 fbdf 	bl	8005152 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8004994:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8004996:	461a      	mov	r2, r3
 8004998:	4629      	mov	r1, r5
 800499a:	4620      	mov	r0, r4
 800499c:	f000 fbe4 	bl	8005168 <_ZSt8_DestroyIPP18Compare_expressionS1_EvT_S3_RSaIT0_E>
      }
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	4618      	mov	r0, r3
 80049a4:	f000 fbbc 	bl	8005120 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EED1Ev>
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	4618      	mov	r0, r3
 80049ac:	3708      	adds	r7, #8
 80049ae:	46bd      	mov	sp, r7
 80049b0:	bdb0      	pop	{r4, r5, r7, pc}

080049b2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80049b2:	b580      	push	{r7, lr}
 80049b4:	b084      	sub	sp, #16
 80049b6:	af00      	add	r7, sp, #0
 80049b8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 80049ba:	687a      	ldr	r2, [r7, #4]
 80049bc:	f107 030c 	add.w	r3, r7, #12
 80049c0:	4611      	mov	r1, r2
 80049c2:	4618      	mov	r0, r3
 80049c4:	f000 fbde 	bl	8005184 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80049c8:	68fb      	ldr	r3, [r7, #12]
 80049ca:	4618      	mov	r0, r3
 80049cc:	3710      	adds	r7, #16
 80049ce:	46bd      	mov	sp, r7
 80049d0:	bd80      	pop	{r7, pc}

080049d2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 80049d2:	b580      	push	{r7, lr}
 80049d4:	b084      	sub	sp, #16
 80049d6:	af00      	add	r7, sp, #0
 80049d8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	1d1a      	adds	r2, r3, #4
 80049de:	f107 030c 	add.w	r3, r7, #12
 80049e2:	4611      	mov	r1, r2
 80049e4:	4618      	mov	r0, r3
 80049e6:	f000 fbcd 	bl	8005184 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80049ea:	68fb      	ldr	r3, [r7, #12]
 80049ec:	4618      	mov	r0, r3
 80049ee:	3710      	adds	r7, #16
 80049f0:	46bd      	mov	sp, r7
 80049f2:	bd80      	pop	{r7, pc}

080049f4 <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 80049f4:	b590      	push	{r4, r7, lr}
 80049f6:	b083      	sub	sp, #12
 80049f8:	af00      	add	r7, sp, #0
 80049fa:	6078      	str	r0, [r7, #4]
 80049fc:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 80049fe:	6878      	ldr	r0, [r7, #4]
 8004a00:	f000 fbd0 	bl	80051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8004a04:	4603      	mov	r3, r0
 8004a06:	681c      	ldr	r4, [r3, #0]
 8004a08:	6838      	ldr	r0, [r7, #0]
 8004a0a:	f000 fbcb 	bl	80051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8004a0e:	4603      	mov	r3, r0
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	429c      	cmp	r4, r3
 8004a14:	bf14      	ite	ne
 8004a16:	2301      	movne	r3, #1
 8004a18:	2300      	moveq	r3, #0
 8004a1a:	b2db      	uxtb	r3, r3
 8004a1c:	4618      	mov	r0, r3
 8004a1e:	370c      	adds	r7, #12
 8004a20:	46bd      	mov	sp, r7
 8004a22:	bd90      	pop	{r4, r7, pc}

08004a24 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8004a24:	b480      	push	{r7}
 8004a26:	b083      	sub	sp, #12
 8004a28:	af00      	add	r7, sp, #0
 8004a2a:	6078      	str	r0, [r7, #4]
	++_M_current;
 8004a2c:	687b      	ldr	r3, [r7, #4]
 8004a2e:	681b      	ldr	r3, [r3, #0]
 8004a30:	1d1a      	adds	r2, r3, #4
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	601a      	str	r2, [r3, #0]
	return *this;
 8004a36:	687b      	ldr	r3, [r7, #4]
      }
 8004a38:	4618      	mov	r0, r3
 8004a3a:	370c      	adds	r7, #12
 8004a3c:	46bd      	mov	sp, r7
 8004a3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a42:	4770      	bx	lr

08004a44 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8004a44:	b480      	push	{r7}
 8004a46:	b083      	sub	sp, #12
 8004a48:	af00      	add	r7, sp, #0
 8004a4a:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	681b      	ldr	r3, [r3, #0]
 8004a50:	4618      	mov	r0, r3
 8004a52:	370c      	adds	r7, #12
 8004a54:	46bd      	mov	sp, r7
 8004a56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a5a:	4770      	bx	lr

08004a5c <_ZNSt6vectorIP14And_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8004a5c:	b5b0      	push	{r4, r5, r7, lr}
 8004a5e:	b082      	sub	sp, #8
 8004a60:	af00      	add	r7, sp, #0
 8004a62:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8004a64:	687b      	ldr	r3, [r7, #4]
 8004a66:	681c      	ldr	r4, [r3, #0]
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	4618      	mov	r0, r3
 8004a70:	f000 fbc8 	bl	8005204 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8004a74:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8004a76:	461a      	mov	r2, r3
 8004a78:	4629      	mov	r1, r5
 8004a7a:	4620      	mov	r0, r4
 8004a7c:	f000 fbcd 	bl	800521a <_ZSt8_DestroyIPP14And_expressionS1_EvT_S3_RSaIT0_E>
      }
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	4618      	mov	r0, r3
 8004a84:	f000 fba5 	bl	80051d2 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EED1Ev>
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	4618      	mov	r0, r3
 8004a8c:	3708      	adds	r7, #8
 8004a8e:	46bd      	mov	sp, r7
 8004a90:	bdb0      	pop	{r4, r5, r7, pc}

08004a92 <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8004a92:	b580      	push	{r7, lr}
 8004a94:	b084      	sub	sp, #16
 8004a96:	af00      	add	r7, sp, #0
 8004a98:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8004a9a:	687a      	ldr	r2, [r7, #4]
 8004a9c:	f107 030c 	add.w	r3, r7, #12
 8004aa0:	4611      	mov	r1, r2
 8004aa2:	4618      	mov	r0, r3
 8004aa4:	f000 fbc7 	bl	8005236 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8004aa8:	68fb      	ldr	r3, [r7, #12]
 8004aaa:	4618      	mov	r0, r3
 8004aac:	3710      	adds	r7, #16
 8004aae:	46bd      	mov	sp, r7
 8004ab0:	bd80      	pop	{r7, pc}

08004ab2 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8004ab2:	b580      	push	{r7, lr}
 8004ab4:	b084      	sub	sp, #16
 8004ab6:	af00      	add	r7, sp, #0
 8004ab8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	1d1a      	adds	r2, r3, #4
 8004abe:	f107 030c 	add.w	r3, r7, #12
 8004ac2:	4611      	mov	r1, r2
 8004ac4:	4618      	mov	r0, r3
 8004ac6:	f000 fbb6 	bl	8005236 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8004aca:	68fb      	ldr	r3, [r7, #12]
 8004acc:	4618      	mov	r0, r3
 8004ace:	3710      	adds	r7, #16
 8004ad0:	46bd      	mov	sp, r7
 8004ad2:	bd80      	pop	{r7, pc}

08004ad4 <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8004ad4:	b590      	push	{r4, r7, lr}
 8004ad6:	b083      	sub	sp, #12
 8004ad8:	af00      	add	r7, sp, #0
 8004ada:	6078      	str	r0, [r7, #4]
 8004adc:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 8004ade:	6878      	ldr	r0, [r7, #4]
 8004ae0:	f000 fbb9 	bl	8005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8004ae4:	4603      	mov	r3, r0
 8004ae6:	681c      	ldr	r4, [r3, #0]
 8004ae8:	6838      	ldr	r0, [r7, #0]
 8004aea:	f000 fbb4 	bl	8005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8004aee:	4603      	mov	r3, r0
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	429c      	cmp	r4, r3
 8004af4:	bf14      	ite	ne
 8004af6:	2301      	movne	r3, #1
 8004af8:	2300      	moveq	r3, #0
 8004afa:	b2db      	uxtb	r3, r3
 8004afc:	4618      	mov	r0, r3
 8004afe:	370c      	adds	r7, #12
 8004b00:	46bd      	mov	sp, r7
 8004b02:	bd90      	pop	{r4, r7, pc}

08004b04 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8004b04:	b480      	push	{r7}
 8004b06:	b083      	sub	sp, #12
 8004b08:	af00      	add	r7, sp, #0
 8004b0a:	6078      	str	r0, [r7, #4]
	++_M_current;
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	681b      	ldr	r3, [r3, #0]
 8004b10:	1d1a      	adds	r2, r3, #4
 8004b12:	687b      	ldr	r3, [r7, #4]
 8004b14:	601a      	str	r2, [r3, #0]
	return *this;
 8004b16:	687b      	ldr	r3, [r7, #4]
      }
 8004b18:	4618      	mov	r0, r3
 8004b1a:	370c      	adds	r7, #12
 8004b1c:	46bd      	mov	sp, r7
 8004b1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b22:	4770      	bx	lr

08004b24 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8004b24:	b480      	push	{r7}
 8004b26:	b083      	sub	sp, #12
 8004b28:	af00      	add	r7, sp, #0
 8004b2a:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	4618      	mov	r0, r3
 8004b32:	370c      	adds	r7, #12
 8004b34:	46bd      	mov	sp, r7
 8004b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b3a:	4770      	bx	lr

08004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>:
      void _M_reset()
 8004b3c:	b580      	push	{r7, lr}
 8004b3e:	b082      	sub	sp, #8
 8004b40:	af00      	add	r7, sp, #0
 8004b42:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 8004b44:	6878      	ldr	r0, [r7, #4]
 8004b46:	f000 fecb 	bl	80058e0 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEv>
	_M_index = variant_npos;
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	22ff      	movs	r2, #255	; 0xff
 8004b4e:	761a      	strb	r2, [r3, #24]
      }
 8004b50:	bf00      	nop
 8004b52:	3708      	adds	r7, #8
 8004b54:	46bd      	mov	sp, r7
 8004b56:	bd80      	pop	{r7, pc}

08004b58 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8004b58:	b580      	push	{r7, lr}
 8004b5a:	b082      	sub	sp, #8
 8004b5c:	af00      	add	r7, sp, #0
 8004b5e:	7138      	strb	r0, [r7, #4]
 8004b60:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8004b62:	6838      	ldr	r0, [r7, #0]
 8004b64:	f000 ff05 	bl	8005972 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8004b68:	4603      	mov	r3, r0
 8004b6a:	4618      	mov	r0, r3
 8004b6c:	f000 ff0c 	bl	8005988 <_ZNRSt8__detail9__variant14_UninitializedIP8VariableLb1EE6_M_getEv>
 8004b70:	4603      	mov	r3, r0
 8004b72:	4618      	mov	r0, r3
 8004b74:	3708      	adds	r7, #8
 8004b76:	46bd      	mov	sp, r7
 8004b78:	bd80      	pop	{r7, pc}

08004b7a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004b7a:	b590      	push	{r4, r7, lr}
 8004b7c:	b083      	sub	sp, #12
 8004b7e:	af00      	add	r7, sp, #0
 8004b80:	7138      	strb	r0, [r7, #4]
 8004b82:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004b84:	6838      	ldr	r0, [r7, #0]
 8004b86:	f000 fee9 	bl	800595c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004b8a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004b8c:	4619      	mov	r1, r3
 8004b8e:	4620      	mov	r0, r4
 8004b90:	f7ff ffe2 	bl	8004b58 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 8004b94:	4603      	mov	r3, r0
    }
 8004b96:	4618      	mov	r0, r3
 8004b98:	370c      	adds	r7, #12
 8004b9a:	46bd      	mov	sp, r7
 8004b9c:	bd90      	pop	{r4, r7, pc}

08004b9e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004b9e:	b590      	push	{r4, r7, lr}
 8004ba0:	b083      	sub	sp, #12
 8004ba2:	af00      	add	r7, sp, #0
 8004ba4:	7138      	strb	r0, [r7, #4]
 8004ba6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004ba8:	6838      	ldr	r0, [r7, #0]
 8004baa:	f000 fecc 	bl	8005946 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004bae:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004bb0:	4619      	mov	r1, r3
 8004bb2:	4620      	mov	r0, r4
 8004bb4:	f7ff ffe1 	bl	8004b7a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004bb8:	4603      	mov	r3, r0
    }
 8004bba:	4618      	mov	r0, r3
 8004bbc:	370c      	adds	r7, #12
 8004bbe:	46bd      	mov	sp, r7
 8004bc0:	bd90      	pop	{r4, r7, pc}

08004bc2 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004bc2:	b590      	push	{r4, r7, lr}
 8004bc4:	b083      	sub	sp, #12
 8004bc6:	af00      	add	r7, sp, #0
 8004bc8:	7138      	strb	r0, [r7, #4]
 8004bca:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004bcc:	6838      	ldr	r0, [r7, #0]
 8004bce:	f000 feaf 	bl	8005930 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004bd2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004bd4:	4619      	mov	r1, r3
 8004bd6:	4620      	mov	r0, r4
 8004bd8:	f7ff ffe1 	bl	8004b9e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004bdc:	4603      	mov	r3, r0
    }
 8004bde:	4618      	mov	r0, r3
 8004be0:	370c      	adds	r7, #12
 8004be2:	46bd      	mov	sp, r7
 8004be4:	bd90      	pop	{r4, r7, pc}

08004be6 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004be6:	b590      	push	{r4, r7, lr}
 8004be8:	b083      	sub	sp, #12
 8004bea:	af00      	add	r7, sp, #0
 8004bec:	7138      	strb	r0, [r7, #4]
 8004bee:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004bf0:	6838      	ldr	r0, [r7, #0]
 8004bf2:	f000 fe92 	bl	800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004bf6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004bf8:	4619      	mov	r1, r3
 8004bfa:	4620      	mov	r0, r4
 8004bfc:	f7ff ffe1 	bl	8004bc2 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004c00:	4603      	mov	r3, r0
    }
 8004c02:	4618      	mov	r0, r3
 8004c04:	370c      	adds	r7, #12
 8004c06:	46bd      	mov	sp, r7
 8004c08:	bd90      	pop	{r4, r7, pc}

08004c0a <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8004c0a:	b590      	push	{r4, r7, lr}
 8004c0c:	b083      	sub	sp, #12
 8004c0e:	af00      	add	r7, sp, #0
 8004c10:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8004c12:	6878      	ldr	r0, [r7, #4]
 8004c14:	f000 fe76 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004c18:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8004c1a:	4619      	mov	r1, r3
 8004c1c:	4620      	mov	r0, r4
 8004c1e:	f7ff ffe2 	bl	8004be6 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004c22:	4603      	mov	r3, r0
    }
 8004c24:	4618      	mov	r0, r3
 8004c26:	370c      	adds	r7, #12
 8004c28:	46bd      	mov	sp, r7
 8004c2a:	bd90      	pop	{r4, r7, pc}

08004c2c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
#undef _VARIANT_RELATION_FUNCTION_TEMPLATE
    };

  template<size_t _Np, typename... _Types>
    constexpr variant_alternative_t<_Np, variant<_Types...>>&
    get(variant<_Types...>& __v)
 8004c2c:	b580      	push	{r7, lr}
 8004c2e:	b082      	sub	sp, #8
 8004c30:	af00      	add	r7, sp, #0
 8004c32:	6078      	str	r0, [r7, #4]
    {
      static_assert(_Np < sizeof...(_Types),
		    "The index should be in [0, number of alternatives)");
      if (__v.index() != _Np)
 8004c34:	6878      	ldr	r0, [r7, #4]
 8004c36:	f7ff fd02 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8004c3a:	4603      	mov	r3, r0
 8004c3c:	2b04      	cmp	r3, #4
 8004c3e:	bf14      	ite	ne
 8004c40:	2301      	movne	r3, #1
 8004c42:	2300      	moveq	r3, #0
 8004c44:	b2db      	uxtb	r3, r3
 8004c46:	2b00      	cmp	r3, #0
 8004c48:	d002      	beq.n	8004c50 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8004c4a:	4805      	ldr	r0, [pc, #20]	; (8004c60 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8004c4c:	f7ff fabc 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8004c50:	6878      	ldr	r0, [r7, #4]
 8004c52:	f7ff ffda 	bl	8004c0a <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8004c56:	4603      	mov	r3, r0
    }
 8004c58:	4618      	mov	r0, r3
 8004c5a:	3708      	adds	r7, #8
 8004c5c:	46bd      	mov	sp, r7
 8004c5e:	bd80      	pop	{r7, pc}
 8004c60:	080273a4 	.word	0x080273a4

08004c64 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8004c64:	b580      	push	{r7, lr}
 8004c66:	b082      	sub	sp, #8
 8004c68:	af00      	add	r7, sp, #0
 8004c6a:	7138      	strb	r0, [r7, #4]
 8004c6c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8004c6e:	6838      	ldr	r0, [r7, #0]
 8004c70:	f000 fe95 	bl	800599e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8004c74:	4603      	mov	r3, r0
 8004c76:	4618      	mov	r0, r3
 8004c78:	f000 fe9c 	bl	80059b4 <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>
 8004c7c:	4603      	mov	r3, r0
 8004c7e:	4618      	mov	r0, r3
 8004c80:	3708      	adds	r7, #8
 8004c82:	46bd      	mov	sp, r7
 8004c84:	bd80      	pop	{r7, pc}

08004c86 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004c86:	b590      	push	{r4, r7, lr}
 8004c88:	b083      	sub	sp, #12
 8004c8a:	af00      	add	r7, sp, #0
 8004c8c:	7138      	strb	r0, [r7, #4]
 8004c8e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004c90:	6838      	ldr	r0, [r7, #0]
 8004c92:	f000 fe6e 	bl	8005972 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8004c96:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004c98:	4619      	mov	r1, r3
 8004c9a:	4620      	mov	r0, r4
 8004c9c:	f7ff ffe2 	bl	8004c64 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 8004ca0:	4603      	mov	r3, r0
    }
 8004ca2:	4618      	mov	r0, r3
 8004ca4:	370c      	adds	r7, #12
 8004ca6:	46bd      	mov	sp, r7
 8004ca8:	bd90      	pop	{r4, r7, pc}

08004caa <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004caa:	b590      	push	{r4, r7, lr}
 8004cac:	b083      	sub	sp, #12
 8004cae:	af00      	add	r7, sp, #0
 8004cb0:	7138      	strb	r0, [r7, #4]
 8004cb2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004cb4:	6838      	ldr	r0, [r7, #0]
 8004cb6:	f000 fe51 	bl	800595c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004cba:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004cbc:	4619      	mov	r1, r3
 8004cbe:	4620      	mov	r0, r4
 8004cc0:	f7ff ffe1 	bl	8004c86 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004cc4:	4603      	mov	r3, r0
    }
 8004cc6:	4618      	mov	r0, r3
 8004cc8:	370c      	adds	r7, #12
 8004cca:	46bd      	mov	sp, r7
 8004ccc:	bd90      	pop	{r4, r7, pc}

08004cce <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004cce:	b590      	push	{r4, r7, lr}
 8004cd0:	b083      	sub	sp, #12
 8004cd2:	af00      	add	r7, sp, #0
 8004cd4:	7138      	strb	r0, [r7, #4]
 8004cd6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004cd8:	6838      	ldr	r0, [r7, #0]
 8004cda:	f000 fe34 	bl	8005946 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004cde:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004ce0:	4619      	mov	r1, r3
 8004ce2:	4620      	mov	r0, r4
 8004ce4:	f7ff ffe1 	bl	8004caa <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004ce8:	4603      	mov	r3, r0
    }
 8004cea:	4618      	mov	r0, r3
 8004cec:	370c      	adds	r7, #12
 8004cee:	46bd      	mov	sp, r7
 8004cf0:	bd90      	pop	{r4, r7, pc}

08004cf2 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004cf2:	b590      	push	{r4, r7, lr}
 8004cf4:	b083      	sub	sp, #12
 8004cf6:	af00      	add	r7, sp, #0
 8004cf8:	7138      	strb	r0, [r7, #4]
 8004cfa:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004cfc:	6838      	ldr	r0, [r7, #0]
 8004cfe:	f000 fe17 	bl	8005930 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004d02:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004d04:	4619      	mov	r1, r3
 8004d06:	4620      	mov	r0, r4
 8004d08:	f7ff ffe1 	bl	8004cce <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004d0c:	4603      	mov	r3, r0
    }
 8004d0e:	4618      	mov	r0, r3
 8004d10:	370c      	adds	r7, #12
 8004d12:	46bd      	mov	sp, r7
 8004d14:	bd90      	pop	{r4, r7, pc}

08004d16 <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004d16:	b590      	push	{r4, r7, lr}
 8004d18:	b083      	sub	sp, #12
 8004d1a:	af00      	add	r7, sp, #0
 8004d1c:	7138      	strb	r0, [r7, #4]
 8004d1e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004d20:	6838      	ldr	r0, [r7, #0]
 8004d22:	f000 fdfa 	bl	800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004d26:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004d28:	4619      	mov	r1, r3
 8004d2a:	4620      	mov	r0, r4
 8004d2c:	f7ff ffe1 	bl	8004cf2 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004d30:	4603      	mov	r3, r0
    }
 8004d32:	4618      	mov	r0, r3
 8004d34:	370c      	adds	r7, #12
 8004d36:	46bd      	mov	sp, r7
 8004d38:	bd90      	pop	{r4, r7, pc}

08004d3a <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8004d3a:	b590      	push	{r4, r7, lr}
 8004d3c:	b083      	sub	sp, #12
 8004d3e:	af00      	add	r7, sp, #0
 8004d40:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8004d42:	6878      	ldr	r0, [r7, #4]
 8004d44:	f000 fdde 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004d48:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8004d4a:	4619      	mov	r1, r3
 8004d4c:	4620      	mov	r0, r4
 8004d4e:	f7ff ffe2 	bl	8004d16 <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004d52:	4603      	mov	r3, r0
    }
 8004d54:	4618      	mov	r0, r3
 8004d56:	370c      	adds	r7, #12
 8004d58:	46bd      	mov	sp, r7
 8004d5a:	bd90      	pop	{r4, r7, pc}

08004d5c <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8004d5c:	b580      	push	{r7, lr}
 8004d5e:	b082      	sub	sp, #8
 8004d60:	af00      	add	r7, sp, #0
 8004d62:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8004d64:	6878      	ldr	r0, [r7, #4]
 8004d66:	f7ff fc6a 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8004d6a:	4603      	mov	r3, r0
 8004d6c:	2b05      	cmp	r3, #5
 8004d6e:	bf14      	ite	ne
 8004d70:	2301      	movne	r3, #1
 8004d72:	2300      	moveq	r3, #0
 8004d74:	b2db      	uxtb	r3, r3
 8004d76:	2b00      	cmp	r3, #0
 8004d78:	d002      	beq.n	8004d80 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8004d7a:	4805      	ldr	r0, [pc, #20]	; (8004d90 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8004d7c:	f7ff fa24 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8004d80:	6878      	ldr	r0, [r7, #4]
 8004d82:	f7ff ffda 	bl	8004d3a <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8004d86:	4603      	mov	r3, r0
    }
 8004d88:	4618      	mov	r0, r3
 8004d8a:	3708      	adds	r7, #8
 8004d8c:	46bd      	mov	sp, r7
 8004d8e:	bd80      	pop	{r7, pc}
 8004d90:	080273a4 	.word	0x080273a4

08004d94 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8004d94:	b580      	push	{r7, lr}
 8004d96:	b082      	sub	sp, #8
 8004d98:	af00      	add	r7, sp, #0
 8004d9a:	7138      	strb	r0, [r7, #4]
 8004d9c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8004d9e:	6838      	ldr	r0, [r7, #0]
 8004da0:	f000 fe29 	bl	80059f6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10ExpressionEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8004da4:	4603      	mov	r3, r0
 8004da6:	4618      	mov	r0, r3
 8004da8:	f000 fe30 	bl	8005a0c <_ZNRSt8__detail9__variant14_UninitializedIP10ExpressionLb1EE6_M_getEv>
 8004dac:	4603      	mov	r3, r0
 8004dae:	4618      	mov	r0, r3
 8004db0:	3708      	adds	r7, #8
 8004db2:	46bd      	mov	sp, r7
 8004db4:	bd80      	pop	{r7, pc}

08004db6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004db6:	b590      	push	{r4, r7, lr}
 8004db8:	b083      	sub	sp, #12
 8004dba:	af00      	add	r7, sp, #0
 8004dbc:	7138      	strb	r0, [r7, #4]
 8004dbe:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004dc0:	6838      	ldr	r0, [r7, #0]
 8004dc2:	f000 fe0d 	bl	80059e0 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8004dc6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004dc8:	4619      	mov	r1, r3
 8004dca:	4620      	mov	r0, r4
 8004dcc:	f7ff ffe2 	bl	8004d94 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>
 8004dd0:	4603      	mov	r3, r0
    }
 8004dd2:	4618      	mov	r0, r3
 8004dd4:	370c      	adds	r7, #12
 8004dd6:	46bd      	mov	sp, r7
 8004dd8:	bd90      	pop	{r4, r7, pc}

08004dda <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8004dda:	b590      	push	{r4, r7, lr}
 8004ddc:	b083      	sub	sp, #12
 8004dde:	af00      	add	r7, sp, #0
 8004de0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8004de2:	6878      	ldr	r0, [r7, #4]
 8004de4:	f000 fdf1 	bl	80059ca <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8004de8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8004dea:	4619      	mov	r1, r3
 8004dec:	4620      	mov	r0, r4
 8004dee:	f7ff ffe2 	bl	8004db6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004df2:	4603      	mov	r3, r0
    }
 8004df4:	4618      	mov	r0, r3
 8004df6:	370c      	adds	r7, #12
 8004df8:	46bd      	mov	sp, r7
 8004dfa:	bd90      	pop	{r4, r7, pc}

08004dfc <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>:
    get(variant<_Types...>& __v)
 8004dfc:	b580      	push	{r7, lr}
 8004dfe:	b082      	sub	sp, #8
 8004e00:	af00      	add	r7, sp, #0
 8004e02:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8004e04:	6878      	ldr	r0, [r7, #4]
 8004e06:	f7ff fc67 	bl	80046d8 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 8004e0a:	4603      	mov	r3, r0
 8004e0c:	2b01      	cmp	r3, #1
 8004e0e:	bf14      	ite	ne
 8004e10:	2301      	movne	r3, #1
 8004e12:	2300      	moveq	r3, #0
 8004e14:	b2db      	uxtb	r3, r3
 8004e16:	2b00      	cmp	r3, #0
 8004e18:	d002      	beq.n	8004e20 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8004e1a:	4805      	ldr	r0, [pc, #20]	; (8004e30 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x34>)
 8004e1c:	f7ff f9d4 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8004e20:	6878      	ldr	r0, [r7, #4]
 8004e22:	f7ff ffda 	bl	8004dda <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 8004e26:	4603      	mov	r3, r0
    }
 8004e28:	4618      	mov	r0, r3
 8004e2a:	3708      	adds	r7, #8
 8004e2c:	46bd      	mov	sp, r7
 8004e2e:	bd80      	pop	{r7, pc}
 8004e30:	080273a4 	.word	0x080273a4

08004e34 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8004e34:	b580      	push	{r7, lr}
 8004e36:	b082      	sub	sp, #8
 8004e38:	af00      	add	r7, sp, #0
 8004e3a:	7138      	strb	r0, [r7, #4]
 8004e3c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8004e3e:	6838      	ldr	r0, [r7, #0]
 8004e40:	f000 fdce 	bl	80059e0 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8004e44:	4603      	mov	r3, r0
 8004e46:	4618      	mov	r0, r3
 8004e48:	f000 fdeb 	bl	8005a22 <_ZNRSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EE6_M_getEv>
 8004e4c:	4603      	mov	r3, r0
 8004e4e:	4618      	mov	r0, r3
 8004e50:	3708      	adds	r7, #8
 8004e52:	46bd      	mov	sp, r7
 8004e54:	bd80      	pop	{r7, pc}

08004e56 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8004e56:	b590      	push	{r4, r7, lr}
 8004e58:	b083      	sub	sp, #12
 8004e5a:	af00      	add	r7, sp, #0
 8004e5c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8004e5e:	6878      	ldr	r0, [r7, #4]
 8004e60:	f000 fdb3 	bl	80059ca <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8004e64:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8004e66:	4619      	mov	r1, r3
 8004e68:	4620      	mov	r0, r4
 8004e6a:	f7ff ffe3 	bl	8004e34 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>
 8004e6e:	4603      	mov	r3, r0
    }
 8004e70:	4618      	mov	r0, r3
 8004e72:	370c      	adds	r7, #12
 8004e74:	46bd      	mov	sp, r7
 8004e76:	bd90      	pop	{r4, r7, pc}

08004e78 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>:
    get(variant<_Types...>& __v)
 8004e78:	b580      	push	{r7, lr}
 8004e7a:	b082      	sub	sp, #8
 8004e7c:	af00      	add	r7, sp, #0
 8004e7e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8004e80:	6878      	ldr	r0, [r7, #4]
 8004e82:	f7ff fc29 	bl	80046d8 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 8004e86:	4603      	mov	r3, r0
 8004e88:	2b00      	cmp	r3, #0
 8004e8a:	bf14      	ite	ne
 8004e8c:	2301      	movne	r3, #1
 8004e8e:	2300      	moveq	r3, #0
 8004e90:	b2db      	uxtb	r3, r3
 8004e92:	2b00      	cmp	r3, #0
 8004e94:	d002      	beq.n	8004e9c <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8004e96:	4805      	ldr	r0, [pc, #20]	; (8004eac <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x34>)
 8004e98:	f7ff f996 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8004e9c:	6878      	ldr	r0, [r7, #4]
 8004e9e:	f7ff ffda 	bl	8004e56 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 8004ea2:	4603      	mov	r3, r0
    }
 8004ea4:	4618      	mov	r0, r3
 8004ea6:	3708      	adds	r7, #8
 8004ea8:	46bd      	mov	sp, r7
 8004eaa:	bd80      	pop	{r7, pc}
 8004eac:	080273a4 	.word	0x080273a4

08004eb0 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8004eb0:	b580      	push	{r7, lr}
 8004eb2:	b082      	sub	sp, #8
 8004eb4:	af00      	add	r7, sp, #0
 8004eb6:	6078      	str	r0, [r7, #4]
 8004eb8:	6878      	ldr	r0, [r7, #4]
 8004eba:	f000 fdbd 	bl	8005a38 <_ZNSaIP16Power_expressionED1Ev>
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	4618      	mov	r0, r3
 8004ec2:	3708      	adds	r7, #8
 8004ec4:	46bd      	mov	sp, r7
 8004ec6:	bd80      	pop	{r7, pc}

08004ec8 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8004ec8:	b580      	push	{r7, lr}
 8004eca:	b082      	sub	sp, #8
 8004ecc:	af00      	add	r7, sp, #0
 8004ece:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8004ed0:	687b      	ldr	r3, [r7, #4]
 8004ed2:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8004ed4:	687b      	ldr	r3, [r7, #4]
 8004ed6:	689a      	ldr	r2, [r3, #8]
 8004ed8:	687b      	ldr	r3, [r7, #4]
 8004eda:	681b      	ldr	r3, [r3, #0]
 8004edc:	1ad3      	subs	r3, r2, r3
 8004ede:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 8004ee0:	461a      	mov	r2, r3
 8004ee2:	6878      	ldr	r0, [r7, #4]
 8004ee4:	f000 fdb4 	bl	8005a50 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	4618      	mov	r0, r3
 8004eec:	f7ff ffe0 	bl	8004eb0 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implD1Ev>
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	4618      	mov	r0, r3
 8004ef4:	3708      	adds	r7, #8
 8004ef6:	46bd      	mov	sp, r7
 8004ef8:	bd80      	pop	{r7, pc}

08004efa <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8004efa:	b480      	push	{r7}
 8004efc:	b083      	sub	sp, #12
 8004efe:	af00      	add	r7, sp, #0
 8004f00:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8004f02:	687b      	ldr	r3, [r7, #4]
 8004f04:	4618      	mov	r0, r3
 8004f06:	370c      	adds	r7, #12
 8004f08:	46bd      	mov	sp, r7
 8004f0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f0e:	4770      	bx	lr

08004f10 <_ZSt8_DestroyIPP16Power_expressionS1_EvT_S3_RSaIT0_E>:
	__traits::destroy(__alloc, std::__addressof(*__first));
    }

  template<typename _ForwardIterator, typename _Tp>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8004f10:	b580      	push	{r7, lr}
 8004f12:	b084      	sub	sp, #16
 8004f14:	af00      	add	r7, sp, #0
 8004f16:	60f8      	str	r0, [r7, #12]
 8004f18:	60b9      	str	r1, [r7, #8]
 8004f1a:	607a      	str	r2, [r7, #4]
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
 8004f1c:	68b9      	ldr	r1, [r7, #8]
 8004f1e:	68f8      	ldr	r0, [r7, #12]
 8004f20:	f000 fda9 	bl	8005a76 <_ZSt8_DestroyIPP16Power_expressionEvT_S3_>
    }
 8004f24:	bf00      	nop
 8004f26:	3710      	adds	r7, #16
 8004f28:	46bd      	mov	sp, r7
 8004f2a:	bd80      	pop	{r7, pc}

08004f2c <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8004f2c:	b580      	push	{r7, lr}
 8004f2e:	b082      	sub	sp, #8
 8004f30:	af00      	add	r7, sp, #0
 8004f32:	6078      	str	r0, [r7, #4]
 8004f34:	6878      	ldr	r0, [r7, #4]
 8004f36:	f000 fdab 	bl	8005a90 <_ZNSaI13mult_operatorED1Ev>
 8004f3a:	687b      	ldr	r3, [r7, #4]
 8004f3c:	4618      	mov	r0, r3
 8004f3e:	3708      	adds	r7, #8
 8004f40:	46bd      	mov	sp, r7
 8004f42:	bd80      	pop	{r7, pc}

08004f44 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8004f44:	b580      	push	{r7, lr}
 8004f46:	b082      	sub	sp, #8
 8004f48:	af00      	add	r7, sp, #0
 8004f4a:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8004f4c:	687b      	ldr	r3, [r7, #4]
 8004f4e:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	689a      	ldr	r2, [r3, #8]
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	1ad3      	subs	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 8004f5a:	461a      	mov	r2, r3
 8004f5c:	6878      	ldr	r0, [r7, #4]
 8004f5e:	f000 fda3 	bl	8005aa8 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>
      }
 8004f62:	687b      	ldr	r3, [r7, #4]
 8004f64:	4618      	mov	r0, r3
 8004f66:	f7ff ffe1 	bl	8004f2c <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implD1Ev>
 8004f6a:	687b      	ldr	r3, [r7, #4]
 8004f6c:	4618      	mov	r0, r3
 8004f6e:	3708      	adds	r7, #8
 8004f70:	46bd      	mov	sp, r7
 8004f72:	bd80      	pop	{r7, pc}

08004f74 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8004f74:	b480      	push	{r7}
 8004f76:	b083      	sub	sp, #12
 8004f78:	af00      	add	r7, sp, #0
 8004f7a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	4618      	mov	r0, r3
 8004f80:	370c      	adds	r7, #12
 8004f82:	46bd      	mov	sp, r7
 8004f84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f88:	4770      	bx	lr

08004f8a <_ZSt8_DestroyIP13mult_operatorS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8004f8a:	b580      	push	{r7, lr}
 8004f8c:	b084      	sub	sp, #16
 8004f8e:	af00      	add	r7, sp, #0
 8004f90:	60f8      	str	r0, [r7, #12]
 8004f92:	60b9      	str	r1, [r7, #8]
 8004f94:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8004f96:	68b9      	ldr	r1, [r7, #8]
 8004f98:	68f8      	ldr	r0, [r7, #12]
 8004f9a:	f000 fd98 	bl	8005ace <_ZSt8_DestroyIP13mult_operatorEvT_S2_>
    }
 8004f9e:	bf00      	nop
 8004fa0:	3710      	adds	r7, #16
 8004fa2:	46bd      	mov	sp, r7
 8004fa4:	bd80      	pop	{r7, pc}

08004fa6 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8004fa6:	b480      	push	{r7}
 8004fa8:	b083      	sub	sp, #12
 8004faa:	af00      	add	r7, sp, #0
 8004fac:	6078      	str	r0, [r7, #4]
 8004fae:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8004fb0:	683b      	ldr	r3, [r7, #0]
 8004fb2:	681a      	ldr	r2, [r3, #0]
 8004fb4:	687b      	ldr	r3, [r7, #4]
 8004fb6:	601a      	str	r2, [r3, #0]
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	4618      	mov	r0, r3
 8004fbc:	370c      	adds	r7, #12
 8004fbe:	46bd      	mov	sp, r7
 8004fc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fc4:	4770      	bx	lr

08004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8004fc6:	b480      	push	{r7}
 8004fc8:	b083      	sub	sp, #12
 8004fca:	af00      	add	r7, sp, #0
 8004fcc:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8004fce:	687b      	ldr	r3, [r7, #4]
 8004fd0:	4618      	mov	r0, r3
 8004fd2:	370c      	adds	r7, #12
 8004fd4:	46bd      	mov	sp, r7
 8004fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fda:	4770      	bx	lr

08004fdc <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8004fdc:	b580      	push	{r7, lr}
 8004fde:	b082      	sub	sp, #8
 8004fe0:	af00      	add	r7, sp, #0
 8004fe2:	6078      	str	r0, [r7, #4]
 8004fe4:	6878      	ldr	r0, [r7, #4]
 8004fe6:	f000 fd7f 	bl	8005ae8 <_ZNSaIP19Multiply_expressionED1Ev>
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	4618      	mov	r0, r3
 8004fee:	3708      	adds	r7, #8
 8004ff0:	46bd      	mov	sp, r7
 8004ff2:	bd80      	pop	{r7, pc}

08004ff4 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8004ff4:	b580      	push	{r7, lr}
 8004ff6:	b082      	sub	sp, #8
 8004ff8:	af00      	add	r7, sp, #0
 8004ffa:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	689a      	ldr	r2, [r3, #8]
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	1ad3      	subs	r3, r2, r3
 800500a:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800500c:	461a      	mov	r2, r3
 800500e:	6878      	ldr	r0, [r7, #4]
 8005010:	f000 fd76 	bl	8005b00 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	4618      	mov	r0, r3
 8005018:	f7ff ffe0 	bl	8004fdc <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implD1Ev>
 800501c:	687b      	ldr	r3, [r7, #4]
 800501e:	4618      	mov	r0, r3
 8005020:	3708      	adds	r7, #8
 8005022:	46bd      	mov	sp, r7
 8005024:	bd80      	pop	{r7, pc}

08005026 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8005026:	b480      	push	{r7}
 8005028:	b083      	sub	sp, #12
 800502a:	af00      	add	r7, sp, #0
 800502c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800502e:	687b      	ldr	r3, [r7, #4]
 8005030:	4618      	mov	r0, r3
 8005032:	370c      	adds	r7, #12
 8005034:	46bd      	mov	sp, r7
 8005036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800503a:	4770      	bx	lr

0800503c <_ZSt8_DestroyIPP19Multiply_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800503c:	b580      	push	{r7, lr}
 800503e:	b084      	sub	sp, #16
 8005040:	af00      	add	r7, sp, #0
 8005042:	60f8      	str	r0, [r7, #12]
 8005044:	60b9      	str	r1, [r7, #8]
 8005046:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8005048:	68b9      	ldr	r1, [r7, #8]
 800504a:	68f8      	ldr	r0, [r7, #12]
 800504c:	f000 fd6b 	bl	8005b26 <_ZSt8_DestroyIPP19Multiply_expressionEvT_S3_>
    }
 8005050:	bf00      	nop
 8005052:	3710      	adds	r7, #16
 8005054:	46bd      	mov	sp, r7
 8005056:	bd80      	pop	{r7, pc}

08005058 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8005058:	b580      	push	{r7, lr}
 800505a:	b082      	sub	sp, #8
 800505c:	af00      	add	r7, sp, #0
 800505e:	6078      	str	r0, [r7, #4]
 8005060:	6878      	ldr	r0, [r7, #4]
 8005062:	f000 fd6d 	bl	8005b40 <_ZNSaI12sum_operatorED1Ev>
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	4618      	mov	r0, r3
 800506a:	3708      	adds	r7, #8
 800506c:	46bd      	mov	sp, r7
 800506e:	bd80      	pop	{r7, pc}

08005070 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8005070:	b580      	push	{r7, lr}
 8005072:	b082      	sub	sp, #8
 8005074:	af00      	add	r7, sp, #0
 8005076:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	689a      	ldr	r2, [r3, #8]
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	681b      	ldr	r3, [r3, #0]
 8005084:	1ad3      	subs	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 8005086:	461a      	mov	r2, r3
 8005088:	6878      	ldr	r0, [r7, #4]
 800508a:	f000 fd65 	bl	8005b58 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>
      }
 800508e:	687b      	ldr	r3, [r7, #4]
 8005090:	4618      	mov	r0, r3
 8005092:	f7ff ffe1 	bl	8005058 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implD1Ev>
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	4618      	mov	r0, r3
 800509a:	3708      	adds	r7, #8
 800509c:	46bd      	mov	sp, r7
 800509e:	bd80      	pop	{r7, pc}

080050a0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 80050a0:	b480      	push	{r7}
 80050a2:	b083      	sub	sp, #12
 80050a4:	af00      	add	r7, sp, #0
 80050a6:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80050a8:	687b      	ldr	r3, [r7, #4]
 80050aa:	4618      	mov	r0, r3
 80050ac:	370c      	adds	r7, #12
 80050ae:	46bd      	mov	sp, r7
 80050b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050b4:	4770      	bx	lr

080050b6 <_ZSt8_DestroyIP12sum_operatorS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 80050b6:	b580      	push	{r7, lr}
 80050b8:	b084      	sub	sp, #16
 80050ba:	af00      	add	r7, sp, #0
 80050bc:	60f8      	str	r0, [r7, #12]
 80050be:	60b9      	str	r1, [r7, #8]
 80050c0:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 80050c2:	68b9      	ldr	r1, [r7, #8]
 80050c4:	68f8      	ldr	r0, [r7, #12]
 80050c6:	f000 fd5a 	bl	8005b7e <_ZSt8_DestroyIP12sum_operatorEvT_S2_>
    }
 80050ca:	bf00      	nop
 80050cc:	3710      	adds	r7, #16
 80050ce:	46bd      	mov	sp, r7
 80050d0:	bd80      	pop	{r7, pc}

080050d2 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 80050d2:	b480      	push	{r7}
 80050d4:	b083      	sub	sp, #12
 80050d6:	af00      	add	r7, sp, #0
 80050d8:	6078      	str	r0, [r7, #4]
 80050da:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 80050dc:	683b      	ldr	r3, [r7, #0]
 80050de:	681a      	ldr	r2, [r3, #0]
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	601a      	str	r2, [r3, #0]
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	4618      	mov	r0, r3
 80050e8:	370c      	adds	r7, #12
 80050ea:	46bd      	mov	sp, r7
 80050ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050f0:	4770      	bx	lr

080050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 80050f2:	b480      	push	{r7}
 80050f4:	b083      	sub	sp, #12
 80050f6:	af00      	add	r7, sp, #0
 80050f8:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	4618      	mov	r0, r3
 80050fe:	370c      	adds	r7, #12
 8005100:	46bd      	mov	sp, r7
 8005102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005106:	4770      	bx	lr

08005108 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8005108:	b580      	push	{r7, lr}
 800510a:	b082      	sub	sp, #8
 800510c:	af00      	add	r7, sp, #0
 800510e:	6078      	str	r0, [r7, #4]
 8005110:	6878      	ldr	r0, [r7, #4]
 8005112:	f000 fd41 	bl	8005b98 <_ZNSaIP18Compare_expressionED1Ev>
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	4618      	mov	r0, r3
 800511a:	3708      	adds	r7, #8
 800511c:	46bd      	mov	sp, r7
 800511e:	bd80      	pop	{r7, pc}

08005120 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8005120:	b580      	push	{r7, lr}
 8005122:	b082      	sub	sp, #8
 8005124:	af00      	add	r7, sp, #0
 8005126:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8005128:	687b      	ldr	r3, [r7, #4]
 800512a:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	689a      	ldr	r2, [r3, #8]
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	681b      	ldr	r3, [r3, #0]
 8005134:	1ad3      	subs	r3, r2, r3
 8005136:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 8005138:	461a      	mov	r2, r3
 800513a:	6878      	ldr	r0, [r7, #4]
 800513c:	f000 fd38 	bl	8005bb0 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	4618      	mov	r0, r3
 8005144:	f7ff ffe0 	bl	8005108 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implD1Ev>
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	4618      	mov	r0, r3
 800514c:	3708      	adds	r7, #8
 800514e:	46bd      	mov	sp, r7
 8005150:	bd80      	pop	{r7, pc}

08005152 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8005152:	b480      	push	{r7}
 8005154:	b083      	sub	sp, #12
 8005156:	af00      	add	r7, sp, #0
 8005158:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	4618      	mov	r0, r3
 800515e:	370c      	adds	r7, #12
 8005160:	46bd      	mov	sp, r7
 8005162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005166:	4770      	bx	lr

08005168 <_ZSt8_DestroyIPP18Compare_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8005168:	b580      	push	{r7, lr}
 800516a:	b084      	sub	sp, #16
 800516c:	af00      	add	r7, sp, #0
 800516e:	60f8      	str	r0, [r7, #12]
 8005170:	60b9      	str	r1, [r7, #8]
 8005172:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8005174:	68b9      	ldr	r1, [r7, #8]
 8005176:	68f8      	ldr	r0, [r7, #12]
 8005178:	f000 fd2d 	bl	8005bd6 <_ZSt8_DestroyIPP18Compare_expressionEvT_S3_>
    }
 800517c:	bf00      	nop
 800517e:	3710      	adds	r7, #16
 8005180:	46bd      	mov	sp, r7
 8005182:	bd80      	pop	{r7, pc}

08005184 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8005184:	b480      	push	{r7}
 8005186:	b083      	sub	sp, #12
 8005188:	af00      	add	r7, sp, #0
 800518a:	6078      	str	r0, [r7, #4]
 800518c:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800518e:	683b      	ldr	r3, [r7, #0]
 8005190:	681a      	ldr	r2, [r3, #0]
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	601a      	str	r2, [r3, #0]
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	4618      	mov	r0, r3
 800519a:	370c      	adds	r7, #12
 800519c:	46bd      	mov	sp, r7
 800519e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051a2:	4770      	bx	lr

080051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 80051a4:	b480      	push	{r7}
 80051a6:	b083      	sub	sp, #12
 80051a8:	af00      	add	r7, sp, #0
 80051aa:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 80051ac:	687b      	ldr	r3, [r7, #4]
 80051ae:	4618      	mov	r0, r3
 80051b0:	370c      	adds	r7, #12
 80051b2:	46bd      	mov	sp, r7
 80051b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051b8:	4770      	bx	lr

080051ba <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 80051ba:	b580      	push	{r7, lr}
 80051bc:	b082      	sub	sp, #8
 80051be:	af00      	add	r7, sp, #0
 80051c0:	6078      	str	r0, [r7, #4]
 80051c2:	6878      	ldr	r0, [r7, #4]
 80051c4:	f000 fd14 	bl	8005bf0 <_ZNSaIP14And_expressionED1Ev>
 80051c8:	687b      	ldr	r3, [r7, #4]
 80051ca:	4618      	mov	r0, r3
 80051cc:	3708      	adds	r7, #8
 80051ce:	46bd      	mov	sp, r7
 80051d0:	bd80      	pop	{r7, pc}

080051d2 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 80051d2:	b580      	push	{r7, lr}
 80051d4:	b082      	sub	sp, #8
 80051d6:	af00      	add	r7, sp, #0
 80051d8:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 80051da:	687b      	ldr	r3, [r7, #4]
 80051dc:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	689a      	ldr	r2, [r3, #8]
 80051e2:	687b      	ldr	r3, [r7, #4]
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	1ad3      	subs	r3, r2, r3
 80051e8:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 80051ea:	461a      	mov	r2, r3
 80051ec:	6878      	ldr	r0, [r7, #4]
 80051ee:	f000 fd0b 	bl	8005c08 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	4618      	mov	r0, r3
 80051f6:	f7ff ffe0 	bl	80051ba <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implD1Ev>
 80051fa:	687b      	ldr	r3, [r7, #4]
 80051fc:	4618      	mov	r0, r3
 80051fe:	3708      	adds	r7, #8
 8005200:	46bd      	mov	sp, r7
 8005202:	bd80      	pop	{r7, pc}

08005204 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8005204:	b480      	push	{r7}
 8005206:	b083      	sub	sp, #12
 8005208:	af00      	add	r7, sp, #0
 800520a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	4618      	mov	r0, r3
 8005210:	370c      	adds	r7, #12
 8005212:	46bd      	mov	sp, r7
 8005214:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005218:	4770      	bx	lr

0800521a <_ZSt8_DestroyIPP14And_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800521a:	b580      	push	{r7, lr}
 800521c:	b084      	sub	sp, #16
 800521e:	af00      	add	r7, sp, #0
 8005220:	60f8      	str	r0, [r7, #12]
 8005222:	60b9      	str	r1, [r7, #8]
 8005224:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8005226:	68b9      	ldr	r1, [r7, #8]
 8005228:	68f8      	ldr	r0, [r7, #12]
 800522a:	f000 fd00 	bl	8005c2e <_ZSt8_DestroyIPP14And_expressionEvT_S3_>
    }
 800522e:	bf00      	nop
 8005230:	3710      	adds	r7, #16
 8005232:	46bd      	mov	sp, r7
 8005234:	bd80      	pop	{r7, pc}

08005236 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8005236:	b480      	push	{r7}
 8005238:	b083      	sub	sp, #12
 800523a:	af00      	add	r7, sp, #0
 800523c:	6078      	str	r0, [r7, #4]
 800523e:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8005240:	683b      	ldr	r3, [r7, #0]
 8005242:	681a      	ldr	r2, [r3, #0]
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	601a      	str	r2, [r3, #0]
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	4618      	mov	r0, r3
 800524c:	370c      	adds	r7, #12
 800524e:	46bd      	mov	sp, r7
 8005250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005254:	4770      	bx	lr

08005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8005256:	b480      	push	{r7}
 8005258:	b083      	sub	sp, #12
 800525a:	af00      	add	r7, sp, #0
 800525c:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800525e:	687b      	ldr	r3, [r7, #4]
 8005260:	4618      	mov	r0, r3
 8005262:	370c      	adds	r7, #12
 8005264:	46bd      	mov	sp, r7
 8005266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800526a:	4770      	bx	lr

0800526c <_ZSt14__variant_castIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callERNSt8__detail9__variant16_Variant_storageILb0EJbifS5_S7_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800526c:	b480      	push	{r7}
 800526e:	b083      	sub	sp, #12
 8005270:	af00      	add	r7, sp, #0
 8005272:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8005274:	687b      	ldr	r3, [r7, #4]
    }
 8005276:	4618      	mov	r0, r3
 8005278:	370c      	adds	r7, #12
 800527a:	46bd      	mov	sp, r7
 800527c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005280:	4770      	bx	lr

08005282 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8005282:	b580      	push	{r7, lr}
 8005284:	b082      	sub	sp, #8
 8005286:	af00      	add	r7, sp, #0
 8005288:	7138      	strb	r0, [r7, #4]
 800528a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800528c:	6838      	ldr	r0, [r7, #0]
 800528e:	f000 fb44 	bl	800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8005292:	4603      	mov	r3, r0
 8005294:	4618      	mov	r0, r3
 8005296:	f000 fce2 	bl	8005c5e <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800529a:	4603      	mov	r3, r0
 800529c:	4618      	mov	r0, r3
 800529e:	3708      	adds	r7, #8
 80052a0:	46bd      	mov	sp, r7
 80052a2:	bd80      	pop	{r7, pc}

080052a4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80052a4:	b590      	push	{r4, r7, lr}
 80052a6:	b083      	sub	sp, #12
 80052a8:	af00      	add	r7, sp, #0
 80052aa:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80052ac:	6878      	ldr	r0, [r7, #4]
 80052ae:	f000 fb29 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80052b2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80052b4:	4619      	mov	r1, r3
 80052b6:	4620      	mov	r0, r4
 80052b8:	f7ff ffe3 	bl	8005282 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 80052bc:	4603      	mov	r3, r0
    }
 80052be:	4618      	mov	r0, r3
 80052c0:	370c      	adds	r7, #12
 80052c2:	46bd      	mov	sp, r7
 80052c4:	bd90      	pop	{r4, r7, pc}

080052c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80052c6:	b580      	push	{r7, lr}
 80052c8:	b082      	sub	sp, #8
 80052ca:	af00      	add	r7, sp, #0
 80052cc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80052ce:	6878      	ldr	r0, [r7, #4]
 80052d0:	f000 fb18 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80052d4:	4603      	mov	r3, r0
 80052d6:	4618      	mov	r0, r3
 80052d8:	f7ff ffe4 	bl	80052a4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 80052dc:	4603      	mov	r3, r0
	}
 80052de:	4618      	mov	r0, r3
 80052e0:	3708      	adds	r7, #8
 80052e2:	46bd      	mov	sp, r7
 80052e4:	bd80      	pop	{r7, pc}

080052e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80052e6:	b5b0      	push	{r4, r5, r7, lr}
 80052e8:	b082      	sub	sp, #8
 80052ea:	af00      	add	r7, sp, #0
 80052ec:	6078      	str	r0, [r7, #4]
 80052ee:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80052f0:	6878      	ldr	r0, [r7, #4]
 80052f2:	f000 fca9 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80052f6:	4604      	mov	r4, r0
 80052f8:	6838      	ldr	r0, [r7, #0]
 80052fa:	f000 fb03 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80052fe:	4603      	mov	r3, r0
 8005300:	4618      	mov	r0, r3
 8005302:	f7ff ffe0 	bl	80052c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>
 8005306:	4603      	mov	r3, r0
 8005308:	4619      	mov	r1, r3
 800530a:	4620      	mov	r0, r4
 800530c:	f000 fcb2 	bl	8005c74 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8005310:	462b      	mov	r3, r5
      }
 8005312:	4618      	mov	r0, r3
 8005314:	3708      	adds	r7, #8
 8005316:	46bd      	mov	sp, r7
 8005318:	bdb0      	pop	{r4, r5, r7, pc}

0800531a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800531a:	b5b0      	push	{r4, r5, r7, lr}
 800531c:	b082      	sub	sp, #8
 800531e:	af00      	add	r7, sp, #0
 8005320:	6078      	str	r0, [r7, #4]
 8005322:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005324:	6878      	ldr	r0, [r7, #4]
 8005326:	f000 fc8f 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800532a:	4604      	mov	r4, r0
 800532c:	6838      	ldr	r0, [r7, #0]
 800532e:	f000 fae9 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005332:	4603      	mov	r3, r0
 8005334:	4619      	mov	r1, r3
 8005336:	4620      	mov	r0, r4
 8005338:	f7ff ffd5 	bl	80052e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800533c:	462b      	mov	r3, r5
      }
 800533e:	4618      	mov	r0, r3
 8005340:	3708      	adds	r7, #8
 8005342:	46bd      	mov	sp, r7
 8005344:	bdb0      	pop	{r4, r5, r7, pc}

08005346 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005346:	b5b0      	push	{r4, r5, r7, lr}
 8005348:	b082      	sub	sp, #8
 800534a:	af00      	add	r7, sp, #0
 800534c:	6078      	str	r0, [r7, #4]
 800534e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005350:	6878      	ldr	r0, [r7, #4]
 8005352:	f000 fc79 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005356:	4604      	mov	r4, r0
 8005358:	6838      	ldr	r0, [r7, #0]
 800535a:	f000 fad3 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800535e:	4603      	mov	r3, r0
 8005360:	4619      	mov	r1, r3
 8005362:	4620      	mov	r0, r4
 8005364:	f7ff ffd9 	bl	800531a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8005368:	462b      	mov	r3, r5
      }
 800536a:	4618      	mov	r0, r3
 800536c:	3708      	adds	r7, #8
 800536e:	46bd      	mov	sp, r7
 8005370:	bdb0      	pop	{r4, r5, r7, pc}

08005372 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8005372:	b580      	push	{r7, lr}
 8005374:	b082      	sub	sp, #8
 8005376:	af00      	add	r7, sp, #0
 8005378:	7138      	strb	r0, [r7, #4]
 800537a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800537c:	6838      	ldr	r0, [r7, #0]
 800537e:	f000 fad7 	bl	8005930 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8005382:	4603      	mov	r3, r0
 8005384:	4618      	mov	r0, r3
 8005386:	f000 fc8c 	bl	8005ca2 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 800538a:	4603      	mov	r3, r0
 800538c:	4618      	mov	r0, r3
 800538e:	3708      	adds	r7, #8
 8005390:	46bd      	mov	sp, r7
 8005392:	bd80      	pop	{r7, pc}

08005394 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8005394:	b590      	push	{r4, r7, lr}
 8005396:	b083      	sub	sp, #12
 8005398:	af00      	add	r7, sp, #0
 800539a:	7138      	strb	r0, [r7, #4]
 800539c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800539e:	6838      	ldr	r0, [r7, #0]
 80053a0:	f000 fabb 	bl	800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80053a4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80053a6:	4619      	mov	r1, r3
 80053a8:	4620      	mov	r0, r4
 80053aa:	f7ff ffe2 	bl	8005372 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 80053ae:	4603      	mov	r3, r0
    }
 80053b0:	4618      	mov	r0, r3
 80053b2:	370c      	adds	r7, #12
 80053b4:	46bd      	mov	sp, r7
 80053b6:	bd90      	pop	{r4, r7, pc}

080053b8 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80053b8:	b590      	push	{r4, r7, lr}
 80053ba:	b083      	sub	sp, #12
 80053bc:	af00      	add	r7, sp, #0
 80053be:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80053c0:	6878      	ldr	r0, [r7, #4]
 80053c2:	f000 fa9f 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80053c6:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80053c8:	4619      	mov	r1, r3
 80053ca:	4620      	mov	r0, r4
 80053cc:	f7ff ffe2 	bl	8005394 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80053d0:	4603      	mov	r3, r0
    }
 80053d2:	4618      	mov	r0, r3
 80053d4:	370c      	adds	r7, #12
 80053d6:	46bd      	mov	sp, r7
 80053d8:	bd90      	pop	{r4, r7, pc}

080053da <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80053da:	b580      	push	{r7, lr}
 80053dc:	b082      	sub	sp, #8
 80053de:	af00      	add	r7, sp, #0
 80053e0:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80053e2:	6878      	ldr	r0, [r7, #4]
 80053e4:	f000 fa8e 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80053e8:	4603      	mov	r3, r0
 80053ea:	4618      	mov	r0, r3
 80053ec:	f7ff ffe4 	bl	80053b8 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 80053f0:	4603      	mov	r3, r0
	}
 80053f2:	4618      	mov	r0, r3
 80053f4:	3708      	adds	r7, #8
 80053f6:	46bd      	mov	sp, r7
 80053f8:	bd80      	pop	{r7, pc}

080053fa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80053fa:	b5b0      	push	{r4, r5, r7, lr}
 80053fc:	b082      	sub	sp, #8
 80053fe:	af00      	add	r7, sp, #0
 8005400:	6078      	str	r0, [r7, #4]
 8005402:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005404:	6878      	ldr	r0, [r7, #4]
 8005406:	f000 fc1f 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800540a:	4604      	mov	r4, r0
 800540c:	6838      	ldr	r0, [r7, #0]
 800540e:	f000 fa79 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005412:	4603      	mov	r3, r0
 8005414:	4618      	mov	r0, r3
 8005416:	f7ff ffe0 	bl	80053da <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>
 800541a:	4603      	mov	r3, r0
 800541c:	4619      	mov	r1, r3
 800541e:	4620      	mov	r0, r4
 8005420:	f000 fc4a 	bl	8005cb8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8005424:	462b      	mov	r3, r5
      }
 8005426:	4618      	mov	r0, r3
 8005428:	3708      	adds	r7, #8
 800542a:	46bd      	mov	sp, r7
 800542c:	bdb0      	pop	{r4, r5, r7, pc}

0800542e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800542e:	b5b0      	push	{r4, r5, r7, lr}
 8005430:	b082      	sub	sp, #8
 8005432:	af00      	add	r7, sp, #0
 8005434:	6078      	str	r0, [r7, #4]
 8005436:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005438:	6878      	ldr	r0, [r7, #4]
 800543a:	f000 fc05 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800543e:	4604      	mov	r4, r0
 8005440:	6838      	ldr	r0, [r7, #0]
 8005442:	f000 fa5f 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005446:	4603      	mov	r3, r0
 8005448:	4619      	mov	r1, r3
 800544a:	4620      	mov	r0, r4
 800544c:	f7ff ffd5 	bl	80053fa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8005450:	462b      	mov	r3, r5
      }
 8005452:	4618      	mov	r0, r3
 8005454:	3708      	adds	r7, #8
 8005456:	46bd      	mov	sp, r7
 8005458:	bdb0      	pop	{r4, r5, r7, pc}

0800545a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800545a:	b5b0      	push	{r4, r5, r7, lr}
 800545c:	b082      	sub	sp, #8
 800545e:	af00      	add	r7, sp, #0
 8005460:	6078      	str	r0, [r7, #4]
 8005462:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005464:	6878      	ldr	r0, [r7, #4]
 8005466:	f000 fbef 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800546a:	4604      	mov	r4, r0
 800546c:	6838      	ldr	r0, [r7, #0]
 800546e:	f000 fa49 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005472:	4603      	mov	r3, r0
 8005474:	4619      	mov	r1, r3
 8005476:	4620      	mov	r0, r4
 8005478:	f7ff ffd9 	bl	800542e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800547c:	462b      	mov	r3, r5
      }
 800547e:	4618      	mov	r0, r3
 8005480:	3708      	adds	r7, #8
 8005482:	46bd      	mov	sp, r7
 8005484:	bdb0      	pop	{r4, r5, r7, pc}

08005486 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8005486:	b580      	push	{r7, lr}
 8005488:	b082      	sub	sp, #8
 800548a:	af00      	add	r7, sp, #0
 800548c:	7138      	strb	r0, [r7, #4]
 800548e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8005490:	6838      	ldr	r0, [r7, #0]
 8005492:	f000 fa58 	bl	8005946 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8005496:	4603      	mov	r3, r0
 8005498:	4618      	mov	r0, r3
 800549a:	f000 fc24 	bl	8005ce6 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 800549e:	4603      	mov	r3, r0
 80054a0:	4618      	mov	r0, r3
 80054a2:	3708      	adds	r7, #8
 80054a4:	46bd      	mov	sp, r7
 80054a6:	bd80      	pop	{r7, pc}

080054a8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80054a8:	b590      	push	{r4, r7, lr}
 80054aa:	b083      	sub	sp, #12
 80054ac:	af00      	add	r7, sp, #0
 80054ae:	7138      	strb	r0, [r7, #4]
 80054b0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80054b2:	6838      	ldr	r0, [r7, #0]
 80054b4:	f000 fa3c 	bl	8005930 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80054b8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80054ba:	4619      	mov	r1, r3
 80054bc:	4620      	mov	r0, r4
 80054be:	f7ff ffe2 	bl	8005486 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 80054c2:	4603      	mov	r3, r0
    }
 80054c4:	4618      	mov	r0, r3
 80054c6:	370c      	adds	r7, #12
 80054c8:	46bd      	mov	sp, r7
 80054ca:	bd90      	pop	{r4, r7, pc}

080054cc <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80054cc:	b590      	push	{r4, r7, lr}
 80054ce:	b083      	sub	sp, #12
 80054d0:	af00      	add	r7, sp, #0
 80054d2:	7138      	strb	r0, [r7, #4]
 80054d4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80054d6:	6838      	ldr	r0, [r7, #0]
 80054d8:	f000 fa1f 	bl	800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80054dc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80054de:	4619      	mov	r1, r3
 80054e0:	4620      	mov	r0, r4
 80054e2:	f7ff ffe1 	bl	80054a8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80054e6:	4603      	mov	r3, r0
    }
 80054e8:	4618      	mov	r0, r3
 80054ea:	370c      	adds	r7, #12
 80054ec:	46bd      	mov	sp, r7
 80054ee:	bd90      	pop	{r4, r7, pc}

080054f0 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80054f0:	b590      	push	{r4, r7, lr}
 80054f2:	b083      	sub	sp, #12
 80054f4:	af00      	add	r7, sp, #0
 80054f6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80054f8:	6878      	ldr	r0, [r7, #4]
 80054fa:	f000 fa03 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80054fe:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8005500:	4619      	mov	r1, r3
 8005502:	4620      	mov	r0, r4
 8005504:	f7ff ffe2 	bl	80054cc <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8005508:	4603      	mov	r3, r0
    }
 800550a:	4618      	mov	r0, r3
 800550c:	370c      	adds	r7, #12
 800550e:	46bd      	mov	sp, r7
 8005510:	bd90      	pop	{r4, r7, pc}

08005512 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8005512:	b580      	push	{r7, lr}
 8005514:	b082      	sub	sp, #8
 8005516:	af00      	add	r7, sp, #0
 8005518:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800551a:	6878      	ldr	r0, [r7, #4]
 800551c:	f000 f9f2 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005520:	4603      	mov	r3, r0
 8005522:	4618      	mov	r0, r3
 8005524:	f7ff ffe4 	bl	80054f0 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8005528:	4603      	mov	r3, r0
	}
 800552a:	4618      	mov	r0, r3
 800552c:	3708      	adds	r7, #8
 800552e:	46bd      	mov	sp, r7
 8005530:	bd80      	pop	{r7, pc}

08005532 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8005532:	b5b0      	push	{r4, r5, r7, lr}
 8005534:	b082      	sub	sp, #8
 8005536:	af00      	add	r7, sp, #0
 8005538:	6078      	str	r0, [r7, #4]
 800553a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800553c:	6878      	ldr	r0, [r7, #4]
 800553e:	f000 fb83 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005542:	4604      	mov	r4, r0
 8005544:	6838      	ldr	r0, [r7, #0]
 8005546:	f000 f9dd 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800554a:	4603      	mov	r3, r0
 800554c:	4618      	mov	r0, r3
 800554e:	f7ff ffe0 	bl	8005512 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>
 8005552:	4603      	mov	r3, r0
 8005554:	4619      	mov	r1, r3
 8005556:	4620      	mov	r0, r4
 8005558:	f000 fbd0 	bl	8005cfc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800555c:	462b      	mov	r3, r5
      }
 800555e:	4618      	mov	r0, r3
 8005560:	3708      	adds	r7, #8
 8005562:	46bd      	mov	sp, r7
 8005564:	bdb0      	pop	{r4, r5, r7, pc}

08005566 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005566:	b5b0      	push	{r4, r5, r7, lr}
 8005568:	b082      	sub	sp, #8
 800556a:	af00      	add	r7, sp, #0
 800556c:	6078      	str	r0, [r7, #4]
 800556e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005570:	6878      	ldr	r0, [r7, #4]
 8005572:	f000 fb69 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005576:	4604      	mov	r4, r0
 8005578:	6838      	ldr	r0, [r7, #0]
 800557a:	f000 f9c3 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800557e:	4603      	mov	r3, r0
 8005580:	4619      	mov	r1, r3
 8005582:	4620      	mov	r0, r4
 8005584:	f7ff ffd5 	bl	8005532 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8005588:	462b      	mov	r3, r5
      }
 800558a:	4618      	mov	r0, r3
 800558c:	3708      	adds	r7, #8
 800558e:	46bd      	mov	sp, r7
 8005590:	bdb0      	pop	{r4, r5, r7, pc}

08005592 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005592:	b5b0      	push	{r4, r5, r7, lr}
 8005594:	b082      	sub	sp, #8
 8005596:	af00      	add	r7, sp, #0
 8005598:	6078      	str	r0, [r7, #4]
 800559a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800559c:	6878      	ldr	r0, [r7, #4]
 800559e:	f000 fb53 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80055a2:	4604      	mov	r4, r0
 80055a4:	6838      	ldr	r0, [r7, #0]
 80055a6:	f000 f9ad 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80055aa:	4603      	mov	r3, r0
 80055ac:	4619      	mov	r1, r3
 80055ae:	4620      	mov	r0, r4
 80055b0:	f7ff ffd9 	bl	8005566 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80055b4:	462b      	mov	r3, r5
      }
 80055b6:	4618      	mov	r0, r3
 80055b8:	3708      	adds	r7, #8
 80055ba:	46bd      	mov	sp, r7
 80055bc:	bdb0      	pop	{r4, r5, r7, pc}

080055be <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80055be:	b580      	push	{r7, lr}
 80055c0:	b082      	sub	sp, #8
 80055c2:	af00      	add	r7, sp, #0
 80055c4:	7138      	strb	r0, [r7, #4]
 80055c6:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80055c8:	6838      	ldr	r0, [r7, #0]
 80055ca:	f000 f9c7 	bl	800595c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80055ce:	4603      	mov	r3, r0
 80055d0:	4618      	mov	r0, r3
 80055d2:	f000 fbaa 	bl	8005d2a <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 80055d6:	4603      	mov	r3, r0
 80055d8:	4618      	mov	r0, r3
 80055da:	3708      	adds	r7, #8
 80055dc:	46bd      	mov	sp, r7
 80055de:	bd80      	pop	{r7, pc}

080055e0 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80055e0:	b590      	push	{r4, r7, lr}
 80055e2:	b083      	sub	sp, #12
 80055e4:	af00      	add	r7, sp, #0
 80055e6:	7138      	strb	r0, [r7, #4]
 80055e8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80055ea:	6838      	ldr	r0, [r7, #0]
 80055ec:	f000 f9ab 	bl	8005946 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80055f0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80055f2:	4619      	mov	r1, r3
 80055f4:	4620      	mov	r0, r4
 80055f6:	f7ff ffe2 	bl	80055be <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 80055fa:	4603      	mov	r3, r0
    }
 80055fc:	4618      	mov	r0, r3
 80055fe:	370c      	adds	r7, #12
 8005600:	46bd      	mov	sp, r7
 8005602:	bd90      	pop	{r4, r7, pc}

08005604 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8005604:	b590      	push	{r4, r7, lr}
 8005606:	b083      	sub	sp, #12
 8005608:	af00      	add	r7, sp, #0
 800560a:	7138      	strb	r0, [r7, #4]
 800560c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800560e:	6838      	ldr	r0, [r7, #0]
 8005610:	f000 f98e 	bl	8005930 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8005614:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8005616:	4619      	mov	r1, r3
 8005618:	4620      	mov	r0, r4
 800561a:	f7ff ffe1 	bl	80055e0 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800561e:	4603      	mov	r3, r0
    }
 8005620:	4618      	mov	r0, r3
 8005622:	370c      	adds	r7, #12
 8005624:	46bd      	mov	sp, r7
 8005626:	bd90      	pop	{r4, r7, pc}

08005628 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8005628:	b590      	push	{r4, r7, lr}
 800562a:	b083      	sub	sp, #12
 800562c:	af00      	add	r7, sp, #0
 800562e:	7138      	strb	r0, [r7, #4]
 8005630:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8005632:	6838      	ldr	r0, [r7, #0]
 8005634:	f000 f971 	bl	800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8005638:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800563a:	4619      	mov	r1, r3
 800563c:	4620      	mov	r0, r4
 800563e:	f7ff ffe1 	bl	8005604 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8005642:	4603      	mov	r3, r0
    }
 8005644:	4618      	mov	r0, r3
 8005646:	370c      	adds	r7, #12
 8005648:	46bd      	mov	sp, r7
 800564a:	bd90      	pop	{r4, r7, pc}

0800564c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800564c:	b590      	push	{r4, r7, lr}
 800564e:	b083      	sub	sp, #12
 8005650:	af00      	add	r7, sp, #0
 8005652:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8005654:	6878      	ldr	r0, [r7, #4]
 8005656:	f000 f955 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800565a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800565c:	4619      	mov	r1, r3
 800565e:	4620      	mov	r0, r4
 8005660:	f7ff ffe2 	bl	8005628 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8005664:	4603      	mov	r3, r0
    }
 8005666:	4618      	mov	r0, r3
 8005668:	370c      	adds	r7, #12
 800566a:	46bd      	mov	sp, r7
 800566c:	bd90      	pop	{r4, r7, pc}

0800566e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800566e:	b580      	push	{r7, lr}
 8005670:	b082      	sub	sp, #8
 8005672:	af00      	add	r7, sp, #0
 8005674:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8005676:	6878      	ldr	r0, [r7, #4]
 8005678:	f000 f944 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800567c:	4603      	mov	r3, r0
 800567e:	4618      	mov	r0, r3
 8005680:	f7ff ffe4 	bl	800564c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8005684:	4603      	mov	r3, r0
	}
 8005686:	4618      	mov	r0, r3
 8005688:	3708      	adds	r7, #8
 800568a:	46bd      	mov	sp, r7
 800568c:	bd80      	pop	{r7, pc}

0800568e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800568e:	b5b0      	push	{r4, r5, r7, lr}
 8005690:	b082      	sub	sp, #8
 8005692:	af00      	add	r7, sp, #0
 8005694:	6078      	str	r0, [r7, #4]
 8005696:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005698:	6878      	ldr	r0, [r7, #4]
 800569a:	f000 fad5 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800569e:	4604      	mov	r4, r0
 80056a0:	6838      	ldr	r0, [r7, #0]
 80056a2:	f000 f92f 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80056a6:	4603      	mov	r3, r0
 80056a8:	4618      	mov	r0, r3
 80056aa:	f7ff ffe0 	bl	800566e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>
 80056ae:	4603      	mov	r3, r0
 80056b0:	4619      	mov	r1, r3
 80056b2:	4620      	mov	r0, r4
 80056b4:	f000 fb46 	bl	8005d44 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 80056b8:	462b      	mov	r3, r5
      }
 80056ba:	4618      	mov	r0, r3
 80056bc:	3708      	adds	r7, #8
 80056be:	46bd      	mov	sp, r7
 80056c0:	bdb0      	pop	{r4, r5, r7, pc}

080056c2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80056c2:	b5b0      	push	{r4, r5, r7, lr}
 80056c4:	b082      	sub	sp, #8
 80056c6:	af00      	add	r7, sp, #0
 80056c8:	6078      	str	r0, [r7, #4]
 80056ca:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80056cc:	6878      	ldr	r0, [r7, #4]
 80056ce:	f000 fabb 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80056d2:	4604      	mov	r4, r0
 80056d4:	6838      	ldr	r0, [r7, #0]
 80056d6:	f000 f915 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80056da:	4603      	mov	r3, r0
 80056dc:	4619      	mov	r1, r3
 80056de:	4620      	mov	r0, r4
 80056e0:	f7ff ffd5 	bl	800568e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80056e4:	462b      	mov	r3, r5
      }
 80056e6:	4618      	mov	r0, r3
 80056e8:	3708      	adds	r7, #8
 80056ea:	46bd      	mov	sp, r7
 80056ec:	bdb0      	pop	{r4, r5, r7, pc}

080056ee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80056ee:	b5b0      	push	{r4, r5, r7, lr}
 80056f0:	b082      	sub	sp, #8
 80056f2:	af00      	add	r7, sp, #0
 80056f4:	6078      	str	r0, [r7, #4]
 80056f6:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80056f8:	6878      	ldr	r0, [r7, #4]
 80056fa:	f000 faa5 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80056fe:	4604      	mov	r4, r0
 8005700:	6838      	ldr	r0, [r7, #0]
 8005702:	f000 f8ff 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005706:	4603      	mov	r3, r0
 8005708:	4619      	mov	r1, r3
 800570a:	4620      	mov	r0, r4
 800570c:	f7ff ffd9 	bl	80056c2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8005710:	462b      	mov	r3, r5
      }
 8005712:	4618      	mov	r0, r3
 8005714:	3708      	adds	r7, #8
 8005716:	46bd      	mov	sp, r7
 8005718:	bdb0      	pop	{r4, r5, r7, pc}

0800571a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800571a:	b580      	push	{r7, lr}
 800571c:	b082      	sub	sp, #8
 800571e:	af00      	add	r7, sp, #0
 8005720:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8005722:	6878      	ldr	r0, [r7, #4]
 8005724:	f000 f8ee 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005728:	4603      	mov	r3, r0
 800572a:	4618      	mov	r0, r3
 800572c:	f7ff fa6d 	bl	8004c0a <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8005730:	4603      	mov	r3, r0
	}
 8005732:	4618      	mov	r0, r3
 8005734:	3708      	adds	r7, #8
 8005736:	46bd      	mov	sp, r7
 8005738:	bd80      	pop	{r7, pc}

0800573a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800573a:	b5b0      	push	{r4, r5, r7, lr}
 800573c:	b082      	sub	sp, #8
 800573e:	af00      	add	r7, sp, #0
 8005740:	6078      	str	r0, [r7, #4]
 8005742:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005744:	6878      	ldr	r0, [r7, #4]
 8005746:	f000 fa7f 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800574a:	4604      	mov	r4, r0
 800574c:	6838      	ldr	r0, [r7, #0]
 800574e:	f000 f8d9 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005752:	4603      	mov	r3, r0
 8005754:	4618      	mov	r0, r3
 8005756:	f7ff ffe0 	bl	800571a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>
 800575a:	4603      	mov	r3, r0
 800575c:	4619      	mov	r1, r3
 800575e:	4620      	mov	r0, r4
 8005760:	f000 fb07 	bl	8005d72 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSA_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8005764:	462b      	mov	r3, r5
      }
 8005766:	4618      	mov	r0, r3
 8005768:	3708      	adds	r7, #8
 800576a:	46bd      	mov	sp, r7
 800576c:	bdb0      	pop	{r4, r5, r7, pc}

0800576e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800576e:	b5b0      	push	{r4, r5, r7, lr}
 8005770:	b082      	sub	sp, #8
 8005772:	af00      	add	r7, sp, #0
 8005774:	6078      	str	r0, [r7, #4]
 8005776:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005778:	6878      	ldr	r0, [r7, #4]
 800577a:	f000 fa65 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800577e:	4604      	mov	r4, r0
 8005780:	6838      	ldr	r0, [r7, #0]
 8005782:	f000 f8bf 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005786:	4603      	mov	r3, r0
 8005788:	4619      	mov	r1, r3
 800578a:	4620      	mov	r0, r4
 800578c:	f7ff ffd5 	bl	800573a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8005790:	462b      	mov	r3, r5
      }
 8005792:	4618      	mov	r0, r3
 8005794:	3708      	adds	r7, #8
 8005796:	46bd      	mov	sp, r7
 8005798:	bdb0      	pop	{r4, r5, r7, pc}

0800579a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800579a:	b5b0      	push	{r4, r5, r7, lr}
 800579c:	b082      	sub	sp, #8
 800579e:	af00      	add	r7, sp, #0
 80057a0:	6078      	str	r0, [r7, #4]
 80057a2:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80057a4:	6878      	ldr	r0, [r7, #4]
 80057a6:	f000 fa4f 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80057aa:	4604      	mov	r4, r0
 80057ac:	6838      	ldr	r0, [r7, #0]
 80057ae:	f000 f8a9 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80057b2:	4603      	mov	r3, r0
 80057b4:	4619      	mov	r1, r3
 80057b6:	4620      	mov	r0, r4
 80057b8:	f7ff ffd9 	bl	800576e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80057bc:	462b      	mov	r3, r5
      }
 80057be:	4618      	mov	r0, r3
 80057c0:	3708      	adds	r7, #8
 80057c2:	46bd      	mov	sp, r7
 80057c4:	bdb0      	pop	{r4, r5, r7, pc}

080057c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80057c6:	b580      	push	{r7, lr}
 80057c8:	b082      	sub	sp, #8
 80057ca:	af00      	add	r7, sp, #0
 80057cc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80057ce:	6878      	ldr	r0, [r7, #4]
 80057d0:	f000 f898 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80057d4:	4603      	mov	r3, r0
 80057d6:	4618      	mov	r0, r3
 80057d8:	f7ff faaf 	bl	8004d3a <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 80057dc:	4603      	mov	r3, r0
	}
 80057de:	4618      	mov	r0, r3
 80057e0:	3708      	adds	r7, #8
 80057e2:	46bd      	mov	sp, r7
 80057e4:	bd80      	pop	{r7, pc}

080057e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80057e6:	b5b0      	push	{r4, r5, r7, lr}
 80057e8:	b082      	sub	sp, #8
 80057ea:	af00      	add	r7, sp, #0
 80057ec:	6078      	str	r0, [r7, #4]
 80057ee:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80057f0:	6878      	ldr	r0, [r7, #4]
 80057f2:	f000 fa29 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80057f6:	4604      	mov	r4, r0
 80057f8:	6838      	ldr	r0, [r7, #0]
 80057fa:	f000 f883 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80057fe:	4603      	mov	r3, r0
 8005800:	4618      	mov	r0, r3
 8005802:	f7ff ffe0 	bl	80057c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESM_EEDcOT0_>
 8005806:	4603      	mov	r3, r0
 8005808:	4619      	mov	r1, r3
 800580a:	4620      	mov	r0, r4
 800580c:	f000 fac8 	bl	8005da0 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8005810:	462b      	mov	r3, r5
      }
 8005812:	4618      	mov	r0, r3
 8005814:	3708      	adds	r7, #8
 8005816:	46bd      	mov	sp, r7
 8005818:	bdb0      	pop	{r4, r5, r7, pc}

0800581a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800581a:	b5b0      	push	{r4, r5, r7, lr}
 800581c:	b082      	sub	sp, #8
 800581e:	af00      	add	r7, sp, #0
 8005820:	6078      	str	r0, [r7, #4]
 8005822:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005824:	6878      	ldr	r0, [r7, #4]
 8005826:	f000 fa0f 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800582a:	4604      	mov	r4, r0
 800582c:	6838      	ldr	r0, [r7, #0]
 800582e:	f000 f869 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005832:	4603      	mov	r3, r0
 8005834:	4619      	mov	r1, r3
 8005836:	4620      	mov	r0, r4
 8005838:	f7ff ffd5 	bl	80057e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800583c:	462b      	mov	r3, r5
      }
 800583e:	4618      	mov	r0, r3
 8005840:	3708      	adds	r7, #8
 8005842:	46bd      	mov	sp, r7
 8005844:	bdb0      	pop	{r4, r5, r7, pc}

08005846 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005846:	b5b0      	push	{r4, r5, r7, lr}
 8005848:	b082      	sub	sp, #8
 800584a:	af00      	add	r7, sp, #0
 800584c:	6078      	str	r0, [r7, #4]
 800584e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005850:	6878      	ldr	r0, [r7, #4]
 8005852:	f000 f9f9 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005856:	4604      	mov	r4, r0
 8005858:	6838      	ldr	r0, [r7, #0]
 800585a:	f000 f853 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800585e:	4603      	mov	r3, r0
 8005860:	4619      	mov	r1, r3
 8005862:	4620      	mov	r0, r4
 8005864:	f7ff ffd9 	bl	800581a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8005868:	462b      	mov	r3, r5
      }
 800586a:	4618      	mov	r0, r3
 800586c:	3708      	adds	r7, #8
 800586e:	46bd      	mov	sp, r7
 8005870:	bdb0      	pop	{r4, r5, r7, pc}

08005872 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJLj6EEE9_M_accessIJEEERKSN_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8005872:	b580      	push	{r7, lr}
 8005874:	b082      	sub	sp, #8
 8005876:	af00      	add	r7, sp, #0
 8005878:	6078      	str	r0, [r7, #4]
 800587a:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800587c:	683b      	ldr	r3, [r7, #0]
 800587e:	009b      	lsls	r3, r3, #2
 8005880:	687a      	ldr	r2, [r7, #4]
 8005882:	4413      	add	r3, r2
 8005884:	4618      	mov	r0, r3
 8005886:	f000 faa2 	bl	8005dce <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJEE9_M_accessEv>
 800588a:	4603      	mov	r3, r0
	}
 800588c:	4618      	mov	r0, r3
 800588e:	3708      	adds	r7, #8
 8005890:	46bd      	mov	sp, r7
 8005892:	bd80      	pop	{r7, pc}

08005894 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_>:

  template<bool __use_index,
	   bool __same_return_types,
	   typename _Visitor, typename... _Variants>
    constexpr decltype(auto)
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8005894:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005896:	b085      	sub	sp, #20
 8005898:	af00      	add	r7, sp, #0
 800589a:	6078      	str	r0, [r7, #4]
 800589c:	6039      	str	r1, [r7, #0]

      using _Result_type = typename std::conditional_t<__use_index,
	__detail::__variant::__variant_idx_cookie,
	_Deduced_type>::type;

      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800589e:	4b0f      	ldr	r3, [pc, #60]	; (80058dc <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_+0x48>)
 80058a0:	60fb      	str	r3, [r7, #12]
	__same_return_types,
	_Result_type, _Visitor&&, _Variants&&...>::_S_vtable;

      auto __func_ptr = __vtable._M_access(__variants.index()...);
 80058a2:	6838      	ldr	r0, [r7, #0]
 80058a4:	f7fe fecb 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 80058a8:	4603      	mov	r3, r0
 80058aa:	4619      	mov	r1, r3
 80058ac:	68f8      	ldr	r0, [r7, #12]
 80058ae:	f7ff ffe0 	bl	8005872 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJLj6EEE9_M_accessIJEEERKSN_jDpT_>
 80058b2:	4603      	mov	r3, r0
 80058b4:	681b      	ldr	r3, [r3, #0]
 80058b6:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 80058b8:	68bc      	ldr	r4, [r7, #8]
 80058ba:	6878      	ldr	r0, [r7, #4]
 80058bc:	f000 fa92 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80058c0:	4605      	mov	r5, r0
 80058c2:	6838      	ldr	r0, [r7, #0]
 80058c4:	f000 f81e 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80058c8:	4603      	mov	r3, r0
 80058ca:	4619      	mov	r1, r3
 80058cc:	4628      	mov	r0, r5
 80058ce:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 80058d0:	4633      	mov	r3, r6
    }
 80058d2:	4618      	mov	r0, r3
 80058d4:	3714      	adds	r7, #20
 80058d6:	46bd      	mov	sp, r7
 80058d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80058da:	bf00      	nop
 80058dc:	08027e54 	.word	0x08027e54

080058e0 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 80058e0:	b580      	push	{r7, lr}
 80058e2:	b084      	sub	sp, #16
 80058e4:	af00      	add	r7, sp, #0
 80058e6:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 80058e8:	6878      	ldr	r0, [r7, #4]
 80058ea:	f7ff fcbf 	bl	800526c <_ZSt14__variant_castIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callERNSt8__detail9__variant16_Variant_storageILb0EJbifS5_S7_S9_EEEEDcOT0_>
 80058ee:	4602      	mov	r2, r0
 80058f0:	f107 030c 	add.w	r3, r7, #12
 80058f4:	4611      	mov	r1, r2
 80058f6:	4618      	mov	r0, r3
 80058f8:	f7ff ffcc 	bl	8005894 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_>
      }
 80058fc:	bf00      	nop
 80058fe:	3710      	adds	r7, #16
 8005900:	46bd      	mov	sp, r7
 8005902:	bd80      	pop	{r7, pc}

08005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005904:	b480      	push	{r7}
 8005906:	b083      	sub	sp, #12
 8005908:	af00      	add	r7, sp, #0
 800590a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800590c:	687b      	ldr	r3, [r7, #4]
 800590e:	4618      	mov	r0, r3
 8005910:	370c      	adds	r7, #12
 8005912:	46bd      	mov	sp, r7
 8005914:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005918:	4770      	bx	lr

0800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800591a:	b480      	push	{r7}
 800591c:	b083      	sub	sp, #12
 800591e:	af00      	add	r7, sp, #0
 8005920:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	4618      	mov	r0, r3
 8005926:	370c      	adds	r7, #12
 8005928:	46bd      	mov	sp, r7
 800592a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800592e:	4770      	bx	lr

08005930 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005930:	b480      	push	{r7}
 8005932:	b083      	sub	sp, #12
 8005934:	af00      	add	r7, sp, #0
 8005936:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005938:	687b      	ldr	r3, [r7, #4]
 800593a:	4618      	mov	r0, r3
 800593c:	370c      	adds	r7, #12
 800593e:	46bd      	mov	sp, r7
 8005940:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005944:	4770      	bx	lr

08005946 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005946:	b480      	push	{r7}
 8005948:	b083      	sub	sp, #12
 800594a:	af00      	add	r7, sp, #0
 800594c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800594e:	687b      	ldr	r3, [r7, #4]
 8005950:	4618      	mov	r0, r3
 8005952:	370c      	adds	r7, #12
 8005954:	46bd      	mov	sp, r7
 8005956:	f85d 7b04 	ldr.w	r7, [sp], #4
 800595a:	4770      	bx	lr

0800595c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800595c:	b480      	push	{r7}
 800595e:	b083      	sub	sp, #12
 8005960:	af00      	add	r7, sp, #0
 8005962:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005964:	687b      	ldr	r3, [r7, #4]
 8005966:	4618      	mov	r0, r3
 8005968:	370c      	adds	r7, #12
 800596a:	46bd      	mov	sp, r7
 800596c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005970:	4770      	bx	lr

08005972 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005972:	b480      	push	{r7}
 8005974:	b083      	sub	sp, #12
 8005976:	af00      	add	r7, sp, #0
 8005978:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	4618      	mov	r0, r3
 800597e:	370c      	adds	r7, #12
 8005980:	46bd      	mov	sp, r7
 8005982:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005986:	4770      	bx	lr

08005988 <_ZNRSt8__detail9__variant14_UninitializedIP8VariableLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8005988:	b480      	push	{r7}
 800598a:	b083      	sub	sp, #12
 800598c:	af00      	add	r7, sp, #0
 800598e:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	4618      	mov	r0, r3
 8005994:	370c      	adds	r7, #12
 8005996:	46bd      	mov	sp, r7
 8005998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800599c:	4770      	bx	lr

0800599e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800599e:	b480      	push	{r7}
 80059a0:	b083      	sub	sp, #12
 80059a2:	af00      	add	r7, sp, #0
 80059a4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80059a6:	687b      	ldr	r3, [r7, #4]
 80059a8:	4618      	mov	r0, r3
 80059aa:	370c      	adds	r7, #12
 80059ac:	46bd      	mov	sp, r7
 80059ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059b2:	4770      	bx	lr

080059b4 <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 80059b4:	b480      	push	{r7}
 80059b6:	b083      	sub	sp, #12
 80059b8:	af00      	add	r7, sp, #0
 80059ba:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	4618      	mov	r0, r3
 80059c0:	370c      	adds	r7, #12
 80059c2:	46bd      	mov	sp, r7
 80059c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059c8:	4770      	bx	lr

080059ca <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80059ca:	b480      	push	{r7}
 80059cc:	b083      	sub	sp, #12
 80059ce:	af00      	add	r7, sp, #0
 80059d0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80059d2:	687b      	ldr	r3, [r7, #4]
 80059d4:	4618      	mov	r0, r3
 80059d6:	370c      	adds	r7, #12
 80059d8:	46bd      	mov	sp, r7
 80059da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059de:	4770      	bx	lr

080059e0 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80059e0:	b480      	push	{r7}
 80059e2:	b083      	sub	sp, #12
 80059e4:	af00      	add	r7, sp, #0
 80059e6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80059e8:	687b      	ldr	r3, [r7, #4]
 80059ea:	4618      	mov	r0, r3
 80059ec:	370c      	adds	r7, #12
 80059ee:	46bd      	mov	sp, r7
 80059f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059f4:	4770      	bx	lr

080059f6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10ExpressionEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80059f6:	b480      	push	{r7}
 80059f8:	b083      	sub	sp, #12
 80059fa:	af00      	add	r7, sp, #0
 80059fc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	4618      	mov	r0, r3
 8005a02:	370c      	adds	r7, #12
 8005a04:	46bd      	mov	sp, r7
 8005a06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a0a:	4770      	bx	lr

08005a0c <_ZNRSt8__detail9__variant14_UninitializedIP10ExpressionLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8005a0c:	b480      	push	{r7}
 8005a0e:	b083      	sub	sp, #12
 8005a10:	af00      	add	r7, sp, #0
 8005a12:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	4618      	mov	r0, r3
 8005a18:	370c      	adds	r7, #12
 8005a1a:	46bd      	mov	sp, r7
 8005a1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a20:	4770      	bx	lr

08005a22 <_ZNRSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8005a22:	b480      	push	{r7}
 8005a24:	b083      	sub	sp, #12
 8005a26:	af00      	add	r7, sp, #0
 8005a28:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8005a2a:	687b      	ldr	r3, [r7, #4]
 8005a2c:	4618      	mov	r0, r3
 8005a2e:	370c      	adds	r7, #12
 8005a30:	46bd      	mov	sp, r7
 8005a32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a36:	4770      	bx	lr

08005a38 <_ZNSaIP16Power_expressionED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8005a38:	b580      	push	{r7, lr}
 8005a3a:	b082      	sub	sp, #8
 8005a3c:	af00      	add	r7, sp, #0
 8005a3e:	6078      	str	r0, [r7, #4]
 8005a40:	6878      	ldr	r0, [r7, #4]
 8005a42:	f000 f9da 	bl	8005dfa <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionED1Ev>
 8005a46:	687b      	ldr	r3, [r7, #4]
 8005a48:	4618      	mov	r0, r3
 8005a4a:	3708      	adds	r7, #8
 8005a4c:	46bd      	mov	sp, r7
 8005a4e:	bd80      	pop	{r7, pc}

08005a50 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8005a50:	b580      	push	{r7, lr}
 8005a52:	b084      	sub	sp, #16
 8005a54:	af00      	add	r7, sp, #0
 8005a56:	60f8      	str	r0, [r7, #12]
 8005a58:	60b9      	str	r1, [r7, #8]
 8005a5a:	607a      	str	r2, [r7, #4]
	if (__p)
 8005a5c:	68bb      	ldr	r3, [r7, #8]
 8005a5e:	2b00      	cmp	r3, #0
 8005a60:	d005      	beq.n	8005a6e <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8005a62:	68fb      	ldr	r3, [r7, #12]
 8005a64:	687a      	ldr	r2, [r7, #4]
 8005a66:	68b9      	ldr	r1, [r7, #8]
 8005a68:	4618      	mov	r0, r3
 8005a6a:	f000 f9d1 	bl	8005e10 <_ZNSt16allocator_traitsISaIP16Power_expressionEE10deallocateERS2_PS1_j>
      }
 8005a6e:	bf00      	nop
 8005a70:	3710      	adds	r7, #16
 8005a72:	46bd      	mov	sp, r7
 8005a74:	bd80      	pop	{r7, pc}

08005a76 <_ZSt8_DestroyIPP16Power_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8005a76:	b580      	push	{r7, lr}
 8005a78:	b082      	sub	sp, #8
 8005a7a:	af00      	add	r7, sp, #0
 8005a7c:	6078      	str	r0, [r7, #4]
 8005a7e:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8005a80:	6839      	ldr	r1, [r7, #0]
 8005a82:	6878      	ldr	r0, [r7, #4]
 8005a84:	f000 f9d3 	bl	8005e2e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16Power_expressionEEvT_S5_>
    }
 8005a88:	bf00      	nop
 8005a8a:	3708      	adds	r7, #8
 8005a8c:	46bd      	mov	sp, r7
 8005a8e:	bd80      	pop	{r7, pc}

08005a90 <_ZNSaI13mult_operatorED1Ev>:
 8005a90:	b580      	push	{r7, lr}
 8005a92:	b082      	sub	sp, #8
 8005a94:	af00      	add	r7, sp, #0
 8005a96:	6078      	str	r0, [r7, #4]
 8005a98:	6878      	ldr	r0, [r7, #4]
 8005a9a:	f000 f9d3 	bl	8005e44 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorED1Ev>
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	4618      	mov	r0, r3
 8005aa2:	3708      	adds	r7, #8
 8005aa4:	46bd      	mov	sp, r7
 8005aa6:	bd80      	pop	{r7, pc}

08005aa8 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 8005aa8:	b580      	push	{r7, lr}
 8005aaa:	b084      	sub	sp, #16
 8005aac:	af00      	add	r7, sp, #0
 8005aae:	60f8      	str	r0, [r7, #12]
 8005ab0:	60b9      	str	r1, [r7, #8]
 8005ab2:	607a      	str	r2, [r7, #4]
	if (__p)
 8005ab4:	68bb      	ldr	r3, [r7, #8]
 8005ab6:	2b00      	cmp	r3, #0
 8005ab8:	d005      	beq.n	8005ac6 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8005aba:	68fb      	ldr	r3, [r7, #12]
 8005abc:	687a      	ldr	r2, [r7, #4]
 8005abe:	68b9      	ldr	r1, [r7, #8]
 8005ac0:	4618      	mov	r0, r3
 8005ac2:	f000 f9ca 	bl	8005e5a <_ZNSt16allocator_traitsISaI13mult_operatorEE10deallocateERS1_PS0_j>
      }
 8005ac6:	bf00      	nop
 8005ac8:	3710      	adds	r7, #16
 8005aca:	46bd      	mov	sp, r7
 8005acc:	bd80      	pop	{r7, pc}

08005ace <_ZSt8_DestroyIP13mult_operatorEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8005ace:	b580      	push	{r7, lr}
 8005ad0:	b082      	sub	sp, #8
 8005ad2:	af00      	add	r7, sp, #0
 8005ad4:	6078      	str	r0, [r7, #4]
 8005ad6:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8005ad8:	6839      	ldr	r1, [r7, #0]
 8005ada:	6878      	ldr	r0, [r7, #4]
 8005adc:	f000 f9cc 	bl	8005e78 <_ZNSt12_Destroy_auxILb1EE9__destroyIP13mult_operatorEEvT_S4_>
    }
 8005ae0:	bf00      	nop
 8005ae2:	3708      	adds	r7, #8
 8005ae4:	46bd      	mov	sp, r7
 8005ae6:	bd80      	pop	{r7, pc}

08005ae8 <_ZNSaIP19Multiply_expressionED1Ev>:
 8005ae8:	b580      	push	{r7, lr}
 8005aea:	b082      	sub	sp, #8
 8005aec:	af00      	add	r7, sp, #0
 8005aee:	6078      	str	r0, [r7, #4]
 8005af0:	6878      	ldr	r0, [r7, #4]
 8005af2:	f000 f9cc 	bl	8005e8e <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionED1Ev>
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	4618      	mov	r0, r3
 8005afa:	3708      	adds	r7, #8
 8005afc:	46bd      	mov	sp, r7
 8005afe:	bd80      	pop	{r7, pc}

08005b00 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8005b00:	b580      	push	{r7, lr}
 8005b02:	b084      	sub	sp, #16
 8005b04:	af00      	add	r7, sp, #0
 8005b06:	60f8      	str	r0, [r7, #12]
 8005b08:	60b9      	str	r1, [r7, #8]
 8005b0a:	607a      	str	r2, [r7, #4]
	if (__p)
 8005b0c:	68bb      	ldr	r3, [r7, #8]
 8005b0e:	2b00      	cmp	r3, #0
 8005b10:	d005      	beq.n	8005b1e <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8005b12:	68fb      	ldr	r3, [r7, #12]
 8005b14:	687a      	ldr	r2, [r7, #4]
 8005b16:	68b9      	ldr	r1, [r7, #8]
 8005b18:	4618      	mov	r0, r3
 8005b1a:	f000 f9c3 	bl	8005ea4 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE10deallocateERS2_PS1_j>
      }
 8005b1e:	bf00      	nop
 8005b20:	3710      	adds	r7, #16
 8005b22:	46bd      	mov	sp, r7
 8005b24:	bd80      	pop	{r7, pc}

08005b26 <_ZSt8_DestroyIPP19Multiply_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8005b26:	b580      	push	{r7, lr}
 8005b28:	b082      	sub	sp, #8
 8005b2a:	af00      	add	r7, sp, #0
 8005b2c:	6078      	str	r0, [r7, #4]
 8005b2e:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8005b30:	6839      	ldr	r1, [r7, #0]
 8005b32:	6878      	ldr	r0, [r7, #4]
 8005b34:	f000 f9c5 	bl	8005ec2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP19Multiply_expressionEEvT_S5_>
    }
 8005b38:	bf00      	nop
 8005b3a:	3708      	adds	r7, #8
 8005b3c:	46bd      	mov	sp, r7
 8005b3e:	bd80      	pop	{r7, pc}

08005b40 <_ZNSaI12sum_operatorED1Ev>:
 8005b40:	b580      	push	{r7, lr}
 8005b42:	b082      	sub	sp, #8
 8005b44:	af00      	add	r7, sp, #0
 8005b46:	6078      	str	r0, [r7, #4]
 8005b48:	6878      	ldr	r0, [r7, #4]
 8005b4a:	f000 f9c5 	bl	8005ed8 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorED1Ev>
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	4618      	mov	r0, r3
 8005b52:	3708      	adds	r7, #8
 8005b54:	46bd      	mov	sp, r7
 8005b56:	bd80      	pop	{r7, pc}

08005b58 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 8005b58:	b580      	push	{r7, lr}
 8005b5a:	b084      	sub	sp, #16
 8005b5c:	af00      	add	r7, sp, #0
 8005b5e:	60f8      	str	r0, [r7, #12]
 8005b60:	60b9      	str	r1, [r7, #8]
 8005b62:	607a      	str	r2, [r7, #4]
	if (__p)
 8005b64:	68bb      	ldr	r3, [r7, #8]
 8005b66:	2b00      	cmp	r3, #0
 8005b68:	d005      	beq.n	8005b76 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8005b6a:	68fb      	ldr	r3, [r7, #12]
 8005b6c:	687a      	ldr	r2, [r7, #4]
 8005b6e:	68b9      	ldr	r1, [r7, #8]
 8005b70:	4618      	mov	r0, r3
 8005b72:	f000 f9bc 	bl	8005eee <_ZNSt16allocator_traitsISaI12sum_operatorEE10deallocateERS1_PS0_j>
      }
 8005b76:	bf00      	nop
 8005b78:	3710      	adds	r7, #16
 8005b7a:	46bd      	mov	sp, r7
 8005b7c:	bd80      	pop	{r7, pc}

08005b7e <_ZSt8_DestroyIP12sum_operatorEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8005b7e:	b580      	push	{r7, lr}
 8005b80:	b082      	sub	sp, #8
 8005b82:	af00      	add	r7, sp, #0
 8005b84:	6078      	str	r0, [r7, #4]
 8005b86:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8005b88:	6839      	ldr	r1, [r7, #0]
 8005b8a:	6878      	ldr	r0, [r7, #4]
 8005b8c:	f000 f9be 	bl	8005f0c <_ZNSt12_Destroy_auxILb1EE9__destroyIP12sum_operatorEEvT_S4_>
    }
 8005b90:	bf00      	nop
 8005b92:	3708      	adds	r7, #8
 8005b94:	46bd      	mov	sp, r7
 8005b96:	bd80      	pop	{r7, pc}

08005b98 <_ZNSaIP18Compare_expressionED1Ev>:
 8005b98:	b580      	push	{r7, lr}
 8005b9a:	b082      	sub	sp, #8
 8005b9c:	af00      	add	r7, sp, #0
 8005b9e:	6078      	str	r0, [r7, #4]
 8005ba0:	6878      	ldr	r0, [r7, #4]
 8005ba2:	f000 f9be 	bl	8005f22 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionED1Ev>
 8005ba6:	687b      	ldr	r3, [r7, #4]
 8005ba8:	4618      	mov	r0, r3
 8005baa:	3708      	adds	r7, #8
 8005bac:	46bd      	mov	sp, r7
 8005bae:	bd80      	pop	{r7, pc}

08005bb0 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8005bb0:	b580      	push	{r7, lr}
 8005bb2:	b084      	sub	sp, #16
 8005bb4:	af00      	add	r7, sp, #0
 8005bb6:	60f8      	str	r0, [r7, #12]
 8005bb8:	60b9      	str	r1, [r7, #8]
 8005bba:	607a      	str	r2, [r7, #4]
	if (__p)
 8005bbc:	68bb      	ldr	r3, [r7, #8]
 8005bbe:	2b00      	cmp	r3, #0
 8005bc0:	d005      	beq.n	8005bce <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8005bc2:	68fb      	ldr	r3, [r7, #12]
 8005bc4:	687a      	ldr	r2, [r7, #4]
 8005bc6:	68b9      	ldr	r1, [r7, #8]
 8005bc8:	4618      	mov	r0, r3
 8005bca:	f000 f9b5 	bl	8005f38 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE10deallocateERS2_PS1_j>
      }
 8005bce:	bf00      	nop
 8005bd0:	3710      	adds	r7, #16
 8005bd2:	46bd      	mov	sp, r7
 8005bd4:	bd80      	pop	{r7, pc}

08005bd6 <_ZSt8_DestroyIPP18Compare_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8005bd6:	b580      	push	{r7, lr}
 8005bd8:	b082      	sub	sp, #8
 8005bda:	af00      	add	r7, sp, #0
 8005bdc:	6078      	str	r0, [r7, #4]
 8005bde:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8005be0:	6839      	ldr	r1, [r7, #0]
 8005be2:	6878      	ldr	r0, [r7, #4]
 8005be4:	f000 f9b7 	bl	8005f56 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18Compare_expressionEEvT_S5_>
    }
 8005be8:	bf00      	nop
 8005bea:	3708      	adds	r7, #8
 8005bec:	46bd      	mov	sp, r7
 8005bee:	bd80      	pop	{r7, pc}

08005bf0 <_ZNSaIP14And_expressionED1Ev>:
 8005bf0:	b580      	push	{r7, lr}
 8005bf2:	b082      	sub	sp, #8
 8005bf4:	af00      	add	r7, sp, #0
 8005bf6:	6078      	str	r0, [r7, #4]
 8005bf8:	6878      	ldr	r0, [r7, #4]
 8005bfa:	f000 f9b7 	bl	8005f6c <_ZN9__gnu_cxx13new_allocatorIP14And_expressionED1Ev>
 8005bfe:	687b      	ldr	r3, [r7, #4]
 8005c00:	4618      	mov	r0, r3
 8005c02:	3708      	adds	r7, #8
 8005c04:	46bd      	mov	sp, r7
 8005c06:	bd80      	pop	{r7, pc}

08005c08 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8005c08:	b580      	push	{r7, lr}
 8005c0a:	b084      	sub	sp, #16
 8005c0c:	af00      	add	r7, sp, #0
 8005c0e:	60f8      	str	r0, [r7, #12]
 8005c10:	60b9      	str	r1, [r7, #8]
 8005c12:	607a      	str	r2, [r7, #4]
	if (__p)
 8005c14:	68bb      	ldr	r3, [r7, #8]
 8005c16:	2b00      	cmp	r3, #0
 8005c18:	d005      	beq.n	8005c26 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8005c1a:	68fb      	ldr	r3, [r7, #12]
 8005c1c:	687a      	ldr	r2, [r7, #4]
 8005c1e:	68b9      	ldr	r1, [r7, #8]
 8005c20:	4618      	mov	r0, r3
 8005c22:	f000 f9ae 	bl	8005f82 <_ZNSt16allocator_traitsISaIP14And_expressionEE10deallocateERS2_PS1_j>
      }
 8005c26:	bf00      	nop
 8005c28:	3710      	adds	r7, #16
 8005c2a:	46bd      	mov	sp, r7
 8005c2c:	bd80      	pop	{r7, pc}

08005c2e <_ZSt8_DestroyIPP14And_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8005c2e:	b580      	push	{r7, lr}
 8005c30:	b082      	sub	sp, #8
 8005c32:	af00      	add	r7, sp, #0
 8005c34:	6078      	str	r0, [r7, #4]
 8005c36:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8005c38:	6839      	ldr	r1, [r7, #0]
 8005c3a:	6878      	ldr	r0, [r7, #4]
 8005c3c:	f000 f9b0 	bl	8005fa0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP14And_expressionEEvT_S5_>
    }
 8005c40:	bf00      	nop
 8005c42:	3708      	adds	r7, #8
 8005c44:	46bd      	mov	sp, r7
 8005c46:	bd80      	pop	{r7, pc}

08005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005c48:	b480      	push	{r7}
 8005c4a:	b083      	sub	sp, #12
 8005c4c:	af00      	add	r7, sp, #0
 8005c4e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005c50:	687b      	ldr	r3, [r7, #4]
 8005c52:	4618      	mov	r0, r3
 8005c54:	370c      	adds	r7, #12
 8005c56:	46bd      	mov	sp, r7
 8005c58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c5c:	4770      	bx	lr

08005c5e <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8005c5e:	b480      	push	{r7}
 8005c60:	b083      	sub	sp, #12
 8005c62:	af00      	add	r7, sp, #0
 8005c64:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8005c66:	687b      	ldr	r3, [r7, #4]
 8005c68:	4618      	mov	r0, r3
 8005c6a:	370c      	adds	r7, #12
 8005c6c:	46bd      	mov	sp, r7
 8005c6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c72:	4770      	bx	lr

08005c74 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    { return (*std::forward<_Tp>(__t)).*__f; }

  /// Invoke a callable object.
  template<typename _Callable, typename... _Args>
    constexpr typename __invoke_result<_Callable, _Args...>::type
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005c74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c76:	b083      	sub	sp, #12
 8005c78:	af00      	add	r7, sp, #0
 8005c7a:	6078      	str	r0, [r7, #4]
 8005c7c:	6039      	str	r1, [r7, #0]
    noexcept(__is_nothrow_invocable<_Callable, _Args...>::value)
    {
      using __result = __invoke_result<_Callable, _Args...>;
      using __type = typename __result::type;
      using __tag = typename __result::__invoke_type;
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005c7e:	6878      	ldr	r0, [r7, #4]
 8005c80:	f000 f8b0 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005c84:	4604      	mov	r4, r0
 8005c86:	6838      	ldr	r0, [r7, #0]
 8005c88:	f000 f995 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8005c8c:	4603      	mov	r3, r0
 8005c8e:	461a      	mov	r2, r3
 8005c90:	4621      	mov	r1, r4
 8005c92:	4628      	mov	r0, r5
 8005c94:	f000 f99a 	bl	8005fcc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005c98:	4633      	mov	r3, r6
    }
 8005c9a:	4618      	mov	r0, r3
 8005c9c:	370c      	adds	r7, #12
 8005c9e:	46bd      	mov	sp, r7
 8005ca0:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005ca2 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8005ca2:	b480      	push	{r7}
 8005ca4:	b083      	sub	sp, #12
 8005ca6:	af00      	add	r7, sp, #0
 8005ca8:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8005caa:	687b      	ldr	r3, [r7, #4]
 8005cac:	4618      	mov	r0, r3
 8005cae:	370c      	adds	r7, #12
 8005cb0:	46bd      	mov	sp, r7
 8005cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cb6:	4770      	bx	lr

08005cb8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005cb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005cba:	b083      	sub	sp, #12
 8005cbc:	af00      	add	r7, sp, #0
 8005cbe:	6078      	str	r0, [r7, #4]
 8005cc0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005cc2:	6878      	ldr	r0, [r7, #4]
 8005cc4:	f000 f88e 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005cc8:	4604      	mov	r4, r0
 8005cca:	6838      	ldr	r0, [r7, #0]
 8005ccc:	f000 f995 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8005cd0:	4603      	mov	r3, r0
 8005cd2:	461a      	mov	r2, r3
 8005cd4:	4621      	mov	r1, r4
 8005cd6:	4628      	mov	r0, r5
 8005cd8:	f000 f99a 	bl	8006010 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005cdc:	4633      	mov	r3, r6
    }
 8005cde:	4618      	mov	r0, r3
 8005ce0:	370c      	adds	r7, #12
 8005ce2:	46bd      	mov	sp, r7
 8005ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005ce6 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8005ce6:	b480      	push	{r7}
 8005ce8:	b083      	sub	sp, #12
 8005cea:	af00      	add	r7, sp, #0
 8005cec:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8005cee:	687b      	ldr	r3, [r7, #4]
 8005cf0:	4618      	mov	r0, r3
 8005cf2:	370c      	adds	r7, #12
 8005cf4:	46bd      	mov	sp, r7
 8005cf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cfa:	4770      	bx	lr

08005cfc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005cfe:	b083      	sub	sp, #12
 8005d00:	af00      	add	r7, sp, #0
 8005d02:	6078      	str	r0, [r7, #4]
 8005d04:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005d06:	6878      	ldr	r0, [r7, #4]
 8005d08:	f000 f86c 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005d0c:	4604      	mov	r4, r0
 8005d0e:	6838      	ldr	r0, [r7, #0]
 8005d10:	f000 f995 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8005d14:	4603      	mov	r3, r0
 8005d16:	461a      	mov	r2, r3
 8005d18:	4621      	mov	r1, r4
 8005d1a:	4628      	mov	r0, r5
 8005d1c:	f000 f99a 	bl	8006054 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005d20:	4633      	mov	r3, r6
    }
 8005d22:	4618      	mov	r0, r3
 8005d24:	370c      	adds	r7, #12
 8005d26:	46bd      	mov	sp, r7
 8005d28:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005d2a <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8005d2a:	b580      	push	{r7, lr}
 8005d2c:	b082      	sub	sp, #8
 8005d2e:	af00      	add	r7, sp, #0
 8005d30:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8005d32:	687b      	ldr	r3, [r7, #4]
 8005d34:	4618      	mov	r0, r3
 8005d36:	f000 f9a4 	bl	8006082 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 8005d3a:	4603      	mov	r3, r0
 8005d3c:	4618      	mov	r0, r3
 8005d3e:	3708      	adds	r7, #8
 8005d40:	46bd      	mov	sp, r7
 8005d42:	bd80      	pop	{r7, pc}

08005d44 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005d44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d46:	b083      	sub	sp, #12
 8005d48:	af00      	add	r7, sp, #0
 8005d4a:	6078      	str	r0, [r7, #4]
 8005d4c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005d4e:	6878      	ldr	r0, [r7, #4]
 8005d50:	f000 f848 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005d54:	4604      	mov	r4, r0
 8005d56:	6838      	ldr	r0, [r7, #0]
 8005d58:	f000 f99f 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8005d5c:	4603      	mov	r3, r0
 8005d5e:	461a      	mov	r2, r3
 8005d60:	4621      	mov	r1, r4
 8005d62:	4628      	mov	r0, r5
 8005d64:	f000 f9a4 	bl	80060b0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005d68:	4633      	mov	r3, r6
    }
 8005d6a:	4618      	mov	r0, r3
 8005d6c:	370c      	adds	r7, #12
 8005d6e:	46bd      	mov	sp, r7
 8005d70:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005d72 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSA_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005d72:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d74:	b083      	sub	sp, #12
 8005d76:	af00      	add	r7, sp, #0
 8005d78:	6078      	str	r0, [r7, #4]
 8005d7a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005d7c:	6878      	ldr	r0, [r7, #4]
 8005d7e:	f000 f831 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005d82:	4604      	mov	r4, r0
 8005d84:	6838      	ldr	r0, [r7, #0]
 8005d86:	f000 f9aa 	bl	80060de <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>
 8005d8a:	4603      	mov	r3, r0
 8005d8c:	461a      	mov	r2, r3
 8005d8e:	4621      	mov	r1, r4
 8005d90:	4628      	mov	r0, r5
 8005d92:	f000 f9af 	bl	80060f4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSB_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005d96:	4633      	mov	r3, r6
    }
 8005d98:	4618      	mov	r0, r3
 8005d9a:	370c      	adds	r7, #12
 8005d9c:	46bd      	mov	sp, r7
 8005d9e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005da0 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005da0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005da2:	b083      	sub	sp, #12
 8005da4:	af00      	add	r7, sp, #0
 8005da6:	6078      	str	r0, [r7, #4]
 8005da8:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005daa:	6878      	ldr	r0, [r7, #4]
 8005dac:	f000 f81a 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005db0:	4604      	mov	r4, r0
 8005db2:	6838      	ldr	r0, [r7, #0]
 8005db4:	f000 f9b5 	bl	8006122 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>
 8005db8:	4603      	mov	r3, r0
 8005dba:	461a      	mov	r2, r3
 8005dbc:	4621      	mov	r1, r4
 8005dbe:	4628      	mov	r0, r5
 8005dc0:	f000 f9ba 	bl	8006138 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005dc4:	4633      	mov	r3, r6
    }
 8005dc6:	4618      	mov	r0, r3
 8005dc8:	370c      	adds	r7, #12
 8005dca:	46bd      	mov	sp, r7
 8005dcc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005dce <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8005dce:	b480      	push	{r7}
 8005dd0:	b083      	sub	sp, #12
 8005dd2:	af00      	add	r7, sp, #0
 8005dd4:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8005dd6:	687b      	ldr	r3, [r7, #4]
 8005dd8:	4618      	mov	r0, r3
 8005dda:	370c      	adds	r7, #12
 8005ddc:	46bd      	mov	sp, r7
 8005dde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005de2:	4770      	bx	lr

08005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005de4:	b480      	push	{r7}
 8005de6:	b083      	sub	sp, #12
 8005de8:	af00      	add	r7, sp, #0
 8005dea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005dec:	687b      	ldr	r3, [r7, #4]
 8005dee:	4618      	mov	r0, r3
 8005df0:	370c      	adds	r7, #12
 8005df2:	46bd      	mov	sp, r7
 8005df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005df8:	4770      	bx	lr

08005dfa <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8005dfa:	b480      	push	{r7}
 8005dfc:	b083      	sub	sp, #12
 8005dfe:	af00      	add	r7, sp, #0
 8005e00:	6078      	str	r0, [r7, #4]
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	4618      	mov	r0, r3
 8005e06:	370c      	adds	r7, #12
 8005e08:	46bd      	mov	sp, r7
 8005e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e0e:	4770      	bx	lr

08005e10 <_ZNSt16allocator_traitsISaIP16Power_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8005e10:	b580      	push	{r7, lr}
 8005e12:	b084      	sub	sp, #16
 8005e14:	af00      	add	r7, sp, #0
 8005e16:	60f8      	str	r0, [r7, #12]
 8005e18:	60b9      	str	r1, [r7, #8]
 8005e1a:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8005e1c:	687a      	ldr	r2, [r7, #4]
 8005e1e:	68b9      	ldr	r1, [r7, #8]
 8005e20:	68f8      	ldr	r0, [r7, #12]
 8005e22:	f000 f9a0 	bl	8006166 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE10deallocateEPS2_j>
 8005e26:	bf00      	nop
 8005e28:	3710      	adds	r7, #16
 8005e2a:	46bd      	mov	sp, r7
 8005e2c:	bd80      	pop	{r7, pc}

08005e2e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16Power_expressionEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 8005e2e:	b480      	push	{r7}
 8005e30:	b083      	sub	sp, #12
 8005e32:	af00      	add	r7, sp, #0
 8005e34:	6078      	str	r0, [r7, #4]
 8005e36:	6039      	str	r1, [r7, #0]
 8005e38:	bf00      	nop
 8005e3a:	370c      	adds	r7, #12
 8005e3c:	46bd      	mov	sp, r7
 8005e3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e42:	4770      	bx	lr

08005e44 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorED1Ev>:
 8005e44:	b480      	push	{r7}
 8005e46:	b083      	sub	sp, #12
 8005e48:	af00      	add	r7, sp, #0
 8005e4a:	6078      	str	r0, [r7, #4]
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	4618      	mov	r0, r3
 8005e50:	370c      	adds	r7, #12
 8005e52:	46bd      	mov	sp, r7
 8005e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e58:	4770      	bx	lr

08005e5a <_ZNSt16allocator_traitsISaI13mult_operatorEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8005e5a:	b580      	push	{r7, lr}
 8005e5c:	b084      	sub	sp, #16
 8005e5e:	af00      	add	r7, sp, #0
 8005e60:	60f8      	str	r0, [r7, #12]
 8005e62:	60b9      	str	r1, [r7, #8]
 8005e64:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8005e66:	687a      	ldr	r2, [r7, #4]
 8005e68:	68b9      	ldr	r1, [r7, #8]
 8005e6a:	68f8      	ldr	r0, [r7, #12]
 8005e6c:	f000 f987 	bl	800617e <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE10deallocateEPS1_j>
 8005e70:	bf00      	nop
 8005e72:	3710      	adds	r7, #16
 8005e74:	46bd      	mov	sp, r7
 8005e76:	bd80      	pop	{r7, pc}

08005e78 <_ZNSt12_Destroy_auxILb1EE9__destroyIP13mult_operatorEEvT_S4_>:
 8005e78:	b480      	push	{r7}
 8005e7a:	b083      	sub	sp, #12
 8005e7c:	af00      	add	r7, sp, #0
 8005e7e:	6078      	str	r0, [r7, #4]
 8005e80:	6039      	str	r1, [r7, #0]
 8005e82:	bf00      	nop
 8005e84:	370c      	adds	r7, #12
 8005e86:	46bd      	mov	sp, r7
 8005e88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e8c:	4770      	bx	lr

08005e8e <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionED1Ev>:
 8005e8e:	b480      	push	{r7}
 8005e90:	b083      	sub	sp, #12
 8005e92:	af00      	add	r7, sp, #0
 8005e94:	6078      	str	r0, [r7, #4]
 8005e96:	687b      	ldr	r3, [r7, #4]
 8005e98:	4618      	mov	r0, r3
 8005e9a:	370c      	adds	r7, #12
 8005e9c:	46bd      	mov	sp, r7
 8005e9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ea2:	4770      	bx	lr

08005ea4 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8005ea4:	b580      	push	{r7, lr}
 8005ea6:	b084      	sub	sp, #16
 8005ea8:	af00      	add	r7, sp, #0
 8005eaa:	60f8      	str	r0, [r7, #12]
 8005eac:	60b9      	str	r1, [r7, #8]
 8005eae:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8005eb0:	687a      	ldr	r2, [r7, #4]
 8005eb2:	68b9      	ldr	r1, [r7, #8]
 8005eb4:	68f8      	ldr	r0, [r7, #12]
 8005eb6:	f000 f96e 	bl	8006196 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE10deallocateEPS2_j>
 8005eba:	bf00      	nop
 8005ebc:	3710      	adds	r7, #16
 8005ebe:	46bd      	mov	sp, r7
 8005ec0:	bd80      	pop	{r7, pc}

08005ec2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP19Multiply_expressionEEvT_S5_>:
 8005ec2:	b480      	push	{r7}
 8005ec4:	b083      	sub	sp, #12
 8005ec6:	af00      	add	r7, sp, #0
 8005ec8:	6078      	str	r0, [r7, #4]
 8005eca:	6039      	str	r1, [r7, #0]
 8005ecc:	bf00      	nop
 8005ece:	370c      	adds	r7, #12
 8005ed0:	46bd      	mov	sp, r7
 8005ed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ed6:	4770      	bx	lr

08005ed8 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorED1Ev>:
 8005ed8:	b480      	push	{r7}
 8005eda:	b083      	sub	sp, #12
 8005edc:	af00      	add	r7, sp, #0
 8005ede:	6078      	str	r0, [r7, #4]
 8005ee0:	687b      	ldr	r3, [r7, #4]
 8005ee2:	4618      	mov	r0, r3
 8005ee4:	370c      	adds	r7, #12
 8005ee6:	46bd      	mov	sp, r7
 8005ee8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005eec:	4770      	bx	lr

08005eee <_ZNSt16allocator_traitsISaI12sum_operatorEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8005eee:	b580      	push	{r7, lr}
 8005ef0:	b084      	sub	sp, #16
 8005ef2:	af00      	add	r7, sp, #0
 8005ef4:	60f8      	str	r0, [r7, #12]
 8005ef6:	60b9      	str	r1, [r7, #8]
 8005ef8:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8005efa:	687a      	ldr	r2, [r7, #4]
 8005efc:	68b9      	ldr	r1, [r7, #8]
 8005efe:	68f8      	ldr	r0, [r7, #12]
 8005f00:	f000 f955 	bl	80061ae <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE10deallocateEPS1_j>
 8005f04:	bf00      	nop
 8005f06:	3710      	adds	r7, #16
 8005f08:	46bd      	mov	sp, r7
 8005f0a:	bd80      	pop	{r7, pc}

08005f0c <_ZNSt12_Destroy_auxILb1EE9__destroyIP12sum_operatorEEvT_S4_>:
 8005f0c:	b480      	push	{r7}
 8005f0e:	b083      	sub	sp, #12
 8005f10:	af00      	add	r7, sp, #0
 8005f12:	6078      	str	r0, [r7, #4]
 8005f14:	6039      	str	r1, [r7, #0]
 8005f16:	bf00      	nop
 8005f18:	370c      	adds	r7, #12
 8005f1a:	46bd      	mov	sp, r7
 8005f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f20:	4770      	bx	lr

08005f22 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionED1Ev>:
 8005f22:	b480      	push	{r7}
 8005f24:	b083      	sub	sp, #12
 8005f26:	af00      	add	r7, sp, #0
 8005f28:	6078      	str	r0, [r7, #4]
 8005f2a:	687b      	ldr	r3, [r7, #4]
 8005f2c:	4618      	mov	r0, r3
 8005f2e:	370c      	adds	r7, #12
 8005f30:	46bd      	mov	sp, r7
 8005f32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f36:	4770      	bx	lr

08005f38 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8005f38:	b580      	push	{r7, lr}
 8005f3a:	b084      	sub	sp, #16
 8005f3c:	af00      	add	r7, sp, #0
 8005f3e:	60f8      	str	r0, [r7, #12]
 8005f40:	60b9      	str	r1, [r7, #8]
 8005f42:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8005f44:	687a      	ldr	r2, [r7, #4]
 8005f46:	68b9      	ldr	r1, [r7, #8]
 8005f48:	68f8      	ldr	r0, [r7, #12]
 8005f4a:	f000 f93c 	bl	80061c6 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE10deallocateEPS2_j>
 8005f4e:	bf00      	nop
 8005f50:	3710      	adds	r7, #16
 8005f52:	46bd      	mov	sp, r7
 8005f54:	bd80      	pop	{r7, pc}

08005f56 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18Compare_expressionEEvT_S5_>:
 8005f56:	b480      	push	{r7}
 8005f58:	b083      	sub	sp, #12
 8005f5a:	af00      	add	r7, sp, #0
 8005f5c:	6078      	str	r0, [r7, #4]
 8005f5e:	6039      	str	r1, [r7, #0]
 8005f60:	bf00      	nop
 8005f62:	370c      	adds	r7, #12
 8005f64:	46bd      	mov	sp, r7
 8005f66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f6a:	4770      	bx	lr

08005f6c <_ZN9__gnu_cxx13new_allocatorIP14And_expressionED1Ev>:
 8005f6c:	b480      	push	{r7}
 8005f6e:	b083      	sub	sp, #12
 8005f70:	af00      	add	r7, sp, #0
 8005f72:	6078      	str	r0, [r7, #4]
 8005f74:	687b      	ldr	r3, [r7, #4]
 8005f76:	4618      	mov	r0, r3
 8005f78:	370c      	adds	r7, #12
 8005f7a:	46bd      	mov	sp, r7
 8005f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f80:	4770      	bx	lr

08005f82 <_ZNSt16allocator_traitsISaIP14And_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8005f82:	b580      	push	{r7, lr}
 8005f84:	b084      	sub	sp, #16
 8005f86:	af00      	add	r7, sp, #0
 8005f88:	60f8      	str	r0, [r7, #12]
 8005f8a:	60b9      	str	r1, [r7, #8]
 8005f8c:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8005f8e:	687a      	ldr	r2, [r7, #4]
 8005f90:	68b9      	ldr	r1, [r7, #8]
 8005f92:	68f8      	ldr	r0, [r7, #12]
 8005f94:	f000 f923 	bl	80061de <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE10deallocateEPS2_j>
 8005f98:	bf00      	nop
 8005f9a:	3710      	adds	r7, #16
 8005f9c:	46bd      	mov	sp, r7
 8005f9e:	bd80      	pop	{r7, pc}

08005fa0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP14And_expressionEEvT_S5_>:
 8005fa0:	b480      	push	{r7}
 8005fa2:	b083      	sub	sp, #12
 8005fa4:	af00      	add	r7, sp, #0
 8005fa6:	6078      	str	r0, [r7, #4]
 8005fa8:	6039      	str	r1, [r7, #0]
 8005faa:	bf00      	nop
 8005fac:	370c      	adds	r7, #12
 8005fae:	46bd      	mov	sp, r7
 8005fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fb4:	4770      	bx	lr

08005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005fb6:	b480      	push	{r7}
 8005fb8:	b083      	sub	sp, #12
 8005fba:	af00      	add	r7, sp, #0
 8005fbc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005fbe:	687b      	ldr	r3, [r7, #4]
 8005fc0:	4618      	mov	r0, r3
 8005fc2:	370c      	adds	r7, #12
 8005fc4:	46bd      	mov	sp, r7
 8005fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fca:	4770      	bx	lr

08005fcc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005fcc:	b5b0      	push	{r4, r5, r7, lr}
 8005fce:	b084      	sub	sp, #16
 8005fd0:	af00      	add	r7, sp, #0
 8005fd2:	7338      	strb	r0, [r7, #12]
 8005fd4:	60b9      	str	r1, [r7, #8]
 8005fd6:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005fd8:	68b8      	ldr	r0, [r7, #8]
 8005fda:	f7ff ff03 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005fde:	4604      	mov	r4, r0
 8005fe0:	6878      	ldr	r0, [r7, #4]
 8005fe2:	f7ff ffe8 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8005fe6:	4603      	mov	r3, r0
 8005fe8:	4619      	mov	r1, r3
 8005fea:	4620      	mov	r0, r4
 8005fec:	f000 f903 	bl	80061f6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>
 8005ff0:	462b      	mov	r3, r5
 8005ff2:	4618      	mov	r0, r3
 8005ff4:	3710      	adds	r7, #16
 8005ff6:	46bd      	mov	sp, r7
 8005ff8:	bdb0      	pop	{r4, r5, r7, pc}

08005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005ffa:	b480      	push	{r7}
 8005ffc:	b083      	sub	sp, #12
 8005ffe:	af00      	add	r7, sp, #0
 8006000:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8006002:	687b      	ldr	r3, [r7, #4]
 8006004:	4618      	mov	r0, r3
 8006006:	370c      	adds	r7, #12
 8006008:	46bd      	mov	sp, r7
 800600a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800600e:	4770      	bx	lr

08006010 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006010:	b5b0      	push	{r4, r5, r7, lr}
 8006012:	b084      	sub	sp, #16
 8006014:	af00      	add	r7, sp, #0
 8006016:	7338      	strb	r0, [r7, #12]
 8006018:	60b9      	str	r1, [r7, #8]
 800601a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800601c:	68b8      	ldr	r0, [r7, #8]
 800601e:	f7ff fee1 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006022:	4604      	mov	r4, r0
 8006024:	6878      	ldr	r0, [r7, #4]
 8006026:	f7ff ffe8 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800602a:	4603      	mov	r3, r0
 800602c:	4619      	mov	r1, r3
 800602e:	4620      	mov	r0, r4
 8006030:	f000 f8f2 	bl	8006218 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>
 8006034:	462b      	mov	r3, r5
 8006036:	4618      	mov	r0, r3
 8006038:	3710      	adds	r7, #16
 800603a:	46bd      	mov	sp, r7
 800603c:	bdb0      	pop	{r4, r5, r7, pc}

0800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800603e:	b480      	push	{r7}
 8006040:	b083      	sub	sp, #12
 8006042:	af00      	add	r7, sp, #0
 8006044:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8006046:	687b      	ldr	r3, [r7, #4]
 8006048:	4618      	mov	r0, r3
 800604a:	370c      	adds	r7, #12
 800604c:	46bd      	mov	sp, r7
 800604e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006052:	4770      	bx	lr

08006054 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006054:	b5b0      	push	{r4, r5, r7, lr}
 8006056:	b084      	sub	sp, #16
 8006058:	af00      	add	r7, sp, #0
 800605a:	7338      	strb	r0, [r7, #12]
 800605c:	60b9      	str	r1, [r7, #8]
 800605e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006060:	68b8      	ldr	r0, [r7, #8]
 8006062:	f7ff febf 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006066:	4604      	mov	r4, r0
 8006068:	6878      	ldr	r0, [r7, #4]
 800606a:	f7ff ffe8 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800606e:	4603      	mov	r3, r0
 8006070:	4619      	mov	r1, r3
 8006072:	4620      	mov	r0, r4
 8006074:	f000 f8e1 	bl	800623a <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>
 8006078:	462b      	mov	r3, r5
 800607a:	4618      	mov	r0, r3
 800607c:	3710      	adds	r7, #16
 800607e:	46bd      	mov	sp, r7
 8006080:	bdb0      	pop	{r4, r5, r7, pc}

08006082 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 8006082:	b580      	push	{r7, lr}
 8006084:	b082      	sub	sp, #8
 8006086:	af00      	add	r7, sp, #0
 8006088:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800608a:	6878      	ldr	r0, [r7, #4]
 800608c:	f000 f8e6 	bl	800625c <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
 8006090:	4603      	mov	r3, r0
 8006092:	4618      	mov	r0, r3
 8006094:	3708      	adds	r7, #8
 8006096:	46bd      	mov	sp, r7
 8006098:	bd80      	pop	{r7, pc}

0800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800609a:	b480      	push	{r7}
 800609c:	b083      	sub	sp, #12
 800609e:	af00      	add	r7, sp, #0
 80060a0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80060a2:	687b      	ldr	r3, [r7, #4]
 80060a4:	4618      	mov	r0, r3
 80060a6:	370c      	adds	r7, #12
 80060a8:	46bd      	mov	sp, r7
 80060aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060ae:	4770      	bx	lr

080060b0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80060b0:	b5b0      	push	{r4, r5, r7, lr}
 80060b2:	b084      	sub	sp, #16
 80060b4:	af00      	add	r7, sp, #0
 80060b6:	7338      	strb	r0, [r7, #12]
 80060b8:	60b9      	str	r1, [r7, #8]
 80060ba:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80060bc:	68b8      	ldr	r0, [r7, #8]
 80060be:	f7ff fe91 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80060c2:	4604      	mov	r4, r0
 80060c4:	6878      	ldr	r0, [r7, #4]
 80060c6:	f7ff ffe8 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80060ca:	4603      	mov	r3, r0
 80060cc:	4619      	mov	r1, r3
 80060ce:	4620      	mov	r0, r4
 80060d0:	f000 f8cf 	bl	8006272 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>
 80060d4:	462b      	mov	r3, r5
 80060d6:	4618      	mov	r0, r3
 80060d8:	3710      	adds	r7, #16
 80060da:	46bd      	mov	sp, r7
 80060dc:	bdb0      	pop	{r4, r5, r7, pc}

080060de <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80060de:	b480      	push	{r7}
 80060e0:	b083      	sub	sp, #12
 80060e2:	af00      	add	r7, sp, #0
 80060e4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	4618      	mov	r0, r3
 80060ea:	370c      	adds	r7, #12
 80060ec:	46bd      	mov	sp, r7
 80060ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060f2:	4770      	bx	lr

080060f4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSB_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80060f4:	b5b0      	push	{r4, r5, r7, lr}
 80060f6:	b084      	sub	sp, #16
 80060f8:	af00      	add	r7, sp, #0
 80060fa:	7338      	strb	r0, [r7, #12]
 80060fc:	60b9      	str	r1, [r7, #8]
 80060fe:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006100:	68b8      	ldr	r0, [r7, #8]
 8006102:	f7ff fe6f 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006106:	4604      	mov	r4, r0
 8006108:	6878      	ldr	r0, [r7, #4]
 800610a:	f7ff ffe8 	bl	80060de <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>
 800610e:	4603      	mov	r3, r0
 8006110:	4619      	mov	r1, r3
 8006112:	4620      	mov	r0, r4
 8006114:	f000 f8be 	bl	8006294 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS9_EENS0_16__variant_cookieESE_>
 8006118:	462b      	mov	r3, r5
 800611a:	4618      	mov	r0, r3
 800611c:	3710      	adds	r7, #16
 800611e:	46bd      	mov	sp, r7
 8006120:	bdb0      	pop	{r4, r5, r7, pc}

08006122 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8006122:	b480      	push	{r7}
 8006124:	b083      	sub	sp, #12
 8006126:	af00      	add	r7, sp, #0
 8006128:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800612a:	687b      	ldr	r3, [r7, #4]
 800612c:	4618      	mov	r0, r3
 800612e:	370c      	adds	r7, #12
 8006130:	46bd      	mov	sp, r7
 8006132:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006136:	4770      	bx	lr

08006138 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006138:	b5b0      	push	{r4, r5, r7, lr}
 800613a:	b084      	sub	sp, #16
 800613c:	af00      	add	r7, sp, #0
 800613e:	7338      	strb	r0, [r7, #12]
 8006140:	60b9      	str	r1, [r7, #8]
 8006142:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006144:	68b8      	ldr	r0, [r7, #8]
 8006146:	f7ff fe4d 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800614a:	4604      	mov	r4, r0
 800614c:	6878      	ldr	r0, [r7, #4]
 800614e:	f7ff ffe8 	bl	8006122 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>
 8006152:	4603      	mov	r3, r0
 8006154:	4619      	mov	r1, r3
 8006156:	4620      	mov	r0, r4
 8006158:	f000 f8ad 	bl	80062b6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>
 800615c:	462b      	mov	r3, r5
 800615e:	4618      	mov	r0, r3
 8006160:	3710      	adds	r7, #16
 8006162:	46bd      	mov	sp, r7
 8006164:	bdb0      	pop	{r4, r5, r7, pc}

08006166 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8006166:	b580      	push	{r7, lr}
 8006168:	b084      	sub	sp, #16
 800616a:	af00      	add	r7, sp, #0
 800616c:	60f8      	str	r0, [r7, #12]
 800616e:	60b9      	str	r1, [r7, #8]
 8006170:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8006172:	68b8      	ldr	r0, [r7, #8]
 8006174:	f01c fd55 	bl	8022c22 <_ZdlPv>
      }
 8006178:	3710      	adds	r7, #16
 800617a:	46bd      	mov	sp, r7
 800617c:	bd80      	pop	{r7, pc}

0800617e <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800617e:	b580      	push	{r7, lr}
 8006180:	b084      	sub	sp, #16
 8006182:	af00      	add	r7, sp, #0
 8006184:	60f8      	str	r0, [r7, #12]
 8006186:	60b9      	str	r1, [r7, #8]
 8006188:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800618a:	68b8      	ldr	r0, [r7, #8]
 800618c:	f01c fd49 	bl	8022c22 <_ZdlPv>
      }
 8006190:	3710      	adds	r7, #16
 8006192:	46bd      	mov	sp, r7
 8006194:	bd80      	pop	{r7, pc}

08006196 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8006196:	b580      	push	{r7, lr}
 8006198:	b084      	sub	sp, #16
 800619a:	af00      	add	r7, sp, #0
 800619c:	60f8      	str	r0, [r7, #12]
 800619e:	60b9      	str	r1, [r7, #8]
 80061a0:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80061a2:	68b8      	ldr	r0, [r7, #8]
 80061a4:	f01c fd3d 	bl	8022c22 <_ZdlPv>
      }
 80061a8:	3710      	adds	r7, #16
 80061aa:	46bd      	mov	sp, r7
 80061ac:	bd80      	pop	{r7, pc}

080061ae <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 80061ae:	b580      	push	{r7, lr}
 80061b0:	b084      	sub	sp, #16
 80061b2:	af00      	add	r7, sp, #0
 80061b4:	60f8      	str	r0, [r7, #12]
 80061b6:	60b9      	str	r1, [r7, #8]
 80061b8:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80061ba:	68b8      	ldr	r0, [r7, #8]
 80061bc:	f01c fd31 	bl	8022c22 <_ZdlPv>
      }
 80061c0:	3710      	adds	r7, #16
 80061c2:	46bd      	mov	sp, r7
 80061c4:	bd80      	pop	{r7, pc}

080061c6 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 80061c6:	b580      	push	{r7, lr}
 80061c8:	b084      	sub	sp, #16
 80061ca:	af00      	add	r7, sp, #0
 80061cc:	60f8      	str	r0, [r7, #12]
 80061ce:	60b9      	str	r1, [r7, #8]
 80061d0:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80061d2:	68b8      	ldr	r0, [r7, #8]
 80061d4:	f01c fd25 	bl	8022c22 <_ZdlPv>
      }
 80061d8:	3710      	adds	r7, #16
 80061da:	46bd      	mov	sp, r7
 80061dc:	bd80      	pop	{r7, pc}

080061de <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 80061de:	b580      	push	{r7, lr}
 80061e0:	b084      	sub	sp, #16
 80061e2:	af00      	add	r7, sp, #0
 80061e4:	60f8      	str	r0, [r7, #12]
 80061e6:	60b9      	str	r1, [r7, #8]
 80061e8:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80061ea:	68b8      	ldr	r0, [r7, #8]
 80061ec:	f01c fd19 	bl	8022c22 <_ZdlPv>
      }
 80061f0:	3710      	adds	r7, #16
 80061f2:	46bd      	mov	sp, r7
 80061f4:	bd80      	pop	{r7, pc}

080061f6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>:
	__do_visit([](auto&& __this_mem) mutable
 80061f6:	b590      	push	{r4, r7, lr}
 80061f8:	b083      	sub	sp, #12
 80061fa:	af00      	add	r7, sp, #0
 80061fc:	6078      	str	r0, [r7, #4]
 80061fe:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8006200:	6838      	ldr	r0, [r7, #0]
 8006202:	f000 f869 	bl	80062d8 <_ZSt11__addressofIbEPT_RS0_>
 8006206:	4603      	mov	r3, r0
 8006208:	4618      	mov	r0, r3
 800620a:	f000 f870 	bl	80062ee <_ZSt8_DestroyIbEvPT_>
	    return {};
 800620e:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8006210:	4618      	mov	r0, r3
 8006212:	370c      	adds	r7, #12
 8006214:	46bd      	mov	sp, r7
 8006216:	bd90      	pop	{r4, r7, pc}

08006218 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>:
 8006218:	b590      	push	{r4, r7, lr}
 800621a:	b083      	sub	sp, #12
 800621c:	af00      	add	r7, sp, #0
 800621e:	6078      	str	r0, [r7, #4]
 8006220:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8006222:	6838      	ldr	r0, [r7, #0]
 8006224:	f000 f86d 	bl	8006302 <_ZSt11__addressofIiEPT_RS0_>
 8006228:	4603      	mov	r3, r0
 800622a:	4618      	mov	r0, r3
 800622c:	f000 f874 	bl	8006318 <_ZSt8_DestroyIiEvPT_>
	    return {};
 8006230:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8006232:	4618      	mov	r0, r3
 8006234:	370c      	adds	r7, #12
 8006236:	46bd      	mov	sp, r7
 8006238:	bd90      	pop	{r4, r7, pc}

0800623a <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>:
 800623a:	b590      	push	{r4, r7, lr}
 800623c:	b083      	sub	sp, #12
 800623e:	af00      	add	r7, sp, #0
 8006240:	6078      	str	r0, [r7, #4]
 8006242:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8006244:	6838      	ldr	r0, [r7, #0]
 8006246:	f000 f871 	bl	800632c <_ZSt11__addressofIfEPT_RS0_>
 800624a:	4603      	mov	r3, r0
 800624c:	4618      	mov	r0, r3
 800624e:	f000 f878 	bl	8006342 <_ZSt8_DestroyIfEvPT_>
	    return {};
 8006252:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8006254:	4618      	mov	r0, r3
 8006256:	370c      	adds	r7, #12
 8006258:	46bd      	mov	sp, r7
 800625a:	bd90      	pop	{r4, r7, pc}

0800625c <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() noexcept
 800625c:	b480      	push	{r7}
 800625e:	b083      	sub	sp, #12
 8006260:	af00      	add	r7, sp, #0
 8006262:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	4618      	mov	r0, r3
 8006268:	370c      	adds	r7, #12
 800626a:	46bd      	mov	sp, r7
 800626c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006270:	4770      	bx	lr

08006272 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>:
 8006272:	b590      	push	{r4, r7, lr}
 8006274:	b083      	sub	sp, #12
 8006276:	af00      	add	r7, sp, #0
 8006278:	6078      	str	r0, [r7, #4]
 800627a:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800627c:	6838      	ldr	r0, [r7, #0]
 800627e:	f000 f86a 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8006282:	4603      	mov	r3, r0
 8006284:	4618      	mov	r0, r3
 8006286:	f000 f871 	bl	800636c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 800628a:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800628c:	4618      	mov	r0, r3
 800628e:	370c      	adds	r7, #12
 8006290:	46bd      	mov	sp, r7
 8006292:	bd90      	pop	{r4, r7, pc}

08006294 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS9_EENS0_16__variant_cookieESE_>:
 8006294:	b590      	push	{r4, r7, lr}
 8006296:	b083      	sub	sp, #12
 8006298:	af00      	add	r7, sp, #0
 800629a:	6078      	str	r0, [r7, #4]
 800629c:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800629e:	6838      	ldr	r0, [r7, #0]
 80062a0:	f000 f86f 	bl	8006382 <_ZSt11__addressofIP8VariableEPT_RS2_>
 80062a4:	4603      	mov	r3, r0
 80062a6:	4618      	mov	r0, r3
 80062a8:	f000 f876 	bl	8006398 <_ZSt8_DestroyIP8VariableEvPT_>
	    return {};
 80062ac:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80062ae:	4618      	mov	r0, r3
 80062b0:	370c      	adds	r7, #12
 80062b2:	46bd      	mov	sp, r7
 80062b4:	bd90      	pop	{r4, r7, pc}

080062b6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>:
 80062b6:	b590      	push	{r4, r7, lr}
 80062b8:	b083      	sub	sp, #12
 80062ba:	af00      	add	r7, sp, #0
 80062bc:	6078      	str	r0, [r7, #4]
 80062be:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80062c0:	6838      	ldr	r0, [r7, #0]
 80062c2:	f000 f873 	bl	80063ac <_ZSt11__addressofIP13Function_callEPT_RS2_>
 80062c6:	4603      	mov	r3, r0
 80062c8:	4618      	mov	r0, r3
 80062ca:	f000 f87a 	bl	80063c2 <_ZSt8_DestroyIP13Function_callEvPT_>
	    return {};
 80062ce:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80062d0:	4618      	mov	r0, r3
 80062d2:	370c      	adds	r7, #12
 80062d4:	46bd      	mov	sp, r7
 80062d6:	bd90      	pop	{r4, r7, pc}

080062d8 <_ZSt11__addressofIbEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80062d8:	b480      	push	{r7}
 80062da:	b083      	sub	sp, #12
 80062dc:	af00      	add	r7, sp, #0
 80062de:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	4618      	mov	r0, r3
 80062e4:	370c      	adds	r7, #12
 80062e6:	46bd      	mov	sp, r7
 80062e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062ec:	4770      	bx	lr

080062ee <_ZSt8_DestroyIbEvPT_>:
    _Destroy(_Tp* __pointer)
 80062ee:	b480      	push	{r7}
 80062f0:	b083      	sub	sp, #12
 80062f2:	af00      	add	r7, sp, #0
 80062f4:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80062f6:	bf00      	nop
 80062f8:	370c      	adds	r7, #12
 80062fa:	46bd      	mov	sp, r7
 80062fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006300:	4770      	bx	lr

08006302 <_ZSt11__addressofIiEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8006302:	b480      	push	{r7}
 8006304:	b083      	sub	sp, #12
 8006306:	af00      	add	r7, sp, #0
 8006308:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800630a:	687b      	ldr	r3, [r7, #4]
 800630c:	4618      	mov	r0, r3
 800630e:	370c      	adds	r7, #12
 8006310:	46bd      	mov	sp, r7
 8006312:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006316:	4770      	bx	lr

08006318 <_ZSt8_DestroyIiEvPT_>:
    _Destroy(_Tp* __pointer)
 8006318:	b480      	push	{r7}
 800631a:	b083      	sub	sp, #12
 800631c:	af00      	add	r7, sp, #0
 800631e:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8006320:	bf00      	nop
 8006322:	370c      	adds	r7, #12
 8006324:	46bd      	mov	sp, r7
 8006326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800632a:	4770      	bx	lr

0800632c <_ZSt11__addressofIfEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800632c:	b480      	push	{r7}
 800632e:	b083      	sub	sp, #12
 8006330:	af00      	add	r7, sp, #0
 8006332:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8006334:	687b      	ldr	r3, [r7, #4]
 8006336:	4618      	mov	r0, r3
 8006338:	370c      	adds	r7, #12
 800633a:	46bd      	mov	sp, r7
 800633c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006340:	4770      	bx	lr

08006342 <_ZSt8_DestroyIfEvPT_>:
    _Destroy(_Tp* __pointer)
 8006342:	b480      	push	{r7}
 8006344:	b083      	sub	sp, #12
 8006346:	af00      	add	r7, sp, #0
 8006348:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800634a:	bf00      	nop
 800634c:	370c      	adds	r7, #12
 800634e:	46bd      	mov	sp, r7
 8006350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006354:	4770      	bx	lr

08006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8006356:	b480      	push	{r7}
 8006358:	b083      	sub	sp, #12
 800635a:	af00      	add	r7, sp, #0
 800635c:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800635e:	687b      	ldr	r3, [r7, #4]
 8006360:	4618      	mov	r0, r3
 8006362:	370c      	adds	r7, #12
 8006364:	46bd      	mov	sp, r7
 8006366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800636a:	4770      	bx	lr

0800636c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>:
    _Destroy(_Tp* __pointer)
 800636c:	b580      	push	{r7, lr}
 800636e:	b082      	sub	sp, #8
 8006370:	af00      	add	r7, sp, #0
 8006372:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8006374:	6878      	ldr	r0, [r7, #4]
 8006376:	f01c fe3e 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800637a:	bf00      	nop
 800637c:	3708      	adds	r7, #8
 800637e:	46bd      	mov	sp, r7
 8006380:	bd80      	pop	{r7, pc}

08006382 <_ZSt11__addressofIP8VariableEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8006382:	b480      	push	{r7}
 8006384:	b083      	sub	sp, #12
 8006386:	af00      	add	r7, sp, #0
 8006388:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800638a:	687b      	ldr	r3, [r7, #4]
 800638c:	4618      	mov	r0, r3
 800638e:	370c      	adds	r7, #12
 8006390:	46bd      	mov	sp, r7
 8006392:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006396:	4770      	bx	lr

08006398 <_ZSt8_DestroyIP8VariableEvPT_>:
    _Destroy(_Tp* __pointer)
 8006398:	b480      	push	{r7}
 800639a:	b083      	sub	sp, #12
 800639c:	af00      	add	r7, sp, #0
 800639e:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80063a0:	bf00      	nop
 80063a2:	370c      	adds	r7, #12
 80063a4:	46bd      	mov	sp, r7
 80063a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063aa:	4770      	bx	lr

080063ac <_ZSt11__addressofIP13Function_callEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80063ac:	b480      	push	{r7}
 80063ae:	b083      	sub	sp, #12
 80063b0:	af00      	add	r7, sp, #0
 80063b2:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	4618      	mov	r0, r3
 80063b8:	370c      	adds	r7, #12
 80063ba:	46bd      	mov	sp, r7
 80063bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063c0:	4770      	bx	lr

080063c2 <_ZSt8_DestroyIP13Function_callEvPT_>:
    _Destroy(_Tp* __pointer)
 80063c2:	b480      	push	{r7}
 80063c4:	b083      	sub	sp, #12
 80063c6:	af00      	add	r7, sp, #0
 80063c8:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80063ca:	bf00      	nop
 80063cc:	370c      	adds	r7, #12
 80063ce:	46bd      	mov	sp, r7
 80063d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063d4:	4770      	bx	lr
	...

080063d8 <_Z41__static_initialization_and_destruction_0ii>:
 80063d8:	b590      	push	{r4, r7, lr}
 80063da:	b0e7      	sub	sp, #412	; 0x19c
 80063dc:	af02      	add	r7, sp, #8
 80063de:	1d3b      	adds	r3, r7, #4
 80063e0:	6018      	str	r0, [r3, #0]
 80063e2:	463b      	mov	r3, r7
 80063e4:	6019      	str	r1, [r3, #0]
 80063e6:	1d3b      	adds	r3, r7, #4
 80063e8:	681b      	ldr	r3, [r3, #0]
 80063ea:	2b01      	cmp	r3, #1
 80063ec:	f040 819d 	bne.w	800672a <_Z41__static_initialization_and_destruction_0ii+0x352>
 80063f0:	463b      	mov	r3, r7
 80063f2:	681b      	ldr	r3, [r3, #0]
 80063f4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80063f8:	4293      	cmp	r3, r2
 80063fa:	f040 8196 	bne.w	800672a <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 80063fe:	f107 0314 	add.w	r3, r7, #20
 8006402:	4618      	mov	r0, r3
 8006404:	2322      	movs	r3, #34	; 0x22
 8006406:	461a      	mov	r2, r3
 8006408:	2100      	movs	r1, #0
 800640a:	f01d ffa3 	bl	8024354 <memset>
 800640e:	f107 0314 	add.w	r3, r7, #20
 8006412:	223a      	movs	r2, #58	; 0x3a
 8006414:	701a      	strb	r2, [r3, #0]
 8006416:	f107 0314 	add.w	r3, r7, #20
 800641a:	2201      	movs	r2, #1
 800641c:	705a      	strb	r2, [r3, #1]
 800641e:	f107 0314 	add.w	r3, r7, #20
 8006422:	220a      	movs	r2, #10
 8006424:	709a      	strb	r2, [r3, #2]
 8006426:	f107 0314 	add.w	r3, r7, #20
 800642a:	220a      	movs	r2, #10
 800642c:	70da      	strb	r2, [r3, #3]
 800642e:	f107 0314 	add.w	r3, r7, #20
 8006432:	222c      	movs	r2, #44	; 0x2c
 8006434:	711a      	strb	r2, [r3, #4]
 8006436:	f107 0314 	add.w	r3, r7, #20
 800643a:	220c      	movs	r2, #12
 800643c:	715a      	strb	r2, [r3, #5]
 800643e:	f107 0314 	add.w	r3, r7, #20
 8006442:	222e      	movs	r2, #46	; 0x2e
 8006444:	719a      	strb	r2, [r3, #6]
 8006446:	f107 0314 	add.w	r3, r7, #20
 800644a:	220b      	movs	r2, #11
 800644c:	71da      	strb	r2, [r3, #7]
 800644e:	f107 0314 	add.w	r3, r7, #20
 8006452:	225b      	movs	r2, #91	; 0x5b
 8006454:	721a      	strb	r2, [r3, #8]
 8006456:	f107 0314 	add.w	r3, r7, #20
 800645a:	220d      	movs	r2, #13
 800645c:	725a      	strb	r2, [r3, #9]
 800645e:	f107 0314 	add.w	r3, r7, #20
 8006462:	225d      	movs	r2, #93	; 0x5d
 8006464:	729a      	strb	r2, [r3, #10]
 8006466:	f107 0314 	add.w	r3, r7, #20
 800646a:	220e      	movs	r2, #14
 800646c:	72da      	strb	r2, [r3, #11]
 800646e:	f107 0314 	add.w	r3, r7, #20
 8006472:	227c      	movs	r2, #124	; 0x7c
 8006474:	731a      	strb	r2, [r3, #12]
 8006476:	f107 0314 	add.w	r3, r7, #20
 800647a:	2215      	movs	r2, #21
 800647c:	735a      	strb	r2, [r3, #13]
 800647e:	f107 0314 	add.w	r3, r7, #20
 8006482:	2226      	movs	r2, #38	; 0x26
 8006484:	739a      	strb	r2, [r3, #14]
 8006486:	f107 0314 	add.w	r3, r7, #20
 800648a:	2216      	movs	r2, #22
 800648c:	73da      	strb	r2, [r3, #15]
 800648e:	f107 0314 	add.w	r3, r7, #20
 8006492:	222b      	movs	r2, #43	; 0x2b
 8006494:	741a      	strb	r2, [r3, #16]
 8006496:	f107 0314 	add.w	r3, r7, #20
 800649a:	221f      	movs	r2, #31
 800649c:	745a      	strb	r2, [r3, #17]
 800649e:	f107 0314 	add.w	r3, r7, #20
 80064a2:	222d      	movs	r2, #45	; 0x2d
 80064a4:	749a      	strb	r2, [r3, #18]
 80064a6:	f107 0314 	add.w	r3, r7, #20
 80064aa:	2220      	movs	r2, #32
 80064ac:	74da      	strb	r2, [r3, #19]
 80064ae:	f107 0314 	add.w	r3, r7, #20
 80064b2:	222a      	movs	r2, #42	; 0x2a
 80064b4:	751a      	strb	r2, [r3, #20]
 80064b6:	f107 0314 	add.w	r3, r7, #20
 80064ba:	2221      	movs	r2, #33	; 0x21
 80064bc:	755a      	strb	r2, [r3, #21]
 80064be:	f107 0314 	add.w	r3, r7, #20
 80064c2:	222f      	movs	r2, #47	; 0x2f
 80064c4:	759a      	strb	r2, [r3, #22]
 80064c6:	f107 0314 	add.w	r3, r7, #20
 80064ca:	2222      	movs	r2, #34	; 0x22
 80064cc:	75da      	strb	r2, [r3, #23]
 80064ce:	f107 0314 	add.w	r3, r7, #20
 80064d2:	225e      	movs	r2, #94	; 0x5e
 80064d4:	761a      	strb	r2, [r3, #24]
 80064d6:	f107 0314 	add.w	r3, r7, #20
 80064da:	2223      	movs	r2, #35	; 0x23
 80064dc:	765a      	strb	r2, [r3, #25]
 80064de:	f107 0314 	add.w	r3, r7, #20
 80064e2:	2225      	movs	r2, #37	; 0x25
 80064e4:	769a      	strb	r2, [r3, #26]
 80064e6:	f107 0314 	add.w	r3, r7, #20
 80064ea:	2224      	movs	r2, #36	; 0x24
 80064ec:	76da      	strb	r2, [r3, #27]
 80064ee:	f107 0314 	add.w	r3, r7, #20
 80064f2:	2228      	movs	r2, #40	; 0x28
 80064f4:	771a      	strb	r2, [r3, #28]
 80064f6:	f107 0314 	add.w	r3, r7, #20
 80064fa:	2226      	movs	r2, #38	; 0x26
 80064fc:	775a      	strb	r2, [r3, #29]
 80064fe:	f107 0314 	add.w	r3, r7, #20
 8006502:	2229      	movs	r2, #41	; 0x29
 8006504:	779a      	strb	r2, [r3, #30]
 8006506:	f107 0314 	add.w	r3, r7, #20
 800650a:	2227      	movs	r2, #39	; 0x27
 800650c:	77da      	strb	r2, [r3, #31]
 800650e:	f107 0314 	add.w	r3, r7, #20
 8006512:	2225      	movs	r2, #37	; 0x25
 8006514:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8006518:	f107 030c 	add.w	r3, r7, #12
 800651c:	f107 0214 	add.w	r2, r7, #20
 8006520:	601a      	str	r2, [r3, #0]
 8006522:	f107 030c 	add.w	r3, r7, #12
 8006526:	2211      	movs	r2, #17
 8006528:	605a      	str	r2, [r3, #4]
 800652a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800652e:	4618      	mov	r0, r3
 8006530:	f7fa fed8 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8006534:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8006538:	f107 020c 	add.w	r2, r7, #12
 800653c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8006540:	9300      	str	r3, [sp, #0]
 8006542:	460b      	mov	r3, r1
 8006544:	ca06      	ldmia	r2, {r1, r2}
 8006546:	4885      	ldr	r0, [pc, #532]	; (800675c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8006548:	f7fa fee4 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800654c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8006550:	4618      	mov	r0, r3
 8006552:	f7fa fed3 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8006556:	2305      	movs	r3, #5
 8006558:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800655c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8006560:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8006564:	497e      	ldr	r1, [pc, #504]	; (8006760 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8006566:	4618      	mov	r0, r3
 8006568:	f7fa fdc0 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800656c:	2306      	movs	r3, #6
 800656e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8006572:	f207 1263 	addw	r2, r7, #355	; 0x163
 8006576:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800657a:	331c      	adds	r3, #28
 800657c:	4979      	ldr	r1, [pc, #484]	; (8006764 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800657e:	4618      	mov	r0, r3
 8006580:	f7fa fddc 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8006584:	2307      	movs	r3, #7
 8006586:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800658a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800658e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8006592:	3338      	adds	r3, #56	; 0x38
 8006594:	4974      	ldr	r1, [pc, #464]	; (8006768 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8006596:	4618      	mov	r0, r3
 8006598:	f7fa fdd0 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800659c:	2308      	movs	r3, #8
 800659e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 80065a2:	f207 1265 	addw	r2, r7, #357	; 0x165
 80065a6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80065aa:	3354      	adds	r3, #84	; 0x54
 80065ac:	496f      	ldr	r1, [pc, #444]	; (800676c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 80065ae:	4618      	mov	r0, r3
 80065b0:	f7fa fd9c 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 80065b4:	2309      	movs	r3, #9
 80065b6:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 80065ba:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 80065be:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80065c2:	3370      	adds	r3, #112	; 0x70
 80065c4:	496a      	ldr	r1, [pc, #424]	; (8006770 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 80065c6:	4618      	mov	r0, r3
 80065c8:	f7fa fde0 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 80065cc:	2310      	movs	r3, #16
 80065ce:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 80065d2:	f207 1267 	addw	r2, r7, #359	; 0x167
 80065d6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80065da:	338c      	adds	r3, #140	; 0x8c
 80065dc:	4965      	ldr	r1, [pc, #404]	; (8006774 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 80065de:	4618      	mov	r0, r3
 80065e0:	f7fa fdfc 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 80065e4:	2311      	movs	r3, #17
 80065e6:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 80065ea:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 80065ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80065f2:	33a8      	adds	r3, #168	; 0xa8
 80065f4:	4960      	ldr	r1, [pc, #384]	; (8006778 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 80065f6:	4618      	mov	r0, r3
 80065f8:	f7fa fdc8 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 80065fc:	2312      	movs	r3, #18
 80065fe:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8006602:	f207 1269 	addw	r2, r7, #361	; 0x169
 8006606:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800660a:	33c4      	adds	r3, #196	; 0xc4
 800660c:	495b      	ldr	r1, [pc, #364]	; (800677c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800660e:	4618      	mov	r0, r3
 8006610:	f7fa fd6c 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8006614:	2313      	movs	r3, #19
 8006616:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800661a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800661e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8006622:	33e0      	adds	r3, #224	; 0xe0
 8006624:	4956      	ldr	r1, [pc, #344]	; (8006780 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8006626:	4618      	mov	r0, r3
 8006628:	f7fa fd88 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800662c:	2314      	movs	r3, #20
 800662e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8006632:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8006636:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800663a:	33fc      	adds	r3, #252	; 0xfc
 800663c:	4951      	ldr	r1, [pc, #324]	; (8006784 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800663e:	4618      	mov	r0, r3
 8006640:	f7fa fdf4 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8006644:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8006648:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800664c:	601a      	str	r2, [r3, #0]
 800664e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8006652:	220a      	movs	r2, #10
 8006654:	605a      	str	r2, [r3, #4]
 8006656:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800665a:	4618      	mov	r0, r3
 800665c:	f7fa fee7 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8006660:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8006664:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8006668:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800666c:	9300      	str	r3, [sp, #0]
 800666e:	460b      	mov	r3, r1
 8006670:	ca06      	ldmia	r2, {r1, r2}
 8006672:	4845      	ldr	r0, [pc, #276]	; (8006788 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8006674:	f7fa fef3 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8006678:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800667c:	4618      	mov	r0, r3
 800667e:	f7fa fee2 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8006682:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8006686:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800668a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800668e:	429c      	cmp	r4, r3
 8006690:	d004      	beq.n	800669c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8006692:	3c1c      	subs	r4, #28
 8006694:	4620      	mov	r0, r4
 8006696:	f7fa fd1c 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800669a:	e7f6      	b.n	800668a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800669c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80066a0:	2200      	movs	r2, #0
 80066a2:	601a      	str	r2, [r3, #0]
 80066a4:	605a      	str	r2, [r3, #4]
 80066a6:	609a      	str	r2, [r3, #8]
 80066a8:	233c      	movs	r3, #60	; 0x3c
 80066aa:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 80066ae:	231b      	movs	r3, #27
 80066b0:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 80066b4:	231c      	movs	r3, #28
 80066b6:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 80066ba:	233e      	movs	r3, #62	; 0x3e
 80066bc:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 80066c0:	2319      	movs	r3, #25
 80066c2:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 80066c6:	231a      	movs	r3, #26
 80066c8:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 80066cc:	233d      	movs	r3, #61	; 0x3d
 80066ce:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 80066d2:	2318      	movs	r3, #24
 80066d4:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 80066d8:	231d      	movs	r3, #29
 80066da:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 80066de:	2321      	movs	r3, #33	; 0x21
 80066e0:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 80066e4:	2317      	movs	r3, #23
 80066e6:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 80066ea:	231e      	movs	r3, #30
 80066ec:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 80066f0:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80066f4:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 80066f8:	2304      	movs	r3, #4
 80066fa:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 80066fe:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8006702:	4618      	mov	r0, r3
 8006704:	f7fa fedb 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8006708:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800670c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8006710:	9300      	str	r3, [sp, #0]
 8006712:	4613      	mov	r3, r2
 8006714:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8006718:	ca06      	ldmia	r2, {r1, r2}
 800671a:	481c      	ldr	r0, [pc, #112]	; (800678c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800671c:	f7fa fee7 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8006720:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8006724:	4618      	mov	r0, r3
 8006726:	f7fa fed6 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800672a:	1d3b      	adds	r3, r7, #4
 800672c:	681b      	ldr	r3, [r3, #0]
 800672e:	2b00      	cmp	r3, #0
 8006730:	d10e      	bne.n	8006750 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8006732:	463b      	mov	r3, r7
 8006734:	681b      	ldr	r3, [r3, #0]
 8006736:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800673a:	4293      	cmp	r3, r2
 800673c:	d108      	bne.n	8006750 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800673e:	4813      	ldr	r0, [pc, #76]	; (800678c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8006740:	f7fd fb2e 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8006744:	4810      	ldr	r0, [pc, #64]	; (8006788 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8006746:	f7fd fb38 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800674a:	4804      	ldr	r0, [pc, #16]	; (800675c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800674c:	f7fd fb42 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8006750:	bf00      	nop
 8006752:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8006756:	46bd      	mov	sp, r7
 8006758:	bd90      	pop	{r4, r7, pc}
 800675a:	bf00      	nop
 800675c:	2000024c 	.word	0x2000024c
 8006760:	080273e4 	.word	0x080273e4
 8006764:	080273ec 	.word	0x080273ec
 8006768:	080273f4 	.word	0x080273f4
 800676c:	080273fc 	.word	0x080273fc
 8006770:	08027404 	.word	0x08027404
 8006774:	0802740c 	.word	0x0802740c
 8006778:	08027410 	.word	0x08027410
 800677c:	08027418 	.word	0x08027418
 8006780:	08027420 	.word	0x08027420
 8006784:	08027428 	.word	0x08027428
 8006788:	20000264 	.word	0x20000264
 800678c:	2000027c 	.word	0x2000027c

08006790 <_GLOBAL__sub_I__ZN17Primal_expressionD2Ev>:
 8006790:	b580      	push	{r7, lr}
 8006792:	af00      	add	r7, sp, #0
 8006794:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8006798:	2001      	movs	r0, #1
 800679a:	f7ff fe1d 	bl	80063d8 <_Z41__static_initialization_and_destruction_0ii>
 800679e:	bd80      	pop	{r7, pc}

080067a0 <_GLOBAL__sub_D__ZN17Primal_expressionD2Ev>:
 80067a0:	b580      	push	{r7, lr}
 80067a2:	af00      	add	r7, sp, #0
 80067a4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80067a8:	2000      	movs	r0, #0
 80067aa:	f7ff fe15 	bl	80063d8 <_Z41__static_initialization_and_destruction_0ii>
 80067ae:	bd80      	pop	{r7, pc}

080067b0 <_ZN9__gnu_cxx14__alloc_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES6_E15_S_always_equalEv>:
    { return _Base_type::propagate_on_container_move_assignment::value; }

    static constexpr bool _S_propagate_on_swap()
    { return _Base_type::propagate_on_container_swap::value; }

    static constexpr bool _S_always_equal()
 80067b0:	b480      	push	{r7}
 80067b2:	af00      	add	r7, sp, #0
    { return _Base_type::is_always_equal::value; }
 80067b4:	2301      	movs	r3, #1
 80067b6:	4618      	mov	r0, r3
 80067b8:	46bd      	mov	sp, r7
 80067ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067be:	4770      	bx	lr

080067c0 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E15_S_always_equalEv>:
    static constexpr bool _S_always_equal()
 80067c0:	b480      	push	{r7}
 80067c2:	af00      	add	r7, sp, #0
    { return _Base_type::is_always_equal::value; }
 80067c4:	2301      	movs	r3, #1
 80067c6:	4618      	mov	r0, r3
 80067c8:	46bd      	mov	sp, r7
 80067ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067ce:	4770      	bx	lr

080067d0 <_ZN21Expression_calculator12get_instanceEv>:
#include <Expression_calculator.h>

Expression_calculator& Expression_calculator::get_instance()
{
 80067d0:	b580      	push	{r7, lr}
 80067d2:	af00      	add	r7, sp, #0
	static Expression_calculator instance;
 80067d4:	4b0f      	ldr	r3, [pc, #60]	; (8006814 <_ZN21Expression_calculator12get_instanceEv+0x44>)
 80067d6:	781b      	ldrb	r3, [r3, #0]
 80067d8:	f3bf 8f5b 	dmb	ish
 80067dc:	b2db      	uxtb	r3, r3
 80067de:	f003 0301 	and.w	r3, r3, #1
 80067e2:	2b00      	cmp	r3, #0
 80067e4:	bf0c      	ite	eq
 80067e6:	2301      	moveq	r3, #1
 80067e8:	2300      	movne	r3, #0
 80067ea:	b2db      	uxtb	r3, r3
 80067ec:	2b00      	cmp	r3, #0
 80067ee:	d00d      	beq.n	800680c <_ZN21Expression_calculator12get_instanceEv+0x3c>
 80067f0:	4808      	ldr	r0, [pc, #32]	; (8006814 <_ZN21Expression_calculator12get_instanceEv+0x44>)
 80067f2:	f01c fa1a 	bl	8022c2a <__cxa_guard_acquire>
 80067f6:	4603      	mov	r3, r0
 80067f8:	2b00      	cmp	r3, #0
 80067fa:	bf14      	ite	ne
 80067fc:	2301      	movne	r3, #1
 80067fe:	2300      	moveq	r3, #0
 8006800:	b2db      	uxtb	r3, r3
 8006802:	2b00      	cmp	r3, #0
 8006804:	d002      	beq.n	800680c <_ZN21Expression_calculator12get_instanceEv+0x3c>
 8006806:	4803      	ldr	r0, [pc, #12]	; (8006814 <_ZN21Expression_calculator12get_instanceEv+0x44>)
 8006808:	f01c fa1b 	bl	8022c42 <__cxa_guard_release>
	return instance;
 800680c:	4b02      	ldr	r3, [pc, #8]	; (8006818 <_ZN21Expression_calculator12get_instanceEv+0x48>)
}
 800680e:	4618      	mov	r0, r3
 8006810:	bd80      	pop	{r7, pc}
 8006812:	bf00      	nop
 8006814:	200002e0 	.word	0x200002e0
 8006818:	200002dc 	.word	0x200002dc

0800681c <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 800681c:	b580      	push	{r7, lr}
 800681e:	b082      	sub	sp, #8
 8006820:	af00      	add	r7, sp, #0
 8006822:	6078      	str	r0, [r7, #4]
 8006824:	687b      	ldr	r3, [r7, #4]
 8006826:	4618      	mov	r0, r3
 8006828:	f000 feb1 	bl	800758e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEED1Ev>
 800682c:	687b      	ldr	r3, [r7, #4]
 800682e:	4618      	mov	r0, r3
 8006830:	3708      	adds	r7, #8
 8006832:	46bd      	mov	sp, r7
 8006834:	bd80      	pop	{r7, pc}

08006836 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 8006836:	b580      	push	{r7, lr}
 8006838:	b082      	sub	sp, #8
 800683a:	af00      	add	r7, sp, #0
 800683c:	6078      	str	r0, [r7, #4]
 800683e:	687b      	ldr	r3, [r7, #4]
 8006840:	4618      	mov	r0, r3
 8006842:	f7ff ffeb 	bl	800681c <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEED1Ev>
 8006846:	687b      	ldr	r3, [r7, #4]
 8006848:	4618      	mov	r0, r3
 800684a:	3708      	adds	r7, #8
 800684c:	46bd      	mov	sp, r7
 800684e:	bd80      	pop	{r7, pc}

08006850 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 8006850:	b580      	push	{r7, lr}
 8006852:	b082      	sub	sp, #8
 8006854:	af00      	add	r7, sp, #0
 8006856:	6078      	str	r0, [r7, #4]
 8006858:	687b      	ldr	r3, [r7, #4]
 800685a:	4618      	mov	r0, r3
 800685c:	f7ff ffeb 	bl	8006836 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEED1Ev>
 8006860:	687b      	ldr	r3, [r7, #4]
 8006862:	4618      	mov	r0, r3
 8006864:	3708      	adds	r7, #8
 8006866:	46bd      	mov	sp, r7
 8006868:	bd80      	pop	{r7, pc}

0800686a <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 800686a:	b580      	push	{r7, lr}
 800686c:	b082      	sub	sp, #8
 800686e:	af00      	add	r7, sp, #0
 8006870:	6078      	str	r0, [r7, #4]
 8006872:	687b      	ldr	r3, [r7, #4]
 8006874:	4618      	mov	r0, r3
 8006876:	f7ff ffeb 	bl	8006850 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEED1Ev>
 800687a:	687b      	ldr	r3, [r7, #4]
 800687c:	4618      	mov	r0, r3
 800687e:	3708      	adds	r7, #8
 8006880:	46bd      	mov	sp, r7
 8006882:	bd80      	pop	{r7, pc}

08006884 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8006884:	b580      	push	{r7, lr}
 8006886:	b082      	sub	sp, #8
 8006888:	af00      	add	r7, sp, #0
 800688a:	6078      	str	r0, [r7, #4]
 800688c:	687b      	ldr	r3, [r7, #4]
 800688e:	4618      	mov	r0, r3
 8006890:	f7ff ffeb 	bl	800686a <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEED1Ev>
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	4618      	mov	r0, r3
 8006898:	3708      	adds	r7, #8
 800689a:	46bd      	mov	sp, r7
 800689c:	bd80      	pop	{r7, pc}

0800689e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEED1Ev>:
      ~variant() = default;
 800689e:	b580      	push	{r7, lr}
 80068a0:	b082      	sub	sp, #8
 80068a2:	af00      	add	r7, sp, #0
 80068a4:	6078      	str	r0, [r7, #4]
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	4618      	mov	r0, r3
 80068aa:	f7ff ffeb 	bl	8006884 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEED1Ev>
 80068ae:	687b      	ldr	r3, [r7, #4]
 80068b0:	4618      	mov	r0, r3
 80068b2:	3708      	adds	r7, #8
 80068b4:	46bd      	mov	sp, r7
 80068b6:	bd80      	pop	{r7, pc}

080068b8 <_ZN6SymbolD1Ev>:
	SYMBOL_BOOL,
	SYMBOL_STRING,
	SYMBOL_CONTAINER,
} symbol_type;

class Symbol
 80068b8:	b580      	push	{r7, lr}
 80068ba:	b082      	sub	sp, #8
 80068bc:	af00      	add	r7, sp, #0
 80068be:	6078      	str	r0, [r7, #4]
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	3304      	adds	r3, #4
 80068c4:	4618      	mov	r0, r3
 80068c6:	f7ff ffea 	bl	800689e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEED1Ev>
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	4618      	mov	r0, r3
 80068ce:	3708      	adds	r7, #8
 80068d0:	46bd      	mov	sp, r7
 80068d2:	bd80      	pop	{r7, pc}

080068d4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 80068d4:	b580      	push	{r7, lr}
 80068d6:	b082      	sub	sp, #8
 80068d8:	af00      	add	r7, sp, #0
 80068da:	6078      	str	r0, [r7, #4]
 80068dc:	6039      	str	r1, [r7, #0]
 80068de:	687b      	ldr	r3, [r7, #4]
 80068e0:	683a      	ldr	r2, [r7, #0]
 80068e2:	4611      	mov	r1, r2
 80068e4:	4618      	mov	r0, r3
 80068e6:	f001 fa9d 	bl	8007e24 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_>
 80068ea:	687b      	ldr	r3, [r7, #4]
 80068ec:	4618      	mov	r0, r3
 80068ee:	3708      	adds	r7, #8
 80068f0:	46bd      	mov	sp, r7
 80068f2:	bd80      	pop	{r7, pc}

080068f4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSEOSC_>:
    class variant
 80068f4:	b580      	push	{r7, lr}
 80068f6:	b082      	sub	sp, #8
 80068f8:	af00      	add	r7, sp, #0
 80068fa:	6078      	str	r0, [r7, #4]
 80068fc:	6039      	str	r1, [r7, #0]
 80068fe:	687b      	ldr	r3, [r7, #4]
 8006900:	683a      	ldr	r2, [r7, #0]
 8006902:	4611      	mov	r1, r2
 8006904:	4618      	mov	r0, r3
 8006906:	f7ff ffe5 	bl	80068d4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_>
 800690a:	687b      	ldr	r3, [r7, #4]
 800690c:	4618      	mov	r0, r3
 800690e:	3708      	adds	r7, #8
 8006910:	46bd      	mov	sp, r7
 8006912:	bd80      	pop	{r7, pc}

08006914 <_ZN6SymbolaSEOS_>:
 8006914:	b580      	push	{r7, lr}
 8006916:	b082      	sub	sp, #8
 8006918:	af00      	add	r7, sp, #0
 800691a:	6078      	str	r0, [r7, #4]
 800691c:	6039      	str	r1, [r7, #0]
 800691e:	683b      	ldr	r3, [r7, #0]
 8006920:	781a      	ldrb	r2, [r3, #0]
 8006922:	687b      	ldr	r3, [r7, #4]
 8006924:	701a      	strb	r2, [r3, #0]
 8006926:	683b      	ldr	r3, [r7, #0]
 8006928:	1d1a      	adds	r2, r3, #4
 800692a:	687b      	ldr	r3, [r7, #4]
 800692c:	3304      	adds	r3, #4
 800692e:	4611      	mov	r1, r2
 8006930:	4618      	mov	r0, r3
 8006932:	f7ff ffdf 	bl	80068f4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSEOSC_>
 8006936:	687b      	ldr	r3, [r7, #4]
 8006938:	4618      	mov	r0, r3
 800693a:	3708      	adds	r7, #8
 800693c:	46bd      	mov	sp, r7
 800693e:	bd80      	pop	{r7, pc}

08006940 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1EOSE_>:
      _Copy_assign_base(_Copy_assign_base&&) = default;
 8006940:	b580      	push	{r7, lr}
 8006942:	b082      	sub	sp, #8
 8006944:	af00      	add	r7, sp, #0
 8006946:	6078      	str	r0, [r7, #4]
 8006948:	6039      	str	r1, [r7, #0]
 800694a:	687b      	ldr	r3, [r7, #4]
 800694c:	683a      	ldr	r2, [r7, #0]
 800694e:	4611      	mov	r1, r2
 8006950:	4618      	mov	r0, r3
 8006952:	f001 fa8a 	bl	8007e6a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1EOSE_>
 8006956:	687b      	ldr	r3, [r7, #4]
 8006958:	4618      	mov	r0, r3
 800695a:	3708      	adds	r7, #8
 800695c:	46bd      	mov	sp, r7
 800695e:	bd80      	pop	{r7, pc}

08006960 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1EOSE_>:
      _Move_assign_base(_Move_assign_base&&) = default;
 8006960:	b580      	push	{r7, lr}
 8006962:	b082      	sub	sp, #8
 8006964:	af00      	add	r7, sp, #0
 8006966:	6078      	str	r0, [r7, #4]
 8006968:	6039      	str	r1, [r7, #0]
 800696a:	687b      	ldr	r3, [r7, #4]
 800696c:	683a      	ldr	r2, [r7, #0]
 800696e:	4611      	mov	r1, r2
 8006970:	4618      	mov	r0, r3
 8006972:	f7ff ffe5 	bl	8006940 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1EOSE_>
 8006976:	687b      	ldr	r3, [r7, #4]
 8006978:	4618      	mov	r0, r3
 800697a:	3708      	adds	r7, #8
 800697c:	46bd      	mov	sp, r7
 800697e:	bd80      	pop	{r7, pc}

08006980 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1EOSE_>:
      _Variant_base(_Variant_base&&) = default;
 8006980:	b580      	push	{r7, lr}
 8006982:	b082      	sub	sp, #8
 8006984:	af00      	add	r7, sp, #0
 8006986:	6078      	str	r0, [r7, #4]
 8006988:	6039      	str	r1, [r7, #0]
 800698a:	687b      	ldr	r3, [r7, #4]
 800698c:	683a      	ldr	r2, [r7, #0]
 800698e:	4611      	mov	r1, r2
 8006990:	4618      	mov	r0, r3
 8006992:	f7ff ffe5 	bl	8006960 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1EOSE_>
 8006996:	687b      	ldr	r3, [r7, #4]
 8006998:	4618      	mov	r0, r3
 800699a:	3708      	adds	r7, #8
 800699c:	46bd      	mov	sp, r7
 800699e:	bd80      	pop	{r7, pc}

080069a0 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1EOSC_>:
      variant(variant&&) = default;
 80069a0:	b580      	push	{r7, lr}
 80069a2:	b082      	sub	sp, #8
 80069a4:	af00      	add	r7, sp, #0
 80069a6:	6078      	str	r0, [r7, #4]
 80069a8:	6039      	str	r1, [r7, #0]
 80069aa:	687b      	ldr	r3, [r7, #4]
 80069ac:	683a      	ldr	r2, [r7, #0]
 80069ae:	4611      	mov	r1, r2
 80069b0:	4618      	mov	r0, r3
 80069b2:	f7ff ffe5 	bl	8006980 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1EOSE_>
 80069b6:	687b      	ldr	r3, [r7, #4]
 80069b8:	4618      	mov	r0, r3
 80069ba:	3708      	adds	r7, #8
 80069bc:	46bd      	mov	sp, r7
 80069be:	bd80      	pop	{r7, pc}

080069c0 <_ZN6SymbolC1EOS_>:
 80069c0:	b580      	push	{r7, lr}
 80069c2:	b082      	sub	sp, #8
 80069c4:	af00      	add	r7, sp, #0
 80069c6:	6078      	str	r0, [r7, #4]
 80069c8:	6039      	str	r1, [r7, #0]
 80069ca:	683b      	ldr	r3, [r7, #0]
 80069cc:	781a      	ldrb	r2, [r3, #0]
 80069ce:	687b      	ldr	r3, [r7, #4]
 80069d0:	701a      	strb	r2, [r3, #0]
 80069d2:	687b      	ldr	r3, [r7, #4]
 80069d4:	1d1a      	adds	r2, r3, #4
 80069d6:	683b      	ldr	r3, [r7, #0]
 80069d8:	3304      	adds	r3, #4
 80069da:	4619      	mov	r1, r3
 80069dc:	4610      	mov	r0, r2
 80069de:	f7ff ffdf 	bl	80069a0 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1EOSC_>
 80069e2:	687b      	ldr	r3, [r7, #4]
 80069e4:	4618      	mov	r0, r3
 80069e6:	3708      	adds	r7, #8
 80069e8:	46bd      	mov	sp, r7
 80069ea:	bd80      	pop	{r7, pc}

080069ec <_ZN21Expression_calculator8evaluateEP10Expression>:

Symbol Expression_calculator::evaluate(Expression *exp)
{
 80069ec:	b590      	push	{r4, r7, lr}
 80069ee:	b099      	sub	sp, #100	; 0x64
 80069f0:	af00      	add	r7, sp, #0
 80069f2:	60f8      	str	r0, [r7, #12]
 80069f4:	60b9      	str	r1, [r7, #8]
 80069f6:	607a      	str	r2, [r7, #4]
	Position_counter::get_instance().line = exp->line;
 80069f8:	687b      	ldr	r3, [r7, #4]
 80069fa:	681c      	ldr	r4, [r3, #0]
 80069fc:	f00f ff68 	bl	80168d0 <_ZN16Position_counter12get_instanceEv>
 8006a00:	4603      	mov	r3, r0
 8006a02:	601c      	str	r4, [r3, #0]
	Position_counter::get_instance().position = exp->position;
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	685c      	ldr	r4, [r3, #4]
 8006a08:	f00f ff62 	bl	80168d0 <_ZN16Position_counter12get_instanceEv>
 8006a0c:	4603      	mov	r3, r0
 8006a0e:	605c      	str	r4, [r3, #4]

	Symbol var = false;
 8006a10:	2100      	movs	r1, #0
 8006a12:	68f8      	ldr	r0, [r7, #12]
 8006a14:	f010 fd49 	bl	80174aa <_ZN6SymbolC1Eb>
	for (And_expression *and_exp : exp->and_exps)
 8006a18:	687b      	ldr	r3, [r7, #4]
 8006a1a:	3308      	adds	r3, #8
 8006a1c:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006a1e:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8006a20:	f7fe f837 	bl	8004a92 <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 8006a24:	4603      	mov	r3, r0
 8006a26:	617b      	str	r3, [r7, #20]
 8006a28:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8006a2a:	f7fe f842 	bl	8004ab2 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 8006a2e:	4603      	mov	r3, r0
 8006a30:	613b      	str	r3, [r7, #16]
 8006a32:	f107 0210 	add.w	r2, r7, #16
 8006a36:	f107 0314 	add.w	r3, r7, #20
 8006a3a:	4611      	mov	r1, r2
 8006a3c:	4618      	mov	r0, r3
 8006a3e:	f7fe f849 	bl	8004ad4 <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8006a42:	4603      	mov	r3, r0
 8006a44:	2b00      	cmp	r3, #0
 8006a46:	d02c      	beq.n	8006aa2 <_ZN21Expression_calculator8evaluateEP10Expression+0xb6>
 8006a48:	f107 0314 	add.w	r3, r7, #20
 8006a4c:	4618      	mov	r0, r3
 8006a4e:	f7fe f869 	bl	8004b24 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8006a52:	4603      	mov	r3, r0
 8006a54:	681b      	ldr	r3, [r3, #0]
 8006a56:	65bb      	str	r3, [r7, #88]	; 0x58
	{
		var = var || evaluate(and_exp);
 8006a58:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8006a5c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8006a5e:	68b9      	ldr	r1, [r7, #8]
 8006a60:	4618      	mov	r0, r3
 8006a62:	f000 f823 	bl	8006aac <_ZN21Expression_calculator8evaluateEP14And_expression>
 8006a66:	f107 0318 	add.w	r3, r7, #24
 8006a6a:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8006a6e:	68f9      	ldr	r1, [r7, #12]
 8006a70:	4618      	mov	r0, r3
 8006a72:	f010 ff93 	bl	801799c <_ZN6SymbolooES_>
 8006a76:	f107 0318 	add.w	r3, r7, #24
 8006a7a:	4619      	mov	r1, r3
 8006a7c:	68f8      	ldr	r0, [r7, #12]
 8006a7e:	f7ff ff49 	bl	8006914 <_ZN6SymbolaSEOS_>
 8006a82:	f107 0318 	add.w	r3, r7, #24
 8006a86:	4618      	mov	r0, r3
 8006a88:	f7ff ff16 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006a8c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8006a90:	4618      	mov	r0, r3
 8006a92:	f7ff ff11 	bl	80068b8 <_ZN6SymbolD1Ev>
	for (And_expression *and_exp : exp->and_exps)
 8006a96:	f107 0314 	add.w	r3, r7, #20
 8006a9a:	4618      	mov	r0, r3
 8006a9c:	f7fe f832 	bl	8004b04 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8006aa0:	e7c7      	b.n	8006a32 <_ZN21Expression_calculator8evaluateEP10Expression+0x46>
	}
	return var;
 8006aa2:	bf00      	nop
}
 8006aa4:	68f8      	ldr	r0, [r7, #12]
 8006aa6:	3764      	adds	r7, #100	; 0x64
 8006aa8:	46bd      	mov	sp, r7
 8006aaa:	bd90      	pop	{r4, r7, pc}

08006aac <_ZN21Expression_calculator8evaluateEP14And_expression>:

Symbol Expression_calculator::evaluate(And_expression *and_exp)
{
 8006aac:	b580      	push	{r7, lr}
 8006aae:	b098      	sub	sp, #96	; 0x60
 8006ab0:	af00      	add	r7, sp, #0
 8006ab2:	60f8      	str	r0, [r7, #12]
 8006ab4:	60b9      	str	r1, [r7, #8]
 8006ab6:	607a      	str	r2, [r7, #4]
	Symbol var = false;
 8006ab8:	2100      	movs	r1, #0
 8006aba:	68f8      	ldr	r0, [r7, #12]
 8006abc:	f010 fcf5 	bl	80174aa <_ZN6SymbolC1Eb>
	for (Compare_expression *comp_exp : and_exp->comp_exps)
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006ac4:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8006ac6:	f7fd ff74 	bl	80049b2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 8006aca:	4603      	mov	r3, r0
 8006acc:	617b      	str	r3, [r7, #20]
 8006ace:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8006ad0:	f7fd ff7f 	bl	80049d2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 8006ad4:	4603      	mov	r3, r0
 8006ad6:	613b      	str	r3, [r7, #16]
 8006ad8:	f107 0210 	add.w	r2, r7, #16
 8006adc:	f107 0314 	add.w	r3, r7, #20
 8006ae0:	4611      	mov	r1, r2
 8006ae2:	4618      	mov	r0, r3
 8006ae4:	f7fd ff86 	bl	80049f4 <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8006ae8:	4603      	mov	r3, r0
 8006aea:	2b00      	cmp	r3, #0
 8006aec:	d02c      	beq.n	8006b48 <_ZN21Expression_calculator8evaluateEP14And_expression+0x9c>
 8006aee:	f107 0314 	add.w	r3, r7, #20
 8006af2:	4618      	mov	r0, r3
 8006af4:	f7fd ffa6 	bl	8004a44 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8006af8:	4603      	mov	r3, r0
 8006afa:	681b      	ldr	r3, [r3, #0]
 8006afc:	65bb      	str	r3, [r7, #88]	; 0x58
	{
		var = var && evaluate(comp_exp);
 8006afe:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8006b02:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8006b04:	68b9      	ldr	r1, [r7, #8]
 8006b06:	4618      	mov	r0, r3
 8006b08:	f000 f824 	bl	8006b54 <_ZN21Expression_calculator8evaluateEP18Compare_expression>
 8006b0c:	f107 0318 	add.w	r3, r7, #24
 8006b10:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8006b14:	68f9      	ldr	r1, [r7, #12]
 8006b16:	4618      	mov	r0, r3
 8006b18:	f010 feee 	bl	80178f8 <_ZN6SymbolaaES_>
 8006b1c:	f107 0318 	add.w	r3, r7, #24
 8006b20:	4619      	mov	r1, r3
 8006b22:	68f8      	ldr	r0, [r7, #12]
 8006b24:	f7ff fef6 	bl	8006914 <_ZN6SymbolaSEOS_>
 8006b28:	f107 0318 	add.w	r3, r7, #24
 8006b2c:	4618      	mov	r0, r3
 8006b2e:	f7ff fec3 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006b32:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8006b36:	4618      	mov	r0, r3
 8006b38:	f7ff febe 	bl	80068b8 <_ZN6SymbolD1Ev>
	for (Compare_expression *comp_exp : and_exp->comp_exps)
 8006b3c:	f107 0314 	add.w	r3, r7, #20
 8006b40:	4618      	mov	r0, r3
 8006b42:	f7fd ff6f 	bl	8004a24 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8006b46:	e7c7      	b.n	8006ad8 <_ZN21Expression_calculator8evaluateEP14And_expression+0x2c>
	}
	return var;
 8006b48:	bf00      	nop
}
 8006b4a:	68f8      	ldr	r0, [r7, #12]
 8006b4c:	3760      	adds	r7, #96	; 0x60
 8006b4e:	46bd      	mov	sp, r7
 8006b50:	bd80      	pop	{r7, pc}
	...

08006b54 <_ZN21Expression_calculator8evaluateEP18Compare_expression>:

Symbol Expression_calculator::evaluate(Compare_expression *comp_exp)
{
 8006b54:	b580      	push	{r7, lr}
 8006b56:	b0b4      	sub	sp, #208	; 0xd0
 8006b58:	af00      	add	r7, sp, #0
 8006b5a:	60f8      	str	r0, [r7, #12]
 8006b5c:	60b9      	str	r1, [r7, #8]
 8006b5e:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(comp_exp->left_rel_exp);
 8006b60:	687b      	ldr	r3, [r7, #4]
 8006b62:	681a      	ldr	r2, [r3, #0]
 8006b64:	68fb      	ldr	r3, [r7, #12]
 8006b66:	68b9      	ldr	r1, [r7, #8]
 8006b68:	4618      	mov	r0, r3
 8006b6a:	f000 f87f 	bl	8006c6c <_ZN21Expression_calculator8evaluateEP19Relation_expression>
	if (comp_exp->right_rel_exp)
 8006b6e:	687b      	ldr	r3, [r7, #4]
 8006b70:	685b      	ldr	r3, [r3, #4]
 8006b72:	2b00      	cmp	r3, #0
 8006b74:	d072      	beq.n	8006c5c <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
	{
		switch (comp_exp->op)
 8006b76:	687b      	ldr	r3, [r7, #4]
 8006b78:	7a1b      	ldrb	r3, [r3, #8]
 8006b7a:	2b01      	cmp	r3, #1
 8006b7c:	d002      	beq.n	8006b84 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x30>
 8006b7e:	2b02      	cmp	r3, #2
 8006b80:	d021      	beq.n	8006bc6 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x72>
 8006b82:	e04e      	b.n	8006c22 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0xce>
		{
		case COMP_OP_EQUAL:
			var = var == evaluate(comp_exp->right_rel_exp);
 8006b84:	687b      	ldr	r3, [r7, #4]
 8006b86:	685a      	ldr	r2, [r3, #4]
 8006b88:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8006b8c:	68b9      	ldr	r1, [r7, #8]
 8006b8e:	4618      	mov	r0, r3
 8006b90:	f000 f86c 	bl	8006c6c <_ZN21Expression_calculator8evaluateEP19Relation_expression>
 8006b94:	f107 0314 	add.w	r3, r7, #20
 8006b98:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8006b9c:	68f9      	ldr	r1, [r7, #12]
 8006b9e:	4618      	mov	r0, r3
 8006ba0:	f011 f980 	bl	8017ea4 <_ZN6SymboleqES_>
 8006ba4:	f107 0314 	add.w	r3, r7, #20
 8006ba8:	4619      	mov	r1, r3
 8006baa:	68f8      	ldr	r0, [r7, #12]
 8006bac:	f7ff feb2 	bl	8006914 <_ZN6SymbolaSEOS_>
 8006bb0:	f107 0314 	add.w	r3, r7, #20
 8006bb4:	4618      	mov	r0, r3
 8006bb6:	f7ff fe7f 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006bba:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8006bbe:	4618      	mov	r0, r3
 8006bc0:	f7ff fe7a 	bl	80068b8 <_ZN6SymbolD1Ev>
			break;
 8006bc4:	e04a      	b.n	8006c5c <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
		case COMP_OP_NOT_EQUAL:
			var = !(var == evaluate(comp_exp->right_rel_exp));
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	685a      	ldr	r2, [r3, #4]
 8006bca:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8006bce:	68b9      	ldr	r1, [r7, #8]
 8006bd0:	4618      	mov	r0, r3
 8006bd2:	f000 f84b 	bl	8006c6c <_ZN21Expression_calculator8evaluateEP19Relation_expression>
 8006bd6:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8006bda:	f107 0294 	add.w	r2, r7, #148	; 0x94
 8006bde:	68f9      	ldr	r1, [r7, #12]
 8006be0:	4618      	mov	r0, r3
 8006be2:	f011 f95f 	bl	8017ea4 <_ZN6SymboleqES_>
 8006be6:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8006bea:	f107 0274 	add.w	r2, r7, #116	; 0x74
 8006bee:	4611      	mov	r1, r2
 8006bf0:	4618      	mov	r0, r3
 8006bf2:	f010 ff25 	bl	8017a40 <_ZN6SymbolntEv>
 8006bf6:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8006bfa:	4619      	mov	r1, r3
 8006bfc:	68f8      	ldr	r0, [r7, #12]
 8006bfe:	f7ff fe89 	bl	8006914 <_ZN6SymbolaSEOS_>
 8006c02:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8006c06:	4618      	mov	r0, r3
 8006c08:	f7ff fe56 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006c0c:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8006c10:	4618      	mov	r0, r3
 8006c12:	f7ff fe51 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006c16:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8006c1a:	4618      	mov	r0, r3
 8006c1c:	f7ff fe4c 	bl	80068b8 <_ZN6SymbolD1Ev>
			break;
 8006c20:	e01c      	b.n	8006c5c <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
		default:
			Transmitter::report_error("compare operator");
 8006c22:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8006c26:	4618      	mov	r0, r3
 8006c28:	f01c f81f 	bl	8022c6a <_ZNSaIcEC1Ev>
 8006c2c:	f107 02cc 	add.w	r2, r7, #204	; 0xcc
 8006c30:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8006c34:	490c      	ldr	r1, [pc, #48]	; (8006c68 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x114>)
 8006c36:	4618      	mov	r0, r3
 8006c38:	f7fa fba7 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8006c3c:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8006c40:	4618      	mov	r0, r3
 8006c42:	f012 f903 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8006c46:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8006c4a:	4618      	mov	r0, r3
 8006c4c:	f01c f9d3 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8006c50:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8006c54:	4618      	mov	r0, r3
 8006c56:	f01c f809 	bl	8022c6c <_ZNSaIcED1Ev>
		}
	}

	return var;
 8006c5a:	e7ff      	b.n	8006c5c <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
 8006c5c:	bf00      	nop
}
 8006c5e:	68f8      	ldr	r0, [r7, #12]
 8006c60:	37d0      	adds	r7, #208	; 0xd0
 8006c62:	46bd      	mov	sp, r7
 8006c64:	bd80      	pop	{r7, pc}
 8006c66:	bf00      	nop
 8006c68:	0802742c 	.word	0x0802742c

08006c6c <_ZN21Expression_calculator8evaluateEP19Relation_expression>:

Symbol Expression_calculator::evaluate(Relation_expression *rel_exp)
{
 8006c6c:	b580      	push	{r7, lr}
 8006c6e:	b0b4      	sub	sp, #208	; 0xd0
 8006c70:	af00      	add	r7, sp, #0
 8006c72:	60f8      	str	r0, [r7, #12]
 8006c74:	60b9      	str	r1, [r7, #8]
 8006c76:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(rel_exp->left_sum_exp);
 8006c78:	687b      	ldr	r3, [r7, #4]
 8006c7a:	681a      	ldr	r2, [r3, #0]
 8006c7c:	f107 0314 	add.w	r3, r7, #20
 8006c80:	68b9      	ldr	r1, [r7, #8]
 8006c82:	4618      	mov	r0, r3
 8006c84:	f000 f89c 	bl	8006dc0 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
	if (rel_exp->right_sum_exp)
 8006c88:	687b      	ldr	r3, [r7, #4]
 8006c8a:	685b      	ldr	r3, [r3, #4]
 8006c8c:	2b00      	cmp	r3, #0
 8006c8e:	f000 8085 	beq.w	8006d9c <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x130>
	{
		switch (rel_exp->op)
 8006c92:	687b      	ldr	r3, [r7, #4]
 8006c94:	7a1b      	ldrb	r3, [r3, #8]
 8006c96:	3b01      	subs	r3, #1
 8006c98:	2b03      	cmp	r3, #3
 8006c9a:	d863      	bhi.n	8006d64 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0xf8>
 8006c9c:	a201      	add	r2, pc, #4	; (adr r2, 8006ca4 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x38>)
 8006c9e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006ca2:	bf00      	nop
 8006ca4:	08006d0d 	.word	0x08006d0d
 8006ca8:	08006d39 	.word	0x08006d39
 8006cac:	08006cb5 	.word	0x08006cb5
 8006cb0:	08006ce1 	.word	0x08006ce1
		{
		case REL_OP_GREATER:
			return var > evaluate(rel_exp->right_sum_exp);
 8006cb4:	687b      	ldr	r3, [r7, #4]
 8006cb6:	685a      	ldr	r2, [r3, #4]
 8006cb8:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8006cbc:	68b9      	ldr	r1, [r7, #8]
 8006cbe:	4618      	mov	r0, r3
 8006cc0:	f000 f87e 	bl	8006dc0 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 8006cc4:	68fb      	ldr	r3, [r7, #12]
 8006cc6:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8006cca:	f107 0114 	add.w	r1, r7, #20
 8006cce:	4618      	mov	r0, r3
 8006cd0:	f010 fef8 	bl	8017ac4 <_ZN6SymbolgtES_>
 8006cd4:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8006cd8:	4618      	mov	r0, r3
 8006cda:	f7ff fded 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006cde:	e063      	b.n	8006da8 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_GREATER_EQUAL:
			return var >= evaluate(rel_exp->right_sum_exp);
 8006ce0:	687b      	ldr	r3, [r7, #4]
 8006ce2:	685a      	ldr	r2, [r3, #4]
 8006ce4:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8006ce8:	68b9      	ldr	r1, [r7, #8]
 8006cea:	4618      	mov	r0, r3
 8006cec:	f000 f868 	bl	8006dc0 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 8006cf0:	68fb      	ldr	r3, [r7, #12]
 8006cf2:	f107 0254 	add.w	r2, r7, #84	; 0x54
 8006cf6:	f107 0114 	add.w	r1, r7, #20
 8006cfa:	4618      	mov	r0, r3
 8006cfc:	f010 ff5e 	bl	8017bbc <_ZN6SymbolgeES_>
 8006d00:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8006d04:	4618      	mov	r0, r3
 8006d06:	f7ff fdd7 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006d0a:	e04d      	b.n	8006da8 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_SMALLER:
			return var < evaluate(rel_exp->right_sum_exp);
 8006d0c:	687b      	ldr	r3, [r7, #4]
 8006d0e:	685a      	ldr	r2, [r3, #4]
 8006d10:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8006d14:	68b9      	ldr	r1, [r7, #8]
 8006d16:	4618      	mov	r0, r3
 8006d18:	f000 f852 	bl	8006dc0 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 8006d1c:	68fb      	ldr	r3, [r7, #12]
 8006d1e:	f107 0274 	add.w	r2, r7, #116	; 0x74
 8006d22:	f107 0114 	add.w	r1, r7, #20
 8006d26:	4618      	mov	r0, r3
 8006d28:	f010 ffc4 	bl	8017cb4 <_ZN6SymbolltES_>
 8006d2c:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8006d30:	4618      	mov	r0, r3
 8006d32:	f7ff fdc1 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006d36:	e037      	b.n	8006da8 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_SMALLER_EQUAL:
			return var <= evaluate(rel_exp->right_sum_exp);
 8006d38:	687b      	ldr	r3, [r7, #4]
 8006d3a:	685a      	ldr	r2, [r3, #4]
 8006d3c:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8006d40:	68b9      	ldr	r1, [r7, #8]
 8006d42:	4618      	mov	r0, r3
 8006d44:	f000 f83c 	bl	8006dc0 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 8006d48:	68fb      	ldr	r3, [r7, #12]
 8006d4a:	f107 0294 	add.w	r2, r7, #148	; 0x94
 8006d4e:	f107 0114 	add.w	r1, r7, #20
 8006d52:	4618      	mov	r0, r3
 8006d54:	f011 f82a 	bl	8017dac <_ZN6SymbolleES_>
 8006d58:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8006d5c:	4618      	mov	r0, r3
 8006d5e:	f7ff fdab 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006d62:	e021      	b.n	8006da8 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		default:
			Transmitter::report_error("relation operator");
 8006d64:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8006d68:	4618      	mov	r0, r3
 8006d6a:	f01b ff7e 	bl	8022c6a <_ZNSaIcEC1Ev>
 8006d6e:	f107 02cc 	add.w	r2, r7, #204	; 0xcc
 8006d72:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8006d76:	4911      	ldr	r1, [pc, #68]	; (8006dbc <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x150>)
 8006d78:	4618      	mov	r0, r3
 8006d7a:	f7fa fb06 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8006d7e:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8006d82:	4618      	mov	r0, r3
 8006d84:	f012 f862 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8006d88:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8006d8c:	4618      	mov	r0, r3
 8006d8e:	f01c f932 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8006d92:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8006d96:	4618      	mov	r0, r3
 8006d98:	f01b ff68 	bl	8022c6c <_ZNSaIcED1Ev>
		}
	}

	return var;
 8006d9c:	f107 0314 	add.w	r3, r7, #20
 8006da0:	4619      	mov	r1, r3
 8006da2:	68f8      	ldr	r0, [r7, #12]
 8006da4:	f7ff fe0c 	bl	80069c0 <_ZN6SymbolC1EOS_>
	Symbol var = evaluate(rel_exp->left_sum_exp);
 8006da8:	f107 0314 	add.w	r3, r7, #20
 8006dac:	4618      	mov	r0, r3
 8006dae:	f7ff fd83 	bl	80068b8 <_ZN6SymbolD1Ev>
}
 8006db2:	68f8      	ldr	r0, [r7, #12]
 8006db4:	37d0      	adds	r7, #208	; 0xd0
 8006db6:	46bd      	mov	sp, r7
 8006db8:	bd80      	pop	{r7, pc}
 8006dba:	bf00      	nop
 8006dbc:	08027440 	.word	0x08027440

08006dc0 <_ZN21Expression_calculator8evaluateEP14Sum_expression>:

Symbol Expression_calculator::evaluate(Sum_expression *sum_exp)
{
 8006dc0:	b580      	push	{r7, lr}
 8006dc2:	b0a6      	sub	sp, #152	; 0x98
 8006dc4:	af00      	add	r7, sp, #0
 8006dc6:	60f8      	str	r0, [r7, #12]
 8006dc8:	60b9      	str	r1, [r7, #8]
 8006dca:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(sum_exp->mult_exps[0]);
 8006dcc:	687b      	ldr	r3, [r7, #4]
 8006dce:	2100      	movs	r1, #0
 8006dd0:	4618      	mov	r0, r3
 8006dd2:	f001 f860 	bl	8007e96 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 8006dd6:	4603      	mov	r3, r0
 8006dd8:	681a      	ldr	r2, [r3, #0]
 8006dda:	68fb      	ldr	r3, [r7, #12]
 8006ddc:	68b9      	ldr	r1, [r7, #8]
 8006dde:	4618      	mov	r0, r3
 8006de0:	f000 f87e 	bl	8006ee0 <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
	for (unsigned int i = 0; i < sum_exp->ops.size(); ++i)
 8006de4:	2300      	movs	r3, #0
 8006de6:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8006dea:	687b      	ldr	r3, [r7, #4]
 8006dec:	330c      	adds	r3, #12
 8006dee:	4618      	mov	r0, r3
 8006df0:	f001 f861 	bl	8007eb6 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 8006df4:	4602      	mov	r2, r0
 8006df6:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8006dfa:	4293      	cmp	r3, r2
 8006dfc:	bf34      	ite	cc
 8006dfe:	2301      	movcc	r3, #1
 8006e00:	2300      	movcs	r3, #0
 8006e02:	b2db      	uxtb	r3, r3
 8006e04:	2b00      	cmp	r3, #0
 8006e06:	d066      	beq.n	8006ed6 <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x116>
	{
		if (sum_exp->ops[i] == SUM_OP_PLUS)
 8006e08:	687b      	ldr	r3, [r7, #4]
 8006e0a:	330c      	adds	r3, #12
 8006e0c:	f8d7 1094 	ldr.w	r1, [r7, #148]	; 0x94
 8006e10:	4618      	mov	r0, r3
 8006e12:	f001 f85f 	bl	8007ed4 <_ZNSt6vectorI12sum_operatorSaIS0_EEixEj>
 8006e16:	4603      	mov	r3, r0
 8006e18:	781b      	ldrb	r3, [r3, #0]
 8006e1a:	2b00      	cmp	r3, #0
 8006e1c:	bf0c      	ite	eq
 8006e1e:	2301      	moveq	r3, #1
 8006e20:	2300      	movne	r3, #0
 8006e22:	b2db      	uxtb	r3, r3
 8006e24:	2b00      	cmp	r3, #0
 8006e26:	d028      	beq.n	8006e7a <_ZN21Expression_calculator8evaluateEP14Sum_expression+0xba>
		{
			var = var + evaluate(sum_exp->mult_exps[i + 1]);
 8006e28:	687a      	ldr	r2, [r7, #4]
 8006e2a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8006e2e:	3301      	adds	r3, #1
 8006e30:	4619      	mov	r1, r3
 8006e32:	4610      	mov	r0, r2
 8006e34:	f001 f82f 	bl	8007e96 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 8006e38:	4603      	mov	r3, r0
 8006e3a:	681a      	ldr	r2, [r3, #0]
 8006e3c:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8006e40:	68b9      	ldr	r1, [r7, #8]
 8006e42:	4618      	mov	r0, r3
 8006e44:	f000 f84c 	bl	8006ee0 <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
 8006e48:	f107 0314 	add.w	r3, r7, #20
 8006e4c:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8006e50:	68f9      	ldr	r1, [r7, #12]
 8006e52:	4618      	mov	r0, r3
 8006e54:	f010 fc5a 	bl	801770c <_ZN6SymbolplES_>
 8006e58:	f107 0314 	add.w	r3, r7, #20
 8006e5c:	4619      	mov	r1, r3
 8006e5e:	68f8      	ldr	r0, [r7, #12]
 8006e60:	f7ff fd58 	bl	8006914 <_ZN6SymbolaSEOS_>
 8006e64:	f107 0314 	add.w	r3, r7, #20
 8006e68:	4618      	mov	r0, r3
 8006e6a:	f7ff fd25 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006e6e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8006e72:	4618      	mov	r0, r3
 8006e74:	f7ff fd20 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006e78:	e027      	b.n	8006eca <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x10a>
		}
		else
		{
			var = var - evaluate(sum_exp->mult_exps[i + 1]);
 8006e7a:	687a      	ldr	r2, [r7, #4]
 8006e7c:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8006e80:	3301      	adds	r3, #1
 8006e82:	4619      	mov	r1, r3
 8006e84:	4610      	mov	r0, r2
 8006e86:	f001 f806 	bl	8007e96 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 8006e8a:	4603      	mov	r3, r0
 8006e8c:	681a      	ldr	r2, [r3, #0]
 8006e8e:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8006e92:	68b9      	ldr	r1, [r7, #8]
 8006e94:	4618      	mov	r0, r3
 8006e96:	f000 f823 	bl	8006ee0 <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
 8006e9a:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8006e9e:	f107 0274 	add.w	r2, r7, #116	; 0x74
 8006ea2:	68f9      	ldr	r1, [r7, #12]
 8006ea4:	4618      	mov	r0, r3
 8006ea6:	f010 fcc5 	bl	8017834 <_ZN6SymbolmiES_>
 8006eaa:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8006eae:	4619      	mov	r1, r3
 8006eb0:	68f8      	ldr	r0, [r7, #12]
 8006eb2:	f7ff fd2f 	bl	8006914 <_ZN6SymbolaSEOS_>
 8006eb6:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8006eba:	4618      	mov	r0, r3
 8006ebc:	f7ff fcfc 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006ec0:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8006ec4:	4618      	mov	r0, r3
 8006ec6:	f7ff fcf7 	bl	80068b8 <_ZN6SymbolD1Ev>
	for (unsigned int i = 0; i < sum_exp->ops.size(); ++i)
 8006eca:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8006ece:	3301      	adds	r3, #1
 8006ed0:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8006ed4:	e789      	b.n	8006dea <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x2a>
		}
	}
	return var;
 8006ed6:	bf00      	nop
}
 8006ed8:	68f8      	ldr	r0, [r7, #12]
 8006eda:	3798      	adds	r7, #152	; 0x98
 8006edc:	46bd      	mov	sp, r7
 8006ede:	bd80      	pop	{r7, pc}

08006ee0 <_ZN21Expression_calculator8evaluateEP19Multiply_expression>:

Symbol Expression_calculator::evaluate(Multiply_expression *mult_exp)
{
 8006ee0:	b580      	push	{r7, lr}
 8006ee2:	b0b6      	sub	sp, #216	; 0xd8
 8006ee4:	af00      	add	r7, sp, #0
 8006ee6:	60f8      	str	r0, [r7, #12]
 8006ee8:	60b9      	str	r1, [r7, #8]
 8006eea:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(mult_exp->pow_exps[0]);
 8006eec:	687b      	ldr	r3, [r7, #4]
 8006eee:	2100      	movs	r1, #0
 8006ef0:	4618      	mov	r0, r3
 8006ef2:	f000 fffe 	bl	8007ef2 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 8006ef6:	4603      	mov	r3, r0
 8006ef8:	681a      	ldr	r2, [r3, #0]
 8006efa:	68fb      	ldr	r3, [r7, #12]
 8006efc:	68b9      	ldr	r1, [r7, #8]
 8006efe:	4618      	mov	r0, r3
 8006f00:	f000 f91e 	bl	8007140 <_ZN21Expression_calculator8evaluateEP16Power_expression>
	for (unsigned int i = 0; i < mult_exp->ops.size(); ++i)
 8006f04:	2300      	movs	r3, #0
 8006f06:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8006f0a:	687b      	ldr	r3, [r7, #4]
 8006f0c:	330c      	adds	r3, #12
 8006f0e:	4618      	mov	r0, r3
 8006f10:	f000 ffff 	bl	8007f12 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 8006f14:	4602      	mov	r2, r0
 8006f16:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8006f1a:	4293      	cmp	r3, r2
 8006f1c:	bf34      	ite	cc
 8006f1e:	2301      	movcc	r3, #1
 8006f20:	2300      	movcs	r3, #0
 8006f22:	b2db      	uxtb	r3, r3
 8006f24:	2b00      	cmp	r3, #0
 8006f26:	f000 80a0 	beq.w	800706a <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x18a>
	{
		if (mult_exp->ops[i] == MULT_OP_MULTIPLY)
 8006f2a:	687b      	ldr	r3, [r7, #4]
 8006f2c:	330c      	adds	r3, #12
 8006f2e:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 8006f32:	4618      	mov	r0, r3
 8006f34:	f000 fffc 	bl	8007f30 <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>
 8006f38:	4603      	mov	r3, r0
 8006f3a:	781b      	ldrb	r3, [r3, #0]
 8006f3c:	2b01      	cmp	r3, #1
 8006f3e:	bf0c      	ite	eq
 8006f40:	2301      	moveq	r3, #1
 8006f42:	2300      	movne	r3, #0
 8006f44:	b2db      	uxtb	r3, r3
 8006f46:	2b00      	cmp	r3, #0
 8006f48:	d028      	beq.n	8006f9c <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0xbc>
		{
			var = var * evaluate(mult_exp->pow_exps[i + 1]);
 8006f4a:	687a      	ldr	r2, [r7, #4]
 8006f4c:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8006f50:	3301      	adds	r3, #1
 8006f52:	4619      	mov	r1, r3
 8006f54:	4610      	mov	r0, r2
 8006f56:	f000 ffcc 	bl	8007ef2 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 8006f5a:	4603      	mov	r3, r0
 8006f5c:	681a      	ldr	r2, [r3, #0]
 8006f5e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8006f62:	68b9      	ldr	r1, [r7, #8]
 8006f64:	4618      	mov	r0, r3
 8006f66:	f000 f8eb 	bl	8007140 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 8006f6a:	f107 0314 	add.w	r3, r7, #20
 8006f6e:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8006f72:	68f9      	ldr	r1, [r7, #12]
 8006f74:	4618      	mov	r0, r3
 8006f76:	f011 f88b 	bl	8018090 <_ZN6SymbolmlES_>
 8006f7a:	f107 0314 	add.w	r3, r7, #20
 8006f7e:	4619      	mov	r1, r3
 8006f80:	68f8      	ldr	r0, [r7, #12]
 8006f82:	f7ff fcc7 	bl	8006914 <_ZN6SymbolaSEOS_>
 8006f86:	f107 0314 	add.w	r3, r7, #20
 8006f8a:	4618      	mov	r0, r3
 8006f8c:	f7ff fc94 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006f90:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8006f94:	4618      	mov	r0, r3
 8006f96:	f7ff fc8f 	bl	80068b8 <_ZN6SymbolD1Ev>
 8006f9a:	e060      	b.n	800705e <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x17e>
		}
		else if (mult_exp->ops[i] == MULT_OP_DIVIDE)
 8006f9c:	687b      	ldr	r3, [r7, #4]
 8006f9e:	330c      	adds	r3, #12
 8006fa0:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 8006fa4:	4618      	mov	r0, r3
 8006fa6:	f000 ffc3 	bl	8007f30 <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>
 8006faa:	4603      	mov	r3, r0
 8006fac:	781b      	ldrb	r3, [r3, #0]
 8006fae:	2b02      	cmp	r3, #2
 8006fb0:	bf0c      	ite	eq
 8006fb2:	2301      	moveq	r3, #1
 8006fb4:	2300      	movne	r3, #0
 8006fb6:	b2db      	uxtb	r3, r3
 8006fb8:	2b00      	cmp	r3, #0
 8006fba:	d028      	beq.n	800700e <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x12e>
		{
			var = var / evaluate(mult_exp->pow_exps[i + 1]);
 8006fbc:	687a      	ldr	r2, [r7, #4]
 8006fbe:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8006fc2:	3301      	adds	r3, #1
 8006fc4:	4619      	mov	r1, r3
 8006fc6:	4610      	mov	r0, r2
 8006fc8:	f000 ff93 	bl	8007ef2 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 8006fcc:	4603      	mov	r3, r0
 8006fce:	681a      	ldr	r2, [r3, #0]
 8006fd0:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8006fd4:	68b9      	ldr	r1, [r7, #8]
 8006fd6:	4618      	mov	r0, r3
 8006fd8:	f000 f8b2 	bl	8007140 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 8006fdc:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8006fe0:	f107 0274 	add.w	r2, r7, #116	; 0x74
 8006fe4:	68f9      	ldr	r1, [r7, #12]
 8006fe6:	4618      	mov	r0, r3
 8006fe8:	f011 f8c6 	bl	8018178 <_ZN6SymboldvES_>
 8006fec:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8006ff0:	4619      	mov	r1, r3
 8006ff2:	68f8      	ldr	r0, [r7, #12]
 8006ff4:	f7ff fc8e 	bl	8006914 <_ZN6SymbolaSEOS_>
 8006ff8:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8006ffc:	4618      	mov	r0, r3
 8006ffe:	f7ff fc5b 	bl	80068b8 <_ZN6SymbolD1Ev>
 8007002:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8007006:	4618      	mov	r0, r3
 8007008:	f7ff fc56 	bl	80068b8 <_ZN6SymbolD1Ev>
 800700c:	e027      	b.n	800705e <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x17e>
		}
		else
		{
			var = var % evaluate(mult_exp->pow_exps[i + 1]);
 800700e:	687a      	ldr	r2, [r7, #4]
 8007010:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8007014:	3301      	adds	r3, #1
 8007016:	4619      	mov	r1, r3
 8007018:	4610      	mov	r0, r2
 800701a:	f000 ff6a 	bl	8007ef2 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800701e:	4603      	mov	r3, r0
 8007020:	681a      	ldr	r2, [r3, #0]
 8007022:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8007026:	68b9      	ldr	r1, [r7, #8]
 8007028:	4618      	mov	r0, r3
 800702a:	f000 f889 	bl	8007140 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 800702e:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8007032:	f107 02b4 	add.w	r2, r7, #180	; 0xb4
 8007036:	68f9      	ldr	r1, [r7, #12]
 8007038:	4618      	mov	r0, r3
 800703a:	f011 f911 	bl	8018260 <_ZN6SymbolrmES_>
 800703e:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8007042:	4619      	mov	r1, r3
 8007044:	68f8      	ldr	r0, [r7, #12]
 8007046:	f7ff fc65 	bl	8006914 <_ZN6SymbolaSEOS_>
 800704a:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800704e:	4618      	mov	r0, r3
 8007050:	f7ff fc32 	bl	80068b8 <_ZN6SymbolD1Ev>
 8007054:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8007058:	4618      	mov	r0, r3
 800705a:	f7ff fc2d 	bl	80068b8 <_ZN6SymbolD1Ev>
	for (unsigned int i = 0; i < mult_exp->ops.size(); ++i)
 800705e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8007062:	3301      	adds	r3, #1
 8007064:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8007068:	e74f      	b.n	8006f0a <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x2a>
		}
	}
	return var;
 800706a:	bf00      	nop
}
 800706c:	68f8      	ldr	r0, [r7, #12]
 800706e:	37d8      	adds	r7, #216	; 0xd8
 8007070:	46bd      	mov	sp, r7
 8007072:	bd80      	pop	{r7, pc}

08007074 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ERKSE_>:
      _Move_ctor_base(const _Move_ctor_base&) = default;
 8007074:	b580      	push	{r7, lr}
 8007076:	b082      	sub	sp, #8
 8007078:	af00      	add	r7, sp, #0
 800707a:	6078      	str	r0, [r7, #4]
 800707c:	6039      	str	r1, [r7, #0]
 800707e:	687b      	ldr	r3, [r7, #4]
 8007080:	683a      	ldr	r2, [r7, #0]
 8007082:	4611      	mov	r1, r2
 8007084:	4618      	mov	r0, r3
 8007086:	f000 ff62 	bl	8007f4e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ERKSE_>
 800708a:	687b      	ldr	r3, [r7, #4]
 800708c:	4618      	mov	r0, r3
 800708e:	3708      	adds	r7, #8
 8007090:	46bd      	mov	sp, r7
 8007092:	bd80      	pop	{r7, pc}

08007094 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ERKSE_>:
      _Copy_assign_base(const _Copy_assign_base&) = default;
 8007094:	b580      	push	{r7, lr}
 8007096:	b082      	sub	sp, #8
 8007098:	af00      	add	r7, sp, #0
 800709a:	6078      	str	r0, [r7, #4]
 800709c:	6039      	str	r1, [r7, #0]
 800709e:	687b      	ldr	r3, [r7, #4]
 80070a0:	683a      	ldr	r2, [r7, #0]
 80070a2:	4611      	mov	r1, r2
 80070a4:	4618      	mov	r0, r3
 80070a6:	f7ff ffe5 	bl	8007074 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ERKSE_>
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	4618      	mov	r0, r3
 80070ae:	3708      	adds	r7, #8
 80070b0:	46bd      	mov	sp, r7
 80070b2:	bd80      	pop	{r7, pc}

080070b4 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ERKSE_>:
      _Move_assign_base(const _Move_assign_base&) = default;
 80070b4:	b580      	push	{r7, lr}
 80070b6:	b082      	sub	sp, #8
 80070b8:	af00      	add	r7, sp, #0
 80070ba:	6078      	str	r0, [r7, #4]
 80070bc:	6039      	str	r1, [r7, #0]
 80070be:	687b      	ldr	r3, [r7, #4]
 80070c0:	683a      	ldr	r2, [r7, #0]
 80070c2:	4611      	mov	r1, r2
 80070c4:	4618      	mov	r0, r3
 80070c6:	f7ff ffe5 	bl	8007094 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ERKSE_>
 80070ca:	687b      	ldr	r3, [r7, #4]
 80070cc:	4618      	mov	r0, r3
 80070ce:	3708      	adds	r7, #8
 80070d0:	46bd      	mov	sp, r7
 80070d2:	bd80      	pop	{r7, pc}

080070d4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ERKSE_>:
      _Variant_base(const _Variant_base&) = default;
 80070d4:	b580      	push	{r7, lr}
 80070d6:	b082      	sub	sp, #8
 80070d8:	af00      	add	r7, sp, #0
 80070da:	6078      	str	r0, [r7, #4]
 80070dc:	6039      	str	r1, [r7, #0]
 80070de:	687b      	ldr	r3, [r7, #4]
 80070e0:	683a      	ldr	r2, [r7, #0]
 80070e2:	4611      	mov	r1, r2
 80070e4:	4618      	mov	r0, r3
 80070e6:	f7ff ffe5 	bl	80070b4 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ERKSE_>
 80070ea:	687b      	ldr	r3, [r7, #4]
 80070ec:	4618      	mov	r0, r3
 80070ee:	3708      	adds	r7, #8
 80070f0:	46bd      	mov	sp, r7
 80070f2:	bd80      	pop	{r7, pc}

080070f4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1ERKSC_>:
      variant(const variant& __rhs) = default;
 80070f4:	b580      	push	{r7, lr}
 80070f6:	b082      	sub	sp, #8
 80070f8:	af00      	add	r7, sp, #0
 80070fa:	6078      	str	r0, [r7, #4]
 80070fc:	6039      	str	r1, [r7, #0]
 80070fe:	687b      	ldr	r3, [r7, #4]
 8007100:	683a      	ldr	r2, [r7, #0]
 8007102:	4611      	mov	r1, r2
 8007104:	4618      	mov	r0, r3
 8007106:	f7ff ffe5 	bl	80070d4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ERKSE_>
 800710a:	687b      	ldr	r3, [r7, #4]
 800710c:	4618      	mov	r0, r3
 800710e:	3708      	adds	r7, #8
 8007110:	46bd      	mov	sp, r7
 8007112:	bd80      	pop	{r7, pc}

08007114 <_ZN6SymbolC1ERKS_>:
 8007114:	b580      	push	{r7, lr}
 8007116:	b082      	sub	sp, #8
 8007118:	af00      	add	r7, sp, #0
 800711a:	6078      	str	r0, [r7, #4]
 800711c:	6039      	str	r1, [r7, #0]
 800711e:	683b      	ldr	r3, [r7, #0]
 8007120:	781a      	ldrb	r2, [r3, #0]
 8007122:	687b      	ldr	r3, [r7, #4]
 8007124:	701a      	strb	r2, [r3, #0]
 8007126:	687b      	ldr	r3, [r7, #4]
 8007128:	1d1a      	adds	r2, r3, #4
 800712a:	683b      	ldr	r3, [r7, #0]
 800712c:	3304      	adds	r3, #4
 800712e:	4619      	mov	r1, r3
 8007130:	4610      	mov	r0, r2
 8007132:	f7ff ffdf 	bl	80070f4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1ERKSC_>
 8007136:	687b      	ldr	r3, [r7, #4]
 8007138:	4618      	mov	r0, r3
 800713a:	3708      	adds	r7, #8
 800713c:	46bd      	mov	sp, r7
 800713e:	bd80      	pop	{r7, pc}

08007140 <_ZN21Expression_calculator8evaluateEP16Power_expression>:

Symbol Expression_calculator::evaluate(Power_expression *pow_exp)
{
 8007140:	b580      	push	{r7, lr}
 8007142:	b09c      	sub	sp, #112	; 0x70
 8007144:	af00      	add	r7, sp, #0
 8007146:	60f8      	str	r0, [r7, #12]
 8007148:	60b9      	str	r1, [r7, #8]
 800714a:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(pow_exp->left_un_exp);
 800714c:	687b      	ldr	r3, [r7, #4]
 800714e:	681a      	ldr	r2, [r3, #0]
 8007150:	68fb      	ldr	r3, [r7, #12]
 8007152:	68b9      	ldr	r1, [r7, #8]
 8007154:	4618      	mov	r0, r3
 8007156:	f000 f836 	bl	80071c6 <_ZN21Expression_calculator8evaluateEP16Unary_expression>

	if (pow_exp->right_un_exp)
 800715a:	687b      	ldr	r3, [r7, #4]
 800715c:	685b      	ldr	r3, [r3, #4]
 800715e:	2b00      	cmp	r3, #0
 8007160:	d02c      	beq.n	80071bc <_ZN21Expression_calculator8evaluateEP16Power_expression+0x7c>
	{
		Symbol temp = evaluate(pow_exp->right_un_exp);
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	685a      	ldr	r2, [r3, #4]
 8007166:	f107 0310 	add.w	r3, r7, #16
 800716a:	68b9      	ldr	r1, [r7, #8]
 800716c:	4618      	mov	r0, r3
 800716e:	f000 f82a 	bl	80071c6 <_ZN21Expression_calculator8evaluateEP16Unary_expression>
		var = var ^ temp;
 8007172:	f107 0210 	add.w	r2, r7, #16
 8007176:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800717a:	4611      	mov	r1, r2
 800717c:	4618      	mov	r0, r3
 800717e:	f7ff ffc9 	bl	8007114 <_ZN6SymbolC1ERKS_>
 8007182:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8007186:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800718a:	68f9      	ldr	r1, [r7, #12]
 800718c:	4618      	mov	r0, r3
 800718e:	f011 f8c5 	bl	801831c <_ZN6SymboleoES_>
 8007192:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8007196:	4619      	mov	r1, r3
 8007198:	68f8      	ldr	r0, [r7, #12]
 800719a:	f7ff fbbb 	bl	8006914 <_ZN6SymbolaSEOS_>
 800719e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80071a2:	4618      	mov	r0, r3
 80071a4:	f7ff fb88 	bl	80068b8 <_ZN6SymbolD1Ev>
 80071a8:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80071ac:	4618      	mov	r0, r3
 80071ae:	f7ff fb83 	bl	80068b8 <_ZN6SymbolD1Ev>
		Symbol temp = evaluate(pow_exp->right_un_exp);
 80071b2:	f107 0310 	add.w	r3, r7, #16
 80071b6:	4618      	mov	r0, r3
 80071b8:	f7ff fb7e 	bl	80068b8 <_ZN6SymbolD1Ev>
	}

	return var;
 80071bc:	bf00      	nop
}
 80071be:	68f8      	ldr	r0, [r7, #12]
 80071c0:	3770      	adds	r7, #112	; 0x70
 80071c2:	46bd      	mov	sp, r7
 80071c4:	bd80      	pop	{r7, pc}

080071c6 <_ZN21Expression_calculator8evaluateEP16Unary_expression>:

Symbol Expression_calculator::evaluate(Unary_expression *un_exp)
{
 80071c6:	b580      	push	{r7, lr}
 80071c8:	b094      	sub	sp, #80	; 0x50
 80071ca:	af00      	add	r7, sp, #0
 80071cc:	60f8      	str	r0, [r7, #12]
 80071ce:	60b9      	str	r1, [r7, #8]
 80071d0:	607a      	str	r2, [r7, #4]
	switch (un_exp->op)
 80071d2:	687b      	ldr	r3, [r7, #4]
 80071d4:	791b      	ldrb	r3, [r3, #4]
 80071d6:	2b00      	cmp	r3, #0
 80071d8:	d002      	beq.n	80071e0 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x1a>
 80071da:	2b01      	cmp	r3, #1
 80071dc:	d008      	beq.n	80071f0 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x2a>
 80071de:	e01c      	b.n	800721a <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x54>
	{
	case UN_OP_NONE:
		return evaluate(un_exp->prior_exp);
 80071e0:	687b      	ldr	r3, [r7, #4]
 80071e2:	681a      	ldr	r2, [r3, #0]
 80071e4:	68fb      	ldr	r3, [r7, #12]
 80071e6:	68b9      	ldr	r1, [r7, #8]
 80071e8:	4618      	mov	r0, r3
 80071ea:	f000 f82e 	bl	800724a <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 80071ee:	e028      	b.n	8007242 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x7c>
	case UN_OP_MINUS:
		return -evaluate(un_exp->prior_exp);
 80071f0:	687b      	ldr	r3, [r7, #4]
 80071f2:	681a      	ldr	r2, [r3, #0]
 80071f4:	f107 0310 	add.w	r3, r7, #16
 80071f8:	68b9      	ldr	r1, [r7, #8]
 80071fa:	4618      	mov	r0, r3
 80071fc:	f000 f825 	bl	800724a <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 8007200:	68fb      	ldr	r3, [r7, #12]
 8007202:	f107 0210 	add.w	r2, r7, #16
 8007206:	4611      	mov	r1, r2
 8007208:	4618      	mov	r0, r3
 800720a:	f010 fee7 	bl	8017fdc <_ZN6SymbolngEv>
 800720e:	f107 0310 	add.w	r3, r7, #16
 8007212:	4618      	mov	r0, r3
 8007214:	f7ff fb50 	bl	80068b8 <_ZN6SymbolD1Ev>
 8007218:	e013      	b.n	8007242 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x7c>
	default:
		return !evaluate(un_exp->prior_exp);
 800721a:	687b      	ldr	r3, [r7, #4]
 800721c:	681a      	ldr	r2, [r3, #0]
 800721e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8007222:	68b9      	ldr	r1, [r7, #8]
 8007224:	4618      	mov	r0, r3
 8007226:	f000 f810 	bl	800724a <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 800722a:	68fb      	ldr	r3, [r7, #12]
 800722c:	f107 0230 	add.w	r2, r7, #48	; 0x30
 8007230:	4611      	mov	r1, r2
 8007232:	4618      	mov	r0, r3
 8007234:	f010 fc04 	bl	8017a40 <_ZN6SymbolntEv>
 8007238:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800723c:	4618      	mov	r0, r3
 800723e:	f7ff fb3b 	bl	80068b8 <_ZN6SymbolD1Ev>
	}
}
 8007242:	68f8      	ldr	r0, [r7, #12]
 8007244:	3750      	adds	r7, #80	; 0x50
 8007246:	46bd      	mov	sp, r7
 8007248:	bd80      	pop	{r7, pc}

0800724a <_ZN21Expression_calculator8evaluateEP19Priority_expression>:

Symbol Expression_calculator::evaluate(Priority_expression *prior_exp)
{
 800724a:	b580      	push	{r7, lr}
 800724c:	b086      	sub	sp, #24
 800724e:	af00      	add	r7, sp, #0
 8007250:	60f8      	str	r0, [r7, #12]
 8007252:	60b9      	str	r1, [r7, #8]
 8007254:	607a      	str	r2, [r7, #4]
	if (std::holds_alternative<Expression*>(prior_exp->exp))
 8007256:	687b      	ldr	r3, [r7, #4]
 8007258:	4618      	mov	r0, r3
 800725a:	f7fd fa50 	bl	80046fe <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>
 800725e:	4603      	mov	r3, r0
 8007260:	2b00      	cmp	r3, #0
 8007262:	d00d      	beq.n	8007280 <_ZN21Expression_calculator8evaluateEP19Priority_expression+0x36>
	{
		Expression *exp = std::get<Expression*>(prior_exp->exp);
 8007264:	687b      	ldr	r3, [r7, #4]
 8007266:	4618      	mov	r0, r3
 8007268:	f7fd fa5a 	bl	8004720 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>
 800726c:	4603      	mov	r3, r0
 800726e:	681b      	ldr	r3, [r3, #0]
 8007270:	613b      	str	r3, [r7, #16]
		return evaluate(exp);
 8007272:	68fb      	ldr	r3, [r7, #12]
 8007274:	693a      	ldr	r2, [r7, #16]
 8007276:	68b9      	ldr	r1, [r7, #8]
 8007278:	4618      	mov	r0, r3
 800727a:	f7ff fbb7 	bl	80069ec <_ZN21Expression_calculator8evaluateEP10Expression>
 800727e:	e00c      	b.n	800729a <_ZN21Expression_calculator8evaluateEP19Priority_expression+0x50>
	}
	else
	{
		Primal_expression *exp = std::get<Primal_expression*>(prior_exp->exp);
 8007280:	687b      	ldr	r3, [r7, #4]
 8007282:	4618      	mov	r0, r3
 8007284:	f7fd fa58 	bl	8004738 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>
 8007288:	4603      	mov	r3, r0
 800728a:	681b      	ldr	r3, [r3, #0]
 800728c:	617b      	str	r3, [r7, #20]
		return evaluate(exp);
 800728e:	68fb      	ldr	r3, [r7, #12]
 8007290:	697a      	ldr	r2, [r7, #20]
 8007292:	68b9      	ldr	r1, [r7, #8]
 8007294:	4618      	mov	r0, r3
 8007296:	f000 f805 	bl	80072a4 <_ZN21Expression_calculator8evaluateEP17Primal_expression>
	}
}
 800729a:	68f8      	ldr	r0, [r7, #12]
 800729c:	3718      	adds	r7, #24
 800729e:	46bd      	mov	sp, r7
 80072a0:	bd80      	pop	{r7, pc}
	...

080072a4 <_ZN21Expression_calculator8evaluateEP17Primal_expression>:

Symbol Expression_calculator::evaluate(Primal_expression *primal_exp)
{
 80072a4:	b580      	push	{r7, lr}
 80072a6:	b08a      	sub	sp, #40	; 0x28
 80072a8:	af00      	add	r7, sp, #0
 80072aa:	60f8      	str	r0, [r7, #12]
 80072ac:	60b9      	str	r1, [r7, #8]
 80072ae:	607a      	str	r2, [r7, #4]
	switch (primal_exp->type)
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	781b      	ldrb	r3, [r3, #0]
 80072b4:	2b05      	cmp	r3, #5
 80072b6:	d867      	bhi.n	8007388 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xe4>
 80072b8:	a201      	add	r2, pc, #4	; (adr r2, 80072c0 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0x1c>)
 80072ba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80072be:	bf00      	nop
 80072c0:	0800733d 	.word	0x0800733d
 80072c4:	080072d9 	.word	0x080072d9
 80072c8:	080072f1 	.word	0x080072f1
 80072cc:	0800730d 	.word	0x0800730d
 80072d0:	08007355 	.word	0x08007355
 80072d4:	0800736f 	.word	0x0800736f
	{
	case PRIMAL_INT:
		return std::get<int>(primal_exp->content);
 80072d8:	687b      	ldr	r3, [r7, #4]
 80072da:	3304      	adds	r3, #4
 80072dc:	4618      	mov	r0, r3
 80072de:	f000 fe48 	bl	8007f72 <_ZSt3getIiJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 80072e2:	4603      	mov	r3, r0
 80072e4:	681b      	ldr	r3, [r3, #0]
 80072e6:	4619      	mov	r1, r3
 80072e8:	68f8      	ldr	r0, [r7, #12]
 80072ea:	f010 f8ab 	bl	8017444 <_ZN6SymbolC1Ei>
 80072ee:	e04f      	b.n	8007390 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_FLOAT:
		return std::get<float>(primal_exp->content);
 80072f0:	687b      	ldr	r3, [r7, #4]
 80072f2:	3304      	adds	r3, #4
 80072f4:	4618      	mov	r0, r3
 80072f6:	f000 fe48 	bl	8007f8a <_ZSt3getIfJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 80072fa:	4603      	mov	r3, r0
 80072fc:	edd3 7a00 	vldr	s15, [r3]
 8007300:	eeb0 0a67 	vmov.f32	s0, s15
 8007304:	68f8      	ldr	r0, [r7, #12]
 8007306:	f010 f8b6 	bl	8017476 <_ZN6SymbolC1Ef>
 800730a:	e041      	b.n	8007390 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_STRING:
		return std::get<std::string>(primal_exp->content);
 800730c:	687b      	ldr	r3, [r7, #4]
 800730e:	3304      	adds	r3, #4
 8007310:	4618      	mov	r0, r3
 8007312:	f000 fe46 	bl	8007fa2 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJbifS5_P8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 8007316:	4602      	mov	r2, r0
 8007318:	f107 0310 	add.w	r3, r7, #16
 800731c:	4611      	mov	r1, r2
 800731e:	4618      	mov	r0, r3
 8007320:	f01b ff9a 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8007324:	f107 0310 	add.w	r3, r7, #16
 8007328:	4619      	mov	r1, r3
 800732a:	68f8      	ldr	r0, [r7, #12]
 800732c:	f010 f8d7 	bl	80174de <_ZN6SymbolC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8007330:	f107 0310 	add.w	r3, r7, #16
 8007334:	4618      	mov	r0, r3
 8007336:	f01b fe5e 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800733a:	e029      	b.n	8007390 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_BOOL:
		return std::get<bool>(primal_exp->content);
 800733c:	687b      	ldr	r3, [r7, #4]
 800733e:	3304      	adds	r3, #4
 8007340:	4618      	mov	r0, r3
 8007342:	f000 fe3a 	bl	8007fba <_ZSt3getIbJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 8007346:	4603      	mov	r3, r0
 8007348:	781b      	ldrb	r3, [r3, #0]
 800734a:	4619      	mov	r1, r3
 800734c:	68f8      	ldr	r0, [r7, #12]
 800734e:	f010 f8ac 	bl	80174aa <_ZN6SymbolC1Eb>
 8007352:	e01d      	b.n	8007390 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_VARIABLE:
		return evaluate(std::get<Variable*>(primal_exp->content));
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	3304      	adds	r3, #4
 8007358:	4618      	mov	r0, r3
 800735a:	f7fd f994 	bl	8004686 <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>
 800735e:	4603      	mov	r3, r0
 8007360:	681a      	ldr	r2, [r3, #0]
 8007362:	68fb      	ldr	r3, [r7, #12]
 8007364:	68b9      	ldr	r1, [r7, #8]
 8007366:	4618      	mov	r0, r3
 8007368:	f000 f877 	bl	800745a <_ZN21Expression_calculator8evaluateEP8Variable>
 800736c:	e010      	b.n	8007390 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_FUNCTION_CALL:
		return Function_handler::run_function(
				std::get<Function_call*>(primal_exp->content));
 800736e:	687b      	ldr	r3, [r7, #4]
 8007370:	3304      	adds	r3, #4
 8007372:	4618      	mov	r0, r3
 8007374:	f7fd f9a4 	bl	80046c0 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>
 8007378:	4603      	mov	r3, r0
 800737a:	681a      	ldr	r2, [r3, #0]
 800737c:	68fb      	ldr	r3, [r7, #12]
 800737e:	4611      	mov	r1, r2
 8007380:	4618      	mov	r0, r3
 8007382:	f007 ff0d 	bl	800f1a0 <_ZN16Function_handler12run_functionEP13Function_call>
 8007386:	e003      	b.n	8007390 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	}
	return 0;
 8007388:	2100      	movs	r1, #0
 800738a:	68f8      	ldr	r0, [r7, #12]
 800738c:	f010 f85a 	bl	8017444 <_ZN6SymbolC1Ei>
}
 8007390:	68f8      	ldr	r0, [r7, #12]
 8007392:	3728      	adds	r7, #40	; 0x28
 8007394:	46bd      	mov	sp, r7
 8007396:	bd80      	pop	{r7, pc}

08007398 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1Ev>:
      variant() = default;
 8007398:	b580      	push	{r7, lr}
 800739a:	b082      	sub	sp, #8
 800739c:	af00      	add	r7, sp, #0
 800739e:	6078      	str	r0, [r7, #4]
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	4618      	mov	r0, r3
 80073a4:	f000 fe60 	bl	8008068 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1Ev>
 80073a8:	687b      	ldr	r3, [r7, #4]
 80073aa:	4618      	mov	r0, r3
 80073ac:	3708      	adds	r7, #8
 80073ae:	46bd      	mov	sp, r7
 80073b0:	bd80      	pop	{r7, pc}

080073b2 <_ZN6SymbolC1Ev>:
{
public:
	symbol_type type;
	symbol_value value;

	Symbol() = default;
 80073b2:	b580      	push	{r7, lr}
 80073b4:	b082      	sub	sp, #8
 80073b6:	af00      	add	r7, sp, #0
 80073b8:	6078      	str	r0, [r7, #4]
 80073ba:	687b      	ldr	r3, [r7, #4]
 80073bc:	3304      	adds	r3, #4
 80073be:	4618      	mov	r0, r3
 80073c0:	f7ff ffea 	bl	8007398 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1Ev>
 80073c4:	687b      	ldr	r3, [r7, #4]
 80073c6:	4618      	mov	r0, r3
 80073c8:	3708      	adds	r7, #8
 80073ca:	46bd      	mov	sp, r7
 80073cc:	bd80      	pop	{r7, pc}

080073ce <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 80073ce:	b580      	push	{r7, lr}
 80073d0:	b082      	sub	sp, #8
 80073d2:	af00      	add	r7, sp, #0
 80073d4:	6078      	str	r0, [r7, #4]
 80073d6:	6039      	str	r1, [r7, #0]
 80073d8:	687b      	ldr	r3, [r7, #4]
 80073da:	683a      	ldr	r2, [r7, #0]
 80073dc:	4611      	mov	r1, r2
 80073de:	4618      	mov	r0, r3
 80073e0:	f001 fa7c 	bl	80088dc <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_>
 80073e4:	687b      	ldr	r3, [r7, #4]
 80073e6:	4618      	mov	r0, r3
 80073e8:	3708      	adds	r7, #8
 80073ea:	46bd      	mov	sp, r7
 80073ec:	bd80      	pop	{r7, pc}

080073ee <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 80073ee:	b580      	push	{r7, lr}
 80073f0:	b082      	sub	sp, #8
 80073f2:	af00      	add	r7, sp, #0
 80073f4:	6078      	str	r0, [r7, #4]
 80073f6:	6039      	str	r1, [r7, #0]
 80073f8:	687b      	ldr	r3, [r7, #4]
 80073fa:	683a      	ldr	r2, [r7, #0]
 80073fc:	4611      	mov	r1, r2
 80073fe:	4618      	mov	r0, r3
 8007400:	f7ff ffe5 	bl	80073ce <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_>
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	4618      	mov	r0, r3
 8007408:	3708      	adds	r7, #8
 800740a:	46bd      	mov	sp, r7
 800740c:	bd80      	pop	{r7, pc}

0800740e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSERKSC_>:
    class variant
 800740e:	b580      	push	{r7, lr}
 8007410:	b082      	sub	sp, #8
 8007412:	af00      	add	r7, sp, #0
 8007414:	6078      	str	r0, [r7, #4]
 8007416:	6039      	str	r1, [r7, #0]
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	683a      	ldr	r2, [r7, #0]
 800741c:	4611      	mov	r1, r2
 800741e:	4618      	mov	r0, r3
 8007420:	f7ff ffe5 	bl	80073ee <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_>
 8007424:	687b      	ldr	r3, [r7, #4]
 8007426:	4618      	mov	r0, r3
 8007428:	3708      	adds	r7, #8
 800742a:	46bd      	mov	sp, r7
 800742c:	bd80      	pop	{r7, pc}

0800742e <_ZN6SymbolaSERKS_>:
class Symbol
 800742e:	b580      	push	{r7, lr}
 8007430:	b082      	sub	sp, #8
 8007432:	af00      	add	r7, sp, #0
 8007434:	6078      	str	r0, [r7, #4]
 8007436:	6039      	str	r1, [r7, #0]
 8007438:	683b      	ldr	r3, [r7, #0]
 800743a:	781a      	ldrb	r2, [r3, #0]
 800743c:	687b      	ldr	r3, [r7, #4]
 800743e:	701a      	strb	r2, [r3, #0]
 8007440:	683b      	ldr	r3, [r7, #0]
 8007442:	1d1a      	adds	r2, r3, #4
 8007444:	687b      	ldr	r3, [r7, #4]
 8007446:	3304      	adds	r3, #4
 8007448:	4611      	mov	r1, r2
 800744a:	4618      	mov	r0, r3
 800744c:	f7ff ffdf 	bl	800740e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSERKSC_>
 8007450:	687b      	ldr	r3, [r7, #4]
 8007452:	4618      	mov	r0, r3
 8007454:	3708      	adds	r7, #8
 8007456:	46bd      	mov	sp, r7
 8007458:	bd80      	pop	{r7, pc}

0800745a <_ZN21Expression_calculator8evaluateEP8Variable>:

Symbol Expression_calculator::evaluate(Variable *var)
{
 800745a:	b590      	push	{r4, r7, lr}
 800745c:	b0a7      	sub	sp, #156	; 0x9c
 800745e:	af00      	add	r7, sp, #0
 8007460:	60f8      	str	r0, [r7, #12]
 8007462:	60b9      	str	r1, [r7, #8]
 8007464:	607a      	str	r2, [r7, #4]
	Symbol s;
 8007466:	f107 0310 	add.w	r3, r7, #16
 800746a:	4618      	mov	r0, r3
 800746c:	f7ff ffa1 	bl	80073b2 <_ZN6SymbolC1Ev>

	switch (var->type)
 8007470:	687b      	ldr	r3, [r7, #4]
 8007472:	781b      	ldrb	r3, [r3, #0]
 8007474:	2b00      	cmp	r3, #0
 8007476:	d002      	beq.n	800747e <_ZN21Expression_calculator8evaluateEP8Variable+0x24>
 8007478:	2b02      	cmp	r3, #2
 800747a:	d01e      	beq.n	80074ba <_ZN21Expression_calculator8evaluateEP8Variable+0x60>
 800747c:	e03b      	b.n	80074f6 <_ZN21Expression_calculator8evaluateEP8Variable+0x9c>
	{
	case ASSIGNMENT_LOCAL:
		s = Variable_handler::get_instance().get_local(var->id);
 800747e:	f011 fdf5 	bl	801906c <_ZN16Variable_handler12get_instanceEv>
 8007482:	4604      	mov	r4, r0
 8007484:	687b      	ldr	r3, [r7, #4]
 8007486:	1d1a      	adds	r2, r3, #4
 8007488:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800748c:	4611      	mov	r1, r2
 800748e:	4618      	mov	r0, r3
 8007490:	f01b fee2 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8007494:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8007498:	4619      	mov	r1, r3
 800749a:	4620      	mov	r0, r4
 800749c:	f011 fe34 	bl	8019108 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80074a0:	4602      	mov	r2, r0
 80074a2:	f107 0310 	add.w	r3, r7, #16
 80074a6:	4611      	mov	r1, r2
 80074a8:	4618      	mov	r0, r3
 80074aa:	f7ff ffc0 	bl	800742e <_ZN6SymbolaSERKS_>
 80074ae:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80074b2:	4618      	mov	r0, r3
 80074b4:	f01b fd9f 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		break;
 80074b8:	e03b      	b.n	8007532 <_ZN21Expression_calculator8evaluateEP8Variable+0xd8>
	case ASSIGNMENT_PAR:
		s = Variable_handler::get_instance().get_par(var->id);
 80074ba:	f011 fdd7 	bl	801906c <_ZN16Variable_handler12get_instanceEv>
 80074be:	4604      	mov	r4, r0
 80074c0:	687b      	ldr	r3, [r7, #4]
 80074c2:	1d1a      	adds	r2, r3, #4
 80074c4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80074c8:	4611      	mov	r1, r2
 80074ca:	4618      	mov	r0, r3
 80074cc:	f01b fec4 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80074d0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80074d4:	4619      	mov	r1, r3
 80074d6:	4620      	mov	r0, r4
 80074d8:	f011 fe06 	bl	80190e8 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80074dc:	4602      	mov	r2, r0
 80074de:	f107 0310 	add.w	r3, r7, #16
 80074e2:	4611      	mov	r1, r2
 80074e4:	4618      	mov	r0, r3
 80074e6:	f7ff ffa2 	bl	800742e <_ZN6SymbolaSERKS_>
 80074ea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80074ee:	4618      	mov	r0, r3
 80074f0:	f01b fd81 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		break;
 80074f4:	e01d      	b.n	8007532 <_ZN21Expression_calculator8evaluateEP8Variable+0xd8>
	default:
		s = Variable_handler::get_instance().get_arg(var->id);
 80074f6:	f011 fdb9 	bl	801906c <_ZN16Variable_handler12get_instanceEv>
 80074fa:	4604      	mov	r4, r0
 80074fc:	687b      	ldr	r3, [r7, #4]
 80074fe:	1d1a      	adds	r2, r3, #4
 8007500:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8007504:	4611      	mov	r1, r2
 8007506:	4618      	mov	r0, r3
 8007508:	f01b fea6 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800750c:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8007510:	4619      	mov	r1, r3
 8007512:	4620      	mov	r0, r4
 8007514:	f011 fdd8 	bl	80190c8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8007518:	4602      	mov	r2, r0
 800751a:	f107 0310 	add.w	r3, r7, #16
 800751e:	4611      	mov	r1, r2
 8007520:	4618      	mov	r0, r3
 8007522:	f7ff ff84 	bl	800742e <_ZN6SymbolaSERKS_>
 8007526:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800752a:	4618      	mov	r0, r3
 800752c:	f01b fd63 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		break;
 8007530:	bf00      	nop
	}

	if (var->index)
 8007532:	687b      	ldr	r3, [r7, #4]
 8007534:	69db      	ldr	r3, [r3, #28]
 8007536:	2b00      	cmp	r3, #0
 8007538:	d01a      	beq.n	8007570 <_ZN21Expression_calculator8evaluateEP8Variable+0x116>
	{
		return s[evaluate(var->index)];
 800753a:	687b      	ldr	r3, [r7, #4]
 800753c:	69da      	ldr	r2, [r3, #28]
 800753e:	f107 0378 	add.w	r3, r7, #120	; 0x78
 8007542:	68b9      	ldr	r1, [r7, #8]
 8007544:	4618      	mov	r0, r3
 8007546:	f7ff fa51 	bl	80069ec <_ZN21Expression_calculator8evaluateEP10Expression>
 800754a:	f107 0278 	add.w	r2, r7, #120	; 0x78
 800754e:	f107 0310 	add.w	r3, r7, #16
 8007552:	4611      	mov	r1, r2
 8007554:	4618      	mov	r0, r3
 8007556:	f010 f84b 	bl	80175f0 <_ZN6SymbolixES_>
 800755a:	4603      	mov	r3, r0
 800755c:	4619      	mov	r1, r3
 800755e:	68f8      	ldr	r0, [r7, #12]
 8007560:	f7ff fdd8 	bl	8007114 <_ZN6SymbolC1ERKS_>
 8007564:	f107 0378 	add.w	r3, r7, #120	; 0x78
 8007568:	4618      	mov	r0, r3
 800756a:	f7ff f9a5 	bl	80068b8 <_ZN6SymbolD1Ev>
 800756e:	e005      	b.n	800757c <_ZN21Expression_calculator8evaluateEP8Variable+0x122>
	}

	return s;
 8007570:	f107 0310 	add.w	r3, r7, #16
 8007574:	4619      	mov	r1, r3
 8007576:	68f8      	ldr	r0, [r7, #12]
 8007578:	f7ff fa22 	bl	80069c0 <_ZN6SymbolC1EOS_>
	Symbol s;
 800757c:	f107 0310 	add.w	r3, r7, #16
 8007580:	4618      	mov	r0, r3
 8007582:	f7ff f999 	bl	80068b8 <_ZN6SymbolD1Ev>
}
 8007586:	68f8      	ldr	r0, [r7, #12]
 8007588:	379c      	adds	r7, #156	; 0x9c
 800758a:	46bd      	mov	sp, r7
 800758c:	bd90      	pop	{r4, r7, pc}

0800758e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEED1Ev>:
      ~_Variant_storage()
 800758e:	b580      	push	{r7, lr}
 8007590:	b082      	sub	sp, #8
 8007592:	af00      	add	r7, sp, #0
 8007594:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 8007596:	6878      	ldr	r0, [r7, #4]
 8007598:	f001 f9b6 	bl	8008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>
 800759c:	687b      	ldr	r3, [r7, #4]
 800759e:	4618      	mov	r0, r3
 80075a0:	3708      	adds	r7, #8
 80075a2:	46bd      	mov	sp, r7
 80075a4:	bd80      	pop	{r7, pc}

080075a6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 80075a6:	b480      	push	{r7}
 80075a8:	b083      	sub	sp, #12
 80075aa:	af00      	add	r7, sp, #0
 80075ac:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 80075ae:	687b      	ldr	r3, [r7, #4]
    }
 80075b0:	4618      	mov	r0, r3
 80075b2:	370c      	adds	r7, #12
 80075b4:	46bd      	mov	sp, r7
 80075b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075ba:	4770      	bx	lr

080075bc <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80075bc:	b580      	push	{r7, lr}
 80075be:	b082      	sub	sp, #8
 80075c0:	af00      	add	r7, sp, #0
 80075c2:	7138      	strb	r0, [r7, #4]
 80075c4:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80075c6:	6838      	ldr	r0, [r7, #0]
 80075c8:	f001 f9c2 	bl	8008950 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 80075cc:	4603      	mov	r3, r0
 80075ce:	4618      	mov	r0, r3
 80075d0:	f7fe fb67 	bl	8005ca2 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 80075d4:	4603      	mov	r3, r0
 80075d6:	4618      	mov	r0, r3
 80075d8:	3708      	adds	r7, #8
 80075da:	46bd      	mov	sp, r7
 80075dc:	bd80      	pop	{r7, pc}

080075de <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80075de:	b590      	push	{r4, r7, lr}
 80075e0:	b083      	sub	sp, #12
 80075e2:	af00      	add	r7, sp, #0
 80075e4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80075e6:	6878      	ldr	r0, [r7, #4]
 80075e8:	f001 f9a7 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80075ec:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80075ee:	4619      	mov	r1, r3
 80075f0:	4620      	mov	r0, r4
 80075f2:	f7ff ffe3 	bl	80075bc <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80075f6:	4603      	mov	r3, r0
    }
 80075f8:	4618      	mov	r0, r3
 80075fa:	370c      	adds	r7, #12
 80075fc:	46bd      	mov	sp, r7
 80075fe:	bd90      	pop	{r4, r7, pc}

08007600 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESQ_EEDcOSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8007600:	b580      	push	{r7, lr}
 8007602:	b082      	sub	sp, #8
 8007604:	af00      	add	r7, sp, #0
 8007606:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8007608:	6878      	ldr	r0, [r7, #4]
 800760a:	f001 f996 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800760e:	4603      	mov	r3, r0
 8007610:	4618      	mov	r0, r3
 8007612:	f7ff ffe4 	bl	80075de <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8007616:	4603      	mov	r3, r0
	}
 8007618:	4618      	mov	r0, r3
 800761a:	3708      	adds	r7, #8
 800761c:	46bd      	mov	sp, r7
 800761e:	bd80      	pop	{r7, pc}

08007620 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8007620:	b5b0      	push	{r4, r5, r7, lr}
 8007622:	b084      	sub	sp, #16
 8007624:	af00      	add	r7, sp, #0
 8007626:	6078      	str	r0, [r7, #4]
 8007628:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800762a:	6878      	ldr	r0, [r7, #4]
 800762c:	f001 f97a 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007630:	4604      	mov	r4, r0
 8007632:	6838      	ldr	r0, [r7, #0]
 8007634:	f001 f981 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007638:	4603      	mov	r3, r0
 800763a:	4618      	mov	r0, r3
 800763c:	f7ff ffe0 	bl	8007600 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESQ_EEDcOSL_>
 8007640:	4601      	mov	r1, r0
 8007642:	f107 030c 	add.w	r3, r7, #12
 8007646:	461a      	mov	r2, r3
 8007648:	4620      	mov	r0, r4
 800764a:	f001 f98c 	bl	8008966 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEENSt15__invoke_resultISH_JDpT0_EE4typeESI_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 800764e:	462b      	mov	r3, r5
      }
 8007650:	4618      	mov	r0, r3
 8007652:	3710      	adds	r7, #16
 8007654:	46bd      	mov	sp, r7
 8007656:	bdb0      	pop	{r4, r5, r7, pc}

08007658 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007658:	b5b0      	push	{r4, r5, r7, lr}
 800765a:	b082      	sub	sp, #8
 800765c:	af00      	add	r7, sp, #0
 800765e:	6078      	str	r0, [r7, #4]
 8007660:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8007662:	6878      	ldr	r0, [r7, #4]
 8007664:	f001 f95e 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007668:	4604      	mov	r4, r0
 800766a:	6838      	ldr	r0, [r7, #0]
 800766c:	f001 f965 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007670:	4603      	mov	r3, r0
 8007672:	4619      	mov	r1, r3
 8007674:	4620      	mov	r0, r4
 8007676:	f7ff ffd3 	bl	8007620 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SQ_>
				   std::forward<_Variants>(__vars)...);
 800767a:	462b      	mov	r3, r5
      }
 800767c:	4618      	mov	r0, r3
 800767e:	3708      	adds	r7, #8
 8007680:	46bd      	mov	sp, r7
 8007682:	bdb0      	pop	{r4, r5, r7, pc}

08007684 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESN_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007684:	b5b0      	push	{r4, r5, r7, lr}
 8007686:	b082      	sub	sp, #8
 8007688:	af00      	add	r7, sp, #0
 800768a:	6078      	str	r0, [r7, #4]
 800768c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800768e:	6878      	ldr	r0, [r7, #4]
 8007690:	f001 f948 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007694:	4604      	mov	r4, r0
 8007696:	6838      	ldr	r0, [r7, #0]
 8007698:	f001 f94f 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800769c:	4603      	mov	r3, r0
 800769e:	4619      	mov	r1, r3
 80076a0:	4620      	mov	r0, r4
 80076a2:	f7ff ffd9 	bl	8007658 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SQ_>
				   std::forward<_Variants>(__vars)...);
 80076a6:	462b      	mov	r3, r5
      }
 80076a8:	4618      	mov	r0, r3
 80076aa:	3708      	adds	r7, #8
 80076ac:	46bd      	mov	sp, r7
 80076ae:	bdb0      	pop	{r4, r5, r7, pc}

080076b0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80076b0:	b580      	push	{r7, lr}
 80076b2:	b082      	sub	sp, #8
 80076b4:	af00      	add	r7, sp, #0
 80076b6:	7138      	strb	r0, [r7, #4]
 80076b8:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80076ba:	6838      	ldr	r0, [r7, #0]
 80076bc:	f001 f971 	bl	80089a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 80076c0:	4603      	mov	r3, r0
 80076c2:	4618      	mov	r0, r3
 80076c4:	f7fe fb0f 	bl	8005ce6 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 80076c8:	4603      	mov	r3, r0
 80076ca:	4618      	mov	r0, r3
 80076cc:	3708      	adds	r7, #8
 80076ce:	46bd      	mov	sp, r7
 80076d0:	bd80      	pop	{r7, pc}

080076d2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80076d2:	b590      	push	{r4, r7, lr}
 80076d4:	b083      	sub	sp, #12
 80076d6:	af00      	add	r7, sp, #0
 80076d8:	7138      	strb	r0, [r7, #4]
 80076da:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80076dc:	6838      	ldr	r0, [r7, #0]
 80076de:	f001 f937 	bl	8008950 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 80076e2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80076e4:	4619      	mov	r1, r3
 80076e6:	4620      	mov	r0, r4
 80076e8:	f7ff ffe2 	bl	80076b0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80076ec:	4603      	mov	r3, r0
    }
 80076ee:	4618      	mov	r0, r3
 80076f0:	370c      	adds	r7, #12
 80076f2:	46bd      	mov	sp, r7
 80076f4:	bd90      	pop	{r4, r7, pc}

080076f6 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80076f6:	b590      	push	{r4, r7, lr}
 80076f8:	b083      	sub	sp, #12
 80076fa:	af00      	add	r7, sp, #0
 80076fc:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80076fe:	6878      	ldr	r0, [r7, #4]
 8007700:	f001 f91b 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007704:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8007706:	4619      	mov	r1, r3
 8007708:	4620      	mov	r0, r4
 800770a:	f7ff ffe2 	bl	80076d2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800770e:	4603      	mov	r3, r0
    }
 8007710:	4618      	mov	r0, r3
 8007712:	370c      	adds	r7, #12
 8007714:	46bd      	mov	sp, r7
 8007716:	bd90      	pop	{r4, r7, pc}

08007718 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESQ_EEDcOSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8007718:	b580      	push	{r7, lr}
 800771a:	b082      	sub	sp, #8
 800771c:	af00      	add	r7, sp, #0
 800771e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8007720:	6878      	ldr	r0, [r7, #4]
 8007722:	f001 f90a 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007726:	4603      	mov	r3, r0
 8007728:	4618      	mov	r0, r3
 800772a:	f7ff ffe4 	bl	80076f6 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800772e:	4603      	mov	r3, r0
	}
 8007730:	4618      	mov	r0, r3
 8007732:	3708      	adds	r7, #8
 8007734:	46bd      	mov	sp, r7
 8007736:	bd80      	pop	{r7, pc}

08007738 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8007738:	b5b0      	push	{r4, r5, r7, lr}
 800773a:	b084      	sub	sp, #16
 800773c:	af00      	add	r7, sp, #0
 800773e:	6078      	str	r0, [r7, #4]
 8007740:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8007742:	6878      	ldr	r0, [r7, #4]
 8007744:	f001 f8ee 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007748:	4604      	mov	r4, r0
 800774a:	6838      	ldr	r0, [r7, #0]
 800774c:	f001 f8f5 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007750:	4603      	mov	r3, r0
 8007752:	4618      	mov	r0, r3
 8007754:	f7ff ffe0 	bl	8007718 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESQ_EEDcOSL_>
 8007758:	4601      	mov	r1, r0
 800775a:	f107 030c 	add.w	r3, r7, #12
 800775e:	461a      	mov	r2, r3
 8007760:	4620      	mov	r0, r4
 8007762:	f001 f929 	bl	80089b8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEENSt15__invoke_resultISH_JDpT0_EE4typeESI_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8007766:	462b      	mov	r3, r5
      }
 8007768:	4618      	mov	r0, r3
 800776a:	3710      	adds	r7, #16
 800776c:	46bd      	mov	sp, r7
 800776e:	bdb0      	pop	{r4, r5, r7, pc}

08007770 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007770:	b5b0      	push	{r4, r5, r7, lr}
 8007772:	b082      	sub	sp, #8
 8007774:	af00      	add	r7, sp, #0
 8007776:	6078      	str	r0, [r7, #4]
 8007778:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800777a:	6878      	ldr	r0, [r7, #4]
 800777c:	f001 f8d2 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007780:	4604      	mov	r4, r0
 8007782:	6838      	ldr	r0, [r7, #0]
 8007784:	f001 f8d9 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007788:	4603      	mov	r3, r0
 800778a:	4619      	mov	r1, r3
 800778c:	4620      	mov	r0, r4
 800778e:	f7ff ffd3 	bl	8007738 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SQ_>
				   std::forward<_Variants>(__vars)...);
 8007792:	462b      	mov	r3, r5
      }
 8007794:	4618      	mov	r0, r3
 8007796:	3708      	adds	r7, #8
 8007798:	46bd      	mov	sp, r7
 800779a:	bdb0      	pop	{r4, r5, r7, pc}

0800779c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESN_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800779c:	b5b0      	push	{r4, r5, r7, lr}
 800779e:	b082      	sub	sp, #8
 80077a0:	af00      	add	r7, sp, #0
 80077a2:	6078      	str	r0, [r7, #4]
 80077a4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80077a6:	6878      	ldr	r0, [r7, #4]
 80077a8:	f001 f8bc 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 80077ac:	4604      	mov	r4, r0
 80077ae:	6838      	ldr	r0, [r7, #0]
 80077b0:	f001 f8c3 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80077b4:	4603      	mov	r3, r0
 80077b6:	4619      	mov	r1, r3
 80077b8:	4620      	mov	r0, r4
 80077ba:	f7ff ffd9 	bl	8007770 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SQ_>
				   std::forward<_Variants>(__vars)...);
 80077be:	462b      	mov	r3, r5
      }
 80077c0:	4618      	mov	r0, r3
 80077c2:	3708      	adds	r7, #8
 80077c4:	46bd      	mov	sp, r7
 80077c6:	bdb0      	pop	{r4, r5, r7, pc}

080077c8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80077c8:	b580      	push	{r7, lr}
 80077ca:	b082      	sub	sp, #8
 80077cc:	af00      	add	r7, sp, #0
 80077ce:	7138      	strb	r0, [r7, #4]
 80077d0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80077d2:	6838      	ldr	r0, [r7, #0]
 80077d4:	f001 f90e 	bl	80089f4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 80077d8:	4603      	mov	r3, r0
 80077da:	4618      	mov	r0, r3
 80077dc:	f7fe fa3f 	bl	8005c5e <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 80077e0:	4603      	mov	r3, r0
 80077e2:	4618      	mov	r0, r3
 80077e4:	3708      	adds	r7, #8
 80077e6:	46bd      	mov	sp, r7
 80077e8:	bd80      	pop	{r7, pc}

080077ea <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80077ea:	b590      	push	{r4, r7, lr}
 80077ec:	b083      	sub	sp, #12
 80077ee:	af00      	add	r7, sp, #0
 80077f0:	7138      	strb	r0, [r7, #4]
 80077f2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80077f4:	6838      	ldr	r0, [r7, #0]
 80077f6:	f001 f8d4 	bl	80089a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 80077fa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80077fc:	4619      	mov	r1, r3
 80077fe:	4620      	mov	r0, r4
 8007800:	f7ff ffe2 	bl	80077c8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8007804:	4603      	mov	r3, r0
    }
 8007806:	4618      	mov	r0, r3
 8007808:	370c      	adds	r7, #12
 800780a:	46bd      	mov	sp, r7
 800780c:	bd90      	pop	{r4, r7, pc}

0800780e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800780e:	b590      	push	{r4, r7, lr}
 8007810:	b083      	sub	sp, #12
 8007812:	af00      	add	r7, sp, #0
 8007814:	7138      	strb	r0, [r7, #4]
 8007816:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007818:	6838      	ldr	r0, [r7, #0]
 800781a:	f001 f899 	bl	8008950 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800781e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007820:	4619      	mov	r1, r3
 8007822:	4620      	mov	r0, r4
 8007824:	f7ff ffe1 	bl	80077ea <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007828:	4603      	mov	r3, r0
    }
 800782a:	4618      	mov	r0, r3
 800782c:	370c      	adds	r7, #12
 800782e:	46bd      	mov	sp, r7
 8007830:	bd90      	pop	{r4, r7, pc}

08007832 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8007832:	b590      	push	{r4, r7, lr}
 8007834:	b083      	sub	sp, #12
 8007836:	af00      	add	r7, sp, #0
 8007838:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800783a:	6878      	ldr	r0, [r7, #4]
 800783c:	f001 f87d 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007840:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8007842:	4619      	mov	r1, r3
 8007844:	4620      	mov	r0, r4
 8007846:	f7ff ffe2 	bl	800780e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800784a:	4603      	mov	r3, r0
    }
 800784c:	4618      	mov	r0, r3
 800784e:	370c      	adds	r7, #12
 8007850:	46bd      	mov	sp, r7
 8007852:	bd90      	pop	{r4, r7, pc}

08007854 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESQ_EEDcOSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8007854:	b580      	push	{r7, lr}
 8007856:	b082      	sub	sp, #8
 8007858:	af00      	add	r7, sp, #0
 800785a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800785c:	6878      	ldr	r0, [r7, #4]
 800785e:	f001 f86c 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007862:	4603      	mov	r3, r0
 8007864:	4618      	mov	r0, r3
 8007866:	f7ff ffe4 	bl	8007832 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800786a:	4603      	mov	r3, r0
	}
 800786c:	4618      	mov	r0, r3
 800786e:	3708      	adds	r7, #8
 8007870:	46bd      	mov	sp, r7
 8007872:	bd80      	pop	{r7, pc}

08007874 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8007874:	b5b0      	push	{r4, r5, r7, lr}
 8007876:	b084      	sub	sp, #16
 8007878:	af00      	add	r7, sp, #0
 800787a:	6078      	str	r0, [r7, #4]
 800787c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800787e:	6878      	ldr	r0, [r7, #4]
 8007880:	f001 f850 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007884:	4604      	mov	r4, r0
 8007886:	6838      	ldr	r0, [r7, #0]
 8007888:	f001 f857 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800788c:	4603      	mov	r3, r0
 800788e:	4618      	mov	r0, r3
 8007890:	f7ff ffe0 	bl	8007854 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESQ_EEDcOSL_>
 8007894:	4601      	mov	r1, r0
 8007896:	f107 030c 	add.w	r3, r7, #12
 800789a:	461a      	mov	r2, r3
 800789c:	4620      	mov	r0, r4
 800789e:	f001 f8b4 	bl	8008a0a <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEENSt15__invoke_resultISH_JDpT0_EE4typeESI_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 80078a2:	462b      	mov	r3, r5
      }
 80078a4:	4618      	mov	r0, r3
 80078a6:	3710      	adds	r7, #16
 80078a8:	46bd      	mov	sp, r7
 80078aa:	bdb0      	pop	{r4, r5, r7, pc}

080078ac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80078ac:	b5b0      	push	{r4, r5, r7, lr}
 80078ae:	b082      	sub	sp, #8
 80078b0:	af00      	add	r7, sp, #0
 80078b2:	6078      	str	r0, [r7, #4]
 80078b4:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80078b6:	6878      	ldr	r0, [r7, #4]
 80078b8:	f001 f834 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 80078bc:	4604      	mov	r4, r0
 80078be:	6838      	ldr	r0, [r7, #0]
 80078c0:	f001 f83b 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80078c4:	4603      	mov	r3, r0
 80078c6:	4619      	mov	r1, r3
 80078c8:	4620      	mov	r0, r4
 80078ca:	f7ff ffd3 	bl	8007874 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SQ_>
				   std::forward<_Variants>(__vars)...);
 80078ce:	462b      	mov	r3, r5
      }
 80078d0:	4618      	mov	r0, r3
 80078d2:	3708      	adds	r7, #8
 80078d4:	46bd      	mov	sp, r7
 80078d6:	bdb0      	pop	{r4, r5, r7, pc}

080078d8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESN_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80078d8:	b5b0      	push	{r4, r5, r7, lr}
 80078da:	b082      	sub	sp, #8
 80078dc:	af00      	add	r7, sp, #0
 80078de:	6078      	str	r0, [r7, #4]
 80078e0:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80078e2:	6878      	ldr	r0, [r7, #4]
 80078e4:	f001 f81e 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 80078e8:	4604      	mov	r4, r0
 80078ea:	6838      	ldr	r0, [r7, #0]
 80078ec:	f001 f825 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80078f0:	4603      	mov	r3, r0
 80078f2:	4619      	mov	r1, r3
 80078f4:	4620      	mov	r0, r4
 80078f6:	f7ff ffd9 	bl	80078ac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SQ_>
				   std::forward<_Variants>(__vars)...);
 80078fa:	462b      	mov	r3, r5
      }
 80078fc:	4618      	mov	r0, r3
 80078fe:	3708      	adds	r7, #8
 8007900:	46bd      	mov	sp, r7
 8007902:	bdb0      	pop	{r4, r5, r7, pc}

08007904 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8007904:	b580      	push	{r7, lr}
 8007906:	b082      	sub	sp, #8
 8007908:	af00      	add	r7, sp, #0
 800790a:	7138      	strb	r0, [r7, #4]
 800790c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800790e:	6838      	ldr	r0, [r7, #0]
 8007910:	f001 f899 	bl	8008a46 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8007914:	4603      	mov	r3, r0
 8007916:	4618      	mov	r0, r3
 8007918:	f7fe fa07 	bl	8005d2a <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 800791c:	4603      	mov	r3, r0
 800791e:	4618      	mov	r0, r3
 8007920:	3708      	adds	r7, #8
 8007922:	46bd      	mov	sp, r7
 8007924:	bd80      	pop	{r7, pc}

08007926 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8007926:	b590      	push	{r4, r7, lr}
 8007928:	b083      	sub	sp, #12
 800792a:	af00      	add	r7, sp, #0
 800792c:	7138      	strb	r0, [r7, #4]
 800792e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007930:	6838      	ldr	r0, [r7, #0]
 8007932:	f001 f85f 	bl	80089f4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8007936:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007938:	4619      	mov	r1, r3
 800793a:	4620      	mov	r0, r4
 800793c:	f7ff ffe2 	bl	8007904 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8007940:	4603      	mov	r3, r0
    }
 8007942:	4618      	mov	r0, r3
 8007944:	370c      	adds	r7, #12
 8007946:	46bd      	mov	sp, r7
 8007948:	bd90      	pop	{r4, r7, pc}

0800794a <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800794a:	b590      	push	{r4, r7, lr}
 800794c:	b083      	sub	sp, #12
 800794e:	af00      	add	r7, sp, #0
 8007950:	7138      	strb	r0, [r7, #4]
 8007952:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007954:	6838      	ldr	r0, [r7, #0]
 8007956:	f001 f824 	bl	80089a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800795a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800795c:	4619      	mov	r1, r3
 800795e:	4620      	mov	r0, r4
 8007960:	f7ff ffe1 	bl	8007926 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007964:	4603      	mov	r3, r0
    }
 8007966:	4618      	mov	r0, r3
 8007968:	370c      	adds	r7, #12
 800796a:	46bd      	mov	sp, r7
 800796c:	bd90      	pop	{r4, r7, pc}

0800796e <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800796e:	b590      	push	{r4, r7, lr}
 8007970:	b083      	sub	sp, #12
 8007972:	af00      	add	r7, sp, #0
 8007974:	7138      	strb	r0, [r7, #4]
 8007976:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007978:	6838      	ldr	r0, [r7, #0]
 800797a:	f000 ffe9 	bl	8008950 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800797e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007980:	4619      	mov	r1, r3
 8007982:	4620      	mov	r0, r4
 8007984:	f7ff ffe1 	bl	800794a <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007988:	4603      	mov	r3, r0
    }
 800798a:	4618      	mov	r0, r3
 800798c:	370c      	adds	r7, #12
 800798e:	46bd      	mov	sp, r7
 8007990:	bd90      	pop	{r4, r7, pc}

08007992 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8007992:	b590      	push	{r4, r7, lr}
 8007994:	b083      	sub	sp, #12
 8007996:	af00      	add	r7, sp, #0
 8007998:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800799a:	6878      	ldr	r0, [r7, #4]
 800799c:	f000 ffcd 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80079a0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80079a2:	4619      	mov	r1, r3
 80079a4:	4620      	mov	r0, r4
 80079a6:	f7ff ffe2 	bl	800796e <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80079aa:	4603      	mov	r3, r0
    }
 80079ac:	4618      	mov	r0, r3
 80079ae:	370c      	adds	r7, #12
 80079b0:	46bd      	mov	sp, r7
 80079b2:	bd90      	pop	{r4, r7, pc}

080079b4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESQ_EEDcOSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80079b4:	b580      	push	{r7, lr}
 80079b6:	b082      	sub	sp, #8
 80079b8:	af00      	add	r7, sp, #0
 80079ba:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80079bc:	6878      	ldr	r0, [r7, #4]
 80079be:	f000 ffbc 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80079c2:	4603      	mov	r3, r0
 80079c4:	4618      	mov	r0, r3
 80079c6:	f7ff ffe4 	bl	8007992 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 80079ca:	4603      	mov	r3, r0
	}
 80079cc:	4618      	mov	r0, r3
 80079ce:	3708      	adds	r7, #8
 80079d0:	46bd      	mov	sp, r7
 80079d2:	bd80      	pop	{r7, pc}

080079d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80079d4:	b5b0      	push	{r4, r5, r7, lr}
 80079d6:	b084      	sub	sp, #16
 80079d8:	af00      	add	r7, sp, #0
 80079da:	6078      	str	r0, [r7, #4]
 80079dc:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80079de:	6878      	ldr	r0, [r7, #4]
 80079e0:	f000 ffa0 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 80079e4:	4604      	mov	r4, r0
 80079e6:	6838      	ldr	r0, [r7, #0]
 80079e8:	f000 ffa7 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80079ec:	4603      	mov	r3, r0
 80079ee:	4618      	mov	r0, r3
 80079f0:	f7ff ffe0 	bl	80079b4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESQ_EEDcOSL_>
 80079f4:	4601      	mov	r1, r0
 80079f6:	f107 030c 	add.w	r3, r7, #12
 80079fa:	461a      	mov	r2, r3
 80079fc:	4620      	mov	r0, r4
 80079fe:	f001 f82d 	bl	8008a5c <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISH_JDpT0_EE4typeESI_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8007a02:	462b      	mov	r3, r5
      }
 8007a04:	4618      	mov	r0, r3
 8007a06:	3710      	adds	r7, #16
 8007a08:	46bd      	mov	sp, r7
 8007a0a:	bdb0      	pop	{r4, r5, r7, pc}

08007a0c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007a0c:	b5b0      	push	{r4, r5, r7, lr}
 8007a0e:	b082      	sub	sp, #8
 8007a10:	af00      	add	r7, sp, #0
 8007a12:	6078      	str	r0, [r7, #4]
 8007a14:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8007a16:	6878      	ldr	r0, [r7, #4]
 8007a18:	f000 ff84 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007a1c:	4604      	mov	r4, r0
 8007a1e:	6838      	ldr	r0, [r7, #0]
 8007a20:	f000 ff8b 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007a24:	4603      	mov	r3, r0
 8007a26:	4619      	mov	r1, r3
 8007a28:	4620      	mov	r0, r4
 8007a2a:	f7ff ffd3 	bl	80079d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SQ_>
				   std::forward<_Variants>(__vars)...);
 8007a2e:	462b      	mov	r3, r5
      }
 8007a30:	4618      	mov	r0, r3
 8007a32:	3708      	adds	r7, #8
 8007a34:	46bd      	mov	sp, r7
 8007a36:	bdb0      	pop	{r4, r5, r7, pc}

08007a38 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESN_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007a38:	b5b0      	push	{r4, r5, r7, lr}
 8007a3a:	b082      	sub	sp, #8
 8007a3c:	af00      	add	r7, sp, #0
 8007a3e:	6078      	str	r0, [r7, #4]
 8007a40:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8007a42:	6878      	ldr	r0, [r7, #4]
 8007a44:	f000 ff6e 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007a48:	4604      	mov	r4, r0
 8007a4a:	6838      	ldr	r0, [r7, #0]
 8007a4c:	f000 ff75 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007a50:	4603      	mov	r3, r0
 8007a52:	4619      	mov	r1, r3
 8007a54:	4620      	mov	r0, r4
 8007a56:	f7ff ffd9 	bl	8007a0c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SQ_>
				   std::forward<_Variants>(__vars)...);
 8007a5a:	462b      	mov	r3, r5
      }
 8007a5c:	4618      	mov	r0, r3
 8007a5e:	3708      	adds	r7, #8
 8007a60:	46bd      	mov	sp, r7
 8007a62:	bdb0      	pop	{r4, r5, r7, pc}

08007a64 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8007a64:	b580      	push	{r7, lr}
 8007a66:	b082      	sub	sp, #8
 8007a68:	af00      	add	r7, sp, #0
 8007a6a:	7138      	strb	r0, [r7, #4]
 8007a6c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8007a6e:	6838      	ldr	r0, [r7, #0]
 8007a70:	f001 f812 	bl	8008a98 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8007a74:	4603      	mov	r3, r0
 8007a76:	4618      	mov	r0, r3
 8007a78:	f001 f819 	bl	8008aae <_ZNRSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EE6_M_getEv>
 8007a7c:	4603      	mov	r3, r0
 8007a7e:	4618      	mov	r0, r3
 8007a80:	3708      	adds	r7, #8
 8007a82:	46bd      	mov	sp, r7
 8007a84:	bd80      	pop	{r7, pc}

08007a86 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8007a86:	b590      	push	{r4, r7, lr}
 8007a88:	b083      	sub	sp, #12
 8007a8a:	af00      	add	r7, sp, #0
 8007a8c:	7138      	strb	r0, [r7, #4]
 8007a8e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007a90:	6838      	ldr	r0, [r7, #0]
 8007a92:	f000 ffd8 	bl	8008a46 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8007a96:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007a98:	4619      	mov	r1, r3
 8007a9a:	4620      	mov	r0, r4
 8007a9c:	f7ff ffe2 	bl	8007a64 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8007aa0:	4603      	mov	r3, r0
    }
 8007aa2:	4618      	mov	r0, r3
 8007aa4:	370c      	adds	r7, #12
 8007aa6:	46bd      	mov	sp, r7
 8007aa8:	bd90      	pop	{r4, r7, pc}

08007aaa <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8007aaa:	b590      	push	{r4, r7, lr}
 8007aac:	b083      	sub	sp, #12
 8007aae:	af00      	add	r7, sp, #0
 8007ab0:	7138      	strb	r0, [r7, #4]
 8007ab2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007ab4:	6838      	ldr	r0, [r7, #0]
 8007ab6:	f000 ff9d 	bl	80089f4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8007aba:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007abc:	4619      	mov	r1, r3
 8007abe:	4620      	mov	r0, r4
 8007ac0:	f7ff ffe1 	bl	8007a86 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007ac4:	4603      	mov	r3, r0
    }
 8007ac6:	4618      	mov	r0, r3
 8007ac8:	370c      	adds	r7, #12
 8007aca:	46bd      	mov	sp, r7
 8007acc:	bd90      	pop	{r4, r7, pc}

08007ace <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8007ace:	b590      	push	{r4, r7, lr}
 8007ad0:	b083      	sub	sp, #12
 8007ad2:	af00      	add	r7, sp, #0
 8007ad4:	7138      	strb	r0, [r7, #4]
 8007ad6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007ad8:	6838      	ldr	r0, [r7, #0]
 8007ada:	f000 ff62 	bl	80089a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8007ade:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007ae0:	4619      	mov	r1, r3
 8007ae2:	4620      	mov	r0, r4
 8007ae4:	f7ff ffe1 	bl	8007aaa <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007ae8:	4603      	mov	r3, r0
    }
 8007aea:	4618      	mov	r0, r3
 8007aec:	370c      	adds	r7, #12
 8007aee:	46bd      	mov	sp, r7
 8007af0:	bd90      	pop	{r4, r7, pc}

08007af2 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8007af2:	b590      	push	{r4, r7, lr}
 8007af4:	b083      	sub	sp, #12
 8007af6:	af00      	add	r7, sp, #0
 8007af8:	7138      	strb	r0, [r7, #4]
 8007afa:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007afc:	6838      	ldr	r0, [r7, #0]
 8007afe:	f000 ff27 	bl	8008950 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8007b02:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007b04:	4619      	mov	r1, r3
 8007b06:	4620      	mov	r0, r4
 8007b08:	f7ff ffe1 	bl	8007ace <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007b0c:	4603      	mov	r3, r0
    }
 8007b0e:	4618      	mov	r0, r3
 8007b10:	370c      	adds	r7, #12
 8007b12:	46bd      	mov	sp, r7
 8007b14:	bd90      	pop	{r4, r7, pc}

08007b16 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8007b16:	b590      	push	{r4, r7, lr}
 8007b18:	b083      	sub	sp, #12
 8007b1a:	af00      	add	r7, sp, #0
 8007b1c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8007b1e:	6878      	ldr	r0, [r7, #4]
 8007b20:	f000 ff0b 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007b24:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8007b26:	4619      	mov	r1, r3
 8007b28:	4620      	mov	r0, r4
 8007b2a:	f7ff ffe2 	bl	8007af2 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007b2e:	4603      	mov	r3, r0
    }
 8007b30:	4618      	mov	r0, r3
 8007b32:	370c      	adds	r7, #12
 8007b34:	46bd      	mov	sp, r7
 8007b36:	bd90      	pop	{r4, r7, pc}

08007b38 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESQ_EEDcOSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8007b38:	b580      	push	{r7, lr}
 8007b3a:	b082      	sub	sp, #8
 8007b3c:	af00      	add	r7, sp, #0
 8007b3e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8007b40:	6878      	ldr	r0, [r7, #4]
 8007b42:	f000 fefa 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007b46:	4603      	mov	r3, r0
 8007b48:	4618      	mov	r0, r3
 8007b4a:	f7ff ffe4 	bl	8007b16 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8007b4e:	4603      	mov	r3, r0
	}
 8007b50:	4618      	mov	r0, r3
 8007b52:	3708      	adds	r7, #8
 8007b54:	46bd      	mov	sp, r7
 8007b56:	bd80      	pop	{r7, pc}

08007b58 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESN_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8007b58:	b5b0      	push	{r4, r5, r7, lr}
 8007b5a:	b084      	sub	sp, #16
 8007b5c:	af00      	add	r7, sp, #0
 8007b5e:	6078      	str	r0, [r7, #4]
 8007b60:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8007b62:	6878      	ldr	r0, [r7, #4]
 8007b64:	f000 fede 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007b68:	4604      	mov	r4, r0
 8007b6a:	6838      	ldr	r0, [r7, #0]
 8007b6c:	f000 fee5 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007b70:	4603      	mov	r3, r0
 8007b72:	4618      	mov	r0, r3
 8007b74:	f7ff ffe0 	bl	8007b38 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESQ_EEDcOSL_>
 8007b78:	4601      	mov	r1, r0
 8007b7a:	f107 030c 	add.w	r3, r7, #12
 8007b7e:	461a      	mov	r2, r3
 8007b80:	4620      	mov	r0, r4
 8007b82:	f000 ffa1 	bl	8008ac8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRSB_St17integral_constantIjLj4EEEENSt15__invoke_resultISH_JDpT0_EE4typeESI_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8007b86:	462b      	mov	r3, r5
      }
 8007b88:	4618      	mov	r0, r3
 8007b8a:	3710      	adds	r7, #16
 8007b8c:	46bd      	mov	sp, r7
 8007b8e:	bdb0      	pop	{r4, r5, r7, pc}

08007b90 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESN_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007b90:	b5b0      	push	{r4, r5, r7, lr}
 8007b92:	b082      	sub	sp, #8
 8007b94:	af00      	add	r7, sp, #0
 8007b96:	6078      	str	r0, [r7, #4]
 8007b98:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8007b9a:	6878      	ldr	r0, [r7, #4]
 8007b9c:	f000 fec2 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007ba0:	4604      	mov	r4, r0
 8007ba2:	6838      	ldr	r0, [r7, #0]
 8007ba4:	f000 fec9 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007ba8:	4603      	mov	r3, r0
 8007baa:	4619      	mov	r1, r3
 8007bac:	4620      	mov	r0, r4
 8007bae:	f7ff ffd3 	bl	8007b58 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESN_SQ_>
				   std::forward<_Variants>(__vars)...);
 8007bb2:	462b      	mov	r3, r5
      }
 8007bb4:	4618      	mov	r0, r3
 8007bb6:	3708      	adds	r7, #8
 8007bb8:	46bd      	mov	sp, r7
 8007bba:	bdb0      	pop	{r4, r5, r7, pc}

08007bbc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESN_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007bbc:	b5b0      	push	{r4, r5, r7, lr}
 8007bbe:	b082      	sub	sp, #8
 8007bc0:	af00      	add	r7, sp, #0
 8007bc2:	6078      	str	r0, [r7, #4]
 8007bc4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8007bc6:	6878      	ldr	r0, [r7, #4]
 8007bc8:	f000 feac 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007bcc:	4604      	mov	r4, r0
 8007bce:	6838      	ldr	r0, [r7, #0]
 8007bd0:	f000 feb3 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007bd4:	4603      	mov	r3, r0
 8007bd6:	4619      	mov	r1, r3
 8007bd8:	4620      	mov	r0, r4
 8007bda:	f7ff ffd9 	bl	8007b90 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESN_SQ_>
				   std::forward<_Variants>(__vars)...);
 8007bde:	462b      	mov	r3, r5
      }
 8007be0:	4618      	mov	r0, r3
 8007be2:	3708      	adds	r7, #8
 8007be4:	46bd      	mov	sp, r7
 8007be6:	bdb0      	pop	{r4, r5, r7, pc}

08007be8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8007be8:	b580      	push	{r7, lr}
 8007bea:	b082      	sub	sp, #8
 8007bec:	af00      	add	r7, sp, #0
 8007bee:	7138      	strb	r0, [r7, #4]
 8007bf0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8007bf2:	6838      	ldr	r0, [r7, #0]
 8007bf4:	f000 ff86 	bl	8008b04 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8007bf8:	4603      	mov	r3, r0
 8007bfa:	4618      	mov	r0, r3
 8007bfc:	f000 ff8d 	bl	8008b1a <_ZNRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 8007c00:	4603      	mov	r3, r0
 8007c02:	4618      	mov	r0, r3
 8007c04:	3708      	adds	r7, #8
 8007c06:	46bd      	mov	sp, r7
 8007c08:	bd80      	pop	{r7, pc}

08007c0a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8007c0a:	b590      	push	{r4, r7, lr}
 8007c0c:	b083      	sub	sp, #12
 8007c0e:	af00      	add	r7, sp, #0
 8007c10:	7138      	strb	r0, [r7, #4]
 8007c12:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007c14:	6838      	ldr	r0, [r7, #0]
 8007c16:	f000 ff3f 	bl	8008a98 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8007c1a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007c1c:	4619      	mov	r1, r3
 8007c1e:	4620      	mov	r0, r4
 8007c20:	f7ff ffe2 	bl	8007be8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8007c24:	4603      	mov	r3, r0
    }
 8007c26:	4618      	mov	r0, r3
 8007c28:	370c      	adds	r7, #12
 8007c2a:	46bd      	mov	sp, r7
 8007c2c:	bd90      	pop	{r4, r7, pc}

08007c2e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8007c2e:	b590      	push	{r4, r7, lr}
 8007c30:	b083      	sub	sp, #12
 8007c32:	af00      	add	r7, sp, #0
 8007c34:	7138      	strb	r0, [r7, #4]
 8007c36:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007c38:	6838      	ldr	r0, [r7, #0]
 8007c3a:	f000 ff04 	bl	8008a46 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8007c3e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007c40:	4619      	mov	r1, r3
 8007c42:	4620      	mov	r0, r4
 8007c44:	f7ff ffe1 	bl	8007c0a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007c48:	4603      	mov	r3, r0
    }
 8007c4a:	4618      	mov	r0, r3
 8007c4c:	370c      	adds	r7, #12
 8007c4e:	46bd      	mov	sp, r7
 8007c50:	bd90      	pop	{r4, r7, pc}

08007c52 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8007c52:	b590      	push	{r4, r7, lr}
 8007c54:	b083      	sub	sp, #12
 8007c56:	af00      	add	r7, sp, #0
 8007c58:	7138      	strb	r0, [r7, #4]
 8007c5a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007c5c:	6838      	ldr	r0, [r7, #0]
 8007c5e:	f000 fec9 	bl	80089f4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8007c62:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007c64:	4619      	mov	r1, r3
 8007c66:	4620      	mov	r0, r4
 8007c68:	f7ff ffe1 	bl	8007c2e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007c6c:	4603      	mov	r3, r0
    }
 8007c6e:	4618      	mov	r0, r3
 8007c70:	370c      	adds	r7, #12
 8007c72:	46bd      	mov	sp, r7
 8007c74:	bd90      	pop	{r4, r7, pc}

08007c76 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8007c76:	b590      	push	{r4, r7, lr}
 8007c78:	b083      	sub	sp, #12
 8007c7a:	af00      	add	r7, sp, #0
 8007c7c:	7138      	strb	r0, [r7, #4]
 8007c7e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007c80:	6838      	ldr	r0, [r7, #0]
 8007c82:	f000 fe8e 	bl	80089a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8007c86:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007c88:	4619      	mov	r1, r3
 8007c8a:	4620      	mov	r0, r4
 8007c8c:	f7ff ffe1 	bl	8007c52 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007c90:	4603      	mov	r3, r0
    }
 8007c92:	4618      	mov	r0, r3
 8007c94:	370c      	adds	r7, #12
 8007c96:	46bd      	mov	sp, r7
 8007c98:	bd90      	pop	{r4, r7, pc}

08007c9a <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8007c9a:	b590      	push	{r4, r7, lr}
 8007c9c:	b083      	sub	sp, #12
 8007c9e:	af00      	add	r7, sp, #0
 8007ca0:	7138      	strb	r0, [r7, #4]
 8007ca2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007ca4:	6838      	ldr	r0, [r7, #0]
 8007ca6:	f000 fe53 	bl	8008950 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8007caa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007cac:	4619      	mov	r1, r3
 8007cae:	4620      	mov	r0, r4
 8007cb0:	f7ff ffe1 	bl	8007c76 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007cb4:	4603      	mov	r3, r0
    }
 8007cb6:	4618      	mov	r0, r3
 8007cb8:	370c      	adds	r7, #12
 8007cba:	46bd      	mov	sp, r7
 8007cbc:	bd90      	pop	{r4, r7, pc}

08007cbe <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8007cbe:	b590      	push	{r4, r7, lr}
 8007cc0:	b083      	sub	sp, #12
 8007cc2:	af00      	add	r7, sp, #0
 8007cc4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8007cc6:	6878      	ldr	r0, [r7, #4]
 8007cc8:	f000 fe37 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007ccc:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8007cce:	4619      	mov	r1, r3
 8007cd0:	4620      	mov	r0, r4
 8007cd2:	f7ff ffe2 	bl	8007c9a <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007cd6:	4603      	mov	r3, r0
    }
 8007cd8:	4618      	mov	r0, r3
 8007cda:	370c      	adds	r7, #12
 8007cdc:	46bd      	mov	sp, r7
 8007cde:	bd90      	pop	{r4, r7, pc}

08007ce0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESQ_EEDcOSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8007ce0:	b580      	push	{r7, lr}
 8007ce2:	b082      	sub	sp, #8
 8007ce4:	af00      	add	r7, sp, #0
 8007ce6:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8007ce8:	6878      	ldr	r0, [r7, #4]
 8007cea:	f000 fe26 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007cee:	4603      	mov	r3, r0
 8007cf0:	4618      	mov	r0, r3
 8007cf2:	f7ff ffe4 	bl	8007cbe <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8007cf6:	4603      	mov	r3, r0
	}
 8007cf8:	4618      	mov	r0, r3
 8007cfa:	3708      	adds	r7, #8
 8007cfc:	46bd      	mov	sp, r7
 8007cfe:	bd80      	pop	{r7, pc}

08007d00 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESN_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8007d00:	b5b0      	push	{r4, r5, r7, lr}
 8007d02:	b084      	sub	sp, #16
 8007d04:	af00      	add	r7, sp, #0
 8007d06:	6078      	str	r0, [r7, #4]
 8007d08:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8007d0a:	6878      	ldr	r0, [r7, #4]
 8007d0c:	f000 fe0a 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007d10:	4604      	mov	r4, r0
 8007d12:	6838      	ldr	r0, [r7, #0]
 8007d14:	f000 fe11 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007d18:	4603      	mov	r3, r0
 8007d1a:	4618      	mov	r0, r3
 8007d1c:	f7ff ffe0 	bl	8007ce0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESQ_EEDcOSL_>
 8007d20:	4601      	mov	r1, r0
 8007d22:	f107 030c 	add.w	r3, r7, #12
 8007d26:	461a      	mov	r2, r3
 8007d28:	4620      	mov	r0, r4
 8007d2a:	f000 ff03 	bl	8008b34 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRSE_St17integral_constantIjLj5EEEENSt15__invoke_resultISH_JDpT0_EE4typeESI_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8007d2e:	462b      	mov	r3, r5
      }
 8007d30:	4618      	mov	r0, r3
 8007d32:	3710      	adds	r7, #16
 8007d34:	46bd      	mov	sp, r7
 8007d36:	bdb0      	pop	{r4, r5, r7, pc}

08007d38 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESN_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007d38:	b5b0      	push	{r4, r5, r7, lr}
 8007d3a:	b082      	sub	sp, #8
 8007d3c:	af00      	add	r7, sp, #0
 8007d3e:	6078      	str	r0, [r7, #4]
 8007d40:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8007d42:	6878      	ldr	r0, [r7, #4]
 8007d44:	f000 fdee 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007d48:	4604      	mov	r4, r0
 8007d4a:	6838      	ldr	r0, [r7, #0]
 8007d4c:	f000 fdf5 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007d50:	4603      	mov	r3, r0
 8007d52:	4619      	mov	r1, r3
 8007d54:	4620      	mov	r0, r4
 8007d56:	f7ff ffd3 	bl	8007d00 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESN_SQ_>
				   std::forward<_Variants>(__vars)...);
 8007d5a:	462b      	mov	r3, r5
      }
 8007d5c:	4618      	mov	r0, r3
 8007d5e:	3708      	adds	r7, #8
 8007d60:	46bd      	mov	sp, r7
 8007d62:	bdb0      	pop	{r4, r5, r7, pc}

08007d64 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeESN_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007d64:	b5b0      	push	{r4, r5, r7, lr}
 8007d66:	b082      	sub	sp, #8
 8007d68:	af00      	add	r7, sp, #0
 8007d6a:	6078      	str	r0, [r7, #4]
 8007d6c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8007d6e:	6878      	ldr	r0, [r7, #4]
 8007d70:	f000 fdd8 	bl	8008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007d74:	4604      	mov	r4, r0
 8007d76:	6838      	ldr	r0, [r7, #0]
 8007d78:	f000 fddf 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007d7c:	4603      	mov	r3, r0
 8007d7e:	4619      	mov	r1, r3
 8007d80:	4620      	mov	r0, r4
 8007d82:	f7ff ffd9 	bl	8007d38 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSEOSH_EUlOT_T0_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESN_SQ_>
				   std::forward<_Variants>(__vars)...);
 8007d86:	462b      	mov	r3, r5
      }
 8007d88:	4618      	mov	r0, r3
 8007d8a:	3708      	adds	r7, #8
 8007d8c:	46bd      	mov	sp, r7
 8007d8e:	bdb0      	pop	{r4, r5, r7, pc}

08007d90 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_RSt7variantIJifbS9_SC_SF_EEEJLj6EEE9_M_accessIJEEERKSR_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8007d90:	b580      	push	{r7, lr}
 8007d92:	b082      	sub	sp, #8
 8007d94:	af00      	add	r7, sp, #0
 8007d96:	6078      	str	r0, [r7, #4]
 8007d98:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8007d9a:	683b      	ldr	r3, [r7, #0]
 8007d9c:	009b      	lsls	r3, r3, #2
 8007d9e:	687a      	ldr	r2, [r7, #4]
 8007da0:	4413      	add	r3, r2
 8007da2:	4618      	mov	r0, r3
 8007da4:	f000 fee4 	bl	8008b70 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_RSt7variantIJifbS9_SC_SF_EEEJEE9_M_accessEv>
 8007da8:	4603      	mov	r3, r0
	}
 8007daa:	4618      	mov	r0, r3
 8007dac:	3708      	adds	r7, #8
 8007dae:	46bd      	mov	sp, r7
 8007db0:	bd80      	pop	{r7, pc}

08007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>:
      constexpr size_t index() const noexcept
 8007db2:	b480      	push	{r7}
 8007db4:	b083      	sub	sp, #12
 8007db6:	af00      	add	r7, sp, #0
 8007db8:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 8007dba:	687b      	ldr	r3, [r7, #4]
 8007dbc:	7e1b      	ldrb	r3, [r3, #24]
 8007dbe:	2bff      	cmp	r3, #255	; 0xff
 8007dc0:	d102      	bne.n	8007dc8 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv+0x16>
	  return variant_npos;
 8007dc2:	f04f 33ff 	mov.w	r3, #4294967295
 8007dc6:	e001      	b.n	8007dcc <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv+0x1a>
	return this->_M_index;
 8007dc8:	687b      	ldr	r3, [r7, #4]
 8007dca:	7e1b      	ldrb	r3, [r3, #24]
      }
 8007dcc:	4618      	mov	r0, r3
 8007dce:	370c      	adds	r7, #12
 8007dd0:	46bd      	mov	sp, r7
 8007dd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dd6:	4770      	bx	lr

08007dd8 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRSt7variantIJifbS8_SB_SE_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8007dd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007dda:	b085      	sub	sp, #20
 8007ddc:	af00      	add	r7, sp, #0
 8007dde:	6078      	str	r0, [r7, #4]
 8007de0:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8007de2:	4b0f      	ldr	r3, [pc, #60]	; (8007e20 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRSt7variantIJifbS8_SB_SE_EEEEDcOT1_DpOT2_+0x48>)
 8007de4:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8007de6:	6838      	ldr	r0, [r7, #0]
 8007de8:	f7ff ffe3 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 8007dec:	4603      	mov	r3, r0
 8007dee:	4619      	mov	r1, r3
 8007df0:	68f8      	ldr	r0, [r7, #12]
 8007df2:	f7ff ffcd 	bl	8007d90 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_RSt7variantIJifbS9_SC_SF_EEEJLj6EEE9_M_accessIJEEERKSR_jDpT_>
 8007df6:	4603      	mov	r3, r0
 8007df8:	681b      	ldr	r3, [r3, #0]
 8007dfa:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8007dfc:	68bc      	ldr	r4, [r7, #8]
 8007dfe:	6878      	ldr	r0, [r7, #4]
 8007e00:	f000 fec1 	bl	8008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8007e04:	4605      	mov	r5, r0
 8007e06:	6838      	ldr	r0, [r7, #0]
 8007e08:	f000 fd97 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007e0c:	4603      	mov	r3, r0
 8007e0e:	4619      	mov	r1, r3
 8007e10:	4628      	mov	r0, r5
 8007e12:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8007e14:	4633      	mov	r3, r6
    }
 8007e16:	4618      	mov	r0, r3
 8007e18:	3714      	adds	r7, #20
 8007e1a:	46bd      	mov	sp, r7
 8007e1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007e1e:	bf00      	nop
 8007e20:	08027e6c 	.word	0x08027e6c

08007e24 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_>:
      operator=(_Move_assign_base&& __rhs)
 8007e24:	b580      	push	{r7, lr}
 8007e26:	b084      	sub	sp, #16
 8007e28:	af00      	add	r7, sp, #0
 8007e2a:	6078      	str	r0, [r7, #4]
 8007e2c:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007e2e:	687b      	ldr	r3, [r7, #4]
 8007e30:	60fb      	str	r3, [r7, #12]
 8007e32:	6838      	ldr	r0, [r7, #0]
 8007e34:	f7ff fbb7 	bl	80075a6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>
 8007e38:	4602      	mov	r2, r0
 8007e3a:	f107 030c 	add.w	r3, r7, #12
 8007e3e:	4611      	mov	r1, r2
 8007e40:	4618      	mov	r0, r3
 8007e42:	f7ff ffc9 	bl	8007dd8 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRSt7variantIJifbS8_SB_SE_EEEEDcOT1_DpOT2_>
	return *this;
 8007e46:	687b      	ldr	r3, [r7, #4]
      }
 8007e48:	4618      	mov	r0, r3
 8007e4a:	3710      	adds	r7, #16
 8007e4c:	46bd      	mov	sp, r7
 8007e4e:	bd80      	pop	{r7, pc}

08007e50 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEEv>:
      using _Base::_Base;
 8007e50:	b580      	push	{r7, lr}
 8007e52:	b082      	sub	sp, #8
 8007e54:	af00      	add	r7, sp, #0
 8007e56:	6078      	str	r0, [r7, #4]
 8007e58:	687b      	ldr	r3, [r7, #4]
 8007e5a:	4618      	mov	r0, r3
 8007e5c:	f000 feab 	bl	8008bb6 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1Ev>
 8007e60:	687b      	ldr	r3, [r7, #4]
 8007e62:	4618      	mov	r0, r3
 8007e64:	3708      	adds	r7, #8
 8007e66:	46bd      	mov	sp, r7
 8007e68:	bd80      	pop	{r7, pc}

08007e6a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1EOSE_>:
      _Move_ctor_base(_Move_ctor_base&& __rhs)
 8007e6a:	b580      	push	{r7, lr}
 8007e6c:	b082      	sub	sp, #8
 8007e6e:	af00      	add	r7, sp, #0
 8007e70:	6078      	str	r0, [r7, #4]
 8007e72:	6039      	str	r1, [r7, #0]
      {
 8007e74:	687b      	ldr	r3, [r7, #4]
 8007e76:	4618      	mov	r0, r3
 8007e78:	f7ff ffea 	bl	8007e50 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEEv>
	__variant_construct<_Types...>(*this, std::move(__rhs));
 8007e7c:	6838      	ldr	r0, [r7, #0]
 8007e7e:	f000 feaa 	bl	8008bd6 <_ZSt4moveIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEONSt16remove_referenceIT_E4typeEOSI_>
 8007e82:	4603      	mov	r3, r0
 8007e84:	4619      	mov	r1, r3
 8007e86:	6878      	ldr	r0, [r7, #4]
 8007e88:	f001 fad0 	bl	800942c <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_>
      }
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	4618      	mov	r0, r3
 8007e90:	3708      	adds	r7, #8
 8007e92:	46bd      	mov	sp, r7
 8007e94:	bd80      	pop	{r7, pc}

08007e96 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>:
       *  Note that data access with this operator is unchecked and
       *  out_of_range lookups are not defined. (For checked lookups
       *  see at().)
       */
      reference
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8007e96:	b480      	push	{r7}
 8007e98:	b083      	sub	sp, #12
 8007e9a:	af00      	add	r7, sp, #0
 8007e9c:	6078      	str	r0, [r7, #4]
 8007e9e:	6039      	str	r1, [r7, #0]
      {
	__glibcxx_requires_subscript(__n);
	return *(this->_M_impl._M_start + __n);
 8007ea0:	687b      	ldr	r3, [r7, #4]
 8007ea2:	681a      	ldr	r2, [r3, #0]
 8007ea4:	683b      	ldr	r3, [r7, #0]
 8007ea6:	009b      	lsls	r3, r3, #2
 8007ea8:	4413      	add	r3, r2
      }
 8007eaa:	4618      	mov	r0, r3
 8007eac:	370c      	adds	r7, #12
 8007eae:	46bd      	mov	sp, r7
 8007eb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007eb4:	4770      	bx	lr

08007eb6 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8007eb6:	b480      	push	{r7}
 8007eb8:	b083      	sub	sp, #12
 8007eba:	af00      	add	r7, sp, #0
 8007ebc:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8007ebe:	687b      	ldr	r3, [r7, #4]
 8007ec0:	685a      	ldr	r2, [r3, #4]
 8007ec2:	687b      	ldr	r3, [r7, #4]
 8007ec4:	681b      	ldr	r3, [r3, #0]
 8007ec6:	1ad3      	subs	r3, r2, r3
 8007ec8:	4618      	mov	r0, r3
 8007eca:	370c      	adds	r7, #12
 8007ecc:	46bd      	mov	sp, r7
 8007ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ed2:	4770      	bx	lr

08007ed4 <_ZNSt6vectorI12sum_operatorSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8007ed4:	b480      	push	{r7}
 8007ed6:	b083      	sub	sp, #12
 8007ed8:	af00      	add	r7, sp, #0
 8007eda:	6078      	str	r0, [r7, #4]
 8007edc:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 8007ede:	687b      	ldr	r3, [r7, #4]
 8007ee0:	681a      	ldr	r2, [r3, #0]
 8007ee2:	683b      	ldr	r3, [r7, #0]
 8007ee4:	4413      	add	r3, r2
      }
 8007ee6:	4618      	mov	r0, r3
 8007ee8:	370c      	adds	r7, #12
 8007eea:	46bd      	mov	sp, r7
 8007eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ef0:	4770      	bx	lr

08007ef2 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8007ef2:	b480      	push	{r7}
 8007ef4:	b083      	sub	sp, #12
 8007ef6:	af00      	add	r7, sp, #0
 8007ef8:	6078      	str	r0, [r7, #4]
 8007efa:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 8007efc:	687b      	ldr	r3, [r7, #4]
 8007efe:	681a      	ldr	r2, [r3, #0]
 8007f00:	683b      	ldr	r3, [r7, #0]
 8007f02:	009b      	lsls	r3, r3, #2
 8007f04:	4413      	add	r3, r2
      }
 8007f06:	4618      	mov	r0, r3
 8007f08:	370c      	adds	r7, #12
 8007f0a:	46bd      	mov	sp, r7
 8007f0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f10:	4770      	bx	lr

08007f12 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8007f12:	b480      	push	{r7}
 8007f14:	b083      	sub	sp, #12
 8007f16:	af00      	add	r7, sp, #0
 8007f18:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8007f1a:	687b      	ldr	r3, [r7, #4]
 8007f1c:	685a      	ldr	r2, [r3, #4]
 8007f1e:	687b      	ldr	r3, [r7, #4]
 8007f20:	681b      	ldr	r3, [r3, #0]
 8007f22:	1ad3      	subs	r3, r2, r3
 8007f24:	4618      	mov	r0, r3
 8007f26:	370c      	adds	r7, #12
 8007f28:	46bd      	mov	sp, r7
 8007f2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f2e:	4770      	bx	lr

08007f30 <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8007f30:	b480      	push	{r7}
 8007f32:	b083      	sub	sp, #12
 8007f34:	af00      	add	r7, sp, #0
 8007f36:	6078      	str	r0, [r7, #4]
 8007f38:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 8007f3a:	687b      	ldr	r3, [r7, #4]
 8007f3c:	681a      	ldr	r2, [r3, #0]
 8007f3e:	683b      	ldr	r3, [r7, #0]
 8007f40:	4413      	add	r3, r2
      }
 8007f42:	4618      	mov	r0, r3
 8007f44:	370c      	adds	r7, #12
 8007f46:	46bd      	mov	sp, r7
 8007f48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f4c:	4770      	bx	lr

08007f4e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ERKSE_>:
      _Copy_ctor_base(const _Copy_ctor_base& __rhs)
 8007f4e:	b580      	push	{r7, lr}
 8007f50:	b082      	sub	sp, #8
 8007f52:	af00      	add	r7, sp, #0
 8007f54:	6078      	str	r0, [r7, #4]
 8007f56:	6039      	str	r1, [r7, #0]
      {
 8007f58:	687b      	ldr	r3, [r7, #4]
 8007f5a:	4618      	mov	r0, r3
 8007f5c:	f000 fe2b 	bl	8008bb6 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1Ev>
	__variant_construct<_Types...>(*this, __rhs);
 8007f60:	6839      	ldr	r1, [r7, #0]
 8007f62:	6878      	ldr	r0, [r7, #4]
 8007f64:	f001 fcc6 	bl	80098f4 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_>
      }
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	4618      	mov	r0, r3
 8007f6c:	3708      	adds	r7, #8
 8007f6e:	46bd      	mov	sp, r7
 8007f70:	bd80      	pop	{r7, pc}

08007f72 <_ZSt3getIiJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8007f72:	b580      	push	{r7, lr}
 8007f74:	b082      	sub	sp, #8
 8007f76:	af00      	add	r7, sp, #0
 8007f78:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8007f7a:	6878      	ldr	r0, [r7, #4]
 8007f7c:	f001 fcd8 	bl	8009930 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8007f80:	4603      	mov	r3, r0
    }
 8007f82:	4618      	mov	r0, r3
 8007f84:	3708      	adds	r7, #8
 8007f86:	46bd      	mov	sp, r7
 8007f88:	bd80      	pop	{r7, pc}

08007f8a <_ZSt3getIfJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8007f8a:	b580      	push	{r7, lr}
 8007f8c:	b082      	sub	sp, #8
 8007f8e:	af00      	add	r7, sp, #0
 8007f90:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8007f92:	6878      	ldr	r0, [r7, #4]
 8007f94:	f001 fce8 	bl	8009968 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8007f98:	4603      	mov	r3, r0
    }
 8007f9a:	4618      	mov	r0, r3
 8007f9c:	3708      	adds	r7, #8
 8007f9e:	46bd      	mov	sp, r7
 8007fa0:	bd80      	pop	{r7, pc}

08007fa2 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJbifS5_P8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8007fa2:	b580      	push	{r7, lr}
 8007fa4:	b082      	sub	sp, #8
 8007fa6:	af00      	add	r7, sp, #0
 8007fa8:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8007faa:	6878      	ldr	r0, [r7, #4]
 8007fac:	f001 fcf8 	bl	80099a0 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8007fb0:	4603      	mov	r3, r0
    }
 8007fb2:	4618      	mov	r0, r3
 8007fb4:	3708      	adds	r7, #8
 8007fb6:	46bd      	mov	sp, r7
 8007fb8:	bd80      	pop	{r7, pc}

08007fba <_ZSt3getIbJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8007fba:	b580      	push	{r7, lr}
 8007fbc:	b082      	sub	sp, #8
 8007fbe:	af00      	add	r7, sp, #0
 8007fc0:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8007fc2:	6878      	ldr	r0, [r7, #4]
 8007fc4:	f001 fd08 	bl	80099d8 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8007fc8:	4603      	mov	r3, r0
    }
 8007fca:	4618      	mov	r0, r3
 8007fcc:	3708      	adds	r7, #8
 8007fce:	46bd      	mov	sp, r7
 8007fd0:	bd80      	pop	{r7, pc}

08007fd2 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8007fd2:	b580      	push	{r7, lr}
 8007fd4:	b082      	sub	sp, #8
 8007fd6:	af00      	add	r7, sp, #0
 8007fd8:	6078      	str	r0, [r7, #4]
 8007fda:	7039      	strb	r1, [r7, #0]
 8007fdc:	687b      	ldr	r3, [r7, #4]
 8007fde:	4611      	mov	r1, r2
 8007fe0:	4618      	mov	r0, r3
 8007fe2:	f001 fd33 	bl	8009a4c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8007fe6:	687b      	ldr	r3, [r7, #4]
 8007fe8:	4618      	mov	r0, r3
 8007fea:	3708      	adds	r7, #8
 8007fec:	46bd      	mov	sp, r7
 8007fee:	bd80      	pop	{r7, pc}

08007ff0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8007ff0:	b580      	push	{r7, lr}
 8007ff2:	b082      	sub	sp, #8
 8007ff4:	af00      	add	r7, sp, #0
 8007ff6:	6078      	str	r0, [r7, #4]
 8007ff8:	7039      	strb	r1, [r7, #0]
 8007ffa:	687b      	ldr	r3, [r7, #4]
 8007ffc:	4611      	mov	r1, r2
 8007ffe:	4618      	mov	r0, r3
 8008000:	f7ff ffe7 	bl	8007fd2 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8008004:	687b      	ldr	r3, [r7, #4]
 8008006:	4618      	mov	r0, r3
 8008008:	3708      	adds	r7, #8
 800800a:	46bd      	mov	sp, r7
 800800c:	bd80      	pop	{r7, pc}

0800800e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800800e:	b580      	push	{r7, lr}
 8008010:	b082      	sub	sp, #8
 8008012:	af00      	add	r7, sp, #0
 8008014:	6078      	str	r0, [r7, #4]
 8008016:	7039      	strb	r1, [r7, #0]
 8008018:	687b      	ldr	r3, [r7, #4]
 800801a:	4611      	mov	r1, r2
 800801c:	4618      	mov	r0, r3
 800801e:	f7ff ffe7 	bl	8007ff0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8008022:	687b      	ldr	r3, [r7, #4]
 8008024:	4618      	mov	r0, r3
 8008026:	3708      	adds	r7, #8
 8008028:	46bd      	mov	sp, r7
 800802a:	bd80      	pop	{r7, pc}

0800802c <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800802c:	b580      	push	{r7, lr}
 800802e:	b082      	sub	sp, #8
 8008030:	af00      	add	r7, sp, #0
 8008032:	6078      	str	r0, [r7, #4]
 8008034:	7039      	strb	r1, [r7, #0]
 8008036:	687b      	ldr	r3, [r7, #4]
 8008038:	4611      	mov	r1, r2
 800803a:	4618      	mov	r0, r3
 800803c:	f7ff ffe7 	bl	800800e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8008040:	687b      	ldr	r3, [r7, #4]
 8008042:	4618      	mov	r0, r3
 8008044:	3708      	adds	r7, #8
 8008046:	46bd      	mov	sp, r7
 8008048:	bd80      	pop	{r7, pc}

0800804a <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 800804a:	b580      	push	{r7, lr}
 800804c:	b082      	sub	sp, #8
 800804e:	af00      	add	r7, sp, #0
 8008050:	6078      	str	r0, [r7, #4]
 8008052:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 8008054:	687b      	ldr	r3, [r7, #4]
 8008056:	4611      	mov	r1, r2
 8008058:	4618      	mov	r0, r3
 800805a:	f7ff ffe7 	bl	800802c <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800805e:	687b      	ldr	r3, [r7, #4]
 8008060:	4618      	mov	r0, r3
 8008062:	3708      	adds	r7, #8
 8008064:	46bd      	mov	sp, r7
 8008066:	bd80      	pop	{r7, pc}

08008068 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1Ev>:
      _Variant_base()
 8008068:	b580      	push	{r7, lr}
 800806a:	b082      	sub	sp, #8
 800806c:	af00      	add	r7, sp, #0
 800806e:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 8008070:	4619      	mov	r1, r3
 8008072:	6878      	ldr	r0, [r7, #4]
 8008074:	f7ff ffe9 	bl	800804a <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8008078:	687b      	ldr	r3, [r7, #4]
 800807a:	4618      	mov	r0, r3
 800807c:	3708      	adds	r7, #8
 800807e:	46bd      	mov	sp, r7
 8008080:	bd80      	pop	{r7, pc}

08008082 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERKNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8008082:	b480      	push	{r7}
 8008084:	b083      	sub	sp, #12
 8008086:	af00      	add	r7, sp, #0
 8008088:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 800808a:	687b      	ldr	r3, [r7, #4]
    }
 800808c:	4618      	mov	r0, r3
 800808e:	370c      	adds	r7, #12
 8008090:	46bd      	mov	sp, r7
 8008092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008096:	4770      	bx	lr

08008098 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8008098:	b580      	push	{r7, lr}
 800809a:	b082      	sub	sp, #8
 800809c:	af00      	add	r7, sp, #0
 800809e:	7138      	strb	r0, [r7, #4]
 80080a0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80080a2:	6838      	ldr	r0, [r7, #0]
 80080a4:	f001 fcfa 	bl	8009a9c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80080a8:	4603      	mov	r3, r0
 80080aa:	4618      	mov	r0, r3
 80080ac:	f001 fd01 	bl	8009ab2 <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 80080b0:	4603      	mov	r3, r0
 80080b2:	4618      	mov	r0, r3
 80080b4:	3708      	adds	r7, #8
 80080b6:	46bd      	mov	sp, r7
 80080b8:	bd80      	pop	{r7, pc}

080080ba <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80080ba:	b590      	push	{r4, r7, lr}
 80080bc:	b083      	sub	sp, #12
 80080be:	af00      	add	r7, sp, #0
 80080c0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80080c2:	6878      	ldr	r0, [r7, #4]
 80080c4:	f001 fcdf 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80080c8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80080ca:	4619      	mov	r1, r3
 80080cc:	4620      	mov	r0, r4
 80080ce:	f7ff ffe3 	bl	8008098 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80080d2:	4603      	mov	r3, r0
    }
 80080d4:	4618      	mov	r0, r3
 80080d6:	370c      	adds	r7, #12
 80080d8:	46bd      	mov	sp, r7
 80080da:	bd90      	pop	{r4, r7, pc}

080080dc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESS_EEDcOSM_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80080dc:	b580      	push	{r7, lr}
 80080de:	b082      	sub	sp, #8
 80080e0:	af00      	add	r7, sp, #0
 80080e2:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80080e4:	6878      	ldr	r0, [r7, #4]
 80080e6:	f001 fcce 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80080ea:	4603      	mov	r3, r0
 80080ec:	4618      	mov	r0, r3
 80080ee:	f7ff ffe4 	bl	80080ba <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 80080f2:	4603      	mov	r3, r0
	}
 80080f4:	4618      	mov	r0, r3
 80080f6:	3708      	adds	r7, #8
 80080f8:	46bd      	mov	sp, r7
 80080fa:	bd80      	pop	{r7, pc}

080080fc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESO_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80080fc:	b5b0      	push	{r4, r5, r7, lr}
 80080fe:	b084      	sub	sp, #16
 8008100:	af00      	add	r7, sp, #0
 8008102:	6078      	str	r0, [r7, #4]
 8008104:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008106:	6878      	ldr	r0, [r7, #4]
 8008108:	f001 fcb2 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800810c:	4604      	mov	r4, r0
 800810e:	6838      	ldr	r0, [r7, #0]
 8008110:	f001 fcb9 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008114:	4603      	mov	r3, r0
 8008116:	4618      	mov	r0, r3
 8008118:	f7ff ffe0 	bl	80080dc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESS_EEDcOSM_>
 800811c:	4601      	mov	r1, r0
 800811e:	f107 030c 	add.w	r3, r7, #12
 8008122:	461a      	mov	r2, r3
 8008124:	4620      	mov	r0, r4
 8008126:	f001 fccf 	bl	8009ac8 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSR_>
	      integral_constant<size_t, __indices>()...);
 800812a:	462b      	mov	r3, r5
      }
 800812c:	4618      	mov	r0, r3
 800812e:	3710      	adds	r7, #16
 8008130:	46bd      	mov	sp, r7
 8008132:	bdb0      	pop	{r4, r5, r7, pc}

08008134 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESO_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008134:	b5b0      	push	{r4, r5, r7, lr}
 8008136:	b082      	sub	sp, #8
 8008138:	af00      	add	r7, sp, #0
 800813a:	6078      	str	r0, [r7, #4]
 800813c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800813e:	6878      	ldr	r0, [r7, #4]
 8008140:	f001 fc96 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8008144:	4604      	mov	r4, r0
 8008146:	6838      	ldr	r0, [r7, #0]
 8008148:	f001 fc9d 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800814c:	4603      	mov	r3, r0
 800814e:	4619      	mov	r1, r3
 8008150:	4620      	mov	r0, r4
 8008152:	f7ff ffd3 	bl	80080fc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESO_SS_>
				   std::forward<_Variants>(__vars)...);
 8008156:	462b      	mov	r3, r5
      }
 8008158:	4618      	mov	r0, r3
 800815a:	3708      	adds	r7, #8
 800815c:	46bd      	mov	sp, r7
 800815e:	bdb0      	pop	{r4, r5, r7, pc}

08008160 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESO_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008160:	b5b0      	push	{r4, r5, r7, lr}
 8008162:	b082      	sub	sp, #8
 8008164:	af00      	add	r7, sp, #0
 8008166:	6078      	str	r0, [r7, #4]
 8008168:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800816a:	6878      	ldr	r0, [r7, #4]
 800816c:	f001 fc80 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8008170:	4604      	mov	r4, r0
 8008172:	6838      	ldr	r0, [r7, #0]
 8008174:	f001 fc87 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008178:	4603      	mov	r3, r0
 800817a:	4619      	mov	r1, r3
 800817c:	4620      	mov	r0, r4
 800817e:	f7ff ffd9 	bl	8008134 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESO_SS_>
				   std::forward<_Variants>(__vars)...);
 8008182:	462b      	mov	r3, r5
      }
 8008184:	4618      	mov	r0, r3
 8008186:	3708      	adds	r7, #8
 8008188:	46bd      	mov	sp, r7
 800818a:	bdb0      	pop	{r4, r5, r7, pc}

0800818c <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800818c:	b580      	push	{r7, lr}
 800818e:	b082      	sub	sp, #8
 8008190:	af00      	add	r7, sp, #0
 8008192:	7138      	strb	r0, [r7, #4]
 8008194:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8008196:	6838      	ldr	r0, [r7, #0]
 8008198:	f001 fcb4 	bl	8009b04 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 800819c:	4603      	mov	r3, r0
 800819e:	4618      	mov	r0, r3
 80081a0:	f001 fcbb 	bl	8009b1a <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 80081a4:	4603      	mov	r3, r0
 80081a6:	4618      	mov	r0, r3
 80081a8:	3708      	adds	r7, #8
 80081aa:	46bd      	mov	sp, r7
 80081ac:	bd80      	pop	{r7, pc}

080081ae <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80081ae:	b590      	push	{r4, r7, lr}
 80081b0:	b083      	sub	sp, #12
 80081b2:	af00      	add	r7, sp, #0
 80081b4:	7138      	strb	r0, [r7, #4]
 80081b6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80081b8:	6838      	ldr	r0, [r7, #0]
 80081ba:	f001 fc6f 	bl	8009a9c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80081be:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80081c0:	4619      	mov	r1, r3
 80081c2:	4620      	mov	r0, r4
 80081c4:	f7ff ffe2 	bl	800818c <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80081c8:	4603      	mov	r3, r0
    }
 80081ca:	4618      	mov	r0, r3
 80081cc:	370c      	adds	r7, #12
 80081ce:	46bd      	mov	sp, r7
 80081d0:	bd90      	pop	{r4, r7, pc}

080081d2 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80081d2:	b590      	push	{r4, r7, lr}
 80081d4:	b083      	sub	sp, #12
 80081d6:	af00      	add	r7, sp, #0
 80081d8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80081da:	6878      	ldr	r0, [r7, #4]
 80081dc:	f001 fc53 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80081e0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80081e2:	4619      	mov	r1, r3
 80081e4:	4620      	mov	r0, r4
 80081e6:	f7ff ffe2 	bl	80081ae <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80081ea:	4603      	mov	r3, r0
    }
 80081ec:	4618      	mov	r0, r3
 80081ee:	370c      	adds	r7, #12
 80081f0:	46bd      	mov	sp, r7
 80081f2:	bd90      	pop	{r4, r7, pc}

080081f4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESS_EEDcOSM_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80081f4:	b580      	push	{r7, lr}
 80081f6:	b082      	sub	sp, #8
 80081f8:	af00      	add	r7, sp, #0
 80081fa:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80081fc:	6878      	ldr	r0, [r7, #4]
 80081fe:	f001 fc42 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008202:	4603      	mov	r3, r0
 8008204:	4618      	mov	r0, r3
 8008206:	f7ff ffe4 	bl	80081d2 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800820a:	4603      	mov	r3, r0
	}
 800820c:	4618      	mov	r0, r3
 800820e:	3708      	adds	r7, #8
 8008210:	46bd      	mov	sp, r7
 8008212:	bd80      	pop	{r7, pc}

08008214 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESO_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008214:	b5b0      	push	{r4, r5, r7, lr}
 8008216:	b084      	sub	sp, #16
 8008218:	af00      	add	r7, sp, #0
 800821a:	6078      	str	r0, [r7, #4]
 800821c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800821e:	6878      	ldr	r0, [r7, #4]
 8008220:	f001 fc26 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8008224:	4604      	mov	r4, r0
 8008226:	6838      	ldr	r0, [r7, #0]
 8008228:	f001 fc2d 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800822c:	4603      	mov	r3, r0
 800822e:	4618      	mov	r0, r3
 8008230:	f7ff ffe0 	bl	80081f4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESS_EEDcOSM_>
 8008234:	4601      	mov	r1, r0
 8008236:	f107 030c 	add.w	r3, r7, #12
 800823a:	461a      	mov	r2, r3
 800823c:	4620      	mov	r0, r4
 800823e:	f001 fc77 	bl	8009b30 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSR_>
	      integral_constant<size_t, __indices>()...);
 8008242:	462b      	mov	r3, r5
      }
 8008244:	4618      	mov	r0, r3
 8008246:	3710      	adds	r7, #16
 8008248:	46bd      	mov	sp, r7
 800824a:	bdb0      	pop	{r4, r5, r7, pc}

0800824c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESO_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800824c:	b5b0      	push	{r4, r5, r7, lr}
 800824e:	b082      	sub	sp, #8
 8008250:	af00      	add	r7, sp, #0
 8008252:	6078      	str	r0, [r7, #4]
 8008254:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008256:	6878      	ldr	r0, [r7, #4]
 8008258:	f001 fc0a 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800825c:	4604      	mov	r4, r0
 800825e:	6838      	ldr	r0, [r7, #0]
 8008260:	f001 fc11 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008264:	4603      	mov	r3, r0
 8008266:	4619      	mov	r1, r3
 8008268:	4620      	mov	r0, r4
 800826a:	f7ff ffd3 	bl	8008214 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESO_SS_>
				   std::forward<_Variants>(__vars)...);
 800826e:	462b      	mov	r3, r5
      }
 8008270:	4618      	mov	r0, r3
 8008272:	3708      	adds	r7, #8
 8008274:	46bd      	mov	sp, r7
 8008276:	bdb0      	pop	{r4, r5, r7, pc}

08008278 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESO_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008278:	b5b0      	push	{r4, r5, r7, lr}
 800827a:	b082      	sub	sp, #8
 800827c:	af00      	add	r7, sp, #0
 800827e:	6078      	str	r0, [r7, #4]
 8008280:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008282:	6878      	ldr	r0, [r7, #4]
 8008284:	f001 fbf4 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8008288:	4604      	mov	r4, r0
 800828a:	6838      	ldr	r0, [r7, #0]
 800828c:	f001 fbfb 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008290:	4603      	mov	r3, r0
 8008292:	4619      	mov	r1, r3
 8008294:	4620      	mov	r0, r4
 8008296:	f7ff ffd9 	bl	800824c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESO_SS_>
				   std::forward<_Variants>(__vars)...);
 800829a:	462b      	mov	r3, r5
      }
 800829c:	4618      	mov	r0, r3
 800829e:	3708      	adds	r7, #8
 80082a0:	46bd      	mov	sp, r7
 80082a2:	bdb0      	pop	{r4, r5, r7, pc}

080082a4 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80082a4:	b580      	push	{r7, lr}
 80082a6:	b082      	sub	sp, #8
 80082a8:	af00      	add	r7, sp, #0
 80082aa:	7138      	strb	r0, [r7, #4]
 80082ac:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80082ae:	6838      	ldr	r0, [r7, #0]
 80082b0:	f001 fc5c 	bl	8009b6c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80082b4:	4603      	mov	r3, r0
 80082b6:	4618      	mov	r0, r3
 80082b8:	f001 fc63 	bl	8009b82 <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 80082bc:	4603      	mov	r3, r0
 80082be:	4618      	mov	r0, r3
 80082c0:	3708      	adds	r7, #8
 80082c2:	46bd      	mov	sp, r7
 80082c4:	bd80      	pop	{r7, pc}

080082c6 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80082c6:	b590      	push	{r4, r7, lr}
 80082c8:	b083      	sub	sp, #12
 80082ca:	af00      	add	r7, sp, #0
 80082cc:	7138      	strb	r0, [r7, #4]
 80082ce:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80082d0:	6838      	ldr	r0, [r7, #0]
 80082d2:	f001 fc17 	bl	8009b04 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80082d6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80082d8:	4619      	mov	r1, r3
 80082da:	4620      	mov	r0, r4
 80082dc:	f7ff ffe2 	bl	80082a4 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80082e0:	4603      	mov	r3, r0
    }
 80082e2:	4618      	mov	r0, r3
 80082e4:	370c      	adds	r7, #12
 80082e6:	46bd      	mov	sp, r7
 80082e8:	bd90      	pop	{r4, r7, pc}

080082ea <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80082ea:	b590      	push	{r4, r7, lr}
 80082ec:	b083      	sub	sp, #12
 80082ee:	af00      	add	r7, sp, #0
 80082f0:	7138      	strb	r0, [r7, #4]
 80082f2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80082f4:	6838      	ldr	r0, [r7, #0]
 80082f6:	f001 fbd1 	bl	8009a9c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80082fa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80082fc:	4619      	mov	r1, r3
 80082fe:	4620      	mov	r0, r4
 8008300:	f7ff ffe1 	bl	80082c6 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008304:	4603      	mov	r3, r0
    }
 8008306:	4618      	mov	r0, r3
 8008308:	370c      	adds	r7, #12
 800830a:	46bd      	mov	sp, r7
 800830c:	bd90      	pop	{r4, r7, pc}

0800830e <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800830e:	b590      	push	{r4, r7, lr}
 8008310:	b083      	sub	sp, #12
 8008312:	af00      	add	r7, sp, #0
 8008314:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8008316:	6878      	ldr	r0, [r7, #4]
 8008318:	f001 fbb5 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800831c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800831e:	4619      	mov	r1, r3
 8008320:	4620      	mov	r0, r4
 8008322:	f7ff ffe2 	bl	80082ea <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008326:	4603      	mov	r3, r0
    }
 8008328:	4618      	mov	r0, r3
 800832a:	370c      	adds	r7, #12
 800832c:	46bd      	mov	sp, r7
 800832e:	bd90      	pop	{r4, r7, pc}

08008330 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESS_EEDcOSM_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008330:	b580      	push	{r7, lr}
 8008332:	b082      	sub	sp, #8
 8008334:	af00      	add	r7, sp, #0
 8008336:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008338:	6878      	ldr	r0, [r7, #4]
 800833a:	f001 fba4 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800833e:	4603      	mov	r3, r0
 8008340:	4618      	mov	r0, r3
 8008342:	f7ff ffe4 	bl	800830e <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8008346:	4603      	mov	r3, r0
	}
 8008348:	4618      	mov	r0, r3
 800834a:	3708      	adds	r7, #8
 800834c:	46bd      	mov	sp, r7
 800834e:	bd80      	pop	{r7, pc}

08008350 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESO_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008350:	b5b0      	push	{r4, r5, r7, lr}
 8008352:	b084      	sub	sp, #16
 8008354:	af00      	add	r7, sp, #0
 8008356:	6078      	str	r0, [r7, #4]
 8008358:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800835a:	6878      	ldr	r0, [r7, #4]
 800835c:	f001 fb88 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8008360:	4604      	mov	r4, r0
 8008362:	6838      	ldr	r0, [r7, #0]
 8008364:	f001 fb8f 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008368:	4603      	mov	r3, r0
 800836a:	4618      	mov	r0, r3
 800836c:	f7ff ffe0 	bl	8008330 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESS_EEDcOSM_>
 8008370:	4601      	mov	r1, r0
 8008372:	f107 030c 	add.w	r3, r7, #12
 8008376:	461a      	mov	r2, r3
 8008378:	4620      	mov	r0, r4
 800837a:	f001 fc0d 	bl	8009b98 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSR_>
	      integral_constant<size_t, __indices>()...);
 800837e:	462b      	mov	r3, r5
      }
 8008380:	4618      	mov	r0, r3
 8008382:	3710      	adds	r7, #16
 8008384:	46bd      	mov	sp, r7
 8008386:	bdb0      	pop	{r4, r5, r7, pc}

08008388 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESO_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008388:	b5b0      	push	{r4, r5, r7, lr}
 800838a:	b082      	sub	sp, #8
 800838c:	af00      	add	r7, sp, #0
 800838e:	6078      	str	r0, [r7, #4]
 8008390:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008392:	6878      	ldr	r0, [r7, #4]
 8008394:	f001 fb6c 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8008398:	4604      	mov	r4, r0
 800839a:	6838      	ldr	r0, [r7, #0]
 800839c:	f001 fb73 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80083a0:	4603      	mov	r3, r0
 80083a2:	4619      	mov	r1, r3
 80083a4:	4620      	mov	r0, r4
 80083a6:	f7ff ffd3 	bl	8008350 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESO_SS_>
				   std::forward<_Variants>(__vars)...);
 80083aa:	462b      	mov	r3, r5
      }
 80083ac:	4618      	mov	r0, r3
 80083ae:	3708      	adds	r7, #8
 80083b0:	46bd      	mov	sp, r7
 80083b2:	bdb0      	pop	{r4, r5, r7, pc}

080083b4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESO_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80083b4:	b5b0      	push	{r4, r5, r7, lr}
 80083b6:	b082      	sub	sp, #8
 80083b8:	af00      	add	r7, sp, #0
 80083ba:	6078      	str	r0, [r7, #4]
 80083bc:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80083be:	6878      	ldr	r0, [r7, #4]
 80083c0:	f001 fb56 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80083c4:	4604      	mov	r4, r0
 80083c6:	6838      	ldr	r0, [r7, #0]
 80083c8:	f001 fb5d 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80083cc:	4603      	mov	r3, r0
 80083ce:	4619      	mov	r1, r3
 80083d0:	4620      	mov	r0, r4
 80083d2:	f7ff ffd9 	bl	8008388 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESO_SS_>
				   std::forward<_Variants>(__vars)...);
 80083d6:	462b      	mov	r3, r5
      }
 80083d8:	4618      	mov	r0, r3
 80083da:	3708      	adds	r7, #8
 80083dc:	46bd      	mov	sp, r7
 80083de:	bdb0      	pop	{r4, r5, r7, pc}

080083e0 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80083e0:	b580      	push	{r7, lr}
 80083e2:	b082      	sub	sp, #8
 80083e4:	af00      	add	r7, sp, #0
 80083e6:	7138      	strb	r0, [r7, #4]
 80083e8:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80083ea:	6838      	ldr	r0, [r7, #0]
 80083ec:	f001 fbf2 	bl	8009bd4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80083f0:	4603      	mov	r3, r0
 80083f2:	4618      	mov	r0, r3
 80083f4:	f001 fbf9 	bl	8009bea <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 80083f8:	4603      	mov	r3, r0
 80083fa:	4618      	mov	r0, r3
 80083fc:	3708      	adds	r7, #8
 80083fe:	46bd      	mov	sp, r7
 8008400:	bd80      	pop	{r7, pc}

08008402 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8008402:	b590      	push	{r4, r7, lr}
 8008404:	b083      	sub	sp, #12
 8008406:	af00      	add	r7, sp, #0
 8008408:	7138      	strb	r0, [r7, #4]
 800840a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800840c:	6838      	ldr	r0, [r7, #0]
 800840e:	f001 fbad 	bl	8009b6c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8008412:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8008414:	4619      	mov	r1, r3
 8008416:	4620      	mov	r0, r4
 8008418:	f7ff ffe2 	bl	80083e0 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800841c:	4603      	mov	r3, r0
    }
 800841e:	4618      	mov	r0, r3
 8008420:	370c      	adds	r7, #12
 8008422:	46bd      	mov	sp, r7
 8008424:	bd90      	pop	{r4, r7, pc}

08008426 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8008426:	b590      	push	{r4, r7, lr}
 8008428:	b083      	sub	sp, #12
 800842a:	af00      	add	r7, sp, #0
 800842c:	7138      	strb	r0, [r7, #4]
 800842e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8008430:	6838      	ldr	r0, [r7, #0]
 8008432:	f001 fb67 	bl	8009b04 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8008436:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8008438:	4619      	mov	r1, r3
 800843a:	4620      	mov	r0, r4
 800843c:	f7ff ffe1 	bl	8008402 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008440:	4603      	mov	r3, r0
    }
 8008442:	4618      	mov	r0, r3
 8008444:	370c      	adds	r7, #12
 8008446:	46bd      	mov	sp, r7
 8008448:	bd90      	pop	{r4, r7, pc}

0800844a <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800844a:	b590      	push	{r4, r7, lr}
 800844c:	b083      	sub	sp, #12
 800844e:	af00      	add	r7, sp, #0
 8008450:	7138      	strb	r0, [r7, #4]
 8008452:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8008454:	6838      	ldr	r0, [r7, #0]
 8008456:	f001 fb21 	bl	8009a9c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 800845a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800845c:	4619      	mov	r1, r3
 800845e:	4620      	mov	r0, r4
 8008460:	f7ff ffe1 	bl	8008426 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008464:	4603      	mov	r3, r0
    }
 8008466:	4618      	mov	r0, r3
 8008468:	370c      	adds	r7, #12
 800846a:	46bd      	mov	sp, r7
 800846c:	bd90      	pop	{r4, r7, pc}

0800846e <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800846e:	b590      	push	{r4, r7, lr}
 8008470:	b083      	sub	sp, #12
 8008472:	af00      	add	r7, sp, #0
 8008474:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8008476:	6878      	ldr	r0, [r7, #4]
 8008478:	f001 fb05 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800847c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800847e:	4619      	mov	r1, r3
 8008480:	4620      	mov	r0, r4
 8008482:	f7ff ffe2 	bl	800844a <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008486:	4603      	mov	r3, r0
    }
 8008488:	4618      	mov	r0, r3
 800848a:	370c      	adds	r7, #12
 800848c:	46bd      	mov	sp, r7
 800848e:	bd90      	pop	{r4, r7, pc}

08008490 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESS_EEDcOSM_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008490:	b580      	push	{r7, lr}
 8008492:	b082      	sub	sp, #8
 8008494:	af00      	add	r7, sp, #0
 8008496:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008498:	6878      	ldr	r0, [r7, #4]
 800849a:	f001 faf4 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800849e:	4603      	mov	r3, r0
 80084a0:	4618      	mov	r0, r3
 80084a2:	f7ff ffe4 	bl	800846e <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 80084a6:	4603      	mov	r3, r0
	}
 80084a8:	4618      	mov	r0, r3
 80084aa:	3708      	adds	r7, #8
 80084ac:	46bd      	mov	sp, r7
 80084ae:	bd80      	pop	{r7, pc}

080084b0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESO_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80084b0:	b5b0      	push	{r4, r5, r7, lr}
 80084b2:	b084      	sub	sp, #16
 80084b4:	af00      	add	r7, sp, #0
 80084b6:	6078      	str	r0, [r7, #4]
 80084b8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80084ba:	6878      	ldr	r0, [r7, #4]
 80084bc:	f001 fad8 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80084c0:	4604      	mov	r4, r0
 80084c2:	6838      	ldr	r0, [r7, #0]
 80084c4:	f001 fadf 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80084c8:	4603      	mov	r3, r0
 80084ca:	4618      	mov	r0, r3
 80084cc:	f7ff ffe0 	bl	8008490 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESS_EEDcOSM_>
 80084d0:	4601      	mov	r1, r0
 80084d2:	f107 030c 	add.w	r3, r7, #12
 80084d6:	461a      	mov	r2, r3
 80084d8:	4620      	mov	r0, r4
 80084da:	f001 fb93 	bl	8009c04 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSR_>
	      integral_constant<size_t, __indices>()...);
 80084de:	462b      	mov	r3, r5
      }
 80084e0:	4618      	mov	r0, r3
 80084e2:	3710      	adds	r7, #16
 80084e4:	46bd      	mov	sp, r7
 80084e6:	bdb0      	pop	{r4, r5, r7, pc}

080084e8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESO_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80084e8:	b5b0      	push	{r4, r5, r7, lr}
 80084ea:	b082      	sub	sp, #8
 80084ec:	af00      	add	r7, sp, #0
 80084ee:	6078      	str	r0, [r7, #4]
 80084f0:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80084f2:	6878      	ldr	r0, [r7, #4]
 80084f4:	f001 fabc 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80084f8:	4604      	mov	r4, r0
 80084fa:	6838      	ldr	r0, [r7, #0]
 80084fc:	f001 fac3 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008500:	4603      	mov	r3, r0
 8008502:	4619      	mov	r1, r3
 8008504:	4620      	mov	r0, r4
 8008506:	f7ff ffd3 	bl	80084b0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESO_SS_>
				   std::forward<_Variants>(__vars)...);
 800850a:	462b      	mov	r3, r5
      }
 800850c:	4618      	mov	r0, r3
 800850e:	3708      	adds	r7, #8
 8008510:	46bd      	mov	sp, r7
 8008512:	bdb0      	pop	{r4, r5, r7, pc}

08008514 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESO_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008514:	b5b0      	push	{r4, r5, r7, lr}
 8008516:	b082      	sub	sp, #8
 8008518:	af00      	add	r7, sp, #0
 800851a:	6078      	str	r0, [r7, #4]
 800851c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800851e:	6878      	ldr	r0, [r7, #4]
 8008520:	f001 faa6 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8008524:	4604      	mov	r4, r0
 8008526:	6838      	ldr	r0, [r7, #0]
 8008528:	f001 faad 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800852c:	4603      	mov	r3, r0
 800852e:	4619      	mov	r1, r3
 8008530:	4620      	mov	r0, r4
 8008532:	f7ff ffd9 	bl	80084e8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESO_SS_>
				   std::forward<_Variants>(__vars)...);
 8008536:	462b      	mov	r3, r5
      }
 8008538:	4618      	mov	r0, r3
 800853a:	3708      	adds	r7, #8
 800853c:	46bd      	mov	sp, r7
 800853e:	bdb0      	pop	{r4, r5, r7, pc}

08008540 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8008540:	b580      	push	{r7, lr}
 8008542:	b082      	sub	sp, #8
 8008544:	af00      	add	r7, sp, #0
 8008546:	7138      	strb	r0, [r7, #4]
 8008548:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800854a:	6838      	ldr	r0, [r7, #0]
 800854c:	f001 fb78 	bl	8009c40 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8008550:	4603      	mov	r3, r0
 8008552:	4618      	mov	r0, r3
 8008554:	f001 fb7f 	bl	8009c56 <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EE6_M_getEv>
 8008558:	4603      	mov	r3, r0
 800855a:	4618      	mov	r0, r3
 800855c:	3708      	adds	r7, #8
 800855e:	46bd      	mov	sp, r7
 8008560:	bd80      	pop	{r7, pc}

08008562 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8008562:	b590      	push	{r4, r7, lr}
 8008564:	b083      	sub	sp, #12
 8008566:	af00      	add	r7, sp, #0
 8008568:	7138      	strb	r0, [r7, #4]
 800856a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800856c:	6838      	ldr	r0, [r7, #0]
 800856e:	f001 fb31 	bl	8009bd4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8008572:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8008574:	4619      	mov	r1, r3
 8008576:	4620      	mov	r0, r4
 8008578:	f7ff ffe2 	bl	8008540 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800857c:	4603      	mov	r3, r0
    }
 800857e:	4618      	mov	r0, r3
 8008580:	370c      	adds	r7, #12
 8008582:	46bd      	mov	sp, r7
 8008584:	bd90      	pop	{r4, r7, pc}

08008586 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8008586:	b590      	push	{r4, r7, lr}
 8008588:	b083      	sub	sp, #12
 800858a:	af00      	add	r7, sp, #0
 800858c:	7138      	strb	r0, [r7, #4]
 800858e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8008590:	6838      	ldr	r0, [r7, #0]
 8008592:	f001 faeb 	bl	8009b6c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8008596:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8008598:	4619      	mov	r1, r3
 800859a:	4620      	mov	r0, r4
 800859c:	f7ff ffe1 	bl	8008562 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80085a0:	4603      	mov	r3, r0
    }
 80085a2:	4618      	mov	r0, r3
 80085a4:	370c      	adds	r7, #12
 80085a6:	46bd      	mov	sp, r7
 80085a8:	bd90      	pop	{r4, r7, pc}

080085aa <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80085aa:	b590      	push	{r4, r7, lr}
 80085ac:	b083      	sub	sp, #12
 80085ae:	af00      	add	r7, sp, #0
 80085b0:	7138      	strb	r0, [r7, #4]
 80085b2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80085b4:	6838      	ldr	r0, [r7, #0]
 80085b6:	f001 faa5 	bl	8009b04 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80085ba:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80085bc:	4619      	mov	r1, r3
 80085be:	4620      	mov	r0, r4
 80085c0:	f7ff ffe1 	bl	8008586 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80085c4:	4603      	mov	r3, r0
    }
 80085c6:	4618      	mov	r0, r3
 80085c8:	370c      	adds	r7, #12
 80085ca:	46bd      	mov	sp, r7
 80085cc:	bd90      	pop	{r4, r7, pc}

080085ce <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80085ce:	b590      	push	{r4, r7, lr}
 80085d0:	b083      	sub	sp, #12
 80085d2:	af00      	add	r7, sp, #0
 80085d4:	7138      	strb	r0, [r7, #4]
 80085d6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80085d8:	6838      	ldr	r0, [r7, #0]
 80085da:	f001 fa5f 	bl	8009a9c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80085de:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80085e0:	4619      	mov	r1, r3
 80085e2:	4620      	mov	r0, r4
 80085e4:	f7ff ffe1 	bl	80085aa <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80085e8:	4603      	mov	r3, r0
    }
 80085ea:	4618      	mov	r0, r3
 80085ec:	370c      	adds	r7, #12
 80085ee:	46bd      	mov	sp, r7
 80085f0:	bd90      	pop	{r4, r7, pc}

080085f2 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80085f2:	b590      	push	{r4, r7, lr}
 80085f4:	b083      	sub	sp, #12
 80085f6:	af00      	add	r7, sp, #0
 80085f8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80085fa:	6878      	ldr	r0, [r7, #4]
 80085fc:	f001 fa43 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008600:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8008602:	4619      	mov	r1, r3
 8008604:	4620      	mov	r0, r4
 8008606:	f7ff ffe2 	bl	80085ce <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800860a:	4603      	mov	r3, r0
    }
 800860c:	4618      	mov	r0, r3
 800860e:	370c      	adds	r7, #12
 8008610:	46bd      	mov	sp, r7
 8008612:	bd90      	pop	{r4, r7, pc}

08008614 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESS_EEDcOSM_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008614:	b580      	push	{r7, lr}
 8008616:	b082      	sub	sp, #8
 8008618:	af00      	add	r7, sp, #0
 800861a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800861c:	6878      	ldr	r0, [r7, #4]
 800861e:	f001 fa32 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008622:	4603      	mov	r3, r0
 8008624:	4618      	mov	r0, r3
 8008626:	f7ff ffe4 	bl	80085f2 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800862a:	4603      	mov	r3, r0
	}
 800862c:	4618      	mov	r0, r3
 800862e:	3708      	adds	r7, #8
 8008630:	46bd      	mov	sp, r7
 8008632:	bd80      	pop	{r7, pc}

08008634 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESO_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008634:	b5b0      	push	{r4, r5, r7, lr}
 8008636:	b084      	sub	sp, #16
 8008638:	af00      	add	r7, sp, #0
 800863a:	6078      	str	r0, [r7, #4]
 800863c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800863e:	6878      	ldr	r0, [r7, #4]
 8008640:	f001 fa16 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8008644:	4604      	mov	r4, r0
 8008646:	6838      	ldr	r0, [r7, #0]
 8008648:	f001 fa1d 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800864c:	4603      	mov	r3, r0
 800864e:	4618      	mov	r0, r3
 8008650:	f7ff ffe0 	bl	8008614 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESS_EEDcOSM_>
 8008654:	4601      	mov	r1, r0
 8008656:	f107 030c 	add.w	r3, r7, #12
 800865a:	461a      	mov	r2, r3
 800865c:	4620      	mov	r0, r4
 800865e:	f001 fb07 	bl	8009c70 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKSB_St17integral_constantIjLj4EEEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSR_>
	      integral_constant<size_t, __indices>()...);
 8008662:	462b      	mov	r3, r5
      }
 8008664:	4618      	mov	r0, r3
 8008666:	3710      	adds	r7, #16
 8008668:	46bd      	mov	sp, r7
 800866a:	bdb0      	pop	{r4, r5, r7, pc}

0800866c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESO_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800866c:	b5b0      	push	{r4, r5, r7, lr}
 800866e:	b082      	sub	sp, #8
 8008670:	af00      	add	r7, sp, #0
 8008672:	6078      	str	r0, [r7, #4]
 8008674:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008676:	6878      	ldr	r0, [r7, #4]
 8008678:	f001 f9fa 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800867c:	4604      	mov	r4, r0
 800867e:	6838      	ldr	r0, [r7, #0]
 8008680:	f001 fa01 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008684:	4603      	mov	r3, r0
 8008686:	4619      	mov	r1, r3
 8008688:	4620      	mov	r0, r4
 800868a:	f7ff ffd3 	bl	8008634 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESO_SS_>
				   std::forward<_Variants>(__vars)...);
 800868e:	462b      	mov	r3, r5
      }
 8008690:	4618      	mov	r0, r3
 8008692:	3708      	adds	r7, #8
 8008694:	46bd      	mov	sp, r7
 8008696:	bdb0      	pop	{r4, r5, r7, pc}

08008698 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESO_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008698:	b5b0      	push	{r4, r5, r7, lr}
 800869a:	b082      	sub	sp, #8
 800869c:	af00      	add	r7, sp, #0
 800869e:	6078      	str	r0, [r7, #4]
 80086a0:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80086a2:	6878      	ldr	r0, [r7, #4]
 80086a4:	f001 f9e4 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80086a8:	4604      	mov	r4, r0
 80086aa:	6838      	ldr	r0, [r7, #0]
 80086ac:	f001 f9eb 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80086b0:	4603      	mov	r3, r0
 80086b2:	4619      	mov	r1, r3
 80086b4:	4620      	mov	r0, r4
 80086b6:	f7ff ffd9 	bl	800866c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESO_SS_>
				   std::forward<_Variants>(__vars)...);
 80086ba:	462b      	mov	r3, r5
      }
 80086bc:	4618      	mov	r0, r3
 80086be:	3708      	adds	r7, #8
 80086c0:	46bd      	mov	sp, r7
 80086c2:	bdb0      	pop	{r4, r5, r7, pc}

080086c4 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80086c4:	b580      	push	{r7, lr}
 80086c6:	b082      	sub	sp, #8
 80086c8:	af00      	add	r7, sp, #0
 80086ca:	7138      	strb	r0, [r7, #4]
 80086cc:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80086ce:	6838      	ldr	r0, [r7, #0]
 80086d0:	f001 faec 	bl	8009cac <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 80086d4:	4603      	mov	r3, r0
 80086d6:	4618      	mov	r0, r3
 80086d8:	f001 faf3 	bl	8009cc2 <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 80086dc:	4603      	mov	r3, r0
 80086de:	4618      	mov	r0, r3
 80086e0:	3708      	adds	r7, #8
 80086e2:	46bd      	mov	sp, r7
 80086e4:	bd80      	pop	{r7, pc}

080086e6 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80086e6:	b590      	push	{r4, r7, lr}
 80086e8:	b083      	sub	sp, #12
 80086ea:	af00      	add	r7, sp, #0
 80086ec:	7138      	strb	r0, [r7, #4]
 80086ee:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80086f0:	6838      	ldr	r0, [r7, #0]
 80086f2:	f001 faa5 	bl	8009c40 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80086f6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80086f8:	4619      	mov	r1, r3
 80086fa:	4620      	mov	r0, r4
 80086fc:	f7ff ffe2 	bl	80086c4 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8008700:	4603      	mov	r3, r0
    }
 8008702:	4618      	mov	r0, r3
 8008704:	370c      	adds	r7, #12
 8008706:	46bd      	mov	sp, r7
 8008708:	bd90      	pop	{r4, r7, pc}

0800870a <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800870a:	b590      	push	{r4, r7, lr}
 800870c:	b083      	sub	sp, #12
 800870e:	af00      	add	r7, sp, #0
 8008710:	7138      	strb	r0, [r7, #4]
 8008712:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8008714:	6838      	ldr	r0, [r7, #0]
 8008716:	f001 fa5d 	bl	8009bd4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 800871a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800871c:	4619      	mov	r1, r3
 800871e:	4620      	mov	r0, r4
 8008720:	f7ff ffe1 	bl	80086e6 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008724:	4603      	mov	r3, r0
    }
 8008726:	4618      	mov	r0, r3
 8008728:	370c      	adds	r7, #12
 800872a:	46bd      	mov	sp, r7
 800872c:	bd90      	pop	{r4, r7, pc}

0800872e <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800872e:	b590      	push	{r4, r7, lr}
 8008730:	b083      	sub	sp, #12
 8008732:	af00      	add	r7, sp, #0
 8008734:	7138      	strb	r0, [r7, #4]
 8008736:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8008738:	6838      	ldr	r0, [r7, #0]
 800873a:	f001 fa17 	bl	8009b6c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 800873e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8008740:	4619      	mov	r1, r3
 8008742:	4620      	mov	r0, r4
 8008744:	f7ff ffe1 	bl	800870a <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008748:	4603      	mov	r3, r0
    }
 800874a:	4618      	mov	r0, r3
 800874c:	370c      	adds	r7, #12
 800874e:	46bd      	mov	sp, r7
 8008750:	bd90      	pop	{r4, r7, pc}

08008752 <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8008752:	b590      	push	{r4, r7, lr}
 8008754:	b083      	sub	sp, #12
 8008756:	af00      	add	r7, sp, #0
 8008758:	7138      	strb	r0, [r7, #4]
 800875a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800875c:	6838      	ldr	r0, [r7, #0]
 800875e:	f001 f9d1 	bl	8009b04 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8008762:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8008764:	4619      	mov	r1, r3
 8008766:	4620      	mov	r0, r4
 8008768:	f7ff ffe1 	bl	800872e <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800876c:	4603      	mov	r3, r0
    }
 800876e:	4618      	mov	r0, r3
 8008770:	370c      	adds	r7, #12
 8008772:	46bd      	mov	sp, r7
 8008774:	bd90      	pop	{r4, r7, pc}

08008776 <_ZNSt8__detail9__variant5__getILj5ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8008776:	b590      	push	{r4, r7, lr}
 8008778:	b083      	sub	sp, #12
 800877a:	af00      	add	r7, sp, #0
 800877c:	7138      	strb	r0, [r7, #4]
 800877e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8008780:	6838      	ldr	r0, [r7, #0]
 8008782:	f001 f98b 	bl	8009a9c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8008786:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8008788:	4619      	mov	r1, r3
 800878a:	4620      	mov	r0, r4
 800878c:	f7ff ffe1 	bl	8008752 <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008790:	4603      	mov	r3, r0
    }
 8008792:	4618      	mov	r0, r3
 8008794:	370c      	adds	r7, #12
 8008796:	46bd      	mov	sp, r7
 8008798:	bd90      	pop	{r4, r7, pc}

0800879a <_ZNSt8__detail9__variant5__getILj5ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800879a:	b590      	push	{r4, r7, lr}
 800879c:	b083      	sub	sp, #12
 800879e:	af00      	add	r7, sp, #0
 80087a0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80087a2:	6878      	ldr	r0, [r7, #4]
 80087a4:	f001 f96f 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80087a8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80087aa:	4619      	mov	r1, r3
 80087ac:	4620      	mov	r0, r4
 80087ae:	f7ff ffe2 	bl	8008776 <_ZNSt8__detail9__variant5__getILj5ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80087b2:	4603      	mov	r3, r0
    }
 80087b4:	4618      	mov	r0, r3
 80087b6:	370c      	adds	r7, #12
 80087b8:	46bd      	mov	sp, r7
 80087ba:	bd90      	pop	{r4, r7, pc}

080087bc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESS_EEDcOSM_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80087bc:	b580      	push	{r7, lr}
 80087be:	b082      	sub	sp, #8
 80087c0:	af00      	add	r7, sp, #0
 80087c2:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80087c4:	6878      	ldr	r0, [r7, #4]
 80087c6:	f001 f95e 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80087ca:	4603      	mov	r3, r0
 80087cc:	4618      	mov	r0, r3
 80087ce:	f7ff ffe4 	bl	800879a <_ZNSt8__detail9__variant5__getILj5ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 80087d2:	4603      	mov	r3, r0
	}
 80087d4:	4618      	mov	r0, r3
 80087d6:	3708      	adds	r7, #8
 80087d8:	46bd      	mov	sp, r7
 80087da:	bd80      	pop	{r7, pc}

080087dc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESO_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80087dc:	b5b0      	push	{r4, r5, r7, lr}
 80087de:	b084      	sub	sp, #16
 80087e0:	af00      	add	r7, sp, #0
 80087e2:	6078      	str	r0, [r7, #4]
 80087e4:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80087e6:	6878      	ldr	r0, [r7, #4]
 80087e8:	f001 f942 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80087ec:	4604      	mov	r4, r0
 80087ee:	6838      	ldr	r0, [r7, #0]
 80087f0:	f001 f949 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80087f4:	4603      	mov	r3, r0
 80087f6:	4618      	mov	r0, r3
 80087f8:	f7ff ffe0 	bl	80087bc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESS_EEDcOSM_>
 80087fc:	4601      	mov	r1, r0
 80087fe:	f107 030c 	add.w	r3, r7, #12
 8008802:	461a      	mov	r2, r3
 8008804:	4620      	mov	r0, r4
 8008806:	f001 fa69 	bl	8009cdc <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKSE_St17integral_constantIjLj5EEEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSR_>
	      integral_constant<size_t, __indices>()...);
 800880a:	462b      	mov	r3, r5
      }
 800880c:	4618      	mov	r0, r3
 800880e:	3710      	adds	r7, #16
 8008810:	46bd      	mov	sp, r7
 8008812:	bdb0      	pop	{r4, r5, r7, pc}

08008814 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESO_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008814:	b5b0      	push	{r4, r5, r7, lr}
 8008816:	b082      	sub	sp, #8
 8008818:	af00      	add	r7, sp, #0
 800881a:	6078      	str	r0, [r7, #4]
 800881c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800881e:	6878      	ldr	r0, [r7, #4]
 8008820:	f001 f926 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8008824:	4604      	mov	r4, r0
 8008826:	6838      	ldr	r0, [r7, #0]
 8008828:	f001 f92d 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800882c:	4603      	mov	r3, r0
 800882e:	4619      	mov	r1, r3
 8008830:	4620      	mov	r0, r4
 8008832:	f7ff ffd3 	bl	80087dc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESO_SS_>
				   std::forward<_Variants>(__vars)...);
 8008836:	462b      	mov	r3, r5
      }
 8008838:	4618      	mov	r0, r3
 800883a:	3708      	adds	r7, #8
 800883c:	46bd      	mov	sp, r7
 800883e:	bdb0      	pop	{r4, r5, r7, pc}

08008840 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeESO_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008840:	b5b0      	push	{r4, r5, r7, lr}
 8008842:	b082      	sub	sp, #8
 8008844:	af00      	add	r7, sp, #0
 8008846:	6078      	str	r0, [r7, #4]
 8008848:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800884a:	6878      	ldr	r0, [r7, #4]
 800884c:	f001 f910 	bl	8009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8008850:	4604      	mov	r4, r0
 8008852:	6838      	ldr	r0, [r7, #0]
 8008854:	f001 f917 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008858:	4603      	mov	r3, r0
 800885a:	4619      	mov	r1, r3
 800885c:	4620      	mov	r0, r4
 800885e:	f7ff ffd9 	bl	8008814 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEEaSERKSH_EUlOT_T0_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESO_SS_>
				   std::forward<_Variants>(__vars)...);
 8008862:	462b      	mov	r3, r5
      }
 8008864:	4618      	mov	r0, r3
 8008866:	3708      	adds	r7, #8
 8008868:	46bd      	mov	sp, r7
 800886a:	bdb0      	pop	{r4, r5, r7, pc}

0800886c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_RKSt7variantIJifbS9_SC_SF_EEEJLj6EEE9_M_accessIJEEERKST_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 800886c:	b580      	push	{r7, lr}
 800886e:	b082      	sub	sp, #8
 8008870:	af00      	add	r7, sp, #0
 8008872:	6078      	str	r0, [r7, #4]
 8008874:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8008876:	683b      	ldr	r3, [r7, #0]
 8008878:	009b      	lsls	r3, r3, #2
 800887a:	687a      	ldr	r2, [r7, #4]
 800887c:	4413      	add	r3, r2
 800887e:	4618      	mov	r0, r3
 8008880:	f001 fa4a 	bl	8009d18 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_RKSt7variantIJifbS9_SC_SF_EEEJEE9_M_accessEv>
 8008884:	4603      	mov	r3, r0
	}
 8008886:	4618      	mov	r0, r3
 8008888:	3708      	adds	r7, #8
 800888a:	46bd      	mov	sp, r7
 800888c:	bd80      	pop	{r7, pc}
	...

08008890 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKSt7variantIJifbS8_SB_SE_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8008890:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008892:	b085      	sub	sp, #20
 8008894:	af00      	add	r7, sp, #0
 8008896:	6078      	str	r0, [r7, #4]
 8008898:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800889a:	4b0f      	ldr	r3, [pc, #60]	; (80088d8 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKSt7variantIJifbS8_SB_SE_EEEEDcOT1_DpOT2_+0x48>)
 800889c:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800889e:	6838      	ldr	r0, [r7, #0]
 80088a0:	f7ff fa87 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 80088a4:	4603      	mov	r3, r0
 80088a6:	4619      	mov	r1, r3
 80088a8:	68f8      	ldr	r0, [r7, #12]
 80088aa:	f7ff ffdf 	bl	800886c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_RKSt7variantIJifbS9_SC_SF_EEEJLj6EEE9_M_accessIJEEERKST_jDpT_>
 80088ae:	4603      	mov	r3, r0
 80088b0:	681b      	ldr	r3, [r3, #0]
 80088b2:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 80088b4:	68bc      	ldr	r4, [r7, #8]
 80088b6:	6878      	ldr	r0, [r7, #4]
 80088b8:	f001 fa39 	bl	8009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80088bc:	4605      	mov	r5, r0
 80088be:	6838      	ldr	r0, [r7, #0]
 80088c0:	f001 f8e1 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80088c4:	4603      	mov	r3, r0
 80088c6:	4619      	mov	r1, r3
 80088c8:	4628      	mov	r0, r5
 80088ca:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 80088cc:	4633      	mov	r3, r6
    }
 80088ce:	4618      	mov	r0, r3
 80088d0:	3714      	adds	r7, #20
 80088d2:	46bd      	mov	sp, r7
 80088d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80088d6:	bf00      	nop
 80088d8:	08027e84 	.word	0x08027e84

080088dc <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_>:
      operator=(const _Copy_assign_base& __rhs)
 80088dc:	b580      	push	{r7, lr}
 80088de:	b084      	sub	sp, #16
 80088e0:	af00      	add	r7, sp, #0
 80088e2:	6078      	str	r0, [r7, #4]
 80088e4:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80088e6:	687b      	ldr	r3, [r7, #4]
 80088e8:	60fb      	str	r3, [r7, #12]
 80088ea:	6838      	ldr	r0, [r7, #0]
 80088ec:	f7ff fbc9 	bl	8008082 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERKNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>
 80088f0:	4602      	mov	r2, r0
 80088f2:	f107 030c 	add.w	r3, r7, #12
 80088f6:	4611      	mov	r1, r2
 80088f8:	4618      	mov	r0, r3
 80088fa:	f7ff ffc9 	bl	8008890 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKSt7variantIJifbS8_SB_SE_EEEEDcOT1_DpOT2_>
	return *this;
 80088fe:	687b      	ldr	r3, [r7, #4]
      }
 8008900:	4618      	mov	r0, r3
 8008902:	3710      	adds	r7, #16
 8008904:	46bd      	mov	sp, r7
 8008906:	bd80      	pop	{r7, pc}

08008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>:
      void _M_reset()
 8008908:	b580      	push	{r7, lr}
 800890a:	b082      	sub	sp, #8
 800890c:	af00      	add	r7, sp, #0
 800890e:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 8008910:	6878      	ldr	r0, [r7, #4]
 8008912:	f001 fc5d 	bl	800a1d0 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEv>
	_M_index = variant_npos;
 8008916:	687b      	ldr	r3, [r7, #4]
 8008918:	22ff      	movs	r2, #255	; 0xff
 800891a:	761a      	strb	r2, [r3, #24]
      }
 800891c:	bf00      	nop
 800891e:	3708      	adds	r7, #8
 8008920:	46bd      	mov	sp, r7
 8008922:	bd80      	pop	{r7, pc}

08008924 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008924:	b480      	push	{r7}
 8008926:	b083      	sub	sp, #12
 8008928:	af00      	add	r7, sp, #0
 800892a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800892c:	687b      	ldr	r3, [r7, #4]
 800892e:	4618      	mov	r0, r3
 8008930:	370c      	adds	r7, #12
 8008932:	46bd      	mov	sp, r7
 8008934:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008938:	4770      	bx	lr

0800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800893a:	b480      	push	{r7}
 800893c:	b083      	sub	sp, #12
 800893e:	af00      	add	r7, sp, #0
 8008940:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008942:	687b      	ldr	r3, [r7, #4]
 8008944:	4618      	mov	r0, r3
 8008946:	370c      	adds	r7, #12
 8008948:	46bd      	mov	sp, r7
 800894a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800894e:	4770      	bx	lr

08008950 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008950:	b480      	push	{r7}
 8008952:	b083      	sub	sp, #12
 8008954:	af00      	add	r7, sp, #0
 8008956:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008958:	687b      	ldr	r3, [r7, #4]
 800895a:	4618      	mov	r0, r3
 800895c:	370c      	adds	r7, #12
 800895e:	46bd      	mov	sp, r7
 8008960:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008964:	4770      	bx	lr

08008966 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEENSt15__invoke_resultISH_JDpT0_EE4typeESI_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8008966:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800896a:	b084      	sub	sp, #16
 800896c:	af00      	add	r7, sp, #0
 800896e:	60f8      	str	r0, [r7, #12]
 8008970:	60b9      	str	r1, [r7, #8]
 8008972:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8008974:	68f8      	ldr	r0, [r7, #12]
 8008976:	f000 f906 	bl	8008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 800897a:	4604      	mov	r4, r0
 800897c:	68b8      	ldr	r0, [r7, #8]
 800897e:	f7fd fb3c 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8008982:	4605      	mov	r5, r0
 8008984:	6878      	ldr	r0, [r7, #4]
 8008986:	f001 fc35 	bl	800a1f4 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800898a:	4603      	mov	r3, r0
 800898c:	462a      	mov	r2, r5
 800898e:	4621      	mov	r1, r4
 8008990:	4630      	mov	r0, r6
 8008992:	f001 fc3a 	bl	800a20a <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEESI_St14__invoke_otherOSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8008996:	4643      	mov	r3, r8
    }
 8008998:	4618      	mov	r0, r3
 800899a:	3710      	adds	r7, #16
 800899c:	46bd      	mov	sp, r7
 800899e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080089a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80089a2:	b480      	push	{r7}
 80089a4:	b083      	sub	sp, #12
 80089a6:	af00      	add	r7, sp, #0
 80089a8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	4618      	mov	r0, r3
 80089ae:	370c      	adds	r7, #12
 80089b0:	46bd      	mov	sp, r7
 80089b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089b6:	4770      	bx	lr

080089b8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEENSt15__invoke_resultISH_JDpT0_EE4typeESI_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80089b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80089bc:	b084      	sub	sp, #16
 80089be:	af00      	add	r7, sp, #0
 80089c0:	60f8      	str	r0, [r7, #12]
 80089c2:	60b9      	str	r1, [r7, #8]
 80089c4:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80089c6:	68f8      	ldr	r0, [r7, #12]
 80089c8:	f000 f8dd 	bl	8008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 80089cc:	4604      	mov	r4, r0
 80089ce:	68b8      	ldr	r0, [r7, #8]
 80089d0:	f7fd fb35 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80089d4:	4605      	mov	r5, r0
 80089d6:	6878      	ldr	r0, [r7, #4]
 80089d8:	f001 fc35 	bl	800a246 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80089dc:	4603      	mov	r3, r0
 80089de:	462a      	mov	r2, r5
 80089e0:	4621      	mov	r1, r4
 80089e2:	4630      	mov	r0, r6
 80089e4:	f001 fc3a 	bl	800a25c <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEESI_St14__invoke_otherOSK_DpOT1_>
					std::forward<_Args>(__args)...);
 80089e8:	4643      	mov	r3, r8
    }
 80089ea:	4618      	mov	r0, r3
 80089ec:	3710      	adds	r7, #16
 80089ee:	46bd      	mov	sp, r7
 80089f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080089f4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80089f4:	b480      	push	{r7}
 80089f6:	b083      	sub	sp, #12
 80089f8:	af00      	add	r7, sp, #0
 80089fa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80089fc:	687b      	ldr	r3, [r7, #4]
 80089fe:	4618      	mov	r0, r3
 8008a00:	370c      	adds	r7, #12
 8008a02:	46bd      	mov	sp, r7
 8008a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a08:	4770      	bx	lr

08008a0a <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEENSt15__invoke_resultISH_JDpT0_EE4typeESI_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8008a0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008a0e:	b084      	sub	sp, #16
 8008a10:	af00      	add	r7, sp, #0
 8008a12:	60f8      	str	r0, [r7, #12]
 8008a14:	60b9      	str	r1, [r7, #8]
 8008a16:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8008a18:	68f8      	ldr	r0, [r7, #12]
 8008a1a:	f000 f8b4 	bl	8008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8008a1e:	4604      	mov	r4, r0
 8008a20:	68b8      	ldr	r0, [r7, #8]
 8008a22:	f7fd fac8 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8008a26:	4605      	mov	r5, r0
 8008a28:	6878      	ldr	r0, [r7, #4]
 8008a2a:	f001 fc35 	bl	800a298 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8008a2e:	4603      	mov	r3, r0
 8008a30:	462a      	mov	r2, r5
 8008a32:	4621      	mov	r1, r4
 8008a34:	4630      	mov	r0, r6
 8008a36:	f001 fc3a 	bl	800a2ae <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEESI_St14__invoke_otherOSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8008a3a:	4643      	mov	r3, r8
    }
 8008a3c:	4618      	mov	r0, r3
 8008a3e:	3710      	adds	r7, #16
 8008a40:	46bd      	mov	sp, r7
 8008a42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008a46 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008a46:	b480      	push	{r7}
 8008a48:	b083      	sub	sp, #12
 8008a4a:	af00      	add	r7, sp, #0
 8008a4c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008a4e:	687b      	ldr	r3, [r7, #4]
 8008a50:	4618      	mov	r0, r3
 8008a52:	370c      	adds	r7, #12
 8008a54:	46bd      	mov	sp, r7
 8008a56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a5a:	4770      	bx	lr

08008a5c <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISH_JDpT0_EE4typeESI_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8008a5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008a60:	b084      	sub	sp, #16
 8008a62:	af00      	add	r7, sp, #0
 8008a64:	60f8      	str	r0, [r7, #12]
 8008a66:	60b9      	str	r1, [r7, #8]
 8008a68:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8008a6a:	68f8      	ldr	r0, [r7, #12]
 8008a6c:	f000 f88b 	bl	8008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8008a70:	4604      	mov	r4, r0
 8008a72:	68b8      	ldr	r0, [r7, #8]
 8008a74:	f7fd fb11 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8008a78:	4605      	mov	r5, r0
 8008a7a:	6878      	ldr	r0, [r7, #4]
 8008a7c:	f001 fc35 	bl	800a2ea <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8008a80:	4603      	mov	r3, r0
 8008a82:	462a      	mov	r2, r5
 8008a84:	4621      	mov	r1, r4
 8008a86:	4630      	mov	r0, r6
 8008a88:	f001 fc3a 	bl	800a300 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_JRS9_St17integral_constantIjLj3EEEESI_St14__invoke_otherOSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8008a8c:	4643      	mov	r3, r8
    }
 8008a8e:	4618      	mov	r0, r3
 8008a90:	3710      	adds	r7, #16
 8008a92:	46bd      	mov	sp, r7
 8008a94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008a98 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008a98:	b480      	push	{r7}
 8008a9a:	b083      	sub	sp, #12
 8008a9c:	af00      	add	r7, sp, #0
 8008a9e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008aa0:	687b      	ldr	r3, [r7, #4]
 8008aa2:	4618      	mov	r0, r3
 8008aa4:	370c      	adds	r7, #12
 8008aa6:	46bd      	mov	sp, r7
 8008aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008aac:	4770      	bx	lr

08008aae <_ZNRSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8008aae:	b580      	push	{r7, lr}
 8008ab0:	b082      	sub	sp, #8
 8008ab2:	af00      	add	r7, sp, #0
 8008ab4:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8008ab6:	687b      	ldr	r3, [r7, #4]
 8008ab8:	4618      	mov	r0, r3
 8008aba:	f001 fc3f 	bl	800a33c <_ZN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE6_M_ptrEv>
 8008abe:	4603      	mov	r3, r0
 8008ac0:	4618      	mov	r0, r3
 8008ac2:	3708      	adds	r7, #8
 8008ac4:	46bd      	mov	sp, r7
 8008ac6:	bd80      	pop	{r7, pc}

08008ac8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRSB_St17integral_constantIjLj4EEEENSt15__invoke_resultISH_JDpT0_EE4typeESI_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8008ac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008acc:	b084      	sub	sp, #16
 8008ace:	af00      	add	r7, sp, #0
 8008ad0:	60f8      	str	r0, [r7, #12]
 8008ad2:	60b9      	str	r1, [r7, #8]
 8008ad4:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8008ad6:	68f8      	ldr	r0, [r7, #12]
 8008ad8:	f000 f855 	bl	8008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8008adc:	4604      	mov	r4, r0
 8008ade:	68b8      	ldr	r0, [r7, #8]
 8008ae0:	f001 fc38 	bl	800a354 <_ZSt7forwardIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>
 8008ae4:	4605      	mov	r5, r0
 8008ae6:	6878      	ldr	r0, [r7, #4]
 8008ae8:	f001 fc3f 	bl	800a36a <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8008aec:	4603      	mov	r3, r0
 8008aee:	462a      	mov	r2, r5
 8008af0:	4621      	mov	r1, r4
 8008af2:	4630      	mov	r0, r6
 8008af4:	f001 fc44 	bl	800a380 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_JRSC_St17integral_constantIjLj4EEEESI_St14__invoke_otherOSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8008af8:	4643      	mov	r3, r8
    }
 8008afa:	4618      	mov	r0, r3
 8008afc:	3710      	adds	r7, #16
 8008afe:	46bd      	mov	sp, r7
 8008b00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008b04 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008b04:	b480      	push	{r7}
 8008b06:	b083      	sub	sp, #12
 8008b08:	af00      	add	r7, sp, #0
 8008b0a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008b0c:	687b      	ldr	r3, [r7, #4]
 8008b0e:	4618      	mov	r0, r3
 8008b10:	370c      	adds	r7, #12
 8008b12:	46bd      	mov	sp, r7
 8008b14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b18:	4770      	bx	lr

08008b1a <_ZNRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8008b1a:	b580      	push	{r7, lr}
 8008b1c:	b082      	sub	sp, #8
 8008b1e:	af00      	add	r7, sp, #0
 8008b20:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8008b22:	687b      	ldr	r3, [r7, #4]
 8008b24:	4618      	mov	r0, r3
 8008b26:	f001 fc49 	bl	800a3bc <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 8008b2a:	4603      	mov	r3, r0
 8008b2c:	4618      	mov	r0, r3
 8008b2e:	3708      	adds	r7, #8
 8008b30:	46bd      	mov	sp, r7
 8008b32:	bd80      	pop	{r7, pc}

08008b34 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_JRSE_St17integral_constantIjLj5EEEENSt15__invoke_resultISH_JDpT0_EE4typeESI_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8008b34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008b38:	b084      	sub	sp, #16
 8008b3a:	af00      	add	r7, sp, #0
 8008b3c:	60f8      	str	r0, [r7, #12]
 8008b3e:	60b9      	str	r1, [r7, #8]
 8008b40:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8008b42:	68f8      	ldr	r0, [r7, #12]
 8008b44:	f000 f81f 	bl	8008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 8008b48:	4604      	mov	r4, r0
 8008b4a:	68b8      	ldr	r0, [r7, #8]
 8008b4c:	f001 fc42 	bl	800a3d4 <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8008b50:	4605      	mov	r5, r0
 8008b52:	6878      	ldr	r0, [r7, #4]
 8008b54:	f001 fc49 	bl	800a3ea <_ZSt7forwardISt17integral_constantIjLj5EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8008b58:	4603      	mov	r3, r0
 8008b5a:	462a      	mov	r2, r5
 8008b5c:	4621      	mov	r1, r4
 8008b5e:	4630      	mov	r0, r6
 8008b60:	f001 fc4e 	bl	800a400 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_JRSF_St17integral_constantIjLj5EEEESI_St14__invoke_otherOSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8008b64:	4643      	mov	r3, r8
    }
 8008b66:	4618      	mov	r0, r3
 8008b68:	3710      	adds	r7, #16
 8008b6a:	46bd      	mov	sp, r7
 8008b6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008b70 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_RSt7variantIJifbS9_SC_SF_EEEJEE9_M_accessEv>:
      _M_access() const
 8008b70:	b480      	push	{r7}
 8008b72:	b083      	sub	sp, #12
 8008b74:	af00      	add	r7, sp, #0
 8008b76:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8008b78:	687b      	ldr	r3, [r7, #4]
 8008b7a:	4618      	mov	r0, r3
 8008b7c:	370c      	adds	r7, #12
 8008b7e:	46bd      	mov	sp, r7
 8008b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b84:	4770      	bx	lr

08008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008b86:	b480      	push	{r7}
 8008b88:	b083      	sub	sp, #12
 8008b8a:	af00      	add	r7, sp, #0
 8008b8c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008b8e:	687b      	ldr	r3, [r7, #4]
 8008b90:	4618      	mov	r0, r3
 8008b92:	370c      	adds	r7, #12
 8008b94:	46bd      	mov	sp, r7
 8008b96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b9a:	4770      	bx	lr

08008b9c <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8008b9c:	b580      	push	{r7, lr}
 8008b9e:	b082      	sub	sp, #8
 8008ba0:	af00      	add	r7, sp, #0
 8008ba2:	6078      	str	r0, [r7, #4]
 8008ba4:	687b      	ldr	r3, [r7, #4]
 8008ba6:	4618      	mov	r0, r3
 8008ba8:	f001 fc48 	bl	800a43c <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1Ev>
 8008bac:	687b      	ldr	r3, [r7, #4]
 8008bae:	4618      	mov	r0, r3
 8008bb0:	3708      	adds	r7, #8
 8008bb2:	46bd      	mov	sp, r7
 8008bb4:	bd80      	pop	{r7, pc}

08008bb6 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1Ev>:
      constexpr _Variant_storage() : _M_index(variant_npos) { }
 8008bb6:	b580      	push	{r7, lr}
 8008bb8:	b082      	sub	sp, #8
 8008bba:	af00      	add	r7, sp, #0
 8008bbc:	6078      	str	r0, [r7, #4]
 8008bbe:	687b      	ldr	r3, [r7, #4]
 8008bc0:	4618      	mov	r0, r3
 8008bc2:	f7ff ffeb 	bl	8008b9c <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1Ev>
 8008bc6:	687b      	ldr	r3, [r7, #4]
 8008bc8:	22ff      	movs	r2, #255	; 0xff
 8008bca:	761a      	strb	r2, [r3, #24]
 8008bcc:	687b      	ldr	r3, [r7, #4]
 8008bce:	4618      	mov	r0, r3
 8008bd0:	3708      	adds	r7, #8
 8008bd2:	46bd      	mov	sp, r7
 8008bd4:	bd80      	pop	{r7, pc}

08008bd6 <_ZSt4moveIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEONSt16remove_referenceIT_E4typeEOSI_>:
    move(_Tp&& __t) noexcept
 8008bd6:	b480      	push	{r7}
 8008bd8:	b083      	sub	sp, #12
 8008bda:	af00      	add	r7, sp, #0
 8008bdc:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8008bde:	687b      	ldr	r3, [r7, #4]
 8008be0:	4618      	mov	r0, r3
 8008be2:	370c      	adds	r7, #12
 8008be4:	46bd      	mov	sp, r7
 8008be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bea:	4770      	bx	lr

08008bec <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEENSt8__detail9__variant15_Move_ctor_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8008bec:	b480      	push	{r7}
 8008bee:	b083      	sub	sp, #12
 8008bf0:	af00      	add	r7, sp, #0
 8008bf2:	6078      	str	r0, [r7, #4]
        return static_cast<variant<_Types...>&&>(__rhs);
 8008bf4:	687b      	ldr	r3, [r7, #4]
    }
 8008bf6:	4618      	mov	r0, r3
 8008bf8:	370c      	adds	r7, #12
 8008bfa:	46bd      	mov	sp, r7
 8008bfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c00:	4770      	bx	lr

08008c02 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8008c02:	b580      	push	{r7, lr}
 8008c04:	b082      	sub	sp, #8
 8008c06:	af00      	add	r7, sp, #0
 8008c08:	7138      	strb	r0, [r7, #4]
 8008c0a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8008c0c:	6838      	ldr	r0, [r7, #0]
 8008c0e:	f001 fc4e 	bl	800a4ae <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008c12:	4603      	mov	r3, r0
 8008c14:	4618      	mov	r0, r3
 8008c16:	f001 fc55 	bl	800a4c4 <_ZNOSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8008c1a:	4603      	mov	r3, r0
 8008c1c:	4618      	mov	r0, r3
 8008c1e:	3708      	adds	r7, #8
 8008c20:	46bd      	mov	sp, r7
 8008c22:	bd80      	pop	{r7, pc}

08008c24 <_ZNSt8__detail9__variant5__getILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8008c24:	b590      	push	{r4, r7, lr}
 8008c26:	b083      	sub	sp, #12
 8008c28:	af00      	add	r7, sp, #0
 8008c2a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8008c2c:	6878      	ldr	r0, [r7, #4]
 8008c2e:	f001 fc33 	bl	800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008c32:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8008c34:	4619      	mov	r1, r3
 8008c36:	4620      	mov	r0, r4
 8008c38:	f7ff ffe3 	bl	8008c02 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8008c3c:	4603      	mov	r3, r0
    }
 8008c3e:	4618      	mov	r0, r3
 8008c40:	370c      	adds	r7, #12
 8008c42:	46bd      	mov	sp, r7
 8008c44:	bd90      	pop	{r4, r7, pc}

08008c46 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0EST_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008c46:	b580      	push	{r7, lr}
 8008c48:	b082      	sub	sp, #8
 8008c4a:	af00      	add	r7, sp, #0
 8008c4c:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008c4e:	6878      	ldr	r0, [r7, #4]
 8008c50:	f001 fc22 	bl	800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008c54:	4603      	mov	r3, r0
 8008c56:	4618      	mov	r0, r3
 8008c58:	f7ff ffe4 	bl	8008c24 <_ZNSt8__detail9__variant5__getILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8008c5c:	4603      	mov	r3, r0
	}
 8008c5e:	4618      	mov	r0, r3
 8008c60:	3708      	adds	r7, #8
 8008c62:	46bd      	mov	sp, r7
 8008c64:	bd80      	pop	{r7, pc}

08008c66 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESR_SU_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008c66:	b5b0      	push	{r4, r5, r7, lr}
 8008c68:	b082      	sub	sp, #8
 8008c6a:	af00      	add	r7, sp, #0
 8008c6c:	6078      	str	r0, [r7, #4]
 8008c6e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008c70:	6878      	ldr	r0, [r7, #4]
 8008c72:	f001 fbfb 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008c76:	4604      	mov	r4, r0
 8008c78:	6838      	ldr	r0, [r7, #0]
 8008c7a:	f001 fc02 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8008c7e:	4603      	mov	r3, r0
 8008c80:	4618      	mov	r0, r3
 8008c82:	f7ff ffe0 	bl	8008c46 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0EST_EEDcSL_>
 8008c86:	4603      	mov	r3, r0
 8008c88:	4619      	mov	r1, r3
 8008c8a:	4620      	mov	r0, r4
 8008c8c:	f001 fc27 	bl	800a4de <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JiEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSQ_>
		std::forward<_Variants>(__vars))...);
 8008c90:	462b      	mov	r3, r5
      }
 8008c92:	4618      	mov	r0, r3
 8008c94:	3708      	adds	r7, #8
 8008c96:	46bd      	mov	sp, r7
 8008c98:	bdb0      	pop	{r4, r5, r7, pc}

08008c9a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESR_SU_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008c9a:	b5b0      	push	{r4, r5, r7, lr}
 8008c9c:	b082      	sub	sp, #8
 8008c9e:	af00      	add	r7, sp, #0
 8008ca0:	6078      	str	r0, [r7, #4]
 8008ca2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008ca4:	6878      	ldr	r0, [r7, #4]
 8008ca6:	f001 fbe1 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008caa:	4604      	mov	r4, r0
 8008cac:	6838      	ldr	r0, [r7, #0]
 8008cae:	f001 fbe8 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8008cb2:	4603      	mov	r3, r0
 8008cb4:	4619      	mov	r1, r3
 8008cb6:	4620      	mov	r0, r4
 8008cb8:	f7ff ffd5 	bl	8008c66 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESR_SU_>
				   std::forward<_Variants>(__vars)...);
 8008cbc:	462b      	mov	r3, r5
      }
 8008cbe:	4618      	mov	r0, r3
 8008cc0:	3708      	adds	r7, #8
 8008cc2:	46bd      	mov	sp, r7
 8008cc4:	bdb0      	pop	{r4, r5, r7, pc}

08008cc6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESR_SU_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008cc6:	b5b0      	push	{r4, r5, r7, lr}
 8008cc8:	b082      	sub	sp, #8
 8008cca:	af00      	add	r7, sp, #0
 8008ccc:	6078      	str	r0, [r7, #4]
 8008cce:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008cd0:	6878      	ldr	r0, [r7, #4]
 8008cd2:	f001 fbcb 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008cd6:	4604      	mov	r4, r0
 8008cd8:	6838      	ldr	r0, [r7, #0]
 8008cda:	f001 fbd2 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8008cde:	4603      	mov	r3, r0
 8008ce0:	4619      	mov	r1, r3
 8008ce2:	4620      	mov	r0, r4
 8008ce4:	f7ff ffd9 	bl	8008c9a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESR_SU_>
				   std::forward<_Variants>(__vars)...);
 8008ce8:	462b      	mov	r3, r5
      }
 8008cea:	4618      	mov	r0, r3
 8008cec:	3708      	adds	r7, #8
 8008cee:	46bd      	mov	sp, r7
 8008cf0:	bdb0      	pop	{r4, r5, r7, pc}

08008cf2 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8008cf2:	b580      	push	{r7, lr}
 8008cf4:	b082      	sub	sp, #8
 8008cf6:	af00      	add	r7, sp, #0
 8008cf8:	7138      	strb	r0, [r7, #4]
 8008cfa:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8008cfc:	6838      	ldr	r0, [r7, #0]
 8008cfe:	f001 fc05 	bl	800a50c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008d02:	4603      	mov	r3, r0
 8008d04:	4618      	mov	r0, r3
 8008d06:	f001 fc0c 	bl	800a522 <_ZNOSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 8008d0a:	4603      	mov	r3, r0
 8008d0c:	4618      	mov	r0, r3
 8008d0e:	3708      	adds	r7, #8
 8008d10:	46bd      	mov	sp, r7
 8008d12:	bd80      	pop	{r7, pc}

08008d14 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8008d14:	b590      	push	{r4, r7, lr}
 8008d16:	b083      	sub	sp, #12
 8008d18:	af00      	add	r7, sp, #0
 8008d1a:	7138      	strb	r0, [r7, #4]
 8008d1c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8008d1e:	6838      	ldr	r0, [r7, #0]
 8008d20:	f001 fbc5 	bl	800a4ae <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008d24:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8008d26:	4619      	mov	r1, r3
 8008d28:	4620      	mov	r0, r4
 8008d2a:	f7ff ffe2 	bl	8008cf2 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8008d2e:	4603      	mov	r3, r0
    }
 8008d30:	4618      	mov	r0, r3
 8008d32:	370c      	adds	r7, #12
 8008d34:	46bd      	mov	sp, r7
 8008d36:	bd90      	pop	{r4, r7, pc}

08008d38 <_ZNSt8__detail9__variant5__getILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8008d38:	b590      	push	{r4, r7, lr}
 8008d3a:	b083      	sub	sp, #12
 8008d3c:	af00      	add	r7, sp, #0
 8008d3e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8008d40:	6878      	ldr	r0, [r7, #4]
 8008d42:	f001 fba9 	bl	800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008d46:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8008d48:	4619      	mov	r1, r3
 8008d4a:	4620      	mov	r0, r4
 8008d4c:	f7ff ffe2 	bl	8008d14 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008d50:	4603      	mov	r3, r0
    }
 8008d52:	4618      	mov	r0, r3
 8008d54:	370c      	adds	r7, #12
 8008d56:	46bd      	mov	sp, r7
 8008d58:	bd90      	pop	{r4, r7, pc}

08008d5a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1EST_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008d5a:	b580      	push	{r7, lr}
 8008d5c:	b082      	sub	sp, #8
 8008d5e:	af00      	add	r7, sp, #0
 8008d60:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008d62:	6878      	ldr	r0, [r7, #4]
 8008d64:	f001 fb98 	bl	800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008d68:	4603      	mov	r3, r0
 8008d6a:	4618      	mov	r0, r3
 8008d6c:	f7ff ffe4 	bl	8008d38 <_ZNSt8__detail9__variant5__getILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8008d70:	4603      	mov	r3, r0
	}
 8008d72:	4618      	mov	r0, r3
 8008d74:	3708      	adds	r7, #8
 8008d76:	46bd      	mov	sp, r7
 8008d78:	bd80      	pop	{r7, pc}

08008d7a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESR_SU_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008d7a:	b5b0      	push	{r4, r5, r7, lr}
 8008d7c:	b082      	sub	sp, #8
 8008d7e:	af00      	add	r7, sp, #0
 8008d80:	6078      	str	r0, [r7, #4]
 8008d82:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008d84:	6878      	ldr	r0, [r7, #4]
 8008d86:	f001 fb71 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008d8a:	4604      	mov	r4, r0
 8008d8c:	6838      	ldr	r0, [r7, #0]
 8008d8e:	f001 fb78 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8008d92:	4603      	mov	r3, r0
 8008d94:	4618      	mov	r0, r3
 8008d96:	f7ff ffe0 	bl	8008d5a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1EST_EEDcSL_>
 8008d9a:	4603      	mov	r3, r0
 8008d9c:	4619      	mov	r1, r3
 8008d9e:	4620      	mov	r0, r4
 8008da0:	f001 fbcc 	bl	800a53c <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JfEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSQ_>
		std::forward<_Variants>(__vars))...);
 8008da4:	462b      	mov	r3, r5
      }
 8008da6:	4618      	mov	r0, r3
 8008da8:	3708      	adds	r7, #8
 8008daa:	46bd      	mov	sp, r7
 8008dac:	bdb0      	pop	{r4, r5, r7, pc}

08008dae <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESR_SU_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008dae:	b5b0      	push	{r4, r5, r7, lr}
 8008db0:	b082      	sub	sp, #8
 8008db2:	af00      	add	r7, sp, #0
 8008db4:	6078      	str	r0, [r7, #4]
 8008db6:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008db8:	6878      	ldr	r0, [r7, #4]
 8008dba:	f001 fb57 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008dbe:	4604      	mov	r4, r0
 8008dc0:	6838      	ldr	r0, [r7, #0]
 8008dc2:	f001 fb5e 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8008dc6:	4603      	mov	r3, r0
 8008dc8:	4619      	mov	r1, r3
 8008dca:	4620      	mov	r0, r4
 8008dcc:	f7ff ffd5 	bl	8008d7a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESR_SU_>
				   std::forward<_Variants>(__vars)...);
 8008dd0:	462b      	mov	r3, r5
      }
 8008dd2:	4618      	mov	r0, r3
 8008dd4:	3708      	adds	r7, #8
 8008dd6:	46bd      	mov	sp, r7
 8008dd8:	bdb0      	pop	{r4, r5, r7, pc}

08008dda <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESR_SU_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008dda:	b5b0      	push	{r4, r5, r7, lr}
 8008ddc:	b082      	sub	sp, #8
 8008dde:	af00      	add	r7, sp, #0
 8008de0:	6078      	str	r0, [r7, #4]
 8008de2:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008de4:	6878      	ldr	r0, [r7, #4]
 8008de6:	f001 fb41 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008dea:	4604      	mov	r4, r0
 8008dec:	6838      	ldr	r0, [r7, #0]
 8008dee:	f001 fb48 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8008df2:	4603      	mov	r3, r0
 8008df4:	4619      	mov	r1, r3
 8008df6:	4620      	mov	r0, r4
 8008df8:	f7ff ffd9 	bl	8008dae <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESR_SU_>
				   std::forward<_Variants>(__vars)...);
 8008dfc:	462b      	mov	r3, r5
      }
 8008dfe:	4618      	mov	r0, r3
 8008e00:	3708      	adds	r7, #8
 8008e02:	46bd      	mov	sp, r7
 8008e04:	bdb0      	pop	{r4, r5, r7, pc}

08008e06 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8008e06:	b580      	push	{r7, lr}
 8008e08:	b082      	sub	sp, #8
 8008e0a:	af00      	add	r7, sp, #0
 8008e0c:	7138      	strb	r0, [r7, #4]
 8008e0e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8008e10:	6838      	ldr	r0, [r7, #0]
 8008e12:	f001 fbaa 	bl	800a56a <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008e16:	4603      	mov	r3, r0
 8008e18:	4618      	mov	r0, r3
 8008e1a:	f001 fbb1 	bl	800a580 <_ZNOSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 8008e1e:	4603      	mov	r3, r0
 8008e20:	4618      	mov	r0, r3
 8008e22:	3708      	adds	r7, #8
 8008e24:	46bd      	mov	sp, r7
 8008e26:	bd80      	pop	{r7, pc}

08008e28 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8008e28:	b590      	push	{r4, r7, lr}
 8008e2a:	b083      	sub	sp, #12
 8008e2c:	af00      	add	r7, sp, #0
 8008e2e:	7138      	strb	r0, [r7, #4]
 8008e30:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8008e32:	6838      	ldr	r0, [r7, #0]
 8008e34:	f001 fb6a 	bl	800a50c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008e38:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8008e3a:	4619      	mov	r1, r3
 8008e3c:	4620      	mov	r0, r4
 8008e3e:	f7ff ffe2 	bl	8008e06 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8008e42:	4603      	mov	r3, r0
    }
 8008e44:	4618      	mov	r0, r3
 8008e46:	370c      	adds	r7, #12
 8008e48:	46bd      	mov	sp, r7
 8008e4a:	bd90      	pop	{r4, r7, pc}

08008e4c <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8008e4c:	b590      	push	{r4, r7, lr}
 8008e4e:	b083      	sub	sp, #12
 8008e50:	af00      	add	r7, sp, #0
 8008e52:	7138      	strb	r0, [r7, #4]
 8008e54:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8008e56:	6838      	ldr	r0, [r7, #0]
 8008e58:	f001 fb29 	bl	800a4ae <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008e5c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8008e5e:	4619      	mov	r1, r3
 8008e60:	4620      	mov	r0, r4
 8008e62:	f7ff ffe1 	bl	8008e28 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008e66:	4603      	mov	r3, r0
    }
 8008e68:	4618      	mov	r0, r3
 8008e6a:	370c      	adds	r7, #12
 8008e6c:	46bd      	mov	sp, r7
 8008e6e:	bd90      	pop	{r4, r7, pc}

08008e70 <_ZNSt8__detail9__variant5__getILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8008e70:	b590      	push	{r4, r7, lr}
 8008e72:	b083      	sub	sp, #12
 8008e74:	af00      	add	r7, sp, #0
 8008e76:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8008e78:	6878      	ldr	r0, [r7, #4]
 8008e7a:	f001 fb0d 	bl	800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008e7e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8008e80:	4619      	mov	r1, r3
 8008e82:	4620      	mov	r0, r4
 8008e84:	f7ff ffe2 	bl	8008e4c <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008e88:	4603      	mov	r3, r0
    }
 8008e8a:	4618      	mov	r0, r3
 8008e8c:	370c      	adds	r7, #12
 8008e8e:	46bd      	mov	sp, r7
 8008e90:	bd90      	pop	{r4, r7, pc}

08008e92 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2EST_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008e92:	b580      	push	{r7, lr}
 8008e94:	b082      	sub	sp, #8
 8008e96:	af00      	add	r7, sp, #0
 8008e98:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008e9a:	6878      	ldr	r0, [r7, #4]
 8008e9c:	f001 fafc 	bl	800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008ea0:	4603      	mov	r3, r0
 8008ea2:	4618      	mov	r0, r3
 8008ea4:	f7ff ffe4 	bl	8008e70 <_ZNSt8__detail9__variant5__getILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8008ea8:	4603      	mov	r3, r0
	}
 8008eaa:	4618      	mov	r0, r3
 8008eac:	3708      	adds	r7, #8
 8008eae:	46bd      	mov	sp, r7
 8008eb0:	bd80      	pop	{r7, pc}

08008eb2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESR_SU_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008eb2:	b5b0      	push	{r4, r5, r7, lr}
 8008eb4:	b082      	sub	sp, #8
 8008eb6:	af00      	add	r7, sp, #0
 8008eb8:	6078      	str	r0, [r7, #4]
 8008eba:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008ebc:	6878      	ldr	r0, [r7, #4]
 8008ebe:	f001 fad5 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008ec2:	4604      	mov	r4, r0
 8008ec4:	6838      	ldr	r0, [r7, #0]
 8008ec6:	f001 fadc 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8008eca:	4603      	mov	r3, r0
 8008ecc:	4618      	mov	r0, r3
 8008ece:	f7ff ffe0 	bl	8008e92 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2EST_EEDcSL_>
 8008ed2:	4603      	mov	r3, r0
 8008ed4:	4619      	mov	r1, r3
 8008ed6:	4620      	mov	r0, r4
 8008ed8:	f001 fb5f 	bl	800a59a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JbEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSQ_>
		std::forward<_Variants>(__vars))...);
 8008edc:	462b      	mov	r3, r5
      }
 8008ede:	4618      	mov	r0, r3
 8008ee0:	3708      	adds	r7, #8
 8008ee2:	46bd      	mov	sp, r7
 8008ee4:	bdb0      	pop	{r4, r5, r7, pc}

08008ee6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESR_SU_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008ee6:	b5b0      	push	{r4, r5, r7, lr}
 8008ee8:	b082      	sub	sp, #8
 8008eea:	af00      	add	r7, sp, #0
 8008eec:	6078      	str	r0, [r7, #4]
 8008eee:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008ef0:	6878      	ldr	r0, [r7, #4]
 8008ef2:	f001 fabb 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008ef6:	4604      	mov	r4, r0
 8008ef8:	6838      	ldr	r0, [r7, #0]
 8008efa:	f001 fac2 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8008efe:	4603      	mov	r3, r0
 8008f00:	4619      	mov	r1, r3
 8008f02:	4620      	mov	r0, r4
 8008f04:	f7ff ffd5 	bl	8008eb2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESR_SU_>
				   std::forward<_Variants>(__vars)...);
 8008f08:	462b      	mov	r3, r5
      }
 8008f0a:	4618      	mov	r0, r3
 8008f0c:	3708      	adds	r7, #8
 8008f0e:	46bd      	mov	sp, r7
 8008f10:	bdb0      	pop	{r4, r5, r7, pc}

08008f12 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESR_SU_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008f12:	b5b0      	push	{r4, r5, r7, lr}
 8008f14:	b082      	sub	sp, #8
 8008f16:	af00      	add	r7, sp, #0
 8008f18:	6078      	str	r0, [r7, #4]
 8008f1a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008f1c:	6878      	ldr	r0, [r7, #4]
 8008f1e:	f001 faa5 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008f22:	4604      	mov	r4, r0
 8008f24:	6838      	ldr	r0, [r7, #0]
 8008f26:	f001 faac 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8008f2a:	4603      	mov	r3, r0
 8008f2c:	4619      	mov	r1, r3
 8008f2e:	4620      	mov	r0, r4
 8008f30:	f7ff ffd9 	bl	8008ee6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESR_SU_>
				   std::forward<_Variants>(__vars)...);
 8008f34:	462b      	mov	r3, r5
      }
 8008f36:	4618      	mov	r0, r3
 8008f38:	3708      	adds	r7, #8
 8008f3a:	46bd      	mov	sp, r7
 8008f3c:	bdb0      	pop	{r4, r5, r7, pc}

08008f3e <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8008f3e:	b580      	push	{r7, lr}
 8008f40:	b082      	sub	sp, #8
 8008f42:	af00      	add	r7, sp, #0
 8008f44:	7138      	strb	r0, [r7, #4]
 8008f46:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8008f48:	6838      	ldr	r0, [r7, #0]
 8008f4a:	f001 fb3d 	bl	800a5c8 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008f4e:	4603      	mov	r3, r0
 8008f50:	4618      	mov	r0, r3
 8008f52:	f001 fb44 	bl	800a5de <_ZNOSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8008f56:	4603      	mov	r3, r0
 8008f58:	4618      	mov	r0, r3
 8008f5a:	3708      	adds	r7, #8
 8008f5c:	46bd      	mov	sp, r7
 8008f5e:	bd80      	pop	{r7, pc}

08008f60 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8008f60:	b590      	push	{r4, r7, lr}
 8008f62:	b083      	sub	sp, #12
 8008f64:	af00      	add	r7, sp, #0
 8008f66:	7138      	strb	r0, [r7, #4]
 8008f68:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8008f6a:	6838      	ldr	r0, [r7, #0]
 8008f6c:	f001 fafd 	bl	800a56a <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008f70:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8008f72:	4619      	mov	r1, r3
 8008f74:	4620      	mov	r0, r4
 8008f76:	f7ff ffe2 	bl	8008f3e <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8008f7a:	4603      	mov	r3, r0
    }
 8008f7c:	4618      	mov	r0, r3
 8008f7e:	370c      	adds	r7, #12
 8008f80:	46bd      	mov	sp, r7
 8008f82:	bd90      	pop	{r4, r7, pc}

08008f84 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8008f84:	b590      	push	{r4, r7, lr}
 8008f86:	b083      	sub	sp, #12
 8008f88:	af00      	add	r7, sp, #0
 8008f8a:	7138      	strb	r0, [r7, #4]
 8008f8c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8008f8e:	6838      	ldr	r0, [r7, #0]
 8008f90:	f001 fabc 	bl	800a50c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008f94:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8008f96:	4619      	mov	r1, r3
 8008f98:	4620      	mov	r0, r4
 8008f9a:	f7ff ffe1 	bl	8008f60 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008f9e:	4603      	mov	r3, r0
    }
 8008fa0:	4618      	mov	r0, r3
 8008fa2:	370c      	adds	r7, #12
 8008fa4:	46bd      	mov	sp, r7
 8008fa6:	bd90      	pop	{r4, r7, pc}

08008fa8 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8008fa8:	b590      	push	{r4, r7, lr}
 8008faa:	b083      	sub	sp, #12
 8008fac:	af00      	add	r7, sp, #0
 8008fae:	7138      	strb	r0, [r7, #4]
 8008fb0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8008fb2:	6838      	ldr	r0, [r7, #0]
 8008fb4:	f001 fa7b 	bl	800a4ae <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008fb8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8008fba:	4619      	mov	r1, r3
 8008fbc:	4620      	mov	r0, r4
 8008fbe:	f7ff ffe1 	bl	8008f84 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008fc2:	4603      	mov	r3, r0
    }
 8008fc4:	4618      	mov	r0, r3
 8008fc6:	370c      	adds	r7, #12
 8008fc8:	46bd      	mov	sp, r7
 8008fca:	bd90      	pop	{r4, r7, pc}

08008fcc <_ZNSt8__detail9__variant5__getILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8008fcc:	b590      	push	{r4, r7, lr}
 8008fce:	b083      	sub	sp, #12
 8008fd0:	af00      	add	r7, sp, #0
 8008fd2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8008fd4:	6878      	ldr	r0, [r7, #4]
 8008fd6:	f001 fa5f 	bl	800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008fda:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8008fdc:	4619      	mov	r1, r3
 8008fde:	4620      	mov	r0, r4
 8008fe0:	f7ff ffe2 	bl	8008fa8 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8008fe4:	4603      	mov	r3, r0
    }
 8008fe6:	4618      	mov	r0, r3
 8008fe8:	370c      	adds	r7, #12
 8008fea:	46bd      	mov	sp, r7
 8008fec:	bd90      	pop	{r4, r7, pc}

08008fee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3EST_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008fee:	b580      	push	{r7, lr}
 8008ff0:	b082      	sub	sp, #8
 8008ff2:	af00      	add	r7, sp, #0
 8008ff4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008ff6:	6878      	ldr	r0, [r7, #4]
 8008ff8:	f001 fa4e 	bl	800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008ffc:	4603      	mov	r3, r0
 8008ffe:	4618      	mov	r0, r3
 8009000:	f7ff ffe4 	bl	8008fcc <_ZNSt8__detail9__variant5__getILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8009004:	4603      	mov	r3, r0
	}
 8009006:	4618      	mov	r0, r3
 8009008:	3708      	adds	r7, #8
 800900a:	46bd      	mov	sp, r7
 800900c:	bd80      	pop	{r7, pc}

0800900e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESR_SU_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800900e:	b5b0      	push	{r4, r5, r7, lr}
 8009010:	b082      	sub	sp, #8
 8009012:	af00      	add	r7, sp, #0
 8009014:	6078      	str	r0, [r7, #4]
 8009016:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8009018:	6878      	ldr	r0, [r7, #4]
 800901a:	f001 fa27 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800901e:	4604      	mov	r4, r0
 8009020:	6838      	ldr	r0, [r7, #0]
 8009022:	f001 fa2e 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009026:	4603      	mov	r3, r0
 8009028:	4618      	mov	r0, r3
 800902a:	f7ff ffe0 	bl	8008fee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3EST_EEDcSL_>
 800902e:	4603      	mov	r3, r0
 8009030:	4619      	mov	r1, r3
 8009032:	4620      	mov	r0, r4
 8009034:	f001 fae4 	bl	800a600 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JS8_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSQ_>
		std::forward<_Variants>(__vars))...);
 8009038:	462b      	mov	r3, r5
      }
 800903a:	4618      	mov	r0, r3
 800903c:	3708      	adds	r7, #8
 800903e:	46bd      	mov	sp, r7
 8009040:	bdb0      	pop	{r4, r5, r7, pc}

08009042 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESR_SU_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009042:	b5b0      	push	{r4, r5, r7, lr}
 8009044:	b082      	sub	sp, #8
 8009046:	af00      	add	r7, sp, #0
 8009048:	6078      	str	r0, [r7, #4]
 800904a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800904c:	6878      	ldr	r0, [r7, #4]
 800904e:	f001 fa0d 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009052:	4604      	mov	r4, r0
 8009054:	6838      	ldr	r0, [r7, #0]
 8009056:	f001 fa14 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800905a:	4603      	mov	r3, r0
 800905c:	4619      	mov	r1, r3
 800905e:	4620      	mov	r0, r4
 8009060:	f7ff ffd5 	bl	800900e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESR_SU_>
				   std::forward<_Variants>(__vars)...);
 8009064:	462b      	mov	r3, r5
      }
 8009066:	4618      	mov	r0, r3
 8009068:	3708      	adds	r7, #8
 800906a:	46bd      	mov	sp, r7
 800906c:	bdb0      	pop	{r4, r5, r7, pc}

0800906e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESR_SU_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800906e:	b5b0      	push	{r4, r5, r7, lr}
 8009070:	b082      	sub	sp, #8
 8009072:	af00      	add	r7, sp, #0
 8009074:	6078      	str	r0, [r7, #4]
 8009076:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8009078:	6878      	ldr	r0, [r7, #4]
 800907a:	f001 f9f7 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800907e:	4604      	mov	r4, r0
 8009080:	6838      	ldr	r0, [r7, #0]
 8009082:	f001 f9fe 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009086:	4603      	mov	r3, r0
 8009088:	4619      	mov	r1, r3
 800908a:	4620      	mov	r0, r4
 800908c:	f7ff ffd9 	bl	8009042 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESR_SU_>
				   std::forward<_Variants>(__vars)...);
 8009090:	462b      	mov	r3, r5
      }
 8009092:	4618      	mov	r0, r3
 8009094:	3708      	adds	r7, #8
 8009096:	46bd      	mov	sp, r7
 8009098:	bdb0      	pop	{r4, r5, r7, pc}

0800909a <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800909a:	b580      	push	{r7, lr}
 800909c:	b082      	sub	sp, #8
 800909e:	af00      	add	r7, sp, #0
 80090a0:	7138      	strb	r0, [r7, #4]
 80090a2:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80090a4:	6838      	ldr	r0, [r7, #0]
 80090a6:	f001 fac2 	bl	800a62e <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80090aa:	4603      	mov	r3, r0
 80090ac:	4618      	mov	r0, r3
 80090ae:	f001 fac9 	bl	800a644 <_ZNOSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EE6_M_getEv>
 80090b2:	4603      	mov	r3, r0
 80090b4:	4618      	mov	r0, r3
 80090b6:	3708      	adds	r7, #8
 80090b8:	46bd      	mov	sp, r7
 80090ba:	bd80      	pop	{r7, pc}

080090bc <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80090bc:	b590      	push	{r4, r7, lr}
 80090be:	b083      	sub	sp, #12
 80090c0:	af00      	add	r7, sp, #0
 80090c2:	7138      	strb	r0, [r7, #4]
 80090c4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80090c6:	6838      	ldr	r0, [r7, #0]
 80090c8:	f001 fa7e 	bl	800a5c8 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80090cc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80090ce:	4619      	mov	r1, r3
 80090d0:	4620      	mov	r0, r4
 80090d2:	f7ff ffe2 	bl	800909a <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80090d6:	4603      	mov	r3, r0
    }
 80090d8:	4618      	mov	r0, r3
 80090da:	370c      	adds	r7, #12
 80090dc:	46bd      	mov	sp, r7
 80090de:	bd90      	pop	{r4, r7, pc}

080090e0 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80090e0:	b590      	push	{r4, r7, lr}
 80090e2:	b083      	sub	sp, #12
 80090e4:	af00      	add	r7, sp, #0
 80090e6:	7138      	strb	r0, [r7, #4]
 80090e8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80090ea:	6838      	ldr	r0, [r7, #0]
 80090ec:	f001 fa3d 	bl	800a56a <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80090f0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80090f2:	4619      	mov	r1, r3
 80090f4:	4620      	mov	r0, r4
 80090f6:	f7ff ffe1 	bl	80090bc <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80090fa:	4603      	mov	r3, r0
    }
 80090fc:	4618      	mov	r0, r3
 80090fe:	370c      	adds	r7, #12
 8009100:	46bd      	mov	sp, r7
 8009102:	bd90      	pop	{r4, r7, pc}

08009104 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8009104:	b590      	push	{r4, r7, lr}
 8009106:	b083      	sub	sp, #12
 8009108:	af00      	add	r7, sp, #0
 800910a:	7138      	strb	r0, [r7, #4]
 800910c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800910e:	6838      	ldr	r0, [r7, #0]
 8009110:	f001 f9fc 	bl	800a50c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009114:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8009116:	4619      	mov	r1, r3
 8009118:	4620      	mov	r0, r4
 800911a:	f7ff ffe1 	bl	80090e0 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800911e:	4603      	mov	r3, r0
    }
 8009120:	4618      	mov	r0, r3
 8009122:	370c      	adds	r7, #12
 8009124:	46bd      	mov	sp, r7
 8009126:	bd90      	pop	{r4, r7, pc}

08009128 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8009128:	b590      	push	{r4, r7, lr}
 800912a:	b083      	sub	sp, #12
 800912c:	af00      	add	r7, sp, #0
 800912e:	7138      	strb	r0, [r7, #4]
 8009130:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8009132:	6838      	ldr	r0, [r7, #0]
 8009134:	f001 f9bb 	bl	800a4ae <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009138:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800913a:	4619      	mov	r1, r3
 800913c:	4620      	mov	r0, r4
 800913e:	f7ff ffe1 	bl	8009104 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8009142:	4603      	mov	r3, r0
    }
 8009144:	4618      	mov	r0, r3
 8009146:	370c      	adds	r7, #12
 8009148:	46bd      	mov	sp, r7
 800914a:	bd90      	pop	{r4, r7, pc}

0800914c <_ZNSt8__detail9__variant5__getILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800914c:	b590      	push	{r4, r7, lr}
 800914e:	b083      	sub	sp, #12
 8009150:	af00      	add	r7, sp, #0
 8009152:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8009154:	6878      	ldr	r0, [r7, #4]
 8009156:	f001 f99f 	bl	800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800915a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800915c:	4619      	mov	r1, r3
 800915e:	4620      	mov	r0, r4
 8009160:	f7ff ffe2 	bl	8009128 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8009164:	4603      	mov	r3, r0
    }
 8009166:	4618      	mov	r0, r3
 8009168:	370c      	adds	r7, #12
 800916a:	46bd      	mov	sp, r7
 800916c:	bd90      	pop	{r4, r7, pc}

0800916e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4EST_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800916e:	b580      	push	{r7, lr}
 8009170:	b082      	sub	sp, #8
 8009172:	af00      	add	r7, sp, #0
 8009174:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8009176:	6878      	ldr	r0, [r7, #4]
 8009178:	f001 f98e 	bl	800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800917c:	4603      	mov	r3, r0
 800917e:	4618      	mov	r0, r3
 8009180:	f7ff ffe4 	bl	800914c <_ZNSt8__detail9__variant5__getILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8009184:	4603      	mov	r3, r0
	}
 8009186:	4618      	mov	r0, r3
 8009188:	3708      	adds	r7, #8
 800918a:	46bd      	mov	sp, r7
 800918c:	bd80      	pop	{r7, pc}

0800918e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESR_SU_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800918e:	b5b0      	push	{r4, r5, r7, lr}
 8009190:	b082      	sub	sp, #8
 8009192:	af00      	add	r7, sp, #0
 8009194:	6078      	str	r0, [r7, #4]
 8009196:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8009198:	6878      	ldr	r0, [r7, #4]
 800919a:	f001 f967 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800919e:	4604      	mov	r4, r0
 80091a0:	6838      	ldr	r0, [r7, #0]
 80091a2:	f001 f96e 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80091a6:	4603      	mov	r3, r0
 80091a8:	4618      	mov	r0, r3
 80091aa:	f7ff ffe0 	bl	800916e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4EST_EEDcSL_>
 80091ae:	4603      	mov	r3, r0
 80091b0:	4619      	mov	r1, r3
 80091b2:	4620      	mov	r0, r4
 80091b4:	f001 fa57 	bl	800a666 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JSB_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSQ_>
		std::forward<_Variants>(__vars))...);
 80091b8:	462b      	mov	r3, r5
      }
 80091ba:	4618      	mov	r0, r3
 80091bc:	3708      	adds	r7, #8
 80091be:	46bd      	mov	sp, r7
 80091c0:	bdb0      	pop	{r4, r5, r7, pc}

080091c2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESR_SU_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80091c2:	b5b0      	push	{r4, r5, r7, lr}
 80091c4:	b082      	sub	sp, #8
 80091c6:	af00      	add	r7, sp, #0
 80091c8:	6078      	str	r0, [r7, #4]
 80091ca:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80091cc:	6878      	ldr	r0, [r7, #4]
 80091ce:	f001 f94d 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80091d2:	4604      	mov	r4, r0
 80091d4:	6838      	ldr	r0, [r7, #0]
 80091d6:	f001 f954 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80091da:	4603      	mov	r3, r0
 80091dc:	4619      	mov	r1, r3
 80091de:	4620      	mov	r0, r4
 80091e0:	f7ff ffd5 	bl	800918e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESR_SU_>
				   std::forward<_Variants>(__vars)...);
 80091e4:	462b      	mov	r3, r5
      }
 80091e6:	4618      	mov	r0, r3
 80091e8:	3708      	adds	r7, #8
 80091ea:	46bd      	mov	sp, r7
 80091ec:	bdb0      	pop	{r4, r5, r7, pc}

080091ee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESR_SU_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80091ee:	b5b0      	push	{r4, r5, r7, lr}
 80091f0:	b082      	sub	sp, #8
 80091f2:	af00      	add	r7, sp, #0
 80091f4:	6078      	str	r0, [r7, #4]
 80091f6:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80091f8:	6878      	ldr	r0, [r7, #4]
 80091fa:	f001 f937 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80091fe:	4604      	mov	r4, r0
 8009200:	6838      	ldr	r0, [r7, #0]
 8009202:	f001 f93e 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009206:	4603      	mov	r3, r0
 8009208:	4619      	mov	r1, r3
 800920a:	4620      	mov	r0, r4
 800920c:	f7ff ffd9 	bl	80091c2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESR_SU_>
				   std::forward<_Variants>(__vars)...);
 8009210:	462b      	mov	r3, r5
      }
 8009212:	4618      	mov	r0, r3
 8009214:	3708      	adds	r7, #8
 8009216:	46bd      	mov	sp, r7
 8009218:	bdb0      	pop	{r4, r5, r7, pc}

0800921a <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800921a:	b580      	push	{r7, lr}
 800921c:	b082      	sub	sp, #8
 800921e:	af00      	add	r7, sp, #0
 8009220:	7138      	strb	r0, [r7, #4]
 8009222:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8009224:	6838      	ldr	r0, [r7, #0]
 8009226:	f001 fa35 	bl	800a694 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800922a:	4603      	mov	r3, r0
 800922c:	4618      	mov	r0, r3
 800922e:	f001 fa3c 	bl	800a6aa <_ZNOSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 8009232:	4603      	mov	r3, r0
 8009234:	4618      	mov	r0, r3
 8009236:	3708      	adds	r7, #8
 8009238:	46bd      	mov	sp, r7
 800923a:	bd80      	pop	{r7, pc}

0800923c <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800923c:	b590      	push	{r4, r7, lr}
 800923e:	b083      	sub	sp, #12
 8009240:	af00      	add	r7, sp, #0
 8009242:	7138      	strb	r0, [r7, #4]
 8009244:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8009246:	6838      	ldr	r0, [r7, #0]
 8009248:	f001 f9f1 	bl	800a62e <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800924c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800924e:	4619      	mov	r1, r3
 8009250:	4620      	mov	r0, r4
 8009252:	f7ff ffe2 	bl	800921a <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8009256:	4603      	mov	r3, r0
    }
 8009258:	4618      	mov	r0, r3
 800925a:	370c      	adds	r7, #12
 800925c:	46bd      	mov	sp, r7
 800925e:	bd90      	pop	{r4, r7, pc}

08009260 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8009260:	b590      	push	{r4, r7, lr}
 8009262:	b083      	sub	sp, #12
 8009264:	af00      	add	r7, sp, #0
 8009266:	7138      	strb	r0, [r7, #4]
 8009268:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800926a:	6838      	ldr	r0, [r7, #0]
 800926c:	f001 f9ac 	bl	800a5c8 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009270:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8009272:	4619      	mov	r1, r3
 8009274:	4620      	mov	r0, r4
 8009276:	f7ff ffe1 	bl	800923c <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800927a:	4603      	mov	r3, r0
    }
 800927c:	4618      	mov	r0, r3
 800927e:	370c      	adds	r7, #12
 8009280:	46bd      	mov	sp, r7
 8009282:	bd90      	pop	{r4, r7, pc}

08009284 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8009284:	b590      	push	{r4, r7, lr}
 8009286:	b083      	sub	sp, #12
 8009288:	af00      	add	r7, sp, #0
 800928a:	7138      	strb	r0, [r7, #4]
 800928c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800928e:	6838      	ldr	r0, [r7, #0]
 8009290:	f001 f96b 	bl	800a56a <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009294:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8009296:	4619      	mov	r1, r3
 8009298:	4620      	mov	r0, r4
 800929a:	f7ff ffe1 	bl	8009260 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800929e:	4603      	mov	r3, r0
    }
 80092a0:	4618      	mov	r0, r3
 80092a2:	370c      	adds	r7, #12
 80092a4:	46bd      	mov	sp, r7
 80092a6:	bd90      	pop	{r4, r7, pc}

080092a8 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80092a8:	b590      	push	{r4, r7, lr}
 80092aa:	b083      	sub	sp, #12
 80092ac:	af00      	add	r7, sp, #0
 80092ae:	7138      	strb	r0, [r7, #4]
 80092b0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80092b2:	6838      	ldr	r0, [r7, #0]
 80092b4:	f001 f92a 	bl	800a50c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80092b8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80092ba:	4619      	mov	r1, r3
 80092bc:	4620      	mov	r0, r4
 80092be:	f7ff ffe1 	bl	8009284 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80092c2:	4603      	mov	r3, r0
    }
 80092c4:	4618      	mov	r0, r3
 80092c6:	370c      	adds	r7, #12
 80092c8:	46bd      	mov	sp, r7
 80092ca:	bd90      	pop	{r4, r7, pc}

080092cc <_ZNSt8__detail9__variant5__getILj5ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80092cc:	b590      	push	{r4, r7, lr}
 80092ce:	b083      	sub	sp, #12
 80092d0:	af00      	add	r7, sp, #0
 80092d2:	7138      	strb	r0, [r7, #4]
 80092d4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80092d6:	6838      	ldr	r0, [r7, #0]
 80092d8:	f001 f8e9 	bl	800a4ae <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80092dc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80092de:	4619      	mov	r1, r3
 80092e0:	4620      	mov	r0, r4
 80092e2:	f7ff ffe1 	bl	80092a8 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80092e6:	4603      	mov	r3, r0
    }
 80092e8:	4618      	mov	r0, r3
 80092ea:	370c      	adds	r7, #12
 80092ec:	46bd      	mov	sp, r7
 80092ee:	bd90      	pop	{r4, r7, pc}

080092f0 <_ZNSt8__detail9__variant5__getILj5ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80092f0:	b590      	push	{r4, r7, lr}
 80092f2:	b083      	sub	sp, #12
 80092f4:	af00      	add	r7, sp, #0
 80092f6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80092f8:	6878      	ldr	r0, [r7, #4]
 80092fa:	f001 f8cd 	bl	800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80092fe:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8009300:	4619      	mov	r1, r3
 8009302:	4620      	mov	r0, r4
 8009304:	f7ff ffe2 	bl	80092cc <_ZNSt8__detail9__variant5__getILj5ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8009308:	4603      	mov	r3, r0
    }
 800930a:	4618      	mov	r0, r3
 800930c:	370c      	adds	r7, #12
 800930e:	46bd      	mov	sp, r7
 8009310:	bd90      	pop	{r4, r7, pc}

08009312 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5EST_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8009312:	b580      	push	{r7, lr}
 8009314:	b082      	sub	sp, #8
 8009316:	af00      	add	r7, sp, #0
 8009318:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800931a:	6878      	ldr	r0, [r7, #4]
 800931c:	f001 f8bc 	bl	800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8009320:	4603      	mov	r3, r0
 8009322:	4618      	mov	r0, r3
 8009324:	f7ff ffe4 	bl	80092f0 <_ZNSt8__detail9__variant5__getILj5ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8009328:	4603      	mov	r3, r0
	}
 800932a:	4618      	mov	r0, r3
 800932c:	3708      	adds	r7, #8
 800932e:	46bd      	mov	sp, r7
 8009330:	bd80      	pop	{r7, pc}

08009332 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESR_SU_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8009332:	b5b0      	push	{r4, r5, r7, lr}
 8009334:	b082      	sub	sp, #8
 8009336:	af00      	add	r7, sp, #0
 8009338:	6078      	str	r0, [r7, #4]
 800933a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800933c:	6878      	ldr	r0, [r7, #4]
 800933e:	f001 f895 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009342:	4604      	mov	r4, r0
 8009344:	6838      	ldr	r0, [r7, #0]
 8009346:	f001 f89c 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800934a:	4603      	mov	r3, r0
 800934c:	4618      	mov	r0, r3
 800934e:	f7ff ffe0 	bl	8009312 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5EST_EEDcSL_>
 8009352:	4603      	mov	r3, r0
 8009354:	4619      	mov	r1, r3
 8009356:	4620      	mov	r0, r4
 8009358:	f001 f9b8 	bl	800a6cc <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JSE_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSQ_>
		std::forward<_Variants>(__vars))...);
 800935c:	462b      	mov	r3, r5
      }
 800935e:	4618      	mov	r0, r3
 8009360:	3708      	adds	r7, #8
 8009362:	46bd      	mov	sp, r7
 8009364:	bdb0      	pop	{r4, r5, r7, pc}

08009366 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESR_SU_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009366:	b5b0      	push	{r4, r5, r7, lr}
 8009368:	b082      	sub	sp, #8
 800936a:	af00      	add	r7, sp, #0
 800936c:	6078      	str	r0, [r7, #4]
 800936e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8009370:	6878      	ldr	r0, [r7, #4]
 8009372:	f001 f87b 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009376:	4604      	mov	r4, r0
 8009378:	6838      	ldr	r0, [r7, #0]
 800937a:	f001 f882 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800937e:	4603      	mov	r3, r0
 8009380:	4619      	mov	r1, r3
 8009382:	4620      	mov	r0, r4
 8009384:	f7ff ffd5 	bl	8009332 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESR_SU_>
				   std::forward<_Variants>(__vars)...);
 8009388:	462b      	mov	r3, r5
      }
 800938a:	4618      	mov	r0, r3
 800938c:	3708      	adds	r7, #8
 800938e:	46bd      	mov	sp, r7
 8009390:	bdb0      	pop	{r4, r5, r7, pc}

08009392 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeESR_SU_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009392:	b5b0      	push	{r4, r5, r7, lr}
 8009394:	b082      	sub	sp, #8
 8009396:	af00      	add	r7, sp, #0
 8009398:	6078      	str	r0, [r7, #4]
 800939a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800939c:	6878      	ldr	r0, [r7, #4]
 800939e:	f001 f865 	bl	800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80093a2:	4604      	mov	r4, r0
 80093a4:	6838      	ldr	r0, [r7, #0]
 80093a6:	f001 f86c 	bl	800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80093aa:	4603      	mov	r3, r0
 80093ac:	4619      	mov	r1, r3
 80093ae:	4620      	mov	r0, r4
 80093b0:	f7ff ffd9 	bl	8009366 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SG_EEESI_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSU_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESR_SU_>
				   std::forward<_Variants>(__vars)...);
 80093b4:	462b      	mov	r3, r5
      }
 80093b6:	4618      	mov	r0, r3
 80093b8:	3708      	adds	r7, #8
 80093ba:	46bd      	mov	sp, r7
 80093bc:	bdb0      	pop	{r4, r5, r7, pc}

080093be <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SC_SF_EEEJLj6EEE9_M_accessIJEEERKSV_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 80093be:	b580      	push	{r7, lr}
 80093c0:	b082      	sub	sp, #8
 80093c2:	af00      	add	r7, sp, #0
 80093c4:	6078      	str	r0, [r7, #4]
 80093c6:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 80093c8:	683b      	ldr	r3, [r7, #0]
 80093ca:	009b      	lsls	r3, r3, #2
 80093cc:	687a      	ldr	r2, [r7, #4]
 80093ce:	4413      	add	r3, r2
 80093d0:	4618      	mov	r0, r3
 80093d2:	f001 f992 	bl	800a6fa <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SC_SF_EEEJEE9_M_accessEv>
 80093d6:	4603      	mov	r3, r0
	}
 80093d8:	4618      	mov	r0, r3
 80093da:	3708      	adds	r7, #8
 80093dc:	46bd      	mov	sp, r7
 80093de:	bd80      	pop	{r7, pc}

080093e0 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SB_SE_EEEEDcSL_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 80093e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80093e2:	b085      	sub	sp, #20
 80093e4:	af00      	add	r7, sp, #0
 80093e6:	6078      	str	r0, [r7, #4]
 80093e8:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 80093ea:	4b0f      	ldr	r3, [pc, #60]	; (8009428 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SB_SE_EEEEDcSL_DpOT2_+0x48>)
 80093ec:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 80093ee:	6838      	ldr	r0, [r7, #0]
 80093f0:	f7fe fcdf 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 80093f4:	4603      	mov	r3, r0
 80093f6:	4619      	mov	r1, r3
 80093f8:	68f8      	ldr	r0, [r7, #12]
 80093fa:	f7ff ffe0 	bl	80093be <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SC_SF_EEEJLj6EEE9_M_accessIJEEERKSV_jDpT_>
 80093fe:	4603      	mov	r3, r0
 8009400:	681b      	ldr	r3, [r3, #0]
 8009402:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8009404:	68bc      	ldr	r4, [r7, #8]
 8009406:	6878      	ldr	r0, [r7, #4]
 8009408:	f001 f982 	bl	800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800940c:	4605      	mov	r5, r0
 800940e:	6838      	ldr	r0, [r7, #0]
 8009410:	f001 f842 	bl	800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8009414:	4603      	mov	r3, r0
 8009416:	4619      	mov	r1, r3
 8009418:	4628      	mov	r0, r5
 800941a:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 800941c:	4633      	mov	r3, r6
    }
 800941e:	4618      	mov	r0, r3
 8009420:	3714      	adds	r7, #20
 8009422:	46bd      	mov	sp, r7
 8009424:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009426:	bf00      	nop
 8009428:	08027e9c 	.word	0x08027e9c

0800942c <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 800942c:	b580      	push	{r7, lr}
 800942e:	b084      	sub	sp, #16
 8009430:	af00      	add	r7, sp, #0
 8009432:	6078      	str	r0, [r7, #4]
 8009434:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 8009436:	683b      	ldr	r3, [r7, #0]
 8009438:	7e1a      	ldrb	r2, [r3, #24]
 800943a:	687b      	ldr	r3, [r7, #4]
 800943c:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800943e:	687b      	ldr	r3, [r7, #4]
 8009440:	60fb      	str	r3, [r7, #12]
 8009442:	6838      	ldr	r0, [r7, #0]
 8009444:	f001 f807 	bl	800a456 <_ZSt7forwardINSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009448:	4603      	mov	r3, r0
 800944a:	4618      	mov	r0, r3
 800944c:	f7ff fbce 	bl	8008bec <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEENSt8__detail9__variant15_Move_ctor_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>
 8009450:	4602      	mov	r2, r0
 8009452:	f107 030c 	add.w	r3, r7, #12
 8009456:	4611      	mov	r1, r2
 8009458:	4618      	mov	r0, r3
 800945a:	f7ff ffc1 	bl	80093e0 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SB_SE_EEEEDcSL_DpOT2_>
    }
 800945e:	bf00      	nop
 8009460:	3710      	adds	r7, #16
 8009462:	46bd      	mov	sp, r7
 8009464:	bd80      	pop	{r7, pc}

08009466 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8009466:	b480      	push	{r7}
 8009468:	b083      	sub	sp, #12
 800946a:	af00      	add	r7, sp, #0
 800946c:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 800946e:	687b      	ldr	r3, [r7, #4]
    }
 8009470:	4618      	mov	r0, r3
 8009472:	370c      	adds	r7, #12
 8009474:	46bd      	mov	sp, r7
 8009476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800947a:	4770      	bx	lr

0800947c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESX_EEDcSN_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800947c:	b580      	push	{r7, lr}
 800947e:	b082      	sub	sp, #8
 8009480:	af00      	add	r7, sp, #0
 8009482:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8009484:	6878      	ldr	r0, [r7, #4]
 8009486:	f000 fafe 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800948a:	4603      	mov	r3, r0
 800948c:	4618      	mov	r0, r3
 800948e:	f7fe fe14 	bl	80080ba <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8009492:	4603      	mov	r3, r0
	}
 8009494:	4618      	mov	r0, r3
 8009496:	3708      	adds	r7, #8
 8009498:	46bd      	mov	sp, r7
 800949a:	bd80      	pop	{r7, pc}

0800949c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implEST_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800949c:	b5b0      	push	{r4, r5, r7, lr}
 800949e:	b082      	sub	sp, #8
 80094a0:	af00      	add	r7, sp, #0
 80094a2:	6078      	str	r0, [r7, #4]
 80094a4:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80094a6:	6878      	ldr	r0, [r7, #4]
 80094a8:	f001 f948 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 80094ac:	4604      	mov	r4, r0
 80094ae:	6838      	ldr	r0, [r7, #0]
 80094b0:	f000 fae9 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80094b4:	4603      	mov	r3, r0
 80094b6:	4618      	mov	r0, r3
 80094b8:	f7ff ffe0 	bl	800947c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESX_EEDcSN_>
 80094bc:	4603      	mov	r3, r0
 80094be:	4619      	mov	r1, r3
 80094c0:	4620      	mov	r0, r4
 80094c2:	f001 f946 	bl	800a752 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISO_JDpT0_EE4typeESP_DpOSU_>
		std::forward<_Variants>(__vars))...);
 80094c6:	462b      	mov	r3, r5
      }
 80094c8:	4618      	mov	r0, r3
 80094ca:	3708      	adds	r7, #8
 80094cc:	46bd      	mov	sp, r7
 80094ce:	bdb0      	pop	{r4, r5, r7, pc}

080094d0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeEST_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80094d0:	b5b0      	push	{r4, r5, r7, lr}
 80094d2:	b082      	sub	sp, #8
 80094d4:	af00      	add	r7, sp, #0
 80094d6:	6078      	str	r0, [r7, #4]
 80094d8:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80094da:	6878      	ldr	r0, [r7, #4]
 80094dc:	f001 f92e 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 80094e0:	4604      	mov	r4, r0
 80094e2:	6838      	ldr	r0, [r7, #0]
 80094e4:	f000 facf 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80094e8:	4603      	mov	r3, r0
 80094ea:	4619      	mov	r1, r3
 80094ec:	4620      	mov	r0, r4
 80094ee:	f7ff ffd5 	bl	800949c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implEST_SX_>
				   std::forward<_Variants>(__vars)...);
 80094f2:	462b      	mov	r3, r5
      }
 80094f4:	4618      	mov	r0, r3
 80094f6:	3708      	adds	r7, #8
 80094f8:	46bd      	mov	sp, r7
 80094fa:	bdb0      	pop	{r4, r5, r7, pc}

080094fc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeEST_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80094fc:	b5b0      	push	{r4, r5, r7, lr}
 80094fe:	b082      	sub	sp, #8
 8009500:	af00      	add	r7, sp, #0
 8009502:	6078      	str	r0, [r7, #4]
 8009504:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8009506:	6878      	ldr	r0, [r7, #4]
 8009508:	f001 f918 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800950c:	4604      	mov	r4, r0
 800950e:	6838      	ldr	r0, [r7, #0]
 8009510:	f000 fab9 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009514:	4603      	mov	r3, r0
 8009516:	4619      	mov	r1, r3
 8009518:	4620      	mov	r0, r4
 800951a:	f7ff ffd9 	bl	80094d0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeEST_SX_>
				   std::forward<_Variants>(__vars)...);
 800951e:	462b      	mov	r3, r5
      }
 8009520:	4618      	mov	r0, r3
 8009522:	3708      	adds	r7, #8
 8009524:	46bd      	mov	sp, r7
 8009526:	bdb0      	pop	{r4, r5, r7, pc}

08009528 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESX_EEDcSN_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8009528:	b580      	push	{r7, lr}
 800952a:	b082      	sub	sp, #8
 800952c:	af00      	add	r7, sp, #0
 800952e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8009530:	6878      	ldr	r0, [r7, #4]
 8009532:	f000 faa8 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009536:	4603      	mov	r3, r0
 8009538:	4618      	mov	r0, r3
 800953a:	f7fe fe4a 	bl	80081d2 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800953e:	4603      	mov	r3, r0
	}
 8009540:	4618      	mov	r0, r3
 8009542:	3708      	adds	r7, #8
 8009544:	46bd      	mov	sp, r7
 8009546:	bd80      	pop	{r7, pc}

08009548 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implEST_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8009548:	b5b0      	push	{r4, r5, r7, lr}
 800954a:	b082      	sub	sp, #8
 800954c:	af00      	add	r7, sp, #0
 800954e:	6078      	str	r0, [r7, #4]
 8009550:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8009552:	6878      	ldr	r0, [r7, #4]
 8009554:	f001 f8f2 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 8009558:	4604      	mov	r4, r0
 800955a:	6838      	ldr	r0, [r7, #0]
 800955c:	f000 fa93 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009560:	4603      	mov	r3, r0
 8009562:	4618      	mov	r0, r3
 8009564:	f7ff ffe0 	bl	8009528 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESX_EEDcSN_>
 8009568:	4603      	mov	r3, r0
 800956a:	4619      	mov	r1, r3
 800956c:	4620      	mov	r0, r4
 800956e:	f001 f907 	bl	800a780 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISO_JDpT0_EE4typeESP_DpOSU_>
		std::forward<_Variants>(__vars))...);
 8009572:	462b      	mov	r3, r5
      }
 8009574:	4618      	mov	r0, r3
 8009576:	3708      	adds	r7, #8
 8009578:	46bd      	mov	sp, r7
 800957a:	bdb0      	pop	{r4, r5, r7, pc}

0800957c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeEST_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800957c:	b5b0      	push	{r4, r5, r7, lr}
 800957e:	b082      	sub	sp, #8
 8009580:	af00      	add	r7, sp, #0
 8009582:	6078      	str	r0, [r7, #4]
 8009584:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8009586:	6878      	ldr	r0, [r7, #4]
 8009588:	f001 f8d8 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800958c:	4604      	mov	r4, r0
 800958e:	6838      	ldr	r0, [r7, #0]
 8009590:	f000 fa79 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009594:	4603      	mov	r3, r0
 8009596:	4619      	mov	r1, r3
 8009598:	4620      	mov	r0, r4
 800959a:	f7ff ffd5 	bl	8009548 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implEST_SX_>
				   std::forward<_Variants>(__vars)...);
 800959e:	462b      	mov	r3, r5
      }
 80095a0:	4618      	mov	r0, r3
 80095a2:	3708      	adds	r7, #8
 80095a4:	46bd      	mov	sp, r7
 80095a6:	bdb0      	pop	{r4, r5, r7, pc}

080095a8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeEST_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80095a8:	b5b0      	push	{r4, r5, r7, lr}
 80095aa:	b082      	sub	sp, #8
 80095ac:	af00      	add	r7, sp, #0
 80095ae:	6078      	str	r0, [r7, #4]
 80095b0:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80095b2:	6878      	ldr	r0, [r7, #4]
 80095b4:	f001 f8c2 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 80095b8:	4604      	mov	r4, r0
 80095ba:	6838      	ldr	r0, [r7, #0]
 80095bc:	f000 fa63 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80095c0:	4603      	mov	r3, r0
 80095c2:	4619      	mov	r1, r3
 80095c4:	4620      	mov	r0, r4
 80095c6:	f7ff ffd9 	bl	800957c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeEST_SX_>
				   std::forward<_Variants>(__vars)...);
 80095ca:	462b      	mov	r3, r5
      }
 80095cc:	4618      	mov	r0, r3
 80095ce:	3708      	adds	r7, #8
 80095d0:	46bd      	mov	sp, r7
 80095d2:	bdb0      	pop	{r4, r5, r7, pc}

080095d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESX_EEDcSN_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80095d4:	b580      	push	{r7, lr}
 80095d6:	b082      	sub	sp, #8
 80095d8:	af00      	add	r7, sp, #0
 80095da:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80095dc:	6878      	ldr	r0, [r7, #4]
 80095de:	f000 fa52 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80095e2:	4603      	mov	r3, r0
 80095e4:	4618      	mov	r0, r3
 80095e6:	f7fe fe92 	bl	800830e <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 80095ea:	4603      	mov	r3, r0
	}
 80095ec:	4618      	mov	r0, r3
 80095ee:	3708      	adds	r7, #8
 80095f0:	46bd      	mov	sp, r7
 80095f2:	bd80      	pop	{r7, pc}

080095f4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implEST_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80095f4:	b5b0      	push	{r4, r5, r7, lr}
 80095f6:	b082      	sub	sp, #8
 80095f8:	af00      	add	r7, sp, #0
 80095fa:	6078      	str	r0, [r7, #4]
 80095fc:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80095fe:	6878      	ldr	r0, [r7, #4]
 8009600:	f001 f89c 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 8009604:	4604      	mov	r4, r0
 8009606:	6838      	ldr	r0, [r7, #0]
 8009608:	f000 fa3d 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800960c:	4603      	mov	r3, r0
 800960e:	4618      	mov	r0, r3
 8009610:	f7ff ffe0 	bl	80095d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESX_EEDcSN_>
 8009614:	4603      	mov	r3, r0
 8009616:	4619      	mov	r1, r3
 8009618:	4620      	mov	r0, r4
 800961a:	f001 f8c8 	bl	800a7ae <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISO_JDpT0_EE4typeESP_DpOSU_>
		std::forward<_Variants>(__vars))...);
 800961e:	462b      	mov	r3, r5
      }
 8009620:	4618      	mov	r0, r3
 8009622:	3708      	adds	r7, #8
 8009624:	46bd      	mov	sp, r7
 8009626:	bdb0      	pop	{r4, r5, r7, pc}

08009628 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeEST_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009628:	b5b0      	push	{r4, r5, r7, lr}
 800962a:	b082      	sub	sp, #8
 800962c:	af00      	add	r7, sp, #0
 800962e:	6078      	str	r0, [r7, #4]
 8009630:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8009632:	6878      	ldr	r0, [r7, #4]
 8009634:	f001 f882 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 8009638:	4604      	mov	r4, r0
 800963a:	6838      	ldr	r0, [r7, #0]
 800963c:	f000 fa23 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009640:	4603      	mov	r3, r0
 8009642:	4619      	mov	r1, r3
 8009644:	4620      	mov	r0, r4
 8009646:	f7ff ffd5 	bl	80095f4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implEST_SX_>
				   std::forward<_Variants>(__vars)...);
 800964a:	462b      	mov	r3, r5
      }
 800964c:	4618      	mov	r0, r3
 800964e:	3708      	adds	r7, #8
 8009650:	46bd      	mov	sp, r7
 8009652:	bdb0      	pop	{r4, r5, r7, pc}

08009654 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeEST_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009654:	b5b0      	push	{r4, r5, r7, lr}
 8009656:	b082      	sub	sp, #8
 8009658:	af00      	add	r7, sp, #0
 800965a:	6078      	str	r0, [r7, #4]
 800965c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800965e:	6878      	ldr	r0, [r7, #4]
 8009660:	f001 f86c 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 8009664:	4604      	mov	r4, r0
 8009666:	6838      	ldr	r0, [r7, #0]
 8009668:	f000 fa0d 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800966c:	4603      	mov	r3, r0
 800966e:	4619      	mov	r1, r3
 8009670:	4620      	mov	r0, r4
 8009672:	f7ff ffd9 	bl	8009628 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeEST_SX_>
				   std::forward<_Variants>(__vars)...);
 8009676:	462b      	mov	r3, r5
      }
 8009678:	4618      	mov	r0, r3
 800967a:	3708      	adds	r7, #8
 800967c:	46bd      	mov	sp, r7
 800967e:	bdb0      	pop	{r4, r5, r7, pc}

08009680 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESX_EEDcSN_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8009680:	b580      	push	{r7, lr}
 8009682:	b082      	sub	sp, #8
 8009684:	af00      	add	r7, sp, #0
 8009686:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8009688:	6878      	ldr	r0, [r7, #4]
 800968a:	f000 f9fc 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800968e:	4603      	mov	r3, r0
 8009690:	4618      	mov	r0, r3
 8009692:	f7fe feec 	bl	800846e <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8009696:	4603      	mov	r3, r0
	}
 8009698:	4618      	mov	r0, r3
 800969a:	3708      	adds	r7, #8
 800969c:	46bd      	mov	sp, r7
 800969e:	bd80      	pop	{r7, pc}

080096a0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implEST_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80096a0:	b5b0      	push	{r4, r5, r7, lr}
 80096a2:	b082      	sub	sp, #8
 80096a4:	af00      	add	r7, sp, #0
 80096a6:	6078      	str	r0, [r7, #4]
 80096a8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80096aa:	6878      	ldr	r0, [r7, #4]
 80096ac:	f001 f846 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 80096b0:	4604      	mov	r4, r0
 80096b2:	6838      	ldr	r0, [r7, #0]
 80096b4:	f000 f9e7 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80096b8:	4603      	mov	r3, r0
 80096ba:	4618      	mov	r0, r3
 80096bc:	f7ff ffe0 	bl	8009680 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESX_EEDcSN_>
 80096c0:	4603      	mov	r3, r0
 80096c2:	4619      	mov	r1, r3
 80096c4:	4620      	mov	r0, r4
 80096c6:	f001 f889 	bl	800a7dc <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISO_JDpT0_EE4typeESP_DpOSU_>
		std::forward<_Variants>(__vars))...);
 80096ca:	462b      	mov	r3, r5
      }
 80096cc:	4618      	mov	r0, r3
 80096ce:	3708      	adds	r7, #8
 80096d0:	46bd      	mov	sp, r7
 80096d2:	bdb0      	pop	{r4, r5, r7, pc}

080096d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeEST_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80096d4:	b5b0      	push	{r4, r5, r7, lr}
 80096d6:	b082      	sub	sp, #8
 80096d8:	af00      	add	r7, sp, #0
 80096da:	6078      	str	r0, [r7, #4]
 80096dc:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80096de:	6878      	ldr	r0, [r7, #4]
 80096e0:	f001 f82c 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 80096e4:	4604      	mov	r4, r0
 80096e6:	6838      	ldr	r0, [r7, #0]
 80096e8:	f000 f9cd 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80096ec:	4603      	mov	r3, r0
 80096ee:	4619      	mov	r1, r3
 80096f0:	4620      	mov	r0, r4
 80096f2:	f7ff ffd5 	bl	80096a0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implEST_SX_>
				   std::forward<_Variants>(__vars)...);
 80096f6:	462b      	mov	r3, r5
      }
 80096f8:	4618      	mov	r0, r3
 80096fa:	3708      	adds	r7, #8
 80096fc:	46bd      	mov	sp, r7
 80096fe:	bdb0      	pop	{r4, r5, r7, pc}

08009700 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeEST_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009700:	b5b0      	push	{r4, r5, r7, lr}
 8009702:	b082      	sub	sp, #8
 8009704:	af00      	add	r7, sp, #0
 8009706:	6078      	str	r0, [r7, #4]
 8009708:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800970a:	6878      	ldr	r0, [r7, #4]
 800970c:	f001 f816 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 8009710:	4604      	mov	r4, r0
 8009712:	6838      	ldr	r0, [r7, #0]
 8009714:	f000 f9b7 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009718:	4603      	mov	r3, r0
 800971a:	4619      	mov	r1, r3
 800971c:	4620      	mov	r0, r4
 800971e:	f7ff ffd9 	bl	80096d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeEST_SX_>
				   std::forward<_Variants>(__vars)...);
 8009722:	462b      	mov	r3, r5
      }
 8009724:	4618      	mov	r0, r3
 8009726:	3708      	adds	r7, #8
 8009728:	46bd      	mov	sp, r7
 800972a:	bdb0      	pop	{r4, r5, r7, pc}

0800972c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESX_EEDcSN_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800972c:	b580      	push	{r7, lr}
 800972e:	b082      	sub	sp, #8
 8009730:	af00      	add	r7, sp, #0
 8009732:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8009734:	6878      	ldr	r0, [r7, #4]
 8009736:	f000 f9a6 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800973a:	4603      	mov	r3, r0
 800973c:	4618      	mov	r0, r3
 800973e:	f7fe ff58 	bl	80085f2 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8009742:	4603      	mov	r3, r0
	}
 8009744:	4618      	mov	r0, r3
 8009746:	3708      	adds	r7, #8
 8009748:	46bd      	mov	sp, r7
 800974a:	bd80      	pop	{r7, pc}

0800974c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implEST_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800974c:	b5b0      	push	{r4, r5, r7, lr}
 800974e:	b082      	sub	sp, #8
 8009750:	af00      	add	r7, sp, #0
 8009752:	6078      	str	r0, [r7, #4]
 8009754:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8009756:	6878      	ldr	r0, [r7, #4]
 8009758:	f000 fff0 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800975c:	4604      	mov	r4, r0
 800975e:	6838      	ldr	r0, [r7, #0]
 8009760:	f000 f991 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009764:	4603      	mov	r3, r0
 8009766:	4618      	mov	r0, r3
 8009768:	f7ff ffe0 	bl	800972c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESX_EEDcSN_>
 800976c:	4603      	mov	r3, r0
 800976e:	4619      	mov	r1, r3
 8009770:	4620      	mov	r0, r4
 8009772:	f001 f84a 	bl	800a80a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKSB_EENSt15__invoke_resultISO_JDpT0_EE4typeESP_DpOSU_>
		std::forward<_Variants>(__vars))...);
 8009776:	462b      	mov	r3, r5
      }
 8009778:	4618      	mov	r0, r3
 800977a:	3708      	adds	r7, #8
 800977c:	46bd      	mov	sp, r7
 800977e:	bdb0      	pop	{r4, r5, r7, pc}

08009780 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeEST_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009780:	b5b0      	push	{r4, r5, r7, lr}
 8009782:	b082      	sub	sp, #8
 8009784:	af00      	add	r7, sp, #0
 8009786:	6078      	str	r0, [r7, #4]
 8009788:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800978a:	6878      	ldr	r0, [r7, #4]
 800978c:	f000 ffd6 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 8009790:	4604      	mov	r4, r0
 8009792:	6838      	ldr	r0, [r7, #0]
 8009794:	f000 f977 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009798:	4603      	mov	r3, r0
 800979a:	4619      	mov	r1, r3
 800979c:	4620      	mov	r0, r4
 800979e:	f7ff ffd5 	bl	800974c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implEST_SX_>
				   std::forward<_Variants>(__vars)...);
 80097a2:	462b      	mov	r3, r5
      }
 80097a4:	4618      	mov	r0, r3
 80097a6:	3708      	adds	r7, #8
 80097a8:	46bd      	mov	sp, r7
 80097aa:	bdb0      	pop	{r4, r5, r7, pc}

080097ac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeEST_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80097ac:	b5b0      	push	{r4, r5, r7, lr}
 80097ae:	b082      	sub	sp, #8
 80097b0:	af00      	add	r7, sp, #0
 80097b2:	6078      	str	r0, [r7, #4]
 80097b4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80097b6:	6878      	ldr	r0, [r7, #4]
 80097b8:	f000 ffc0 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 80097bc:	4604      	mov	r4, r0
 80097be:	6838      	ldr	r0, [r7, #0]
 80097c0:	f000 f961 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80097c4:	4603      	mov	r3, r0
 80097c6:	4619      	mov	r1, r3
 80097c8:	4620      	mov	r0, r4
 80097ca:	f7ff ffd9 	bl	8009780 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeEST_SX_>
				   std::forward<_Variants>(__vars)...);
 80097ce:	462b      	mov	r3, r5
      }
 80097d0:	4618      	mov	r0, r3
 80097d2:	3708      	adds	r7, #8
 80097d4:	46bd      	mov	sp, r7
 80097d6:	bdb0      	pop	{r4, r5, r7, pc}

080097d8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESX_EEDcSN_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80097d8:	b580      	push	{r7, lr}
 80097da:	b082      	sub	sp, #8
 80097dc:	af00      	add	r7, sp, #0
 80097de:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80097e0:	6878      	ldr	r0, [r7, #4]
 80097e2:	f000 f950 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80097e6:	4603      	mov	r3, r0
 80097e8:	4618      	mov	r0, r3
 80097ea:	f7fe ffd6 	bl	800879a <_ZNSt8__detail9__variant5__getILj5ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 80097ee:	4603      	mov	r3, r0
	}
 80097f0:	4618      	mov	r0, r3
 80097f2:	3708      	adds	r7, #8
 80097f4:	46bd      	mov	sp, r7
 80097f6:	bd80      	pop	{r7, pc}

080097f8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implEST_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80097f8:	b5b0      	push	{r4, r5, r7, lr}
 80097fa:	b082      	sub	sp, #8
 80097fc:	af00      	add	r7, sp, #0
 80097fe:	6078      	str	r0, [r7, #4]
 8009800:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8009802:	6878      	ldr	r0, [r7, #4]
 8009804:	f000 ff9a 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 8009808:	4604      	mov	r4, r0
 800980a:	6838      	ldr	r0, [r7, #0]
 800980c:	f000 f93b 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009810:	4603      	mov	r3, r0
 8009812:	4618      	mov	r0, r3
 8009814:	f7ff ffe0 	bl	80097d8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESX_EEDcSN_>
 8009818:	4603      	mov	r3, r0
 800981a:	4619      	mov	r1, r3
 800981c:	4620      	mov	r0, r4
 800981e:	f001 f80b 	bl	800a838 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKSE_EENSt15__invoke_resultISO_JDpT0_EE4typeESP_DpOSU_>
		std::forward<_Variants>(__vars))...);
 8009822:	462b      	mov	r3, r5
      }
 8009824:	4618      	mov	r0, r3
 8009826:	3708      	adds	r7, #8
 8009828:	46bd      	mov	sp, r7
 800982a:	bdb0      	pop	{r4, r5, r7, pc}

0800982c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeEST_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800982c:	b5b0      	push	{r4, r5, r7, lr}
 800982e:	b082      	sub	sp, #8
 8009830:	af00      	add	r7, sp, #0
 8009832:	6078      	str	r0, [r7, #4]
 8009834:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8009836:	6878      	ldr	r0, [r7, #4]
 8009838:	f000 ff80 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800983c:	4604      	mov	r4, r0
 800983e:	6838      	ldr	r0, [r7, #0]
 8009840:	f000 f921 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009844:	4603      	mov	r3, r0
 8009846:	4619      	mov	r1, r3
 8009848:	4620      	mov	r0, r4
 800984a:	f7ff ffd5 	bl	80097f8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implEST_SX_>
				   std::forward<_Variants>(__vars)...);
 800984e:	462b      	mov	r3, r5
      }
 8009850:	4618      	mov	r0, r3
 8009852:	3708      	adds	r7, #8
 8009854:	46bd      	mov	sp, r7
 8009856:	bdb0      	pop	{r4, r5, r7, pc}

08009858 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeEST_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009858:	b5b0      	push	{r4, r5, r7, lr}
 800985a:	b082      	sub	sp, #8
 800985c:	af00      	add	r7, sp, #0
 800985e:	6078      	str	r0, [r7, #4]
 8009860:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8009862:	6878      	ldr	r0, [r7, #4]
 8009864:	f000 ff6a 	bl	800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 8009868:	4604      	mov	r4, r0
 800986a:	6838      	ldr	r0, [r7, #0]
 800986c:	f000 f90b 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009870:	4603      	mov	r3, r0
 8009872:	4619      	mov	r1, r3
 8009874:	4620      	mov	r0, r4
 8009876:	f7ff ffd9 	bl	800982c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SG_EEERKSI_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeEST_SX_>
				   std::forward<_Variants>(__vars)...);
 800987a:	462b      	mov	r3, r5
      }
 800987c:	4618      	mov	r0, r3
 800987e:	3708      	adds	r7, #8
 8009880:	46bd      	mov	sp, r7
 8009882:	bdb0      	pop	{r4, r5, r7, pc}

08009884 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SC_SF_EEEJLj6EEE9_M_accessIJEEERKSY_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8009884:	b580      	push	{r7, lr}
 8009886:	b082      	sub	sp, #8
 8009888:	af00      	add	r7, sp, #0
 800988a:	6078      	str	r0, [r7, #4]
 800988c:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800988e:	683b      	ldr	r3, [r7, #0]
 8009890:	009b      	lsls	r3, r3, #2
 8009892:	687a      	ldr	r2, [r7, #4]
 8009894:	4413      	add	r3, r2
 8009896:	4618      	mov	r0, r3
 8009898:	f000 ffe5 	bl	800a866 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SC_SF_EEEJEE9_M_accessEv>
 800989c:	4603      	mov	r3, r0
	}
 800989e:	4618      	mov	r0, r3
 80098a0:	3708      	adds	r7, #8
 80098a2:	46bd      	mov	sp, r7
 80098a4:	bd80      	pop	{r7, pc}
	...

080098a8 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SB_SE_EEEEDcSN_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 80098a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80098aa:	b085      	sub	sp, #20
 80098ac:	af00      	add	r7, sp, #0
 80098ae:	6078      	str	r0, [r7, #4]
 80098b0:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 80098b2:	4b0f      	ldr	r3, [pc, #60]	; (80098f0 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SB_SE_EEEEDcSN_DpOT2_+0x48>)
 80098b4:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 80098b6:	6838      	ldr	r0, [r7, #0]
 80098b8:	f7fe fa7b 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 80098bc:	4603      	mov	r3, r0
 80098be:	4619      	mov	r1, r3
 80098c0:	68f8      	ldr	r0, [r7, #12]
 80098c2:	f7ff ffdf 	bl	8009884 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SC_SF_EEEJLj6EEE9_M_accessIJEEERKSY_jDpT_>
 80098c6:	4603      	mov	r3, r0
 80098c8:	681b      	ldr	r3, [r3, #0]
 80098ca:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 80098cc:	68bc      	ldr	r4, [r7, #8]
 80098ce:	6878      	ldr	r0, [r7, #4]
 80098d0:	f000 ffd4 	bl	800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 80098d4:	4605      	mov	r5, r0
 80098d6:	6838      	ldr	r0, [r7, #0]
 80098d8:	f000 f8d5 	bl	8009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80098dc:	4603      	mov	r3, r0
 80098de:	4619      	mov	r1, r3
 80098e0:	4628      	mov	r0, r5
 80098e2:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 80098e4:	4633      	mov	r3, r6
    }
 80098e6:	4618      	mov	r0, r3
 80098e8:	3714      	adds	r7, #20
 80098ea:	46bd      	mov	sp, r7
 80098ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80098ee:	bf00      	nop
 80098f0:	08027eb4 	.word	0x08027eb4

080098f4 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 80098f4:	b580      	push	{r7, lr}
 80098f6:	b084      	sub	sp, #16
 80098f8:	af00      	add	r7, sp, #0
 80098fa:	6078      	str	r0, [r7, #4]
 80098fc:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 80098fe:	683b      	ldr	r3, [r7, #0]
 8009900:	7e1a      	ldrb	r2, [r3, #24]
 8009902:	687b      	ldr	r3, [r7, #4]
 8009904:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8009906:	687b      	ldr	r3, [r7, #4]
 8009908:	60fb      	str	r3, [r7, #12]
 800990a:	6838      	ldr	r0, [r7, #0]
 800990c:	f000 ff0b 	bl	800a726 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8009910:	4603      	mov	r3, r0
 8009912:	4618      	mov	r0, r3
 8009914:	f7ff fda7 	bl	8009466 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>
 8009918:	4602      	mov	r2, r0
 800991a:	f107 030c 	add.w	r3, r7, #12
 800991e:	4611      	mov	r1, r2
 8009920:	4618      	mov	r0, r3
 8009922:	f7ff ffc1 	bl	80098a8 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SB_SE_EEEEDcSN_DpOT2_>
    }
 8009926:	bf00      	nop
 8009928:	3710      	adds	r7, #16
 800992a:	46bd      	mov	sp, r7
 800992c:	bd80      	pop	{r7, pc}
	...

08009930 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8009930:	b580      	push	{r7, lr}
 8009932:	b082      	sub	sp, #8
 8009934:	af00      	add	r7, sp, #0
 8009936:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8009938:	6878      	ldr	r0, [r7, #4]
 800993a:	f7fa fe80 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800993e:	4603      	mov	r3, r0
 8009940:	2b01      	cmp	r3, #1
 8009942:	bf14      	ite	ne
 8009944:	2301      	movne	r3, #1
 8009946:	2300      	moveq	r3, #0
 8009948:	b2db      	uxtb	r3, r3
 800994a:	2b00      	cmp	r3, #0
 800994c:	d002      	beq.n	8009954 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800994e:	4805      	ldr	r0, [pc, #20]	; (8009964 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8009950:	f7fa fc3a 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8009954:	6878      	ldr	r0, [r7, #4]
 8009956:	f7fb fd2f 	bl	80053b8 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800995a:	4603      	mov	r3, r0
    }
 800995c:	4618      	mov	r0, r3
 800995e:	3708      	adds	r7, #8
 8009960:	46bd      	mov	sp, r7
 8009962:	bd80      	pop	{r7, pc}
 8009964:	08027454 	.word	0x08027454

08009968 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8009968:	b580      	push	{r7, lr}
 800996a:	b082      	sub	sp, #8
 800996c:	af00      	add	r7, sp, #0
 800996e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8009970:	6878      	ldr	r0, [r7, #4]
 8009972:	f7fa fe64 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8009976:	4603      	mov	r3, r0
 8009978:	2b02      	cmp	r3, #2
 800997a:	bf14      	ite	ne
 800997c:	2301      	movne	r3, #1
 800997e:	2300      	moveq	r3, #0
 8009980:	b2db      	uxtb	r3, r3
 8009982:	2b00      	cmp	r3, #0
 8009984:	d002      	beq.n	800998c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8009986:	4805      	ldr	r0, [pc, #20]	; (800999c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8009988:	f7fa fc1e 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800998c:	6878      	ldr	r0, [r7, #4]
 800998e:	f7fb fdaf 	bl	80054f0 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8009992:	4603      	mov	r3, r0
    }
 8009994:	4618      	mov	r0, r3
 8009996:	3708      	adds	r7, #8
 8009998:	46bd      	mov	sp, r7
 800999a:	bd80      	pop	{r7, pc}
 800999c:	08027454 	.word	0x08027454

080099a0 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 80099a0:	b580      	push	{r7, lr}
 80099a2:	b082      	sub	sp, #8
 80099a4:	af00      	add	r7, sp, #0
 80099a6:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80099a8:	6878      	ldr	r0, [r7, #4]
 80099aa:	f7fa fe48 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 80099ae:	4603      	mov	r3, r0
 80099b0:	2b03      	cmp	r3, #3
 80099b2:	bf14      	ite	ne
 80099b4:	2301      	movne	r3, #1
 80099b6:	2300      	moveq	r3, #0
 80099b8:	b2db      	uxtb	r3, r3
 80099ba:	2b00      	cmp	r3, #0
 80099bc:	d002      	beq.n	80099c4 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80099be:	4805      	ldr	r0, [pc, #20]	; (80099d4 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 80099c0:	f7fa fc02 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80099c4:	6878      	ldr	r0, [r7, #4]
 80099c6:	f7fb fe41 	bl	800564c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 80099ca:	4603      	mov	r3, r0
    }
 80099cc:	4618      	mov	r0, r3
 80099ce:	3708      	adds	r7, #8
 80099d0:	46bd      	mov	sp, r7
 80099d2:	bd80      	pop	{r7, pc}
 80099d4:	08027454 	.word	0x08027454

080099d8 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 80099d8:	b580      	push	{r7, lr}
 80099da:	b082      	sub	sp, #8
 80099dc:	af00      	add	r7, sp, #0
 80099de:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80099e0:	6878      	ldr	r0, [r7, #4]
 80099e2:	f7fa fe2c 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 80099e6:	4603      	mov	r3, r0
 80099e8:	2b00      	cmp	r3, #0
 80099ea:	bf14      	ite	ne
 80099ec:	2301      	movne	r3, #1
 80099ee:	2300      	moveq	r3, #0
 80099f0:	b2db      	uxtb	r3, r3
 80099f2:	2b00      	cmp	r3, #0
 80099f4:	d002      	beq.n	80099fc <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80099f6:	4805      	ldr	r0, [pc, #20]	; (8009a0c <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 80099f8:	f7fa fbe6 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80099fc:	6878      	ldr	r0, [r7, #4]
 80099fe:	f7fb fc51 	bl	80052a4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8009a02:	4603      	mov	r3, r0
    }
 8009a04:	4618      	mov	r0, r3
 8009a06:	3708      	adds	r7, #8
 8009a08:	46bd      	mov	sp, r7
 8009a0a:	bd80      	pop	{r7, pc}
 8009a0c:	08027454 	.word	0x08027454

08009a10 <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8009a10:	b480      	push	{r7}
 8009a12:	b083      	sub	sp, #12
 8009a14:	af00      	add	r7, sp, #0
 8009a16:	6078      	str	r0, [r7, #4]
 8009a18:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 8009a1a:	687b      	ldr	r3, [r7, #4]
 8009a1c:	2200      	movs	r2, #0
 8009a1e:	601a      	str	r2, [r3, #0]
	{ }
 8009a20:	687b      	ldr	r3, [r7, #4]
 8009a22:	4618      	mov	r0, r3
 8009a24:	370c      	adds	r7, #12
 8009a26:	46bd      	mov	sp, r7
 8009a28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a2c:	4770      	bx	lr

08009a2e <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8009a2e:	b580      	push	{r7, lr}
 8009a30:	b082      	sub	sp, #8
 8009a32:	af00      	add	r7, sp, #0
 8009a34:	6078      	str	r0, [r7, #4]
 8009a36:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8009a38:	687b      	ldr	r3, [r7, #4]
 8009a3a:	4611      	mov	r1, r2
 8009a3c:	4618      	mov	r0, r3
 8009a3e:	f7ff ffe7 	bl	8009a10 <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8009a42:	687b      	ldr	r3, [r7, #4]
 8009a44:	4618      	mov	r0, r3
 8009a46:	3708      	adds	r7, #8
 8009a48:	46bd      	mov	sp, r7
 8009a4a:	bd80      	pop	{r7, pc}

08009a4c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8009a4c:	b580      	push	{r7, lr}
 8009a4e:	b082      	sub	sp, #8
 8009a50:	af00      	add	r7, sp, #0
 8009a52:	6078      	str	r0, [r7, #4]
 8009a54:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 8009a56:	687b      	ldr	r3, [r7, #4]
 8009a58:	4611      	mov	r1, r2
 8009a5a:	4618      	mov	r0, r3
 8009a5c:	f7ff ffe7 	bl	8009a2e <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 8009a60:	687b      	ldr	r3, [r7, #4]
 8009a62:	2200      	movs	r2, #0
 8009a64:	761a      	strb	r2, [r3, #24]
	{ }
 8009a66:	687b      	ldr	r3, [r7, #4]
 8009a68:	4618      	mov	r0, r3
 8009a6a:	3708      	adds	r7, #8
 8009a6c:	46bd      	mov	sp, r7
 8009a6e:	bd80      	pop	{r7, pc}

08009a70 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009a70:	b480      	push	{r7}
 8009a72:	b083      	sub	sp, #12
 8009a74:	af00      	add	r7, sp, #0
 8009a76:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009a78:	687b      	ldr	r3, [r7, #4]
 8009a7a:	4618      	mov	r0, r3
 8009a7c:	370c      	adds	r7, #12
 8009a7e:	46bd      	mov	sp, r7
 8009a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a84:	4770      	bx	lr

08009a86 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009a86:	b480      	push	{r7}
 8009a88:	b083      	sub	sp, #12
 8009a8a:	af00      	add	r7, sp, #0
 8009a8c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009a8e:	687b      	ldr	r3, [r7, #4]
 8009a90:	4618      	mov	r0, r3
 8009a92:	370c      	adds	r7, #12
 8009a94:	46bd      	mov	sp, r7
 8009a96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a9a:	4770      	bx	lr

08009a9c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009a9c:	b480      	push	{r7}
 8009a9e:	b083      	sub	sp, #12
 8009aa0:	af00      	add	r7, sp, #0
 8009aa2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009aa4:	687b      	ldr	r3, [r7, #4]
 8009aa6:	4618      	mov	r0, r3
 8009aa8:	370c      	adds	r7, #12
 8009aaa:	46bd      	mov	sp, r7
 8009aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ab0:	4770      	bx	lr

08009ab2 <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8009ab2:	b480      	push	{r7}
 8009ab4:	b083      	sub	sp, #12
 8009ab6:	af00      	add	r7, sp, #0
 8009ab8:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8009aba:	687b      	ldr	r3, [r7, #4]
 8009abc:	4618      	mov	r0, r3
 8009abe:	370c      	adds	r7, #12
 8009ac0:	46bd      	mov	sp, r7
 8009ac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ac6:	4770      	bx	lr

08009ac8 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSR_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8009ac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009acc:	b084      	sub	sp, #16
 8009ace:	af00      	add	r7, sp, #0
 8009ad0:	60f8      	str	r0, [r7, #12]
 8009ad2:	60b9      	str	r1, [r7, #8]
 8009ad4:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8009ad6:	68f8      	ldr	r0, [r7, #12]
 8009ad8:	f000 f929 	bl	8009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8009adc:	4604      	mov	r4, r0
 8009ade:	68b8      	ldr	r0, [r7, #8]
 8009ae0:	f000 fed7 	bl	800a892 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8009ae4:	4605      	mov	r5, r0
 8009ae6:	6878      	ldr	r0, [r7, #4]
 8009ae8:	f000 fb84 	bl	800a1f4 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8009aec:	4603      	mov	r3, r0
 8009aee:	462a      	mov	r2, r5
 8009af0:	4621      	mov	r1, r4
 8009af2:	4630      	mov	r0, r6
 8009af4:	f000 fed8 	bl	800a8a8 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEESJ_St14__invoke_otherOSL_DpOT1_>
					std::forward<_Args>(__args)...);
 8009af8:	4643      	mov	r3, r8
    }
 8009afa:	4618      	mov	r0, r3
 8009afc:	3710      	adds	r7, #16
 8009afe:	46bd      	mov	sp, r7
 8009b00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009b04 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009b04:	b480      	push	{r7}
 8009b06:	b083      	sub	sp, #12
 8009b08:	af00      	add	r7, sp, #0
 8009b0a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009b0c:	687b      	ldr	r3, [r7, #4]
 8009b0e:	4618      	mov	r0, r3
 8009b10:	370c      	adds	r7, #12
 8009b12:	46bd      	mov	sp, r7
 8009b14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b18:	4770      	bx	lr

08009b1a <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8009b1a:	b480      	push	{r7}
 8009b1c:	b083      	sub	sp, #12
 8009b1e:	af00      	add	r7, sp, #0
 8009b20:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8009b22:	687b      	ldr	r3, [r7, #4]
 8009b24:	4618      	mov	r0, r3
 8009b26:	370c      	adds	r7, #12
 8009b28:	46bd      	mov	sp, r7
 8009b2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b2e:	4770      	bx	lr

08009b30 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSR_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8009b30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009b34:	b084      	sub	sp, #16
 8009b36:	af00      	add	r7, sp, #0
 8009b38:	60f8      	str	r0, [r7, #12]
 8009b3a:	60b9      	str	r1, [r7, #8]
 8009b3c:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8009b3e:	68f8      	ldr	r0, [r7, #12]
 8009b40:	f000 f8f5 	bl	8009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8009b44:	4604      	mov	r4, r0
 8009b46:	68b8      	ldr	r0, [r7, #8]
 8009b48:	f000 fecc 	bl	800a8e4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8009b4c:	4605      	mov	r5, r0
 8009b4e:	6878      	ldr	r0, [r7, #4]
 8009b50:	f000 fb79 	bl	800a246 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8009b54:	4603      	mov	r3, r0
 8009b56:	462a      	mov	r2, r5
 8009b58:	4621      	mov	r1, r4
 8009b5a:	4630      	mov	r0, r6
 8009b5c:	f000 fecd 	bl	800a8fa <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEESJ_St14__invoke_otherOSL_DpOT1_>
					std::forward<_Args>(__args)...);
 8009b60:	4643      	mov	r3, r8
    }
 8009b62:	4618      	mov	r0, r3
 8009b64:	3710      	adds	r7, #16
 8009b66:	46bd      	mov	sp, r7
 8009b68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009b6c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009b6c:	b480      	push	{r7}
 8009b6e:	b083      	sub	sp, #12
 8009b70:	af00      	add	r7, sp, #0
 8009b72:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009b74:	687b      	ldr	r3, [r7, #4]
 8009b76:	4618      	mov	r0, r3
 8009b78:	370c      	adds	r7, #12
 8009b7a:	46bd      	mov	sp, r7
 8009b7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b80:	4770      	bx	lr

08009b82 <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8009b82:	b480      	push	{r7}
 8009b84:	b083      	sub	sp, #12
 8009b86:	af00      	add	r7, sp, #0
 8009b88:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8009b8a:	687b      	ldr	r3, [r7, #4]
 8009b8c:	4618      	mov	r0, r3
 8009b8e:	370c      	adds	r7, #12
 8009b90:	46bd      	mov	sp, r7
 8009b92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b96:	4770      	bx	lr

08009b98 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSR_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8009b98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009b9c:	b084      	sub	sp, #16
 8009b9e:	af00      	add	r7, sp, #0
 8009ba0:	60f8      	str	r0, [r7, #12]
 8009ba2:	60b9      	str	r1, [r7, #8]
 8009ba4:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8009ba6:	68f8      	ldr	r0, [r7, #12]
 8009ba8:	f000 f8c1 	bl	8009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8009bac:	4604      	mov	r4, r0
 8009bae:	68b8      	ldr	r0, [r7, #8]
 8009bb0:	f000 fec1 	bl	800a936 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8009bb4:	4605      	mov	r5, r0
 8009bb6:	6878      	ldr	r0, [r7, #4]
 8009bb8:	f000 fb6e 	bl	800a298 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8009bbc:	4603      	mov	r3, r0
 8009bbe:	462a      	mov	r2, r5
 8009bc0:	4621      	mov	r1, r4
 8009bc2:	4630      	mov	r0, r6
 8009bc4:	f000 fec2 	bl	800a94c <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEESJ_St14__invoke_otherOSL_DpOT1_>
					std::forward<_Args>(__args)...);
 8009bc8:	4643      	mov	r3, r8
    }
 8009bca:	4618      	mov	r0, r3
 8009bcc:	3710      	adds	r7, #16
 8009bce:	46bd      	mov	sp, r7
 8009bd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009bd4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009bd4:	b480      	push	{r7}
 8009bd6:	b083      	sub	sp, #12
 8009bd8:	af00      	add	r7, sp, #0
 8009bda:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009bdc:	687b      	ldr	r3, [r7, #4]
 8009bde:	4618      	mov	r0, r3
 8009be0:	370c      	adds	r7, #12
 8009be2:	46bd      	mov	sp, r7
 8009be4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009be8:	4770      	bx	lr

08009bea <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 8009bea:	b580      	push	{r7, lr}
 8009bec:	b082      	sub	sp, #8
 8009bee:	af00      	add	r7, sp, #0
 8009bf0:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8009bf2:	687b      	ldr	r3, [r7, #4]
 8009bf4:	4618      	mov	r0, r3
 8009bf6:	f000 fec7 	bl	800a988 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 8009bfa:	4603      	mov	r3, r0
 8009bfc:	4618      	mov	r0, r3
 8009bfe:	3708      	adds	r7, #8
 8009c00:	46bd      	mov	sp, r7
 8009c02:	bd80      	pop	{r7, pc}

08009c04 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSR_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8009c04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009c08:	b084      	sub	sp, #16
 8009c0a:	af00      	add	r7, sp, #0
 8009c0c:	60f8      	str	r0, [r7, #12]
 8009c0e:	60b9      	str	r1, [r7, #8]
 8009c10:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8009c12:	68f8      	ldr	r0, [r7, #12]
 8009c14:	f000 f88b 	bl	8009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8009c18:	4604      	mov	r4, r0
 8009c1a:	68b8      	ldr	r0, [r7, #8]
 8009c1c:	f000 fec0 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8009c20:	4605      	mov	r5, r0
 8009c22:	6878      	ldr	r0, [r7, #4]
 8009c24:	f000 fb61 	bl	800a2ea <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8009c28:	4603      	mov	r3, r0
 8009c2a:	462a      	mov	r2, r5
 8009c2c:	4621      	mov	r1, r4
 8009c2e:	4630      	mov	r0, r6
 8009c30:	f000 fec1 	bl	800a9b6 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_JRKS9_St17integral_constantIjLj3EEEESJ_St14__invoke_otherOSL_DpOT1_>
					std::forward<_Args>(__args)...);
 8009c34:	4643      	mov	r3, r8
    }
 8009c36:	4618      	mov	r0, r3
 8009c38:	3710      	adds	r7, #16
 8009c3a:	46bd      	mov	sp, r7
 8009c3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009c40 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009c40:	b480      	push	{r7}
 8009c42:	b083      	sub	sp, #12
 8009c44:	af00      	add	r7, sp, #0
 8009c46:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009c48:	687b      	ldr	r3, [r7, #4]
 8009c4a:	4618      	mov	r0, r3
 8009c4c:	370c      	adds	r7, #12
 8009c4e:	46bd      	mov	sp, r7
 8009c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c54:	4770      	bx	lr

08009c56 <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 8009c56:	b580      	push	{r7, lr}
 8009c58:	b082      	sub	sp, #8
 8009c5a:	af00      	add	r7, sp, #0
 8009c5c:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8009c5e:	687b      	ldr	r3, [r7, #4]
 8009c60:	4618      	mov	r0, r3
 8009c62:	f000 fec6 	bl	800a9f2 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE6_M_ptrEv>
 8009c66:	4603      	mov	r3, r0
 8009c68:	4618      	mov	r0, r3
 8009c6a:	3708      	adds	r7, #8
 8009c6c:	46bd      	mov	sp, r7
 8009c6e:	bd80      	pop	{r7, pc}

08009c70 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKSB_St17integral_constantIjLj4EEEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSR_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8009c70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009c74:	b084      	sub	sp, #16
 8009c76:	af00      	add	r7, sp, #0
 8009c78:	60f8      	str	r0, [r7, #12]
 8009c7a:	60b9      	str	r1, [r7, #8]
 8009c7c:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8009c7e:	68f8      	ldr	r0, [r7, #12]
 8009c80:	f000 f855 	bl	8009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8009c84:	4604      	mov	r4, r0
 8009c86:	68b8      	ldr	r0, [r7, #8]
 8009c88:	f000 febf 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 8009c8c:	4605      	mov	r5, r0
 8009c8e:	6878      	ldr	r0, [r7, #4]
 8009c90:	f000 fb6b 	bl	800a36a <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8009c94:	4603      	mov	r3, r0
 8009c96:	462a      	mov	r2, r5
 8009c98:	4621      	mov	r1, r4
 8009c9a:	4630      	mov	r0, r6
 8009c9c:	f000 fec0 	bl	800aa20 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_JRKSC_St17integral_constantIjLj4EEEESJ_St14__invoke_otherOSL_DpOT1_>
					std::forward<_Args>(__args)...);
 8009ca0:	4643      	mov	r3, r8
    }
 8009ca2:	4618      	mov	r0, r3
 8009ca4:	3710      	adds	r7, #16
 8009ca6:	46bd      	mov	sp, r7
 8009ca8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009cac <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009cac:	b480      	push	{r7}
 8009cae:	b083      	sub	sp, #12
 8009cb0:	af00      	add	r7, sp, #0
 8009cb2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009cb4:	687b      	ldr	r3, [r7, #4]
 8009cb6:	4618      	mov	r0, r3
 8009cb8:	370c      	adds	r7, #12
 8009cba:	46bd      	mov	sp, r7
 8009cbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cc0:	4770      	bx	lr

08009cc2 <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 8009cc2:	b580      	push	{r7, lr}
 8009cc4:	b082      	sub	sp, #8
 8009cc6:	af00      	add	r7, sp, #0
 8009cc8:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8009cca:	687b      	ldr	r3, [r7, #4]
 8009ccc:	4618      	mov	r0, r3
 8009cce:	f000 fec5 	bl	800aa5c <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 8009cd2:	4603      	mov	r3, r0
 8009cd4:	4618      	mov	r0, r3
 8009cd6:	3708      	adds	r7, #8
 8009cd8:	46bd      	mov	sp, r7
 8009cda:	bd80      	pop	{r7, pc}

08009cdc <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_JRKSE_St17integral_constantIjLj5EEEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSR_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8009cdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009ce0:	b084      	sub	sp, #16
 8009ce2:	af00      	add	r7, sp, #0
 8009ce4:	60f8      	str	r0, [r7, #12]
 8009ce6:	60b9      	str	r1, [r7, #8]
 8009ce8:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8009cea:	68f8      	ldr	r0, [r7, #12]
 8009cec:	f000 f81f 	bl	8009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8009cf0:	4604      	mov	r4, r0
 8009cf2:	68b8      	ldr	r0, [r7, #8]
 8009cf4:	f000 febe 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8009cf8:	4605      	mov	r5, r0
 8009cfa:	6878      	ldr	r0, [r7, #4]
 8009cfc:	f000 fb75 	bl	800a3ea <_ZSt7forwardISt17integral_constantIjLj5EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8009d00:	4603      	mov	r3, r0
 8009d02:	462a      	mov	r2, r5
 8009d04:	4621      	mov	r1, r4
 8009d06:	4630      	mov	r0, r6
 8009d08:	f000 febf 	bl	800aa8a <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_JRKSF_St17integral_constantIjLj5EEEESJ_St14__invoke_otherOSL_DpOT1_>
					std::forward<_Args>(__args)...);
 8009d0c:	4643      	mov	r3, r8
    }
 8009d0e:	4618      	mov	r0, r3
 8009d10:	3710      	adds	r7, #16
 8009d12:	46bd      	mov	sp, r7
 8009d14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009d18 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_RKSt7variantIJifbS9_SC_SF_EEEJEE9_M_accessEv>:
      _M_access() const
 8009d18:	b480      	push	{r7}
 8009d1a:	b083      	sub	sp, #12
 8009d1c:	af00      	add	r7, sp, #0
 8009d1e:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8009d20:	687b      	ldr	r3, [r7, #4]
 8009d22:	4618      	mov	r0, r3
 8009d24:	370c      	adds	r7, #12
 8009d26:	46bd      	mov	sp, r7
 8009d28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d2c:	4770      	bx	lr

08009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009d2e:	b480      	push	{r7}
 8009d30:	b083      	sub	sp, #12
 8009d32:	af00      	add	r7, sp, #0
 8009d34:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009d36:	687b      	ldr	r3, [r7, #4]
 8009d38:	4618      	mov	r0, r3
 8009d3a:	370c      	adds	r7, #12
 8009d3c:	46bd      	mov	sp, r7
 8009d3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d42:	4770      	bx	lr

08009d44 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant16_Variant_storageILb0EJifbS5_S8_SB_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8009d44:	b480      	push	{r7}
 8009d46:	b083      	sub	sp, #12
 8009d48:	af00      	add	r7, sp, #0
 8009d4a:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8009d4c:	687b      	ldr	r3, [r7, #4]
    }
 8009d4e:	4618      	mov	r0, r3
 8009d50:	370c      	adds	r7, #12
 8009d52:	46bd      	mov	sp, r7
 8009d54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d58:	4770      	bx	lr

08009d5a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESO_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8009d5a:	b580      	push	{r7, lr}
 8009d5c:	b082      	sub	sp, #8
 8009d5e:	af00      	add	r7, sp, #0
 8009d60:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8009d62:	6878      	ldr	r0, [r7, #4]
 8009d64:	f7fe fde9 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009d68:	4603      	mov	r3, r0
 8009d6a:	4618      	mov	r0, r3
 8009d6c:	f7fd fc37 	bl	80075de <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8009d70:	4603      	mov	r3, r0
	}
 8009d72:	4618      	mov	r0, r3
 8009d74:	3708      	adds	r7, #8
 8009d76:	46bd      	mov	sp, r7
 8009d78:	bd80      	pop	{r7, pc}

08009d7a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8009d7a:	b5b0      	push	{r4, r5, r7, lr}
 8009d7c:	b082      	sub	sp, #8
 8009d7e:	af00      	add	r7, sp, #0
 8009d80:	6078      	str	r0, [r7, #4]
 8009d82:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8009d84:	6878      	ldr	r0, [r7, #4]
 8009d86:	f000 fe9e 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8009d8a:	4604      	mov	r4, r0
 8009d8c:	6838      	ldr	r0, [r7, #0]
 8009d8e:	f7fe fdd4 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009d92:	4603      	mov	r3, r0
 8009d94:	4618      	mov	r0, r3
 8009d96:	f7ff ffe0 	bl	8009d5a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESO_EEDcOT0_>
 8009d9a:	4603      	mov	r3, r0
 8009d9c:	4619      	mov	r1, r3
 8009d9e:	4620      	mov	r0, r4
 8009da0:	f000 fe9c 	bl	800aadc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSL_>
		std::forward<_Variants>(__vars))...);
 8009da4:	462b      	mov	r3, r5
      }
 8009da6:	4618      	mov	r0, r3
 8009da8:	3708      	adds	r7, #8
 8009daa:	46bd      	mov	sp, r7
 8009dac:	bdb0      	pop	{r4, r5, r7, pc}

08009dae <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009dae:	b5b0      	push	{r4, r5, r7, lr}
 8009db0:	b082      	sub	sp, #8
 8009db2:	af00      	add	r7, sp, #0
 8009db4:	6078      	str	r0, [r7, #4]
 8009db6:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8009db8:	6878      	ldr	r0, [r7, #4]
 8009dba:	f000 fe84 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8009dbe:	4604      	mov	r4, r0
 8009dc0:	6838      	ldr	r0, [r7, #0]
 8009dc2:	f7fe fdba 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009dc6:	4603      	mov	r3, r0
 8009dc8:	4619      	mov	r1, r3
 8009dca:	4620      	mov	r0, r4
 8009dcc:	f7ff ffd5 	bl	8009d7a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8009dd0:	462b      	mov	r3, r5
      }
 8009dd2:	4618      	mov	r0, r3
 8009dd4:	3708      	adds	r7, #8
 8009dd6:	46bd      	mov	sp, r7
 8009dd8:	bdb0      	pop	{r4, r5, r7, pc}

08009dda <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009dda:	b5b0      	push	{r4, r5, r7, lr}
 8009ddc:	b082      	sub	sp, #8
 8009dde:	af00      	add	r7, sp, #0
 8009de0:	6078      	str	r0, [r7, #4]
 8009de2:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8009de4:	6878      	ldr	r0, [r7, #4]
 8009de6:	f000 fe6e 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8009dea:	4604      	mov	r4, r0
 8009dec:	6838      	ldr	r0, [r7, #0]
 8009dee:	f7fe fda4 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009df2:	4603      	mov	r3, r0
 8009df4:	4619      	mov	r1, r3
 8009df6:	4620      	mov	r0, r4
 8009df8:	f7ff ffd9 	bl	8009dae <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8009dfc:	462b      	mov	r3, r5
      }
 8009dfe:	4618      	mov	r0, r3
 8009e00:	3708      	adds	r7, #8
 8009e02:	46bd      	mov	sp, r7
 8009e04:	bdb0      	pop	{r4, r5, r7, pc}

08009e06 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESO_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8009e06:	b580      	push	{r7, lr}
 8009e08:	b082      	sub	sp, #8
 8009e0a:	af00      	add	r7, sp, #0
 8009e0c:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8009e0e:	6878      	ldr	r0, [r7, #4]
 8009e10:	f7fe fd93 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009e14:	4603      	mov	r3, r0
 8009e16:	4618      	mov	r0, r3
 8009e18:	f7fd fc6d 	bl	80076f6 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8009e1c:	4603      	mov	r3, r0
	}
 8009e1e:	4618      	mov	r0, r3
 8009e20:	3708      	adds	r7, #8
 8009e22:	46bd      	mov	sp, r7
 8009e24:	bd80      	pop	{r7, pc}

08009e26 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8009e26:	b5b0      	push	{r4, r5, r7, lr}
 8009e28:	b082      	sub	sp, #8
 8009e2a:	af00      	add	r7, sp, #0
 8009e2c:	6078      	str	r0, [r7, #4]
 8009e2e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8009e30:	6878      	ldr	r0, [r7, #4]
 8009e32:	f000 fe48 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8009e36:	4604      	mov	r4, r0
 8009e38:	6838      	ldr	r0, [r7, #0]
 8009e3a:	f7fe fd7e 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009e3e:	4603      	mov	r3, r0
 8009e40:	4618      	mov	r0, r3
 8009e42:	f7ff ffe0 	bl	8009e06 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESO_EEDcOT0_>
 8009e46:	4603      	mov	r3, r0
 8009e48:	4619      	mov	r1, r3
 8009e4a:	4620      	mov	r0, r4
 8009e4c:	f000 fe5d 	bl	800ab0a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSL_>
		std::forward<_Variants>(__vars))...);
 8009e50:	462b      	mov	r3, r5
      }
 8009e52:	4618      	mov	r0, r3
 8009e54:	3708      	adds	r7, #8
 8009e56:	46bd      	mov	sp, r7
 8009e58:	bdb0      	pop	{r4, r5, r7, pc}

08009e5a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009e5a:	b5b0      	push	{r4, r5, r7, lr}
 8009e5c:	b082      	sub	sp, #8
 8009e5e:	af00      	add	r7, sp, #0
 8009e60:	6078      	str	r0, [r7, #4]
 8009e62:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8009e64:	6878      	ldr	r0, [r7, #4]
 8009e66:	f000 fe2e 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8009e6a:	4604      	mov	r4, r0
 8009e6c:	6838      	ldr	r0, [r7, #0]
 8009e6e:	f7fe fd64 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009e72:	4603      	mov	r3, r0
 8009e74:	4619      	mov	r1, r3
 8009e76:	4620      	mov	r0, r4
 8009e78:	f7ff ffd5 	bl	8009e26 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8009e7c:	462b      	mov	r3, r5
      }
 8009e7e:	4618      	mov	r0, r3
 8009e80:	3708      	adds	r7, #8
 8009e82:	46bd      	mov	sp, r7
 8009e84:	bdb0      	pop	{r4, r5, r7, pc}

08009e86 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009e86:	b5b0      	push	{r4, r5, r7, lr}
 8009e88:	b082      	sub	sp, #8
 8009e8a:	af00      	add	r7, sp, #0
 8009e8c:	6078      	str	r0, [r7, #4]
 8009e8e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8009e90:	6878      	ldr	r0, [r7, #4]
 8009e92:	f000 fe18 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8009e96:	4604      	mov	r4, r0
 8009e98:	6838      	ldr	r0, [r7, #0]
 8009e9a:	f7fe fd4e 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009e9e:	4603      	mov	r3, r0
 8009ea0:	4619      	mov	r1, r3
 8009ea2:	4620      	mov	r0, r4
 8009ea4:	f7ff ffd9 	bl	8009e5a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8009ea8:	462b      	mov	r3, r5
      }
 8009eaa:	4618      	mov	r0, r3
 8009eac:	3708      	adds	r7, #8
 8009eae:	46bd      	mov	sp, r7
 8009eb0:	bdb0      	pop	{r4, r5, r7, pc}

08009eb2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESO_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8009eb2:	b580      	push	{r7, lr}
 8009eb4:	b082      	sub	sp, #8
 8009eb6:	af00      	add	r7, sp, #0
 8009eb8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8009eba:	6878      	ldr	r0, [r7, #4]
 8009ebc:	f7fe fd3d 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009ec0:	4603      	mov	r3, r0
 8009ec2:	4618      	mov	r0, r3
 8009ec4:	f7fd fcb5 	bl	8007832 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8009ec8:	4603      	mov	r3, r0
	}
 8009eca:	4618      	mov	r0, r3
 8009ecc:	3708      	adds	r7, #8
 8009ece:	46bd      	mov	sp, r7
 8009ed0:	bd80      	pop	{r7, pc}

08009ed2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8009ed2:	b5b0      	push	{r4, r5, r7, lr}
 8009ed4:	b082      	sub	sp, #8
 8009ed6:	af00      	add	r7, sp, #0
 8009ed8:	6078      	str	r0, [r7, #4]
 8009eda:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8009edc:	6878      	ldr	r0, [r7, #4]
 8009ede:	f000 fdf2 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8009ee2:	4604      	mov	r4, r0
 8009ee4:	6838      	ldr	r0, [r7, #0]
 8009ee6:	f7fe fd28 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009eea:	4603      	mov	r3, r0
 8009eec:	4618      	mov	r0, r3
 8009eee:	f7ff ffe0 	bl	8009eb2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESO_EEDcOT0_>
 8009ef2:	4603      	mov	r3, r0
 8009ef4:	4619      	mov	r1, r3
 8009ef6:	4620      	mov	r0, r4
 8009ef8:	f000 fe1e 	bl	800ab38 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSL_>
		std::forward<_Variants>(__vars))...);
 8009efc:	462b      	mov	r3, r5
      }
 8009efe:	4618      	mov	r0, r3
 8009f00:	3708      	adds	r7, #8
 8009f02:	46bd      	mov	sp, r7
 8009f04:	bdb0      	pop	{r4, r5, r7, pc}

08009f06 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009f06:	b5b0      	push	{r4, r5, r7, lr}
 8009f08:	b082      	sub	sp, #8
 8009f0a:	af00      	add	r7, sp, #0
 8009f0c:	6078      	str	r0, [r7, #4]
 8009f0e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8009f10:	6878      	ldr	r0, [r7, #4]
 8009f12:	f000 fdd8 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8009f16:	4604      	mov	r4, r0
 8009f18:	6838      	ldr	r0, [r7, #0]
 8009f1a:	f7fe fd0e 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009f1e:	4603      	mov	r3, r0
 8009f20:	4619      	mov	r1, r3
 8009f22:	4620      	mov	r0, r4
 8009f24:	f7ff ffd5 	bl	8009ed2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8009f28:	462b      	mov	r3, r5
      }
 8009f2a:	4618      	mov	r0, r3
 8009f2c:	3708      	adds	r7, #8
 8009f2e:	46bd      	mov	sp, r7
 8009f30:	bdb0      	pop	{r4, r5, r7, pc}

08009f32 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009f32:	b5b0      	push	{r4, r5, r7, lr}
 8009f34:	b082      	sub	sp, #8
 8009f36:	af00      	add	r7, sp, #0
 8009f38:	6078      	str	r0, [r7, #4]
 8009f3a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8009f3c:	6878      	ldr	r0, [r7, #4]
 8009f3e:	f000 fdc2 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8009f42:	4604      	mov	r4, r0
 8009f44:	6838      	ldr	r0, [r7, #0]
 8009f46:	f7fe fcf8 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009f4a:	4603      	mov	r3, r0
 8009f4c:	4619      	mov	r1, r3
 8009f4e:	4620      	mov	r0, r4
 8009f50:	f7ff ffd9 	bl	8009f06 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8009f54:	462b      	mov	r3, r5
      }
 8009f56:	4618      	mov	r0, r3
 8009f58:	3708      	adds	r7, #8
 8009f5a:	46bd      	mov	sp, r7
 8009f5c:	bdb0      	pop	{r4, r5, r7, pc}

08009f5e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESO_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8009f5e:	b580      	push	{r7, lr}
 8009f60:	b082      	sub	sp, #8
 8009f62:	af00      	add	r7, sp, #0
 8009f64:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8009f66:	6878      	ldr	r0, [r7, #4]
 8009f68:	f7fe fce7 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009f6c:	4603      	mov	r3, r0
 8009f6e:	4618      	mov	r0, r3
 8009f70:	f7fd fd0f 	bl	8007992 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8009f74:	4603      	mov	r3, r0
	}
 8009f76:	4618      	mov	r0, r3
 8009f78:	3708      	adds	r7, #8
 8009f7a:	46bd      	mov	sp, r7
 8009f7c:	bd80      	pop	{r7, pc}

08009f7e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8009f7e:	b5b0      	push	{r4, r5, r7, lr}
 8009f80:	b082      	sub	sp, #8
 8009f82:	af00      	add	r7, sp, #0
 8009f84:	6078      	str	r0, [r7, #4]
 8009f86:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8009f88:	6878      	ldr	r0, [r7, #4]
 8009f8a:	f000 fd9c 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8009f8e:	4604      	mov	r4, r0
 8009f90:	6838      	ldr	r0, [r7, #0]
 8009f92:	f7fe fcd2 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009f96:	4603      	mov	r3, r0
 8009f98:	4618      	mov	r0, r3
 8009f9a:	f7ff ffe0 	bl	8009f5e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESO_EEDcOT0_>
 8009f9e:	4603      	mov	r3, r0
 8009fa0:	4619      	mov	r1, r3
 8009fa2:	4620      	mov	r0, r4
 8009fa4:	f000 fddf 	bl	800ab66 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSL_>
		std::forward<_Variants>(__vars))...);
 8009fa8:	462b      	mov	r3, r5
      }
 8009faa:	4618      	mov	r0, r3
 8009fac:	3708      	adds	r7, #8
 8009fae:	46bd      	mov	sp, r7
 8009fb0:	bdb0      	pop	{r4, r5, r7, pc}

08009fb2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009fb2:	b5b0      	push	{r4, r5, r7, lr}
 8009fb4:	b082      	sub	sp, #8
 8009fb6:	af00      	add	r7, sp, #0
 8009fb8:	6078      	str	r0, [r7, #4]
 8009fba:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8009fbc:	6878      	ldr	r0, [r7, #4]
 8009fbe:	f000 fd82 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8009fc2:	4604      	mov	r4, r0
 8009fc4:	6838      	ldr	r0, [r7, #0]
 8009fc6:	f7fe fcb8 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009fca:	4603      	mov	r3, r0
 8009fcc:	4619      	mov	r1, r3
 8009fce:	4620      	mov	r0, r4
 8009fd0:	f7ff ffd5 	bl	8009f7e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8009fd4:	462b      	mov	r3, r5
      }
 8009fd6:	4618      	mov	r0, r3
 8009fd8:	3708      	adds	r7, #8
 8009fda:	46bd      	mov	sp, r7
 8009fdc:	bdb0      	pop	{r4, r5, r7, pc}

08009fde <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8009fde:	b5b0      	push	{r4, r5, r7, lr}
 8009fe0:	b082      	sub	sp, #8
 8009fe2:	af00      	add	r7, sp, #0
 8009fe4:	6078      	str	r0, [r7, #4]
 8009fe6:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8009fe8:	6878      	ldr	r0, [r7, #4]
 8009fea:	f000 fd6c 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8009fee:	4604      	mov	r4, r0
 8009ff0:	6838      	ldr	r0, [r7, #0]
 8009ff2:	f7fe fca2 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009ff6:	4603      	mov	r3, r0
 8009ff8:	4619      	mov	r1, r3
 8009ffa:	4620      	mov	r0, r4
 8009ffc:	f7ff ffd9 	bl	8009fb2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 800a000:	462b      	mov	r3, r5
      }
 800a002:	4618      	mov	r0, r3
 800a004:	3708      	adds	r7, #8
 800a006:	46bd      	mov	sp, r7
 800a008:	bdb0      	pop	{r4, r5, r7, pc}

0800a00a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESO_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800a00a:	b580      	push	{r7, lr}
 800a00c:	b082      	sub	sp, #8
 800a00e:	af00      	add	r7, sp, #0
 800a010:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800a012:	6878      	ldr	r0, [r7, #4]
 800a014:	f7fe fc91 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a018:	4603      	mov	r3, r0
 800a01a:	4618      	mov	r0, r3
 800a01c:	f7fd fd7b 	bl	8007b16 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800a020:	4603      	mov	r3, r0
	}
 800a022:	4618      	mov	r0, r3
 800a024:	3708      	adds	r7, #8
 800a026:	46bd      	mov	sp, r7
 800a028:	bd80      	pop	{r7, pc}

0800a02a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800a02a:	b5b0      	push	{r4, r5, r7, lr}
 800a02c:	b082      	sub	sp, #8
 800a02e:	af00      	add	r7, sp, #0
 800a030:	6078      	str	r0, [r7, #4]
 800a032:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800a034:	6878      	ldr	r0, [r7, #4]
 800a036:	f000 fd46 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800a03a:	4604      	mov	r4, r0
 800a03c:	6838      	ldr	r0, [r7, #0]
 800a03e:	f7fe fc7c 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a042:	4603      	mov	r3, r0
 800a044:	4618      	mov	r0, r3
 800a046:	f7ff ffe0 	bl	800a00a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESO_EEDcOT0_>
 800a04a:	4603      	mov	r3, r0
 800a04c:	4619      	mov	r1, r3
 800a04e:	4620      	mov	r0, r4
 800a050:	f000 fda0 	bl	800ab94 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRSB_EENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSL_>
		std::forward<_Variants>(__vars))...);
 800a054:	462b      	mov	r3, r5
      }
 800a056:	4618      	mov	r0, r3
 800a058:	3708      	adds	r7, #8
 800a05a:	46bd      	mov	sp, r7
 800a05c:	bdb0      	pop	{r4, r5, r7, pc}

0800a05e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800a05e:	b5b0      	push	{r4, r5, r7, lr}
 800a060:	b082      	sub	sp, #8
 800a062:	af00      	add	r7, sp, #0
 800a064:	6078      	str	r0, [r7, #4]
 800a066:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800a068:	6878      	ldr	r0, [r7, #4]
 800a06a:	f000 fd2c 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800a06e:	4604      	mov	r4, r0
 800a070:	6838      	ldr	r0, [r7, #0]
 800a072:	f7fe fc62 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a076:	4603      	mov	r3, r0
 800a078:	4619      	mov	r1, r3
 800a07a:	4620      	mov	r0, r4
 800a07c:	f7ff ffd5 	bl	800a02a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 800a080:	462b      	mov	r3, r5
      }
 800a082:	4618      	mov	r0, r3
 800a084:	3708      	adds	r7, #8
 800a086:	46bd      	mov	sp, r7
 800a088:	bdb0      	pop	{r4, r5, r7, pc}

0800a08a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800a08a:	b5b0      	push	{r4, r5, r7, lr}
 800a08c:	b082      	sub	sp, #8
 800a08e:	af00      	add	r7, sp, #0
 800a090:	6078      	str	r0, [r7, #4]
 800a092:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800a094:	6878      	ldr	r0, [r7, #4]
 800a096:	f000 fd16 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800a09a:	4604      	mov	r4, r0
 800a09c:	6838      	ldr	r0, [r7, #0]
 800a09e:	f7fe fc4c 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a0a2:	4603      	mov	r3, r0
 800a0a4:	4619      	mov	r1, r3
 800a0a6:	4620      	mov	r0, r4
 800a0a8:	f7ff ffd9 	bl	800a05e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 800a0ac:	462b      	mov	r3, r5
      }
 800a0ae:	4618      	mov	r0, r3
 800a0b0:	3708      	adds	r7, #8
 800a0b2:	46bd      	mov	sp, r7
 800a0b4:	bdb0      	pop	{r4, r5, r7, pc}

0800a0b6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESO_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800a0b6:	b580      	push	{r7, lr}
 800a0b8:	b082      	sub	sp, #8
 800a0ba:	af00      	add	r7, sp, #0
 800a0bc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800a0be:	6878      	ldr	r0, [r7, #4]
 800a0c0:	f7fe fc3b 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a0c4:	4603      	mov	r3, r0
 800a0c6:	4618      	mov	r0, r3
 800a0c8:	f7fd fdf9 	bl	8007cbe <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800a0cc:	4603      	mov	r3, r0
	}
 800a0ce:	4618      	mov	r0, r3
 800a0d0:	3708      	adds	r7, #8
 800a0d2:	46bd      	mov	sp, r7
 800a0d4:	bd80      	pop	{r7, pc}

0800a0d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800a0d6:	b5b0      	push	{r4, r5, r7, lr}
 800a0d8:	b082      	sub	sp, #8
 800a0da:	af00      	add	r7, sp, #0
 800a0dc:	6078      	str	r0, [r7, #4]
 800a0de:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800a0e0:	6878      	ldr	r0, [r7, #4]
 800a0e2:	f000 fcf0 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800a0e6:	4604      	mov	r4, r0
 800a0e8:	6838      	ldr	r0, [r7, #0]
 800a0ea:	f7fe fc26 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a0ee:	4603      	mov	r3, r0
 800a0f0:	4618      	mov	r0, r3
 800a0f2:	f7ff ffe0 	bl	800a0b6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESO_EEDcOT0_>
 800a0f6:	4603      	mov	r3, r0
 800a0f8:	4619      	mov	r1, r3
 800a0fa:	4620      	mov	r0, r4
 800a0fc:	f000 fd61 	bl	800abc2 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRSE_EENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSL_>
		std::forward<_Variants>(__vars))...);
 800a100:	462b      	mov	r3, r5
      }
 800a102:	4618      	mov	r0, r3
 800a104:	3708      	adds	r7, #8
 800a106:	46bd      	mov	sp, r7
 800a108:	bdb0      	pop	{r4, r5, r7, pc}

0800a10a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800a10a:	b5b0      	push	{r4, r5, r7, lr}
 800a10c:	b082      	sub	sp, #8
 800a10e:	af00      	add	r7, sp, #0
 800a110:	6078      	str	r0, [r7, #4]
 800a112:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800a114:	6878      	ldr	r0, [r7, #4]
 800a116:	f000 fcd6 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800a11a:	4604      	mov	r4, r0
 800a11c:	6838      	ldr	r0, [r7, #0]
 800a11e:	f7fe fc0c 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a122:	4603      	mov	r3, r0
 800a124:	4619      	mov	r1, r3
 800a126:	4620      	mov	r0, r4
 800a128:	f7ff ffd5 	bl	800a0d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 800a12c:	462b      	mov	r3, r5
      }
 800a12e:	4618      	mov	r0, r3
 800a130:	3708      	adds	r7, #8
 800a132:	46bd      	mov	sp, r7
 800a134:	bdb0      	pop	{r4, r5, r7, pc}

0800a136 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800a136:	b5b0      	push	{r4, r5, r7, lr}
 800a138:	b082      	sub	sp, #8
 800a13a:	af00      	add	r7, sp, #0
 800a13c:	6078      	str	r0, [r7, #4]
 800a13e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800a140:	6878      	ldr	r0, [r7, #4]
 800a142:	f000 fcc0 	bl	800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800a146:	4604      	mov	r4, r0
 800a148:	6838      	ldr	r0, [r7, #0]
 800a14a:	f7fe fbf6 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a14e:	4603      	mov	r3, r0
 800a150:	4619      	mov	r1, r3
 800a152:	4620      	mov	r0, r4
 800a154:	f7ff ffd9 	bl	800a10a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_I6SymbolSaISE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SG_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 800a158:	462b      	mov	r3, r5
      }
 800a15a:	4618      	mov	r0, r3
 800a15c:	3708      	adds	r7, #8
 800a15e:	46bd      	mov	sp, r7
 800a160:	bdb0      	pop	{r4, r5, r7, pc}

0800a162 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SC_SF_EEEJLj6EEE9_M_accessIJEEERKSP_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 800a162:	b580      	push	{r7, lr}
 800a164:	b082      	sub	sp, #8
 800a166:	af00      	add	r7, sp, #0
 800a168:	6078      	str	r0, [r7, #4]
 800a16a:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800a16c:	683b      	ldr	r3, [r7, #0]
 800a16e:	009b      	lsls	r3, r3, #2
 800a170:	687a      	ldr	r2, [r7, #4]
 800a172:	4413      	add	r3, r2
 800a174:	4618      	mov	r0, r3
 800a176:	f000 fd3b 	bl	800abf0 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SC_SF_EEEJEE9_M_accessEv>
 800a17a:	4603      	mov	r3, r0
	}
 800a17c:	4618      	mov	r0, r3
 800a17e:	3708      	adds	r7, #8
 800a180:	46bd      	mov	sp, r7
 800a182:	bd80      	pop	{r7, pc}

0800a184 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SB_SE_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 800a184:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a186:	b085      	sub	sp, #20
 800a188:	af00      	add	r7, sp, #0
 800a18a:	6078      	str	r0, [r7, #4]
 800a18c:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800a18e:	4b0f      	ldr	r3, [pc, #60]	; (800a1cc <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SB_SE_EEEEDcOT1_DpOT2_+0x48>)
 800a190:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800a192:	6838      	ldr	r0, [r7, #0]
 800a194:	f7fd fe0d 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 800a198:	4603      	mov	r3, r0
 800a19a:	4619      	mov	r1, r3
 800a19c:	68f8      	ldr	r0, [r7, #12]
 800a19e:	f7ff ffe0 	bl	800a162 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SC_SF_EEEJLj6EEE9_M_accessIJEEERKSP_jDpT_>
 800a1a2:	4603      	mov	r3, r0
 800a1a4:	681b      	ldr	r3, [r3, #0]
 800a1a6:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 800a1a8:	68bc      	ldr	r4, [r7, #8]
 800a1aa:	6878      	ldr	r0, [r7, #4]
 800a1ac:	f000 fd2b 	bl	800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800a1b0:	4605      	mov	r5, r0
 800a1b2:	6838      	ldr	r0, [r7, #0]
 800a1b4:	f7fe fbc1 	bl	800893a <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a1b8:	4603      	mov	r3, r0
 800a1ba:	4619      	mov	r1, r3
 800a1bc:	4628      	mov	r0, r5
 800a1be:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 800a1c0:	4633      	mov	r3, r6
    }
 800a1c2:	4618      	mov	r0, r3
 800a1c4:	3714      	adds	r7, #20
 800a1c6:	46bd      	mov	sp, r7
 800a1c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a1ca:	bf00      	nop
 800a1cc:	08027ecc 	.word	0x08027ecc

0800a1d0 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 800a1d0:	b580      	push	{r7, lr}
 800a1d2:	b084      	sub	sp, #16
 800a1d4:	af00      	add	r7, sp, #0
 800a1d6:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 800a1d8:	6878      	ldr	r0, [r7, #4]
 800a1da:	f7ff fdb3 	bl	8009d44 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant16_Variant_storageILb0EJifbS5_S8_SB_EEEEDcOT0_>
 800a1de:	4602      	mov	r2, r0
 800a1e0:	f107 030c 	add.w	r3, r7, #12
 800a1e4:	4611      	mov	r1, r2
 800a1e6:	4618      	mov	r0, r3
 800a1e8:	f7ff ffcc 	bl	800a184 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SB_SE_EEEEDcOT1_DpOT2_>
      }
 800a1ec:	bf00      	nop
 800a1ee:	3710      	adds	r7, #16
 800a1f0:	46bd      	mov	sp, r7
 800a1f2:	bd80      	pop	{r7, pc}

0800a1f4 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a1f4:	b480      	push	{r7}
 800a1f6:	b083      	sub	sp, #12
 800a1f8:	af00      	add	r7, sp, #0
 800a1fa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a1fc:	687b      	ldr	r3, [r7, #4]
 800a1fe:	4618      	mov	r0, r3
 800a200:	370c      	adds	r7, #12
 800a202:	46bd      	mov	sp, r7
 800a204:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a208:	4770      	bx	lr

0800a20a <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEESI_St14__invoke_otherOSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800a20a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a20e:	b084      	sub	sp, #16
 800a210:	af00      	add	r7, sp, #0
 800a212:	7338      	strb	r0, [r7, #12]
 800a214:	60b9      	str	r1, [r7, #8]
 800a216:	607a      	str	r2, [r7, #4]
 800a218:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800a21a:	68b8      	ldr	r0, [r7, #8]
 800a21c:	f7fe fcb3 	bl	8008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 800a220:	4604      	mov	r4, r0
 800a222:	6878      	ldr	r0, [r7, #4]
 800a224:	f7fb fee9 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800a228:	4605      	mov	r5, r0
 800a22a:	6838      	ldr	r0, [r7, #0]
 800a22c:	f7ff ffe2 	bl	800a1f4 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800a230:	4632      	mov	r2, r6
 800a232:	4629      	mov	r1, r5
 800a234:	4620      	mov	r0, r4
 800a236:	f000 fcf1 	bl	800ac1c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESH_SI_>
 800a23a:	4643      	mov	r3, r8
 800a23c:	4618      	mov	r0, r3
 800a23e:	3710      	adds	r7, #16
 800a240:	46bd      	mov	sp, r7
 800a242:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a246 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a246:	b480      	push	{r7}
 800a248:	b083      	sub	sp, #12
 800a24a:	af00      	add	r7, sp, #0
 800a24c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a24e:	687b      	ldr	r3, [r7, #4]
 800a250:	4618      	mov	r0, r3
 800a252:	370c      	adds	r7, #12
 800a254:	46bd      	mov	sp, r7
 800a256:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a25a:	4770      	bx	lr

0800a25c <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEESI_St14__invoke_otherOSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800a25c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a260:	b084      	sub	sp, #16
 800a262:	af00      	add	r7, sp, #0
 800a264:	7338      	strb	r0, [r7, #12]
 800a266:	60b9      	str	r1, [r7, #8]
 800a268:	607a      	str	r2, [r7, #4]
 800a26a:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800a26c:	68b8      	ldr	r0, [r7, #8]
 800a26e:	f7fe fc8a 	bl	8008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 800a272:	4604      	mov	r4, r0
 800a274:	6878      	ldr	r0, [r7, #4]
 800a276:	f7fb fee2 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800a27a:	4605      	mov	r5, r0
 800a27c:	6838      	ldr	r0, [r7, #0]
 800a27e:	f7ff ffe2 	bl	800a246 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800a282:	4632      	mov	r2, r6
 800a284:	4629      	mov	r1, r5
 800a286:	4620      	mov	r0, r4
 800a288:	f000 fd1a 	bl	800acc0 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESH_SI_>
 800a28c:	4643      	mov	r3, r8
 800a28e:	4618      	mov	r0, r3
 800a290:	3710      	adds	r7, #16
 800a292:	46bd      	mov	sp, r7
 800a294:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a298 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a298:	b480      	push	{r7}
 800a29a:	b083      	sub	sp, #12
 800a29c:	af00      	add	r7, sp, #0
 800a29e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a2a0:	687b      	ldr	r3, [r7, #4]
 800a2a2:	4618      	mov	r0, r3
 800a2a4:	370c      	adds	r7, #12
 800a2a6:	46bd      	mov	sp, r7
 800a2a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2ac:	4770      	bx	lr

0800a2ae <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEESI_St14__invoke_otherOSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800a2ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a2b2:	b084      	sub	sp, #16
 800a2b4:	af00      	add	r7, sp, #0
 800a2b6:	7338      	strb	r0, [r7, #12]
 800a2b8:	60b9      	str	r1, [r7, #8]
 800a2ba:	607a      	str	r2, [r7, #4]
 800a2bc:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800a2be:	68b8      	ldr	r0, [r7, #8]
 800a2c0:	f7fe fc61 	bl	8008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 800a2c4:	4604      	mov	r4, r0
 800a2c6:	6878      	ldr	r0, [r7, #4]
 800a2c8:	f7fb fe75 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800a2cc:	4605      	mov	r5, r0
 800a2ce:	6838      	ldr	r0, [r7, #0]
 800a2d0:	f7ff ffe2 	bl	800a298 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800a2d4:	4632      	mov	r2, r6
 800a2d6:	4629      	mov	r1, r5
 800a2d8:	4620      	mov	r0, r4
 800a2da:	f000 fd43 	bl	800ad64 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESH_SI_>
 800a2de:	4643      	mov	r3, r8
 800a2e0:	4618      	mov	r0, r3
 800a2e2:	3710      	adds	r7, #16
 800a2e4:	46bd      	mov	sp, r7
 800a2e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a2ea <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a2ea:	b480      	push	{r7}
 800a2ec:	b083      	sub	sp, #12
 800a2ee:	af00      	add	r7, sp, #0
 800a2f0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a2f2:	687b      	ldr	r3, [r7, #4]
 800a2f4:	4618      	mov	r0, r3
 800a2f6:	370c      	adds	r7, #12
 800a2f8:	46bd      	mov	sp, r7
 800a2fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2fe:	4770      	bx	lr

0800a300 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_JRS9_St17integral_constantIjLj3EEEESI_St14__invoke_otherOSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800a300:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a304:	b084      	sub	sp, #16
 800a306:	af00      	add	r7, sp, #0
 800a308:	7338      	strb	r0, [r7, #12]
 800a30a:	60b9      	str	r1, [r7, #8]
 800a30c:	607a      	str	r2, [r7, #4]
 800a30e:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800a310:	68b8      	ldr	r0, [r7, #8]
 800a312:	f7fe fc38 	bl	8008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 800a316:	4604      	mov	r4, r0
 800a318:	6878      	ldr	r0, [r7, #4]
 800a31a:	f7fb febe 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a31e:	4605      	mov	r5, r0
 800a320:	6838      	ldr	r0, [r7, #0]
 800a322:	f7ff ffe2 	bl	800a2ea <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800a326:	4632      	mov	r2, r6
 800a328:	4629      	mov	r1, r5
 800a32a:	4620      	mov	r0, r4
 800a32c:	f000 fd6d 	bl	800ae0a <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESH_SI_>
 800a330:	4643      	mov	r3, r8
 800a332:	4618      	mov	r0, r3
 800a334:	3710      	adds	r7, #16
 800a336:	46bd      	mov	sp, r7
 800a338:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a33c <_ZN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE6_M_ptrEv>:
      _M_ptr() noexcept
 800a33c:	b580      	push	{r7, lr}
 800a33e:	b082      	sub	sp, #8
 800a340:	af00      	add	r7, sp, #0
 800a342:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800a344:	6878      	ldr	r0, [r7, #4]
 800a346:	f000 fdb4 	bl	800aeb2 <_ZN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE7_M_addrEv>
 800a34a:	4603      	mov	r3, r0
 800a34c:	4618      	mov	r0, r3
 800a34e:	3708      	adds	r7, #8
 800a350:	46bd      	mov	sp, r7
 800a352:	bd80      	pop	{r7, pc}

0800a354 <_ZSt7forwardIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a354:	b480      	push	{r7}
 800a356:	b083      	sub	sp, #12
 800a358:	af00      	add	r7, sp, #0
 800a35a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a35c:	687b      	ldr	r3, [r7, #4]
 800a35e:	4618      	mov	r0, r3
 800a360:	370c      	adds	r7, #12
 800a362:	46bd      	mov	sp, r7
 800a364:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a368:	4770      	bx	lr

0800a36a <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a36a:	b480      	push	{r7}
 800a36c:	b083      	sub	sp, #12
 800a36e:	af00      	add	r7, sp, #0
 800a370:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a372:	687b      	ldr	r3, [r7, #4]
 800a374:	4618      	mov	r0, r3
 800a376:	370c      	adds	r7, #12
 800a378:	46bd      	mov	sp, r7
 800a37a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a37e:	4770      	bx	lr

0800a380 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_JRSC_St17integral_constantIjLj4EEEESI_St14__invoke_otherOSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800a380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a384:	b084      	sub	sp, #16
 800a386:	af00      	add	r7, sp, #0
 800a388:	7338      	strb	r0, [r7, #12]
 800a38a:	60b9      	str	r1, [r7, #8]
 800a38c:	607a      	str	r2, [r7, #4]
 800a38e:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800a390:	68b8      	ldr	r0, [r7, #8]
 800a392:	f7fe fbf8 	bl	8008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 800a396:	4604      	mov	r4, r0
 800a398:	6878      	ldr	r0, [r7, #4]
 800a39a:	f7ff ffdb 	bl	800a354 <_ZSt7forwardIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>
 800a39e:	4605      	mov	r5, r0
 800a3a0:	6838      	ldr	r0, [r7, #0]
 800a3a2:	f7ff ffe2 	bl	800a36a <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800a3a6:	4632      	mov	r2, r6
 800a3a8:	4629      	mov	r1, r5
 800a3aa:	4620      	mov	r0, r4
 800a3ac:	f000 fd8c 	bl	800aec8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRSA_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESH_SI_>
 800a3b0:	4643      	mov	r3, r8
 800a3b2:	4618      	mov	r0, r3
 800a3b4:	3710      	adds	r7, #16
 800a3b6:	46bd      	mov	sp, r7
 800a3b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a3bc <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>:
      _M_ptr() noexcept
 800a3bc:	b580      	push	{r7, lr}
 800a3be:	b082      	sub	sp, #8
 800a3c0:	af00      	add	r7, sp, #0
 800a3c2:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800a3c4:	6878      	ldr	r0, [r7, #4]
 800a3c6:	f000 fdd3 	bl	800af70 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>
 800a3ca:	4603      	mov	r3, r0
 800a3cc:	4618      	mov	r0, r3
 800a3ce:	3708      	adds	r7, #8
 800a3d0:	46bd      	mov	sp, r7
 800a3d2:	bd80      	pop	{r7, pc}

0800a3d4 <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a3d4:	b480      	push	{r7}
 800a3d6:	b083      	sub	sp, #12
 800a3d8:	af00      	add	r7, sp, #0
 800a3da:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a3dc:	687b      	ldr	r3, [r7, #4]
 800a3de:	4618      	mov	r0, r3
 800a3e0:	370c      	adds	r7, #12
 800a3e2:	46bd      	mov	sp, r7
 800a3e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3e8:	4770      	bx	lr

0800a3ea <_ZSt7forwardISt17integral_constantIjLj5EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a3ea:	b480      	push	{r7}
 800a3ec:	b083      	sub	sp, #12
 800a3ee:	af00      	add	r7, sp, #0
 800a3f0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a3f2:	687b      	ldr	r3, [r7, #4]
 800a3f4:	4618      	mov	r0, r3
 800a3f6:	370c      	adds	r7, #12
 800a3f8:	46bd      	mov	sp, r7
 800a3fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3fe:	4770      	bx	lr

0800a400 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSEOSG_EUlOT_T0_E_JRSF_St17integral_constantIjLj5EEEESI_St14__invoke_otherOSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800a400:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a404:	b084      	sub	sp, #16
 800a406:	af00      	add	r7, sp, #0
 800a408:	7338      	strb	r0, [r7, #12]
 800a40a:	60b9      	str	r1, [r7, #8]
 800a40c:	607a      	str	r2, [r7, #4]
 800a40e:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800a410:	68b8      	ldr	r0, [r7, #8]
 800a412:	f7fe fbb8 	bl	8008b86 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_ESI_RNSt16remove_referenceISH_E4typeE>
 800a416:	4604      	mov	r4, r0
 800a418:	6878      	ldr	r0, [r7, #4]
 800a41a:	f7ff ffdb 	bl	800a3d4 <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800a41e:	4605      	mov	r5, r0
 800a420:	6838      	ldr	r0, [r7, #0]
 800a422:	f7ff ffe2 	bl	800a3ea <_ZSt7forwardISt17integral_constantIjLj5EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800a426:	4632      	mov	r2, r6
 800a428:	4629      	mov	r1, r5
 800a42a:	4620      	mov	r0, r4
 800a42c:	f000 fdab 	bl	800af86 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRSD_St17integral_constantIjLj5EEEENS0_20__variant_idx_cookieESH_SI_>
 800a430:	4643      	mov	r3, r8
 800a432:	4618      	mov	r0, r3
 800a434:	3710      	adds	r7, #16
 800a436:	46bd      	mov	sp, r7
 800a438:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a43c <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 800a43c:	b580      	push	{r7, lr}
 800a43e:	b082      	sub	sp, #8
 800a440:	af00      	add	r7, sp, #0
 800a442:	6078      	str	r0, [r7, #4]
 800a444:	687b      	ldr	r3, [r7, #4]
 800a446:	4618      	mov	r0, r3
 800a448:	f000 fdf1 	bl	800b02e <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1Ev>
 800a44c:	687b      	ldr	r3, [r7, #4]
 800a44e:	4618      	mov	r0, r3
 800a450:	3708      	adds	r7, #8
 800a452:	46bd      	mov	sp, r7
 800a454:	bd80      	pop	{r7, pc}

0800a456 <_ZSt7forwardINSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a456:	b480      	push	{r7}
 800a458:	b083      	sub	sp, #12
 800a45a:	af00      	add	r7, sp, #0
 800a45c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a45e:	687b      	ldr	r3, [r7, #4]
 800a460:	4618      	mov	r0, r3
 800a462:	370c      	adds	r7, #12
 800a464:	46bd      	mov	sp, r7
 800a466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a46a:	4770      	bx	lr

0800a46c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a46c:	b480      	push	{r7}
 800a46e:	b083      	sub	sp, #12
 800a470:	af00      	add	r7, sp, #0
 800a472:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a474:	687b      	ldr	r3, [r7, #4]
 800a476:	4618      	mov	r0, r3
 800a478:	370c      	adds	r7, #12
 800a47a:	46bd      	mov	sp, r7
 800a47c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a480:	4770      	bx	lr

0800a482 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a482:	b480      	push	{r7}
 800a484:	b083      	sub	sp, #12
 800a486:	af00      	add	r7, sp, #0
 800a488:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a48a:	687b      	ldr	r3, [r7, #4]
 800a48c:	4618      	mov	r0, r3
 800a48e:	370c      	adds	r7, #12
 800a490:	46bd      	mov	sp, r7
 800a492:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a496:	4770      	bx	lr

0800a498 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a498:	b480      	push	{r7}
 800a49a:	b083      	sub	sp, #12
 800a49c:	af00      	add	r7, sp, #0
 800a49e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a4a0:	687b      	ldr	r3, [r7, #4]
 800a4a2:	4618      	mov	r0, r3
 800a4a4:	370c      	adds	r7, #12
 800a4a6:	46bd      	mov	sp, r7
 800a4a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4ac:	4770      	bx	lr

0800a4ae <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a4ae:	b480      	push	{r7}
 800a4b0:	b083      	sub	sp, #12
 800a4b2:	af00      	add	r7, sp, #0
 800a4b4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a4b6:	687b      	ldr	r3, [r7, #4]
 800a4b8:	4618      	mov	r0, r3
 800a4ba:	370c      	adds	r7, #12
 800a4bc:	46bd      	mov	sp, r7
 800a4be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4c2:	4770      	bx	lr

0800a4c4 <_ZNOSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800a4c4:	b580      	push	{r7, lr}
 800a4c6:	b082      	sub	sp, #8
 800a4c8:	af00      	add	r7, sp, #0
 800a4ca:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800a4cc:	687b      	ldr	r3, [r7, #4]
 800a4ce:	4618      	mov	r0, r3
 800a4d0:	f000 fdba 	bl	800b048 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 800a4d4:	4603      	mov	r3, r0
 800a4d6:	4618      	mov	r0, r3
 800a4d8:	3708      	adds	r7, #8
 800a4da:	46bd      	mov	sp, r7
 800a4dc:	bd80      	pop	{r7, pc}

0800a4de <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JiEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSQ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a4de:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a4e0:	b083      	sub	sp, #12
 800a4e2:	af00      	add	r7, sp, #0
 800a4e4:	6078      	str	r0, [r7, #4]
 800a4e6:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a4e8:	6878      	ldr	r0, [r7, #4]
 800a4ea:	f000 f911 	bl	800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800a4ee:	4604      	mov	r4, r0
 800a4f0:	6838      	ldr	r0, [r7, #0]
 800a4f2:	f000 fdb4 	bl	800b05e <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800a4f6:	4603      	mov	r3, r0
 800a4f8:	461a      	mov	r2, r3
 800a4fa:	4621      	mov	r1, r4
 800a4fc:	4628      	mov	r0, r5
 800a4fe:	f000 fdb9 	bl	800b074 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_JiEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 800a502:	4633      	mov	r3, r6
    }
 800a504:	4618      	mov	r0, r3
 800a506:	370c      	adds	r7, #12
 800a508:	46bd      	mov	sp, r7
 800a50a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a50c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a50c:	b480      	push	{r7}
 800a50e:	b083      	sub	sp, #12
 800a510:	af00      	add	r7, sp, #0
 800a512:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a514:	687b      	ldr	r3, [r7, #4]
 800a516:	4618      	mov	r0, r3
 800a518:	370c      	adds	r7, #12
 800a51a:	46bd      	mov	sp, r7
 800a51c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a520:	4770      	bx	lr

0800a522 <_ZNOSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800a522:	b580      	push	{r7, lr}
 800a524:	b082      	sub	sp, #8
 800a526:	af00      	add	r7, sp, #0
 800a528:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800a52a:	687b      	ldr	r3, [r7, #4]
 800a52c:	4618      	mov	r0, r3
 800a52e:	f000 fdb8 	bl	800b0a2 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 800a532:	4603      	mov	r3, r0
 800a534:	4618      	mov	r0, r3
 800a536:	3708      	adds	r7, #8
 800a538:	46bd      	mov	sp, r7
 800a53a:	bd80      	pop	{r7, pc}

0800a53c <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JfEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSQ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a53c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a53e:	b083      	sub	sp, #12
 800a540:	af00      	add	r7, sp, #0
 800a542:	6078      	str	r0, [r7, #4]
 800a544:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a546:	6878      	ldr	r0, [r7, #4]
 800a548:	f000 f8e2 	bl	800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800a54c:	4604      	mov	r4, r0
 800a54e:	6838      	ldr	r0, [r7, #0]
 800a550:	f000 fdb2 	bl	800b0b8 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800a554:	4603      	mov	r3, r0
 800a556:	461a      	mov	r2, r3
 800a558:	4621      	mov	r1, r4
 800a55a:	4628      	mov	r0, r5
 800a55c:	f000 fdb7 	bl	800b0ce <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_JfEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 800a560:	4633      	mov	r3, r6
    }
 800a562:	4618      	mov	r0, r3
 800a564:	370c      	adds	r7, #12
 800a566:	46bd      	mov	sp, r7
 800a568:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a56a <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a56a:	b480      	push	{r7}
 800a56c:	b083      	sub	sp, #12
 800a56e:	af00      	add	r7, sp, #0
 800a570:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a572:	687b      	ldr	r3, [r7, #4]
 800a574:	4618      	mov	r0, r3
 800a576:	370c      	adds	r7, #12
 800a578:	46bd      	mov	sp, r7
 800a57a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a57e:	4770      	bx	lr

0800a580 <_ZNOSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800a580:	b580      	push	{r7, lr}
 800a582:	b082      	sub	sp, #8
 800a584:	af00      	add	r7, sp, #0
 800a586:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800a588:	687b      	ldr	r3, [r7, #4]
 800a58a:	4618      	mov	r0, r3
 800a58c:	f000 fdb6 	bl	800b0fc <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 800a590:	4603      	mov	r3, r0
 800a592:	4618      	mov	r0, r3
 800a594:	3708      	adds	r7, #8
 800a596:	46bd      	mov	sp, r7
 800a598:	bd80      	pop	{r7, pc}

0800a59a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JbEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSQ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a59a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a59c:	b083      	sub	sp, #12
 800a59e:	af00      	add	r7, sp, #0
 800a5a0:	6078      	str	r0, [r7, #4]
 800a5a2:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a5a4:	6878      	ldr	r0, [r7, #4]
 800a5a6:	f000 f8b3 	bl	800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800a5aa:	4604      	mov	r4, r0
 800a5ac:	6838      	ldr	r0, [r7, #0]
 800a5ae:	f000 fdb0 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800a5b2:	4603      	mov	r3, r0
 800a5b4:	461a      	mov	r2, r3
 800a5b6:	4621      	mov	r1, r4
 800a5b8:	4628      	mov	r0, r5
 800a5ba:	f000 fdb5 	bl	800b128 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_JbEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 800a5be:	4633      	mov	r3, r6
    }
 800a5c0:	4618      	mov	r0, r3
 800a5c2:	370c      	adds	r7, #12
 800a5c4:	46bd      	mov	sp, r7
 800a5c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a5c8 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a5c8:	b480      	push	{r7}
 800a5ca:	b083      	sub	sp, #12
 800a5cc:	af00      	add	r7, sp, #0
 800a5ce:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a5d0:	687b      	ldr	r3, [r7, #4]
 800a5d2:	4618      	mov	r0, r3
 800a5d4:	370c      	adds	r7, #12
 800a5d6:	46bd      	mov	sp, r7
 800a5d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5dc:	4770      	bx	lr

0800a5de <_ZNOSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 800a5de:	b580      	push	{r7, lr}
 800a5e0:	b082      	sub	sp, #8
 800a5e2:	af00      	add	r7, sp, #0
 800a5e4:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 800a5e6:	687b      	ldr	r3, [r7, #4]
 800a5e8:	4618      	mov	r0, r3
 800a5ea:	f7fb fd4a 	bl	8006082 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 800a5ee:	4603      	mov	r3, r0
 800a5f0:	4618      	mov	r0, r3
 800a5f2:	f000 fdb0 	bl	800b156 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800a5f6:	4603      	mov	r3, r0
 800a5f8:	4618      	mov	r0, r3
 800a5fa:	3708      	adds	r7, #8
 800a5fc:	46bd      	mov	sp, r7
 800a5fe:	bd80      	pop	{r7, pc}

0800a600 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JS8_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSQ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a600:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a602:	b083      	sub	sp, #12
 800a604:	af00      	add	r7, sp, #0
 800a606:	6078      	str	r0, [r7, #4]
 800a608:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a60a:	6878      	ldr	r0, [r7, #4]
 800a60c:	f000 f880 	bl	800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800a610:	4604      	mov	r4, r0
 800a612:	6838      	ldr	r0, [r7, #0]
 800a614:	f000 fdaa 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800a618:	4603      	mov	r3, r0
 800a61a:	461a      	mov	r2, r3
 800a61c:	4621      	mov	r1, r4
 800a61e:	4628      	mov	r0, r5
 800a620:	f000 fdaf 	bl	800b182 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_JS9_EESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 800a624:	4633      	mov	r3, r6
    }
 800a626:	4618      	mov	r0, r3
 800a628:	370c      	adds	r7, #12
 800a62a:	46bd      	mov	sp, r7
 800a62c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a62e <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a62e:	b480      	push	{r7}
 800a630:	b083      	sub	sp, #12
 800a632:	af00      	add	r7, sp, #0
 800a634:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a636:	687b      	ldr	r3, [r7, #4]
 800a638:	4618      	mov	r0, r3
 800a63a:	370c      	adds	r7, #12
 800a63c:	46bd      	mov	sp, r7
 800a63e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a642:	4770      	bx	lr

0800a644 <_ZNOSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 800a644:	b580      	push	{r7, lr}
 800a646:	b082      	sub	sp, #8
 800a648:	af00      	add	r7, sp, #0
 800a64a:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 800a64c:	687b      	ldr	r3, [r7, #4]
 800a64e:	4618      	mov	r0, r3
 800a650:	f7ff fe74 	bl	800a33c <_ZN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE6_M_ptrEv>
 800a654:	4603      	mov	r3, r0
 800a656:	4618      	mov	r0, r3
 800a658:	f000 fdaa 	bl	800b1b0 <_ZSt4moveIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEONSt16remove_referenceIT_E4typeEOSB_>
 800a65c:	4603      	mov	r3, r0
 800a65e:	4618      	mov	r0, r3
 800a660:	3708      	adds	r7, #8
 800a662:	46bd      	mov	sp, r7
 800a664:	bd80      	pop	{r7, pc}

0800a666 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JSB_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSQ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a666:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a668:	b083      	sub	sp, #12
 800a66a:	af00      	add	r7, sp, #0
 800a66c:	6078      	str	r0, [r7, #4]
 800a66e:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a670:	6878      	ldr	r0, [r7, #4]
 800a672:	f000 f84d 	bl	800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800a676:	4604      	mov	r4, r0
 800a678:	6838      	ldr	r0, [r7, #0]
 800a67a:	f000 fda4 	bl	800b1c6 <_ZSt7forwardISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a67e:	4603      	mov	r3, r0
 800a680:	461a      	mov	r2, r3
 800a682:	4621      	mov	r1, r4
 800a684:	4628      	mov	r0, r5
 800a686:	f000 fda9 	bl	800b1dc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_JSC_EESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 800a68a:	4633      	mov	r3, r6
    }
 800a68c:	4618      	mov	r0, r3
 800a68e:	370c      	adds	r7, #12
 800a690:	46bd      	mov	sp, r7
 800a692:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a694 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a694:	b480      	push	{r7}
 800a696:	b083      	sub	sp, #12
 800a698:	af00      	add	r7, sp, #0
 800a69a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a69c:	687b      	ldr	r3, [r7, #4]
 800a69e:	4618      	mov	r0, r3
 800a6a0:	370c      	adds	r7, #12
 800a6a2:	46bd      	mov	sp, r7
 800a6a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6a8:	4770      	bx	lr

0800a6aa <_ZNOSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 800a6aa:	b580      	push	{r7, lr}
 800a6ac:	b082      	sub	sp, #8
 800a6ae:	af00      	add	r7, sp, #0
 800a6b0:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 800a6b2:	687b      	ldr	r3, [r7, #4]
 800a6b4:	4618      	mov	r0, r3
 800a6b6:	f7ff fe81 	bl	800a3bc <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 800a6ba:	4603      	mov	r3, r0
 800a6bc:	4618      	mov	r0, r3
 800a6be:	f000 fda4 	bl	800b20a <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 800a6c2:	4603      	mov	r3, r0
 800a6c4:	4618      	mov	r0, r3
 800a6c6:	3708      	adds	r7, #8
 800a6c8:	46bd      	mov	sp, r7
 800a6ca:	bd80      	pop	{r7, pc}

0800a6cc <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_JSE_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSQ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a6cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a6ce:	b083      	sub	sp, #12
 800a6d0:	af00      	add	r7, sp, #0
 800a6d2:	6078      	str	r0, [r7, #4]
 800a6d4:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a6d6:	6878      	ldr	r0, [r7, #4]
 800a6d8:	f000 f81a 	bl	800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800a6dc:	4604      	mov	r4, r0
 800a6de:	6838      	ldr	r0, [r7, #0]
 800a6e0:	f000 fd9e 	bl	800b220 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800a6e4:	4603      	mov	r3, r0
 800a6e6:	461a      	mov	r2, r3
 800a6e8:	4621      	mov	r1, r4
 800a6ea:	4628      	mov	r0, r5
 800a6ec:	f000 fda3 	bl	800b236 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_JSF_EESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 800a6f0:	4633      	mov	r3, r6
    }
 800a6f2:	4618      	mov	r0, r3
 800a6f4:	370c      	adds	r7, #12
 800a6f6:	46bd      	mov	sp, r7
 800a6f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a6fa <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SC_SF_EEEJEE9_M_accessEv>:
      _M_access() const
 800a6fa:	b480      	push	{r7}
 800a6fc:	b083      	sub	sp, #12
 800a6fe:	af00      	add	r7, sp, #0
 800a700:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 800a702:	687b      	ldr	r3, [r7, #4]
 800a704:	4618      	mov	r0, r3
 800a706:	370c      	adds	r7, #12
 800a708:	46bd      	mov	sp, r7
 800a70a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a70e:	4770      	bx	lr

0800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a710:	b480      	push	{r7}
 800a712:	b083      	sub	sp, #12
 800a714:	af00      	add	r7, sp, #0
 800a716:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a718:	687b      	ldr	r3, [r7, #4]
 800a71a:	4618      	mov	r0, r3
 800a71c:	370c      	adds	r7, #12
 800a71e:	46bd      	mov	sp, r7
 800a720:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a724:	4770      	bx	lr

0800a726 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a726:	b480      	push	{r7}
 800a728:	b083      	sub	sp, #12
 800a72a:	af00      	add	r7, sp, #0
 800a72c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a72e:	687b      	ldr	r3, [r7, #4]
 800a730:	4618      	mov	r0, r3
 800a732:	370c      	adds	r7, #12
 800a734:	46bd      	mov	sp, r7
 800a736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a73a:	4770      	bx	lr

0800a73c <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a73c:	b480      	push	{r7}
 800a73e:	b083      	sub	sp, #12
 800a740:	af00      	add	r7, sp, #0
 800a742:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a744:	687b      	ldr	r3, [r7, #4]
 800a746:	4618      	mov	r0, r3
 800a748:	370c      	adds	r7, #12
 800a74a:	46bd      	mov	sp, r7
 800a74c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a750:	4770      	bx	lr

0800a752 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISO_JDpT0_EE4typeESP_DpOSU_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a752:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a754:	b083      	sub	sp, #12
 800a756:	af00      	add	r7, sp, #0
 800a758:	6078      	str	r0, [r7, #4]
 800a75a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a75c:	6878      	ldr	r0, [r7, #4]
 800a75e:	f000 f88d 	bl	800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800a762:	4604      	mov	r4, r0
 800a764:	6838      	ldr	r0, [r7, #0]
 800a766:	f000 f894 	bl	800a892 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800a76a:	4603      	mov	r3, r0
 800a76c:	461a      	mov	r2, r3
 800a76e:	4621      	mov	r1, r4
 800a770:	4628      	mov	r0, r5
 800a772:	f000 fd77 	bl	800b264 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_JRKiEESP_St14__invoke_otherSM_DpOT1_>
					std::forward<_Args>(__args)...);
 800a776:	4633      	mov	r3, r6
    }
 800a778:	4618      	mov	r0, r3
 800a77a:	370c      	adds	r7, #12
 800a77c:	46bd      	mov	sp, r7
 800a77e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a780 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISO_JDpT0_EE4typeESP_DpOSU_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a780:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a782:	b083      	sub	sp, #12
 800a784:	af00      	add	r7, sp, #0
 800a786:	6078      	str	r0, [r7, #4]
 800a788:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a78a:	6878      	ldr	r0, [r7, #4]
 800a78c:	f000 f876 	bl	800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800a790:	4604      	mov	r4, r0
 800a792:	6838      	ldr	r0, [r7, #0]
 800a794:	f000 f8a6 	bl	800a8e4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800a798:	4603      	mov	r3, r0
 800a79a:	461a      	mov	r2, r3
 800a79c:	4621      	mov	r1, r4
 800a79e:	4628      	mov	r0, r5
 800a7a0:	f000 fd77 	bl	800b292 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_JRKfEESP_St14__invoke_otherSM_DpOT1_>
					std::forward<_Args>(__args)...);
 800a7a4:	4633      	mov	r3, r6
    }
 800a7a6:	4618      	mov	r0, r3
 800a7a8:	370c      	adds	r7, #12
 800a7aa:	46bd      	mov	sp, r7
 800a7ac:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a7ae <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISO_JDpT0_EE4typeESP_DpOSU_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a7ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a7b0:	b083      	sub	sp, #12
 800a7b2:	af00      	add	r7, sp, #0
 800a7b4:	6078      	str	r0, [r7, #4]
 800a7b6:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a7b8:	6878      	ldr	r0, [r7, #4]
 800a7ba:	f000 f85f 	bl	800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800a7be:	4604      	mov	r4, r0
 800a7c0:	6838      	ldr	r0, [r7, #0]
 800a7c2:	f000 f8b8 	bl	800a936 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800a7c6:	4603      	mov	r3, r0
 800a7c8:	461a      	mov	r2, r3
 800a7ca:	4621      	mov	r1, r4
 800a7cc:	4628      	mov	r0, r5
 800a7ce:	f000 fd77 	bl	800b2c0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_JRKbEESP_St14__invoke_otherSM_DpOT1_>
					std::forward<_Args>(__args)...);
 800a7d2:	4633      	mov	r3, r6
    }
 800a7d4:	4618      	mov	r0, r3
 800a7d6:	370c      	adds	r7, #12
 800a7d8:	46bd      	mov	sp, r7
 800a7da:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a7dc <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISO_JDpT0_EE4typeESP_DpOSU_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a7dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a7de:	b083      	sub	sp, #12
 800a7e0:	af00      	add	r7, sp, #0
 800a7e2:	6078      	str	r0, [r7, #4]
 800a7e4:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a7e6:	6878      	ldr	r0, [r7, #4]
 800a7e8:	f000 f848 	bl	800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800a7ec:	4604      	mov	r4, r0
 800a7ee:	6838      	ldr	r0, [r7, #0]
 800a7f0:	f000 f8d6 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800a7f4:	4603      	mov	r3, r0
 800a7f6:	461a      	mov	r2, r3
 800a7f8:	4621      	mov	r1, r4
 800a7fa:	4628      	mov	r0, r5
 800a7fc:	f000 fd77 	bl	800b2ee <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_JRKS9_EESP_St14__invoke_otherSM_DpOT1_>
					std::forward<_Args>(__args)...);
 800a800:	4633      	mov	r3, r6
    }
 800a802:	4618      	mov	r0, r3
 800a804:	370c      	adds	r7, #12
 800a806:	46bd      	mov	sp, r7
 800a808:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a80a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKSB_EENSt15__invoke_resultISO_JDpT0_EE4typeESP_DpOSU_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a80a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a80c:	b083      	sub	sp, #12
 800a80e:	af00      	add	r7, sp, #0
 800a810:	6078      	str	r0, [r7, #4]
 800a812:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a814:	6878      	ldr	r0, [r7, #4]
 800a816:	f000 f831 	bl	800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800a81a:	4604      	mov	r4, r0
 800a81c:	6838      	ldr	r0, [r7, #0]
 800a81e:	f000 f8f4 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800a822:	4603      	mov	r3, r0
 800a824:	461a      	mov	r2, r3
 800a826:	4621      	mov	r1, r4
 800a828:	4628      	mov	r0, r5
 800a82a:	f000 fd77 	bl	800b31c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_JRKSC_EESP_St14__invoke_otherSM_DpOT1_>
					std::forward<_Args>(__args)...);
 800a82e:	4633      	mov	r3, r6
    }
 800a830:	4618      	mov	r0, r3
 800a832:	370c      	adds	r7, #12
 800a834:	46bd      	mov	sp, r7
 800a836:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a838 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_JRKSE_EENSt15__invoke_resultISO_JDpT0_EE4typeESP_DpOSU_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a838:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a83a:	b083      	sub	sp, #12
 800a83c:	af00      	add	r7, sp, #0
 800a83e:	6078      	str	r0, [r7, #4]
 800a840:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a842:	6878      	ldr	r0, [r7, #4]
 800a844:	f000 f81a 	bl	800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800a848:	4604      	mov	r4, r0
 800a84a:	6838      	ldr	r0, [r7, #0]
 800a84c:	f000 f912 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800a850:	4603      	mov	r3, r0
 800a852:	461a      	mov	r2, r3
 800a854:	4621      	mov	r1, r4
 800a856:	4628      	mov	r0, r5
 800a858:	f000 fd77 	bl	800b34a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_JRKSF_EESP_St14__invoke_otherSM_DpOT1_>
					std::forward<_Args>(__args)...);
 800a85c:	4633      	mov	r3, r6
    }
 800a85e:	4618      	mov	r0, r3
 800a860:	370c      	adds	r7, #12
 800a862:	46bd      	mov	sp, r7
 800a864:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a866 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SC_SF_EEEJEE9_M_accessEv>:
      _M_access() const
 800a866:	b480      	push	{r7}
 800a868:	b083      	sub	sp, #12
 800a86a:	af00      	add	r7, sp, #0
 800a86c:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 800a86e:	687b      	ldr	r3, [r7, #4]
 800a870:	4618      	mov	r0, r3
 800a872:	370c      	adds	r7, #12
 800a874:	46bd      	mov	sp, r7
 800a876:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a87a:	4770      	bx	lr

0800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a87c:	b480      	push	{r7}
 800a87e:	b083      	sub	sp, #12
 800a880:	af00      	add	r7, sp, #0
 800a882:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a884:	687b      	ldr	r3, [r7, #4]
 800a886:	4618      	mov	r0, r3
 800a888:	370c      	adds	r7, #12
 800a88a:	46bd      	mov	sp, r7
 800a88c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a890:	4770      	bx	lr

0800a892 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a892:	b480      	push	{r7}
 800a894:	b083      	sub	sp, #12
 800a896:	af00      	add	r7, sp, #0
 800a898:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a89a:	687b      	ldr	r3, [r7, #4]
 800a89c:	4618      	mov	r0, r3
 800a89e:	370c      	adds	r7, #12
 800a8a0:	46bd      	mov	sp, r7
 800a8a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8a6:	4770      	bx	lr

0800a8a8 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEESJ_St14__invoke_otherOSL_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800a8a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a8ac:	b084      	sub	sp, #16
 800a8ae:	af00      	add	r7, sp, #0
 800a8b0:	7338      	strb	r0, [r7, #12]
 800a8b2:	60b9      	str	r1, [r7, #8]
 800a8b4:	607a      	str	r2, [r7, #4]
 800a8b6:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800a8b8:	68b8      	ldr	r0, [r7, #8]
 800a8ba:	f7ff fa38 	bl	8009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a8be:	4604      	mov	r4, r0
 800a8c0:	6878      	ldr	r0, [r7, #4]
 800a8c2:	f7ff ffe6 	bl	800a892 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800a8c6:	4605      	mov	r5, r0
 800a8c8:	6838      	ldr	r0, [r7, #0]
 800a8ca:	f7ff fc93 	bl	800a1f4 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800a8ce:	4632      	mov	r2, r6
 800a8d0:	4629      	mov	r1, r5
 800a8d2:	4620      	mov	r0, r4
 800a8d4:	f000 fd50 	bl	800b378 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESI_SJ_>
 800a8d8:	4643      	mov	r3, r8
 800a8da:	4618      	mov	r0, r3
 800a8dc:	3710      	adds	r7, #16
 800a8de:	46bd      	mov	sp, r7
 800a8e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a8e4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a8e4:	b480      	push	{r7}
 800a8e6:	b083      	sub	sp, #12
 800a8e8:	af00      	add	r7, sp, #0
 800a8ea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a8ec:	687b      	ldr	r3, [r7, #4]
 800a8ee:	4618      	mov	r0, r3
 800a8f0:	370c      	adds	r7, #12
 800a8f2:	46bd      	mov	sp, r7
 800a8f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8f8:	4770      	bx	lr

0800a8fa <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEESJ_St14__invoke_otherOSL_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800a8fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a8fe:	b084      	sub	sp, #16
 800a900:	af00      	add	r7, sp, #0
 800a902:	7338      	strb	r0, [r7, #12]
 800a904:	60b9      	str	r1, [r7, #8]
 800a906:	607a      	str	r2, [r7, #4]
 800a908:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800a90a:	68b8      	ldr	r0, [r7, #8]
 800a90c:	f7ff fa0f 	bl	8009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a910:	4604      	mov	r4, r0
 800a912:	6878      	ldr	r0, [r7, #4]
 800a914:	f7ff ffe6 	bl	800a8e4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800a918:	4605      	mov	r5, r0
 800a91a:	6838      	ldr	r0, [r7, #0]
 800a91c:	f7ff fc93 	bl	800a246 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800a920:	4632      	mov	r2, r6
 800a922:	4629      	mov	r1, r5
 800a924:	4620      	mov	r0, r4
 800a926:	f000 fd6b 	bl	800b400 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESI_SJ_>
 800a92a:	4643      	mov	r3, r8
 800a92c:	4618      	mov	r0, r3
 800a92e:	3710      	adds	r7, #16
 800a930:	46bd      	mov	sp, r7
 800a932:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a936 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a936:	b480      	push	{r7}
 800a938:	b083      	sub	sp, #12
 800a93a:	af00      	add	r7, sp, #0
 800a93c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a93e:	687b      	ldr	r3, [r7, #4]
 800a940:	4618      	mov	r0, r3
 800a942:	370c      	adds	r7, #12
 800a944:	46bd      	mov	sp, r7
 800a946:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a94a:	4770      	bx	lr

0800a94c <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEESJ_St14__invoke_otherOSL_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800a94c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a950:	b084      	sub	sp, #16
 800a952:	af00      	add	r7, sp, #0
 800a954:	7338      	strb	r0, [r7, #12]
 800a956:	60b9      	str	r1, [r7, #8]
 800a958:	607a      	str	r2, [r7, #4]
 800a95a:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800a95c:	68b8      	ldr	r0, [r7, #8]
 800a95e:	f7ff f9e6 	bl	8009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a962:	4604      	mov	r4, r0
 800a964:	6878      	ldr	r0, [r7, #4]
 800a966:	f7ff ffe6 	bl	800a936 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800a96a:	4605      	mov	r5, r0
 800a96c:	6838      	ldr	r0, [r7, #0]
 800a96e:	f7ff fc93 	bl	800a298 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800a972:	4632      	mov	r2, r6
 800a974:	4629      	mov	r1, r5
 800a976:	4620      	mov	r0, r4
 800a978:	f000 fd86 	bl	800b488 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESI_SJ_>
 800a97c:	4643      	mov	r3, r8
 800a97e:	4618      	mov	r0, r3
 800a980:	3710      	adds	r7, #16
 800a982:	46bd      	mov	sp, r7
 800a984:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a988 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 800a988:	b580      	push	{r7, lr}
 800a98a:	b082      	sub	sp, #8
 800a98c:	af00      	add	r7, sp, #0
 800a98e:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 800a990:	6878      	ldr	r0, [r7, #4]
 800a992:	f000 fdbe 	bl	800b512 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
 800a996:	4603      	mov	r3, r0
 800a998:	4618      	mov	r0, r3
 800a99a:	3708      	adds	r7, #8
 800a99c:	46bd      	mov	sp, r7
 800a99e:	bd80      	pop	{r7, pc}

0800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a9a0:	b480      	push	{r7}
 800a9a2:	b083      	sub	sp, #12
 800a9a4:	af00      	add	r7, sp, #0
 800a9a6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a9a8:	687b      	ldr	r3, [r7, #4]
 800a9aa:	4618      	mov	r0, r3
 800a9ac:	370c      	adds	r7, #12
 800a9ae:	46bd      	mov	sp, r7
 800a9b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9b4:	4770      	bx	lr

0800a9b6 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_JRKS9_St17integral_constantIjLj3EEEESJ_St14__invoke_otherOSL_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800a9b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a9ba:	b084      	sub	sp, #16
 800a9bc:	af00      	add	r7, sp, #0
 800a9be:	7338      	strb	r0, [r7, #12]
 800a9c0:	60b9      	str	r1, [r7, #8]
 800a9c2:	607a      	str	r2, [r7, #4]
 800a9c4:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800a9c6:	68b8      	ldr	r0, [r7, #8]
 800a9c8:	f7ff f9b1 	bl	8009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a9cc:	4604      	mov	r4, r0
 800a9ce:	6878      	ldr	r0, [r7, #4]
 800a9d0:	f7ff ffe6 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800a9d4:	4605      	mov	r5, r0
 800a9d6:	6838      	ldr	r0, [r7, #0]
 800a9d8:	f7ff fc87 	bl	800a2ea <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800a9dc:	4632      	mov	r2, r6
 800a9de:	4629      	mov	r1, r5
 800a9e0:	4620      	mov	r0, r4
 800a9e2:	f000 fda1 	bl	800b528 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESI_SJ_>
 800a9e6:	4643      	mov	r3, r8
 800a9e8:	4618      	mov	r0, r3
 800a9ea:	3710      	adds	r7, #16
 800a9ec:	46bd      	mov	sp, r7
 800a9ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a9f2 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE6_M_ptrEv>:
      _M_ptr() const noexcept
 800a9f2:	b580      	push	{r7, lr}
 800a9f4:	b082      	sub	sp, #8
 800a9f6:	af00      	add	r7, sp, #0
 800a9f8:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 800a9fa:	6878      	ldr	r0, [r7, #4]
 800a9fc:	f000 fded 	bl	800b5da <_ZNK9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE7_M_addrEv>
 800aa00:	4603      	mov	r3, r0
 800aa02:	4618      	mov	r0, r3
 800aa04:	3708      	adds	r7, #8
 800aa06:	46bd      	mov	sp, r7
 800aa08:	bd80      	pop	{r7, pc}

0800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800aa0a:	b480      	push	{r7}
 800aa0c:	b083      	sub	sp, #12
 800aa0e:	af00      	add	r7, sp, #0
 800aa10:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800aa12:	687b      	ldr	r3, [r7, #4]
 800aa14:	4618      	mov	r0, r3
 800aa16:	370c      	adds	r7, #12
 800aa18:	46bd      	mov	sp, r7
 800aa1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa1e:	4770      	bx	lr

0800aa20 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_JRKSC_St17integral_constantIjLj4EEEESJ_St14__invoke_otherOSL_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800aa20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa24:	b084      	sub	sp, #16
 800aa26:	af00      	add	r7, sp, #0
 800aa28:	7338      	strb	r0, [r7, #12]
 800aa2a:	60b9      	str	r1, [r7, #8]
 800aa2c:	607a      	str	r2, [r7, #4]
 800aa2e:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800aa30:	68b8      	ldr	r0, [r7, #8]
 800aa32:	f7ff f97c 	bl	8009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800aa36:	4604      	mov	r4, r0
 800aa38:	6878      	ldr	r0, [r7, #4]
 800aa3a:	f7ff ffe6 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800aa3e:	4605      	mov	r5, r0
 800aa40:	6838      	ldr	r0, [r7, #0]
 800aa42:	f7ff fc92 	bl	800a36a <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800aa46:	4632      	mov	r2, r6
 800aa48:	4629      	mov	r1, r5
 800aa4a:	4620      	mov	r0, r4
 800aa4c:	f000 fdd0 	bl	800b5f0 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKSA_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESI_SJ_>
 800aa50:	4643      	mov	r3, r8
 800aa52:	4618      	mov	r0, r3
 800aa54:	3710      	adds	r7, #16
 800aa56:	46bd      	mov	sp, r7
 800aa58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aa5c <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>:
      _M_ptr() const noexcept
 800aa5c:	b580      	push	{r7, lr}
 800aa5e:	b082      	sub	sp, #8
 800aa60:	af00      	add	r7, sp, #0
 800aa62:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 800aa64:	6878      	ldr	r0, [r7, #4]
 800aa66:	f000 fe11 	bl	800b68c <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>
 800aa6a:	4603      	mov	r3, r0
 800aa6c:	4618      	mov	r0, r3
 800aa6e:	3708      	adds	r7, #8
 800aa70:	46bd      	mov	sp, r7
 800aa72:	bd80      	pop	{r7, pc}

0800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800aa74:	b480      	push	{r7}
 800aa76:	b083      	sub	sp, #12
 800aa78:	af00      	add	r7, sp, #0
 800aa7a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800aa7c:	687b      	ldr	r3, [r7, #4]
 800aa7e:	4618      	mov	r0, r3
 800aa80:	370c      	adds	r7, #12
 800aa82:	46bd      	mov	sp, r7
 800aa84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa88:	4770      	bx	lr

0800aa8a <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEEaSERKSG_EUlOT_T0_E_JRKSF_St17integral_constantIjLj5EEEESJ_St14__invoke_otherOSL_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800aa8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa8e:	b084      	sub	sp, #16
 800aa90:	af00      	add	r7, sp, #0
 800aa92:	7338      	strb	r0, [r7, #12]
 800aa94:	60b9      	str	r1, [r7, #8]
 800aa96:	607a      	str	r2, [r7, #4]
 800aa98:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800aa9a:	68b8      	ldr	r0, [r7, #8]
 800aa9c:	f7ff f947 	bl	8009d2e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800aaa0:	4604      	mov	r4, r0
 800aaa2:	6878      	ldr	r0, [r7, #4]
 800aaa4:	f7ff ffe6 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800aaa8:	4605      	mov	r5, r0
 800aaaa:	6838      	ldr	r0, [r7, #0]
 800aaac:	f7ff fc9d 	bl	800a3ea <_ZSt7forwardISt17integral_constantIjLj5EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800aab0:	4632      	mov	r2, r6
 800aab2:	4629      	mov	r1, r5
 800aab4:	4620      	mov	r0, r4
 800aab6:	f000 fdf4 	bl	800b6a2 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKSD_St17integral_constantIjLj5EEEENS0_20__variant_idx_cookieESI_SJ_>
 800aaba:	4643      	mov	r3, r8
 800aabc:	4618      	mov	r0, r3
 800aabe:	3710      	adds	r7, #16
 800aac0:	46bd      	mov	sp, r7
 800aac2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aac6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800aac6:	b480      	push	{r7}
 800aac8:	b083      	sub	sp, #12
 800aaca:	af00      	add	r7, sp, #0
 800aacc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800aace:	687b      	ldr	r3, [r7, #4]
 800aad0:	4618      	mov	r0, r3
 800aad2:	370c      	adds	r7, #12
 800aad4:	46bd      	mov	sp, r7
 800aad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aada:	4770      	bx	lr

0800aadc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSL_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800aadc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aade:	b083      	sub	sp, #12
 800aae0:	af00      	add	r7, sp, #0
 800aae2:	6078      	str	r0, [r7, #4]
 800aae4:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800aae6:	6878      	ldr	r0, [r7, #4]
 800aae8:	f000 f88d 	bl	800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800aaec:	4604      	mov	r4, r0
 800aaee:	6838      	ldr	r0, [r7, #0]
 800aaf0:	f7fb fa83 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800aaf4:	4603      	mov	r3, r0
 800aaf6:	461a      	mov	r2, r3
 800aaf8:	4621      	mov	r1, r4
 800aafa:	4628      	mov	r0, r5
 800aafc:	f000 fe1f 	bl	800b73e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_JRiEESH_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800ab00:	4633      	mov	r3, r6
    }
 800ab02:	4618      	mov	r0, r3
 800ab04:	370c      	adds	r7, #12
 800ab06:	46bd      	mov	sp, r7
 800ab08:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ab0a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSL_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800ab0a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab0c:	b083      	sub	sp, #12
 800ab0e:	af00      	add	r7, sp, #0
 800ab10:	6078      	str	r0, [r7, #4]
 800ab12:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800ab14:	6878      	ldr	r0, [r7, #4]
 800ab16:	f000 f876 	bl	800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800ab1a:	4604      	mov	r4, r0
 800ab1c:	6838      	ldr	r0, [r7, #0]
 800ab1e:	f7fb fa8e 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800ab22:	4603      	mov	r3, r0
 800ab24:	461a      	mov	r2, r3
 800ab26:	4621      	mov	r1, r4
 800ab28:	4628      	mov	r0, r5
 800ab2a:	f000 fe1f 	bl	800b76c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_JRfEESH_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800ab2e:	4633      	mov	r3, r6
    }
 800ab30:	4618      	mov	r0, r3
 800ab32:	370c      	adds	r7, #12
 800ab34:	46bd      	mov	sp, r7
 800ab36:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ab38 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSL_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800ab38:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab3a:	b083      	sub	sp, #12
 800ab3c:	af00      	add	r7, sp, #0
 800ab3e:	6078      	str	r0, [r7, #4]
 800ab40:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800ab42:	6878      	ldr	r0, [r7, #4]
 800ab44:	f000 f85f 	bl	800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800ab48:	4604      	mov	r4, r0
 800ab4a:	6838      	ldr	r0, [r7, #0]
 800ab4c:	f7fb fa33 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800ab50:	4603      	mov	r3, r0
 800ab52:	461a      	mov	r2, r3
 800ab54:	4621      	mov	r1, r4
 800ab56:	4628      	mov	r0, r5
 800ab58:	f000 fe1f 	bl	800b79a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_JRbEESH_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800ab5c:	4633      	mov	r3, r6
    }
 800ab5e:	4618      	mov	r0, r3
 800ab60:	370c      	adds	r7, #12
 800ab62:	46bd      	mov	sp, r7
 800ab64:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ab66 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSL_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800ab66:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab68:	b083      	sub	sp, #12
 800ab6a:	af00      	add	r7, sp, #0
 800ab6c:	6078      	str	r0, [r7, #4]
 800ab6e:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800ab70:	6878      	ldr	r0, [r7, #4]
 800ab72:	f000 f848 	bl	800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800ab76:	4604      	mov	r4, r0
 800ab78:	6838      	ldr	r0, [r7, #0]
 800ab7a:	f7fb fa8e 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800ab7e:	4603      	mov	r3, r0
 800ab80:	461a      	mov	r2, r3
 800ab82:	4621      	mov	r1, r4
 800ab84:	4628      	mov	r0, r5
 800ab86:	f000 fe1f 	bl	800b7c8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_JRS9_EESH_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800ab8a:	4633      	mov	r3, r6
    }
 800ab8c:	4618      	mov	r0, r3
 800ab8e:	370c      	adds	r7, #12
 800ab90:	46bd      	mov	sp, r7
 800ab92:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ab94 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRSB_EENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSL_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800ab94:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab96:	b083      	sub	sp, #12
 800ab98:	af00      	add	r7, sp, #0
 800ab9a:	6078      	str	r0, [r7, #4]
 800ab9c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800ab9e:	6878      	ldr	r0, [r7, #4]
 800aba0:	f000 f831 	bl	800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800aba4:	4604      	mov	r4, r0
 800aba6:	6838      	ldr	r0, [r7, #0]
 800aba8:	f7ff fbd4 	bl	800a354 <_ZSt7forwardIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>
 800abac:	4603      	mov	r3, r0
 800abae:	461a      	mov	r2, r3
 800abb0:	4621      	mov	r1, r4
 800abb2:	4628      	mov	r0, r5
 800abb4:	f000 fe1f 	bl	800b7f6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_JRSC_EESH_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800abb8:	4633      	mov	r3, r6
    }
 800abba:	4618      	mov	r0, r3
 800abbc:	370c      	adds	r7, #12
 800abbe:	46bd      	mov	sp, r7
 800abc0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800abc2 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_JRSE_EENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSL_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800abc2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800abc4:	b083      	sub	sp, #12
 800abc6:	af00      	add	r7, sp, #0
 800abc8:	6078      	str	r0, [r7, #4]
 800abca:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800abcc:	6878      	ldr	r0, [r7, #4]
 800abce:	f000 f81a 	bl	800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800abd2:	4604      	mov	r4, r0
 800abd4:	6838      	ldr	r0, [r7, #0]
 800abd6:	f7ff fbfd 	bl	800a3d4 <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800abda:	4603      	mov	r3, r0
 800abdc:	461a      	mov	r2, r3
 800abde:	4621      	mov	r1, r4
 800abe0:	4628      	mov	r0, r5
 800abe2:	f000 fe1f 	bl	800b824 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_JRSF_EESH_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800abe6:	4633      	mov	r3, r6
    }
 800abe8:	4618      	mov	r0, r3
 800abea:	370c      	adds	r7, #12
 800abec:	46bd      	mov	sp, r7
 800abee:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800abf0 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SC_SF_EEEJEE9_M_accessEv>:
      _M_access() const
 800abf0:	b480      	push	{r7}
 800abf2:	b083      	sub	sp, #12
 800abf4:	af00      	add	r7, sp, #0
 800abf6:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 800abf8:	687b      	ldr	r3, [r7, #4]
 800abfa:	4618      	mov	r0, r3
 800abfc:	370c      	adds	r7, #12
 800abfe:	46bd      	mov	sp, r7
 800ac00:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac04:	4770      	bx	lr

0800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800ac06:	b480      	push	{r7}
 800ac08:	b083      	sub	sp, #12
 800ac0a:	af00      	add	r7, sp, #0
 800ac0c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800ac0e:	687b      	ldr	r3, [r7, #4]
 800ac10:	4618      	mov	r0, r3
 800ac12:	370c      	adds	r7, #12
 800ac14:	46bd      	mov	sp, r7
 800ac16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac1a:	4770      	bx	lr

0800ac1c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESH_SI_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800ac1c:	b5b0      	push	{r4, r5, r7, lr}
 800ac1e:	b084      	sub	sp, #16
 800ac20:	af00      	add	r7, sp, #0
 800ac22:	60f8      	str	r0, [r7, #12]
 800ac24:	60b9      	str	r1, [r7, #8]
 800ac26:	713a      	strb	r2, [r7, #4]
 800ac28:	68fb      	ldr	r3, [r7, #12]
 800ac2a:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800ac2c:	7e1b      	ldrb	r3, [r3, #24]
 800ac2e:	461c      	mov	r4, r3
 800ac30:	1d3b      	adds	r3, r7, #4
 800ac32:	4618      	mov	r0, r3
 800ac34:	f000 f828 	bl	800ac88 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 800ac38:	4603      	mov	r3, r0
 800ac3a:	429c      	cmp	r4, r3
 800ac3c:	bf0c      	ite	eq
 800ac3e:	2301      	moveq	r3, #1
 800ac40:	2300      	movne	r3, #0
 800ac42:	b2db      	uxtb	r3, r3
 800ac44:	2b00      	cmp	r3, #0
 800ac46:	d00c      	beq.n	800ac62 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESH_SI_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800ac48:	68b8      	ldr	r0, [r7, #8]
 800ac4a:	f000 f9fd 	bl	800b048 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 800ac4e:	4603      	mov	r3, r0
 800ac50:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800ac52:	68fb      	ldr	r3, [r7, #12]
 800ac54:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800ac56:	4618      	mov	r0, r3
 800ac58:	f000 f821 	bl	800ac9e <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>
 800ac5c:	4603      	mov	r3, r0
 800ac5e:	601c      	str	r4, [r3, #0]
	    return {};
 800ac60:	e00d      	b.n	800ac7e <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESH_SI_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800ac62:	68fb      	ldr	r3, [r7, #12]
 800ac64:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 800ac66:	4618      	mov	r0, r3
 800ac68:	f7fc fc9d 	bl	80075a6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>
 800ac6c:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 800ac6e:	68b8      	ldr	r0, [r7, #8]
 800ac70:	f000 f9ea 	bl	800b048 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 800ac74:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800ac76:	4619      	mov	r1, r3
 800ac78:	4620      	mov	r0, r4
 800ac7a:	f000 fdf5 	bl	800b868 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>
	    return {};
 800ac7e:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800ac80:	4618      	mov	r0, r3
 800ac82:	3710      	adds	r7, #16
 800ac84:	46bd      	mov	sp, r7
 800ac86:	bdb0      	pop	{r4, r5, r7, pc}

0800ac88 <_ZNKSt17integral_constantIjLj0EEcvjEv>:
    struct integral_constant
    {
      static constexpr _Tp                  value = __v;
      typedef _Tp                           value_type;
      typedef integral_constant<_Tp, __v>   type;
      constexpr operator value_type() const noexcept { return value; }
 800ac88:	b480      	push	{r7}
 800ac8a:	b083      	sub	sp, #12
 800ac8c:	af00      	add	r7, sp, #0
 800ac8e:	6078      	str	r0, [r7, #4]
 800ac90:	2300      	movs	r3, #0
 800ac92:	4618      	mov	r0, r3
 800ac94:	370c      	adds	r7, #12
 800ac96:	46bd      	mov	sp, r7
 800ac98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac9c:	4770      	bx	lr

0800ac9e <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ac9e:	b590      	push	{r4, r7, lr}
 800aca0:	b083      	sub	sp, #12
 800aca2:	af00      	add	r7, sp, #0
 800aca4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800aca6:	6878      	ldr	r0, [r7, #4]
 800aca8:	f000 fdd3 	bl	800b852 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800acac:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800acae:	4619      	mov	r1, r3
 800acb0:	4620      	mov	r0, r4
 800acb2:	f7fc fc83 	bl	80075bc <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800acb6:	4603      	mov	r3, r0
    }
 800acb8:	4618      	mov	r0, r3
 800acba:	370c      	adds	r7, #12
 800acbc:	46bd      	mov	sp, r7
 800acbe:	bd90      	pop	{r4, r7, pc}

0800acc0 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESH_SI_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800acc0:	b5b0      	push	{r4, r5, r7, lr}
 800acc2:	b084      	sub	sp, #16
 800acc4:	af00      	add	r7, sp, #0
 800acc6:	60f8      	str	r0, [r7, #12]
 800acc8:	60b9      	str	r1, [r7, #8]
 800acca:	713a      	strb	r2, [r7, #4]
 800accc:	68fb      	ldr	r3, [r7, #12]
 800acce:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800acd0:	7e1b      	ldrb	r3, [r3, #24]
 800acd2:	461c      	mov	r4, r3
 800acd4:	1d3b      	adds	r3, r7, #4
 800acd6:	4618      	mov	r0, r3
 800acd8:	f000 f828 	bl	800ad2c <_ZNKSt17integral_constantIjLj1EEcvjEv>
 800acdc:	4603      	mov	r3, r0
 800acde:	429c      	cmp	r4, r3
 800ace0:	bf0c      	ite	eq
 800ace2:	2301      	moveq	r3, #1
 800ace4:	2300      	movne	r3, #0
 800ace6:	b2db      	uxtb	r3, r3
 800ace8:	2b00      	cmp	r3, #0
 800acea:	d00c      	beq.n	800ad06 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESH_SI_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800acec:	68b8      	ldr	r0, [r7, #8]
 800acee:	f000 f9d8 	bl	800b0a2 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 800acf2:	4603      	mov	r3, r0
 800acf4:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800acf6:	68fb      	ldr	r3, [r7, #12]
 800acf8:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800acfa:	4618      	mov	r0, r3
 800acfc:	f000 f821 	bl	800ad42 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>
 800ad00:	4603      	mov	r3, r0
 800ad02:	601c      	str	r4, [r3, #0]
	    return {};
 800ad04:	e00d      	b.n	800ad22 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESH_SI_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800ad06:	68fb      	ldr	r3, [r7, #12]
 800ad08:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 800ad0a:	4618      	mov	r0, r3
 800ad0c:	f7fc fc4b 	bl	80075a6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>
 800ad10:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 800ad12:	68b8      	ldr	r0, [r7, #8]
 800ad14:	f000 f9c5 	bl	800b0a2 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 800ad18:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800ad1a:	4619      	mov	r1, r3
 800ad1c:	4620      	mov	r0, r4
 800ad1e:	f000 fdbc 	bl	800b89a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>
	    return {};
 800ad22:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800ad24:	4618      	mov	r0, r3
 800ad26:	3710      	adds	r7, #16
 800ad28:	46bd      	mov	sp, r7
 800ad2a:	bdb0      	pop	{r4, r5, r7, pc}

0800ad2c <_ZNKSt17integral_constantIjLj1EEcvjEv>:
 800ad2c:	b480      	push	{r7}
 800ad2e:	b083      	sub	sp, #12
 800ad30:	af00      	add	r7, sp, #0
 800ad32:	6078      	str	r0, [r7, #4]
 800ad34:	2301      	movs	r3, #1
 800ad36:	4618      	mov	r0, r3
 800ad38:	370c      	adds	r7, #12
 800ad3a:	46bd      	mov	sp, r7
 800ad3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad40:	4770      	bx	lr

0800ad42 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ad42:	b590      	push	{r4, r7, lr}
 800ad44:	b083      	sub	sp, #12
 800ad46:	af00      	add	r7, sp, #0
 800ad48:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ad4a:	6878      	ldr	r0, [r7, #4]
 800ad4c:	f000 fd81 	bl	800b852 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800ad50:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800ad52:	4619      	mov	r1, r3
 800ad54:	4620      	mov	r0, r4
 800ad56:	f7fc fcbc 	bl	80076d2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ad5a:	4603      	mov	r3, r0
    }
 800ad5c:	4618      	mov	r0, r3
 800ad5e:	370c      	adds	r7, #12
 800ad60:	46bd      	mov	sp, r7
 800ad62:	bd90      	pop	{r4, r7, pc}

0800ad64 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESH_SI_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800ad64:	b5b0      	push	{r4, r5, r7, lr}
 800ad66:	b084      	sub	sp, #16
 800ad68:	af00      	add	r7, sp, #0
 800ad6a:	60f8      	str	r0, [r7, #12]
 800ad6c:	60b9      	str	r1, [r7, #8]
 800ad6e:	713a      	strb	r2, [r7, #4]
 800ad70:	68fb      	ldr	r3, [r7, #12]
 800ad72:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800ad74:	7e1b      	ldrb	r3, [r3, #24]
 800ad76:	461c      	mov	r4, r3
 800ad78:	1d3b      	adds	r3, r7, #4
 800ad7a:	4618      	mov	r0, r3
 800ad7c:	f000 f829 	bl	800add2 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 800ad80:	4603      	mov	r3, r0
 800ad82:	429c      	cmp	r4, r3
 800ad84:	bf0c      	ite	eq
 800ad86:	2301      	moveq	r3, #1
 800ad88:	2300      	movne	r3, #0
 800ad8a:	b2db      	uxtb	r3, r3
 800ad8c:	2b00      	cmp	r3, #0
 800ad8e:	d00d      	beq.n	800adac <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESH_SI_+0x48>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800ad90:	68b8      	ldr	r0, [r7, #8]
 800ad92:	f000 f9b3 	bl	800b0fc <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 800ad96:	4603      	mov	r3, r0
 800ad98:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800ad9a:	68fb      	ldr	r3, [r7, #12]
 800ad9c:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800ad9e:	4618      	mov	r0, r3
 800ada0:	f000 f822 	bl	800ade8 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>
 800ada4:	4603      	mov	r3, r0
 800ada6:	4622      	mov	r2, r4
 800ada8:	701a      	strb	r2, [r3, #0]
	    return {};
 800adaa:	e00d      	b.n	800adc8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESH_SI_+0x64>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800adac:	68fb      	ldr	r3, [r7, #12]
 800adae:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 800adb0:	4618      	mov	r0, r3
 800adb2:	f7fc fbf8 	bl	80075a6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>
 800adb6:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 800adb8:	68b8      	ldr	r0, [r7, #8]
 800adba:	f000 f99f 	bl	800b0fc <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 800adbe:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800adc0:	4619      	mov	r1, r3
 800adc2:	4620      	mov	r0, r4
 800adc4:	f000 fd82 	bl	800b8cc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj2EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>
	    return {};
 800adc8:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800adca:	4618      	mov	r0, r3
 800adcc:	3710      	adds	r7, #16
 800adce:	46bd      	mov	sp, r7
 800add0:	bdb0      	pop	{r4, r5, r7, pc}

0800add2 <_ZNKSt17integral_constantIjLj2EEcvjEv>:
 800add2:	b480      	push	{r7}
 800add4:	b083      	sub	sp, #12
 800add6:	af00      	add	r7, sp, #0
 800add8:	6078      	str	r0, [r7, #4]
 800adda:	2302      	movs	r3, #2
 800addc:	4618      	mov	r0, r3
 800adde:	370c      	adds	r7, #12
 800ade0:	46bd      	mov	sp, r7
 800ade2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ade6:	4770      	bx	lr

0800ade8 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ade8:	b590      	push	{r4, r7, lr}
 800adea:	b083      	sub	sp, #12
 800adec:	af00      	add	r7, sp, #0
 800adee:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800adf0:	6878      	ldr	r0, [r7, #4]
 800adf2:	f000 fd2e 	bl	800b852 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800adf6:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800adf8:	4619      	mov	r1, r3
 800adfa:	4620      	mov	r0, r4
 800adfc:	f7fc fd07 	bl	800780e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ae00:	4603      	mov	r3, r0
    }
 800ae02:	4618      	mov	r0, r3
 800ae04:	370c      	adds	r7, #12
 800ae06:	46bd      	mov	sp, r7
 800ae08:	bd90      	pop	{r4, r7, pc}

0800ae0a <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESH_SI_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800ae0a:	b5b0      	push	{r4, r5, r7, lr}
 800ae0c:	b084      	sub	sp, #16
 800ae0e:	af00      	add	r7, sp, #0
 800ae10:	60f8      	str	r0, [r7, #12]
 800ae12:	60b9      	str	r1, [r7, #8]
 800ae14:	713a      	strb	r2, [r7, #4]
 800ae16:	68fb      	ldr	r3, [r7, #12]
 800ae18:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800ae1a:	7e1b      	ldrb	r3, [r3, #24]
 800ae1c:	461c      	mov	r4, r3
 800ae1e:	1d3b      	adds	r3, r7, #4
 800ae20:	4618      	mov	r0, r3
 800ae22:	f000 f82a 	bl	800ae7a <_ZNKSt17integral_constantIjLj3EEcvjEv>
 800ae26:	4603      	mov	r3, r0
 800ae28:	429c      	cmp	r4, r3
 800ae2a:	bf0c      	ite	eq
 800ae2c:	2301      	moveq	r3, #1
 800ae2e:	2300      	movne	r3, #0
 800ae30:	b2db      	uxtb	r3, r3
 800ae32:	2b00      	cmp	r3, #0
 800ae34:	d00e      	beq.n	800ae54 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESH_SI_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800ae36:	68b8      	ldr	r0, [r7, #8]
 800ae38:	f000 f98d 	bl	800b156 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800ae3c:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800ae3e:	68fb      	ldr	r3, [r7, #12]
 800ae40:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800ae42:	4618      	mov	r0, r3
 800ae44:	f000 f824 	bl	800ae90 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>
 800ae48:	4603      	mov	r3, r0
 800ae4a:	4621      	mov	r1, r4
 800ae4c:	4618      	mov	r0, r3
 800ae4e:	f018 f8de 	bl	802300e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
	    return {};
 800ae52:	e00d      	b.n	800ae70 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESH_SI_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800ae54:	68fb      	ldr	r3, [r7, #12]
 800ae56:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 800ae58:	4618      	mov	r0, r3
 800ae5a:	f7fc fba4 	bl	80075a6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>
 800ae5e:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 800ae60:	68b8      	ldr	r0, [r7, #8]
 800ae62:	f000 f978 	bl	800b156 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800ae66:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800ae68:	4619      	mov	r1, r3
 800ae6a:	4620      	mov	r0, r4
 800ae6c:	f000 fd47 	bl	800b8fe <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>
	    return {};
 800ae70:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800ae72:	4618      	mov	r0, r3
 800ae74:	3710      	adds	r7, #16
 800ae76:	46bd      	mov	sp, r7
 800ae78:	bdb0      	pop	{r4, r5, r7, pc}

0800ae7a <_ZNKSt17integral_constantIjLj3EEcvjEv>:
 800ae7a:	b480      	push	{r7}
 800ae7c:	b083      	sub	sp, #12
 800ae7e:	af00      	add	r7, sp, #0
 800ae80:	6078      	str	r0, [r7, #4]
 800ae82:	2303      	movs	r3, #3
 800ae84:	4618      	mov	r0, r3
 800ae86:	370c      	adds	r7, #12
 800ae88:	46bd      	mov	sp, r7
 800ae8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae8e:	4770      	bx	lr

0800ae90 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ae90:	b590      	push	{r4, r7, lr}
 800ae92:	b083      	sub	sp, #12
 800ae94:	af00      	add	r7, sp, #0
 800ae96:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ae98:	6878      	ldr	r0, [r7, #4]
 800ae9a:	f000 fcda 	bl	800b852 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800ae9e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800aea0:	4619      	mov	r1, r3
 800aea2:	4620      	mov	r0, r4
 800aea4:	f7fc fd63 	bl	800796e <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800aea8:	4603      	mov	r3, r0
    }
 800aeaa:	4618      	mov	r0, r3
 800aeac:	370c      	adds	r7, #12
 800aeae:	46bd      	mov	sp, r7
 800aeb0:	bd90      	pop	{r4, r7, pc}

0800aeb2 <_ZN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE7_M_addrEv>:
      _M_addr() noexcept
 800aeb2:	b480      	push	{r7}
 800aeb4:	b083      	sub	sp, #12
 800aeb6:	af00      	add	r7, sp, #0
 800aeb8:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 800aeba:	687b      	ldr	r3, [r7, #4]
 800aebc:	4618      	mov	r0, r3
 800aebe:	370c      	adds	r7, #12
 800aec0:	46bd      	mov	sp, r7
 800aec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aec6:	4770      	bx	lr

0800aec8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRSA_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESH_SI_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800aec8:	b5b0      	push	{r4, r5, r7, lr}
 800aeca:	b084      	sub	sp, #16
 800aecc:	af00      	add	r7, sp, #0
 800aece:	60f8      	str	r0, [r7, #12]
 800aed0:	60b9      	str	r1, [r7, #8]
 800aed2:	713a      	strb	r2, [r7, #4]
 800aed4:	68fb      	ldr	r3, [r7, #12]
 800aed6:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800aed8:	7e1b      	ldrb	r3, [r3, #24]
 800aeda:	461c      	mov	r4, r3
 800aedc:	1d3b      	adds	r3, r7, #4
 800aede:	4618      	mov	r0, r3
 800aee0:	f000 f82a 	bl	800af38 <_ZNKSt17integral_constantIjLj4EEcvjEv>
 800aee4:	4603      	mov	r3, r0
 800aee6:	429c      	cmp	r4, r3
 800aee8:	bf0c      	ite	eq
 800aeea:	2301      	moveq	r3, #1
 800aeec:	2300      	movne	r3, #0
 800aeee:	b2db      	uxtb	r3, r3
 800aef0:	2b00      	cmp	r3, #0
 800aef2:	d00e      	beq.n	800af12 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRSA_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESH_SI_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800aef4:	68b8      	ldr	r0, [r7, #8]
 800aef6:	f000 f95b 	bl	800b1b0 <_ZSt4moveIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEONSt16remove_referenceIT_E4typeEOSB_>
 800aefa:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800aefc:	68fb      	ldr	r3, [r7, #12]
 800aefe:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800af00:	4618      	mov	r0, r3
 800af02:	f000 f824 	bl	800af4e <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>
 800af06:	4603      	mov	r3, r0
 800af08:	4621      	mov	r1, r4
 800af0a:	4618      	mov	r0, r3
 800af0c:	f000 fd10 	bl	800b930 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSEOS7_>
	    return {};
 800af10:	e00d      	b.n	800af2e <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRSA_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESH_SI_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800af12:	68fb      	ldr	r3, [r7, #12]
 800af14:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 800af16:	4618      	mov	r0, r3
 800af18:	f7fc fb45 	bl	80075a6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>
 800af1c:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 800af1e:	68b8      	ldr	r0, [r7, #8]
 800af20:	f000 f946 	bl	800b1b0 <_ZSt4moveIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEONSt16remove_referenceIT_E4typeEOSB_>
 800af24:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800af26:	4619      	mov	r1, r3
 800af28:	4620      	mov	r0, r4
 800af2a:	f000 fd16 	bl	800b95a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj4EJS8_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>
	    return {};
 800af2e:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800af30:	4618      	mov	r0, r3
 800af32:	3710      	adds	r7, #16
 800af34:	46bd      	mov	sp, r7
 800af36:	bdb0      	pop	{r4, r5, r7, pc}

0800af38 <_ZNKSt17integral_constantIjLj4EEcvjEv>:
 800af38:	b480      	push	{r7}
 800af3a:	b083      	sub	sp, #12
 800af3c:	af00      	add	r7, sp, #0
 800af3e:	6078      	str	r0, [r7, #4]
 800af40:	2304      	movs	r3, #4
 800af42:	4618      	mov	r0, r3
 800af44:	370c      	adds	r7, #12
 800af46:	46bd      	mov	sp, r7
 800af48:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af4c:	4770      	bx	lr

0800af4e <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800af4e:	b590      	push	{r4, r7, lr}
 800af50:	b083      	sub	sp, #12
 800af52:	af00      	add	r7, sp, #0
 800af54:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800af56:	6878      	ldr	r0, [r7, #4]
 800af58:	f000 fc7b 	bl	800b852 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800af5c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800af5e:	4619      	mov	r1, r3
 800af60:	4620      	mov	r0, r4
 800af62:	f7fc fdc6 	bl	8007af2 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800af66:	4603      	mov	r3, r0
    }
 800af68:	4618      	mov	r0, r3
 800af6a:	370c      	adds	r7, #12
 800af6c:	46bd      	mov	sp, r7
 800af6e:	bd90      	pop	{r4, r7, pc}

0800af70 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>:
      _M_addr() noexcept
 800af70:	b480      	push	{r7}
 800af72:	b083      	sub	sp, #12
 800af74:	af00      	add	r7, sp, #0
 800af76:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 800af78:	687b      	ldr	r3, [r7, #4]
 800af7a:	4618      	mov	r0, r3
 800af7c:	370c      	adds	r7, #12
 800af7e:	46bd      	mov	sp, r7
 800af80:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af84:	4770      	bx	lr

0800af86 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRSD_St17integral_constantIjLj5EEEENS0_20__variant_idx_cookieESH_SI_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800af86:	b5b0      	push	{r4, r5, r7, lr}
 800af88:	b084      	sub	sp, #16
 800af8a:	af00      	add	r7, sp, #0
 800af8c:	60f8      	str	r0, [r7, #12]
 800af8e:	60b9      	str	r1, [r7, #8]
 800af90:	713a      	strb	r2, [r7, #4]
 800af92:	68fb      	ldr	r3, [r7, #12]
 800af94:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800af96:	7e1b      	ldrb	r3, [r3, #24]
 800af98:	461c      	mov	r4, r3
 800af9a:	1d3b      	adds	r3, r7, #4
 800af9c:	4618      	mov	r0, r3
 800af9e:	f000 f82a 	bl	800aff6 <_ZNKSt17integral_constantIjLj5EEcvjEv>
 800afa2:	4603      	mov	r3, r0
 800afa4:	429c      	cmp	r4, r3
 800afa6:	bf0c      	ite	eq
 800afa8:	2301      	moveq	r3, #1
 800afaa:	2300      	movne	r3, #0
 800afac:	b2db      	uxtb	r3, r3
 800afae:	2b00      	cmp	r3, #0
 800afb0:	d00e      	beq.n	800afd0 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRSD_St17integral_constantIjLj5EEEENS0_20__variant_idx_cookieESH_SI_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800afb2:	68b8      	ldr	r0, [r7, #8]
 800afb4:	f000 f929 	bl	800b20a <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 800afb8:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800afba:	68fb      	ldr	r3, [r7, #12]
 800afbc:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800afbe:	4618      	mov	r0, r3
 800afc0:	f000 f824 	bl	800b00c <_ZNSt8__detail9__variant5__getILj5ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>
 800afc4:	4603      	mov	r3, r0
 800afc6:	4621      	mov	r1, r4
 800afc8:	4618      	mov	r0, r3
 800afca:	f000 fcdf 	bl	800b98c <_ZNSt6vectorI6SymbolSaIS0_EEaSEOS2_>
	    return {};
 800afce:	e00d      	b.n	800afec <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSEOSE_ENUlOT_T0_E_clIRSD_St17integral_constantIjLj5EEEENS0_20__variant_idx_cookieESH_SI_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800afd0:	68fb      	ldr	r3, [r7, #12]
 800afd2:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 800afd4:	4618      	mov	r0, r3
 800afd6:	f7fc fae6 	bl	80075a6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>
 800afda:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 800afdc:	68b8      	ldr	r0, [r7, #8]
 800afde:	f000 f914 	bl	800b20a <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 800afe2:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800afe4:	4619      	mov	r1, r3
 800afe6:	4620      	mov	r0, r4
 800afe8:	f000 fce5 	bl	800b9b6 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj5EJSB_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>
	    return {};
 800afec:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800afee:	4618      	mov	r0, r3
 800aff0:	3710      	adds	r7, #16
 800aff2:	46bd      	mov	sp, r7
 800aff4:	bdb0      	pop	{r4, r5, r7, pc}

0800aff6 <_ZNKSt17integral_constantIjLj5EEcvjEv>:
 800aff6:	b480      	push	{r7}
 800aff8:	b083      	sub	sp, #12
 800affa:	af00      	add	r7, sp, #0
 800affc:	6078      	str	r0, [r7, #4]
 800affe:	2305      	movs	r3, #5
 800b000:	4618      	mov	r0, r3
 800b002:	370c      	adds	r7, #12
 800b004:	46bd      	mov	sp, r7
 800b006:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b00a:	4770      	bx	lr

0800b00c <_ZNSt8__detail9__variant5__getILj5ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800b00c:	b590      	push	{r4, r7, lr}
 800b00e:	b083      	sub	sp, #12
 800b010:	af00      	add	r7, sp, #0
 800b012:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800b014:	6878      	ldr	r0, [r7, #4]
 800b016:	f000 fc1c 	bl	800b852 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800b01a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800b01c:	4619      	mov	r1, r3
 800b01e:	4620      	mov	r0, r4
 800b020:	f7fc fe3b 	bl	8007c9a <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800b024:	4603      	mov	r3, r0
    }
 800b026:	4618      	mov	r0, r3
 800b028:	370c      	adds	r7, #12
 800b02a:	46bd      	mov	sp, r7
 800b02c:	bd90      	pop	{r4, r7, pc}

0800b02e <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 800b02e:	b580      	push	{r7, lr}
 800b030:	b082      	sub	sp, #8
 800b032:	af00      	add	r7, sp, #0
 800b034:	6078      	str	r0, [r7, #4]
 800b036:	687b      	ldr	r3, [r7, #4]
 800b038:	4618      	mov	r0, r3
 800b03a:	f000 fcd5 	bl	800b9e8 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1Ev>
 800b03e:	687b      	ldr	r3, [r7, #4]
 800b040:	4618      	mov	r0, r3
 800b042:	3708      	adds	r7, #8
 800b044:	46bd      	mov	sp, r7
 800b046:	bd80      	pop	{r7, pc}

0800b048 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 800b048:	b480      	push	{r7}
 800b04a:	b083      	sub	sp, #12
 800b04c:	af00      	add	r7, sp, #0
 800b04e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800b050:	687b      	ldr	r3, [r7, #4]
 800b052:	4618      	mov	r0, r3
 800b054:	370c      	adds	r7, #12
 800b056:	46bd      	mov	sp, r7
 800b058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b05c:	4770      	bx	lr

0800b05e <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b05e:	b480      	push	{r7}
 800b060:	b083      	sub	sp, #12
 800b062:	af00      	add	r7, sp, #0
 800b064:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b066:	687b      	ldr	r3, [r7, #4]
 800b068:	4618      	mov	r0, r3
 800b06a:	370c      	adds	r7, #12
 800b06c:	46bd      	mov	sp, r7
 800b06e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b072:	4770      	bx	lr

0800b074 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_JiEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b074:	b5b0      	push	{r4, r5, r7, lr}
 800b076:	b084      	sub	sp, #16
 800b078:	af00      	add	r7, sp, #0
 800b07a:	7338      	strb	r0, [r7, #12]
 800b07c:	60b9      	str	r1, [r7, #8]
 800b07e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b080:	68b8      	ldr	r0, [r7, #8]
 800b082:	f7ff fb45 	bl	800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800b086:	4604      	mov	r4, r0
 800b088:	6878      	ldr	r0, [r7, #4]
 800b08a:	f7ff ffe8 	bl	800b05e <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800b08e:	4603      	mov	r3, r0
 800b090:	4619      	mov	r1, r3
 800b092:	4620      	mov	r0, r4
 800b094:	f000 fcb5 	bl	800ba02 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_ENUlOT_E_clIiEENS0_16__variant_cookieESM_>
 800b098:	462b      	mov	r3, r5
 800b09a:	4618      	mov	r0, r3
 800b09c:	3710      	adds	r7, #16
 800b09e:	46bd      	mov	sp, r7
 800b0a0:	bdb0      	pop	{r4, r5, r7, pc}

0800b0a2 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 800b0a2:	b480      	push	{r7}
 800b0a4:	b083      	sub	sp, #12
 800b0a6:	af00      	add	r7, sp, #0
 800b0a8:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800b0aa:	687b      	ldr	r3, [r7, #4]
 800b0ac:	4618      	mov	r0, r3
 800b0ae:	370c      	adds	r7, #12
 800b0b0:	46bd      	mov	sp, r7
 800b0b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0b6:	4770      	bx	lr

0800b0b8 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b0b8:	b480      	push	{r7}
 800b0ba:	b083      	sub	sp, #12
 800b0bc:	af00      	add	r7, sp, #0
 800b0be:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b0c0:	687b      	ldr	r3, [r7, #4]
 800b0c2:	4618      	mov	r0, r3
 800b0c4:	370c      	adds	r7, #12
 800b0c6:	46bd      	mov	sp, r7
 800b0c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0cc:	4770      	bx	lr

0800b0ce <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_JfEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b0ce:	b5b0      	push	{r4, r5, r7, lr}
 800b0d0:	b084      	sub	sp, #16
 800b0d2:	af00      	add	r7, sp, #0
 800b0d4:	7338      	strb	r0, [r7, #12]
 800b0d6:	60b9      	str	r1, [r7, #8]
 800b0d8:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b0da:	68b8      	ldr	r0, [r7, #8]
 800b0dc:	f7ff fb18 	bl	800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800b0e0:	4604      	mov	r4, r0
 800b0e2:	6878      	ldr	r0, [r7, #4]
 800b0e4:	f7ff ffe8 	bl	800b0b8 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800b0e8:	4603      	mov	r3, r0
 800b0ea:	4619      	mov	r1, r3
 800b0ec:	4620      	mov	r0, r4
 800b0ee:	f000 fca0 	bl	800ba32 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_ENUlOT_E_clIfEENS0_16__variant_cookieESM_>
 800b0f2:	462b      	mov	r3, r5
 800b0f4:	4618      	mov	r0, r3
 800b0f6:	3710      	adds	r7, #16
 800b0f8:	46bd      	mov	sp, r7
 800b0fa:	bdb0      	pop	{r4, r5, r7, pc}

0800b0fc <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 800b0fc:	b480      	push	{r7}
 800b0fe:	b083      	sub	sp, #12
 800b100:	af00      	add	r7, sp, #0
 800b102:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800b104:	687b      	ldr	r3, [r7, #4]
 800b106:	4618      	mov	r0, r3
 800b108:	370c      	adds	r7, #12
 800b10a:	46bd      	mov	sp, r7
 800b10c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b110:	4770      	bx	lr

0800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b112:	b480      	push	{r7}
 800b114:	b083      	sub	sp, #12
 800b116:	af00      	add	r7, sp, #0
 800b118:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b11a:	687b      	ldr	r3, [r7, #4]
 800b11c:	4618      	mov	r0, r3
 800b11e:	370c      	adds	r7, #12
 800b120:	46bd      	mov	sp, r7
 800b122:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b126:	4770      	bx	lr

0800b128 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_JbEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b128:	b5b0      	push	{r4, r5, r7, lr}
 800b12a:	b084      	sub	sp, #16
 800b12c:	af00      	add	r7, sp, #0
 800b12e:	7338      	strb	r0, [r7, #12]
 800b130:	60b9      	str	r1, [r7, #8]
 800b132:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b134:	68b8      	ldr	r0, [r7, #8]
 800b136:	f7ff faeb 	bl	800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800b13a:	4604      	mov	r4, r0
 800b13c:	6878      	ldr	r0, [r7, #4]
 800b13e:	f7ff ffe8 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800b142:	4603      	mov	r3, r0
 800b144:	4619      	mov	r1, r3
 800b146:	4620      	mov	r0, r4
 800b148:	f000 fc8b 	bl	800ba62 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_ENUlOT_E_clIbEENS0_16__variant_cookieESM_>
 800b14c:	462b      	mov	r3, r5
 800b14e:	4618      	mov	r0, r3
 800b150:	3710      	adds	r7, #16
 800b152:	46bd      	mov	sp, r7
 800b154:	bdb0      	pop	{r4, r5, r7, pc}

0800b156 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
 800b156:	b480      	push	{r7}
 800b158:	b083      	sub	sp, #12
 800b15a:	af00      	add	r7, sp, #0
 800b15c:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800b15e:	687b      	ldr	r3, [r7, #4]
 800b160:	4618      	mov	r0, r3
 800b162:	370c      	adds	r7, #12
 800b164:	46bd      	mov	sp, r7
 800b166:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b16a:	4770      	bx	lr

0800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b16c:	b480      	push	{r7}
 800b16e:	b083      	sub	sp, #12
 800b170:	af00      	add	r7, sp, #0
 800b172:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b174:	687b      	ldr	r3, [r7, #4]
 800b176:	4618      	mov	r0, r3
 800b178:	370c      	adds	r7, #12
 800b17a:	46bd      	mov	sp, r7
 800b17c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b180:	4770      	bx	lr

0800b182 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_JS9_EESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b182:	b5b0      	push	{r4, r5, r7, lr}
 800b184:	b084      	sub	sp, #16
 800b186:	af00      	add	r7, sp, #0
 800b188:	7338      	strb	r0, [r7, #12]
 800b18a:	60b9      	str	r1, [r7, #8]
 800b18c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b18e:	68b8      	ldr	r0, [r7, #8]
 800b190:	f7ff fabe 	bl	800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800b194:	4604      	mov	r4, r0
 800b196:	6878      	ldr	r0, [r7, #4]
 800b198:	f7ff ffe8 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800b19c:	4603      	mov	r3, r0
 800b19e:	4619      	mov	r1, r3
 800b1a0:	4620      	mov	r0, r4
 800b1a2:	f000 fc76 	bl	800ba92 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_ENUlOT_E_clIS7_EENS0_16__variant_cookieESM_>
 800b1a6:	462b      	mov	r3, r5
 800b1a8:	4618      	mov	r0, r3
 800b1aa:	3710      	adds	r7, #16
 800b1ac:	46bd      	mov	sp, r7
 800b1ae:	bdb0      	pop	{r4, r5, r7, pc}

0800b1b0 <_ZSt4moveIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEONSt16remove_referenceIT_E4typeEOSB_>:
    move(_Tp&& __t) noexcept
 800b1b0:	b480      	push	{r7}
 800b1b2:	b083      	sub	sp, #12
 800b1b4:	af00      	add	r7, sp, #0
 800b1b6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800b1b8:	687b      	ldr	r3, [r7, #4]
 800b1ba:	4618      	mov	r0, r3
 800b1bc:	370c      	adds	r7, #12
 800b1be:	46bd      	mov	sp, r7
 800b1c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1c4:	4770      	bx	lr

0800b1c6 <_ZSt7forwardISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b1c6:	b480      	push	{r7}
 800b1c8:	b083      	sub	sp, #12
 800b1ca:	af00      	add	r7, sp, #0
 800b1cc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b1ce:	687b      	ldr	r3, [r7, #4]
 800b1d0:	4618      	mov	r0, r3
 800b1d2:	370c      	adds	r7, #12
 800b1d4:	46bd      	mov	sp, r7
 800b1d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1da:	4770      	bx	lr

0800b1dc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_JSC_EESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b1dc:	b5b0      	push	{r4, r5, r7, lr}
 800b1de:	b084      	sub	sp, #16
 800b1e0:	af00      	add	r7, sp, #0
 800b1e2:	7338      	strb	r0, [r7, #12]
 800b1e4:	60b9      	str	r1, [r7, #8]
 800b1e6:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b1e8:	68b8      	ldr	r0, [r7, #8]
 800b1ea:	f7ff fa91 	bl	800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800b1ee:	4604      	mov	r4, r0
 800b1f0:	6878      	ldr	r0, [r7, #4]
 800b1f2:	f7ff ffe8 	bl	800b1c6 <_ZSt7forwardISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceIS9_E4typeE>
 800b1f6:	4603      	mov	r3, r0
 800b1f8:	4619      	mov	r1, r3
 800b1fa:	4620      	mov	r0, r4
 800b1fc:	f000 fc61 	bl	800bac2 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_ENUlOT_E_clISA_EENS0_16__variant_cookieESM_>
 800b200:	462b      	mov	r3, r5
 800b202:	4618      	mov	r0, r3
 800b204:	3710      	adds	r7, #16
 800b206:	46bd      	mov	sp, r7
 800b208:	bdb0      	pop	{r4, r5, r7, pc}

0800b20a <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
 800b20a:	b480      	push	{r7}
 800b20c:	b083      	sub	sp, #12
 800b20e:	af00      	add	r7, sp, #0
 800b210:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800b212:	687b      	ldr	r3, [r7, #4]
 800b214:	4618      	mov	r0, r3
 800b216:	370c      	adds	r7, #12
 800b218:	46bd      	mov	sp, r7
 800b21a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b21e:	4770      	bx	lr

0800b220 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b220:	b480      	push	{r7}
 800b222:	b083      	sub	sp, #12
 800b224:	af00      	add	r7, sp, #0
 800b226:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b228:	687b      	ldr	r3, [r7, #4]
 800b22a:	4618      	mov	r0, r3
 800b22c:	370c      	adds	r7, #12
 800b22e:	46bd      	mov	sp, r7
 800b230:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b234:	4770      	bx	lr

0800b236 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SF_EEESH_EEvOT0_OT1_EUlOT_E_JSF_EESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b236:	b5b0      	push	{r4, r5, r7, lr}
 800b238:	b084      	sub	sp, #16
 800b23a:	af00      	add	r7, sp, #0
 800b23c:	7338      	strb	r0, [r7, #12]
 800b23e:	60b9      	str	r1, [r7, #8]
 800b240:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b242:	68b8      	ldr	r0, [r7, #8]
 800b244:	f7ff fa64 	bl	800a710 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SE_EEESG_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800b248:	4604      	mov	r4, r0
 800b24a:	6878      	ldr	r0, [r7, #4]
 800b24c:	f7ff ffe8 	bl	800b220 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800b250:	4603      	mov	r3, r0
 800b252:	4619      	mov	r1, r3
 800b254:	4620      	mov	r0, r4
 800b256:	f000 fc4c 	bl	800baf2 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_ENUlOT_E_clISD_EENS0_16__variant_cookieESM_>
 800b25a:	462b      	mov	r3, r5
 800b25c:	4618      	mov	r0, r3
 800b25e:	3710      	adds	r7, #16
 800b260:	46bd      	mov	sp, r7
 800b262:	bdb0      	pop	{r4, r5, r7, pc}

0800b264 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_JRKiEESP_St14__invoke_otherSM_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b264:	b5b0      	push	{r4, r5, r7, lr}
 800b266:	b084      	sub	sp, #16
 800b268:	af00      	add	r7, sp, #0
 800b26a:	7338      	strb	r0, [r7, #12]
 800b26c:	60b9      	str	r1, [r7, #8]
 800b26e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b270:	68b8      	ldr	r0, [r7, #8]
 800b272:	f7ff fb03 	bl	800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800b276:	4604      	mov	r4, r0
 800b278:	6878      	ldr	r0, [r7, #4]
 800b27a:	f7ff fb0a 	bl	800a892 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800b27e:	4603      	mov	r3, r0
 800b280:	4619      	mov	r1, r3
 800b282:	4620      	mov	r0, r4
 800b284:	f000 fc4d 	bl	800bb22 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESO_>
 800b288:	462b      	mov	r3, r5
 800b28a:	4618      	mov	r0, r3
 800b28c:	3710      	adds	r7, #16
 800b28e:	46bd      	mov	sp, r7
 800b290:	bdb0      	pop	{r4, r5, r7, pc}

0800b292 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_JRKfEESP_St14__invoke_otherSM_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b292:	b5b0      	push	{r4, r5, r7, lr}
 800b294:	b084      	sub	sp, #16
 800b296:	af00      	add	r7, sp, #0
 800b298:	7338      	strb	r0, [r7, #12]
 800b29a:	60b9      	str	r1, [r7, #8]
 800b29c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b29e:	68b8      	ldr	r0, [r7, #8]
 800b2a0:	f7ff faec 	bl	800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800b2a4:	4604      	mov	r4, r0
 800b2a6:	6878      	ldr	r0, [r7, #4]
 800b2a8:	f7ff fb1c 	bl	800a8e4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800b2ac:	4603      	mov	r3, r0
 800b2ae:	4619      	mov	r1, r3
 800b2b0:	4620      	mov	r0, r4
 800b2b2:	f000 fc4e 	bl	800bb52 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESO_>
 800b2b6:	462b      	mov	r3, r5
 800b2b8:	4618      	mov	r0, r3
 800b2ba:	3710      	adds	r7, #16
 800b2bc:	46bd      	mov	sp, r7
 800b2be:	bdb0      	pop	{r4, r5, r7, pc}

0800b2c0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_JRKbEESP_St14__invoke_otherSM_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b2c0:	b5b0      	push	{r4, r5, r7, lr}
 800b2c2:	b084      	sub	sp, #16
 800b2c4:	af00      	add	r7, sp, #0
 800b2c6:	7338      	strb	r0, [r7, #12]
 800b2c8:	60b9      	str	r1, [r7, #8]
 800b2ca:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b2cc:	68b8      	ldr	r0, [r7, #8]
 800b2ce:	f7ff fad5 	bl	800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800b2d2:	4604      	mov	r4, r0
 800b2d4:	6878      	ldr	r0, [r7, #4]
 800b2d6:	f7ff fb2e 	bl	800a936 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800b2da:	4603      	mov	r3, r0
 800b2dc:	4619      	mov	r1, r3
 800b2de:	4620      	mov	r0, r4
 800b2e0:	f000 fc4f 	bl	800bb82 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESO_>
 800b2e4:	462b      	mov	r3, r5
 800b2e6:	4618      	mov	r0, r3
 800b2e8:	3710      	adds	r7, #16
 800b2ea:	46bd      	mov	sp, r7
 800b2ec:	bdb0      	pop	{r4, r5, r7, pc}

0800b2ee <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_JRKS9_EESP_St14__invoke_otherSM_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b2ee:	b5b0      	push	{r4, r5, r7, lr}
 800b2f0:	b084      	sub	sp, #16
 800b2f2:	af00      	add	r7, sp, #0
 800b2f4:	7338      	strb	r0, [r7, #12]
 800b2f6:	60b9      	str	r1, [r7, #8]
 800b2f8:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b2fa:	68b8      	ldr	r0, [r7, #8]
 800b2fc:	f7ff fabe 	bl	800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800b300:	4604      	mov	r4, r0
 800b302:	6878      	ldr	r0, [r7, #4]
 800b304:	f7ff fb4c 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800b308:	4603      	mov	r3, r0
 800b30a:	4619      	mov	r1, r3
 800b30c:	4620      	mov	r0, r4
 800b30e:	f000 fc50 	bl	800bbb2 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESO_>
 800b312:	462b      	mov	r3, r5
 800b314:	4618      	mov	r0, r3
 800b316:	3710      	adds	r7, #16
 800b318:	46bd      	mov	sp, r7
 800b31a:	bdb0      	pop	{r4, r5, r7, pc}

0800b31c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_JRKSC_EESP_St14__invoke_otherSM_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b31c:	b5b0      	push	{r4, r5, r7, lr}
 800b31e:	b084      	sub	sp, #16
 800b320:	af00      	add	r7, sp, #0
 800b322:	7338      	strb	r0, [r7, #12]
 800b324:	60b9      	str	r1, [r7, #8]
 800b326:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b328:	68b8      	ldr	r0, [r7, #8]
 800b32a:	f7ff faa7 	bl	800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800b32e:	4604      	mov	r4, r0
 800b330:	6878      	ldr	r0, [r7, #4]
 800b332:	f7ff fb6a 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800b336:	4603      	mov	r3, r0
 800b338:	4619      	mov	r1, r3
 800b33a:	4620      	mov	r0, r4
 800b33c:	f000 fc51 	bl	800bbe2 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_ENUlOT_E_clIRKSA_EENS0_16__variant_cookieESO_>
 800b340:	462b      	mov	r3, r5
 800b342:	4618      	mov	r0, r3
 800b344:	3710      	adds	r7, #16
 800b346:	46bd      	mov	sp, r7
 800b348:	bdb0      	pop	{r4, r5, r7, pc}

0800b34a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SF_EEERKSH_EEvOT0_OT1_EUlOT_E_JRKSF_EESP_St14__invoke_otherSM_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b34a:	b5b0      	push	{r4, r5, r7, lr}
 800b34c:	b084      	sub	sp, #16
 800b34e:	af00      	add	r7, sp, #0
 800b350:	7338      	strb	r0, [r7, #12]
 800b352:	60b9      	str	r1, [r7, #8]
 800b354:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b356:	68b8      	ldr	r0, [r7, #8]
 800b358:	f7ff fa90 	bl	800a87c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_ESP_RNSt16remove_referenceISO_E4typeE>
 800b35c:	4604      	mov	r4, r0
 800b35e:	6878      	ldr	r0, [r7, #4]
 800b360:	f7ff fb88 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800b364:	4603      	mov	r3, r0
 800b366:	4619      	mov	r1, r3
 800b368:	4620      	mov	r0, r4
 800b36a:	f000 fc52 	bl	800bc12 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_ENUlOT_E_clIRKSD_EENS0_16__variant_cookieESO_>
 800b36e:	462b      	mov	r3, r5
 800b370:	4618      	mov	r0, r3
 800b372:	3710      	adds	r7, #16
 800b374:	46bd      	mov	sp, r7
 800b376:	bdb0      	pop	{r4, r5, r7, pc}

0800b378 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESI_SJ_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b378:	b5b0      	push	{r4, r5, r7, lr}
 800b37a:	b084      	sub	sp, #16
 800b37c:	af00      	add	r7, sp, #0
 800b37e:	60f8      	str	r0, [r7, #12]
 800b380:	60b9      	str	r1, [r7, #8]
 800b382:	713a      	strb	r2, [r7, #4]
 800b384:	68fb      	ldr	r3, [r7, #12]
 800b386:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800b388:	7e1b      	ldrb	r3, [r3, #24]
 800b38a:	461c      	mov	r4, r3
 800b38c:	1d3b      	adds	r3, r7, #4
 800b38e:	4618      	mov	r0, r3
 800b390:	f7ff fc7a 	bl	800ac88 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 800b394:	4603      	mov	r3, r0
 800b396:	429c      	cmp	r4, r3
 800b398:	bf0c      	ite	eq
 800b39a:	2301      	moveq	r3, #1
 800b39c:	2300      	movne	r3, #0
 800b39e:	b2db      	uxtb	r3, r3
 800b3a0:	2b00      	cmp	r3, #0
 800b3a2:	d009      	beq.n	800b3b8 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESI_SJ_+0x40>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800b3a4:	68bb      	ldr	r3, [r7, #8]
 800b3a6:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b3a8:	68fb      	ldr	r3, [r7, #12]
 800b3aa:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800b3ac:	4618      	mov	r0, r3
 800b3ae:	f000 f816 	bl	800b3de <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>
 800b3b2:	4603      	mov	r3, r0
 800b3b4:	601c      	str	r4, [r3, #0]
	    return {};
 800b3b6:	e00d      	b.n	800b3d4 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESI_SJ_+0x5c>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b3b8:	68fb      	ldr	r3, [r7, #12]
 800b3ba:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 800b3bc:	461c      	mov	r4, r3
 800b3be:	1d3b      	adds	r3, r7, #4
 800b3c0:	4618      	mov	r0, r3
 800b3c2:	f7ff fc61 	bl	800ac88 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 800b3c6:	4603      	mov	r3, r0
 800b3c8:	b29b      	uxth	r3, r3
 800b3ca:	68ba      	ldr	r2, [r7, #8]
 800b3cc:	4619      	mov	r1, r3
 800b3ce:	4620      	mov	r0, r4
 800b3d0:	f000 fc42 	bl	800bc58 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE19_M_destructive_copyIiEEvtRKT_>
	    return {};
 800b3d4:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b3d6:	4618      	mov	r0, r3
 800b3d8:	3710      	adds	r7, #16
 800b3da:	46bd      	mov	sp, r7
 800b3dc:	bdb0      	pop	{r4, r5, r7, pc}

0800b3de <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800b3de:	b590      	push	{r4, r7, lr}
 800b3e0:	b083      	sub	sp, #12
 800b3e2:	af00      	add	r7, sp, #0
 800b3e4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800b3e6:	6878      	ldr	r0, [r7, #4]
 800b3e8:	f000 fc2b 	bl	800bc42 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800b3ec:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800b3ee:	4619      	mov	r1, r3
 800b3f0:	4620      	mov	r0, r4
 800b3f2:	f7fc f8e3 	bl	80075bc <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800b3f6:	4603      	mov	r3, r0
    }
 800b3f8:	4618      	mov	r0, r3
 800b3fa:	370c      	adds	r7, #12
 800b3fc:	46bd      	mov	sp, r7
 800b3fe:	bd90      	pop	{r4, r7, pc}

0800b400 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESI_SJ_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b400:	b5b0      	push	{r4, r5, r7, lr}
 800b402:	b084      	sub	sp, #16
 800b404:	af00      	add	r7, sp, #0
 800b406:	60f8      	str	r0, [r7, #12]
 800b408:	60b9      	str	r1, [r7, #8]
 800b40a:	713a      	strb	r2, [r7, #4]
 800b40c:	68fb      	ldr	r3, [r7, #12]
 800b40e:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800b410:	7e1b      	ldrb	r3, [r3, #24]
 800b412:	461c      	mov	r4, r3
 800b414:	1d3b      	adds	r3, r7, #4
 800b416:	4618      	mov	r0, r3
 800b418:	f7ff fc88 	bl	800ad2c <_ZNKSt17integral_constantIjLj1EEcvjEv>
 800b41c:	4603      	mov	r3, r0
 800b41e:	429c      	cmp	r4, r3
 800b420:	bf0c      	ite	eq
 800b422:	2301      	moveq	r3, #1
 800b424:	2300      	movne	r3, #0
 800b426:	b2db      	uxtb	r3, r3
 800b428:	2b00      	cmp	r3, #0
 800b42a:	d009      	beq.n	800b440 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESI_SJ_+0x40>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800b42c:	68bb      	ldr	r3, [r7, #8]
 800b42e:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b430:	68fb      	ldr	r3, [r7, #12]
 800b432:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800b434:	4618      	mov	r0, r3
 800b436:	f000 f816 	bl	800b466 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>
 800b43a:	4603      	mov	r3, r0
 800b43c:	601c      	str	r4, [r3, #0]
	    return {};
 800b43e:	e00d      	b.n	800b45c <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESI_SJ_+0x5c>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b440:	68fb      	ldr	r3, [r7, #12]
 800b442:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 800b444:	461c      	mov	r4, r3
 800b446:	1d3b      	adds	r3, r7, #4
 800b448:	4618      	mov	r0, r3
 800b44a:	f7ff fc6f 	bl	800ad2c <_ZNKSt17integral_constantIjLj1EEcvjEv>
 800b44e:	4603      	mov	r3, r0
 800b450:	b29b      	uxth	r3, r3
 800b452:	68ba      	ldr	r2, [r7, #8]
 800b454:	4619      	mov	r1, r3
 800b456:	4620      	mov	r0, r4
 800b458:	f000 fc15 	bl	800bc86 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE19_M_destructive_copyIfEEvtRKT_>
	    return {};
 800b45c:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b45e:	4618      	mov	r0, r3
 800b460:	3710      	adds	r7, #16
 800b462:	46bd      	mov	sp, r7
 800b464:	bdb0      	pop	{r4, r5, r7, pc}

0800b466 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800b466:	b590      	push	{r4, r7, lr}
 800b468:	b083      	sub	sp, #12
 800b46a:	af00      	add	r7, sp, #0
 800b46c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800b46e:	6878      	ldr	r0, [r7, #4]
 800b470:	f000 fbe7 	bl	800bc42 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800b474:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800b476:	4619      	mov	r1, r3
 800b478:	4620      	mov	r0, r4
 800b47a:	f7fc f92a 	bl	80076d2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800b47e:	4603      	mov	r3, r0
    }
 800b480:	4618      	mov	r0, r3
 800b482:	370c      	adds	r7, #12
 800b484:	46bd      	mov	sp, r7
 800b486:	bd90      	pop	{r4, r7, pc}

0800b488 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESI_SJ_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b488:	b5b0      	push	{r4, r5, r7, lr}
 800b48a:	b084      	sub	sp, #16
 800b48c:	af00      	add	r7, sp, #0
 800b48e:	60f8      	str	r0, [r7, #12]
 800b490:	60b9      	str	r1, [r7, #8]
 800b492:	713a      	strb	r2, [r7, #4]
 800b494:	68fb      	ldr	r3, [r7, #12]
 800b496:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800b498:	7e1b      	ldrb	r3, [r3, #24]
 800b49a:	461c      	mov	r4, r3
 800b49c:	1d3b      	adds	r3, r7, #4
 800b49e:	4618      	mov	r0, r3
 800b4a0:	f7ff fc97 	bl	800add2 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 800b4a4:	4603      	mov	r3, r0
 800b4a6:	429c      	cmp	r4, r3
 800b4a8:	bf0c      	ite	eq
 800b4aa:	2301      	moveq	r3, #1
 800b4ac:	2300      	movne	r3, #0
 800b4ae:	b2db      	uxtb	r3, r3
 800b4b0:	2b00      	cmp	r3, #0
 800b4b2:	d00a      	beq.n	800b4ca <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESI_SJ_+0x42>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800b4b4:	68bb      	ldr	r3, [r7, #8]
 800b4b6:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b4b8:	68fb      	ldr	r3, [r7, #12]
 800b4ba:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800b4bc:	4618      	mov	r0, r3
 800b4be:	f000 f817 	bl	800b4f0 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>
 800b4c2:	4603      	mov	r3, r0
 800b4c4:	4622      	mov	r2, r4
 800b4c6:	701a      	strb	r2, [r3, #0]
	    return {};
 800b4c8:	e00d      	b.n	800b4e6 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESI_SJ_+0x5e>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b4ca:	68fb      	ldr	r3, [r7, #12]
 800b4cc:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 800b4ce:	461c      	mov	r4, r3
 800b4d0:	1d3b      	adds	r3, r7, #4
 800b4d2:	4618      	mov	r0, r3
 800b4d4:	f7ff fc7d 	bl	800add2 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 800b4d8:	4603      	mov	r3, r0
 800b4da:	b29b      	uxth	r3, r3
 800b4dc:	68ba      	ldr	r2, [r7, #8]
 800b4de:	4619      	mov	r1, r3
 800b4e0:	4620      	mov	r0, r4
 800b4e2:	f000 fbe7 	bl	800bcb4 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE19_M_destructive_copyIbEEvtRKT_>
	    return {};
 800b4e6:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b4e8:	4618      	mov	r0, r3
 800b4ea:	3710      	adds	r7, #16
 800b4ec:	46bd      	mov	sp, r7
 800b4ee:	bdb0      	pop	{r4, r5, r7, pc}

0800b4f0 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800b4f0:	b590      	push	{r4, r7, lr}
 800b4f2:	b083      	sub	sp, #12
 800b4f4:	af00      	add	r7, sp, #0
 800b4f6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800b4f8:	6878      	ldr	r0, [r7, #4]
 800b4fa:	f000 fba2 	bl	800bc42 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800b4fe:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800b500:	4619      	mov	r1, r3
 800b502:	4620      	mov	r0, r4
 800b504:	f7fc f983 	bl	800780e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800b508:	4603      	mov	r3, r0
    }
 800b50a:	4618      	mov	r0, r3
 800b50c:	370c      	adds	r7, #12
 800b50e:	46bd      	mov	sp, r7
 800b510:	bd90      	pop	{r4, r7, pc}

0800b512 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() const noexcept
 800b512:	b480      	push	{r7}
 800b514:	b083      	sub	sp, #12
 800b516:	af00      	add	r7, sp, #0
 800b518:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 800b51a:	687b      	ldr	r3, [r7, #4]
 800b51c:	4618      	mov	r0, r3
 800b51e:	370c      	adds	r7, #12
 800b520:	46bd      	mov	sp, r7
 800b522:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b526:	4770      	bx	lr

0800b528 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESI_SJ_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b528:	b5b0      	push	{r4, r5, r7, lr}
 800b52a:	b08c      	sub	sp, #48	; 0x30
 800b52c:	af00      	add	r7, sp, #0
 800b52e:	60f8      	str	r0, [r7, #12]
 800b530:	60b9      	str	r1, [r7, #8]
 800b532:	713a      	strb	r2, [r7, #4]
 800b534:	68fb      	ldr	r3, [r7, #12]
 800b536:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800b538:	7e1b      	ldrb	r3, [r3, #24]
 800b53a:	461c      	mov	r4, r3
 800b53c:	1d3b      	adds	r3, r7, #4
 800b53e:	4618      	mov	r0, r3
 800b540:	f7ff fc9b 	bl	800ae7a <_ZNKSt17integral_constantIjLj3EEcvjEv>
 800b544:	4603      	mov	r3, r0
 800b546:	429c      	cmp	r4, r3
 800b548:	bf0c      	ite	eq
 800b54a:	2301      	moveq	r3, #1
 800b54c:	2300      	movne	r3, #0
 800b54e:	b2db      	uxtb	r3, r3
 800b550:	2b00      	cmp	r3, #0
 800b552:	d00a      	beq.n	800b56a <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESI_SJ_+0x42>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b554:	68fb      	ldr	r3, [r7, #12]
 800b556:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800b558:	4618      	mov	r0, r3
 800b55a:	f000 f822 	bl	800b5a2 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>
 800b55e:	4603      	mov	r3, r0
 800b560:	68b9      	ldr	r1, [r7, #8]
 800b562:	4618      	mov	r0, r3
 800b564:	f017 fd4d 	bl	8023002 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	    return {};
 800b568:	e016      	b.n	800b598 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESI_SJ_+0x70>
			= variant<_Types...>(__rhs_mem);
 800b56a:	f107 0314 	add.w	r3, r7, #20
 800b56e:	68b9      	ldr	r1, [r7, #8]
 800b570:	4618      	mov	r0, r3
 800b572:	f000 fbcf 	bl	800bd14 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1IRKS5_vvS5_vEEOT_>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b576:	68fb      	ldr	r3, [r7, #12]
 800b578:	681b      	ldr	r3, [r3, #0]
		      __variant_cast<_Types...>(*this)
 800b57a:	4618      	mov	r0, r3
 800b57c:	f000 f822 	bl	800b5c4 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>
 800b580:	4602      	mov	r2, r0
			= variant<_Types...>(__rhs_mem);
 800b582:	f107 0314 	add.w	r3, r7, #20
 800b586:	4619      	mov	r1, r3
 800b588:	4610      	mov	r0, r2
 800b58a:	f7fb f9b3 	bl	80068f4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSEOSC_>
 800b58e:	f107 0314 	add.w	r3, r7, #20
 800b592:	4618      	mov	r0, r3
 800b594:	f7fb f983 	bl	800689e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEED1Ev>
	    return {};
 800b598:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b59a:	4618      	mov	r0, r3
 800b59c:	3730      	adds	r7, #48	; 0x30
 800b59e:	46bd      	mov	sp, r7
 800b5a0:	bdb0      	pop	{r4, r5, r7, pc}

0800b5a2 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800b5a2:	b590      	push	{r4, r7, lr}
 800b5a4:	b083      	sub	sp, #12
 800b5a6:	af00      	add	r7, sp, #0
 800b5a8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800b5aa:	6878      	ldr	r0, [r7, #4]
 800b5ac:	f000 fb49 	bl	800bc42 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800b5b0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800b5b2:	4619      	mov	r1, r3
 800b5b4:	4620      	mov	r0, r4
 800b5b6:	f7fc f9da 	bl	800796e <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800b5ba:	4603      	mov	r3, r0
    }
 800b5bc:	4618      	mov	r0, r3
 800b5be:	370c      	adds	r7, #12
 800b5c0:	46bd      	mov	sp, r7
 800b5c2:	bd90      	pop	{r4, r7, pc}

0800b5c4 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800b5c4:	b480      	push	{r7}
 800b5c6:	b083      	sub	sp, #12
 800b5c8:	af00      	add	r7, sp, #0
 800b5ca:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 800b5cc:	687b      	ldr	r3, [r7, #4]
    }
 800b5ce:	4618      	mov	r0, r3
 800b5d0:	370c      	adds	r7, #12
 800b5d2:	46bd      	mov	sp, r7
 800b5d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5d8:	4770      	bx	lr

0800b5da <_ZNK9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE7_M_addrEv>:
      _M_addr() const noexcept
 800b5da:	b480      	push	{r7}
 800b5dc:	b083      	sub	sp, #12
 800b5de:	af00      	add	r7, sp, #0
 800b5e0:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 800b5e2:	687b      	ldr	r3, [r7, #4]
 800b5e4:	4618      	mov	r0, r3
 800b5e6:	370c      	adds	r7, #12
 800b5e8:	46bd      	mov	sp, r7
 800b5ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5ee:	4770      	bx	lr

0800b5f0 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKSA_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESI_SJ_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b5f0:	b5b0      	push	{r4, r5, r7, lr}
 800b5f2:	b08c      	sub	sp, #48	; 0x30
 800b5f4:	af00      	add	r7, sp, #0
 800b5f6:	60f8      	str	r0, [r7, #12]
 800b5f8:	60b9      	str	r1, [r7, #8]
 800b5fa:	713a      	strb	r2, [r7, #4]
 800b5fc:	68fb      	ldr	r3, [r7, #12]
 800b5fe:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800b600:	7e1b      	ldrb	r3, [r3, #24]
 800b602:	461c      	mov	r4, r3
 800b604:	1d3b      	adds	r3, r7, #4
 800b606:	4618      	mov	r0, r3
 800b608:	f7ff fc96 	bl	800af38 <_ZNKSt17integral_constantIjLj4EEcvjEv>
 800b60c:	4603      	mov	r3, r0
 800b60e:	429c      	cmp	r4, r3
 800b610:	bf0c      	ite	eq
 800b612:	2301      	moveq	r3, #1
 800b614:	2300      	movne	r3, #0
 800b616:	b2db      	uxtb	r3, r3
 800b618:	2b00      	cmp	r3, #0
 800b61a:	d00a      	beq.n	800b632 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKSA_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESI_SJ_+0x42>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b61c:	68fb      	ldr	r3, [r7, #12]
 800b61e:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800b620:	4618      	mov	r0, r3
 800b622:	f000 f822 	bl	800b66a <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>
 800b626:	4603      	mov	r3, r0
 800b628:	68b9      	ldr	r1, [r7, #8]
 800b62a:	4618      	mov	r0, r3
 800b62c:	f000 fb8e 	bl	800bd4c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>
	    return {};
 800b630:	e016      	b.n	800b660 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKSA_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESI_SJ_+0x70>
			= variant<_Types...>(__rhs_mem);
 800b632:	f107 0314 	add.w	r3, r7, #20
 800b636:	68b9      	ldr	r1, [r7, #8]
 800b638:	4618      	mov	r0, r3
 800b63a:	f000 fcaa 	bl	800bf92 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1IRKS8_vvS8_vEEOT_>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b63e:	68fb      	ldr	r3, [r7, #12]
 800b640:	681b      	ldr	r3, [r3, #0]
		      __variant_cast<_Types...>(*this)
 800b642:	4618      	mov	r0, r3
 800b644:	f7ff ffbe 	bl	800b5c4 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>
 800b648:	4602      	mov	r2, r0
			= variant<_Types...>(__rhs_mem);
 800b64a:	f107 0314 	add.w	r3, r7, #20
 800b64e:	4619      	mov	r1, r3
 800b650:	4610      	mov	r0, r2
 800b652:	f7fb f94f 	bl	80068f4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSEOSC_>
 800b656:	f107 0314 	add.w	r3, r7, #20
 800b65a:	4618      	mov	r0, r3
 800b65c:	f7fb f91f 	bl	800689e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEED1Ev>
	    return {};
 800b660:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b662:	4618      	mov	r0, r3
 800b664:	3730      	adds	r7, #48	; 0x30
 800b666:	46bd      	mov	sp, r7
 800b668:	bdb0      	pop	{r4, r5, r7, pc}

0800b66a <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800b66a:	b590      	push	{r4, r7, lr}
 800b66c:	b083      	sub	sp, #12
 800b66e:	af00      	add	r7, sp, #0
 800b670:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800b672:	6878      	ldr	r0, [r7, #4]
 800b674:	f000 fae5 	bl	800bc42 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800b678:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800b67a:	4619      	mov	r1, r3
 800b67c:	4620      	mov	r0, r4
 800b67e:	f7fc fa38 	bl	8007af2 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800b682:	4603      	mov	r3, r0
    }
 800b684:	4618      	mov	r0, r3
 800b686:	370c      	adds	r7, #12
 800b688:	46bd      	mov	sp, r7
 800b68a:	bd90      	pop	{r4, r7, pc}

0800b68c <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>:
      _M_addr() const noexcept
 800b68c:	b480      	push	{r7}
 800b68e:	b083      	sub	sp, #12
 800b690:	af00      	add	r7, sp, #0
 800b692:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 800b694:	687b      	ldr	r3, [r7, #4]
 800b696:	4618      	mov	r0, r3
 800b698:	370c      	adds	r7, #12
 800b69a:	46bd      	mov	sp, r7
 800b69c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6a0:	4770      	bx	lr

0800b6a2 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKSD_St17integral_constantIjLj5EEEENS0_20__variant_idx_cookieESI_SJ_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b6a2:	b5b0      	push	{r4, r5, r7, lr}
 800b6a4:	b08c      	sub	sp, #48	; 0x30
 800b6a6:	af00      	add	r7, sp, #0
 800b6a8:	60f8      	str	r0, [r7, #12]
 800b6aa:	60b9      	str	r1, [r7, #8]
 800b6ac:	713a      	strb	r2, [r7, #4]
 800b6ae:	68fb      	ldr	r3, [r7, #12]
 800b6b0:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800b6b2:	7e1b      	ldrb	r3, [r3, #24]
 800b6b4:	461c      	mov	r4, r3
 800b6b6:	1d3b      	adds	r3, r7, #4
 800b6b8:	4618      	mov	r0, r3
 800b6ba:	f7ff fc9c 	bl	800aff6 <_ZNKSt17integral_constantIjLj5EEcvjEv>
 800b6be:	4603      	mov	r3, r0
 800b6c0:	429c      	cmp	r4, r3
 800b6c2:	bf0c      	ite	eq
 800b6c4:	2301      	moveq	r3, #1
 800b6c6:	2300      	movne	r3, #0
 800b6c8:	b2db      	uxtb	r3, r3
 800b6ca:	2b00      	cmp	r3, #0
 800b6cc:	d00a      	beq.n	800b6e4 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKSD_St17integral_constantIjLj5EEEENS0_20__variant_idx_cookieESI_SJ_+0x42>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b6ce:	68fb      	ldr	r3, [r7, #12]
 800b6d0:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800b6d2:	4618      	mov	r0, r3
 800b6d4:	f000 f822 	bl	800b71c <_ZNSt8__detail9__variant5__getILj5ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>
 800b6d8:	4603      	mov	r3, r0
 800b6da:	68b9      	ldr	r1, [r7, #8]
 800b6dc:	4618      	mov	r0, r3
 800b6de:	f000 fc73 	bl	800bfc8 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_>
	    return {};
 800b6e2:	e016      	b.n	800b712 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEaSERKSE_ENUlOT_T0_E_clIRKSD_St17integral_constantIjLj5EEEENS0_20__variant_idx_cookieESI_SJ_+0x70>
			= variant<_Types...>(__rhs_mem);
 800b6e4:	f107 0314 	add.w	r3, r7, #20
 800b6e8:	68b9      	ldr	r1, [r7, #8]
 800b6ea:	4618      	mov	r0, r3
 800b6ec:	f000 fd7a 	bl	800c1e4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1IRKSB_vvSB_vEEOT_>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b6f0:	68fb      	ldr	r3, [r7, #12]
 800b6f2:	681b      	ldr	r3, [r3, #0]
		      __variant_cast<_Types...>(*this)
 800b6f4:	4618      	mov	r0, r3
 800b6f6:	f7ff ff65 	bl	800b5c4 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S8_SB_EEEEDcOT0_>
 800b6fa:	4602      	mov	r2, r0
			= variant<_Types...>(__rhs_mem);
 800b6fc:	f107 0314 	add.w	r3, r7, #20
 800b700:	4619      	mov	r1, r3
 800b702:	4610      	mov	r0, r2
 800b704:	f7fb f8f6 	bl	80068f4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSEOSC_>
 800b708:	f107 0314 	add.w	r3, r7, #20
 800b70c:	4618      	mov	r0, r3
 800b70e:	f7fb f8c6 	bl	800689e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEED1Ev>
	    return {};
 800b712:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800b714:	4618      	mov	r0, r3
 800b716:	3730      	adds	r7, #48	; 0x30
 800b718:	46bd      	mov	sp, r7
 800b71a:	bdb0      	pop	{r4, r5, r7, pc}

0800b71c <_ZNSt8__detail9__variant5__getILj5ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800b71c:	b590      	push	{r4, r7, lr}
 800b71e:	b083      	sub	sp, #12
 800b720:	af00      	add	r7, sp, #0
 800b722:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800b724:	6878      	ldr	r0, [r7, #4]
 800b726:	f000 fa8c 	bl	800bc42 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800b72a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800b72c:	4619      	mov	r1, r3
 800b72e:	4620      	mov	r0, r4
 800b730:	f7fc fab3 	bl	8007c9a <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800b734:	4603      	mov	r3, r0
    }
 800b736:	4618      	mov	r0, r3
 800b738:	370c      	adds	r7, #12
 800b73a:	46bd      	mov	sp, r7
 800b73c:	bd90      	pop	{r4, r7, pc}

0800b73e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_JRiEESH_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b73e:	b5b0      	push	{r4, r5, r7, lr}
 800b740:	b084      	sub	sp, #16
 800b742:	af00      	add	r7, sp, #0
 800b744:	7338      	strb	r0, [r7, #12]
 800b746:	60b9      	str	r1, [r7, #8]
 800b748:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b74a:	68b8      	ldr	r0, [r7, #8]
 800b74c:	f7ff fa5b 	bl	800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800b750:	4604      	mov	r4, r0
 800b752:	6878      	ldr	r0, [r7, #4]
 800b754:	f7fa fc51 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800b758:	4603      	mov	r3, r0
 800b75a:	4619      	mov	r1, r3
 800b75c:	4620      	mov	r0, r4
 800b75e:	f000 fd54 	bl	800c20a <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESG_>
 800b762:	462b      	mov	r3, r5
 800b764:	4618      	mov	r0, r3
 800b766:	3710      	adds	r7, #16
 800b768:	46bd      	mov	sp, r7
 800b76a:	bdb0      	pop	{r4, r5, r7, pc}

0800b76c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_JRfEESH_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b76c:	b5b0      	push	{r4, r5, r7, lr}
 800b76e:	b084      	sub	sp, #16
 800b770:	af00      	add	r7, sp, #0
 800b772:	7338      	strb	r0, [r7, #12]
 800b774:	60b9      	str	r1, [r7, #8]
 800b776:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b778:	68b8      	ldr	r0, [r7, #8]
 800b77a:	f7ff fa44 	bl	800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800b77e:	4604      	mov	r4, r0
 800b780:	6878      	ldr	r0, [r7, #4]
 800b782:	f7fa fc5c 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800b786:	4603      	mov	r3, r0
 800b788:	4619      	mov	r1, r3
 800b78a:	4620      	mov	r0, r4
 800b78c:	f000 fd4e 	bl	800c22c <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESG_>
 800b790:	462b      	mov	r3, r5
 800b792:	4618      	mov	r0, r3
 800b794:	3710      	adds	r7, #16
 800b796:	46bd      	mov	sp, r7
 800b798:	bdb0      	pop	{r4, r5, r7, pc}

0800b79a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_JRbEESH_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b79a:	b5b0      	push	{r4, r5, r7, lr}
 800b79c:	b084      	sub	sp, #16
 800b79e:	af00      	add	r7, sp, #0
 800b7a0:	7338      	strb	r0, [r7, #12]
 800b7a2:	60b9      	str	r1, [r7, #8]
 800b7a4:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b7a6:	68b8      	ldr	r0, [r7, #8]
 800b7a8:	f7ff fa2d 	bl	800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800b7ac:	4604      	mov	r4, r0
 800b7ae:	6878      	ldr	r0, [r7, #4]
 800b7b0:	f7fa fc01 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800b7b4:	4603      	mov	r3, r0
 800b7b6:	4619      	mov	r1, r3
 800b7b8:	4620      	mov	r0, r4
 800b7ba:	f000 fd48 	bl	800c24e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESG_>
 800b7be:	462b      	mov	r3, r5
 800b7c0:	4618      	mov	r0, r3
 800b7c2:	3710      	adds	r7, #16
 800b7c4:	46bd      	mov	sp, r7
 800b7c6:	bdb0      	pop	{r4, r5, r7, pc}

0800b7c8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_JRS9_EESH_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b7c8:	b5b0      	push	{r4, r5, r7, lr}
 800b7ca:	b084      	sub	sp, #16
 800b7cc:	af00      	add	r7, sp, #0
 800b7ce:	7338      	strb	r0, [r7, #12]
 800b7d0:	60b9      	str	r1, [r7, #8]
 800b7d2:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b7d4:	68b8      	ldr	r0, [r7, #8]
 800b7d6:	f7ff fa16 	bl	800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800b7da:	4604      	mov	r4, r0
 800b7dc:	6878      	ldr	r0, [r7, #4]
 800b7de:	f7fa fc5c 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800b7e2:	4603      	mov	r3, r0
 800b7e4:	4619      	mov	r1, r3
 800b7e6:	4620      	mov	r0, r4
 800b7e8:	f000 fd42 	bl	800c270 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESG_>
 800b7ec:	462b      	mov	r3, r5
 800b7ee:	4618      	mov	r0, r3
 800b7f0:	3710      	adds	r7, #16
 800b7f2:	46bd      	mov	sp, r7
 800b7f4:	bdb0      	pop	{r4, r5, r7, pc}

0800b7f6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_JRSC_EESH_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b7f6:	b5b0      	push	{r4, r5, r7, lr}
 800b7f8:	b084      	sub	sp, #16
 800b7fa:	af00      	add	r7, sp, #0
 800b7fc:	7338      	strb	r0, [r7, #12]
 800b7fe:	60b9      	str	r1, [r7, #8]
 800b800:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b802:	68b8      	ldr	r0, [r7, #8]
 800b804:	f7ff f9ff 	bl	800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800b808:	4604      	mov	r4, r0
 800b80a:	6878      	ldr	r0, [r7, #4]
 800b80c:	f7fe fda2 	bl	800a354 <_ZSt7forwardIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>
 800b810:	4603      	mov	r3, r0
 800b812:	4619      	mov	r1, r3
 800b814:	4620      	mov	r0, r4
 800b816:	f000 fd3c 	bl	800c292 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEvENUlOT_E_clIRSA_EENS0_16__variant_cookieESG_>
 800b81a:	462b      	mov	r3, r5
 800b81c:	4618      	mov	r0, r3
 800b81e:	3710      	adds	r7, #16
 800b820:	46bd      	mov	sp, r7
 800b822:	bdb0      	pop	{r4, r5, r7, pc}

0800b824 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_I6SymbolSaISD_EEEE13_M_reset_implEvEUlOT_E_JRSF_EESH_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b824:	b5b0      	push	{r4, r5, r7, lr}
 800b826:	b084      	sub	sp, #16
 800b828:	af00      	add	r7, sp, #0
 800b82a:	7338      	strb	r0, [r7, #12]
 800b82c:	60b9      	str	r1, [r7, #8]
 800b82e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b830:	68b8      	ldr	r0, [r7, #8]
 800b832:	f7ff f9e8 	bl	800ac06 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800b836:	4604      	mov	r4, r0
 800b838:	6878      	ldr	r0, [r7, #4]
 800b83a:	f7fe fdcb 	bl	800a3d4 <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800b83e:	4603      	mov	r3, r0
 800b840:	4619      	mov	r1, r3
 800b842:	4620      	mov	r0, r4
 800b844:	f000 fd36 	bl	800c2b4 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEvENUlOT_E_clIRSD_EENS0_16__variant_cookieESG_>
 800b848:	462b      	mov	r3, r5
 800b84a:	4618      	mov	r0, r3
 800b84c:	3710      	adds	r7, #16
 800b84e:	46bd      	mov	sp, r7
 800b850:	bdb0      	pop	{r4, r5, r7, pc}

0800b852 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b852:	b480      	push	{r7}
 800b854:	b083      	sub	sp, #12
 800b856:	af00      	add	r7, sp, #0
 800b858:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b85a:	687b      	ldr	r3, [r7, #4]
 800b85c:	4618      	mov	r0, r3
 800b85e:	370c      	adds	r7, #12
 800b860:	46bd      	mov	sp, r7
 800b862:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b866:	4770      	bx	lr

0800b868 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>:
	emplace(_Args&&... __args)
 800b868:	b580      	push	{r7, lr}
 800b86a:	b082      	sub	sp, #8
 800b86c:	af00      	add	r7, sp, #0
 800b86e:	6078      	str	r0, [r7, #4]
 800b870:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800b872:	687b      	ldr	r3, [r7, #4]
 800b874:	4618      	mov	r0, r3
 800b876:	f7fd f847 	bl	8008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800b87a:	6838      	ldr	r0, [r7, #0]
 800b87c:	f7ff fbef 	bl	800b05e <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800b880:	4603      	mov	r3, r0
 800b882:	4619      	mov	r1, r3
 800b884:	6878      	ldr	r0, [r7, #4]
 800b886:	f000 fd26 	bl	800c2d6 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800b88a:	6878      	ldr	r0, [r7, #4]
 800b88c:	f000 fd42 	bl	800c314 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 800b890:	4603      	mov	r3, r0
	}
 800b892:	4618      	mov	r0, r3
 800b894:	3708      	adds	r7, #8
 800b896:	46bd      	mov	sp, r7
 800b898:	bd80      	pop	{r7, pc}

0800b89a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>:
	emplace(_Args&&... __args)
 800b89a:	b580      	push	{r7, lr}
 800b89c:	b082      	sub	sp, #8
 800b89e:	af00      	add	r7, sp, #0
 800b8a0:	6078      	str	r0, [r7, #4]
 800b8a2:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800b8a4:	687b      	ldr	r3, [r7, #4]
 800b8a6:	4618      	mov	r0, r3
 800b8a8:	f7fd f82e 	bl	8008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800b8ac:	6838      	ldr	r0, [r7, #0]
 800b8ae:	f7ff fc03 	bl	800b0b8 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800b8b2:	4603      	mov	r3, r0
 800b8b4:	4619      	mov	r1, r3
 800b8b6:	6878      	ldr	r0, [r7, #4]
 800b8b8:	f000 fd48 	bl	800c34c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800b8bc:	6878      	ldr	r0, [r7, #4]
 800b8be:	f000 fd65 	bl	800c38c <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 800b8c2:	4603      	mov	r3, r0
	}
 800b8c4:	4618      	mov	r0, r3
 800b8c6:	3708      	adds	r7, #8
 800b8c8:	46bd      	mov	sp, r7
 800b8ca:	bd80      	pop	{r7, pc}

0800b8cc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj2EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>:
	emplace(_Args&&... __args)
 800b8cc:	b580      	push	{r7, lr}
 800b8ce:	b082      	sub	sp, #8
 800b8d0:	af00      	add	r7, sp, #0
 800b8d2:	6078      	str	r0, [r7, #4]
 800b8d4:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800b8d6:	687b      	ldr	r3, [r7, #4]
 800b8d8:	4618      	mov	r0, r3
 800b8da:	f7fd f815 	bl	8008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800b8de:	6838      	ldr	r0, [r7, #0]
 800b8e0:	f7ff fc17 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800b8e4:	4603      	mov	r3, r0
 800b8e6:	4619      	mov	r1, r3
 800b8e8:	6878      	ldr	r0, [r7, #4]
 800b8ea:	f000 fd6b 	bl	800c3c4 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800b8ee:	6878      	ldr	r0, [r7, #4]
 800b8f0:	f000 fd88 	bl	800c404 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 800b8f4:	4603      	mov	r3, r0
	}
 800b8f6:	4618      	mov	r0, r3
 800b8f8:	3708      	adds	r7, #8
 800b8fa:	46bd      	mov	sp, r7
 800b8fc:	bd80      	pop	{r7, pc}

0800b8fe <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>:
	emplace(_Args&&... __args)
 800b8fe:	b580      	push	{r7, lr}
 800b900:	b082      	sub	sp, #8
 800b902:	af00      	add	r7, sp, #0
 800b904:	6078      	str	r0, [r7, #4]
 800b906:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800b908:	687b      	ldr	r3, [r7, #4]
 800b90a:	4618      	mov	r0, r3
 800b90c:	f7fc fffc 	bl	8008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800b910:	6838      	ldr	r0, [r7, #0]
 800b912:	f7ff fc2b 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800b916:	4603      	mov	r3, r0
 800b918:	4619      	mov	r1, r3
 800b91a:	6878      	ldr	r0, [r7, #4]
 800b91c:	f000 fd8e 	bl	800c43c <_ZSt28__variant_construct_by_indexILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800b920:	6878      	ldr	r0, [r7, #4]
 800b922:	f000 fdad 	bl	800c480 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 800b926:	4603      	mov	r3, r0
	}
 800b928:	4618      	mov	r0, r3
 800b92a:	3708      	adds	r7, #8
 800b92c:	46bd      	mov	sp, r7
 800b92e:	bd80      	pop	{r7, pc}

0800b930 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSEOS7_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 800b930:	b590      	push	{r4, r7, lr}
 800b932:	b085      	sub	sp, #20
 800b934:	af00      	add	r7, sp, #0
 800b936:	6078      	str	r0, [r7, #4]
 800b938:	6039      	str	r1, [r7, #0]
	constexpr bool __move_storage =
 800b93a:	2301      	movs	r3, #1
 800b93c:	73fb      	strb	r3, [r7, #15]
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 800b93e:	6838      	ldr	r0, [r7, #0]
 800b940:	f7ff fc36 	bl	800b1b0 <_ZSt4moveIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEONSt16remove_referenceIT_E4typeEOSB_>
 800b944:	4603      	mov	r3, r0
 800b946:	4622      	mov	r2, r4
 800b948:	4619      	mov	r1, r3
 800b94a:	6878      	ldr	r0, [r7, #4]
 800b94c:	f000 fdb4 	bl	800c4b8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE>
	return *this;
 800b950:	687b      	ldr	r3, [r7, #4]
      }
 800b952:	4618      	mov	r0, r3
 800b954:	3714      	adds	r7, #20
 800b956:	46bd      	mov	sp, r7
 800b958:	bd90      	pop	{r4, r7, pc}

0800b95a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj4EJS8_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>:
	emplace(_Args&&... __args)
 800b95a:	b580      	push	{r7, lr}
 800b95c:	b082      	sub	sp, #8
 800b95e:	af00      	add	r7, sp, #0
 800b960:	6078      	str	r0, [r7, #4]
 800b962:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800b964:	687b      	ldr	r3, [r7, #4]
 800b966:	4618      	mov	r0, r3
 800b968:	f7fc ffce 	bl	8008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800b96c:	6838      	ldr	r0, [r7, #0]
 800b96e:	f7ff fc2a 	bl	800b1c6 <_ZSt7forwardISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceIS9_E4typeE>
 800b972:	4603      	mov	r3, r0
 800b974:	4619      	mov	r1, r3
 800b976:	6878      	ldr	r0, [r7, #4]
 800b978:	f000 fe08 	bl	800c58c <_ZSt28__variant_construct_by_indexILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJS9_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800b97c:	6878      	ldr	r0, [r7, #4]
 800b97e:	f000 fe27 	bl	800c5d0 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 800b982:	4603      	mov	r3, r0
	}
 800b984:	4618      	mov	r0, r3
 800b986:	3708      	adds	r7, #8
 800b988:	46bd      	mov	sp, r7
 800b98a:	bd80      	pop	{r7, pc}

0800b98c <_ZNSt6vectorI6SymbolSaIS0_EEaSEOS2_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 800b98c:	b590      	push	{r4, r7, lr}
 800b98e:	b085      	sub	sp, #20
 800b990:	af00      	add	r7, sp, #0
 800b992:	6078      	str	r0, [r7, #4]
 800b994:	6039      	str	r1, [r7, #0]
	constexpr bool __move_storage =
 800b996:	2301      	movs	r3, #1
 800b998:	73fb      	strb	r3, [r7, #15]
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 800b99a:	6838      	ldr	r0, [r7, #0]
 800b99c:	f7ff fc35 	bl	800b20a <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 800b9a0:	4603      	mov	r3, r0
 800b9a2:	4622      	mov	r2, r4
 800b9a4:	4619      	mov	r1, r3
 800b9a6:	6878      	ldr	r0, [r7, #4]
 800b9a8:	f000 fe2e 	bl	800c608 <_ZNSt6vectorI6SymbolSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE>
	return *this;
 800b9ac:	687b      	ldr	r3, [r7, #4]
      }
 800b9ae:	4618      	mov	r0, r3
 800b9b0:	3714      	adds	r7, #20
 800b9b2:	46bd      	mov	sp, r7
 800b9b4:	bd90      	pop	{r4, r7, pc}

0800b9b6 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj5EJSB_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>:
	emplace(_Args&&... __args)
 800b9b6:	b580      	push	{r7, lr}
 800b9b8:	b082      	sub	sp, #8
 800b9ba:	af00      	add	r7, sp, #0
 800b9bc:	6078      	str	r0, [r7, #4]
 800b9be:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800b9c0:	687b      	ldr	r3, [r7, #4]
 800b9c2:	4618      	mov	r0, r3
 800b9c4:	f7fc ffa0 	bl	8008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800b9c8:	6838      	ldr	r0, [r7, #0]
 800b9ca:	f7ff fc29 	bl	800b220 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800b9ce:	4603      	mov	r3, r0
 800b9d0:	4619      	mov	r1, r3
 800b9d2:	6878      	ldr	r0, [r7, #4]
 800b9d4:	f000 fe82 	bl	800c6dc <_ZSt28__variant_construct_by_indexILj5ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJSC_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800b9d8:	6878      	ldr	r0, [r7, #4]
 800b9da:	f000 fea1 	bl	800c720 <_ZSt3getILj5EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 800b9de:	4603      	mov	r3, r0
	}
 800b9e0:	4618      	mov	r0, r3
 800b9e2:	3708      	adds	r7, #8
 800b9e4:	46bd      	mov	sp, r7
 800b9e6:	bd80      	pop	{r7, pc}

0800b9e8 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 800b9e8:	b580      	push	{r7, lr}
 800b9ea:	b082      	sub	sp, #8
 800b9ec:	af00      	add	r7, sp, #0
 800b9ee:	6078      	str	r0, [r7, #4]
 800b9f0:	687b      	ldr	r3, [r7, #4]
 800b9f2:	4618      	mov	r0, r3
 800b9f4:	f000 feb0 	bl	800c758 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EES2_I6SymbolSaISB_EEEEC1Ev>
 800b9f8:	687b      	ldr	r3, [r7, #4]
 800b9fa:	4618      	mov	r0, r3
 800b9fc:	3708      	adds	r7, #8
 800b9fe:	46bd      	mov	sp, r7
 800ba00:	bd80      	pop	{r7, pc}

0800ba02 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_ENUlOT_E_clIiEENS0_16__variant_cookieESM_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800ba02:	b5b0      	push	{r4, r5, r7, lr}
 800ba04:	b082      	sub	sp, #8
 800ba06:	af00      	add	r7, sp, #0
 800ba08:	6078      	str	r0, [r7, #4]
 800ba0a:	6039      	str	r1, [r7, #0]
 800ba0c:	687b      	ldr	r3, [r7, #4]
 800ba0e:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800ba10:	4618      	mov	r0, r3
 800ba12:	f000 feae 	bl	800c772 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800ba16:	4604      	mov	r4, r0
 800ba18:	6838      	ldr	r0, [r7, #0]
 800ba1a:	f000 feb5 	bl	800c788 <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>
 800ba1e:	4603      	mov	r3, r0
 800ba20:	4619      	mov	r1, r3
 800ba22:	4620      	mov	r0, r4
 800ba24:	f000 fed2 	bl	800c7cc <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEiEEvOT_OT0_>
	  return {};
 800ba28:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800ba2a:	4618      	mov	r0, r3
 800ba2c:	3708      	adds	r7, #8
 800ba2e:	46bd      	mov	sp, r7
 800ba30:	bdb0      	pop	{r4, r5, r7, pc}

0800ba32 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_ENUlOT_E_clIfEENS0_16__variant_cookieESM_>:
 800ba32:	b5b0      	push	{r4, r5, r7, lr}
 800ba34:	b082      	sub	sp, #8
 800ba36:	af00      	add	r7, sp, #0
 800ba38:	6078      	str	r0, [r7, #4]
 800ba3a:	6039      	str	r1, [r7, #0]
 800ba3c:	687b      	ldr	r3, [r7, #4]
 800ba3e:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800ba40:	4618      	mov	r0, r3
 800ba42:	f000 fe96 	bl	800c772 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800ba46:	4604      	mov	r4, r0
 800ba48:	6838      	ldr	r0, [r7, #0]
 800ba4a:	f000 fed9 	bl	800c800 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>
 800ba4e:	4603      	mov	r3, r0
 800ba50:	4619      	mov	r1, r3
 800ba52:	4620      	mov	r0, r4
 800ba54:	f000 fedf 	bl	800c816 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEfEEvOT_OT0_>
	  return {};
 800ba58:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800ba5a:	4618      	mov	r0, r3
 800ba5c:	3708      	adds	r7, #8
 800ba5e:	46bd      	mov	sp, r7
 800ba60:	bdb0      	pop	{r4, r5, r7, pc}

0800ba62 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_ENUlOT_E_clIbEENS0_16__variant_cookieESM_>:
 800ba62:	b5b0      	push	{r4, r5, r7, lr}
 800ba64:	b082      	sub	sp, #8
 800ba66:	af00      	add	r7, sp, #0
 800ba68:	6078      	str	r0, [r7, #4]
 800ba6a:	6039      	str	r1, [r7, #0]
 800ba6c:	687b      	ldr	r3, [r7, #4]
 800ba6e:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800ba70:	4618      	mov	r0, r3
 800ba72:	f000 fe7e 	bl	800c772 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800ba76:	4604      	mov	r4, r0
 800ba78:	6838      	ldr	r0, [r7, #0]
 800ba7a:	f000 fee6 	bl	800c84a <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>
 800ba7e:	4603      	mov	r3, r0
 800ba80:	4619      	mov	r1, r3
 800ba82:	4620      	mov	r0, r4
 800ba84:	f000 feec 	bl	800c860 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEbEEvOT_OT0_>
	  return {};
 800ba88:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800ba8a:	4618      	mov	r0, r3
 800ba8c:	3708      	adds	r7, #8
 800ba8e:	46bd      	mov	sp, r7
 800ba90:	bdb0      	pop	{r4, r5, r7, pc}

0800ba92 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_ENUlOT_E_clIS7_EENS0_16__variant_cookieESM_>:
 800ba92:	b5b0      	push	{r4, r5, r7, lr}
 800ba94:	b082      	sub	sp, #8
 800ba96:	af00      	add	r7, sp, #0
 800ba98:	6078      	str	r0, [r7, #4]
 800ba9a:	6039      	str	r1, [r7, #0]
 800ba9c:	687b      	ldr	r3, [r7, #4]
 800ba9e:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800baa0:	4618      	mov	r0, r3
 800baa2:	f000 fe66 	bl	800c772 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800baa6:	4604      	mov	r4, r0
 800baa8:	6838      	ldr	r0, [r7, #0]
 800baaa:	f000 fef4 	bl	800c896 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800baae:	4603      	mov	r3, r0
 800bab0:	4619      	mov	r1, r3
 800bab2:	4620      	mov	r0, r4
 800bab4:	f000 fefa 	bl	800c8ac <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEES8_EEvOT_OT0_>
	  return {};
 800bab8:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800baba:	4618      	mov	r0, r3
 800babc:	3708      	adds	r7, #8
 800babe:	46bd      	mov	sp, r7
 800bac0:	bdb0      	pop	{r4, r5, r7, pc}

0800bac2 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_ENUlOT_E_clISA_EENS0_16__variant_cookieESM_>:
 800bac2:	b5b0      	push	{r4, r5, r7, lr}
 800bac4:	b082      	sub	sp, #8
 800bac6:	af00      	add	r7, sp, #0
 800bac8:	6078      	str	r0, [r7, #4]
 800baca:	6039      	str	r1, [r7, #0]
 800bacc:	687b      	ldr	r3, [r7, #4]
 800bace:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800bad0:	4618      	mov	r0, r3
 800bad2:	f000 fe4e 	bl	800c772 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800bad6:	4604      	mov	r4, r0
 800bad8:	6838      	ldr	r0, [r7, #0]
 800bada:	f000 ff03 	bl	800c8e4 <_ZSt7forwardIOSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>
 800bade:	4603      	mov	r3, r0
 800bae0:	4619      	mov	r1, r3
 800bae2:	4620      	mov	r0, r4
 800bae4:	f000 ff09 	bl	800c8fa <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEESB_EEvOT_OT0_>
	  return {};
 800bae8:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800baea:	4618      	mov	r0, r3
 800baec:	3708      	adds	r7, #8
 800baee:	46bd      	mov	sp, r7
 800baf0:	bdb0      	pop	{r4, r5, r7, pc}

0800baf2 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SD_EEESF_EEvOT0_OT1_ENUlOT_E_clISD_EENS0_16__variant_cookieESM_>:
 800baf2:	b5b0      	push	{r4, r5, r7, lr}
 800baf4:	b082      	sub	sp, #8
 800baf6:	af00      	add	r7, sp, #0
 800baf8:	6078      	str	r0, [r7, #4]
 800bafa:	6039      	str	r1, [r7, #0]
 800bafc:	687b      	ldr	r3, [r7, #4]
 800bafe:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800bb00:	4618      	mov	r0, r3
 800bb02:	f000 fe36 	bl	800c772 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800bb06:	4604      	mov	r4, r0
 800bb08:	6838      	ldr	r0, [r7, #0]
 800bb0a:	f000 ff12 	bl	800c932 <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800bb0e:	4603      	mov	r3, r0
 800bb10:	4619      	mov	r1, r3
 800bb12:	4620      	mov	r0, r4
 800bb14:	f000 ff18 	bl	800c948 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEESE_EEvOT_OT0_>
	  return {};
 800bb18:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800bb1a:	4618      	mov	r0, r3
 800bb1c:	3708      	adds	r7, #8
 800bb1e:	46bd      	mov	sp, r7
 800bb20:	bdb0      	pop	{r4, r5, r7, pc}

0800bb22 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESO_>:
 800bb22:	b5b0      	push	{r4, r5, r7, lr}
 800bb24:	b082      	sub	sp, #8
 800bb26:	af00      	add	r7, sp, #0
 800bb28:	6078      	str	r0, [r7, #4]
 800bb2a:	6039      	str	r1, [r7, #0]
 800bb2c:	687b      	ldr	r3, [r7, #4]
 800bb2e:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800bb30:	4618      	mov	r0, r3
 800bb32:	f000 ff25 	bl	800c980 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800bb36:	4604      	mov	r4, r0
 800bb38:	6838      	ldr	r0, [r7, #0]
 800bb3a:	f7fe feaa 	bl	800a892 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800bb3e:	4603      	mov	r3, r0
 800bb40:	4619      	mov	r1, r3
 800bb42:	4620      	mov	r0, r4
 800bb44:	f000 ff27 	bl	800c996 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKiEEvOT_OT0_>
	  return {};
 800bb48:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800bb4a:	4618      	mov	r0, r3
 800bb4c:	3708      	adds	r7, #8
 800bb4e:	46bd      	mov	sp, r7
 800bb50:	bdb0      	pop	{r4, r5, r7, pc}

0800bb52 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESO_>:
 800bb52:	b5b0      	push	{r4, r5, r7, lr}
 800bb54:	b082      	sub	sp, #8
 800bb56:	af00      	add	r7, sp, #0
 800bb58:	6078      	str	r0, [r7, #4]
 800bb5a:	6039      	str	r1, [r7, #0]
 800bb5c:	687b      	ldr	r3, [r7, #4]
 800bb5e:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800bb60:	4618      	mov	r0, r3
 800bb62:	f000 ff0d 	bl	800c980 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800bb66:	4604      	mov	r4, r0
 800bb68:	6838      	ldr	r0, [r7, #0]
 800bb6a:	f7fe febb 	bl	800a8e4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800bb6e:	4603      	mov	r3, r0
 800bb70:	4619      	mov	r1, r3
 800bb72:	4620      	mov	r0, r4
 800bb74:	f000 ff29 	bl	800c9ca <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKfEEvOT_OT0_>
	  return {};
 800bb78:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800bb7a:	4618      	mov	r0, r3
 800bb7c:	3708      	adds	r7, #8
 800bb7e:	46bd      	mov	sp, r7
 800bb80:	bdb0      	pop	{r4, r5, r7, pc}

0800bb82 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESO_>:
 800bb82:	b5b0      	push	{r4, r5, r7, lr}
 800bb84:	b082      	sub	sp, #8
 800bb86:	af00      	add	r7, sp, #0
 800bb88:	6078      	str	r0, [r7, #4]
 800bb8a:	6039      	str	r1, [r7, #0]
 800bb8c:	687b      	ldr	r3, [r7, #4]
 800bb8e:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800bb90:	4618      	mov	r0, r3
 800bb92:	f000 fef5 	bl	800c980 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800bb96:	4604      	mov	r4, r0
 800bb98:	6838      	ldr	r0, [r7, #0]
 800bb9a:	f7fe fecc 	bl	800a936 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800bb9e:	4603      	mov	r3, r0
 800bba0:	4619      	mov	r1, r3
 800bba2:	4620      	mov	r0, r4
 800bba4:	f000 ff2b 	bl	800c9fe <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKbEEvOT_OT0_>
	  return {};
 800bba8:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800bbaa:	4618      	mov	r0, r3
 800bbac:	3708      	adds	r7, #8
 800bbae:	46bd      	mov	sp, r7
 800bbb0:	bdb0      	pop	{r4, r5, r7, pc}

0800bbb2 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESO_>:
 800bbb2:	b5b0      	push	{r4, r5, r7, lr}
 800bbb4:	b082      	sub	sp, #8
 800bbb6:	af00      	add	r7, sp, #0
 800bbb8:	6078      	str	r0, [r7, #4]
 800bbba:	6039      	str	r1, [r7, #0]
 800bbbc:	687b      	ldr	r3, [r7, #4]
 800bbbe:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800bbc0:	4618      	mov	r0, r3
 800bbc2:	f000 fedd 	bl	800c980 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800bbc6:	4604      	mov	r4, r0
 800bbc8:	6838      	ldr	r0, [r7, #0]
 800bbca:	f7fe fee9 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800bbce:	4603      	mov	r3, r0
 800bbd0:	4619      	mov	r1, r3
 800bbd2:	4620      	mov	r0, r4
 800bbd4:	f000 ff2e 	bl	800ca34 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKS8_EEvOT_OT0_>
	  return {};
 800bbd8:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800bbda:	4618      	mov	r0, r3
 800bbdc:	3708      	adds	r7, #8
 800bbde:	46bd      	mov	sp, r7
 800bbe0:	bdb0      	pop	{r4, r5, r7, pc}

0800bbe2 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_ENUlOT_E_clIRKSA_EENS0_16__variant_cookieESO_>:
 800bbe2:	b5b0      	push	{r4, r5, r7, lr}
 800bbe4:	b082      	sub	sp, #8
 800bbe6:	af00      	add	r7, sp, #0
 800bbe8:	6078      	str	r0, [r7, #4]
 800bbea:	6039      	str	r1, [r7, #0]
 800bbec:	687b      	ldr	r3, [r7, #4]
 800bbee:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800bbf0:	4618      	mov	r0, r3
 800bbf2:	f000 fec5 	bl	800c980 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800bbf6:	4604      	mov	r4, r0
 800bbf8:	6838      	ldr	r0, [r7, #0]
 800bbfa:	f7fe ff06 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800bbfe:	4603      	mov	r3, r0
 800bc00:	4619      	mov	r1, r3
 800bc02:	4620      	mov	r0, r4
 800bc04:	f000 ff32 	bl	800ca6c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKSB_EEvOT_OT0_>
	  return {};
 800bc08:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800bc0a:	4618      	mov	r0, r3
 800bc0c:	3708      	adds	r7, #8
 800bc0e:	46bd      	mov	sp, r7
 800bc10:	bdb0      	pop	{r4, r5, r7, pc}

0800bc12 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SD_EEERKSF_EEvOT0_OT1_ENUlOT_E_clIRKSD_EENS0_16__variant_cookieESO_>:
 800bc12:	b5b0      	push	{r4, r5, r7, lr}
 800bc14:	b082      	sub	sp, #8
 800bc16:	af00      	add	r7, sp, #0
 800bc18:	6078      	str	r0, [r7, #4]
 800bc1a:	6039      	str	r1, [r7, #0]
 800bc1c:	687b      	ldr	r3, [r7, #4]
 800bc1e:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800bc20:	4618      	mov	r0, r3
 800bc22:	f000 fead 	bl	800c980 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 800bc26:	4604      	mov	r4, r0
 800bc28:	6838      	ldr	r0, [r7, #0]
 800bc2a:	f7fe ff23 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800bc2e:	4603      	mov	r3, r0
 800bc30:	4619      	mov	r1, r3
 800bc32:	4620      	mov	r0, r4
 800bc34:	f000 ff36 	bl	800caa4 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKSE_EEvOT_OT0_>
	  return {};
 800bc38:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800bc3a:	4618      	mov	r0, r3
 800bc3c:	3708      	adds	r7, #8
 800bc3e:	46bd      	mov	sp, r7
 800bc40:	bdb0      	pop	{r4, r5, r7, pc}

0800bc42 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800bc42:	b480      	push	{r7}
 800bc44:	b083      	sub	sp, #12
 800bc46:	af00      	add	r7, sp, #0
 800bc48:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800bc4a:	687b      	ldr	r3, [r7, #4]
 800bc4c:	4618      	mov	r0, r3
 800bc4e:	370c      	adds	r7, #12
 800bc50:	46bd      	mov	sp, r7
 800bc52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc56:	4770      	bx	lr

0800bc58 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE19_M_destructive_copyIiEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 800bc58:	b580      	push	{r7, lr}
 800bc5a:	b084      	sub	sp, #16
 800bc5c:	af00      	add	r7, sp, #0
 800bc5e:	60f8      	str	r0, [r7, #12]
 800bc60:	460b      	mov	r3, r1
 800bc62:	607a      	str	r2, [r7, #4]
 800bc64:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 800bc66:	68fb      	ldr	r3, [r7, #12]
 800bc68:	4618      	mov	r0, r3
 800bc6a:	f7fc fe4d 	bl	8008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 800bc6e:	6879      	ldr	r1, [r7, #4]
 800bc70:	68f8      	ldr	r0, [r7, #12]
 800bc72:	f000 ff33 	bl	800cadc <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKiEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 800bc76:	897b      	ldrh	r3, [r7, #10]
 800bc78:	b2da      	uxtb	r2, r3
 800bc7a:	68fb      	ldr	r3, [r7, #12]
 800bc7c:	761a      	strb	r2, [r3, #24]
	}
 800bc7e:	bf00      	nop
 800bc80:	3710      	adds	r7, #16
 800bc82:	46bd      	mov	sp, r7
 800bc84:	bd80      	pop	{r7, pc}

0800bc86 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE19_M_destructive_copyIfEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 800bc86:	b580      	push	{r7, lr}
 800bc88:	b084      	sub	sp, #16
 800bc8a:	af00      	add	r7, sp, #0
 800bc8c:	60f8      	str	r0, [r7, #12]
 800bc8e:	460b      	mov	r3, r1
 800bc90:	607a      	str	r2, [r7, #4]
 800bc92:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 800bc94:	68fb      	ldr	r3, [r7, #12]
 800bc96:	4618      	mov	r0, r3
 800bc98:	f7fc fe36 	bl	8008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 800bc9c:	6879      	ldr	r1, [r7, #4]
 800bc9e:	68f8      	ldr	r0, [r7, #12]
 800bca0:	f000 ff36 	bl	800cb10 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKfEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 800bca4:	897b      	ldrh	r3, [r7, #10]
 800bca6:	b2da      	uxtb	r2, r3
 800bca8:	68fb      	ldr	r3, [r7, #12]
 800bcaa:	761a      	strb	r2, [r3, #24]
	}
 800bcac:	bf00      	nop
 800bcae:	3710      	adds	r7, #16
 800bcb0:	46bd      	mov	sp, r7
 800bcb2:	bd80      	pop	{r7, pc}

0800bcb4 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE19_M_destructive_copyIbEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 800bcb4:	b580      	push	{r7, lr}
 800bcb6:	b084      	sub	sp, #16
 800bcb8:	af00      	add	r7, sp, #0
 800bcba:	60f8      	str	r0, [r7, #12]
 800bcbc:	460b      	mov	r3, r1
 800bcbe:	607a      	str	r2, [r7, #4]
 800bcc0:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 800bcc2:	68fb      	ldr	r3, [r7, #12]
 800bcc4:	4618      	mov	r0, r3
 800bcc6:	f7fc fe1f 	bl	8008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 800bcca:	6879      	ldr	r1, [r7, #4]
 800bccc:	68f8      	ldr	r0, [r7, #12]
 800bcce:	f000 ff39 	bl	800cb44 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKbEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 800bcd2:	897b      	ldrh	r3, [r7, #10]
 800bcd4:	b2da      	uxtb	r2, r3
 800bcd6:	68fb      	ldr	r3, [r7, #12]
 800bcd8:	761a      	strb	r2, [r3, #24]
	}
 800bcda:	bf00      	nop
 800bcdc:	3710      	adds	r7, #16
 800bcde:	46bd      	mov	sp, r7
 800bce0:	bd80      	pop	{r7, pc}

0800bce2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1ILj3EJRKS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 800bce2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bce4:	b085      	sub	sp, #20
 800bce6:	af00      	add	r7, sp, #0
 800bce8:	60f8      	str	r0, [r7, #12]
 800bcea:	7239      	strb	r1, [r7, #8]
 800bcec:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 800bcee:	68fc      	ldr	r4, [r7, #12]
 800bcf0:	6878      	ldr	r0, [r7, #4]
 800bcf2:	f7fe fe55 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800bcf6:	4603      	mov	r3, r0
 800bcf8:	461a      	mov	r2, r3
 800bcfa:	4631      	mov	r1, r6
 800bcfc:	4620      	mov	r0, r4
 800bcfe:	f000 ff80 	bl	800cc02 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 800bd02:	4629      	mov	r1, r5
 800bd04:	68f8      	ldr	r0, [r7, #12]
 800bd06:	f000 ff91 	bl	800cc2c <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 800bd0a:	68fb      	ldr	r3, [r7, #12]
 800bd0c:	4618      	mov	r0, r3
 800bd0e:	3714      	adds	r7, #20
 800bd10:	46bd      	mov	sp, r7
 800bd12:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bd14 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1IRKS5_vvS5_vEEOT_>:
	variant(_Tp&& __t)
 800bd14:	b590      	push	{r4, r7, lr}
 800bd16:	b083      	sub	sp, #12
 800bd18:	af00      	add	r7, sp, #0
 800bd1a:	6078      	str	r0, [r7, #4]
 800bd1c:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 800bd1e:	6838      	ldr	r0, [r7, #0]
 800bd20:	f7fe fe3e 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800bd24:	4603      	mov	r3, r0
 800bd26:	461a      	mov	r2, r3
 800bd28:	4621      	mov	r1, r4
 800bd2a:	6878      	ldr	r0, [r7, #4]
 800bd2c:	f7ff ffd9 	bl	800bce2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1ILj3EJRKS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800bd30:	687b      	ldr	r3, [r7, #4]
 800bd32:	4618      	mov	r0, r3
 800bd34:	370c      	adds	r7, #12
 800bd36:	46bd      	mov	sp, r7
 800bd38:	bd90      	pop	{r4, r7, pc}

0800bd3a <_ZN9__gnu_cxx14__alloc_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES6_E27_S_propagate_on_copy_assignEv>:
    static constexpr bool _S_propagate_on_copy_assign()
 800bd3a:	b480      	push	{r7}
 800bd3c:	af00      	add	r7, sp, #0
    { return _Base_type::propagate_on_container_copy_assignment::value; }
 800bd3e:	2300      	movs	r3, #0
 800bd40:	4618      	mov	r0, r3
 800bd42:	46bd      	mov	sp, r7
 800bd44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd48:	4770      	bx	lr
	...

0800bd4c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>:
      return __first;
    }

  template<typename _Tp, typename _Alloc>
    vector<_Tp, _Alloc>&
    vector<_Tp, _Alloc>::
 800bd4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd4e:	b085      	sub	sp, #20
 800bd50:	af00      	add	r7, sp, #0
 800bd52:	6078      	str	r0, [r7, #4]
 800bd54:	6039      	str	r1, [r7, #0]
    operator=(const vector<_Tp, _Alloc>& __x)
    {
      if (&__x != this)
 800bd56:	683a      	ldr	r2, [r7, #0]
 800bd58:	687b      	ldr	r3, [r7, #4]
 800bd5a:	429a      	cmp	r2, r3
 800bd5c:	f000 80f8 	beq.w	800bf50 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x204>
	{
	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
#if __cplusplus >= 201103L
	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 800bd60:	f7ff ffeb 	bl	800bd3a <_ZN9__gnu_cxx14__alloc_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES6_E27_S_propagate_on_copy_assignEv>
 800bd64:	4603      	mov	r3, r0
 800bd66:	2b00      	cmp	r3, #0
 800bd68:	d046      	beq.n	800bdf8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xac>
	    {
	      if (!_Alloc_traits::_S_always_equal()
 800bd6a:	f7fa fd21 	bl	80067b0 <_ZN9__gnu_cxx14__alloc_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES6_E15_S_always_equalEv>
 800bd6e:	4603      	mov	r3, r0
 800bd70:	f083 0301 	eor.w	r3, r3, #1
 800bd74:	b2db      	uxtb	r3, r3
	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 800bd76:	2b00      	cmp	r3, #0
 800bd78:	d012      	beq.n	800bda0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x54>
 800bd7a:	687b      	ldr	r3, [r7, #4]
 800bd7c:	4618      	mov	r0, r3
 800bd7e:	f000 ff61 	bl	800cc44 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800bd82:	4604      	mov	r4, r0
 800bd84:	683b      	ldr	r3, [r7, #0]
 800bd86:	4618      	mov	r0, r3
 800bd88:	f000 ff67 	bl	800cc5a <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800bd8c:	4603      	mov	r3, r0
 800bd8e:	4619      	mov	r1, r3
 800bd90:	4620      	mov	r0, r4
 800bd92:	f000 ff6d 	bl	800cc70 <_ZStneRKSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_>
 800bd96:	4603      	mov	r3, r0
 800bd98:	2b00      	cmp	r3, #0
 800bd9a:	d001      	beq.n	800bda0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x54>
 800bd9c:	2301      	movs	r3, #1
 800bd9e:	e000      	b.n	800bda2 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x56>
 800bda0:	2300      	movs	r3, #0
	      if (!_Alloc_traits::_S_always_equal()
 800bda2:	2b00      	cmp	r3, #0
 800bda4:	d01a      	beq.n	800bddc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x90>
	        {
		  // replacement allocator cannot free existing storage
		  this->clear();
 800bda6:	6878      	ldr	r0, [r7, #4]
 800bda8:	f000 ff6e 	bl	800cc88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv>
		  _M_deallocate(this->_M_impl._M_start,
 800bdac:	6878      	ldr	r0, [r7, #4]
 800bdae:	687b      	ldr	r3, [r7, #4]
 800bdb0:	6819      	ldr	r1, [r3, #0]
				this->_M_impl._M_end_of_storage
 800bdb2:	687b      	ldr	r3, [r7, #4]
 800bdb4:	689a      	ldr	r2, [r3, #8]
				- this->_M_impl._M_start);
 800bdb6:	687b      	ldr	r3, [r7, #4]
 800bdb8:	681b      	ldr	r3, [r3, #0]
 800bdba:	1ad3      	subs	r3, r2, r3
 800bdbc:	10db      	asrs	r3, r3, #3
 800bdbe:	4a67      	ldr	r2, [pc, #412]	; (800bf5c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x210>)
 800bdc0:	fb02 f303 	mul.w	r3, r2, r3
		  _M_deallocate(this->_M_impl._M_start,
 800bdc4:	461a      	mov	r2, r3
 800bdc6:	f000 ff6d 	bl	800cca4 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_j>
		  this->_M_impl._M_start = nullptr;
 800bdca:	687b      	ldr	r3, [r7, #4]
 800bdcc:	2200      	movs	r2, #0
 800bdce:	601a      	str	r2, [r3, #0]
		  this->_M_impl._M_finish = nullptr;
 800bdd0:	687b      	ldr	r3, [r7, #4]
 800bdd2:	2200      	movs	r2, #0
 800bdd4:	605a      	str	r2, [r3, #4]
		  this->_M_impl._M_end_of_storage = nullptr;
 800bdd6:	687b      	ldr	r3, [r7, #4]
 800bdd8:	2200      	movs	r2, #0
 800bdda:	609a      	str	r2, [r3, #8]
		}
	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 800bddc:	687b      	ldr	r3, [r7, #4]
 800bdde:	4618      	mov	r0, r3
 800bde0:	f000 ff30 	bl	800cc44 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800bde4:	4604      	mov	r4, r0
 800bde6:	683b      	ldr	r3, [r7, #0]
 800bde8:	4618      	mov	r0, r3
 800bdea:	f000 ff36 	bl	800cc5a <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800bdee:	4603      	mov	r3, r0
 800bdf0:	4619      	mov	r1, r3
 800bdf2:	4620      	mov	r0, r4
 800bdf4:	f000 ff69 	bl	800ccca <_ZSt15__alloc_on_copyISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_RKS7_>
				   __x._M_get_Tp_allocator());
	    }
#endif
	  const size_type __xlen = __x.size();
 800bdf8:	6838      	ldr	r0, [r7, #0]
 800bdfa:	f000 ff75 	bl	800cce8 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
 800bdfe:	60f8      	str	r0, [r7, #12]
	  if (__xlen > capacity())
 800be00:	6878      	ldr	r0, [r7, #4]
 800be02:	f000 ff87 	bl	800cd14 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8capacityEv>
 800be06:	4602      	mov	r2, r0
 800be08:	68fb      	ldr	r3, [r7, #12]
 800be0a:	4293      	cmp	r3, r2
 800be0c:	bf8c      	ite	hi
 800be0e:	2301      	movhi	r3, #1
 800be10:	2300      	movls	r3, #0
 800be12:	b2db      	uxtb	r3, r3
 800be14:	2b00      	cmp	r3, #0
 800be16:	d038      	beq.n	800be8a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x13e>
	    {
	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 800be18:	6838      	ldr	r0, [r7, #0]
 800be1a:	f000 ff91 	bl	800cd40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
 800be1e:	4604      	mov	r4, r0
 800be20:	6838      	ldr	r0, [r7, #0]
 800be22:	f000 ffa1 	bl	800cd68 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
 800be26:	4603      	mov	r3, r0
 800be28:	4622      	mov	r2, r4
 800be2a:	68f9      	ldr	r1, [r7, #12]
 800be2c:	6878      	ldr	r0, [r7, #4]
 800be2e:	f000 ffaf 	bl	800cd90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_jT_SF_>
 800be32:	60b8      	str	r0, [r7, #8]
						   __x.end());
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800be34:	687b      	ldr	r3, [r7, #4]
 800be36:	681c      	ldr	r4, [r3, #0]
 800be38:	687b      	ldr	r3, [r7, #4]
 800be3a:	685d      	ldr	r5, [r3, #4]
			    _M_get_Tp_allocator());
 800be3c:	687b      	ldr	r3, [r7, #4]
 800be3e:	4618      	mov	r0, r3
 800be40:	f000 ff00 	bl	800cc44 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800be44:	4603      	mov	r3, r0
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800be46:	461a      	mov	r2, r3
 800be48:	4629      	mov	r1, r5
 800be4a:	4620      	mov	r0, r4
 800be4c:	f000 ffbc 	bl	800cdc8 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E>
	      _M_deallocate(this->_M_impl._M_start,
 800be50:	6878      	ldr	r0, [r7, #4]
 800be52:	687b      	ldr	r3, [r7, #4]
 800be54:	6819      	ldr	r1, [r3, #0]
			    this->_M_impl._M_end_of_storage
 800be56:	687b      	ldr	r3, [r7, #4]
 800be58:	689a      	ldr	r2, [r3, #8]
			    - this->_M_impl._M_start);
 800be5a:	687b      	ldr	r3, [r7, #4]
 800be5c:	681b      	ldr	r3, [r3, #0]
 800be5e:	1ad3      	subs	r3, r2, r3
 800be60:	10db      	asrs	r3, r3, #3
 800be62:	4a3e      	ldr	r2, [pc, #248]	; (800bf5c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x210>)
 800be64:	fb02 f303 	mul.w	r3, r2, r3
	      _M_deallocate(this->_M_impl._M_start,
 800be68:	461a      	mov	r2, r3
 800be6a:	f000 ff1b 	bl	800cca4 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_j>
	      this->_M_impl._M_start = __tmp;
 800be6e:	687b      	ldr	r3, [r7, #4]
 800be70:	68ba      	ldr	r2, [r7, #8]
 800be72:	601a      	str	r2, [r3, #0]
	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 800be74:	687b      	ldr	r3, [r7, #4]
 800be76:	6819      	ldr	r1, [r3, #0]
 800be78:	68fa      	ldr	r2, [r7, #12]
 800be7a:	4613      	mov	r3, r2
 800be7c:	005b      	lsls	r3, r3, #1
 800be7e:	4413      	add	r3, r2
 800be80:	00db      	lsls	r3, r3, #3
 800be82:	18ca      	adds	r2, r1, r3
 800be84:	687b      	ldr	r3, [r7, #4]
 800be86:	609a      	str	r2, [r3, #8]
 800be88:	e058      	b.n	800bf3c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1f0>
	    }
	  else if (size() >= __xlen)
 800be8a:	6878      	ldr	r0, [r7, #4]
 800be8c:	f000 ff2c 	bl	800cce8 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
 800be90:	4602      	mov	r2, r0
 800be92:	68fb      	ldr	r3, [r7, #12]
 800be94:	4293      	cmp	r3, r2
 800be96:	bf94      	ite	ls
 800be98:	2301      	movls	r3, #1
 800be9a:	2300      	movhi	r3, #0
 800be9c:	b2db      	uxtb	r3, r3
 800be9e:	2b00      	cmp	r3, #0
 800bea0:	d020      	beq.n	800bee4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x198>
	    {
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 800bea2:	6838      	ldr	r0, [r7, #0]
 800bea4:	f000 ff4c 	bl	800cd40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
 800bea8:	4604      	mov	r4, r0
 800beaa:	6838      	ldr	r0, [r7, #0]
 800beac:	f000 ff5c 	bl	800cd68 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
 800beb0:	4605      	mov	r5, r0
 800beb2:	6878      	ldr	r0, [r7, #4]
 800beb4:	f000 ff96 	bl	800cde4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
 800beb8:	4603      	mov	r3, r0
 800beba:	461a      	mov	r2, r3
 800bebc:	4629      	mov	r1, r5
 800bebe:	4620      	mov	r0, r4
 800bec0:	f000 ffa0 	bl	800ce04 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET0_T_SH_SG_>
 800bec4:	4604      	mov	r4, r0
 800bec6:	6878      	ldr	r0, [r7, #4]
 800bec8:	f000 ffb4 	bl	800ce34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
 800becc:	4605      	mov	r5, r0
			    end(), _M_get_Tp_allocator());
 800bece:	687b      	ldr	r3, [r7, #4]
 800bed0:	4618      	mov	r0, r3
 800bed2:	f000 feb7 	bl	800cc44 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800bed6:	4603      	mov	r3, r0
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 800bed8:	461a      	mov	r2, r3
 800beda:	4629      	mov	r1, r5
 800bedc:	4620      	mov	r0, r4
 800bede:	f000 ffba 	bl	800ce56 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_EvT_SD_RSaIT0_E>
 800bee2:	e02b      	b.n	800bf3c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1f0>
	    }
	  else
	    {
	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 800bee4:	683b      	ldr	r3, [r7, #0]
 800bee6:	681d      	ldr	r5, [r3, #0]
 800bee8:	683b      	ldr	r3, [r7, #0]
 800beea:	681c      	ldr	r4, [r3, #0]
 800beec:	6878      	ldr	r0, [r7, #4]
 800beee:	f000 fefb 	bl	800cce8 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
 800bef2:	4602      	mov	r2, r0
 800bef4:	4613      	mov	r3, r2
 800bef6:	005b      	lsls	r3, r3, #1
 800bef8:	4413      	add	r3, r2
 800befa:	00db      	lsls	r3, r3, #3
 800befc:	18e1      	adds	r1, r4, r3
 800befe:	687b      	ldr	r3, [r7, #4]
 800bf00:	681b      	ldr	r3, [r3, #0]
 800bf02:	461a      	mov	r2, r3
 800bf04:	4628      	mov	r0, r5
 800bf06:	f000 ffb4 	bl	800ce72 <_ZSt4copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>
			this->_M_impl._M_start);
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 800bf0a:	683b      	ldr	r3, [r7, #0]
 800bf0c:	681c      	ldr	r4, [r3, #0]
 800bf0e:	6878      	ldr	r0, [r7, #4]
 800bf10:	f000 feea 	bl	800cce8 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
 800bf14:	4602      	mov	r2, r0
 800bf16:	4613      	mov	r3, r2
 800bf18:	005b      	lsls	r3, r3, #1
 800bf1a:	4413      	add	r3, r2
 800bf1c:	00db      	lsls	r3, r3, #3
 800bf1e:	441c      	add	r4, r3
					  __x._M_impl._M_finish,
 800bf20:	683b      	ldr	r3, [r7, #0]
 800bf22:	685d      	ldr	r5, [r3, #4]
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 800bf24:	687b      	ldr	r3, [r7, #4]
 800bf26:	685e      	ldr	r6, [r3, #4]
					  this->_M_impl._M_finish,
					  _M_get_Tp_allocator());
 800bf28:	687b      	ldr	r3, [r7, #4]
 800bf2a:	4618      	mov	r0, r3
 800bf2c:	f000 fe8a 	bl	800cc44 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800bf30:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 800bf32:	4632      	mov	r2, r6
 800bf34:	4629      	mov	r1, r5
 800bf36:	4620      	mov	r0, r4
 800bf38:	f000 ffb3 	bl	800cea2 <_ZSt22__uninitialized_copy_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S5_ET0_T_S8_S7_RSaIT1_E>
	    }
	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 800bf3c:	687b      	ldr	r3, [r7, #4]
 800bf3e:	6819      	ldr	r1, [r3, #0]
 800bf40:	68fa      	ldr	r2, [r7, #12]
 800bf42:	4613      	mov	r3, r2
 800bf44:	005b      	lsls	r3, r3, #1
 800bf46:	4413      	add	r3, r2
 800bf48:	00db      	lsls	r3, r3, #3
 800bf4a:	18ca      	adds	r2, r1, r3
 800bf4c:	687b      	ldr	r3, [r7, #4]
 800bf4e:	605a      	str	r2, [r3, #4]
	}
      return *this;
 800bf50:	687b      	ldr	r3, [r7, #4]
    }
 800bf52:	4618      	mov	r0, r3
 800bf54:	3714      	adds	r7, #20
 800bf56:	46bd      	mov	sp, r7
 800bf58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bf5a:	bf00      	nop
 800bf5c:	aaaaaaab 	.word	0xaaaaaaab

0800bf60 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1ILj4EJRKS8_ES8_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 800bf60:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bf62:	b085      	sub	sp, #20
 800bf64:	af00      	add	r7, sp, #0
 800bf66:	60f8      	str	r0, [r7, #12]
 800bf68:	7239      	strb	r1, [r7, #8]
 800bf6a:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 800bf6c:	68fc      	ldr	r4, [r7, #12]
 800bf6e:	6878      	ldr	r0, [r7, #4]
 800bf70:	f7fe fd4b 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800bf74:	4603      	mov	r3, r0
 800bf76:	461a      	mov	r2, r3
 800bf78:	4631      	mov	r1, r6
 800bf7a:	4620      	mov	r0, r4
 800bf7c:	f000 ffe6 	bl	800cf4c <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>
 800bf80:	4629      	mov	r1, r5
 800bf82:	68f8      	ldr	r0, [r7, #12]
 800bf84:	f000 fe52 	bl	800cc2c <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 800bf88:	68fb      	ldr	r3, [r7, #12]
 800bf8a:	4618      	mov	r0, r3
 800bf8c:	3714      	adds	r7, #20
 800bf8e:	46bd      	mov	sp, r7
 800bf90:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bf92 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1IRKS8_vvS8_vEEOT_>:
	variant(_Tp&& __t)
 800bf92:	b590      	push	{r4, r7, lr}
 800bf94:	b083      	sub	sp, #12
 800bf96:	af00      	add	r7, sp, #0
 800bf98:	6078      	str	r0, [r7, #4]
 800bf9a:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 800bf9c:	6838      	ldr	r0, [r7, #0]
 800bf9e:	f7fe fd34 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800bfa2:	4603      	mov	r3, r0
 800bfa4:	461a      	mov	r2, r3
 800bfa6:	4621      	mov	r1, r4
 800bfa8:	6878      	ldr	r0, [r7, #4]
 800bfaa:	f7ff ffd9 	bl	800bf60 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1ILj4EJRKS8_ES8_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800bfae:	687b      	ldr	r3, [r7, #4]
 800bfb0:	4618      	mov	r0, r3
 800bfb2:	370c      	adds	r7, #12
 800bfb4:	46bd      	mov	sp, r7
 800bfb6:	bd90      	pop	{r4, r7, pc}

0800bfb8 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E27_S_propagate_on_copy_assignEv>:
    static constexpr bool _S_propagate_on_copy_assign()
 800bfb8:	b480      	push	{r7}
 800bfba:	af00      	add	r7, sp, #0
    { return _Base_type::propagate_on_container_copy_assignment::value; }
 800bfbc:	2300      	movs	r3, #0
 800bfbe:	4618      	mov	r0, r3
 800bfc0:	46bd      	mov	sp, r7
 800bfc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfc6:	4770      	bx	lr

0800bfc8 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_>:
    vector<_Tp, _Alloc>::
 800bfc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bfca:	b085      	sub	sp, #20
 800bfcc:	af00      	add	r7, sp, #0
 800bfce:	6078      	str	r0, [r7, #4]
 800bfd0:	6039      	str	r1, [r7, #0]
      if (&__x != this)
 800bfd2:	683a      	ldr	r2, [r7, #0]
 800bfd4:	687b      	ldr	r3, [r7, #4]
 800bfd6:	429a      	cmp	r2, r3
 800bfd8:	f000 80e6 	beq.w	800c1a8 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1e0>
	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 800bfdc:	f7ff ffec 	bl	800bfb8 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E27_S_propagate_on_copy_assignEv>
 800bfe0:	4603      	mov	r3, r0
 800bfe2:	2b00      	cmp	r3, #0
 800bfe4:	d043      	beq.n	800c06e <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0xa6>
	      if (!_Alloc_traits::_S_always_equal()
 800bfe6:	f7fa fbeb 	bl	80067c0 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E15_S_always_equalEv>
 800bfea:	4603      	mov	r3, r0
 800bfec:	f083 0301 	eor.w	r3, r3, #1
 800bff0:	b2db      	uxtb	r3, r3
	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 800bff2:	2b00      	cmp	r3, #0
 800bff4:	d012      	beq.n	800c01c <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x54>
 800bff6:	687b      	ldr	r3, [r7, #4]
 800bff8:	4618      	mov	r0, r3
 800bffa:	f000 ffbc 	bl	800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800bffe:	4604      	mov	r4, r0
 800c000:	683b      	ldr	r3, [r7, #0]
 800c002:	4618      	mov	r0, r3
 800c004:	f000 ffc2 	bl	800cf8c <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800c008:	4603      	mov	r3, r0
 800c00a:	4619      	mov	r1, r3
 800c00c:	4620      	mov	r0, r4
 800c00e:	f000 ffc8 	bl	800cfa2 <_ZStneRKSaI6SymbolES2_>
 800c012:	4603      	mov	r3, r0
 800c014:	2b00      	cmp	r3, #0
 800c016:	d001      	beq.n	800c01c <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x54>
 800c018:	2301      	movs	r3, #1
 800c01a:	e000      	b.n	800c01e <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x56>
 800c01c:	2300      	movs	r3, #0
	      if (!_Alloc_traits::_S_always_equal()
 800c01e:	2b00      	cmp	r3, #0
 800c020:	d017      	beq.n	800c052 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x8a>
		  this->clear();
 800c022:	6878      	ldr	r0, [r7, #4]
 800c024:	f000 ffc9 	bl	800cfba <_ZNSt6vectorI6SymbolSaIS0_EE5clearEv>
		  _M_deallocate(this->_M_impl._M_start,
 800c028:	6878      	ldr	r0, [r7, #4]
 800c02a:	687b      	ldr	r3, [r7, #4]
 800c02c:	6819      	ldr	r1, [r3, #0]
				this->_M_impl._M_end_of_storage
 800c02e:	687b      	ldr	r3, [r7, #4]
 800c030:	689a      	ldr	r2, [r3, #8]
				- this->_M_impl._M_start);
 800c032:	687b      	ldr	r3, [r7, #4]
 800c034:	681b      	ldr	r3, [r3, #0]
 800c036:	1ad3      	subs	r3, r2, r3
 800c038:	115b      	asrs	r3, r3, #5
		  _M_deallocate(this->_M_impl._M_start,
 800c03a:	461a      	mov	r2, r3
 800c03c:	f000 ffcb 	bl	800cfd6 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
		  this->_M_impl._M_start = nullptr;
 800c040:	687b      	ldr	r3, [r7, #4]
 800c042:	2200      	movs	r2, #0
 800c044:	601a      	str	r2, [r3, #0]
		  this->_M_impl._M_finish = nullptr;
 800c046:	687b      	ldr	r3, [r7, #4]
 800c048:	2200      	movs	r2, #0
 800c04a:	605a      	str	r2, [r3, #4]
		  this->_M_impl._M_end_of_storage = nullptr;
 800c04c:	687b      	ldr	r3, [r7, #4]
 800c04e:	2200      	movs	r2, #0
 800c050:	609a      	str	r2, [r3, #8]
	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 800c052:	687b      	ldr	r3, [r7, #4]
 800c054:	4618      	mov	r0, r3
 800c056:	f000 ff8e 	bl	800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800c05a:	4604      	mov	r4, r0
 800c05c:	683b      	ldr	r3, [r7, #0]
 800c05e:	4618      	mov	r0, r3
 800c060:	f000 ff94 	bl	800cf8c <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800c064:	4603      	mov	r3, r0
 800c066:	4619      	mov	r1, r3
 800c068:	4620      	mov	r0, r4
 800c06a:	f000 ffc7 	bl	800cffc <_ZSt15__alloc_on_copyISaI6SymbolEEvRT_RKS2_>
	  const size_type __xlen = __x.size();
 800c06e:	6838      	ldr	r0, [r7, #0]
 800c070:	f000 ffd2 	bl	800d018 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 800c074:	60f8      	str	r0, [r7, #12]
	  if (__xlen > capacity())
 800c076:	6878      	ldr	r0, [r7, #4]
 800c078:	f000 ffde 	bl	800d038 <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>
 800c07c:	4602      	mov	r2, r0
 800c07e:	68fb      	ldr	r3, [r7, #12]
 800c080:	4293      	cmp	r3, r2
 800c082:	bf8c      	ite	hi
 800c084:	2301      	movhi	r3, #1
 800c086:	2300      	movls	r3, #0
 800c088:	b2db      	uxtb	r3, r3
 800c08a:	2b00      	cmp	r3, #0
 800c08c:	d032      	beq.n	800c0f4 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x12c>
	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 800c08e:	6838      	ldr	r0, [r7, #0]
 800c090:	f000 ffe2 	bl	800d058 <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 800c094:	4604      	mov	r4, r0
 800c096:	6838      	ldr	r0, [r7, #0]
 800c098:	f000 fff2 	bl	800d080 <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 800c09c:	4603      	mov	r3, r0
 800c09e:	4622      	mov	r2, r4
 800c0a0:	68f9      	ldr	r1, [r7, #12]
 800c0a2:	6878      	ldr	r0, [r7, #4]
 800c0a4:	f001 f800 	bl	800d0a8 <_ZNSt6vectorI6SymbolSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_>
 800c0a8:	60b8      	str	r0, [r7, #8]
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800c0aa:	687b      	ldr	r3, [r7, #4]
 800c0ac:	681c      	ldr	r4, [r3, #0]
 800c0ae:	687b      	ldr	r3, [r7, #4]
 800c0b0:	685d      	ldr	r5, [r3, #4]
			    _M_get_Tp_allocator());
 800c0b2:	687b      	ldr	r3, [r7, #4]
 800c0b4:	4618      	mov	r0, r3
 800c0b6:	f000 ff5e 	bl	800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800c0ba:	4603      	mov	r3, r0
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800c0bc:	461a      	mov	r2, r3
 800c0be:	4629      	mov	r1, r5
 800c0c0:	4620      	mov	r0, r4
 800c0c2:	f001 f80d 	bl	800d0e0 <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
	      _M_deallocate(this->_M_impl._M_start,
 800c0c6:	6878      	ldr	r0, [r7, #4]
 800c0c8:	687b      	ldr	r3, [r7, #4]
 800c0ca:	6819      	ldr	r1, [r3, #0]
			    this->_M_impl._M_end_of_storage
 800c0cc:	687b      	ldr	r3, [r7, #4]
 800c0ce:	689a      	ldr	r2, [r3, #8]
			    - this->_M_impl._M_start);
 800c0d0:	687b      	ldr	r3, [r7, #4]
 800c0d2:	681b      	ldr	r3, [r3, #0]
 800c0d4:	1ad3      	subs	r3, r2, r3
 800c0d6:	115b      	asrs	r3, r3, #5
	      _M_deallocate(this->_M_impl._M_start,
 800c0d8:	461a      	mov	r2, r3
 800c0da:	f000 ff7c 	bl	800cfd6 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
	      this->_M_impl._M_start = __tmp;
 800c0de:	687b      	ldr	r3, [r7, #4]
 800c0e0:	68ba      	ldr	r2, [r7, #8]
 800c0e2:	601a      	str	r2, [r3, #0]
	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 800c0e4:	687b      	ldr	r3, [r7, #4]
 800c0e6:	681a      	ldr	r2, [r3, #0]
 800c0e8:	68fb      	ldr	r3, [r7, #12]
 800c0ea:	015b      	lsls	r3, r3, #5
 800c0ec:	441a      	add	r2, r3
 800c0ee:	687b      	ldr	r3, [r7, #4]
 800c0f0:	609a      	str	r2, [r3, #8]
 800c0f2:	e052      	b.n	800c19a <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1d2>
	  else if (size() >= __xlen)
 800c0f4:	6878      	ldr	r0, [r7, #4]
 800c0f6:	f000 ff8f 	bl	800d018 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 800c0fa:	4602      	mov	r2, r0
 800c0fc:	68fb      	ldr	r3, [r7, #12]
 800c0fe:	4293      	cmp	r3, r2
 800c100:	bf94      	ite	ls
 800c102:	2301      	movls	r3, #1
 800c104:	2300      	movhi	r3, #0
 800c106:	b2db      	uxtb	r3, r3
 800c108:	2b00      	cmp	r3, #0
 800c10a:	d020      	beq.n	800c14e <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x186>
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 800c10c:	6838      	ldr	r0, [r7, #0]
 800c10e:	f000 ffa3 	bl	800d058 <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 800c112:	4604      	mov	r4, r0
 800c114:	6838      	ldr	r0, [r7, #0]
 800c116:	f000 ffb3 	bl	800d080 <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 800c11a:	4605      	mov	r5, r0
 800c11c:	6878      	ldr	r0, [r7, #4]
 800c11e:	f000 ffed 	bl	800d0fc <_ZNSt6vectorI6SymbolSaIS0_EE5beginEv>
 800c122:	4603      	mov	r3, r0
 800c124:	461a      	mov	r2, r3
 800c126:	4629      	mov	r1, r5
 800c128:	4620      	mov	r0, r4
 800c12a:	f000 fff7 	bl	800d11c <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_>
 800c12e:	4604      	mov	r4, r0
 800c130:	6878      	ldr	r0, [r7, #4]
 800c132:	f001 f80b 	bl	800d14c <_ZNSt6vectorI6SymbolSaIS0_EE3endEv>
 800c136:	4605      	mov	r5, r0
			    end(), _M_get_Tp_allocator());
 800c138:	687b      	ldr	r3, [r7, #4]
 800c13a:	4618      	mov	r0, r3
 800c13c:	f000 ff1b 	bl	800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800c140:	4603      	mov	r3, r0
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 800c142:	461a      	mov	r2, r3
 800c144:	4629      	mov	r1, r5
 800c146:	4620      	mov	r0, r4
 800c148:	f001 f811 	bl	800d16e <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E>
 800c14c:	e025      	b.n	800c19a <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1d2>
	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 800c14e:	683b      	ldr	r3, [r7, #0]
 800c150:	681d      	ldr	r5, [r3, #0]
 800c152:	683b      	ldr	r3, [r7, #0]
 800c154:	681c      	ldr	r4, [r3, #0]
 800c156:	6878      	ldr	r0, [r7, #4]
 800c158:	f000 ff5e 	bl	800d018 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 800c15c:	4603      	mov	r3, r0
 800c15e:	015b      	lsls	r3, r3, #5
 800c160:	18e1      	adds	r1, r4, r3
 800c162:	687b      	ldr	r3, [r7, #4]
 800c164:	681b      	ldr	r3, [r3, #0]
 800c166:	461a      	mov	r2, r3
 800c168:	4628      	mov	r0, r5
 800c16a:	f001 f80e 	bl	800d18a <_ZSt4copyIP6SymbolS1_ET0_T_S3_S2_>
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 800c16e:	683b      	ldr	r3, [r7, #0]
 800c170:	681c      	ldr	r4, [r3, #0]
 800c172:	6878      	ldr	r0, [r7, #4]
 800c174:	f000 ff50 	bl	800d018 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 800c178:	4603      	mov	r3, r0
 800c17a:	015b      	lsls	r3, r3, #5
 800c17c:	441c      	add	r4, r3
					  __x._M_impl._M_finish,
 800c17e:	683b      	ldr	r3, [r7, #0]
 800c180:	685d      	ldr	r5, [r3, #4]
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 800c182:	687b      	ldr	r3, [r7, #4]
 800c184:	685e      	ldr	r6, [r3, #4]
					  _M_get_Tp_allocator());
 800c186:	687b      	ldr	r3, [r7, #4]
 800c188:	4618      	mov	r0, r3
 800c18a:	f000 fef4 	bl	800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800c18e:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 800c190:	4632      	mov	r2, r6
 800c192:	4629      	mov	r1, r5
 800c194:	4620      	mov	r0, r4
 800c196:	f001 f810 	bl	800d1ba <_ZSt22__uninitialized_copy_aIP6SymbolS1_S0_ET0_T_S3_S2_RSaIT1_E>
	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 800c19a:	687b      	ldr	r3, [r7, #4]
 800c19c:	681a      	ldr	r2, [r3, #0]
 800c19e:	68fb      	ldr	r3, [r7, #12]
 800c1a0:	015b      	lsls	r3, r3, #5
 800c1a2:	441a      	add	r2, r3
 800c1a4:	687b      	ldr	r3, [r7, #4]
 800c1a6:	605a      	str	r2, [r3, #4]
      return *this;
 800c1a8:	687b      	ldr	r3, [r7, #4]
    }
 800c1aa:	4618      	mov	r0, r3
 800c1ac:	3714      	adds	r7, #20
 800c1ae:	46bd      	mov	sp, r7
 800c1b0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c1b2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1ILj5EJRKSB_ESB_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 800c1b2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c1b4:	b085      	sub	sp, #20
 800c1b6:	af00      	add	r7, sp, #0
 800c1b8:	60f8      	str	r0, [r7, #12]
 800c1ba:	7239      	strb	r1, [r7, #8]
 800c1bc:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 800c1be:	68fc      	ldr	r4, [r7, #12]
 800c1c0:	6878      	ldr	r0, [r7, #4]
 800c1c2:	f7fe fc57 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800c1c6:	4603      	mov	r3, r0
 800c1c8:	461a      	mov	r2, r3
 800c1ca:	4631      	mov	r1, r6
 800c1cc:	4620      	mov	r0, r4
 800c1ce:	f001 f849 	bl	800d264 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>
 800c1d2:	4629      	mov	r1, r5
 800c1d4:	68f8      	ldr	r0, [r7, #12]
 800c1d6:	f000 fd29 	bl	800cc2c <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 800c1da:	68fb      	ldr	r3, [r7, #12]
 800c1dc:	4618      	mov	r0, r3
 800c1de:	3714      	adds	r7, #20
 800c1e0:	46bd      	mov	sp, r7
 800c1e2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c1e4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1IRKSB_vvSB_vEEOT_>:
	variant(_Tp&& __t)
 800c1e4:	b590      	push	{r4, r7, lr}
 800c1e6:	b083      	sub	sp, #12
 800c1e8:	af00      	add	r7, sp, #0
 800c1ea:	6078      	str	r0, [r7, #4]
 800c1ec:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 800c1ee:	6838      	ldr	r0, [r7, #0]
 800c1f0:	f7fe fc40 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800c1f4:	4603      	mov	r3, r0
 800c1f6:	461a      	mov	r2, r3
 800c1f8:	4621      	mov	r1, r4
 800c1fa:	6878      	ldr	r0, [r7, #4]
 800c1fc:	f7ff ffd9 	bl	800c1b2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1ILj5EJRKSB_ESB_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800c200:	687b      	ldr	r3, [r7, #4]
 800c202:	4618      	mov	r0, r3
 800c204:	370c      	adds	r7, #12
 800c206:	46bd      	mov	sp, r7
 800c208:	bd90      	pop	{r4, r7, pc}

0800c20a <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESG_>:
	__do_visit([](auto&& __this_mem) mutable
 800c20a:	b590      	push	{r4, r7, lr}
 800c20c:	b083      	sub	sp, #12
 800c20e:	af00      	add	r7, sp, #0
 800c210:	6078      	str	r0, [r7, #4]
 800c212:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800c214:	6838      	ldr	r0, [r7, #0]
 800c216:	f7fa f874 	bl	8006302 <_ZSt11__addressofIiEPT_RS0_>
 800c21a:	4603      	mov	r3, r0
 800c21c:	4618      	mov	r0, r3
 800c21e:	f7fa f87b 	bl	8006318 <_ZSt8_DestroyIiEvPT_>
	    return {};
 800c222:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800c224:	4618      	mov	r0, r3
 800c226:	370c      	adds	r7, #12
 800c228:	46bd      	mov	sp, r7
 800c22a:	bd90      	pop	{r4, r7, pc}

0800c22c <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESG_>:
 800c22c:	b590      	push	{r4, r7, lr}
 800c22e:	b083      	sub	sp, #12
 800c230:	af00      	add	r7, sp, #0
 800c232:	6078      	str	r0, [r7, #4]
 800c234:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800c236:	6838      	ldr	r0, [r7, #0]
 800c238:	f7fa f878 	bl	800632c <_ZSt11__addressofIfEPT_RS0_>
 800c23c:	4603      	mov	r3, r0
 800c23e:	4618      	mov	r0, r3
 800c240:	f7fa f87f 	bl	8006342 <_ZSt8_DestroyIfEvPT_>
	    return {};
 800c244:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800c246:	4618      	mov	r0, r3
 800c248:	370c      	adds	r7, #12
 800c24a:	46bd      	mov	sp, r7
 800c24c:	bd90      	pop	{r4, r7, pc}

0800c24e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESG_>:
 800c24e:	b590      	push	{r4, r7, lr}
 800c250:	b083      	sub	sp, #12
 800c252:	af00      	add	r7, sp, #0
 800c254:	6078      	str	r0, [r7, #4]
 800c256:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800c258:	6838      	ldr	r0, [r7, #0]
 800c25a:	f7fa f83d 	bl	80062d8 <_ZSt11__addressofIbEPT_RS0_>
 800c25e:	4603      	mov	r3, r0
 800c260:	4618      	mov	r0, r3
 800c262:	f7fa f844 	bl	80062ee <_ZSt8_DestroyIbEvPT_>
	    return {};
 800c266:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800c268:	4618      	mov	r0, r3
 800c26a:	370c      	adds	r7, #12
 800c26c:	46bd      	mov	sp, r7
 800c26e:	bd90      	pop	{r4, r7, pc}

0800c270 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESG_>:
 800c270:	b590      	push	{r4, r7, lr}
 800c272:	b083      	sub	sp, #12
 800c274:	af00      	add	r7, sp, #0
 800c276:	6078      	str	r0, [r7, #4]
 800c278:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800c27a:	6838      	ldr	r0, [r7, #0]
 800c27c:	f7fa f86b 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800c280:	4603      	mov	r3, r0
 800c282:	4618      	mov	r0, r3
 800c284:	f7fa f872 	bl	800636c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 800c288:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800c28a:	4618      	mov	r0, r3
 800c28c:	370c      	adds	r7, #12
 800c28e:	46bd      	mov	sp, r7
 800c290:	bd90      	pop	{r4, r7, pc}

0800c292 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEvENUlOT_E_clIRSA_EENS0_16__variant_cookieESG_>:
 800c292:	b590      	push	{r4, r7, lr}
 800c294:	b083      	sub	sp, #12
 800c296:	af00      	add	r7, sp, #0
 800c298:	6078      	str	r0, [r7, #4]
 800c29a:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800c29c:	6838      	ldr	r0, [r7, #0]
 800c29e:	f000 fff6 	bl	800d28e <_ZSt11__addressofISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEPT_RS9_>
 800c2a2:	4603      	mov	r3, r0
 800c2a4:	4618      	mov	r0, r3
 800c2a6:	f000 fffd 	bl	800d2a4 <_ZSt8_DestroyISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvPT_>
	    return {};
 800c2aa:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800c2ac:	4618      	mov	r0, r3
 800c2ae:	370c      	adds	r7, #12
 800c2b0:	46bd      	mov	sp, r7
 800c2b2:	bd90      	pop	{r4, r7, pc}

0800c2b4 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE13_M_reset_implEvENUlOT_E_clIRSD_EENS0_16__variant_cookieESG_>:
 800c2b4:	b590      	push	{r4, r7, lr}
 800c2b6:	b083      	sub	sp, #12
 800c2b8:	af00      	add	r7, sp, #0
 800c2ba:	6078      	str	r0, [r7, #4]
 800c2bc:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800c2be:	6838      	ldr	r0, [r7, #0]
 800c2c0:	f000 fffb 	bl	800d2ba <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 800c2c4:	4603      	mov	r3, r0
 800c2c6:	4618      	mov	r0, r3
 800c2c8:	f001 f802 	bl	800d2d0 <_ZSt8_DestroyISt6vectorI6SymbolSaIS1_EEEvPT_>
	    return {};
 800c2cc:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800c2ce:	4618      	mov	r0, r3
 800c2d0:	370c      	adds	r7, #12
 800c2d2:	46bd      	mov	sp, r7
 800c2d4:	bd90      	pop	{r4, r7, pc}

0800c2d6 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800c2d6:	b590      	push	{r4, r7, lr}
 800c2d8:	b085      	sub	sp, #20
 800c2da:	af00      	add	r7, sp, #0
 800c2dc:	6078      	str	r0, [r7, #4]
 800c2de:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800c2e0:	687b      	ldr	r3, [r7, #4]
 800c2e2:	2200      	movs	r2, #0
 800c2e4:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800c2e6:	6878      	ldr	r0, [r7, #4]
 800c2e8:	f7fb f979 	bl	80075de <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800c2ec:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800c2ee:	6838      	ldr	r0, [r7, #0]
 800c2f0:	f7fe feb5 	bl	800b05e <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800c2f4:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800c2f6:	681c      	ldr	r4, [r3, #0]
 800c2f8:	68f8      	ldr	r0, [r7, #12]
 800c2fa:	f000 fff4 	bl	800d2e6 <_ZSt9addressofIiEPT_RS0_>
 800c2fe:	4603      	mov	r3, r0
 800c300:	4619      	mov	r1, r3
 800c302:	2004      	movs	r0, #4
 800c304:	f7f4 fea9 	bl	800105a <_ZnwjPv>
 800c308:	4603      	mov	r3, r0
 800c30a:	601c      	str	r4, [r3, #0]
    }
 800c30c:	bf00      	nop
 800c30e:	3714      	adds	r7, #20
 800c310:	46bd      	mov	sp, r7
 800c312:	bd90      	pop	{r4, r7, pc}

0800c314 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>:
    get(variant<_Types...>& __v)
 800c314:	b580      	push	{r7, lr}
 800c316:	b082      	sub	sp, #8
 800c318:	af00      	add	r7, sp, #0
 800c31a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800c31c:	6878      	ldr	r0, [r7, #4]
 800c31e:	f7fb fd48 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 800c322:	4603      	mov	r3, r0
 800c324:	2b00      	cmp	r3, #0
 800c326:	bf14      	ite	ne
 800c328:	2301      	movne	r3, #1
 800c32a:	2300      	moveq	r3, #0
 800c32c:	b2db      	uxtb	r3, r3
 800c32e:	2b00      	cmp	r3, #0
 800c330:	d002      	beq.n	800c338 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800c332:	4805      	ldr	r0, [pc, #20]	; (800c348 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_+0x34>)
 800c334:	f7f7 ff48 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800c338:	6878      	ldr	r0, [r7, #4]
 800c33a:	f7fb f950 	bl	80075de <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800c33e:	4603      	mov	r3, r0
    }
 800c340:	4618      	mov	r0, r3
 800c342:	3708      	adds	r7, #8
 800c344:	46bd      	mov	sp, r7
 800c346:	bd80      	pop	{r7, pc}
 800c348:	08027454 	.word	0x08027454

0800c34c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800c34c:	b590      	push	{r4, r7, lr}
 800c34e:	b085      	sub	sp, #20
 800c350:	af00      	add	r7, sp, #0
 800c352:	6078      	str	r0, [r7, #4]
 800c354:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800c356:	687b      	ldr	r3, [r7, #4]
 800c358:	2201      	movs	r2, #1
 800c35a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800c35c:	6878      	ldr	r0, [r7, #4]
 800c35e:	f7fb f9ca 	bl	80076f6 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800c362:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800c364:	6838      	ldr	r0, [r7, #0]
 800c366:	f7fe fea7 	bl	800b0b8 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800c36a:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800c36c:	681c      	ldr	r4, [r3, #0]
 800c36e:	68f8      	ldr	r0, [r7, #12]
 800c370:	f000 ffc5 	bl	800d2fe <_ZSt9addressofIfEPT_RS0_>
 800c374:	4603      	mov	r3, r0
 800c376:	4619      	mov	r1, r3
 800c378:	2004      	movs	r0, #4
 800c37a:	f7f4 fe6e 	bl	800105a <_ZnwjPv>
 800c37e:	4603      	mov	r3, r0
 800c380:	601c      	str	r4, [r3, #0]
    }
 800c382:	bf00      	nop
 800c384:	3714      	adds	r7, #20
 800c386:	46bd      	mov	sp, r7
 800c388:	bd90      	pop	{r4, r7, pc}
	...

0800c38c <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>:
    get(variant<_Types...>& __v)
 800c38c:	b580      	push	{r7, lr}
 800c38e:	b082      	sub	sp, #8
 800c390:	af00      	add	r7, sp, #0
 800c392:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800c394:	6878      	ldr	r0, [r7, #4]
 800c396:	f7fb fd0c 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 800c39a:	4603      	mov	r3, r0
 800c39c:	2b01      	cmp	r3, #1
 800c39e:	bf14      	ite	ne
 800c3a0:	2301      	movne	r3, #1
 800c3a2:	2300      	moveq	r3, #0
 800c3a4:	b2db      	uxtb	r3, r3
 800c3a6:	2b00      	cmp	r3, #0
 800c3a8:	d002      	beq.n	800c3b0 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800c3aa:	4805      	ldr	r0, [pc, #20]	; (800c3c0 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_+0x34>)
 800c3ac:	f7f7 ff0c 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800c3b0:	6878      	ldr	r0, [r7, #4]
 800c3b2:	f7fb f9a0 	bl	80076f6 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800c3b6:	4603      	mov	r3, r0
    }
 800c3b8:	4618      	mov	r0, r3
 800c3ba:	3708      	adds	r7, #8
 800c3bc:	46bd      	mov	sp, r7
 800c3be:	bd80      	pop	{r7, pc}
 800c3c0:	08027454 	.word	0x08027454

0800c3c4 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800c3c4:	b590      	push	{r4, r7, lr}
 800c3c6:	b085      	sub	sp, #20
 800c3c8:	af00      	add	r7, sp, #0
 800c3ca:	6078      	str	r0, [r7, #4]
 800c3cc:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800c3ce:	687b      	ldr	r3, [r7, #4]
 800c3d0:	2202      	movs	r2, #2
 800c3d2:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800c3d4:	6878      	ldr	r0, [r7, #4]
 800c3d6:	f7fb fa2c 	bl	8007832 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800c3da:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800c3dc:	6838      	ldr	r0, [r7, #0]
 800c3de:	f7fe fe98 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800c3e2:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800c3e4:	781c      	ldrb	r4, [r3, #0]
 800c3e6:	68f8      	ldr	r0, [r7, #12]
 800c3e8:	f000 ff95 	bl	800d316 <_ZSt9addressofIbEPT_RS0_>
 800c3ec:	4603      	mov	r3, r0
 800c3ee:	4619      	mov	r1, r3
 800c3f0:	2001      	movs	r0, #1
 800c3f2:	f7f4 fe32 	bl	800105a <_ZnwjPv>
 800c3f6:	4603      	mov	r3, r0
 800c3f8:	4622      	mov	r2, r4
 800c3fa:	701a      	strb	r2, [r3, #0]
    }
 800c3fc:	bf00      	nop
 800c3fe:	3714      	adds	r7, #20
 800c400:	46bd      	mov	sp, r7
 800c402:	bd90      	pop	{r4, r7, pc}

0800c404 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>:
    get(variant<_Types...>& __v)
 800c404:	b580      	push	{r7, lr}
 800c406:	b082      	sub	sp, #8
 800c408:	af00      	add	r7, sp, #0
 800c40a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800c40c:	6878      	ldr	r0, [r7, #4]
 800c40e:	f7fb fcd0 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 800c412:	4603      	mov	r3, r0
 800c414:	2b02      	cmp	r3, #2
 800c416:	bf14      	ite	ne
 800c418:	2301      	movne	r3, #1
 800c41a:	2300      	moveq	r3, #0
 800c41c:	b2db      	uxtb	r3, r3
 800c41e:	2b00      	cmp	r3, #0
 800c420:	d002      	beq.n	800c428 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800c422:	4805      	ldr	r0, [pc, #20]	; (800c438 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_+0x34>)
 800c424:	f7f7 fed0 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800c428:	6878      	ldr	r0, [r7, #4]
 800c42a:	f7fb fa02 	bl	8007832 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800c42e:	4603      	mov	r3, r0
    }
 800c430:	4618      	mov	r0, r3
 800c432:	3708      	adds	r7, #8
 800c434:	46bd      	mov	sp, r7
 800c436:	bd80      	pop	{r7, pc}
 800c438:	08027454 	.word	0x08027454

0800c43c <_ZSt28__variant_construct_by_indexILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800c43c:	b590      	push	{r4, r7, lr}
 800c43e:	b085      	sub	sp, #20
 800c440:	af00      	add	r7, sp, #0
 800c442:	6078      	str	r0, [r7, #4]
 800c444:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800c446:	687b      	ldr	r3, [r7, #4]
 800c448:	2203      	movs	r2, #3
 800c44a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800c44c:	6878      	ldr	r0, [r7, #4]
 800c44e:	f7fb faa0 	bl	8007992 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800c452:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800c454:	6838      	ldr	r0, [r7, #0]
 800c456:	f7fe fe89 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800c45a:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 800c45c:	68f8      	ldr	r0, [r7, #12]
 800c45e:	f000 ff66 	bl	800d32e <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800c462:	4603      	mov	r3, r0
 800c464:	4619      	mov	r1, r3
 800c466:	2018      	movs	r0, #24
 800c468:	f7f4 fdf7 	bl	800105a <_ZnwjPv>
 800c46c:	4603      	mov	r3, r0
 800c46e:	4621      	mov	r1, r4
 800c470:	4618      	mov	r0, r3
 800c472:	f016 fda6 	bl	8022fc2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 800c476:	bf00      	nop
 800c478:	3714      	adds	r7, #20
 800c47a:	46bd      	mov	sp, r7
 800c47c:	bd90      	pop	{r4, r7, pc}
	...

0800c480 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>:
    get(variant<_Types...>& __v)
 800c480:	b580      	push	{r7, lr}
 800c482:	b082      	sub	sp, #8
 800c484:	af00      	add	r7, sp, #0
 800c486:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800c488:	6878      	ldr	r0, [r7, #4]
 800c48a:	f7fb fc92 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 800c48e:	4603      	mov	r3, r0
 800c490:	2b03      	cmp	r3, #3
 800c492:	bf14      	ite	ne
 800c494:	2301      	movne	r3, #1
 800c496:	2300      	moveq	r3, #0
 800c498:	b2db      	uxtb	r3, r3
 800c49a:	2b00      	cmp	r3, #0
 800c49c:	d002      	beq.n	800c4a4 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800c49e:	4805      	ldr	r0, [pc, #20]	; (800c4b4 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_+0x34>)
 800c4a0:	f7f7 fe92 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800c4a4:	6878      	ldr	r0, [r7, #4]
 800c4a6:	f7fb fa74 	bl	8007992 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800c4aa:	4603      	mov	r3, r0
    }
 800c4ac:	4618      	mov	r0, r3
 800c4ae:	3708      	adds	r7, #8
 800c4b0:	46bd      	mov	sp, r7
 800c4b2:	bd80      	pop	{r7, pc}
 800c4b4:	08027454 	.word	0x08027454

0800c4b8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE>:
    private:
      // Constant-time move assignment when source object's memory can be
      // moved, either because the source's allocator will move too
      // or because the allocators are equal.
      void
      _M_move_assign(vector&& __x, true_type) noexcept
 800c4b8:	b590      	push	{r4, r7, lr}
 800c4ba:	b089      	sub	sp, #36	; 0x24
 800c4bc:	af00      	add	r7, sp, #0
 800c4be:	60f8      	str	r0, [r7, #12]
 800c4c0:	60b9      	str	r1, [r7, #8]
 800c4c2:	713a      	strb	r2, [r7, #4]
      {
	vector __tmp(get_allocator());
 800c4c4:	68fa      	ldr	r2, [r7, #12]
 800c4c6:	f107 031c 	add.w	r3, r7, #28
 800c4ca:	4611      	mov	r1, r2
 800c4cc:	4618      	mov	r0, r3
 800c4ce:	f000 ff3a 	bl	800d346 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13get_allocatorEv>
 800c4d2:	f107 021c 	add.w	r2, r7, #28
 800c4d6:	f107 0310 	add.w	r3, r7, #16
 800c4da:	4611      	mov	r1, r2
 800c4dc:	4618      	mov	r0, r3
 800c4de:	f000 ff4f 	bl	800d380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS6_>
 800c4e2:	f107 031c 	add.w	r3, r7, #28
 800c4e6:	4618      	mov	r0, r3
 800c4e8:	f000 ff3e 	bl	800d368 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
 800c4ec:	68fb      	ldr	r3, [r7, #12]
 800c4ee:	68ba      	ldr	r2, [r7, #8]
 800c4f0:	4611      	mov	r1, r2
 800c4f2:	4618      	mov	r0, r3
 800c4f4:	f000 ff6e 	bl	800d3d4 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
 800c4f8:	68ba      	ldr	r2, [r7, #8]
 800c4fa:	f107 0310 	add.w	r3, r7, #16
 800c4fe:	4611      	mov	r1, r2
 800c500:	4618      	mov	r0, r3
 800c502:	f000 ff67 	bl	800d3d4 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
 800c506:	68fb      	ldr	r3, [r7, #12]
 800c508:	4618      	mov	r0, r3
 800c50a:	f000 fb9b 	bl	800cc44 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800c50e:	4604      	mov	r4, r0
 800c510:	68bb      	ldr	r3, [r7, #8]
 800c512:	4618      	mov	r0, r3
 800c514:	f000 fb96 	bl	800cc44 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800c518:	4603      	mov	r3, r0
 800c51a:	4619      	mov	r1, r3
 800c51c:	4620      	mov	r0, r4
 800c51e:	f000 ff77 	bl	800d410 <_ZSt15__alloc_on_moveISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_S8_>
	vector __tmp(get_allocator());
 800c522:	f107 0310 	add.w	r3, r7, #16
 800c526:	4618      	mov	r0, r3
 800c528:	f000 ff39 	bl	800d39e <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
      }
 800c52c:	bf00      	nop
 800c52e:	3724      	adds	r7, #36	; 0x24
 800c530:	46bd      	mov	sp, r7
 800c532:	bd90      	pop	{r4, r7, pc}

0800c534 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800c534:	b580      	push	{r7, lr}
 800c536:	b082      	sub	sp, #8
 800c538:	af00      	add	r7, sp, #0
 800c53a:	6078      	str	r0, [r7, #4]
 800c53c:	6878      	ldr	r0, [r7, #4]
 800c53e:	f000 ff13 	bl	800d368 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
 800c542:	687b      	ldr	r3, [r7, #4]
 800c544:	4618      	mov	r0, r3
 800c546:	3708      	adds	r7, #8
 800c548:	46bd      	mov	sp, r7
 800c54a:	bd80      	pop	{r7, pc}

0800c54c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EOS7_>:
      _Vector_base(_Vector_base&&) = default;
 800c54c:	b580      	push	{r7, lr}
 800c54e:	b082      	sub	sp, #8
 800c550:	af00      	add	r7, sp, #0
 800c552:	6078      	str	r0, [r7, #4]
 800c554:	6039      	str	r1, [r7, #0]
 800c556:	687b      	ldr	r3, [r7, #4]
 800c558:	683a      	ldr	r2, [r7, #0]
 800c55a:	4611      	mov	r1, r2
 800c55c:	4618      	mov	r0, r3
 800c55e:	f000 ff71 	bl	800d444 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1EOS8_>
 800c562:	687b      	ldr	r3, [r7, #4]
 800c564:	4618      	mov	r0, r3
 800c566:	3708      	adds	r7, #8
 800c568:	46bd      	mov	sp, r7
 800c56a:	bd80      	pop	{r7, pc}

0800c56c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EOS7_>:
      vector(vector&&) noexcept = default;
 800c56c:	b580      	push	{r7, lr}
 800c56e:	b082      	sub	sp, #8
 800c570:	af00      	add	r7, sp, #0
 800c572:	6078      	str	r0, [r7, #4]
 800c574:	6039      	str	r1, [r7, #0]
 800c576:	687b      	ldr	r3, [r7, #4]
 800c578:	683a      	ldr	r2, [r7, #0]
 800c57a:	4611      	mov	r1, r2
 800c57c:	4618      	mov	r0, r3
 800c57e:	f7ff ffe5 	bl	800c54c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EOS7_>
 800c582:	687b      	ldr	r3, [r7, #4]
 800c584:	4618      	mov	r0, r3
 800c586:	3708      	adds	r7, #8
 800c588:	46bd      	mov	sp, r7
 800c58a:	bd80      	pop	{r7, pc}

0800c58c <_ZSt28__variant_construct_by_indexILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJS9_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800c58c:	b590      	push	{r4, r7, lr}
 800c58e:	b085      	sub	sp, #20
 800c590:	af00      	add	r7, sp, #0
 800c592:	6078      	str	r0, [r7, #4]
 800c594:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800c596:	687b      	ldr	r3, [r7, #4]
 800c598:	2204      	movs	r2, #4
 800c59a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800c59c:	6878      	ldr	r0, [r7, #4]
 800c59e:	f7fb faba 	bl	8007b16 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800c5a2:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800c5a4:	6838      	ldr	r0, [r7, #0]
 800c5a6:	f7fe fe0e 	bl	800b1c6 <_ZSt7forwardISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c5aa:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 800c5ac:	68f8      	ldr	r0, [r7, #12]
 800c5ae:	f000 ff3d 	bl	800d42c <_ZSt9addressofISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEPT_RS9_>
 800c5b2:	4603      	mov	r3, r0
 800c5b4:	4619      	mov	r1, r3
 800c5b6:	200c      	movs	r0, #12
 800c5b8:	f7f4 fd4f 	bl	800105a <_ZnwjPv>
 800c5bc:	4603      	mov	r3, r0
 800c5be:	4621      	mov	r1, r4
 800c5c0:	4618      	mov	r0, r3
 800c5c2:	f7ff ffd3 	bl	800c56c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EOS7_>
    }
 800c5c6:	bf00      	nop
 800c5c8:	3714      	adds	r7, #20
 800c5ca:	46bd      	mov	sp, r7
 800c5cc:	bd90      	pop	{r4, r7, pc}
	...

0800c5d0 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>:
    get(variant<_Types...>& __v)
 800c5d0:	b580      	push	{r7, lr}
 800c5d2:	b082      	sub	sp, #8
 800c5d4:	af00      	add	r7, sp, #0
 800c5d6:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800c5d8:	6878      	ldr	r0, [r7, #4]
 800c5da:	f7fb fbea 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 800c5de:	4603      	mov	r3, r0
 800c5e0:	2b04      	cmp	r3, #4
 800c5e2:	bf14      	ite	ne
 800c5e4:	2301      	movne	r3, #1
 800c5e6:	2300      	moveq	r3, #0
 800c5e8:	b2db      	uxtb	r3, r3
 800c5ea:	2b00      	cmp	r3, #0
 800c5ec:	d002      	beq.n	800c5f4 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800c5ee:	4805      	ldr	r0, [pc, #20]	; (800c604 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_+0x34>)
 800c5f0:	f7f7 fdea 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800c5f4:	6878      	ldr	r0, [r7, #4]
 800c5f6:	f7fb fa8e 	bl	8007b16 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800c5fa:	4603      	mov	r3, r0
    }
 800c5fc:	4618      	mov	r0, r3
 800c5fe:	3708      	adds	r7, #8
 800c600:	46bd      	mov	sp, r7
 800c602:	bd80      	pop	{r7, pc}
 800c604:	08027454 	.word	0x08027454

0800c608 <_ZNSt6vectorI6SymbolSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
 800c608:	b590      	push	{r4, r7, lr}
 800c60a:	b089      	sub	sp, #36	; 0x24
 800c60c:	af00      	add	r7, sp, #0
 800c60e:	60f8      	str	r0, [r7, #12]
 800c610:	60b9      	str	r1, [r7, #8]
 800c612:	713a      	strb	r2, [r7, #4]
	vector __tmp(get_allocator());
 800c614:	68fa      	ldr	r2, [r7, #12]
 800c616:	f107 031c 	add.w	r3, r7, #28
 800c61a:	4611      	mov	r1, r2
 800c61c:	4618      	mov	r0, r3
 800c61e:	f000 ff4b 	bl	800d4b8 <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE13get_allocatorEv>
 800c622:	f107 021c 	add.w	r2, r7, #28
 800c626:	f107 0310 	add.w	r3, r7, #16
 800c62a:	4611      	mov	r1, r2
 800c62c:	4618      	mov	r0, r3
 800c62e:	f000 ff60 	bl	800d4f2 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS1_>
 800c632:	f107 031c 	add.w	r3, r7, #28
 800c636:	4618      	mov	r0, r3
 800c638:	f000 ff4f 	bl	800d4da <_ZNSaI6SymbolED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
 800c63c:	68fb      	ldr	r3, [r7, #12]
 800c63e:	68ba      	ldr	r2, [r7, #8]
 800c640:	4611      	mov	r1, r2
 800c642:	4618      	mov	r0, r3
 800c644:	f000 ff7f 	bl	800d546 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
 800c648:	68ba      	ldr	r2, [r7, #8]
 800c64a:	f107 0310 	add.w	r3, r7, #16
 800c64e:	4611      	mov	r1, r2
 800c650:	4618      	mov	r0, r3
 800c652:	f000 ff78 	bl	800d546 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
 800c656:	68fb      	ldr	r3, [r7, #12]
 800c658:	4618      	mov	r0, r3
 800c65a:	f000 fc8c 	bl	800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800c65e:	4604      	mov	r4, r0
 800c660:	68bb      	ldr	r3, [r7, #8]
 800c662:	4618      	mov	r0, r3
 800c664:	f000 fc87 	bl	800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800c668:	4603      	mov	r3, r0
 800c66a:	4619      	mov	r1, r3
 800c66c:	4620      	mov	r0, r4
 800c66e:	f000 ff88 	bl	800d582 <_ZSt15__alloc_on_moveISaI6SymbolEEvRT_S3_>
	vector __tmp(get_allocator());
 800c672:	f107 0310 	add.w	r3, r7, #16
 800c676:	4618      	mov	r0, r3
 800c678:	f000 ff4a 	bl	800d510 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
      }
 800c67c:	bf00      	nop
 800c67e:	3724      	adds	r7, #36	; 0x24
 800c680:	46bd      	mov	sp, r7
 800c682:	bd90      	pop	{r4, r7, pc}

0800c684 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800c684:	b580      	push	{r7, lr}
 800c686:	b082      	sub	sp, #8
 800c688:	af00      	add	r7, sp, #0
 800c68a:	6078      	str	r0, [r7, #4]
 800c68c:	6878      	ldr	r0, [r7, #4]
 800c68e:	f000 ff24 	bl	800d4da <_ZNSaI6SymbolED1Ev>
 800c692:	687b      	ldr	r3, [r7, #4]
 800c694:	4618      	mov	r0, r3
 800c696:	3708      	adds	r7, #8
 800c698:	46bd      	mov	sp, r7
 800c69a:	bd80      	pop	{r7, pc}

0800c69c <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EOS2_>:
      _Vector_base(_Vector_base&&) = default;
 800c69c:	b580      	push	{r7, lr}
 800c69e:	b082      	sub	sp, #8
 800c6a0:	af00      	add	r7, sp, #0
 800c6a2:	6078      	str	r0, [r7, #4]
 800c6a4:	6039      	str	r1, [r7, #0]
 800c6a6:	687b      	ldr	r3, [r7, #4]
 800c6a8:	683a      	ldr	r2, [r7, #0]
 800c6aa:	4611      	mov	r1, r2
 800c6ac:	4618      	mov	r0, r3
 800c6ae:	f000 ff82 	bl	800d5b6 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1EOS3_>
 800c6b2:	687b      	ldr	r3, [r7, #4]
 800c6b4:	4618      	mov	r0, r3
 800c6b6:	3708      	adds	r7, #8
 800c6b8:	46bd      	mov	sp, r7
 800c6ba:	bd80      	pop	{r7, pc}

0800c6bc <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>:
      vector(vector&&) noexcept = default;
 800c6bc:	b580      	push	{r7, lr}
 800c6be:	b082      	sub	sp, #8
 800c6c0:	af00      	add	r7, sp, #0
 800c6c2:	6078      	str	r0, [r7, #4]
 800c6c4:	6039      	str	r1, [r7, #0]
 800c6c6:	687b      	ldr	r3, [r7, #4]
 800c6c8:	683a      	ldr	r2, [r7, #0]
 800c6ca:	4611      	mov	r1, r2
 800c6cc:	4618      	mov	r0, r3
 800c6ce:	f7ff ffe5 	bl	800c69c <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EOS2_>
 800c6d2:	687b      	ldr	r3, [r7, #4]
 800c6d4:	4618      	mov	r0, r3
 800c6d6:	3708      	adds	r7, #8
 800c6d8:	46bd      	mov	sp, r7
 800c6da:	bd80      	pop	{r7, pc}

0800c6dc <_ZSt28__variant_construct_by_indexILj5ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJSC_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800c6dc:	b590      	push	{r4, r7, lr}
 800c6de:	b085      	sub	sp, #20
 800c6e0:	af00      	add	r7, sp, #0
 800c6e2:	6078      	str	r0, [r7, #4]
 800c6e4:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800c6e6:	687b      	ldr	r3, [r7, #4]
 800c6e8:	2205      	movs	r2, #5
 800c6ea:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800c6ec:	6878      	ldr	r0, [r7, #4]
 800c6ee:	f7fb fae6 	bl	8007cbe <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800c6f2:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800c6f4:	6838      	ldr	r0, [r7, #0]
 800c6f6:	f7fe fd93 	bl	800b220 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800c6fa:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 800c6fc:	68f8      	ldr	r0, [r7, #12]
 800c6fe:	f000 ff4e 	bl	800d59e <_ZSt9addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 800c702:	4603      	mov	r3, r0
 800c704:	4619      	mov	r1, r3
 800c706:	200c      	movs	r0, #12
 800c708:	f7f4 fca7 	bl	800105a <_ZnwjPv>
 800c70c:	4603      	mov	r3, r0
 800c70e:	4621      	mov	r1, r4
 800c710:	4618      	mov	r0, r3
 800c712:	f7ff ffd3 	bl	800c6bc <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>
    }
 800c716:	bf00      	nop
 800c718:	3714      	adds	r7, #20
 800c71a:	46bd      	mov	sp, r7
 800c71c:	bd90      	pop	{r4, r7, pc}
	...

0800c720 <_ZSt3getILj5EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>:
    get(variant<_Types...>& __v)
 800c720:	b580      	push	{r7, lr}
 800c722:	b082      	sub	sp, #8
 800c724:	af00      	add	r7, sp, #0
 800c726:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800c728:	6878      	ldr	r0, [r7, #4]
 800c72a:	f7fb fb42 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 800c72e:	4603      	mov	r3, r0
 800c730:	2b05      	cmp	r3, #5
 800c732:	bf14      	ite	ne
 800c734:	2301      	movne	r3, #1
 800c736:	2300      	moveq	r3, #0
 800c738:	b2db      	uxtb	r3, r3
 800c73a:	2b00      	cmp	r3, #0
 800c73c:	d002      	beq.n	800c744 <_ZSt3getILj5EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800c73e:	4805      	ldr	r0, [pc, #20]	; (800c754 <_ZSt3getILj5EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_+0x34>)
 800c740:	f7f7 fd42 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800c744:	6878      	ldr	r0, [r7, #4]
 800c746:	f7fb faba 	bl	8007cbe <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 800c74a:	4603      	mov	r3, r0
    }
 800c74c:	4618      	mov	r0, r3
 800c74e:	3708      	adds	r7, #8
 800c750:	46bd      	mov	sp, r7
 800c752:	bd80      	pop	{r7, pc}
 800c754:	08027454 	.word	0x08027454

0800c758 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EES2_I6SymbolSaISB_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 800c758:	b580      	push	{r7, lr}
 800c75a:	b082      	sub	sp, #8
 800c75c:	af00      	add	r7, sp, #0
 800c75e:	6078      	str	r0, [r7, #4]
 800c760:	687b      	ldr	r3, [r7, #4]
 800c762:	4618      	mov	r0, r3
 800c764:	f000 ff5b 	bl	800d61e <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1Ev>
 800c768:	687b      	ldr	r3, [r7, #4]
 800c76a:	4618      	mov	r0, r3
 800c76c:	3708      	adds	r7, #8
 800c76e:	46bd      	mov	sp, r7
 800c770:	bd80      	pop	{r7, pc}

0800c772 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800c772:	b480      	push	{r7}
 800c774:	b083      	sub	sp, #12
 800c776:	af00      	add	r7, sp, #0
 800c778:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800c77a:	687b      	ldr	r3, [r7, #4]
 800c77c:	4618      	mov	r0, r3
 800c77e:	370c      	adds	r7, #12
 800c780:	46bd      	mov	sp, r7
 800c782:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c786:	4770      	bx	lr

0800c788 <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800c788:	b480      	push	{r7}
 800c78a:	b083      	sub	sp, #12
 800c78c:	af00      	add	r7, sp, #0
 800c78e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800c790:	687b      	ldr	r3, [r7, #4]
 800c792:	4618      	mov	r0, r3
 800c794:	370c      	adds	r7, #12
 800c796:	46bd      	mov	sp, r7
 800c798:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c79c:	4770      	bx	lr

0800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>:
   *  @param  __r  Reference to an object or function.
   *  @return   The actual address.
  */
  template<typename _Tp>
    inline _GLIBCXX17_CONSTEXPR _Tp*
    addressof(_Tp& __r) noexcept
 800c79e:	b580      	push	{r7, lr}
 800c7a0:	b082      	sub	sp, #8
 800c7a2:	af00      	add	r7, sp, #0
 800c7a4:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800c7a6:	6878      	ldr	r0, [r7, #4]
 800c7a8:	f000 f805 	bl	800c7b6 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800c7ac:	4603      	mov	r3, r0
 800c7ae:	4618      	mov	r0, r3
 800c7b0:	3708      	adds	r7, #8
 800c7b2:	46bd      	mov	sp, r7
 800c7b4:	bd80      	pop	{r7, pc}

0800c7b6 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800c7b6:	b480      	push	{r7}
 800c7b8:	b083      	sub	sp, #12
 800c7ba:	af00      	add	r7, sp, #0
 800c7bc:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800c7be:	687b      	ldr	r3, [r7, #4]
 800c7c0:	4618      	mov	r0, r3
 800c7c2:	370c      	adds	r7, #12
 800c7c4:	46bd      	mov	sp, r7
 800c7c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7ca:	4770      	bx	lr

0800c7cc <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800c7cc:	b590      	push	{r4, r7, lr}
 800c7ce:	b085      	sub	sp, #20
 800c7d0:	af00      	add	r7, sp, #0
 800c7d2:	6078      	str	r0, [r7, #4]
 800c7d4:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800c7d6:	687b      	ldr	r3, [r7, #4]
 800c7d8:	4618      	mov	r0, r3
 800c7da:	f7ff ffe0 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800c7de:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800c7e0:	6838      	ldr	r0, [r7, #0]
 800c7e2:	f7ff ffd1 	bl	800c788 <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>
 800c7e6:	4603      	mov	r3, r0
        ::new (__storage)
 800c7e8:	681c      	ldr	r4, [r3, #0]
 800c7ea:	68fb      	ldr	r3, [r7, #12]
 800c7ec:	4619      	mov	r1, r3
 800c7ee:	2004      	movs	r0, #4
 800c7f0:	f7f4 fc33 	bl	800105a <_ZnwjPv>
 800c7f4:	4603      	mov	r3, r0
 800c7f6:	601c      	str	r4, [r3, #0]
    }
 800c7f8:	bf00      	nop
 800c7fa:	3714      	adds	r7, #20
 800c7fc:	46bd      	mov	sp, r7
 800c7fe:	bd90      	pop	{r4, r7, pc}

0800c800 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800c800:	b480      	push	{r7}
 800c802:	b083      	sub	sp, #12
 800c804:	af00      	add	r7, sp, #0
 800c806:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800c808:	687b      	ldr	r3, [r7, #4]
 800c80a:	4618      	mov	r0, r3
 800c80c:	370c      	adds	r7, #12
 800c80e:	46bd      	mov	sp, r7
 800c810:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c814:	4770      	bx	lr

0800c816 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800c816:	b590      	push	{r4, r7, lr}
 800c818:	b085      	sub	sp, #20
 800c81a:	af00      	add	r7, sp, #0
 800c81c:	6078      	str	r0, [r7, #4]
 800c81e:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800c820:	687b      	ldr	r3, [r7, #4]
 800c822:	4618      	mov	r0, r3
 800c824:	f7ff ffbb 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800c828:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800c82a:	6838      	ldr	r0, [r7, #0]
 800c82c:	f7ff ffe8 	bl	800c800 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>
 800c830:	4603      	mov	r3, r0
        ::new (__storage)
 800c832:	681c      	ldr	r4, [r3, #0]
 800c834:	68fb      	ldr	r3, [r7, #12]
 800c836:	4619      	mov	r1, r3
 800c838:	2004      	movs	r0, #4
 800c83a:	f7f4 fc0e 	bl	800105a <_ZnwjPv>
 800c83e:	4603      	mov	r3, r0
 800c840:	601c      	str	r4, [r3, #0]
    }
 800c842:	bf00      	nop
 800c844:	3714      	adds	r7, #20
 800c846:	46bd      	mov	sp, r7
 800c848:	bd90      	pop	{r4, r7, pc}

0800c84a <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800c84a:	b480      	push	{r7}
 800c84c:	b083      	sub	sp, #12
 800c84e:	af00      	add	r7, sp, #0
 800c850:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800c852:	687b      	ldr	r3, [r7, #4]
 800c854:	4618      	mov	r0, r3
 800c856:	370c      	adds	r7, #12
 800c858:	46bd      	mov	sp, r7
 800c85a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c85e:	4770      	bx	lr

0800c860 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800c860:	b590      	push	{r4, r7, lr}
 800c862:	b085      	sub	sp, #20
 800c864:	af00      	add	r7, sp, #0
 800c866:	6078      	str	r0, [r7, #4]
 800c868:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800c86a:	687b      	ldr	r3, [r7, #4]
 800c86c:	4618      	mov	r0, r3
 800c86e:	f7ff ff96 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800c872:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800c874:	6838      	ldr	r0, [r7, #0]
 800c876:	f7ff ffe8 	bl	800c84a <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>
 800c87a:	4603      	mov	r3, r0
        ::new (__storage)
 800c87c:	781c      	ldrb	r4, [r3, #0]
 800c87e:	68fb      	ldr	r3, [r7, #12]
 800c880:	4619      	mov	r1, r3
 800c882:	2001      	movs	r0, #1
 800c884:	f7f4 fbe9 	bl	800105a <_ZnwjPv>
 800c888:	4603      	mov	r3, r0
 800c88a:	4622      	mov	r2, r4
 800c88c:	701a      	strb	r2, [r3, #0]
    }
 800c88e:	bf00      	nop
 800c890:	3714      	adds	r7, #20
 800c892:	46bd      	mov	sp, r7
 800c894:	bd90      	pop	{r4, r7, pc}

0800c896 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800c896:	b480      	push	{r7}
 800c898:	b083      	sub	sp, #12
 800c89a:	af00      	add	r7, sp, #0
 800c89c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800c89e:	687b      	ldr	r3, [r7, #4]
 800c8a0:	4618      	mov	r0, r3
 800c8a2:	370c      	adds	r7, #12
 800c8a4:	46bd      	mov	sp, r7
 800c8a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8aa:	4770      	bx	lr

0800c8ac <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEES8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800c8ac:	b590      	push	{r4, r7, lr}
 800c8ae:	b085      	sub	sp, #20
 800c8b0:	af00      	add	r7, sp, #0
 800c8b2:	6078      	str	r0, [r7, #4]
 800c8b4:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800c8b6:	687b      	ldr	r3, [r7, #4]
 800c8b8:	4618      	mov	r0, r3
 800c8ba:	f7ff ff70 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800c8be:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800c8c0:	6838      	ldr	r0, [r7, #0]
 800c8c2:	f7ff ffe8 	bl	800c896 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800c8c6:	4604      	mov	r4, r0
        ::new (__storage)
 800c8c8:	68fb      	ldr	r3, [r7, #12]
 800c8ca:	4619      	mov	r1, r3
 800c8cc:	2018      	movs	r0, #24
 800c8ce:	f7f4 fbc4 	bl	800105a <_ZnwjPv>
 800c8d2:	4603      	mov	r3, r0
 800c8d4:	4621      	mov	r1, r4
 800c8d6:	4618      	mov	r0, r3
 800c8d8:	f016 fb73 	bl	8022fc2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 800c8dc:	bf00      	nop
 800c8de:	3714      	adds	r7, #20
 800c8e0:	46bd      	mov	sp, r7
 800c8e2:	bd90      	pop	{r4, r7, pc}

0800c8e4 <_ZSt7forwardIOSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800c8e4:	b480      	push	{r7}
 800c8e6:	b083      	sub	sp, #12
 800c8e8:	af00      	add	r7, sp, #0
 800c8ea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800c8ec:	687b      	ldr	r3, [r7, #4]
 800c8ee:	4618      	mov	r0, r3
 800c8f0:	370c      	adds	r7, #12
 800c8f2:	46bd      	mov	sp, r7
 800c8f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8f8:	4770      	bx	lr

0800c8fa <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEESB_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800c8fa:	b590      	push	{r4, r7, lr}
 800c8fc:	b085      	sub	sp, #20
 800c8fe:	af00      	add	r7, sp, #0
 800c900:	6078      	str	r0, [r7, #4]
 800c902:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800c904:	687b      	ldr	r3, [r7, #4]
 800c906:	4618      	mov	r0, r3
 800c908:	f7ff ff49 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800c90c:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800c90e:	6838      	ldr	r0, [r7, #0]
 800c910:	f7ff ffe8 	bl	800c8e4 <_ZSt7forwardIOSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>
 800c914:	4604      	mov	r4, r0
        ::new (__storage)
 800c916:	68fb      	ldr	r3, [r7, #12]
 800c918:	4619      	mov	r1, r3
 800c91a:	200c      	movs	r0, #12
 800c91c:	f7f4 fb9d 	bl	800105a <_ZnwjPv>
 800c920:	4603      	mov	r3, r0
 800c922:	4621      	mov	r1, r4
 800c924:	4618      	mov	r0, r3
 800c926:	f7ff fe21 	bl	800c56c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EOS7_>
    }
 800c92a:	bf00      	nop
 800c92c:	3714      	adds	r7, #20
 800c92e:	46bd      	mov	sp, r7
 800c930:	bd90      	pop	{r4, r7, pc}

0800c932 <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800c932:	b480      	push	{r7}
 800c934:	b083      	sub	sp, #12
 800c936:	af00      	add	r7, sp, #0
 800c938:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800c93a:	687b      	ldr	r3, [r7, #4]
 800c93c:	4618      	mov	r0, r3
 800c93e:	370c      	adds	r7, #12
 800c940:	46bd      	mov	sp, r7
 800c942:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c946:	4770      	bx	lr

0800c948 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEESE_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800c948:	b590      	push	{r4, r7, lr}
 800c94a:	b085      	sub	sp, #20
 800c94c:	af00      	add	r7, sp, #0
 800c94e:	6078      	str	r0, [r7, #4]
 800c950:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800c952:	687b      	ldr	r3, [r7, #4]
 800c954:	4618      	mov	r0, r3
 800c956:	f7ff ff22 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800c95a:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800c95c:	6838      	ldr	r0, [r7, #0]
 800c95e:	f7ff ffe8 	bl	800c932 <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800c962:	4604      	mov	r4, r0
        ::new (__storage)
 800c964:	68fb      	ldr	r3, [r7, #12]
 800c966:	4619      	mov	r1, r3
 800c968:	200c      	movs	r0, #12
 800c96a:	f7f4 fb76 	bl	800105a <_ZnwjPv>
 800c96e:	4603      	mov	r3, r0
 800c970:	4621      	mov	r1, r4
 800c972:	4618      	mov	r0, r3
 800c974:	f7ff fea2 	bl	800c6bc <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>
    }
 800c978:	bf00      	nop
 800c97a:	3714      	adds	r7, #20
 800c97c:	46bd      	mov	sp, r7
 800c97e:	bd90      	pop	{r4, r7, pc}

0800c980 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800c980:	b480      	push	{r7}
 800c982:	b083      	sub	sp, #12
 800c984:	af00      	add	r7, sp, #0
 800c986:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800c988:	687b      	ldr	r3, [r7, #4]
 800c98a:	4618      	mov	r0, r3
 800c98c:	370c      	adds	r7, #12
 800c98e:	46bd      	mov	sp, r7
 800c990:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c994:	4770      	bx	lr

0800c996 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800c996:	b590      	push	{r4, r7, lr}
 800c998:	b085      	sub	sp, #20
 800c99a:	af00      	add	r7, sp, #0
 800c99c:	6078      	str	r0, [r7, #4]
 800c99e:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800c9a0:	687b      	ldr	r3, [r7, #4]
 800c9a2:	4618      	mov	r0, r3
 800c9a4:	f7ff fefb 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800c9a8:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800c9aa:	6838      	ldr	r0, [r7, #0]
 800c9ac:	f7fd ff71 	bl	800a892 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800c9b0:	4603      	mov	r3, r0
        ::new (__storage)
 800c9b2:	681c      	ldr	r4, [r3, #0]
 800c9b4:	68fb      	ldr	r3, [r7, #12]
 800c9b6:	4619      	mov	r1, r3
 800c9b8:	2004      	movs	r0, #4
 800c9ba:	f7f4 fb4e 	bl	800105a <_ZnwjPv>
 800c9be:	4603      	mov	r3, r0
 800c9c0:	601c      	str	r4, [r3, #0]
    }
 800c9c2:	bf00      	nop
 800c9c4:	3714      	adds	r7, #20
 800c9c6:	46bd      	mov	sp, r7
 800c9c8:	bd90      	pop	{r4, r7, pc}

0800c9ca <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800c9ca:	b590      	push	{r4, r7, lr}
 800c9cc:	b085      	sub	sp, #20
 800c9ce:	af00      	add	r7, sp, #0
 800c9d0:	6078      	str	r0, [r7, #4]
 800c9d2:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800c9d4:	687b      	ldr	r3, [r7, #4]
 800c9d6:	4618      	mov	r0, r3
 800c9d8:	f7ff fee1 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800c9dc:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800c9de:	6838      	ldr	r0, [r7, #0]
 800c9e0:	f7fd ff80 	bl	800a8e4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800c9e4:	4603      	mov	r3, r0
        ::new (__storage)
 800c9e6:	681c      	ldr	r4, [r3, #0]
 800c9e8:	68fb      	ldr	r3, [r7, #12]
 800c9ea:	4619      	mov	r1, r3
 800c9ec:	2004      	movs	r0, #4
 800c9ee:	f7f4 fb34 	bl	800105a <_ZnwjPv>
 800c9f2:	4603      	mov	r3, r0
 800c9f4:	601c      	str	r4, [r3, #0]
    }
 800c9f6:	bf00      	nop
 800c9f8:	3714      	adds	r7, #20
 800c9fa:	46bd      	mov	sp, r7
 800c9fc:	bd90      	pop	{r4, r7, pc}

0800c9fe <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800c9fe:	b590      	push	{r4, r7, lr}
 800ca00:	b085      	sub	sp, #20
 800ca02:	af00      	add	r7, sp, #0
 800ca04:	6078      	str	r0, [r7, #4]
 800ca06:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800ca08:	687b      	ldr	r3, [r7, #4]
 800ca0a:	4618      	mov	r0, r3
 800ca0c:	f7ff fec7 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800ca10:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800ca12:	6838      	ldr	r0, [r7, #0]
 800ca14:	f7fd ff8f 	bl	800a936 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800ca18:	4603      	mov	r3, r0
        ::new (__storage)
 800ca1a:	781c      	ldrb	r4, [r3, #0]
 800ca1c:	68fb      	ldr	r3, [r7, #12]
 800ca1e:	4619      	mov	r1, r3
 800ca20:	2001      	movs	r0, #1
 800ca22:	f7f4 fb1a 	bl	800105a <_ZnwjPv>
 800ca26:	4603      	mov	r3, r0
 800ca28:	4622      	mov	r2, r4
 800ca2a:	701a      	strb	r2, [r3, #0]
    }
 800ca2c:	bf00      	nop
 800ca2e:	3714      	adds	r7, #20
 800ca30:	46bd      	mov	sp, r7
 800ca32:	bd90      	pop	{r4, r7, pc}

0800ca34 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKS8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800ca34:	b590      	push	{r4, r7, lr}
 800ca36:	b085      	sub	sp, #20
 800ca38:	af00      	add	r7, sp, #0
 800ca3a:	6078      	str	r0, [r7, #4]
 800ca3c:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800ca3e:	687b      	ldr	r3, [r7, #4]
 800ca40:	4618      	mov	r0, r3
 800ca42:	f7ff feac 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800ca46:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800ca48:	6838      	ldr	r0, [r7, #0]
 800ca4a:	f7fd ffa9 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800ca4e:	4604      	mov	r4, r0
        ::new (__storage)
 800ca50:	68fb      	ldr	r3, [r7, #12]
 800ca52:	4619      	mov	r1, r3
 800ca54:	2018      	movs	r0, #24
 800ca56:	f7f4 fb00 	bl	800105a <_ZnwjPv>
 800ca5a:	4603      	mov	r3, r0
 800ca5c:	4621      	mov	r1, r4
 800ca5e:	4618      	mov	r0, r3
 800ca60:	f016 fbfa 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
    }
 800ca64:	bf00      	nop
 800ca66:	3714      	adds	r7, #20
 800ca68:	46bd      	mov	sp, r7
 800ca6a:	bd90      	pop	{r4, r7, pc}

0800ca6c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKSB_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800ca6c:	b590      	push	{r4, r7, lr}
 800ca6e:	b085      	sub	sp, #20
 800ca70:	af00      	add	r7, sp, #0
 800ca72:	6078      	str	r0, [r7, #4]
 800ca74:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800ca76:	687b      	ldr	r3, [r7, #4]
 800ca78:	4618      	mov	r0, r3
 800ca7a:	f7ff fe90 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800ca7e:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800ca80:	6838      	ldr	r0, [r7, #0]
 800ca82:	f7fd ffc2 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800ca86:	4604      	mov	r4, r0
        ::new (__storage)
 800ca88:	68fb      	ldr	r3, [r7, #12]
 800ca8a:	4619      	mov	r1, r3
 800ca8c:	200c      	movs	r0, #12
 800ca8e:	f7f4 fae4 	bl	800105a <_ZnwjPv>
 800ca92:	4603      	mov	r3, r0
 800ca94:	4621      	mov	r1, r4
 800ca96:	4618      	mov	r0, r3
 800ca98:	f000 fdcc 	bl	800d634 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_>
    }
 800ca9c:	bf00      	nop
 800ca9e:	3714      	adds	r7, #20
 800caa0:	46bd      	mov	sp, r7
 800caa2:	bd90      	pop	{r4, r7, pc}

0800caa4 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKSE_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800caa4:	b590      	push	{r4, r7, lr}
 800caa6:	b085      	sub	sp, #20
 800caa8:	af00      	add	r7, sp, #0
 800caaa:	6078      	str	r0, [r7, #4]
 800caac:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800caae:	687b      	ldr	r3, [r7, #4]
 800cab0:	4618      	mov	r0, r3
 800cab2:	f7ff fe74 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800cab6:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800cab8:	6838      	ldr	r0, [r7, #0]
 800caba:	f7fd ffdb 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800cabe:	4604      	mov	r4, r0
        ::new (__storage)
 800cac0:	68fb      	ldr	r3, [r7, #12]
 800cac2:	4619      	mov	r1, r3
 800cac4:	200c      	movs	r0, #12
 800cac6:	f7f4 fac8 	bl	800105a <_ZnwjPv>
 800caca:	4603      	mov	r3, r0
 800cacc:	4621      	mov	r1, r4
 800cace:	4618      	mov	r0, r3
 800cad0:	f000 fded 	bl	800d6ae <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
    }
 800cad4:	bf00      	nop
 800cad6:	3714      	adds	r7, #20
 800cad8:	46bd      	mov	sp, r7
 800cada:	bd90      	pop	{r4, r7, pc}

0800cadc <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800cadc:	b590      	push	{r4, r7, lr}
 800cade:	b085      	sub	sp, #20
 800cae0:	af00      	add	r7, sp, #0
 800cae2:	6078      	str	r0, [r7, #4]
 800cae4:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800cae6:	687b      	ldr	r3, [r7, #4]
 800cae8:	4618      	mov	r0, r3
 800caea:	f7ff fe58 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800caee:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800caf0:	6838      	ldr	r0, [r7, #0]
 800caf2:	f7fd fece 	bl	800a892 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800caf6:	4603      	mov	r3, r0
        ::new (__storage)
 800caf8:	681c      	ldr	r4, [r3, #0]
 800cafa:	68fb      	ldr	r3, [r7, #12]
 800cafc:	4619      	mov	r1, r3
 800cafe:	2004      	movs	r0, #4
 800cb00:	f7f4 faab 	bl	800105a <_ZnwjPv>
 800cb04:	4603      	mov	r3, r0
 800cb06:	601c      	str	r4, [r3, #0]
    }
 800cb08:	bf00      	nop
 800cb0a:	3714      	adds	r7, #20
 800cb0c:	46bd      	mov	sp, r7
 800cb0e:	bd90      	pop	{r4, r7, pc}

0800cb10 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800cb10:	b590      	push	{r4, r7, lr}
 800cb12:	b085      	sub	sp, #20
 800cb14:	af00      	add	r7, sp, #0
 800cb16:	6078      	str	r0, [r7, #4]
 800cb18:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800cb1a:	687b      	ldr	r3, [r7, #4]
 800cb1c:	4618      	mov	r0, r3
 800cb1e:	f7ff fe3e 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800cb22:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800cb24:	6838      	ldr	r0, [r7, #0]
 800cb26:	f7fd fedd 	bl	800a8e4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800cb2a:	4603      	mov	r3, r0
        ::new (__storage)
 800cb2c:	681c      	ldr	r4, [r3, #0]
 800cb2e:	68fb      	ldr	r3, [r7, #12]
 800cb30:	4619      	mov	r1, r3
 800cb32:	2004      	movs	r0, #4
 800cb34:	f7f4 fa91 	bl	800105a <_ZnwjPv>
 800cb38:	4603      	mov	r3, r0
 800cb3a:	601c      	str	r4, [r3, #0]
    }
 800cb3c:	bf00      	nop
 800cb3e:	3714      	adds	r7, #20
 800cb40:	46bd      	mov	sp, r7
 800cb42:	bd90      	pop	{r4, r7, pc}

0800cb44 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800cb44:	b590      	push	{r4, r7, lr}
 800cb46:	b085      	sub	sp, #20
 800cb48:	af00      	add	r7, sp, #0
 800cb4a:	6078      	str	r0, [r7, #4]
 800cb4c:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800cb4e:	687b      	ldr	r3, [r7, #4]
 800cb50:	4618      	mov	r0, r3
 800cb52:	f7ff fe24 	bl	800c79e <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEPT_RSG_>
 800cb56:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800cb58:	6838      	ldr	r0, [r7, #0]
 800cb5a:	f7fd feec 	bl	800a936 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800cb5e:	4603      	mov	r3, r0
        ::new (__storage)
 800cb60:	781c      	ldrb	r4, [r3, #0]
 800cb62:	68fb      	ldr	r3, [r7, #12]
 800cb64:	4619      	mov	r1, r3
 800cb66:	2001      	movs	r0, #1
 800cb68:	f7f4 fa77 	bl	800105a <_ZnwjPv>
 800cb6c:	4603      	mov	r3, r0
 800cb6e:	4622      	mov	r2, r4
 800cb70:	701a      	strb	r2, [r3, #0]
    }
 800cb72:	bf00      	nop
 800cb74:	3714      	adds	r7, #20
 800cb76:	46bd      	mov	sp, r7
 800cb78:	bd90      	pop	{r4, r7, pc}

0800cb7a <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cb7a:	b590      	push	{r4, r7, lr}
 800cb7c:	b085      	sub	sp, #20
 800cb7e:	af00      	add	r7, sp, #0
 800cb80:	60f8      	str	r0, [r7, #12]
 800cb82:	7239      	strb	r1, [r7, #8]
 800cb84:	607a      	str	r2, [r7, #4]
 800cb86:	68fb      	ldr	r3, [r7, #12]
 800cb88:	687a      	ldr	r2, [r7, #4]
 800cb8a:	4621      	mov	r1, r4
 800cb8c:	4618      	mov	r0, r3
 800cb8e:	f000 fe3c 	bl	800d80a <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 800cb92:	68fb      	ldr	r3, [r7, #12]
 800cb94:	4618      	mov	r0, r3
 800cb96:	3714      	adds	r7, #20
 800cb98:	46bd      	mov	sp, r7
 800cb9a:	bd90      	pop	{r4, r7, pc}

0800cb9c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cb9c:	b590      	push	{r4, r7, lr}
 800cb9e:	b085      	sub	sp, #20
 800cba0:	af00      	add	r7, sp, #0
 800cba2:	60f8      	str	r0, [r7, #12]
 800cba4:	7239      	strb	r1, [r7, #8]
 800cba6:	607a      	str	r2, [r7, #4]
 800cba8:	68fb      	ldr	r3, [r7, #12]
 800cbaa:	687a      	ldr	r2, [r7, #4]
 800cbac:	4621      	mov	r1, r4
 800cbae:	4618      	mov	r0, r3
 800cbb0:	f7ff ffe3 	bl	800cb7a <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 800cbb4:	68fb      	ldr	r3, [r7, #12]
 800cbb6:	4618      	mov	r0, r3
 800cbb8:	3714      	adds	r7, #20
 800cbba:	46bd      	mov	sp, r7
 800cbbc:	bd90      	pop	{r4, r7, pc}

0800cbbe <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cbbe:	b590      	push	{r4, r7, lr}
 800cbc0:	b085      	sub	sp, #20
 800cbc2:	af00      	add	r7, sp, #0
 800cbc4:	60f8      	str	r0, [r7, #12]
 800cbc6:	7239      	strb	r1, [r7, #8]
 800cbc8:	607a      	str	r2, [r7, #4]
 800cbca:	68fb      	ldr	r3, [r7, #12]
 800cbcc:	687a      	ldr	r2, [r7, #4]
 800cbce:	4621      	mov	r1, r4
 800cbd0:	4618      	mov	r0, r3
 800cbd2:	f7ff ffe3 	bl	800cb9c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 800cbd6:	68fb      	ldr	r3, [r7, #12]
 800cbd8:	4618      	mov	r0, r3
 800cbda:	3714      	adds	r7, #20
 800cbdc:	46bd      	mov	sp, r7
 800cbde:	bd90      	pop	{r4, r7, pc}

0800cbe0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cbe0:	b590      	push	{r4, r7, lr}
 800cbe2:	b085      	sub	sp, #20
 800cbe4:	af00      	add	r7, sp, #0
 800cbe6:	60f8      	str	r0, [r7, #12]
 800cbe8:	7239      	strb	r1, [r7, #8]
 800cbea:	607a      	str	r2, [r7, #4]
 800cbec:	68fb      	ldr	r3, [r7, #12]
 800cbee:	687a      	ldr	r2, [r7, #4]
 800cbf0:	4621      	mov	r1, r4
 800cbf2:	4618      	mov	r0, r3
 800cbf4:	f7ff ffe3 	bl	800cbbe <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 800cbf8:	68fb      	ldr	r3, [r7, #12]
 800cbfa:	4618      	mov	r0, r3
 800cbfc:	3714      	adds	r7, #20
 800cbfe:	46bd      	mov	sp, r7
 800cc00:	bd90      	pop	{r4, r7, pc}

0800cc02 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 800cc02:	b5b0      	push	{r4, r5, r7, lr}
 800cc04:	b084      	sub	sp, #16
 800cc06:	af00      	add	r7, sp, #0
 800cc08:	60f8      	str	r0, [r7, #12]
 800cc0a:	7239      	strb	r1, [r7, #8]
 800cc0c:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 800cc0e:	68fc      	ldr	r4, [r7, #12]
 800cc10:	6878      	ldr	r0, [r7, #4]
 800cc12:	f7fd fec5 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800cc16:	4603      	mov	r3, r0
 800cc18:	461a      	mov	r2, r3
 800cc1a:	4629      	mov	r1, r5
 800cc1c:	4620      	mov	r0, r4
 800cc1e:	f7ff ffdf 	bl	800cbe0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800cc22:	68fb      	ldr	r3, [r7, #12]
 800cc24:	4618      	mov	r0, r3
 800cc26:	3710      	adds	r7, #16
 800cc28:	46bd      	mov	sp, r7
 800cc2a:	bdb0      	pop	{r4, r5, r7, pc}

0800cc2c <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEC1ESt31_Enable_default_constructor_tag>:
    _Enable_default_constructor&
    operator=(_Enable_default_constructor&&) noexcept = default;

    // Can be used in other ctors.
    constexpr explicit
    _Enable_default_constructor(_Enable_default_constructor_tag) { }
 800cc2c:	b480      	push	{r7}
 800cc2e:	b083      	sub	sp, #12
 800cc30:	af00      	add	r7, sp, #0
 800cc32:	6078      	str	r0, [r7, #4]
 800cc34:	7039      	strb	r1, [r7, #0]
 800cc36:	687b      	ldr	r3, [r7, #4]
 800cc38:	4618      	mov	r0, r3
 800cc3a:	370c      	adds	r7, #12
 800cc3c:	46bd      	mov	sp, r7
 800cc3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc42:	4770      	bx	lr

0800cc44 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800cc44:	b480      	push	{r7}
 800cc46:	b083      	sub	sp, #12
 800cc48:	af00      	add	r7, sp, #0
 800cc4a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800cc4c:	687b      	ldr	r3, [r7, #4]
 800cc4e:	4618      	mov	r0, r3
 800cc50:	370c      	adds	r7, #12
 800cc52:	46bd      	mov	sp, r7
 800cc54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc58:	4770      	bx	lr

0800cc5a <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 800cc5a:	b480      	push	{r7}
 800cc5c:	b083      	sub	sp, #12
 800cc5e:	af00      	add	r7, sp, #0
 800cc60:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800cc62:	687b      	ldr	r3, [r7, #4]
 800cc64:	4618      	mov	r0, r3
 800cc66:	370c      	adds	r7, #12
 800cc68:	46bd      	mov	sp, r7
 800cc6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc6e:	4770      	bx	lr

0800cc70 <_ZStneRKSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_>:
      friend bool
      operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW
      { return true; }

      friend bool
      operator!=(const allocator&, const allocator&) _GLIBCXX_NOTHROW
 800cc70:	b480      	push	{r7}
 800cc72:	b083      	sub	sp, #12
 800cc74:	af00      	add	r7, sp, #0
 800cc76:	6078      	str	r0, [r7, #4]
 800cc78:	6039      	str	r1, [r7, #0]
      { return false; }
 800cc7a:	2300      	movs	r3, #0
 800cc7c:	4618      	mov	r0, r3
 800cc7e:	370c      	adds	r7, #12
 800cc80:	46bd      	mov	sp, r7
 800cc82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc86:	4770      	bx	lr

0800cc88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv>:
      clear() _GLIBCXX_NOEXCEPT
 800cc88:	b580      	push	{r7, lr}
 800cc8a:	b082      	sub	sp, #8
 800cc8c:	af00      	add	r7, sp, #0
 800cc8e:	6078      	str	r0, [r7, #4]
      { _M_erase_at_end(this->_M_impl._M_start); }
 800cc90:	687b      	ldr	r3, [r7, #4]
 800cc92:	681b      	ldr	r3, [r3, #0]
 800cc94:	4619      	mov	r1, r3
 800cc96:	6878      	ldr	r0, [r7, #4]
 800cc98:	f000 fdd0 	bl	800d83c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endEPS5_>
 800cc9c:	bf00      	nop
 800cc9e:	3708      	adds	r7, #8
 800cca0:	46bd      	mov	sp, r7
 800cca2:	bd80      	pop	{r7, pc}

0800cca4 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_j>:
      _M_deallocate(pointer __p, size_t __n)
 800cca4:	b580      	push	{r7, lr}
 800cca6:	b084      	sub	sp, #16
 800cca8:	af00      	add	r7, sp, #0
 800ccaa:	60f8      	str	r0, [r7, #12]
 800ccac:	60b9      	str	r1, [r7, #8]
 800ccae:	607a      	str	r2, [r7, #4]
	if (__p)
 800ccb0:	68bb      	ldr	r3, [r7, #8]
 800ccb2:	2b00      	cmp	r3, #0
 800ccb4:	d005      	beq.n	800ccc2 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800ccb6:	68fb      	ldr	r3, [r7, #12]
 800ccb8:	687a      	ldr	r2, [r7, #4]
 800ccba:	68b9      	ldr	r1, [r7, #8]
 800ccbc:	4618      	mov	r0, r3
 800ccbe:	f000 fde3 	bl	800d888 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_j>
      }
 800ccc2:	bf00      	nop
 800ccc4:	3710      	adds	r7, #16
 800ccc6:	46bd      	mov	sp, r7
 800ccc8:	bd80      	pop	{r7, pc}

0800ccca <_ZSt15__alloc_on_copyISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_RKS7_>:
    inline void
    __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
    { }

  template<typename _Alloc>
    inline void __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 800ccca:	b580      	push	{r7, lr}
 800cccc:	b084      	sub	sp, #16
 800ccce:	af00      	add	r7, sp, #0
 800ccd0:	6078      	str	r0, [r7, #4]
 800ccd2:	6039      	str	r1, [r7, #0]
    {
      typedef allocator_traits<_Alloc> __traits;
      typedef typename __traits::propagate_on_container_copy_assignment __pocca;
      __do_alloc_on_copy(__one, __two, __pocca());
 800ccd4:	461a      	mov	r2, r3
 800ccd6:	6839      	ldr	r1, [r7, #0]
 800ccd8:	6878      	ldr	r0, [r7, #4]
 800ccda:	f000 fde4 	bl	800d8a6 <_ZSt18__do_alloc_on_copyISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_RKS7_St17integral_constantIbLb0EE>
    }
 800ccde:	bf00      	nop
 800cce0:	3710      	adds	r7, #16
 800cce2:	46bd      	mov	sp, r7
 800cce4:	bd80      	pop	{r7, pc}
	...

0800cce8 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800cce8:	b480      	push	{r7}
 800ccea:	b083      	sub	sp, #12
 800ccec:	af00      	add	r7, sp, #0
 800ccee:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800ccf0:	687b      	ldr	r3, [r7, #4]
 800ccf2:	685a      	ldr	r2, [r3, #4]
 800ccf4:	687b      	ldr	r3, [r7, #4]
 800ccf6:	681b      	ldr	r3, [r3, #0]
 800ccf8:	1ad3      	subs	r3, r2, r3
 800ccfa:	10db      	asrs	r3, r3, #3
 800ccfc:	4a04      	ldr	r2, [pc, #16]	; (800cd10 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv+0x28>)
 800ccfe:	fb02 f303 	mul.w	r3, r2, r3
 800cd02:	4618      	mov	r0, r3
 800cd04:	370c      	adds	r7, #12
 800cd06:	46bd      	mov	sp, r7
 800cd08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd0c:	4770      	bx	lr
 800cd0e:	bf00      	nop
 800cd10:	aaaaaaab 	.word	0xaaaaaaab

0800cd14 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
 800cd14:	b480      	push	{r7}
 800cd16:	b083      	sub	sp, #12
 800cd18:	af00      	add	r7, sp, #0
 800cd1a:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_end_of_storage
 800cd1c:	687b      	ldr	r3, [r7, #4]
 800cd1e:	689a      	ldr	r2, [r3, #8]
			 - this->_M_impl._M_start); }
 800cd20:	687b      	ldr	r3, [r7, #4]
 800cd22:	681b      	ldr	r3, [r3, #0]
 800cd24:	1ad3      	subs	r3, r2, r3
 800cd26:	10db      	asrs	r3, r3, #3
 800cd28:	4a04      	ldr	r2, [pc, #16]	; (800cd3c <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8capacityEv+0x28>)
 800cd2a:	fb02 f303 	mul.w	r3, r2, r3
 800cd2e:	4618      	mov	r0, r3
 800cd30:	370c      	adds	r7, #12
 800cd32:	46bd      	mov	sp, r7
 800cd34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd38:	4770      	bx	lr
 800cd3a:	bf00      	nop
 800cd3c:	aaaaaaab 	.word	0xaaaaaaab

0800cd40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 800cd40:	b580      	push	{r7, lr}
 800cd42:	b084      	sub	sp, #16
 800cd44:	af00      	add	r7, sp, #0
 800cd46:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 800cd48:	687b      	ldr	r3, [r7, #4]
 800cd4a:	681b      	ldr	r3, [r3, #0]
 800cd4c:	60fb      	str	r3, [r7, #12]
 800cd4e:	f107 020c 	add.w	r2, r7, #12
 800cd52:	f107 0308 	add.w	r3, r7, #8
 800cd56:	4611      	mov	r1, r2
 800cd58:	4618      	mov	r0, r3
 800cd5a:	f000 fdb0 	bl	800d8be <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC1ERKS8_>
 800cd5e:	68bb      	ldr	r3, [r7, #8]
 800cd60:	4618      	mov	r0, r3
 800cd62:	3710      	adds	r7, #16
 800cd64:	46bd      	mov	sp, r7
 800cd66:	bd80      	pop	{r7, pc}

0800cd68 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800cd68:	b580      	push	{r7, lr}
 800cd6a:	b084      	sub	sp, #16
 800cd6c:	af00      	add	r7, sp, #0
 800cd6e:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 800cd70:	687b      	ldr	r3, [r7, #4]
 800cd72:	685b      	ldr	r3, [r3, #4]
 800cd74:	60fb      	str	r3, [r7, #12]
 800cd76:	f107 020c 	add.w	r2, r7, #12
 800cd7a:	f107 0308 	add.w	r3, r7, #8
 800cd7e:	4611      	mov	r1, r2
 800cd80:	4618      	mov	r0, r3
 800cd82:	f000 fd9c 	bl	800d8be <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC1ERKS8_>
 800cd86:	68bb      	ldr	r3, [r7, #8]
 800cd88:	4618      	mov	r0, r3
 800cd8a:	3710      	adds	r7, #16
 800cd8c:	46bd      	mov	sp, r7
 800cd8e:	bd80      	pop	{r7, pc}

0800cd90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_jT_SF_>:
	_M_allocate_and_copy(size_type __n,
 800cd90:	b580      	push	{r7, lr}
 800cd92:	b086      	sub	sp, #24
 800cd94:	af00      	add	r7, sp, #0
 800cd96:	60f8      	str	r0, [r7, #12]
 800cd98:	60b9      	str	r1, [r7, #8]
 800cd9a:	607a      	str	r2, [r7, #4]
 800cd9c:	603b      	str	r3, [r7, #0]
	  pointer __result = this->_M_allocate(__n);
 800cd9e:	68fb      	ldr	r3, [r7, #12]
 800cda0:	68b9      	ldr	r1, [r7, #8]
 800cda2:	4618      	mov	r0, r3
 800cda4:	f000 fd9b 	bl	800d8de <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEj>
 800cda8:	6178      	str	r0, [r7, #20]
					  _M_get_Tp_allocator());
 800cdaa:	68fb      	ldr	r3, [r7, #12]
 800cdac:	4618      	mov	r0, r3
 800cdae:	f7ff ff49 	bl	800cc44 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800cdb2:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__first, __last, __result,
 800cdb4:	697a      	ldr	r2, [r7, #20]
 800cdb6:	6839      	ldr	r1, [r7, #0]
 800cdb8:	6878      	ldr	r0, [r7, #4]
 800cdba:	f000 fda4 	bl	800d906 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_S7_ET0_T_SG_SF_RSaIT1_E>
	      return __result;
 800cdbe:	697b      	ldr	r3, [r7, #20]
	}
 800cdc0:	4618      	mov	r0, r3
 800cdc2:	3718      	adds	r7, #24
 800cdc4:	46bd      	mov	sp, r7
 800cdc6:	bd80      	pop	{r7, pc}

0800cdc8 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800cdc8:	b580      	push	{r7, lr}
 800cdca:	b084      	sub	sp, #16
 800cdcc:	af00      	add	r7, sp, #0
 800cdce:	60f8      	str	r0, [r7, #12]
 800cdd0:	60b9      	str	r1, [r7, #8]
 800cdd2:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800cdd4:	68b9      	ldr	r1, [r7, #8]
 800cdd6:	68f8      	ldr	r0, [r7, #12]
 800cdd8:	f000 fda6 	bl	800d928 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>
    }
 800cddc:	bf00      	nop
 800cdde:	3710      	adds	r7, #16
 800cde0:	46bd      	mov	sp, r7
 800cde2:	bd80      	pop	{r7, pc}

0800cde4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800cde4:	b580      	push	{r7, lr}
 800cde6:	b084      	sub	sp, #16
 800cde8:	af00      	add	r7, sp, #0
 800cdea:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800cdec:	687a      	ldr	r2, [r7, #4]
 800cdee:	f107 030c 	add.w	r3, r7, #12
 800cdf2:	4611      	mov	r1, r2
 800cdf4:	4618      	mov	r0, r3
 800cdf6:	f000 fda4 	bl	800d942 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC1ERKS7_>
 800cdfa:	68fb      	ldr	r3, [r7, #12]
 800cdfc:	4618      	mov	r0, r3
 800cdfe:	3710      	adds	r7, #16
 800ce00:	46bd      	mov	sp, r7
 800ce02:	bd80      	pop	{r7, pc}

0800ce04 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET0_T_SH_SG_>:
   *  Note that the end of the output range is permitted to be contained
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    inline _OI
    copy(_II __first, _II __last, _OI __result)
 800ce04:	b590      	push	{r4, r7, lr}
 800ce06:	b085      	sub	sp, #20
 800ce08:	af00      	add	r7, sp, #0
 800ce0a:	60f8      	str	r0, [r7, #12]
 800ce0c:	60b9      	str	r1, [r7, #8]
 800ce0e:	607a      	str	r2, [r7, #4]
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::value_type>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a2<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 800ce10:	68f8      	ldr	r0, [r7, #12]
 800ce12:	f000 fda6 	bl	800d962 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEET_SE_>
 800ce16:	4604      	mov	r4, r0
 800ce18:	68b8      	ldr	r0, [r7, #8]
 800ce1a:	f000 fda2 	bl	800d962 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEET_SE_>
 800ce1e:	4603      	mov	r3, r0
 800ce20:	687a      	ldr	r2, [r7, #4]
 800ce22:	4619      	mov	r1, r3
 800ce24:	4620      	mov	r0, r4
 800ce26:	f000 fda7 	bl	800d978 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET1_T0_SH_SG_>
 800ce2a:	4603      	mov	r3, r0
    }
 800ce2c:	4618      	mov	r0, r3
 800ce2e:	3714      	adds	r7, #20
 800ce30:	46bd      	mov	sp, r7
 800ce32:	bd90      	pop	{r4, r7, pc}

0800ce34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800ce34:	b580      	push	{r7, lr}
 800ce36:	b084      	sub	sp, #16
 800ce38:	af00      	add	r7, sp, #0
 800ce3a:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800ce3c:	687b      	ldr	r3, [r7, #4]
 800ce3e:	1d1a      	adds	r2, r3, #4
 800ce40:	f107 030c 	add.w	r3, r7, #12
 800ce44:	4611      	mov	r1, r2
 800ce46:	4618      	mov	r0, r3
 800ce48:	f000 fd7b 	bl	800d942 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC1ERKS7_>
 800ce4c:	68fb      	ldr	r3, [r7, #12]
 800ce4e:	4618      	mov	r0, r3
 800ce50:	3710      	adds	r7, #16
 800ce52:	46bd      	mov	sp, r7
 800ce54:	bd80      	pop	{r7, pc}

0800ce56 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_EvT_SD_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800ce56:	b580      	push	{r7, lr}
 800ce58:	b084      	sub	sp, #16
 800ce5a:	af00      	add	r7, sp, #0
 800ce5c:	60f8      	str	r0, [r7, #12]
 800ce5e:	60b9      	str	r1, [r7, #8]
 800ce60:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800ce62:	68b9      	ldr	r1, [r7, #8]
 800ce64:	68f8      	ldr	r0, [r7, #12]
 800ce66:	f000 fda8 	bl	800d9ba <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEEvT_SD_>
    }
 800ce6a:	bf00      	nop
 800ce6c:	3710      	adds	r7, #16
 800ce6e:	46bd      	mov	sp, r7
 800ce70:	bd80      	pop	{r7, pc}

0800ce72 <_ZSt4copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>:
    copy(_II __first, _II __last, _OI __result)
 800ce72:	b590      	push	{r4, r7, lr}
 800ce74:	b085      	sub	sp, #20
 800ce76:	af00      	add	r7, sp, #0
 800ce78:	60f8      	str	r0, [r7, #12]
 800ce7a:	60b9      	str	r1, [r7, #8]
 800ce7c:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 800ce7e:	68f8      	ldr	r0, [r7, #12]
 800ce80:	f000 fda8 	bl	800d9d4 <_ZSt12__miter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
 800ce84:	4604      	mov	r4, r0
 800ce86:	68b8      	ldr	r0, [r7, #8]
 800ce88:	f000 fda4 	bl	800d9d4 <_ZSt12__miter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
 800ce8c:	4603      	mov	r3, r0
 800ce8e:	687a      	ldr	r2, [r7, #4]
 800ce90:	4619      	mov	r1, r3
 800ce92:	4620      	mov	r0, r4
 800ce94:	f000 fda9 	bl	800d9ea <_ZSt14__copy_move_a2ILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>
 800ce98:	4603      	mov	r3, r0
    }
 800ce9a:	4618      	mov	r0, r3
 800ce9c:	3714      	adds	r7, #20
 800ce9e:	46bd      	mov	sp, r7
 800cea0:	bd90      	pop	{r4, r7, pc}

0800cea2 <_ZSt22__uninitialized_copy_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S5_ET0_T_S8_S7_RSaIT1_E>:
	}
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 800cea2:	b580      	push	{r7, lr}
 800cea4:	b084      	sub	sp, #16
 800cea6:	af00      	add	r7, sp, #0
 800cea8:	60f8      	str	r0, [r7, #12]
 800ceaa:	60b9      	str	r1, [r7, #8]
 800ceac:	607a      	str	r2, [r7, #4]
 800ceae:	603b      	str	r3, [r7, #0]
			   _ForwardIterator __result, allocator<_Tp>&)
    { return std::uninitialized_copy(__first, __last, __result); }
 800ceb0:	687a      	ldr	r2, [r7, #4]
 800ceb2:	68b9      	ldr	r1, [r7, #8]
 800ceb4:	68f8      	ldr	r0, [r7, #12]
 800ceb6:	f000 fdbb 	bl	800da30 <_ZSt18uninitialized_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>
 800ceba:	4603      	mov	r3, r0
 800cebc:	4618      	mov	r0, r3
 800cebe:	3710      	adds	r7, #16
 800cec0:	46bd      	mov	sp, r7
 800cec2:	bd80      	pop	{r7, pc}

0800cec4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cec4:	b590      	push	{r4, r7, lr}
 800cec6:	b085      	sub	sp, #20
 800cec8:	af00      	add	r7, sp, #0
 800ceca:	60f8      	str	r0, [r7, #12]
 800cecc:	7239      	strb	r1, [r7, #8]
 800cece:	607a      	str	r2, [r7, #4]
 800ced0:	68fb      	ldr	r3, [r7, #12]
 800ced2:	687a      	ldr	r2, [r7, #4]
 800ced4:	4621      	mov	r1, r4
 800ced6:	4618      	mov	r0, r3
 800ced8:	f000 fe42 	bl	800db60 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>
 800cedc:	68fb      	ldr	r3, [r7, #12]
 800cede:	4618      	mov	r0, r3
 800cee0:	3714      	adds	r7, #20
 800cee2:	46bd      	mov	sp, r7
 800cee4:	bd90      	pop	{r4, r7, pc}

0800cee6 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cee6:	b590      	push	{r4, r7, lr}
 800cee8:	b085      	sub	sp, #20
 800ceea:	af00      	add	r7, sp, #0
 800ceec:	60f8      	str	r0, [r7, #12]
 800ceee:	7239      	strb	r1, [r7, #8]
 800cef0:	607a      	str	r2, [r7, #4]
 800cef2:	68fb      	ldr	r3, [r7, #12]
 800cef4:	687a      	ldr	r2, [r7, #4]
 800cef6:	4621      	mov	r1, r4
 800cef8:	4618      	mov	r0, r3
 800cefa:	f7ff ffe3 	bl	800cec4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>
 800cefe:	68fb      	ldr	r3, [r7, #12]
 800cf00:	4618      	mov	r0, r3
 800cf02:	3714      	adds	r7, #20
 800cf04:	46bd      	mov	sp, r7
 800cf06:	bd90      	pop	{r4, r7, pc}

0800cf08 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cf08:	b590      	push	{r4, r7, lr}
 800cf0a:	b085      	sub	sp, #20
 800cf0c:	af00      	add	r7, sp, #0
 800cf0e:	60f8      	str	r0, [r7, #12]
 800cf10:	7239      	strb	r1, [r7, #8]
 800cf12:	607a      	str	r2, [r7, #4]
 800cf14:	68fb      	ldr	r3, [r7, #12]
 800cf16:	687a      	ldr	r2, [r7, #4]
 800cf18:	4621      	mov	r1, r4
 800cf1a:	4618      	mov	r0, r3
 800cf1c:	f7ff ffe3 	bl	800cee6 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>
 800cf20:	68fb      	ldr	r3, [r7, #12]
 800cf22:	4618      	mov	r0, r3
 800cf24:	3714      	adds	r7, #20
 800cf26:	46bd      	mov	sp, r7
 800cf28:	bd90      	pop	{r4, r7, pc}

0800cf2a <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cf2a:	b590      	push	{r4, r7, lr}
 800cf2c:	b085      	sub	sp, #20
 800cf2e:	af00      	add	r7, sp, #0
 800cf30:	60f8      	str	r0, [r7, #12]
 800cf32:	7239      	strb	r1, [r7, #8]
 800cf34:	607a      	str	r2, [r7, #4]
 800cf36:	68fb      	ldr	r3, [r7, #12]
 800cf38:	687a      	ldr	r2, [r7, #4]
 800cf3a:	4621      	mov	r1, r4
 800cf3c:	4618      	mov	r0, r3
 800cf3e:	f7ff ffe3 	bl	800cf08 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>
 800cf42:	68fb      	ldr	r3, [r7, #12]
 800cf44:	4618      	mov	r0, r3
 800cf46:	3714      	adds	r7, #20
 800cf48:	46bd      	mov	sp, r7
 800cf4a:	bd90      	pop	{r4, r7, pc}

0800cf4c <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 800cf4c:	b5b0      	push	{r4, r5, r7, lr}
 800cf4e:	b084      	sub	sp, #16
 800cf50:	af00      	add	r7, sp, #0
 800cf52:	60f8      	str	r0, [r7, #12]
 800cf54:	7239      	strb	r1, [r7, #8]
 800cf56:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 800cf58:	68fc      	ldr	r4, [r7, #12]
 800cf5a:	6878      	ldr	r0, [r7, #4]
 800cf5c:	f7fd fd55 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800cf60:	4603      	mov	r3, r0
 800cf62:	461a      	mov	r2, r3
 800cf64:	4629      	mov	r1, r5
 800cf66:	4620      	mov	r0, r4
 800cf68:	f7ff ffdf 	bl	800cf2a <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800cf6c:	68fb      	ldr	r3, [r7, #12]
 800cf6e:	4618      	mov	r0, r3
 800cf70:	3710      	adds	r7, #16
 800cf72:	46bd      	mov	sp, r7
 800cf74:	bdb0      	pop	{r4, r5, r7, pc}

0800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800cf76:	b480      	push	{r7}
 800cf78:	b083      	sub	sp, #12
 800cf7a:	af00      	add	r7, sp, #0
 800cf7c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800cf7e:	687b      	ldr	r3, [r7, #4]
 800cf80:	4618      	mov	r0, r3
 800cf82:	370c      	adds	r7, #12
 800cf84:	46bd      	mov	sp, r7
 800cf86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf8a:	4770      	bx	lr

0800cf8c <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 800cf8c:	b480      	push	{r7}
 800cf8e:	b083      	sub	sp, #12
 800cf90:	af00      	add	r7, sp, #0
 800cf92:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800cf94:	687b      	ldr	r3, [r7, #4]
 800cf96:	4618      	mov	r0, r3
 800cf98:	370c      	adds	r7, #12
 800cf9a:	46bd      	mov	sp, r7
 800cf9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfa0:	4770      	bx	lr

0800cfa2 <_ZStneRKSaI6SymbolES2_>:
      operator!=(const allocator&, const allocator&) _GLIBCXX_NOTHROW
 800cfa2:	b480      	push	{r7}
 800cfa4:	b083      	sub	sp, #12
 800cfa6:	af00      	add	r7, sp, #0
 800cfa8:	6078      	str	r0, [r7, #4]
 800cfaa:	6039      	str	r1, [r7, #0]
      { return false; }
 800cfac:	2300      	movs	r3, #0
 800cfae:	4618      	mov	r0, r3
 800cfb0:	370c      	adds	r7, #12
 800cfb2:	46bd      	mov	sp, r7
 800cfb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfb8:	4770      	bx	lr

0800cfba <_ZNSt6vectorI6SymbolSaIS0_EE5clearEv>:
      clear() _GLIBCXX_NOEXCEPT
 800cfba:	b580      	push	{r7, lr}
 800cfbc:	b082      	sub	sp, #8
 800cfbe:	af00      	add	r7, sp, #0
 800cfc0:	6078      	str	r0, [r7, #4]
      { _M_erase_at_end(this->_M_impl._M_start); }
 800cfc2:	687b      	ldr	r3, [r7, #4]
 800cfc4:	681b      	ldr	r3, [r3, #0]
 800cfc6:	4619      	mov	r1, r3
 800cfc8:	6878      	ldr	r0, [r7, #4]
 800cfca:	f000 fde1 	bl	800db90 <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_>
 800cfce:	bf00      	nop
 800cfd0:	3708      	adds	r7, #8
 800cfd2:	46bd      	mov	sp, r7
 800cfd4:	bd80      	pop	{r7, pc}

0800cfd6 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 800cfd6:	b580      	push	{r7, lr}
 800cfd8:	b084      	sub	sp, #16
 800cfda:	af00      	add	r7, sp, #0
 800cfdc:	60f8      	str	r0, [r7, #12]
 800cfde:	60b9      	str	r1, [r7, #8]
 800cfe0:	607a      	str	r2, [r7, #4]
	if (__p)
 800cfe2:	68bb      	ldr	r3, [r7, #8]
 800cfe4:	2b00      	cmp	r3, #0
 800cfe6:	d005      	beq.n	800cff4 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800cfe8:	68fb      	ldr	r3, [r7, #12]
 800cfea:	687a      	ldr	r2, [r7, #4]
 800cfec:	68b9      	ldr	r1, [r7, #8]
 800cfee:	4618      	mov	r0, r3
 800cff0:	f000 fdef 	bl	800dbd2 <_ZNSt16allocator_traitsISaI6SymbolEE10deallocateERS1_PS0_j>
      }
 800cff4:	bf00      	nop
 800cff6:	3710      	adds	r7, #16
 800cff8:	46bd      	mov	sp, r7
 800cffa:	bd80      	pop	{r7, pc}

0800cffc <_ZSt15__alloc_on_copyISaI6SymbolEEvRT_RKS2_>:
    inline void __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 800cffc:	b580      	push	{r7, lr}
 800cffe:	b084      	sub	sp, #16
 800d000:	af00      	add	r7, sp, #0
 800d002:	6078      	str	r0, [r7, #4]
 800d004:	6039      	str	r1, [r7, #0]
      __do_alloc_on_copy(__one, __two, __pocca());
 800d006:	461a      	mov	r2, r3
 800d008:	6839      	ldr	r1, [r7, #0]
 800d00a:	6878      	ldr	r0, [r7, #4]
 800d00c:	f000 fdf0 	bl	800dbf0 <_ZSt18__do_alloc_on_copyISaI6SymbolEEvRT_RKS2_St17integral_constantIbLb0EE>
    }
 800d010:	bf00      	nop
 800d012:	3710      	adds	r7, #16
 800d014:	46bd      	mov	sp, r7
 800d016:	bd80      	pop	{r7, pc}

0800d018 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800d018:	b480      	push	{r7}
 800d01a:	b083      	sub	sp, #12
 800d01c:	af00      	add	r7, sp, #0
 800d01e:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800d020:	687b      	ldr	r3, [r7, #4]
 800d022:	685a      	ldr	r2, [r3, #4]
 800d024:	687b      	ldr	r3, [r7, #4]
 800d026:	681b      	ldr	r3, [r3, #0]
 800d028:	1ad3      	subs	r3, r2, r3
 800d02a:	115b      	asrs	r3, r3, #5
 800d02c:	4618      	mov	r0, r3
 800d02e:	370c      	adds	r7, #12
 800d030:	46bd      	mov	sp, r7
 800d032:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d036:	4770      	bx	lr

0800d038 <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
 800d038:	b480      	push	{r7}
 800d03a:	b083      	sub	sp, #12
 800d03c:	af00      	add	r7, sp, #0
 800d03e:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_end_of_storage
 800d040:	687b      	ldr	r3, [r7, #4]
 800d042:	689a      	ldr	r2, [r3, #8]
			 - this->_M_impl._M_start); }
 800d044:	687b      	ldr	r3, [r7, #4]
 800d046:	681b      	ldr	r3, [r3, #0]
 800d048:	1ad3      	subs	r3, r2, r3
 800d04a:	115b      	asrs	r3, r3, #5
 800d04c:	4618      	mov	r0, r3
 800d04e:	370c      	adds	r7, #12
 800d050:	46bd      	mov	sp, r7
 800d052:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d056:	4770      	bx	lr

0800d058 <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 800d058:	b580      	push	{r7, lr}
 800d05a:	b084      	sub	sp, #16
 800d05c:	af00      	add	r7, sp, #0
 800d05e:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 800d060:	687b      	ldr	r3, [r7, #4]
 800d062:	681b      	ldr	r3, [r3, #0]
 800d064:	60fb      	str	r3, [r7, #12]
 800d066:	f107 020c 	add.w	r2, r7, #12
 800d06a:	f107 0308 	add.w	r3, r7, #8
 800d06e:	4611      	mov	r1, r2
 800d070:	4618      	mov	r0, r3
 800d072:	f000 fdc9 	bl	800dc08 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>
 800d076:	68bb      	ldr	r3, [r7, #8]
 800d078:	4618      	mov	r0, r3
 800d07a:	3710      	adds	r7, #16
 800d07c:	46bd      	mov	sp, r7
 800d07e:	bd80      	pop	{r7, pc}

0800d080 <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800d080:	b580      	push	{r7, lr}
 800d082:	b084      	sub	sp, #16
 800d084:	af00      	add	r7, sp, #0
 800d086:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 800d088:	687b      	ldr	r3, [r7, #4]
 800d08a:	685b      	ldr	r3, [r3, #4]
 800d08c:	60fb      	str	r3, [r7, #12]
 800d08e:	f107 020c 	add.w	r2, r7, #12
 800d092:	f107 0308 	add.w	r3, r7, #8
 800d096:	4611      	mov	r1, r2
 800d098:	4618      	mov	r0, r3
 800d09a:	f000 fdb5 	bl	800dc08 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>
 800d09e:	68bb      	ldr	r3, [r7, #8]
 800d0a0:	4618      	mov	r0, r3
 800d0a2:	3710      	adds	r7, #16
 800d0a4:	46bd      	mov	sp, r7
 800d0a6:	bd80      	pop	{r7, pc}

0800d0a8 <_ZNSt6vectorI6SymbolSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_>:
	_M_allocate_and_copy(size_type __n,
 800d0a8:	b580      	push	{r7, lr}
 800d0aa:	b086      	sub	sp, #24
 800d0ac:	af00      	add	r7, sp, #0
 800d0ae:	60f8      	str	r0, [r7, #12]
 800d0b0:	60b9      	str	r1, [r7, #8]
 800d0b2:	607a      	str	r2, [r7, #4]
 800d0b4:	603b      	str	r3, [r7, #0]
	  pointer __result = this->_M_allocate(__n);
 800d0b6:	68fb      	ldr	r3, [r7, #12]
 800d0b8:	68b9      	ldr	r1, [r7, #8]
 800d0ba:	4618      	mov	r0, r3
 800d0bc:	f000 fdb4 	bl	800dc28 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 800d0c0:	6178      	str	r0, [r7, #20]
					  _M_get_Tp_allocator());
 800d0c2:	68fb      	ldr	r3, [r7, #12]
 800d0c4:	4618      	mov	r0, r3
 800d0c6:	f7ff ff56 	bl	800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800d0ca:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__first, __last, __result,
 800d0cc:	697a      	ldr	r2, [r7, #20]
 800d0ce:	6839      	ldr	r1, [r7, #0]
 800d0d0:	6878      	ldr	r0, [r7, #4]
 800d0d2:	f000 fdbd 	bl	800dc50 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>
	      return __result;
 800d0d6:	697b      	ldr	r3, [r7, #20]
	}
 800d0d8:	4618      	mov	r0, r3
 800d0da:	3718      	adds	r7, #24
 800d0dc:	46bd      	mov	sp, r7
 800d0de:	bd80      	pop	{r7, pc}

0800d0e0 <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800d0e0:	b580      	push	{r7, lr}
 800d0e2:	b084      	sub	sp, #16
 800d0e4:	af00      	add	r7, sp, #0
 800d0e6:	60f8      	str	r0, [r7, #12]
 800d0e8:	60b9      	str	r1, [r7, #8]
 800d0ea:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800d0ec:	68b9      	ldr	r1, [r7, #8]
 800d0ee:	68f8      	ldr	r0, [r7, #12]
 800d0f0:	f000 fdbf 	bl	800dc72 <_ZSt8_DestroyIP6SymbolEvT_S2_>
    }
 800d0f4:	bf00      	nop
 800d0f6:	3710      	adds	r7, #16
 800d0f8:	46bd      	mov	sp, r7
 800d0fa:	bd80      	pop	{r7, pc}

0800d0fc <_ZNSt6vectorI6SymbolSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800d0fc:	b580      	push	{r7, lr}
 800d0fe:	b084      	sub	sp, #16
 800d100:	af00      	add	r7, sp, #0
 800d102:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800d104:	687a      	ldr	r2, [r7, #4]
 800d106:	f107 030c 	add.w	r3, r7, #12
 800d10a:	4611      	mov	r1, r2
 800d10c:	4618      	mov	r0, r3
 800d10e:	f000 fdbd 	bl	800dc8c <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 800d112:	68fb      	ldr	r3, [r7, #12]
 800d114:	4618      	mov	r0, r3
 800d116:	3710      	adds	r7, #16
 800d118:	46bd      	mov	sp, r7
 800d11a:	bd80      	pop	{r7, pc}

0800d11c <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_>:
    copy(_II __first, _II __last, _OI __result)
 800d11c:	b590      	push	{r4, r7, lr}
 800d11e:	b085      	sub	sp, #20
 800d120:	af00      	add	r7, sp, #0
 800d122:	60f8      	str	r0, [r7, #12]
 800d124:	60b9      	str	r1, [r7, #8]
 800d126:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 800d128:	68f8      	ldr	r0, [r7, #12]
 800d12a:	f000 fdbf 	bl	800dcac <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>
 800d12e:	4604      	mov	r4, r0
 800d130:	68b8      	ldr	r0, [r7, #8]
 800d132:	f000 fdbb 	bl	800dcac <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>
 800d136:	4603      	mov	r3, r0
 800d138:	687a      	ldr	r2, [r7, #4]
 800d13a:	4619      	mov	r1, r3
 800d13c:	4620      	mov	r0, r4
 800d13e:	f000 fdc0 	bl	800dcc2 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_>
 800d142:	4603      	mov	r3, r0
    }
 800d144:	4618      	mov	r0, r3
 800d146:	3714      	adds	r7, #20
 800d148:	46bd      	mov	sp, r7
 800d14a:	bd90      	pop	{r4, r7, pc}

0800d14c <_ZNSt6vectorI6SymbolSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800d14c:	b580      	push	{r7, lr}
 800d14e:	b084      	sub	sp, #16
 800d150:	af00      	add	r7, sp, #0
 800d152:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800d154:	687b      	ldr	r3, [r7, #4]
 800d156:	1d1a      	adds	r2, r3, #4
 800d158:	f107 030c 	add.w	r3, r7, #12
 800d15c:	4611      	mov	r1, r2
 800d15e:	4618      	mov	r0, r3
 800d160:	f000 fd94 	bl	800dc8c <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 800d164:	68fb      	ldr	r3, [r7, #12]
 800d166:	4618      	mov	r0, r3
 800d168:	3710      	adds	r7, #16
 800d16a:	46bd      	mov	sp, r7
 800d16c:	bd80      	pop	{r7, pc}

0800d16e <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800d16e:	b580      	push	{r7, lr}
 800d170:	b084      	sub	sp, #16
 800d172:	af00      	add	r7, sp, #0
 800d174:	60f8      	str	r0, [r7, #12]
 800d176:	60b9      	str	r1, [r7, #8]
 800d178:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800d17a:	68b9      	ldr	r1, [r7, #8]
 800d17c:	68f8      	ldr	r0, [r7, #12]
 800d17e:	f000 fdc1 	bl	800dd04 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEEEvT_S8_>
    }
 800d182:	bf00      	nop
 800d184:	3710      	adds	r7, #16
 800d186:	46bd      	mov	sp, r7
 800d188:	bd80      	pop	{r7, pc}

0800d18a <_ZSt4copyIP6SymbolS1_ET0_T_S3_S2_>:
    copy(_II __first, _II __last, _OI __result)
 800d18a:	b590      	push	{r4, r7, lr}
 800d18c:	b085      	sub	sp, #20
 800d18e:	af00      	add	r7, sp, #0
 800d190:	60f8      	str	r0, [r7, #12]
 800d192:	60b9      	str	r1, [r7, #8]
 800d194:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 800d196:	68f8      	ldr	r0, [r7, #12]
 800d198:	f000 fdc1 	bl	800dd1e <_ZSt12__miter_baseIP6SymbolET_S2_>
 800d19c:	4604      	mov	r4, r0
 800d19e:	68b8      	ldr	r0, [r7, #8]
 800d1a0:	f000 fdbd 	bl	800dd1e <_ZSt12__miter_baseIP6SymbolET_S2_>
 800d1a4:	4603      	mov	r3, r0
 800d1a6:	687a      	ldr	r2, [r7, #4]
 800d1a8:	4619      	mov	r1, r3
 800d1aa:	4620      	mov	r0, r4
 800d1ac:	f000 fdc2 	bl	800dd34 <_ZSt14__copy_move_a2ILb0EP6SymbolS1_ET1_T0_S3_S2_>
 800d1b0:	4603      	mov	r3, r0
    }
 800d1b2:	4618      	mov	r0, r3
 800d1b4:	3714      	adds	r7, #20
 800d1b6:	46bd      	mov	sp, r7
 800d1b8:	bd90      	pop	{r4, r7, pc}

0800d1ba <_ZSt22__uninitialized_copy_aIP6SymbolS1_S0_ET0_T_S3_S2_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 800d1ba:	b580      	push	{r7, lr}
 800d1bc:	b084      	sub	sp, #16
 800d1be:	af00      	add	r7, sp, #0
 800d1c0:	60f8      	str	r0, [r7, #12]
 800d1c2:	60b9      	str	r1, [r7, #8]
 800d1c4:	607a      	str	r2, [r7, #4]
 800d1c6:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 800d1c8:	687a      	ldr	r2, [r7, #4]
 800d1ca:	68b9      	ldr	r1, [r7, #8]
 800d1cc:	68f8      	ldr	r0, [r7, #12]
 800d1ce:	f000 fdd4 	bl	800dd7a <_ZSt18uninitialized_copyIP6SymbolS1_ET0_T_S3_S2_>
 800d1d2:	4603      	mov	r3, r0
 800d1d4:	4618      	mov	r0, r3
 800d1d6:	3710      	adds	r7, #16
 800d1d8:	46bd      	mov	sp, r7
 800d1da:	bd80      	pop	{r7, pc}

0800d1dc <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800d1dc:	b590      	push	{r4, r7, lr}
 800d1de:	b085      	sub	sp, #20
 800d1e0:	af00      	add	r7, sp, #0
 800d1e2:	60f8      	str	r0, [r7, #12]
 800d1e4:	7239      	strb	r1, [r7, #8]
 800d1e6:	607a      	str	r2, [r7, #4]
 800d1e8:	68fb      	ldr	r3, [r7, #12]
 800d1ea:	687a      	ldr	r2, [r7, #4]
 800d1ec:	4621      	mov	r1, r4
 800d1ee:	4618      	mov	r0, r3
 800d1f0:	f000 fe70 	bl	800ded4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>
 800d1f4:	68fb      	ldr	r3, [r7, #12]
 800d1f6:	4618      	mov	r0, r3
 800d1f8:	3714      	adds	r7, #20
 800d1fa:	46bd      	mov	sp, r7
 800d1fc:	bd90      	pop	{r4, r7, pc}

0800d1fe <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800d1fe:	b590      	push	{r4, r7, lr}
 800d200:	b085      	sub	sp, #20
 800d202:	af00      	add	r7, sp, #0
 800d204:	60f8      	str	r0, [r7, #12]
 800d206:	7239      	strb	r1, [r7, #8]
 800d208:	607a      	str	r2, [r7, #4]
 800d20a:	68fb      	ldr	r3, [r7, #12]
 800d20c:	687a      	ldr	r2, [r7, #4]
 800d20e:	4621      	mov	r1, r4
 800d210:	4618      	mov	r0, r3
 800d212:	f7ff ffe3 	bl	800d1dc <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>
 800d216:	68fb      	ldr	r3, [r7, #12]
 800d218:	4618      	mov	r0, r3
 800d21a:	3714      	adds	r7, #20
 800d21c:	46bd      	mov	sp, r7
 800d21e:	bd90      	pop	{r4, r7, pc}

0800d220 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800d220:	b590      	push	{r4, r7, lr}
 800d222:	b085      	sub	sp, #20
 800d224:	af00      	add	r7, sp, #0
 800d226:	60f8      	str	r0, [r7, #12]
 800d228:	7239      	strb	r1, [r7, #8]
 800d22a:	607a      	str	r2, [r7, #4]
 800d22c:	68fb      	ldr	r3, [r7, #12]
 800d22e:	687a      	ldr	r2, [r7, #4]
 800d230:	4621      	mov	r1, r4
 800d232:	4618      	mov	r0, r3
 800d234:	f7ff ffe3 	bl	800d1fe <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>
 800d238:	68fb      	ldr	r3, [r7, #12]
 800d23a:	4618      	mov	r0, r3
 800d23c:	3714      	adds	r7, #20
 800d23e:	46bd      	mov	sp, r7
 800d240:	bd90      	pop	{r4, r7, pc}

0800d242 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800d242:	b590      	push	{r4, r7, lr}
 800d244:	b085      	sub	sp, #20
 800d246:	af00      	add	r7, sp, #0
 800d248:	60f8      	str	r0, [r7, #12]
 800d24a:	7239      	strb	r1, [r7, #8]
 800d24c:	607a      	str	r2, [r7, #4]
 800d24e:	68fb      	ldr	r3, [r7, #12]
 800d250:	687a      	ldr	r2, [r7, #4]
 800d252:	4621      	mov	r1, r4
 800d254:	4618      	mov	r0, r3
 800d256:	f7ff ffe3 	bl	800d220 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>
 800d25a:	68fb      	ldr	r3, [r7, #12]
 800d25c:	4618      	mov	r0, r3
 800d25e:	3714      	adds	r7, #20
 800d260:	46bd      	mov	sp, r7
 800d262:	bd90      	pop	{r4, r7, pc}

0800d264 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 800d264:	b5b0      	push	{r4, r5, r7, lr}
 800d266:	b084      	sub	sp, #16
 800d268:	af00      	add	r7, sp, #0
 800d26a:	60f8      	str	r0, [r7, #12]
 800d26c:	7239      	strb	r1, [r7, #8]
 800d26e:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 800d270:	68fc      	ldr	r4, [r7, #12]
 800d272:	6878      	ldr	r0, [r7, #4]
 800d274:	f7fd fbfe 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800d278:	4603      	mov	r3, r0
 800d27a:	461a      	mov	r2, r3
 800d27c:	4629      	mov	r1, r5
 800d27e:	4620      	mov	r0, r4
 800d280:	f7ff ffdf 	bl	800d242 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800d284:	68fb      	ldr	r3, [r7, #12]
 800d286:	4618      	mov	r0, r3
 800d288:	3710      	adds	r7, #16
 800d28a:	46bd      	mov	sp, r7
 800d28c:	bdb0      	pop	{r4, r5, r7, pc}

0800d28e <_ZSt11__addressofISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEPT_RS9_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800d28e:	b480      	push	{r7}
 800d290:	b083      	sub	sp, #12
 800d292:	af00      	add	r7, sp, #0
 800d294:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800d296:	687b      	ldr	r3, [r7, #4]
 800d298:	4618      	mov	r0, r3
 800d29a:	370c      	adds	r7, #12
 800d29c:	46bd      	mov	sp, r7
 800d29e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2a2:	4770      	bx	lr

0800d2a4 <_ZSt8_DestroyISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvPT_>:
    _Destroy(_Tp* __pointer)
 800d2a4:	b580      	push	{r7, lr}
 800d2a6:	b082      	sub	sp, #8
 800d2a8:	af00      	add	r7, sp, #0
 800d2aa:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800d2ac:	6878      	ldr	r0, [r7, #4]
 800d2ae:	f000 f876 	bl	800d39e <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
 800d2b2:	bf00      	nop
 800d2b4:	3708      	adds	r7, #8
 800d2b6:	46bd      	mov	sp, r7
 800d2b8:	bd80      	pop	{r7, pc}

0800d2ba <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800d2ba:	b480      	push	{r7}
 800d2bc:	b083      	sub	sp, #12
 800d2be:	af00      	add	r7, sp, #0
 800d2c0:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800d2c2:	687b      	ldr	r3, [r7, #4]
 800d2c4:	4618      	mov	r0, r3
 800d2c6:	370c      	adds	r7, #12
 800d2c8:	46bd      	mov	sp, r7
 800d2ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2ce:	4770      	bx	lr

0800d2d0 <_ZSt8_DestroyISt6vectorI6SymbolSaIS1_EEEvPT_>:
    _Destroy(_Tp* __pointer)
 800d2d0:	b580      	push	{r7, lr}
 800d2d2:	b082      	sub	sp, #8
 800d2d4:	af00      	add	r7, sp, #0
 800d2d6:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800d2d8:	6878      	ldr	r0, [r7, #4]
 800d2da:	f000 f919 	bl	800d510 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
 800d2de:	bf00      	nop
 800d2e0:	3708      	adds	r7, #8
 800d2e2:	46bd      	mov	sp, r7
 800d2e4:	bd80      	pop	{r7, pc}

0800d2e6 <_ZSt9addressofIiEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 800d2e6:	b580      	push	{r7, lr}
 800d2e8:	b082      	sub	sp, #8
 800d2ea:	af00      	add	r7, sp, #0
 800d2ec:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800d2ee:	6878      	ldr	r0, [r7, #4]
 800d2f0:	f7f9 f807 	bl	8006302 <_ZSt11__addressofIiEPT_RS0_>
 800d2f4:	4603      	mov	r3, r0
 800d2f6:	4618      	mov	r0, r3
 800d2f8:	3708      	adds	r7, #8
 800d2fa:	46bd      	mov	sp, r7
 800d2fc:	bd80      	pop	{r7, pc}

0800d2fe <_ZSt9addressofIfEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 800d2fe:	b580      	push	{r7, lr}
 800d300:	b082      	sub	sp, #8
 800d302:	af00      	add	r7, sp, #0
 800d304:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800d306:	6878      	ldr	r0, [r7, #4]
 800d308:	f7f9 f810 	bl	800632c <_ZSt11__addressofIfEPT_RS0_>
 800d30c:	4603      	mov	r3, r0
 800d30e:	4618      	mov	r0, r3
 800d310:	3708      	adds	r7, #8
 800d312:	46bd      	mov	sp, r7
 800d314:	bd80      	pop	{r7, pc}

0800d316 <_ZSt9addressofIbEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 800d316:	b580      	push	{r7, lr}
 800d318:	b082      	sub	sp, #8
 800d31a:	af00      	add	r7, sp, #0
 800d31c:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800d31e:	6878      	ldr	r0, [r7, #4]
 800d320:	f7f8 ffda 	bl	80062d8 <_ZSt11__addressofIbEPT_RS0_>
 800d324:	4603      	mov	r3, r0
 800d326:	4618      	mov	r0, r3
 800d328:	3708      	adds	r7, #8
 800d32a:	46bd      	mov	sp, r7
 800d32c:	bd80      	pop	{r7, pc}

0800d32e <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
    addressof(_Tp& __r) noexcept
 800d32e:	b580      	push	{r7, lr}
 800d330:	b082      	sub	sp, #8
 800d332:	af00      	add	r7, sp, #0
 800d334:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800d336:	6878      	ldr	r0, [r7, #4]
 800d338:	f7f9 f80d 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800d33c:	4603      	mov	r3, r0
 800d33e:	4618      	mov	r0, r3
 800d340:	3708      	adds	r7, #8
 800d342:	46bd      	mov	sp, r7
 800d344:	bd80      	pop	{r7, pc}

0800d346 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
 800d346:	b580      	push	{r7, lr}
 800d348:	b082      	sub	sp, #8
 800d34a:	af00      	add	r7, sp, #0
 800d34c:	6078      	str	r0, [r7, #4]
 800d34e:	6039      	str	r1, [r7, #0]
      { return allocator_type(_M_get_Tp_allocator()); }
 800d350:	6838      	ldr	r0, [r7, #0]
 800d352:	f7ff fc82 	bl	800cc5a <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800d356:	4603      	mov	r3, r0
 800d358:	4619      	mov	r1, r3
 800d35a:	6878      	ldr	r0, [r7, #4]
 800d35c:	f000 fdd2 	bl	800df04 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>
 800d360:	6878      	ldr	r0, [r7, #4]
 800d362:	3708      	adds	r7, #8
 800d364:	46bd      	mov	sp, r7
 800d366:	bd80      	pop	{r7, pc}

0800d368 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 800d368:	b580      	push	{r7, lr}
 800d36a:	b082      	sub	sp, #8
 800d36c:	af00      	add	r7, sp, #0
 800d36e:	6078      	str	r0, [r7, #4]
 800d370:	6878      	ldr	r0, [r7, #4]
 800d372:	f000 fdd5 	bl	800df20 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
 800d376:	687b      	ldr	r3, [r7, #4]
 800d378:	4618      	mov	r0, r3
 800d37a:	3708      	adds	r7, #8
 800d37c:	46bd      	mov	sp, r7
 800d37e:	bd80      	pop	{r7, pc}

0800d380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS6_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 800d380:	b580      	push	{r7, lr}
 800d382:	b082      	sub	sp, #8
 800d384:	af00      	add	r7, sp, #0
 800d386:	6078      	str	r0, [r7, #4]
 800d388:	6039      	str	r1, [r7, #0]
      : _Base(__a) { }
 800d38a:	687b      	ldr	r3, [r7, #4]
 800d38c:	6839      	ldr	r1, [r7, #0]
 800d38e:	4618      	mov	r0, r3
 800d390:	f000 fdd1 	bl	800df36 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS6_>
 800d394:	687b      	ldr	r3, [r7, #4]
 800d396:	4618      	mov	r0, r3
 800d398:	3708      	adds	r7, #8
 800d39a:	46bd      	mov	sp, r7
 800d39c:	bd80      	pop	{r7, pc}

0800d39e <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800d39e:	b5b0      	push	{r4, r5, r7, lr}
 800d3a0:	b082      	sub	sp, #8
 800d3a2:	af00      	add	r7, sp, #0
 800d3a4:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800d3a6:	687b      	ldr	r3, [r7, #4]
 800d3a8:	681c      	ldr	r4, [r3, #0]
 800d3aa:	687b      	ldr	r3, [r7, #4]
 800d3ac:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800d3ae:	687b      	ldr	r3, [r7, #4]
 800d3b0:	4618      	mov	r0, r3
 800d3b2:	f7ff fc47 	bl	800cc44 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800d3b6:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800d3b8:	461a      	mov	r2, r3
 800d3ba:	4629      	mov	r1, r5
 800d3bc:	4620      	mov	r0, r4
 800d3be:	f7ff fd03 	bl	800cdc8 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E>
      }
 800d3c2:	687b      	ldr	r3, [r7, #4]
 800d3c4:	4618      	mov	r0, r3
 800d3c6:	f000 f859 	bl	800d47c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
 800d3ca:	687b      	ldr	r3, [r7, #4]
 800d3cc:	4618      	mov	r0, r3
 800d3ce:	3708      	adds	r7, #8
 800d3d0:	46bd      	mov	sp, r7
 800d3d2:	bdb0      	pop	{r4, r5, r7, pc}

0800d3d4 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 800d3d4:	b580      	push	{r7, lr}
 800d3d6:	b086      	sub	sp, #24
 800d3d8:	af00      	add	r7, sp, #0
 800d3da:	6078      	str	r0, [r7, #4]
 800d3dc:	6039      	str	r1, [r7, #0]
	  _Vector_impl_data __tmp;
 800d3de:	f107 030c 	add.w	r3, r7, #12
 800d3e2:	4618      	mov	r0, r3
 800d3e4:	f000 fdb6 	bl	800df54 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
 800d3e8:	f107 030c 	add.w	r3, r7, #12
 800d3ec:	6879      	ldr	r1, [r7, #4]
 800d3ee:	4618      	mov	r0, r3
 800d3f0:	f000 fdc4 	bl	800df7c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>
	  _M_copy_data(__x);
 800d3f4:	6839      	ldr	r1, [r7, #0]
 800d3f6:	6878      	ldr	r0, [r7, #4]
 800d3f8:	f000 fdc0 	bl	800df7c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>
	  __x._M_copy_data(__tmp);
 800d3fc:	f107 030c 	add.w	r3, r7, #12
 800d400:	4619      	mov	r1, r3
 800d402:	6838      	ldr	r0, [r7, #0]
 800d404:	f000 fdba 	bl	800df7c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>
	}
 800d408:	bf00      	nop
 800d40a:	3718      	adds	r7, #24
 800d40c:	46bd      	mov	sp, r7
 800d40e:	bd80      	pop	{r7, pc}

0800d410 <_ZSt15__alloc_on_moveISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_S8_>:
  template<typename _Alloc>
    inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
    { }

  template<typename _Alloc>
    inline void __alloc_on_move(_Alloc& __one, _Alloc& __two)
 800d410:	b580      	push	{r7, lr}
 800d412:	b084      	sub	sp, #16
 800d414:	af00      	add	r7, sp, #0
 800d416:	6078      	str	r0, [r7, #4]
 800d418:	6039      	str	r1, [r7, #0]
    {
      typedef allocator_traits<_Alloc> __traits;
      typedef typename __traits::propagate_on_container_move_assignment __pocma;
      __do_alloc_on_move(__one, __two, __pocma());
 800d41a:	461a      	mov	r2, r3
 800d41c:	6839      	ldr	r1, [r7, #0]
 800d41e:	6878      	ldr	r0, [r7, #4]
 800d420:	f000 fdc3 	bl	800dfaa <_ZSt18__do_alloc_on_moveISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_S8_St17integral_constantIbLb1EE>
    }
 800d424:	bf00      	nop
 800d426:	3710      	adds	r7, #16
 800d428:	46bd      	mov	sp, r7
 800d42a:	bd80      	pop	{r7, pc}

0800d42c <_ZSt9addressofISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEPT_RS9_>:
    addressof(_Tp& __r) noexcept
 800d42c:	b580      	push	{r7, lr}
 800d42e:	b082      	sub	sp, #8
 800d430:	af00      	add	r7, sp, #0
 800d432:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800d434:	6878      	ldr	r0, [r7, #4]
 800d436:	f7ff ff2a 	bl	800d28e <_ZSt11__addressofISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEPT_RS9_>
 800d43a:	4603      	mov	r3, r0
 800d43c:	4618      	mov	r0, r3
 800d43e:	3708      	adds	r7, #8
 800d440:	46bd      	mov	sp, r7
 800d442:	bd80      	pop	{r7, pc}

0800d444 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1EOS8_>:
	_Vector_impl(_Vector_impl&& __x) noexcept
 800d444:	b590      	push	{r4, r7, lr}
 800d446:	b083      	sub	sp, #12
 800d448:	af00      	add	r7, sp, #0
 800d44a:	6078      	str	r0, [r7, #4]
 800d44c:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 800d44e:	6838      	ldr	r0, [r7, #0]
 800d450:	f000 fdb8 	bl	800dfc4 <_ZSt4moveIRNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOSC_>
 800d454:	4603      	mov	r3, r0
 800d456:	4619      	mov	r1, r3
 800d458:	6878      	ldr	r0, [r7, #4]
 800d45a:	f000 fd53 	bl	800df04 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>
 800d45e:	687c      	ldr	r4, [r7, #4]
 800d460:	6838      	ldr	r0, [r7, #0]
 800d462:	f000 fdaf 	bl	800dfc4 <_ZSt4moveIRNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOSC_>
 800d466:	4603      	mov	r3, r0
 800d468:	4619      	mov	r1, r3
 800d46a:	4620      	mov	r0, r4
 800d46c:	f000 fdb5 	bl	800dfda <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1EOS8_>
	{ }
 800d470:	687b      	ldr	r3, [r7, #4]
 800d472:	4618      	mov	r0, r3
 800d474:	370c      	adds	r7, #12
 800d476:	46bd      	mov	sp, r7
 800d478:	bd90      	pop	{r4, r7, pc}
	...

0800d47c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800d47c:	b580      	push	{r7, lr}
 800d47e:	b082      	sub	sp, #8
 800d480:	af00      	add	r7, sp, #0
 800d482:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800d484:	687b      	ldr	r3, [r7, #4]
 800d486:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800d488:	687b      	ldr	r3, [r7, #4]
 800d48a:	689a      	ldr	r2, [r3, #8]
 800d48c:	687b      	ldr	r3, [r7, #4]
 800d48e:	681b      	ldr	r3, [r3, #0]
 800d490:	1ad3      	subs	r3, r2, r3
 800d492:	10db      	asrs	r3, r3, #3
 800d494:	4a07      	ldr	r2, [pc, #28]	; (800d4b4 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev+0x38>)
 800d496:	fb02 f303 	mul.w	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 800d49a:	461a      	mov	r2, r3
 800d49c:	6878      	ldr	r0, [r7, #4]
 800d49e:	f7ff fc01 	bl	800cca4 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_j>
      }
 800d4a2:	687b      	ldr	r3, [r7, #4]
 800d4a4:	4618      	mov	r0, r3
 800d4a6:	f7ff f845 	bl	800c534 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD1Ev>
 800d4aa:	687b      	ldr	r3, [r7, #4]
 800d4ac:	4618      	mov	r0, r3
 800d4ae:	3708      	adds	r7, #8
 800d4b0:	46bd      	mov	sp, r7
 800d4b2:	bd80      	pop	{r7, pc}
 800d4b4:	aaaaaaab 	.word	0xaaaaaaab

0800d4b8 <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
 800d4b8:	b580      	push	{r7, lr}
 800d4ba:	b082      	sub	sp, #8
 800d4bc:	af00      	add	r7, sp, #0
 800d4be:	6078      	str	r0, [r7, #4]
 800d4c0:	6039      	str	r1, [r7, #0]
      { return allocator_type(_M_get_Tp_allocator()); }
 800d4c2:	6838      	ldr	r0, [r7, #0]
 800d4c4:	f7ff fd62 	bl	800cf8c <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800d4c8:	4603      	mov	r3, r0
 800d4ca:	4619      	mov	r1, r3
 800d4cc:	6878      	ldr	r0, [r7, #4]
 800d4ce:	f000 fda7 	bl	800e020 <_ZNSaI6SymbolEC1ERKS0_>
 800d4d2:	6878      	ldr	r0, [r7, #4]
 800d4d4:	3708      	adds	r7, #8
 800d4d6:	46bd      	mov	sp, r7
 800d4d8:	bd80      	pop	{r7, pc}

0800d4da <_ZNSaI6SymbolED1Ev>:
 800d4da:	b580      	push	{r7, lr}
 800d4dc:	b082      	sub	sp, #8
 800d4de:	af00      	add	r7, sp, #0
 800d4e0:	6078      	str	r0, [r7, #4]
 800d4e2:	6878      	ldr	r0, [r7, #4]
 800d4e4:	f000 fdaa 	bl	800e03c <_ZN9__gnu_cxx13new_allocatorI6SymbolED1Ev>
 800d4e8:	687b      	ldr	r3, [r7, #4]
 800d4ea:	4618      	mov	r0, r3
 800d4ec:	3708      	adds	r7, #8
 800d4ee:	46bd      	mov	sp, r7
 800d4f0:	bd80      	pop	{r7, pc}

0800d4f2 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS1_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 800d4f2:	b580      	push	{r7, lr}
 800d4f4:	b082      	sub	sp, #8
 800d4f6:	af00      	add	r7, sp, #0
 800d4f8:	6078      	str	r0, [r7, #4]
 800d4fa:	6039      	str	r1, [r7, #0]
      : _Base(__a) { }
 800d4fc:	687b      	ldr	r3, [r7, #4]
 800d4fe:	6839      	ldr	r1, [r7, #0]
 800d500:	4618      	mov	r0, r3
 800d502:	f000 fda6 	bl	800e052 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1ERKS1_>
 800d506:	687b      	ldr	r3, [r7, #4]
 800d508:	4618      	mov	r0, r3
 800d50a:	3708      	adds	r7, #8
 800d50c:	46bd      	mov	sp, r7
 800d50e:	bd80      	pop	{r7, pc}

0800d510 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800d510:	b5b0      	push	{r4, r5, r7, lr}
 800d512:	b082      	sub	sp, #8
 800d514:	af00      	add	r7, sp, #0
 800d516:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800d518:	687b      	ldr	r3, [r7, #4]
 800d51a:	681c      	ldr	r4, [r3, #0]
 800d51c:	687b      	ldr	r3, [r7, #4]
 800d51e:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800d520:	687b      	ldr	r3, [r7, #4]
 800d522:	4618      	mov	r0, r3
 800d524:	f7ff fd27 	bl	800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800d528:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800d52a:	461a      	mov	r2, r3
 800d52c:	4629      	mov	r1, r5
 800d52e:	4620      	mov	r0, r4
 800d530:	f7ff fdd6 	bl	800d0e0 <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
      }
 800d534:	687b      	ldr	r3, [r7, #4]
 800d536:	4618      	mov	r0, r3
 800d538:	f000 f858 	bl	800d5ec <_ZNSt12_Vector_baseI6SymbolSaIS0_EED1Ev>
 800d53c:	687b      	ldr	r3, [r7, #4]
 800d53e:	4618      	mov	r0, r3
 800d540:	3708      	adds	r7, #8
 800d542:	46bd      	mov	sp, r7
 800d544:	bdb0      	pop	{r4, r5, r7, pc}

0800d546 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 800d546:	b580      	push	{r7, lr}
 800d548:	b086      	sub	sp, #24
 800d54a:	af00      	add	r7, sp, #0
 800d54c:	6078      	str	r0, [r7, #4]
 800d54e:	6039      	str	r1, [r7, #0]
	  _Vector_impl_data __tmp;
 800d550:	f107 030c 	add.w	r3, r7, #12
 800d554:	4618      	mov	r0, r3
 800d556:	f000 fd8b 	bl	800e070 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
 800d55a:	f107 030c 	add.w	r3, r7, #12
 800d55e:	6879      	ldr	r1, [r7, #4]
 800d560:	4618      	mov	r0, r3
 800d562:	f000 fd99 	bl	800e098 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	  _M_copy_data(__x);
 800d566:	6839      	ldr	r1, [r7, #0]
 800d568:	6878      	ldr	r0, [r7, #4]
 800d56a:	f000 fd95 	bl	800e098 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	  __x._M_copy_data(__tmp);
 800d56e:	f107 030c 	add.w	r3, r7, #12
 800d572:	4619      	mov	r1, r3
 800d574:	6838      	ldr	r0, [r7, #0]
 800d576:	f000 fd8f 	bl	800e098 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	}
 800d57a:	bf00      	nop
 800d57c:	3718      	adds	r7, #24
 800d57e:	46bd      	mov	sp, r7
 800d580:	bd80      	pop	{r7, pc}

0800d582 <_ZSt15__alloc_on_moveISaI6SymbolEEvRT_S3_>:
    inline void __alloc_on_move(_Alloc& __one, _Alloc& __two)
 800d582:	b580      	push	{r7, lr}
 800d584:	b084      	sub	sp, #16
 800d586:	af00      	add	r7, sp, #0
 800d588:	6078      	str	r0, [r7, #4]
 800d58a:	6039      	str	r1, [r7, #0]
      __do_alloc_on_move(__one, __two, __pocma());
 800d58c:	461a      	mov	r2, r3
 800d58e:	6839      	ldr	r1, [r7, #0]
 800d590:	6878      	ldr	r0, [r7, #4]
 800d592:	f000 fd98 	bl	800e0c6 <_ZSt18__do_alloc_on_moveISaI6SymbolEEvRT_S3_St17integral_constantIbLb1EE>
    }
 800d596:	bf00      	nop
 800d598:	3710      	adds	r7, #16
 800d59a:	46bd      	mov	sp, r7
 800d59c:	bd80      	pop	{r7, pc}

0800d59e <_ZSt9addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>:
    addressof(_Tp& __r) noexcept
 800d59e:	b580      	push	{r7, lr}
 800d5a0:	b082      	sub	sp, #8
 800d5a2:	af00      	add	r7, sp, #0
 800d5a4:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800d5a6:	6878      	ldr	r0, [r7, #4]
 800d5a8:	f7ff fe87 	bl	800d2ba <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 800d5ac:	4603      	mov	r3, r0
 800d5ae:	4618      	mov	r0, r3
 800d5b0:	3708      	adds	r7, #8
 800d5b2:	46bd      	mov	sp, r7
 800d5b4:	bd80      	pop	{r7, pc}

0800d5b6 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1EOS3_>:
	_Vector_impl(_Vector_impl&& __x) noexcept
 800d5b6:	b590      	push	{r4, r7, lr}
 800d5b8:	b083      	sub	sp, #12
 800d5ba:	af00      	add	r7, sp, #0
 800d5bc:	6078      	str	r0, [r7, #4]
 800d5be:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 800d5c0:	6838      	ldr	r0, [r7, #0]
 800d5c2:	f000 fd8d 	bl	800e0e0 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>
 800d5c6:	4603      	mov	r3, r0
 800d5c8:	4619      	mov	r1, r3
 800d5ca:	6878      	ldr	r0, [r7, #4]
 800d5cc:	f000 fd28 	bl	800e020 <_ZNSaI6SymbolEC1ERKS0_>
 800d5d0:	687c      	ldr	r4, [r7, #4]
 800d5d2:	6838      	ldr	r0, [r7, #0]
 800d5d4:	f000 fd84 	bl	800e0e0 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>
 800d5d8:	4603      	mov	r3, r0
 800d5da:	4619      	mov	r1, r3
 800d5dc:	4620      	mov	r0, r4
 800d5de:	f000 fd8a 	bl	800e0f6 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1EOS3_>
	{ }
 800d5e2:	687b      	ldr	r3, [r7, #4]
 800d5e4:	4618      	mov	r0, r3
 800d5e6:	370c      	adds	r7, #12
 800d5e8:	46bd      	mov	sp, r7
 800d5ea:	bd90      	pop	{r4, r7, pc}

0800d5ec <_ZNSt12_Vector_baseI6SymbolSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800d5ec:	b580      	push	{r7, lr}
 800d5ee:	b082      	sub	sp, #8
 800d5f0:	af00      	add	r7, sp, #0
 800d5f2:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800d5f4:	687b      	ldr	r3, [r7, #4]
 800d5f6:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800d5f8:	687b      	ldr	r3, [r7, #4]
 800d5fa:	689a      	ldr	r2, [r3, #8]
 800d5fc:	687b      	ldr	r3, [r7, #4]
 800d5fe:	681b      	ldr	r3, [r3, #0]
 800d600:	1ad3      	subs	r3, r2, r3
 800d602:	115b      	asrs	r3, r3, #5
	_M_deallocate(_M_impl._M_start,
 800d604:	461a      	mov	r2, r3
 800d606:	6878      	ldr	r0, [r7, #4]
 800d608:	f7ff fce5 	bl	800cfd6 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
      }
 800d60c:	687b      	ldr	r3, [r7, #4]
 800d60e:	4618      	mov	r0, r3
 800d610:	f7ff f838 	bl	800c684 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implD1Ev>
 800d614:	687b      	ldr	r3, [r7, #4]
 800d616:	4618      	mov	r0, r3
 800d618:	3708      	adds	r7, #8
 800d61a:	46bd      	mov	sp, r7
 800d61c:	bd80      	pop	{r7, pc}

0800d61e <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 800d61e:	b480      	push	{r7}
 800d620:	b083      	sub	sp, #12
 800d622:	af00      	add	r7, sp, #0
 800d624:	6078      	str	r0, [r7, #4]
 800d626:	687b      	ldr	r3, [r7, #4]
 800d628:	4618      	mov	r0, r3
 800d62a:	370c      	adds	r7, #12
 800d62c:	46bd      	mov	sp, r7
 800d62e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d632:	4770      	bx	lr

0800d634 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_>:
      vector(const vector& __x)
 800d634:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d636:	b085      	sub	sp, #20
 800d638:	af00      	add	r7, sp, #0
 800d63a:	6078      	str	r0, [r7, #4]
 800d63c:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 800d63e:	687c      	ldr	r4, [r7, #4]
 800d640:	6838      	ldr	r0, [r7, #0]
 800d642:	f7ff fb51 	bl	800cce8 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
 800d646:	4605      	mov	r5, r0
 800d648:	683b      	ldr	r3, [r7, #0]
 800d64a:	4618      	mov	r0, r3
 800d64c:	f7ff fb05 	bl	800cc5a <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800d650:	4602      	mov	r2, r0
 800d652:	f107 030c 	add.w	r3, r7, #12
 800d656:	4611      	mov	r1, r2
 800d658:	4618      	mov	r0, r3
 800d65a:	f000 fd6f 	bl	800e13c <_ZN9__gnu_cxx14__alloc_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES6_E17_S_select_on_copyERKS7_>
 800d65e:	f107 030c 	add.w	r3, r7, #12
 800d662:	461a      	mov	r2, r3
 800d664:	4629      	mov	r1, r5
 800d666:	4620      	mov	r0, r4
 800d668:	f000 fd76 	bl	800e158 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EjRKS6_>
 800d66c:	f107 030c 	add.w	r3, r7, #12
 800d670:	4618      	mov	r0, r3
 800d672:	f7ff fe79 	bl	800d368 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800d676:	6838      	ldr	r0, [r7, #0]
 800d678:	f7ff fb62 	bl	800cd40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
 800d67c:	4605      	mov	r5, r0
 800d67e:	6838      	ldr	r0, [r7, #0]
 800d680:	f7ff fb72 	bl	800cd68 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
 800d684:	4606      	mov	r6, r0
 800d686:	687b      	ldr	r3, [r7, #4]
 800d688:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 800d68a:	687b      	ldr	r3, [r7, #4]
 800d68c:	4618      	mov	r0, r3
 800d68e:	f7ff fad9 	bl	800cc44 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800d692:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800d694:	4622      	mov	r2, r4
 800d696:	4631      	mov	r1, r6
 800d698:	4628      	mov	r0, r5
 800d69a:	f000 f934 	bl	800d906 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_S7_ET0_T_SG_SF_RSaIT1_E>
 800d69e:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 800d6a0:	687b      	ldr	r3, [r7, #4]
 800d6a2:	605a      	str	r2, [r3, #4]
      }
 800d6a4:	687b      	ldr	r3, [r7, #4]
 800d6a6:	4618      	mov	r0, r3
 800d6a8:	3714      	adds	r7, #20
 800d6aa:	46bd      	mov	sp, r7
 800d6ac:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d6ae <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>:
      vector(const vector& __x)
 800d6ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d6b0:	b085      	sub	sp, #20
 800d6b2:	af00      	add	r7, sp, #0
 800d6b4:	6078      	str	r0, [r7, #4]
 800d6b6:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 800d6b8:	687c      	ldr	r4, [r7, #4]
 800d6ba:	6838      	ldr	r0, [r7, #0]
 800d6bc:	f7ff fcac 	bl	800d018 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 800d6c0:	4605      	mov	r5, r0
 800d6c2:	683b      	ldr	r3, [r7, #0]
 800d6c4:	4618      	mov	r0, r3
 800d6c6:	f7ff fc61 	bl	800cf8c <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800d6ca:	4602      	mov	r2, r0
 800d6cc:	f107 030c 	add.w	r3, r7, #12
 800d6d0:	4611      	mov	r1, r2
 800d6d2:	4618      	mov	r0, r3
 800d6d4:	f000 fd54 	bl	800e180 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E17_S_select_on_copyERKS2_>
 800d6d8:	f107 030c 	add.w	r3, r7, #12
 800d6dc:	461a      	mov	r2, r3
 800d6de:	4629      	mov	r1, r5
 800d6e0:	4620      	mov	r0, r4
 800d6e2:	f000 fd5b 	bl	800e19c <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EjRKS1_>
 800d6e6:	f107 030c 	add.w	r3, r7, #12
 800d6ea:	4618      	mov	r0, r3
 800d6ec:	f7ff fef5 	bl	800d4da <_ZNSaI6SymbolED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800d6f0:	6838      	ldr	r0, [r7, #0]
 800d6f2:	f7ff fcb1 	bl	800d058 <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 800d6f6:	4605      	mov	r5, r0
 800d6f8:	6838      	ldr	r0, [r7, #0]
 800d6fa:	f7ff fcc1 	bl	800d080 <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 800d6fe:	4606      	mov	r6, r0
 800d700:	687b      	ldr	r3, [r7, #4]
 800d702:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 800d704:	687b      	ldr	r3, [r7, #4]
 800d706:	4618      	mov	r0, r3
 800d708:	f7ff fc35 	bl	800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800d70c:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800d70e:	4622      	mov	r2, r4
 800d710:	4631      	mov	r1, r6
 800d712:	4628      	mov	r0, r5
 800d714:	f000 fa9c 	bl	800dc50 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>
 800d718:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 800d71a:	687b      	ldr	r3, [r7, #4]
 800d71c:	605a      	str	r2, [r3, #4]
      }
 800d71e:	687b      	ldr	r3, [r7, #4]
 800d720:	4618      	mov	r0, r3
 800d722:	3714      	adds	r7, #20
 800d724:	46bd      	mov	sp, r7
 800d726:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d728 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 800d728:	b590      	push	{r4, r7, lr}
 800d72a:	b085      	sub	sp, #20
 800d72c:	af00      	add	r7, sp, #0
 800d72e:	60f8      	str	r0, [r7, #12]
 800d730:	7239      	strb	r1, [r7, #8]
 800d732:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 800d734:	6878      	ldr	r0, [r7, #4]
 800d736:	f7fd f933 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800d73a:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 800d73c:	68fb      	ldr	r3, [r7, #12]
 800d73e:	4618      	mov	r0, r3
 800d740:	f000 fd40 	bl	800e1c4 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 800d744:	4603      	mov	r3, r0
 800d746:	4619      	mov	r1, r3
 800d748:	2018      	movs	r0, #24
 800d74a:	f7f3 fc86 	bl	800105a <_ZnwjPv>
 800d74e:	4603      	mov	r3, r0
 800d750:	4621      	mov	r1, r4
 800d752:	4618      	mov	r0, r3
 800d754:	f015 fd80 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	}
 800d758:	68fb      	ldr	r3, [r7, #12]
 800d75a:	4618      	mov	r0, r3
 800d75c:	3714      	adds	r7, #20
 800d75e:	46bd      	mov	sp, r7
 800d760:	bd90      	pop	{r4, r7, pc}

0800d762 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 800d762:	b5b0      	push	{r4, r5, r7, lr}
 800d764:	b084      	sub	sp, #16
 800d766:	af00      	add	r7, sp, #0
 800d768:	60f8      	str	r0, [r7, #12]
 800d76a:	7239      	strb	r1, [r7, #8]
 800d76c:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 800d76e:	68fc      	ldr	r4, [r7, #12]
 800d770:	6878      	ldr	r0, [r7, #4]
 800d772:	f7fd f915 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800d776:	4603      	mov	r3, r0
 800d778:	461a      	mov	r2, r3
 800d77a:	4629      	mov	r1, r5
 800d77c:	4620      	mov	r0, r4
 800d77e:	f7ff ffd3 	bl	800d728 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800d782:	68fb      	ldr	r3, [r7, #12]
 800d784:	4618      	mov	r0, r3
 800d786:	3710      	adds	r7, #16
 800d788:	46bd      	mov	sp, r7
 800d78a:	bdb0      	pop	{r4, r5, r7, pc}

0800d78c <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj1EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800d78c:	b5b0      	push	{r4, r5, r7, lr}
 800d78e:	b084      	sub	sp, #16
 800d790:	af00      	add	r7, sp, #0
 800d792:	60f8      	str	r0, [r7, #12]
 800d794:	7239      	strb	r1, [r7, #8]
 800d796:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800d798:	68fc      	ldr	r4, [r7, #12]
 800d79a:	6878      	ldr	r0, [r7, #4]
 800d79c:	f7fd f900 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800d7a0:	4603      	mov	r3, r0
 800d7a2:	461a      	mov	r2, r3
 800d7a4:	4629      	mov	r1, r5
 800d7a6:	4620      	mov	r0, r4
 800d7a8:	f7ff ffdb 	bl	800d762 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800d7ac:	68fb      	ldr	r3, [r7, #12]
 800d7ae:	4618      	mov	r0, r3
 800d7b0:	3710      	adds	r7, #16
 800d7b2:	46bd      	mov	sp, r7
 800d7b4:	bdb0      	pop	{r4, r5, r7, pc}

0800d7b6 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj2EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800d7b6:	b5b0      	push	{r4, r5, r7, lr}
 800d7b8:	b084      	sub	sp, #16
 800d7ba:	af00      	add	r7, sp, #0
 800d7bc:	60f8      	str	r0, [r7, #12]
 800d7be:	7239      	strb	r1, [r7, #8]
 800d7c0:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800d7c2:	68fc      	ldr	r4, [r7, #12]
 800d7c4:	6878      	ldr	r0, [r7, #4]
 800d7c6:	f7fd f8eb 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800d7ca:	4603      	mov	r3, r0
 800d7cc:	461a      	mov	r2, r3
 800d7ce:	4629      	mov	r1, r5
 800d7d0:	4620      	mov	r0, r4
 800d7d2:	f7ff ffdb 	bl	800d78c <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj1EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800d7d6:	68fb      	ldr	r3, [r7, #12]
 800d7d8:	4618      	mov	r0, r3
 800d7da:	3710      	adds	r7, #16
 800d7dc:	46bd      	mov	sp, r7
 800d7de:	bdb0      	pop	{r4, r5, r7, pc}

0800d7e0 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800d7e0:	b5b0      	push	{r4, r5, r7, lr}
 800d7e2:	b084      	sub	sp, #16
 800d7e4:	af00      	add	r7, sp, #0
 800d7e6:	60f8      	str	r0, [r7, #12]
 800d7e8:	7239      	strb	r1, [r7, #8]
 800d7ea:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800d7ec:	68fc      	ldr	r4, [r7, #12]
 800d7ee:	6878      	ldr	r0, [r7, #4]
 800d7f0:	f7fd f8d6 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800d7f4:	4603      	mov	r3, r0
 800d7f6:	461a      	mov	r2, r3
 800d7f8:	4629      	mov	r1, r5
 800d7fa:	4620      	mov	r0, r4
 800d7fc:	f7ff ffdb 	bl	800d7b6 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj2EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800d800:	68fb      	ldr	r3, [r7, #12]
 800d802:	4618      	mov	r0, r3
 800d804:	3710      	adds	r7, #16
 800d806:	46bd      	mov	sp, r7
 800d808:	bdb0      	pop	{r4, r5, r7, pc}

0800d80a <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 800d80a:	b5b0      	push	{r4, r5, r7, lr}
 800d80c:	b084      	sub	sp, #16
 800d80e:	af00      	add	r7, sp, #0
 800d810:	60f8      	str	r0, [r7, #12]
 800d812:	7239      	strb	r1, [r7, #8]
 800d814:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 800d816:	68fc      	ldr	r4, [r7, #12]
 800d818:	6878      	ldr	r0, [r7, #4]
 800d81a:	f7fd f8c1 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800d81e:	4603      	mov	r3, r0
 800d820:	461a      	mov	r2, r3
 800d822:	4629      	mov	r1, r5
 800d824:	4620      	mov	r0, r4
 800d826:	f7ff ffdb 	bl	800d7e0 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 800d82a:	68fb      	ldr	r3, [r7, #12]
 800d82c:	2203      	movs	r2, #3
 800d82e:	761a      	strb	r2, [r3, #24]
	{ }
 800d830:	68fb      	ldr	r3, [r7, #12]
 800d832:	4618      	mov	r0, r3
 800d834:	3710      	adds	r7, #16
 800d836:	46bd      	mov	sp, r7
 800d838:	bdb0      	pop	{r4, r5, r7, pc}
	...

0800d83c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endEPS5_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
 800d83c:	b590      	push	{r4, r7, lr}
 800d83e:	b085      	sub	sp, #20
 800d840:	af00      	add	r7, sp, #0
 800d842:	6078      	str	r0, [r7, #4]
 800d844:	6039      	str	r1, [r7, #0]
	if (size_type __n = this->_M_impl._M_finish - __pos)
 800d846:	687b      	ldr	r3, [r7, #4]
 800d848:	685a      	ldr	r2, [r3, #4]
 800d84a:	683b      	ldr	r3, [r7, #0]
 800d84c:	1ad3      	subs	r3, r2, r3
 800d84e:	10db      	asrs	r3, r3, #3
 800d850:	4a0c      	ldr	r2, [pc, #48]	; (800d884 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endEPS5_+0x48>)
 800d852:	fb02 f303 	mul.w	r3, r2, r3
 800d856:	60fb      	str	r3, [r7, #12]
 800d858:	68fb      	ldr	r3, [r7, #12]
 800d85a:	2b00      	cmp	r3, #0
 800d85c:	d00e      	beq.n	800d87c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endEPS5_+0x40>
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 800d85e:	687b      	ldr	r3, [r7, #4]
 800d860:	685c      	ldr	r4, [r3, #4]
			  _M_get_Tp_allocator());
 800d862:	687b      	ldr	r3, [r7, #4]
 800d864:	4618      	mov	r0, r3
 800d866:	f7ff f9ed 	bl	800cc44 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 800d86a:	4603      	mov	r3, r0
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 800d86c:	461a      	mov	r2, r3
 800d86e:	4621      	mov	r1, r4
 800d870:	6838      	ldr	r0, [r7, #0]
 800d872:	f7ff faa9 	bl	800cdc8 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
 800d876:	687b      	ldr	r3, [r7, #4]
 800d878:	683a      	ldr	r2, [r7, #0]
 800d87a:	605a      	str	r2, [r3, #4]
      }
 800d87c:	bf00      	nop
 800d87e:	3714      	adds	r7, #20
 800d880:	46bd      	mov	sp, r7
 800d882:	bd90      	pop	{r4, r7, pc}
 800d884:	aaaaaaab 	.word	0xaaaaaaab

0800d888 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800d888:	b580      	push	{r7, lr}
 800d88a:	b084      	sub	sp, #16
 800d88c:	af00      	add	r7, sp, #0
 800d88e:	60f8      	str	r0, [r7, #12]
 800d890:	60b9      	str	r1, [r7, #8]
 800d892:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800d894:	687a      	ldr	r2, [r7, #4]
 800d896:	68b9      	ldr	r1, [r7, #8]
 800d898:	68f8      	ldr	r0, [r7, #12]
 800d89a:	f000 fc9f 	bl	800e1dc <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_j>
 800d89e:	bf00      	nop
 800d8a0:	3710      	adds	r7, #16
 800d8a2:	46bd      	mov	sp, r7
 800d8a4:	bd80      	pop	{r7, pc}

0800d8a6 <_ZSt18__do_alloc_on_copyISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_RKS7_St17integral_constantIbLb0EE>:
    __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 800d8a6:	b480      	push	{r7}
 800d8a8:	b085      	sub	sp, #20
 800d8aa:	af00      	add	r7, sp, #0
 800d8ac:	60f8      	str	r0, [r7, #12]
 800d8ae:	60b9      	str	r1, [r7, #8]
 800d8b0:	713a      	strb	r2, [r7, #4]
    { }
 800d8b2:	bf00      	nop
 800d8b4:	3714      	adds	r7, #20
 800d8b6:	46bd      	mov	sp, r7
 800d8b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8bc:	4770      	bx	lr

0800d8be <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC1ERKS8_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800d8be:	b480      	push	{r7}
 800d8c0:	b083      	sub	sp, #12
 800d8c2:	af00      	add	r7, sp, #0
 800d8c4:	6078      	str	r0, [r7, #4]
 800d8c6:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800d8c8:	683b      	ldr	r3, [r7, #0]
 800d8ca:	681a      	ldr	r2, [r3, #0]
 800d8cc:	687b      	ldr	r3, [r7, #4]
 800d8ce:	601a      	str	r2, [r3, #0]
 800d8d0:	687b      	ldr	r3, [r7, #4]
 800d8d2:	4618      	mov	r0, r3
 800d8d4:	370c      	adds	r7, #12
 800d8d6:	46bd      	mov	sp, r7
 800d8d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8dc:	4770      	bx	lr

0800d8de <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 800d8de:	b580      	push	{r7, lr}
 800d8e0:	b082      	sub	sp, #8
 800d8e2:	af00      	add	r7, sp, #0
 800d8e4:	6078      	str	r0, [r7, #4]
 800d8e6:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 800d8e8:	683b      	ldr	r3, [r7, #0]
 800d8ea:	2b00      	cmp	r3, #0
 800d8ec:	d006      	beq.n	800d8fc <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEj+0x1e>
 800d8ee:	687b      	ldr	r3, [r7, #4]
 800d8f0:	6839      	ldr	r1, [r7, #0]
 800d8f2:	4618      	mov	r0, r3
 800d8f4:	f000 fc7e 	bl	800e1f4 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_j>
 800d8f8:	4603      	mov	r3, r0
 800d8fa:	e000      	b.n	800d8fe <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEj+0x20>
 800d8fc:	2300      	movs	r3, #0
      }
 800d8fe:	4618      	mov	r0, r3
 800d900:	3708      	adds	r7, #8
 800d902:	46bd      	mov	sp, r7
 800d904:	bd80      	pop	{r7, pc}

0800d906 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_S7_ET0_T_SG_SF_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 800d906:	b580      	push	{r7, lr}
 800d908:	b084      	sub	sp, #16
 800d90a:	af00      	add	r7, sp, #0
 800d90c:	60f8      	str	r0, [r7, #12]
 800d90e:	60b9      	str	r1, [r7, #8]
 800d910:	607a      	str	r2, [r7, #4]
 800d912:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 800d914:	687a      	ldr	r2, [r7, #4]
 800d916:	68b9      	ldr	r1, [r7, #8]
 800d918:	68f8      	ldr	r0, [r7, #12]
 800d91a:	f000 fc7a 	bl	800e212 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_>
 800d91e:	4603      	mov	r3, r0
 800d920:	4618      	mov	r0, r3
 800d922:	3710      	adds	r7, #16
 800d924:	46bd      	mov	sp, r7
 800d926:	bd80      	pop	{r7, pc}

0800d928 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800d928:	b580      	push	{r7, lr}
 800d92a:	b082      	sub	sp, #8
 800d92c:	af00      	add	r7, sp, #0
 800d92e:	6078      	str	r0, [r7, #4]
 800d930:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800d932:	6839      	ldr	r1, [r7, #0]
 800d934:	6878      	ldr	r0, [r7, #4]
 800d936:	f000 fc7e 	bl	800e236 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_>
    }
 800d93a:	bf00      	nop
 800d93c:	3708      	adds	r7, #8
 800d93e:	46bd      	mov	sp, r7
 800d940:	bd80      	pop	{r7, pc}

0800d942 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC1ERKS7_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800d942:	b480      	push	{r7}
 800d944:	b083      	sub	sp, #12
 800d946:	af00      	add	r7, sp, #0
 800d948:	6078      	str	r0, [r7, #4]
 800d94a:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800d94c:	683b      	ldr	r3, [r7, #0]
 800d94e:	681a      	ldr	r2, [r3, #0]
 800d950:	687b      	ldr	r3, [r7, #4]
 800d952:	601a      	str	r2, [r3, #0]
 800d954:	687b      	ldr	r3, [r7, #4]
 800d956:	4618      	mov	r0, r3
 800d958:	370c      	adds	r7, #12
 800d95a:	46bd      	mov	sp, r7
 800d95c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d960:	4770      	bx	lr

0800d962 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEET_SE_>:

  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    inline _Iterator
    __miter_base(_Iterator __it)
 800d962:	b480      	push	{r7}
 800d964:	b083      	sub	sp, #12
 800d966:	af00      	add	r7, sp, #0
 800d968:	6078      	str	r0, [r7, #4]
    { return __it; }
 800d96a:	687b      	ldr	r3, [r7, #4]
 800d96c:	4618      	mov	r0, r3
 800d96e:	370c      	adds	r7, #12
 800d970:	46bd      	mov	sp, r7
 800d972:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d976:	4770      	bx	lr

0800d978 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS1_IPS7_SC_EEET1_T0_SH_SG_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 800d978:	b5b0      	push	{r4, r5, r7, lr}
 800d97a:	b084      	sub	sp, #16
 800d97c:	af00      	add	r7, sp, #0
 800d97e:	60f8      	str	r0, [r7, #12]
 800d980:	60b9      	str	r1, [r7, #8]
 800d982:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 800d984:	68f8      	ldr	r0, [r7, #12]
 800d986:	f000 fc6e 	bl	800e266 <_ZSt12__niter_baseIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISB_T0_EE>
 800d98a:	4604      	mov	r4, r0
 800d98c:	68b8      	ldr	r0, [r7, #8]
 800d98e:	f000 fc6a 	bl	800e266 <_ZSt12__niter_baseIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISB_T0_EE>
 800d992:	4605      	mov	r5, r0
 800d994:	6878      	ldr	r0, [r7, #4]
 800d996:	f000 fc74 	bl	800e282 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE>
 800d99a:	4603      	mov	r3, r0
 800d99c:	461a      	mov	r2, r3
 800d99e:	4629      	mov	r1, r5
 800d9a0:	4620      	mov	r0, r4
 800d9a2:	f000 fc7c 	bl	800e29e <_ZSt13__copy_move_aILb0EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET1_T0_SA_S9_>
 800d9a6:	4603      	mov	r3, r0
 800d9a8:	4619      	mov	r1, r3
 800d9aa:	6878      	ldr	r0, [r7, #4]
 800d9ac:	f000 fc8a 	bl	800e2c4 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES8_ET_SD_T0_>
 800d9b0:	4603      	mov	r3, r0
    }
 800d9b2:	4618      	mov	r0, r3
 800d9b4:	3710      	adds	r7, #16
 800d9b6:	46bd      	mov	sp, r7
 800d9b8:	bdb0      	pop	{r4, r5, r7, pc}

0800d9ba <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEEvT_SD_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800d9ba:	b580      	push	{r7, lr}
 800d9bc:	b082      	sub	sp, #8
 800d9be:	af00      	add	r7, sp, #0
 800d9c0:	6078      	str	r0, [r7, #4]
 800d9c2:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800d9c4:	6839      	ldr	r1, [r7, #0]
 800d9c6:	6878      	ldr	r0, [r7, #4]
 800d9c8:	f000 fc98 	bl	800e2fc <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_>
    }
 800d9cc:	bf00      	nop
 800d9ce:	3708      	adds	r7, #8
 800d9d0:	46bd      	mov	sp, r7
 800d9d2:	bd80      	pop	{r7, pc}

0800d9d4 <_ZSt12__miter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>:
    __miter_base(_Iterator __it)
 800d9d4:	b480      	push	{r7}
 800d9d6:	b083      	sub	sp, #12
 800d9d8:	af00      	add	r7, sp, #0
 800d9da:	6078      	str	r0, [r7, #4]
    { return __it; }
 800d9dc:	687b      	ldr	r3, [r7, #4]
 800d9de:	4618      	mov	r0, r3
 800d9e0:	370c      	adds	r7, #12
 800d9e2:	46bd      	mov	sp, r7
 800d9e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9e8:	4770      	bx	lr

0800d9ea <_ZSt14__copy_move_a2ILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 800d9ea:	b5b0      	push	{r4, r5, r7, lr}
 800d9ec:	b084      	sub	sp, #16
 800d9ee:	af00      	add	r7, sp, #0
 800d9f0:	60f8      	str	r0, [r7, #12]
 800d9f2:	60b9      	str	r1, [r7, #8]
 800d9f4:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 800d9f6:	68f8      	ldr	r0, [r7, #12]
 800d9f8:	f000 fca3 	bl	800e342 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
 800d9fc:	4604      	mov	r4, r0
 800d9fe:	68b8      	ldr	r0, [r7, #8]
 800da00:	f000 fc9f 	bl	800e342 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
 800da04:	4605      	mov	r5, r0
 800da06:	687b      	ldr	r3, [r7, #4]
 800da08:	4618      	mov	r0, r3
 800da0a:	f000 fc9a 	bl	800e342 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>
 800da0e:	4603      	mov	r3, r0
 800da10:	461a      	mov	r2, r3
 800da12:	4629      	mov	r1, r5
 800da14:	4620      	mov	r0, r4
 800da16:	f000 fc9f 	bl	800e358 <_ZSt13__copy_move_aILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>
 800da1a:	4602      	mov	r2, r0
 800da1c:	1d3b      	adds	r3, r7, #4
 800da1e:	4611      	mov	r1, r2
 800da20:	4618      	mov	r0, r3
 800da22:	f000 fcab 	bl	800e37c <_ZSt12__niter_wrapIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_RKS7_S7_>
 800da26:	4603      	mov	r3, r0
    }
 800da28:	4618      	mov	r0, r3
 800da2a:	3710      	adds	r7, #16
 800da2c:	46bd      	mov	sp, r7
 800da2e:	bdb0      	pop	{r4, r5, r7, pc}

0800da30 <_ZSt18uninitialized_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 800da30:	b580      	push	{r7, lr}
 800da32:	b086      	sub	sp, #24
 800da34:	af00      	add	r7, sp, #0
 800da36:	60f8      	str	r0, [r7, #12]
 800da38:	60b9      	str	r1, [r7, #8]
 800da3a:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 800da3c:	2301      	movs	r3, #1
 800da3e:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 800da40:	687a      	ldr	r2, [r7, #4]
 800da42:	68b9      	ldr	r1, [r7, #8]
 800da44:	68f8      	ldr	r0, [r7, #12]
 800da46:	f000 fca5 	bl	800e394 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EET0_T_SA_S9_>
 800da4a:	4603      	mov	r3, r0
    }
 800da4c:	4618      	mov	r0, r3
 800da4e:	3718      	adds	r7, #24
 800da50:	46bd      	mov	sp, r7
 800da52:	bd80      	pop	{r7, pc}

0800da54 <_ZNSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EEC1IJRKSA_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 800da54:	b590      	push	{r4, r7, lr}
 800da56:	b085      	sub	sp, #20
 800da58:	af00      	add	r7, sp, #0
 800da5a:	60f8      	str	r0, [r7, #12]
 800da5c:	7239      	strb	r1, [r7, #8]
 800da5e:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 800da60:	6878      	ldr	r0, [r7, #4]
 800da62:	f7fc ffd2 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800da66:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 800da68:	68fb      	ldr	r3, [r7, #12]
 800da6a:	4618      	mov	r0, r3
 800da6c:	f000 fcb2 	bl	800e3d4 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEEEEPT_RSC_>
 800da70:	4603      	mov	r3, r0
 800da72:	4619      	mov	r1, r3
 800da74:	200c      	movs	r0, #12
 800da76:	f7f3 faf0 	bl	800105a <_ZnwjPv>
 800da7a:	4603      	mov	r3, r0
 800da7c:	4621      	mov	r1, r4
 800da7e:	4618      	mov	r0, r3
 800da80:	f7ff fdd8 	bl	800d634 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_>
	}
 800da84:	68fb      	ldr	r3, [r7, #12]
 800da86:	4618      	mov	r0, r3
 800da88:	3714      	adds	r7, #20
 800da8a:	46bd      	mov	sp, r7
 800da8c:	bd90      	pop	{r4, r7, pc}

0800da8e <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EES2_I6SymbolSaISB_EEEEC1IJRKSA_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 800da8e:	b5b0      	push	{r4, r5, r7, lr}
 800da90:	b084      	sub	sp, #16
 800da92:	af00      	add	r7, sp, #0
 800da94:	60f8      	str	r0, [r7, #12]
 800da96:	7239      	strb	r1, [r7, #8]
 800da98:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 800da9a:	68fc      	ldr	r4, [r7, #12]
 800da9c:	6878      	ldr	r0, [r7, #4]
 800da9e:	f7fc ffb4 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800daa2:	4603      	mov	r3, r0
 800daa4:	461a      	mov	r2, r3
 800daa6:	4629      	mov	r1, r5
 800daa8:	4620      	mov	r0, r4
 800daaa:	f7ff ffd3 	bl	800da54 <_ZNSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EEC1IJRKSA_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800daae:	68fb      	ldr	r3, [r7, #12]
 800dab0:	4618      	mov	r0, r3
 800dab2:	3710      	adds	r7, #16
 800dab4:	46bd      	mov	sp, r7
 800dab6:	bdb0      	pop	{r4, r5, r7, pc}

0800dab8 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj1EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800dab8:	b5b0      	push	{r4, r5, r7, lr}
 800daba:	b084      	sub	sp, #16
 800dabc:	af00      	add	r7, sp, #0
 800dabe:	60f8      	str	r0, [r7, #12]
 800dac0:	7239      	strb	r1, [r7, #8]
 800dac2:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800dac4:	68fc      	ldr	r4, [r7, #12]
 800dac6:	6878      	ldr	r0, [r7, #4]
 800dac8:	f7fc ff9f 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800dacc:	4603      	mov	r3, r0
 800dace:	461a      	mov	r2, r3
 800dad0:	4629      	mov	r1, r5
 800dad2:	4620      	mov	r0, r4
 800dad4:	f7ff ffdb 	bl	800da8e <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EES2_I6SymbolSaISB_EEEEC1IJRKSA_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800dad8:	68fb      	ldr	r3, [r7, #12]
 800dada:	4618      	mov	r0, r3
 800dadc:	3710      	adds	r7, #16
 800dade:	46bd      	mov	sp, r7
 800dae0:	bdb0      	pop	{r4, r5, r7, pc}

0800dae2 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj2EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800dae2:	b5b0      	push	{r4, r5, r7, lr}
 800dae4:	b084      	sub	sp, #16
 800dae6:	af00      	add	r7, sp, #0
 800dae8:	60f8      	str	r0, [r7, #12]
 800daea:	7239      	strb	r1, [r7, #8]
 800daec:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800daee:	68fc      	ldr	r4, [r7, #12]
 800daf0:	6878      	ldr	r0, [r7, #4]
 800daf2:	f7fc ff8a 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800daf6:	4603      	mov	r3, r0
 800daf8:	461a      	mov	r2, r3
 800dafa:	4629      	mov	r1, r5
 800dafc:	4620      	mov	r0, r4
 800dafe:	f7ff ffdb 	bl	800dab8 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj1EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800db02:	68fb      	ldr	r3, [r7, #12]
 800db04:	4618      	mov	r0, r3
 800db06:	3710      	adds	r7, #16
 800db08:	46bd      	mov	sp, r7
 800db0a:	bdb0      	pop	{r4, r5, r7, pc}

0800db0c <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800db0c:	b5b0      	push	{r4, r5, r7, lr}
 800db0e:	b084      	sub	sp, #16
 800db10:	af00      	add	r7, sp, #0
 800db12:	60f8      	str	r0, [r7, #12]
 800db14:	7239      	strb	r1, [r7, #8]
 800db16:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800db18:	68fc      	ldr	r4, [r7, #12]
 800db1a:	6878      	ldr	r0, [r7, #4]
 800db1c:	f7fc ff75 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800db20:	4603      	mov	r3, r0
 800db22:	461a      	mov	r2, r3
 800db24:	4629      	mov	r1, r5
 800db26:	4620      	mov	r0, r4
 800db28:	f7ff ffdb 	bl	800dae2 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj2EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800db2c:	68fb      	ldr	r3, [r7, #12]
 800db2e:	4618      	mov	r0, r3
 800db30:	3710      	adds	r7, #16
 800db32:	46bd      	mov	sp, r7
 800db34:	bdb0      	pop	{r4, r5, r7, pc}

0800db36 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800db36:	b5b0      	push	{r4, r5, r7, lr}
 800db38:	b084      	sub	sp, #16
 800db3a:	af00      	add	r7, sp, #0
 800db3c:	60f8      	str	r0, [r7, #12]
 800db3e:	7239      	strb	r1, [r7, #8]
 800db40:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800db42:	68fc      	ldr	r4, [r7, #12]
 800db44:	6878      	ldr	r0, [r7, #4]
 800db46:	f7fc ff60 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800db4a:	4603      	mov	r3, r0
 800db4c:	461a      	mov	r2, r3
 800db4e:	4629      	mov	r1, r5
 800db50:	4620      	mov	r0, r4
 800db52:	f7ff ffdb 	bl	800db0c <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800db56:	68fb      	ldr	r3, [r7, #12]
 800db58:	4618      	mov	r0, r3
 800db5a:	3710      	adds	r7, #16
 800db5c:	46bd      	mov	sp, r7
 800db5e:	bdb0      	pop	{r4, r5, r7, pc}

0800db60 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 800db60:	b5b0      	push	{r4, r5, r7, lr}
 800db62:	b084      	sub	sp, #16
 800db64:	af00      	add	r7, sp, #0
 800db66:	60f8      	str	r0, [r7, #12]
 800db68:	7239      	strb	r1, [r7, #8]
 800db6a:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 800db6c:	68fc      	ldr	r4, [r7, #12]
 800db6e:	6878      	ldr	r0, [r7, #4]
 800db70:	f7fc ff4b 	bl	800aa0a <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 800db74:	4603      	mov	r3, r0
 800db76:	461a      	mov	r2, r3
 800db78:	4629      	mov	r1, r5
 800db7a:	4620      	mov	r0, r4
 800db7c:	f7ff ffdb 	bl	800db36 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj4EJRKSA_EEESt16in_place_index_tIXT_EEDpOT0_>
 800db80:	68fb      	ldr	r3, [r7, #12]
 800db82:	2204      	movs	r2, #4
 800db84:	761a      	strb	r2, [r3, #24]
	{ }
 800db86:	68fb      	ldr	r3, [r7, #12]
 800db88:	4618      	mov	r0, r3
 800db8a:	3710      	adds	r7, #16
 800db8c:	46bd      	mov	sp, r7
 800db8e:	bdb0      	pop	{r4, r5, r7, pc}

0800db90 <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
 800db90:	b590      	push	{r4, r7, lr}
 800db92:	b085      	sub	sp, #20
 800db94:	af00      	add	r7, sp, #0
 800db96:	6078      	str	r0, [r7, #4]
 800db98:	6039      	str	r1, [r7, #0]
	if (size_type __n = this->_M_impl._M_finish - __pos)
 800db9a:	687b      	ldr	r3, [r7, #4]
 800db9c:	685a      	ldr	r2, [r3, #4]
 800db9e:	683b      	ldr	r3, [r7, #0]
 800dba0:	1ad3      	subs	r3, r2, r3
 800dba2:	115b      	asrs	r3, r3, #5
 800dba4:	60fb      	str	r3, [r7, #12]
 800dba6:	68fb      	ldr	r3, [r7, #12]
 800dba8:	2b00      	cmp	r3, #0
 800dbaa:	d00e      	beq.n	800dbca <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_+0x3a>
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 800dbac:	687b      	ldr	r3, [r7, #4]
 800dbae:	685c      	ldr	r4, [r3, #4]
			  _M_get_Tp_allocator());
 800dbb0:	687b      	ldr	r3, [r7, #4]
 800dbb2:	4618      	mov	r0, r3
 800dbb4:	f7ff f9df 	bl	800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800dbb8:	4603      	mov	r3, r0
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 800dbba:	461a      	mov	r2, r3
 800dbbc:	4621      	mov	r1, r4
 800dbbe:	6838      	ldr	r0, [r7, #0]
 800dbc0:	f7ff fa8e 	bl	800d0e0 <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
 800dbc4:	687b      	ldr	r3, [r7, #4]
 800dbc6:	683a      	ldr	r2, [r7, #0]
 800dbc8:	605a      	str	r2, [r3, #4]
      }
 800dbca:	bf00      	nop
 800dbcc:	3714      	adds	r7, #20
 800dbce:	46bd      	mov	sp, r7
 800dbd0:	bd90      	pop	{r4, r7, pc}

0800dbd2 <_ZNSt16allocator_traitsISaI6SymbolEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800dbd2:	b580      	push	{r7, lr}
 800dbd4:	b084      	sub	sp, #16
 800dbd6:	af00      	add	r7, sp, #0
 800dbd8:	60f8      	str	r0, [r7, #12]
 800dbda:	60b9      	str	r1, [r7, #8]
 800dbdc:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800dbde:	687a      	ldr	r2, [r7, #4]
 800dbe0:	68b9      	ldr	r1, [r7, #8]
 800dbe2:	68f8      	ldr	r0, [r7, #12]
 800dbe4:	f000 fc02 	bl	800e3ec <_ZN9__gnu_cxx13new_allocatorI6SymbolE10deallocateEPS1_j>
 800dbe8:	bf00      	nop
 800dbea:	3710      	adds	r7, #16
 800dbec:	46bd      	mov	sp, r7
 800dbee:	bd80      	pop	{r7, pc}

0800dbf0 <_ZSt18__do_alloc_on_copyISaI6SymbolEEvRT_RKS2_St17integral_constantIbLb0EE>:
    __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 800dbf0:	b480      	push	{r7}
 800dbf2:	b085      	sub	sp, #20
 800dbf4:	af00      	add	r7, sp, #0
 800dbf6:	60f8      	str	r0, [r7, #12]
 800dbf8:	60b9      	str	r1, [r7, #8]
 800dbfa:	713a      	strb	r2, [r7, #4]
    { }
 800dbfc:	bf00      	nop
 800dbfe:	3714      	adds	r7, #20
 800dc00:	46bd      	mov	sp, r7
 800dc02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc06:	4770      	bx	lr

0800dc08 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800dc08:	b480      	push	{r7}
 800dc0a:	b083      	sub	sp, #12
 800dc0c:	af00      	add	r7, sp, #0
 800dc0e:	6078      	str	r0, [r7, #4]
 800dc10:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800dc12:	683b      	ldr	r3, [r7, #0]
 800dc14:	681a      	ldr	r2, [r3, #0]
 800dc16:	687b      	ldr	r3, [r7, #4]
 800dc18:	601a      	str	r2, [r3, #0]
 800dc1a:	687b      	ldr	r3, [r7, #4]
 800dc1c:	4618      	mov	r0, r3
 800dc1e:	370c      	adds	r7, #12
 800dc20:	46bd      	mov	sp, r7
 800dc22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc26:	4770      	bx	lr

0800dc28 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 800dc28:	b580      	push	{r7, lr}
 800dc2a:	b082      	sub	sp, #8
 800dc2c:	af00      	add	r7, sp, #0
 800dc2e:	6078      	str	r0, [r7, #4]
 800dc30:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 800dc32:	683b      	ldr	r3, [r7, #0]
 800dc34:	2b00      	cmp	r3, #0
 800dc36:	d006      	beq.n	800dc46 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj+0x1e>
 800dc38:	687b      	ldr	r3, [r7, #4]
 800dc3a:	6839      	ldr	r1, [r7, #0]
 800dc3c:	4618      	mov	r0, r3
 800dc3e:	f000 fbe1 	bl	800e404 <_ZNSt16allocator_traitsISaI6SymbolEE8allocateERS1_j>
 800dc42:	4603      	mov	r3, r0
 800dc44:	e000      	b.n	800dc48 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj+0x20>
 800dc46:	2300      	movs	r3, #0
      }
 800dc48:	4618      	mov	r0, r3
 800dc4a:	3708      	adds	r7, #8
 800dc4c:	46bd      	mov	sp, r7
 800dc4e:	bd80      	pop	{r7, pc}

0800dc50 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 800dc50:	b580      	push	{r7, lr}
 800dc52:	b084      	sub	sp, #16
 800dc54:	af00      	add	r7, sp, #0
 800dc56:	60f8      	str	r0, [r7, #12]
 800dc58:	60b9      	str	r1, [r7, #8]
 800dc5a:	607a      	str	r2, [r7, #4]
 800dc5c:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 800dc5e:	687a      	ldr	r2, [r7, #4]
 800dc60:	68b9      	ldr	r1, [r7, #8]
 800dc62:	68f8      	ldr	r0, [r7, #12]
 800dc64:	f000 fbdd 	bl	800e422 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_>
 800dc68:	4603      	mov	r3, r0
 800dc6a:	4618      	mov	r0, r3
 800dc6c:	3710      	adds	r7, #16
 800dc6e:	46bd      	mov	sp, r7
 800dc70:	bd80      	pop	{r7, pc}

0800dc72 <_ZSt8_DestroyIP6SymbolEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800dc72:	b580      	push	{r7, lr}
 800dc74:	b082      	sub	sp, #8
 800dc76:	af00      	add	r7, sp, #0
 800dc78:	6078      	str	r0, [r7, #4]
 800dc7a:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800dc7c:	6839      	ldr	r1, [r7, #0]
 800dc7e:	6878      	ldr	r0, [r7, #4]
 800dc80:	f000 fbe1 	bl	800e446 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_>
    }
 800dc84:	bf00      	nop
 800dc86:	3708      	adds	r7, #8
 800dc88:	46bd      	mov	sp, r7
 800dc8a:	bd80      	pop	{r7, pc}

0800dc8c <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800dc8c:	b480      	push	{r7}
 800dc8e:	b083      	sub	sp, #12
 800dc90:	af00      	add	r7, sp, #0
 800dc92:	6078      	str	r0, [r7, #4]
 800dc94:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800dc96:	683b      	ldr	r3, [r7, #0]
 800dc98:	681a      	ldr	r2, [r3, #0]
 800dc9a:	687b      	ldr	r3, [r7, #4]
 800dc9c:	601a      	str	r2, [r3, #0]
 800dc9e:	687b      	ldr	r3, [r7, #4]
 800dca0:	4618      	mov	r0, r3
 800dca2:	370c      	adds	r7, #12
 800dca4:	46bd      	mov	sp, r7
 800dca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcaa:	4770      	bx	lr

0800dcac <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>:
    __miter_base(_Iterator __it)
 800dcac:	b480      	push	{r7}
 800dcae:	b083      	sub	sp, #12
 800dcb0:	af00      	add	r7, sp, #0
 800dcb2:	6078      	str	r0, [r7, #4]
    { return __it; }
 800dcb4:	687b      	ldr	r3, [r7, #4]
 800dcb6:	4618      	mov	r0, r3
 800dcb8:	370c      	adds	r7, #12
 800dcba:	46bd      	mov	sp, r7
 800dcbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcc0:	4770      	bx	lr

0800dcc2 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 800dcc2:	b5b0      	push	{r4, r5, r7, lr}
 800dcc4:	b084      	sub	sp, #16
 800dcc6:	af00      	add	r7, sp, #0
 800dcc8:	60f8      	str	r0, [r7, #12]
 800dcca:	60b9      	str	r1, [r7, #8]
 800dccc:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 800dcce:	68f8      	ldr	r0, [r7, #12]
 800dcd0:	f000 fbd1 	bl	800e476 <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>
 800dcd4:	4604      	mov	r4, r0
 800dcd6:	68b8      	ldr	r0, [r7, #8]
 800dcd8:	f000 fbcd 	bl	800e476 <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>
 800dcdc:	4605      	mov	r5, r0
 800dcde:	6878      	ldr	r0, [r7, #4]
 800dce0:	f000 fbd7 	bl	800e492 <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 800dce4:	4603      	mov	r3, r0
 800dce6:	461a      	mov	r2, r3
 800dce8:	4629      	mov	r1, r5
 800dcea:	4620      	mov	r0, r4
 800dcec:	f000 fbdf 	bl	800e4ae <_ZSt13__copy_move_aILb0EPK6SymbolPS0_ET1_T0_S5_S4_>
 800dcf0:	4603      	mov	r3, r0
 800dcf2:	4619      	mov	r1, r3
 800dcf4:	6878      	ldr	r0, [r7, #4]
 800dcf6:	f000 fbec 	bl	800e4d2 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_>
 800dcfa:	4603      	mov	r3, r0
    }
 800dcfc:	4618      	mov	r0, r3
 800dcfe:	3710      	adds	r7, #16
 800dd00:	46bd      	mov	sp, r7
 800dd02:	bdb0      	pop	{r4, r5, r7, pc}

0800dd04 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEEEvT_S8_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800dd04:	b580      	push	{r7, lr}
 800dd06:	b082      	sub	sp, #8
 800dd08:	af00      	add	r7, sp, #0
 800dd0a:	6078      	str	r0, [r7, #4]
 800dd0c:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800dd0e:	6839      	ldr	r1, [r7, #0]
 800dd10:	6878      	ldr	r0, [r7, #4]
 800dd12:	f000 fbf5 	bl	800e500 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_>
    }
 800dd16:	bf00      	nop
 800dd18:	3708      	adds	r7, #8
 800dd1a:	46bd      	mov	sp, r7
 800dd1c:	bd80      	pop	{r7, pc}

0800dd1e <_ZSt12__miter_baseIP6SymbolET_S2_>:
    __miter_base(_Iterator __it)
 800dd1e:	b480      	push	{r7}
 800dd20:	b083      	sub	sp, #12
 800dd22:	af00      	add	r7, sp, #0
 800dd24:	6078      	str	r0, [r7, #4]
    { return __it; }
 800dd26:	687b      	ldr	r3, [r7, #4]
 800dd28:	4618      	mov	r0, r3
 800dd2a:	370c      	adds	r7, #12
 800dd2c:	46bd      	mov	sp, r7
 800dd2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd32:	4770      	bx	lr

0800dd34 <_ZSt14__copy_move_a2ILb0EP6SymbolS1_ET1_T0_S3_S2_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 800dd34:	b5b0      	push	{r4, r5, r7, lr}
 800dd36:	b084      	sub	sp, #16
 800dd38:	af00      	add	r7, sp, #0
 800dd3a:	60f8      	str	r0, [r7, #12]
 800dd3c:	60b9      	str	r1, [r7, #8]
 800dd3e:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 800dd40:	68f8      	ldr	r0, [r7, #12]
 800dd42:	f000 fc00 	bl	800e546 <_ZSt12__niter_baseIP6SymbolET_S2_>
 800dd46:	4604      	mov	r4, r0
 800dd48:	68b8      	ldr	r0, [r7, #8]
 800dd4a:	f000 fbfc 	bl	800e546 <_ZSt12__niter_baseIP6SymbolET_S2_>
 800dd4e:	4605      	mov	r5, r0
 800dd50:	687b      	ldr	r3, [r7, #4]
 800dd52:	4618      	mov	r0, r3
 800dd54:	f000 fbf7 	bl	800e546 <_ZSt12__niter_baseIP6SymbolET_S2_>
 800dd58:	4603      	mov	r3, r0
 800dd5a:	461a      	mov	r2, r3
 800dd5c:	4629      	mov	r1, r5
 800dd5e:	4620      	mov	r0, r4
 800dd60:	f000 fbfc 	bl	800e55c <_ZSt13__copy_move_aILb0EP6SymbolS1_ET1_T0_S3_S2_>
 800dd64:	4602      	mov	r2, r0
 800dd66:	1d3b      	adds	r3, r7, #4
 800dd68:	4611      	mov	r1, r2
 800dd6a:	4618      	mov	r0, r3
 800dd6c:	f000 fc08 	bl	800e580 <_ZSt12__niter_wrapIP6SymbolET_RKS2_S2_>
 800dd70:	4603      	mov	r3, r0
    }
 800dd72:	4618      	mov	r0, r3
 800dd74:	3710      	adds	r7, #16
 800dd76:	46bd      	mov	sp, r7
 800dd78:	bdb0      	pop	{r4, r5, r7, pc}

0800dd7a <_ZSt18uninitialized_copyIP6SymbolS1_ET0_T_S3_S2_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 800dd7a:	b580      	push	{r7, lr}
 800dd7c:	b086      	sub	sp, #24
 800dd7e:	af00      	add	r7, sp, #0
 800dd80:	60f8      	str	r0, [r7, #12]
 800dd82:	60b9      	str	r1, [r7, #8]
 800dd84:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 800dd86:	2301      	movs	r3, #1
 800dd88:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 800dd8a:	687a      	ldr	r2, [r7, #4]
 800dd8c:	68b9      	ldr	r1, [r7, #8]
 800dd8e:	68f8      	ldr	r0, [r7, #12]
 800dd90:	f000 fc02 	bl	800e598 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_>
 800dd94:	4603      	mov	r3, r0
    }
 800dd96:	4618      	mov	r0, r3
 800dd98:	3718      	adds	r7, #24
 800dd9a:	46bd      	mov	sp, r7
 800dd9c:	bd80      	pop	{r7, pc}

0800dd9e <_ZNSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 800dd9e:	b590      	push	{r4, r7, lr}
 800dda0:	b085      	sub	sp, #20
 800dda2:	af00      	add	r7, sp, #0
 800dda4:	60f8      	str	r0, [r7, #12]
 800dda6:	7239      	strb	r1, [r7, #8]
 800dda8:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 800ddaa:	6878      	ldr	r0, [r7, #4]
 800ddac:	f7fc fe62 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800ddb0:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 800ddb2:	68fb      	ldr	r3, [r7, #12]
 800ddb4:	4618      	mov	r0, r3
 800ddb6:	f000 fc0f 	bl	800e5d8 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>
 800ddba:	4603      	mov	r3, r0
 800ddbc:	4619      	mov	r1, r3
 800ddbe:	200c      	movs	r0, #12
 800ddc0:	f7f3 f94b 	bl	800105a <_ZnwjPv>
 800ddc4:	4603      	mov	r3, r0
 800ddc6:	4621      	mov	r1, r4
 800ddc8:	4618      	mov	r0, r3
 800ddca:	f7ff fc70 	bl	800d6ae <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
	}
 800ddce:	68fb      	ldr	r3, [r7, #12]
 800ddd0:	4618      	mov	r0, r3
 800ddd2:	3714      	adds	r7, #20
 800ddd4:	46bd      	mov	sp, r7
 800ddd6:	bd90      	pop	{r4, r7, pc}

0800ddd8 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 800ddd8:	b5b0      	push	{r4, r5, r7, lr}
 800ddda:	b084      	sub	sp, #16
 800dddc:	af00      	add	r7, sp, #0
 800ddde:	60f8      	str	r0, [r7, #12]
 800dde0:	7239      	strb	r1, [r7, #8]
 800dde2:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 800dde4:	68fc      	ldr	r4, [r7, #12]
 800dde6:	6878      	ldr	r0, [r7, #4]
 800dde8:	f7fc fe44 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800ddec:	4603      	mov	r3, r0
 800ddee:	461a      	mov	r2, r3
 800ddf0:	4629      	mov	r1, r5
 800ddf2:	4620      	mov	r0, r4
 800ddf4:	f7ff ffd3 	bl	800dd9e <_ZNSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800ddf8:	68fb      	ldr	r3, [r7, #12]
 800ddfa:	4618      	mov	r0, r3
 800ddfc:	3710      	adds	r7, #16
 800ddfe:	46bd      	mov	sp, r7
 800de00:	bdb0      	pop	{r4, r5, r7, pc}

0800de02 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EES2_I6SymbolSaISB_EEEEC1ILj1EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800de02:	b5b0      	push	{r4, r5, r7, lr}
 800de04:	b084      	sub	sp, #16
 800de06:	af00      	add	r7, sp, #0
 800de08:	60f8      	str	r0, [r7, #12]
 800de0a:	7239      	strb	r1, [r7, #8]
 800de0c:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800de0e:	68fc      	ldr	r4, [r7, #12]
 800de10:	6878      	ldr	r0, [r7, #4]
 800de12:	f7fc fe2f 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800de16:	4603      	mov	r3, r0
 800de18:	461a      	mov	r2, r3
 800de1a:	4629      	mov	r1, r5
 800de1c:	4620      	mov	r0, r4
 800de1e:	f7ff ffdb 	bl	800ddd8 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800de22:	68fb      	ldr	r3, [r7, #12]
 800de24:	4618      	mov	r0, r3
 800de26:	3710      	adds	r7, #16
 800de28:	46bd      	mov	sp, r7
 800de2a:	bdb0      	pop	{r4, r5, r7, pc}

0800de2c <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj2EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800de2c:	b5b0      	push	{r4, r5, r7, lr}
 800de2e:	b084      	sub	sp, #16
 800de30:	af00      	add	r7, sp, #0
 800de32:	60f8      	str	r0, [r7, #12]
 800de34:	7239      	strb	r1, [r7, #8]
 800de36:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800de38:	68fc      	ldr	r4, [r7, #12]
 800de3a:	6878      	ldr	r0, [r7, #4]
 800de3c:	f7fc fe1a 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800de40:	4603      	mov	r3, r0
 800de42:	461a      	mov	r2, r3
 800de44:	4629      	mov	r1, r5
 800de46:	4620      	mov	r0, r4
 800de48:	f7ff ffdb 	bl	800de02 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EES2_I6SymbolSaISB_EEEEC1ILj1EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800de4c:	68fb      	ldr	r3, [r7, #12]
 800de4e:	4618      	mov	r0, r3
 800de50:	3710      	adds	r7, #16
 800de52:	46bd      	mov	sp, r7
 800de54:	bdb0      	pop	{r4, r5, r7, pc}

0800de56 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800de56:	b5b0      	push	{r4, r5, r7, lr}
 800de58:	b084      	sub	sp, #16
 800de5a:	af00      	add	r7, sp, #0
 800de5c:	60f8      	str	r0, [r7, #12]
 800de5e:	7239      	strb	r1, [r7, #8]
 800de60:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800de62:	68fc      	ldr	r4, [r7, #12]
 800de64:	6878      	ldr	r0, [r7, #4]
 800de66:	f7fc fe05 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800de6a:	4603      	mov	r3, r0
 800de6c:	461a      	mov	r2, r3
 800de6e:	4629      	mov	r1, r5
 800de70:	4620      	mov	r0, r4
 800de72:	f7ff ffdb 	bl	800de2c <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj2EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800de76:	68fb      	ldr	r3, [r7, #12]
 800de78:	4618      	mov	r0, r3
 800de7a:	3710      	adds	r7, #16
 800de7c:	46bd      	mov	sp, r7
 800de7e:	bdb0      	pop	{r4, r5, r7, pc}

0800de80 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj4EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800de80:	b5b0      	push	{r4, r5, r7, lr}
 800de82:	b084      	sub	sp, #16
 800de84:	af00      	add	r7, sp, #0
 800de86:	60f8      	str	r0, [r7, #12]
 800de88:	7239      	strb	r1, [r7, #8]
 800de8a:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800de8c:	68fc      	ldr	r4, [r7, #12]
 800de8e:	6878      	ldr	r0, [r7, #4]
 800de90:	f7fc fdf0 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800de94:	4603      	mov	r3, r0
 800de96:	461a      	mov	r2, r3
 800de98:	4629      	mov	r1, r5
 800de9a:	4620      	mov	r0, r4
 800de9c:	f7ff ffdb 	bl	800de56 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800dea0:	68fb      	ldr	r3, [r7, #12]
 800dea2:	4618      	mov	r0, r3
 800dea4:	3710      	adds	r7, #16
 800dea6:	46bd      	mov	sp, r7
 800dea8:	bdb0      	pop	{r4, r5, r7, pc}

0800deaa <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800deaa:	b5b0      	push	{r4, r5, r7, lr}
 800deac:	b084      	sub	sp, #16
 800deae:	af00      	add	r7, sp, #0
 800deb0:	60f8      	str	r0, [r7, #12]
 800deb2:	7239      	strb	r1, [r7, #8]
 800deb4:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800deb6:	68fc      	ldr	r4, [r7, #12]
 800deb8:	6878      	ldr	r0, [r7, #4]
 800deba:	f7fc fddb 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800debe:	4603      	mov	r3, r0
 800dec0:	461a      	mov	r2, r3
 800dec2:	4629      	mov	r1, r5
 800dec4:	4620      	mov	r0, r4
 800dec6:	f7ff ffdb 	bl	800de80 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj4EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800deca:	68fb      	ldr	r3, [r7, #12]
 800decc:	4618      	mov	r0, r3
 800dece:	3710      	adds	r7, #16
 800ded0:	46bd      	mov	sp, r7
 800ded2:	bdb0      	pop	{r4, r5, r7, pc}

0800ded4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 800ded4:	b5b0      	push	{r4, r5, r7, lr}
 800ded6:	b084      	sub	sp, #16
 800ded8:	af00      	add	r7, sp, #0
 800deda:	60f8      	str	r0, [r7, #12]
 800dedc:	7239      	strb	r1, [r7, #8]
 800dede:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 800dee0:	68fc      	ldr	r4, [r7, #12]
 800dee2:	6878      	ldr	r0, [r7, #4]
 800dee4:	f7fc fdc6 	bl	800aa74 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800dee8:	4603      	mov	r3, r0
 800deea:	461a      	mov	r2, r3
 800deec:	4629      	mov	r1, r5
 800deee:	4620      	mov	r0, r4
 800def0:	f7ff ffdb 	bl	800deaa <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj5EJRKSD_EEESt16in_place_index_tIXT_EEDpOT0_>
 800def4:	68fb      	ldr	r3, [r7, #12]
 800def6:	2205      	movs	r2, #5
 800def8:	761a      	strb	r2, [r3, #24]
	{ }
 800defa:	68fb      	ldr	r3, [r7, #12]
 800defc:	4618      	mov	r0, r3
 800defe:	3710      	adds	r7, #16
 800df00:	46bd      	mov	sp, r7
 800df02:	bdb0      	pop	{r4, r5, r7, pc}

0800df04 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800df04:	b580      	push	{r7, lr}
 800df06:	b082      	sub	sp, #8
 800df08:	af00      	add	r7, sp, #0
 800df0a:	6078      	str	r0, [r7, #4]
 800df0c:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 800df0e:	6839      	ldr	r1, [r7, #0]
 800df10:	6878      	ldr	r0, [r7, #4]
 800df12:	f000 fb6d 	bl	800e5f0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS7_>
 800df16:	687b      	ldr	r3, [r7, #4]
 800df18:	4618      	mov	r0, r3
 800df1a:	3708      	adds	r7, #8
 800df1c:	46bd      	mov	sp, r7
 800df1e:	bd80      	pop	{r7, pc}

0800df20 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800df20:	b480      	push	{r7}
 800df22:	b083      	sub	sp, #12
 800df24:	af00      	add	r7, sp, #0
 800df26:	6078      	str	r0, [r7, #4]
 800df28:	687b      	ldr	r3, [r7, #4]
 800df2a:	4618      	mov	r0, r3
 800df2c:	370c      	adds	r7, #12
 800df2e:	46bd      	mov	sp, r7
 800df30:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df34:	4770      	bx	lr

0800df36 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS6_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 800df36:	b580      	push	{r7, lr}
 800df38:	b082      	sub	sp, #8
 800df3a:	af00      	add	r7, sp, #0
 800df3c:	6078      	str	r0, [r7, #4]
 800df3e:	6039      	str	r1, [r7, #0]
      : _M_impl(__a) { }
 800df40:	687b      	ldr	r3, [r7, #4]
 800df42:	6839      	ldr	r1, [r7, #0]
 800df44:	4618      	mov	r0, r3
 800df46:	f000 fb5f 	bl	800e608 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1ERKS6_>
 800df4a:	687b      	ldr	r3, [r7, #4]
 800df4c:	4618      	mov	r0, r3
 800df4e:	3708      	adds	r7, #8
 800df50:	46bd      	mov	sp, r7
 800df52:	bd80      	pop	{r7, pc}

0800df54 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 800df54:	b480      	push	{r7}
 800df56:	b083      	sub	sp, #12
 800df58:	af00      	add	r7, sp, #0
 800df5a:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 800df5c:	687b      	ldr	r3, [r7, #4]
 800df5e:	2200      	movs	r2, #0
 800df60:	601a      	str	r2, [r3, #0]
 800df62:	687b      	ldr	r3, [r7, #4]
 800df64:	2200      	movs	r2, #0
 800df66:	605a      	str	r2, [r3, #4]
 800df68:	687b      	ldr	r3, [r7, #4]
 800df6a:	2200      	movs	r2, #0
 800df6c:	609a      	str	r2, [r3, #8]
	{ }
 800df6e:	687b      	ldr	r3, [r7, #4]
 800df70:	4618      	mov	r0, r3
 800df72:	370c      	adds	r7, #12
 800df74:	46bd      	mov	sp, r7
 800df76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df7a:	4770      	bx	lr

0800df7c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 800df7c:	b480      	push	{r7}
 800df7e:	b083      	sub	sp, #12
 800df80:	af00      	add	r7, sp, #0
 800df82:	6078      	str	r0, [r7, #4]
 800df84:	6039      	str	r1, [r7, #0]
	  _M_start = __x._M_start;
 800df86:	683b      	ldr	r3, [r7, #0]
 800df88:	681a      	ldr	r2, [r3, #0]
 800df8a:	687b      	ldr	r3, [r7, #4]
 800df8c:	601a      	str	r2, [r3, #0]
	  _M_finish = __x._M_finish;
 800df8e:	683b      	ldr	r3, [r7, #0]
 800df90:	685a      	ldr	r2, [r3, #4]
 800df92:	687b      	ldr	r3, [r7, #4]
 800df94:	605a      	str	r2, [r3, #4]
	  _M_end_of_storage = __x._M_end_of_storage;
 800df96:	683b      	ldr	r3, [r7, #0]
 800df98:	689a      	ldr	r2, [r3, #8]
 800df9a:	687b      	ldr	r3, [r7, #4]
 800df9c:	609a      	str	r2, [r3, #8]
	}
 800df9e:	bf00      	nop
 800dfa0:	370c      	adds	r7, #12
 800dfa2:	46bd      	mov	sp, r7
 800dfa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfa8:	4770      	bx	lr

0800dfaa <_ZSt18__do_alloc_on_moveISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_S8_St17integral_constantIbLb1EE>:
    inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 800dfaa:	b580      	push	{r7, lr}
 800dfac:	b084      	sub	sp, #16
 800dfae:	af00      	add	r7, sp, #0
 800dfb0:	60f8      	str	r0, [r7, #12]
 800dfb2:	60b9      	str	r1, [r7, #8]
 800dfb4:	713a      	strb	r2, [r7, #4]
    { __one = std::move(__two); }
 800dfb6:	68b8      	ldr	r0, [r7, #8]
 800dfb8:	f000 fb38 	bl	800e62c <_ZSt4moveIRSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEONSt16remove_referenceIT_E4typeEOS9_>
 800dfbc:	bf00      	nop
 800dfbe:	3710      	adds	r7, #16
 800dfc0:	46bd      	mov	sp, r7
 800dfc2:	bd80      	pop	{r7, pc}

0800dfc4 <_ZSt4moveIRNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOSC_>:
    move(_Tp&& __t) noexcept
 800dfc4:	b480      	push	{r7}
 800dfc6:	b083      	sub	sp, #12
 800dfc8:	af00      	add	r7, sp, #0
 800dfca:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800dfcc:	687b      	ldr	r3, [r7, #4]
 800dfce:	4618      	mov	r0, r3
 800dfd0:	370c      	adds	r7, #12
 800dfd2:	46bd      	mov	sp, r7
 800dfd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfd8:	4770      	bx	lr

0800dfda <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1EOS8_>:
	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 800dfda:	b480      	push	{r7}
 800dfdc:	b083      	sub	sp, #12
 800dfde:	af00      	add	r7, sp, #0
 800dfe0:	6078      	str	r0, [r7, #4]
 800dfe2:	6039      	str	r1, [r7, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 800dfe4:	683b      	ldr	r3, [r7, #0]
 800dfe6:	681a      	ldr	r2, [r3, #0]
	  _M_end_of_storage(__x._M_end_of_storage)
 800dfe8:	687b      	ldr	r3, [r7, #4]
 800dfea:	601a      	str	r2, [r3, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 800dfec:	683b      	ldr	r3, [r7, #0]
 800dfee:	685a      	ldr	r2, [r3, #4]
	  _M_end_of_storage(__x._M_end_of_storage)
 800dff0:	687b      	ldr	r3, [r7, #4]
 800dff2:	605a      	str	r2, [r3, #4]
 800dff4:	683b      	ldr	r3, [r7, #0]
 800dff6:	689a      	ldr	r2, [r3, #8]
 800dff8:	687b      	ldr	r3, [r7, #4]
 800dffa:	609a      	str	r2, [r3, #8]
	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 800dffc:	683b      	ldr	r3, [r7, #0]
 800dffe:	2200      	movs	r2, #0
 800e000:	609a      	str	r2, [r3, #8]
 800e002:	683b      	ldr	r3, [r7, #0]
 800e004:	689a      	ldr	r2, [r3, #8]
 800e006:	683b      	ldr	r3, [r7, #0]
 800e008:	605a      	str	r2, [r3, #4]
 800e00a:	683b      	ldr	r3, [r7, #0]
 800e00c:	685a      	ldr	r2, [r3, #4]
 800e00e:	683b      	ldr	r3, [r7, #0]
 800e010:	601a      	str	r2, [r3, #0]
 800e012:	687b      	ldr	r3, [r7, #4]
 800e014:	4618      	mov	r0, r3
 800e016:	370c      	adds	r7, #12
 800e018:	46bd      	mov	sp, r7
 800e01a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e01e:	4770      	bx	lr

0800e020 <_ZNSaI6SymbolEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800e020:	b580      	push	{r7, lr}
 800e022:	b082      	sub	sp, #8
 800e024:	af00      	add	r7, sp, #0
 800e026:	6078      	str	r0, [r7, #4]
 800e028:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 800e02a:	6839      	ldr	r1, [r7, #0]
 800e02c:	6878      	ldr	r0, [r7, #4]
 800e02e:	f000 fb08 	bl	800e642 <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1ERKS2_>
 800e032:	687b      	ldr	r3, [r7, #4]
 800e034:	4618      	mov	r0, r3
 800e036:	3708      	adds	r7, #8
 800e038:	46bd      	mov	sp, r7
 800e03a:	bd80      	pop	{r7, pc}

0800e03c <_ZN9__gnu_cxx13new_allocatorI6SymbolED1Ev>:
 800e03c:	b480      	push	{r7}
 800e03e:	b083      	sub	sp, #12
 800e040:	af00      	add	r7, sp, #0
 800e042:	6078      	str	r0, [r7, #4]
 800e044:	687b      	ldr	r3, [r7, #4]
 800e046:	4618      	mov	r0, r3
 800e048:	370c      	adds	r7, #12
 800e04a:	46bd      	mov	sp, r7
 800e04c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e050:	4770      	bx	lr

0800e052 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 800e052:	b580      	push	{r7, lr}
 800e054:	b082      	sub	sp, #8
 800e056:	af00      	add	r7, sp, #0
 800e058:	6078      	str	r0, [r7, #4]
 800e05a:	6039      	str	r1, [r7, #0]
      : _M_impl(__a) { }
 800e05c:	687b      	ldr	r3, [r7, #4]
 800e05e:	6839      	ldr	r1, [r7, #0]
 800e060:	4618      	mov	r0, r3
 800e062:	f000 fafa 	bl	800e65a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>
 800e066:	687b      	ldr	r3, [r7, #4]
 800e068:	4618      	mov	r0, r3
 800e06a:	3708      	adds	r7, #8
 800e06c:	46bd      	mov	sp, r7
 800e06e:	bd80      	pop	{r7, pc}

0800e070 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 800e070:	b480      	push	{r7}
 800e072:	b083      	sub	sp, #12
 800e074:	af00      	add	r7, sp, #0
 800e076:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 800e078:	687b      	ldr	r3, [r7, #4]
 800e07a:	2200      	movs	r2, #0
 800e07c:	601a      	str	r2, [r3, #0]
 800e07e:	687b      	ldr	r3, [r7, #4]
 800e080:	2200      	movs	r2, #0
 800e082:	605a      	str	r2, [r3, #4]
 800e084:	687b      	ldr	r3, [r7, #4]
 800e086:	2200      	movs	r2, #0
 800e088:	609a      	str	r2, [r3, #8]
	{ }
 800e08a:	687b      	ldr	r3, [r7, #4]
 800e08c:	4618      	mov	r0, r3
 800e08e:	370c      	adds	r7, #12
 800e090:	46bd      	mov	sp, r7
 800e092:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e096:	4770      	bx	lr

0800e098 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 800e098:	b480      	push	{r7}
 800e09a:	b083      	sub	sp, #12
 800e09c:	af00      	add	r7, sp, #0
 800e09e:	6078      	str	r0, [r7, #4]
 800e0a0:	6039      	str	r1, [r7, #0]
	  _M_start = __x._M_start;
 800e0a2:	683b      	ldr	r3, [r7, #0]
 800e0a4:	681a      	ldr	r2, [r3, #0]
 800e0a6:	687b      	ldr	r3, [r7, #4]
 800e0a8:	601a      	str	r2, [r3, #0]
	  _M_finish = __x._M_finish;
 800e0aa:	683b      	ldr	r3, [r7, #0]
 800e0ac:	685a      	ldr	r2, [r3, #4]
 800e0ae:	687b      	ldr	r3, [r7, #4]
 800e0b0:	605a      	str	r2, [r3, #4]
	  _M_end_of_storage = __x._M_end_of_storage;
 800e0b2:	683b      	ldr	r3, [r7, #0]
 800e0b4:	689a      	ldr	r2, [r3, #8]
 800e0b6:	687b      	ldr	r3, [r7, #4]
 800e0b8:	609a      	str	r2, [r3, #8]
	}
 800e0ba:	bf00      	nop
 800e0bc:	370c      	adds	r7, #12
 800e0be:	46bd      	mov	sp, r7
 800e0c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0c4:	4770      	bx	lr

0800e0c6 <_ZSt18__do_alloc_on_moveISaI6SymbolEEvRT_S3_St17integral_constantIbLb1EE>:
    inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 800e0c6:	b580      	push	{r7, lr}
 800e0c8:	b084      	sub	sp, #16
 800e0ca:	af00      	add	r7, sp, #0
 800e0cc:	60f8      	str	r0, [r7, #12]
 800e0ce:	60b9      	str	r1, [r7, #8]
 800e0d0:	713a      	strb	r2, [r7, #4]
    { __one = std::move(__two); }
 800e0d2:	68b8      	ldr	r0, [r7, #8]
 800e0d4:	f000 fad3 	bl	800e67e <_ZSt4moveIRSaI6SymbolEEONSt16remove_referenceIT_E4typeEOS4_>
 800e0d8:	bf00      	nop
 800e0da:	3710      	adds	r7, #16
 800e0dc:	46bd      	mov	sp, r7
 800e0de:	bd80      	pop	{r7, pc}

0800e0e0 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
 800e0e0:	b480      	push	{r7}
 800e0e2:	b083      	sub	sp, #12
 800e0e4:	af00      	add	r7, sp, #0
 800e0e6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800e0e8:	687b      	ldr	r3, [r7, #4]
 800e0ea:	4618      	mov	r0, r3
 800e0ec:	370c      	adds	r7, #12
 800e0ee:	46bd      	mov	sp, r7
 800e0f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0f4:	4770      	bx	lr

0800e0f6 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1EOS3_>:
	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 800e0f6:	b480      	push	{r7}
 800e0f8:	b083      	sub	sp, #12
 800e0fa:	af00      	add	r7, sp, #0
 800e0fc:	6078      	str	r0, [r7, #4]
 800e0fe:	6039      	str	r1, [r7, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 800e100:	683b      	ldr	r3, [r7, #0]
 800e102:	681a      	ldr	r2, [r3, #0]
	  _M_end_of_storage(__x._M_end_of_storage)
 800e104:	687b      	ldr	r3, [r7, #4]
 800e106:	601a      	str	r2, [r3, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 800e108:	683b      	ldr	r3, [r7, #0]
 800e10a:	685a      	ldr	r2, [r3, #4]
	  _M_end_of_storage(__x._M_end_of_storage)
 800e10c:	687b      	ldr	r3, [r7, #4]
 800e10e:	605a      	str	r2, [r3, #4]
 800e110:	683b      	ldr	r3, [r7, #0]
 800e112:	689a      	ldr	r2, [r3, #8]
 800e114:	687b      	ldr	r3, [r7, #4]
 800e116:	609a      	str	r2, [r3, #8]
	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 800e118:	683b      	ldr	r3, [r7, #0]
 800e11a:	2200      	movs	r2, #0
 800e11c:	609a      	str	r2, [r3, #8]
 800e11e:	683b      	ldr	r3, [r7, #0]
 800e120:	689a      	ldr	r2, [r3, #8]
 800e122:	683b      	ldr	r3, [r7, #0]
 800e124:	605a      	str	r2, [r3, #4]
 800e126:	683b      	ldr	r3, [r7, #0]
 800e128:	685a      	ldr	r2, [r3, #4]
 800e12a:	683b      	ldr	r3, [r7, #0]
 800e12c:	601a      	str	r2, [r3, #0]
 800e12e:	687b      	ldr	r3, [r7, #4]
 800e130:	4618      	mov	r0, r3
 800e132:	370c      	adds	r7, #12
 800e134:	46bd      	mov	sp, r7
 800e136:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e13a:	4770      	bx	lr

0800e13c <_ZN9__gnu_cxx14__alloc_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES6_E17_S_select_on_copyERKS7_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 800e13c:	b580      	push	{r7, lr}
 800e13e:	b082      	sub	sp, #8
 800e140:	af00      	add	r7, sp, #0
 800e142:	6078      	str	r0, [r7, #4]
 800e144:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 800e146:	687b      	ldr	r3, [r7, #4]
 800e148:	6839      	ldr	r1, [r7, #0]
 800e14a:	4618      	mov	r0, r3
 800e14c:	f000 faa2 	bl	800e694 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE37select_on_container_copy_constructionERKS6_>
 800e150:	6878      	ldr	r0, [r7, #4]
 800e152:	3708      	adds	r7, #8
 800e154:	46bd      	mov	sp, r7
 800e156:	bd80      	pop	{r7, pc}

0800e158 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EjRKS6_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 800e158:	b580      	push	{r7, lr}
 800e15a:	b084      	sub	sp, #16
 800e15c:	af00      	add	r7, sp, #0
 800e15e:	60f8      	str	r0, [r7, #12]
 800e160:	60b9      	str	r1, [r7, #8]
 800e162:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 800e164:	68fb      	ldr	r3, [r7, #12]
 800e166:	6879      	ldr	r1, [r7, #4]
 800e168:	4618      	mov	r0, r3
 800e16a:	f000 fa4d 	bl	800e608 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1ERKS6_>
      { _M_create_storage(__n); }
 800e16e:	68b9      	ldr	r1, [r7, #8]
 800e170:	68f8      	ldr	r0, [r7, #12]
 800e172:	f000 fa9c 	bl	800e6ae <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_create_storageEj>
 800e176:	68fb      	ldr	r3, [r7, #12]
 800e178:	4618      	mov	r0, r3
 800e17a:	3710      	adds	r7, #16
 800e17c:	46bd      	mov	sp, r7
 800e17e:	bd80      	pop	{r7, pc}

0800e180 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E17_S_select_on_copyERKS2_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 800e180:	b580      	push	{r7, lr}
 800e182:	b082      	sub	sp, #8
 800e184:	af00      	add	r7, sp, #0
 800e186:	6078      	str	r0, [r7, #4]
 800e188:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 800e18a:	687b      	ldr	r3, [r7, #4]
 800e18c:	6839      	ldr	r1, [r7, #0]
 800e18e:	4618      	mov	r0, r3
 800e190:	f000 faab 	bl	800e6ea <_ZNSt16allocator_traitsISaI6SymbolEE37select_on_container_copy_constructionERKS1_>
 800e194:	6878      	ldr	r0, [r7, #4]
 800e196:	3708      	adds	r7, #8
 800e198:	46bd      	mov	sp, r7
 800e19a:	bd80      	pop	{r7, pc}

0800e19c <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EjRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 800e19c:	b580      	push	{r7, lr}
 800e19e:	b084      	sub	sp, #16
 800e1a0:	af00      	add	r7, sp, #0
 800e1a2:	60f8      	str	r0, [r7, #12]
 800e1a4:	60b9      	str	r1, [r7, #8]
 800e1a6:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 800e1a8:	68fb      	ldr	r3, [r7, #12]
 800e1aa:	6879      	ldr	r1, [r7, #4]
 800e1ac:	4618      	mov	r0, r3
 800e1ae:	f000 fa54 	bl	800e65a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
 800e1b2:	68b9      	ldr	r1, [r7, #8]
 800e1b4:	68f8      	ldr	r0, [r7, #12]
 800e1b6:	f000 faa5 	bl	800e704 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_M_create_storageEj>
 800e1ba:	68fb      	ldr	r3, [r7, #12]
 800e1bc:	4618      	mov	r0, r3
 800e1be:	3710      	adds	r7, #16
 800e1c0:	46bd      	mov	sp, r7
 800e1c2:	bd80      	pop	{r7, pc}

0800e1c4 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>:
    addressof(_Tp& __r) noexcept
 800e1c4:	b580      	push	{r7, lr}
 800e1c6:	b082      	sub	sp, #8
 800e1c8:	af00      	add	r7, sp, #0
 800e1ca:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800e1cc:	6878      	ldr	r0, [r7, #4]
 800e1ce:	f000 fab4 	bl	800e73a <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 800e1d2:	4603      	mov	r3, r0
 800e1d4:	4618      	mov	r0, r3
 800e1d6:	3708      	adds	r7, #8
 800e1d8:	46bd      	mov	sp, r7
 800e1da:	bd80      	pop	{r7, pc}

0800e1dc <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 800e1dc:	b580      	push	{r7, lr}
 800e1de:	b084      	sub	sp, #16
 800e1e0:	af00      	add	r7, sp, #0
 800e1e2:	60f8      	str	r0, [r7, #12]
 800e1e4:	60b9      	str	r1, [r7, #8]
 800e1e6:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800e1e8:	68b8      	ldr	r0, [r7, #8]
 800e1ea:	f014 fd1a 	bl	8022c22 <_ZdlPv>
      }
 800e1ee:	3710      	adds	r7, #16
 800e1f0:	46bd      	mov	sp, r7
 800e1f2:	bd80      	pop	{r7, pc}

0800e1f4 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 800e1f4:	b580      	push	{r7, lr}
 800e1f6:	b082      	sub	sp, #8
 800e1f8:	af00      	add	r7, sp, #0
 800e1fa:	6078      	str	r0, [r7, #4]
 800e1fc:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800e1fe:	2200      	movs	r2, #0
 800e200:	6839      	ldr	r1, [r7, #0]
 800e202:	6878      	ldr	r0, [r7, #4]
 800e204:	f000 faa4 	bl	800e750 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEjPKv>
 800e208:	4603      	mov	r3, r0
 800e20a:	4618      	mov	r0, r3
 800e20c:	3708      	adds	r7, #8
 800e20e:	46bd      	mov	sp, r7
 800e210:	bd80      	pop	{r7, pc}

0800e212 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 800e212:	b580      	push	{r7, lr}
 800e214:	b086      	sub	sp, #24
 800e216:	af00      	add	r7, sp, #0
 800e218:	60f8      	str	r0, [r7, #12]
 800e21a:	60b9      	str	r1, [r7, #8]
 800e21c:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 800e21e:	2301      	movs	r3, #1
 800e220:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 800e222:	687a      	ldr	r2, [r7, #4]
 800e224:	68b9      	ldr	r1, [r7, #8]
 800e226:	68f8      	ldr	r0, [r7, #12]
 800e228:	f000 fab4 	bl	800e794 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_>
 800e22c:	4603      	mov	r3, r0
    }
 800e22e:	4618      	mov	r0, r3
 800e230:	3718      	adds	r7, #24
 800e232:	46bd      	mov	sp, r7
 800e234:	bd80      	pop	{r7, pc}

0800e236 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_>:
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 800e236:	b580      	push	{r7, lr}
 800e238:	b082      	sub	sp, #8
 800e23a:	af00      	add	r7, sp, #0
 800e23c:	6078      	str	r0, [r7, #4]
 800e23e:	6039      	str	r1, [r7, #0]
	  for (; __first != __last; ++__first)
 800e240:	687a      	ldr	r2, [r7, #4]
 800e242:	683b      	ldr	r3, [r7, #0]
 800e244:	429a      	cmp	r2, r3
 800e246:	d00a      	beq.n	800e25e <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_+0x28>
	    std::_Destroy(std::__addressof(*__first));
 800e248:	6878      	ldr	r0, [r7, #4]
 800e24a:	f7f8 f884 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800e24e:	4603      	mov	r3, r0
 800e250:	4618      	mov	r0, r3
 800e252:	f7f8 f88b 	bl	800636c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	  for (; __first != __last; ++__first)
 800e256:	687b      	ldr	r3, [r7, #4]
 800e258:	3318      	adds	r3, #24
 800e25a:	607b      	str	r3, [r7, #4]
 800e25c:	e7f0      	b.n	800e240 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_+0xa>
	}
 800e25e:	bf00      	nop
 800e260:	3708      	adds	r7, #8
 800e262:	46bd      	mov	sp, r7
 800e264:	bd80      	pop	{r7, pc}

0800e266 <_ZSt12__niter_baseIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISB_T0_EE>:
{
_GLIBCXX_BEGIN_NAMESPACE_VERSION

  template<typename _Iterator, typename _Container>
    _Iterator
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 800e266:	b580      	push	{r7, lr}
 800e268:	b082      	sub	sp, #8
 800e26a:	af00      	add	r7, sp, #0
 800e26c:	6078      	str	r0, [r7, #4]
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it.base(); }
 800e26e:	1d3b      	adds	r3, r7, #4
 800e270:	4618      	mov	r0, r3
 800e272:	f000 fabe 	bl	800e7f2 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
 800e276:	4603      	mov	r3, r0
 800e278:	681b      	ldr	r3, [r3, #0]
 800e27a:	4618      	mov	r0, r3
 800e27c:	3708      	adds	r7, #8
 800e27e:	46bd      	mov	sp, r7
 800e280:	bd80      	pop	{r7, pc}

0800e282 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 800e282:	b580      	push	{r7, lr}
 800e284:	b082      	sub	sp, #8
 800e286:	af00      	add	r7, sp, #0
 800e288:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 800e28a:	1d3b      	adds	r3, r7, #4
 800e28c:	4618      	mov	r0, r3
 800e28e:	f000 fabb 	bl	800e808 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
 800e292:	4603      	mov	r3, r0
 800e294:	681b      	ldr	r3, [r3, #0]
 800e296:	4618      	mov	r0, r3
 800e298:	3708      	adds	r7, #8
 800e29a:	46bd      	mov	sp, r7
 800e29c:	bd80      	pop	{r7, pc}

0800e29e <_ZSt13__copy_move_aILb0EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET1_T0_SA_S9_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 800e29e:	b580      	push	{r7, lr}
 800e2a0:	b086      	sub	sp, #24
 800e2a2:	af00      	add	r7, sp, #0
 800e2a4:	60f8      	str	r0, [r7, #12]
 800e2a6:	60b9      	str	r1, [r7, #8]
 800e2a8:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 800e2aa:	2300      	movs	r3, #0
 800e2ac:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 800e2ae:	687a      	ldr	r2, [r7, #4]
 800e2b0:	68b9      	ldr	r1, [r7, #8]
 800e2b2:	68f8      	ldr	r0, [r7, #12]
 800e2b4:	f000 fab4 	bl	800e820 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS8_EET0_T_SD_SC_>
 800e2b8:	4603      	mov	r3, r0
    }
 800e2ba:	4618      	mov	r0, r3
 800e2bc:	3718      	adds	r7, #24
 800e2be:	46bd      	mov	sp, r7
 800e2c0:	bd80      	pop	{r7, pc}
	...

0800e2c4 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES8_ET_SD_T0_>:
    __niter_wrap(_From __from, _To __res)
 800e2c4:	b580      	push	{r7, lr}
 800e2c6:	b082      	sub	sp, #8
 800e2c8:	af00      	add	r7, sp, #0
 800e2ca:	6078      	str	r0, [r7, #4]
 800e2cc:	6039      	str	r1, [r7, #0]
    { return __from + (__res - std::__niter_base(__from)); }
 800e2ce:	6878      	ldr	r0, [r7, #4]
 800e2d0:	f7ff ffd7 	bl	800e282 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE>
 800e2d4:	4602      	mov	r2, r0
 800e2d6:	683b      	ldr	r3, [r7, #0]
 800e2d8:	1a9b      	subs	r3, r3, r2
 800e2da:	10db      	asrs	r3, r3, #3
 800e2dc:	4a06      	ldr	r2, [pc, #24]	; (800e2f8 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES8_ET_SD_T0_+0x34>)
 800e2de:	fb02 f303 	mul.w	r3, r2, r3
 800e2e2:	461a      	mov	r2, r3
 800e2e4:	1d3b      	adds	r3, r7, #4
 800e2e6:	4611      	mov	r1, r2
 800e2e8:	4618      	mov	r0, r3
 800e2ea:	f000 fabf 	bl	800e86c <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEplEi>
 800e2ee:	4603      	mov	r3, r0
 800e2f0:	4618      	mov	r0, r3
 800e2f2:	3708      	adds	r7, #8
 800e2f4:	46bd      	mov	sp, r7
 800e2f6:	bd80      	pop	{r7, pc}
 800e2f8:	aaaaaaab 	.word	0xaaaaaaab

0800e2fc <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_>:
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 800e2fc:	b580      	push	{r7, lr}
 800e2fe:	b082      	sub	sp, #8
 800e300:	af00      	add	r7, sp, #0
 800e302:	6078      	str	r0, [r7, #4]
 800e304:	6039      	str	r1, [r7, #0]
	  for (; __first != __last; ++__first)
 800e306:	463a      	mov	r2, r7
 800e308:	1d3b      	adds	r3, r7, #4
 800e30a:	4611      	mov	r1, r2
 800e30c:	4618      	mov	r0, r3
 800e30e:	f000 fac8 	bl	800e8a2 <_ZN9__gnu_cxxneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_>
 800e312:	4603      	mov	r3, r0
 800e314:	2b00      	cmp	r3, #0
 800e316:	d010      	beq.n	800e33a <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_+0x3e>
	    std::_Destroy(std::__addressof(*__first));
 800e318:	1d3b      	adds	r3, r7, #4
 800e31a:	4618      	mov	r0, r3
 800e31c:	f000 faea 	bl	800e8f4 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>
 800e320:	4603      	mov	r3, r0
 800e322:	4618      	mov	r0, r3
 800e324:	f7f8 f817 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800e328:	4603      	mov	r3, r0
 800e32a:	4618      	mov	r0, r3
 800e32c:	f7f8 f81e 	bl	800636c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	  for (; __first != __last; ++__first)
 800e330:	1d3b      	adds	r3, r7, #4
 800e332:	4618      	mov	r0, r3
 800e334:	f000 facd 	bl	800e8d2 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>
 800e338:	e7e5      	b.n	800e306 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_SF_+0xa>
	}
 800e33a:	bf00      	nop
 800e33c:	3708      	adds	r7, #8
 800e33e:	46bd      	mov	sp, r7
 800e340:	bd80      	pop	{r7, pc}

0800e342 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_>:
    __niter_base(_Iterator __it)
 800e342:	b480      	push	{r7}
 800e344:	b083      	sub	sp, #12
 800e346:	af00      	add	r7, sp, #0
 800e348:	6078      	str	r0, [r7, #4]
    { return __it; }
 800e34a:	687b      	ldr	r3, [r7, #4]
 800e34c:	4618      	mov	r0, r3
 800e34e:	370c      	adds	r7, #12
 800e350:	46bd      	mov	sp, r7
 800e352:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e356:	4770      	bx	lr

0800e358 <_ZSt13__copy_move_aILb0EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET1_T0_S8_S7_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 800e358:	b580      	push	{r7, lr}
 800e35a:	b086      	sub	sp, #24
 800e35c:	af00      	add	r7, sp, #0
 800e35e:	60f8      	str	r0, [r7, #12]
 800e360:	60b9      	str	r1, [r7, #8]
 800e362:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 800e364:	2300      	movs	r3, #0
 800e366:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 800e368:	687a      	ldr	r2, [r7, #4]
 800e36a:	68b9      	ldr	r1, [r7, #8]
 800e36c:	68f8      	ldr	r0, [r7, #12]
 800e36e:	f000 facd 	bl	800e90c <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_EET0_T_SB_SA_>
 800e372:	4603      	mov	r3, r0
    }
 800e374:	4618      	mov	r0, r3
 800e376:	3718      	adds	r7, #24
 800e378:	46bd      	mov	sp, r7
 800e37a:	bd80      	pop	{r7, pc}

0800e37c <_ZSt12__niter_wrapIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_RKS7_S7_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 800e37c:	b480      	push	{r7}
 800e37e:	b083      	sub	sp, #12
 800e380:	af00      	add	r7, sp, #0
 800e382:	6078      	str	r0, [r7, #4]
 800e384:	6039      	str	r1, [r7, #0]
    { return __res; }
 800e386:	683b      	ldr	r3, [r7, #0]
 800e388:	4618      	mov	r0, r3
 800e38a:	370c      	adds	r7, #12
 800e38c:	46bd      	mov	sp, r7
 800e38e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e392:	4770      	bx	lr

0800e394 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EET0_T_SA_S9_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 800e394:	b580      	push	{r7, lr}
 800e396:	b086      	sub	sp, #24
 800e398:	af00      	add	r7, sp, #0
 800e39a:	60f8      	str	r0, [r7, #12]
 800e39c:	60b9      	str	r1, [r7, #8]
 800e39e:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 800e3a0:	687b      	ldr	r3, [r7, #4]
 800e3a2:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 800e3a4:	68fa      	ldr	r2, [r7, #12]
 800e3a6:	68bb      	ldr	r3, [r7, #8]
 800e3a8:	429a      	cmp	r2, r3
 800e3aa:	d00e      	beq.n	800e3ca <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EET0_T_SA_S9_+0x36>
		std::_Construct(std::__addressof(*__cur), *__first);
 800e3ac:	6978      	ldr	r0, [r7, #20]
 800e3ae:	f7f7 ffd2 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800e3b2:	4603      	mov	r3, r0
 800e3b4:	68f9      	ldr	r1, [r7, #12]
 800e3b6:	4618      	mov	r0, r3
 800e3b8:	f000 face 	bl	800e958 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRS5_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 800e3bc:	68fb      	ldr	r3, [r7, #12]
 800e3be:	3318      	adds	r3, #24
 800e3c0:	60fb      	str	r3, [r7, #12]
 800e3c2:	697b      	ldr	r3, [r7, #20]
 800e3c4:	3318      	adds	r3, #24
 800e3c6:	617b      	str	r3, [r7, #20]
 800e3c8:	e7ec      	b.n	800e3a4 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EET0_T_SA_S9_+0x10>
	      return __cur;
 800e3ca:	697b      	ldr	r3, [r7, #20]
	}
 800e3cc:	4618      	mov	r0, r3
 800e3ce:	3718      	adds	r7, #24
 800e3d0:	46bd      	mov	sp, r7
 800e3d2:	bd80      	pop	{r7, pc}

0800e3d4 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEEEEPT_RSC_>:
    addressof(_Tp& __r) noexcept
 800e3d4:	b580      	push	{r7, lr}
 800e3d6:	b082      	sub	sp, #8
 800e3d8:	af00      	add	r7, sp, #0
 800e3da:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800e3dc:	6878      	ldr	r0, [r7, #4]
 800e3de:	f000 fad2 	bl	800e986 <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEEEEPT_RSC_>
 800e3e2:	4603      	mov	r3, r0
 800e3e4:	4618      	mov	r0, r3
 800e3e6:	3708      	adds	r7, #8
 800e3e8:	46bd      	mov	sp, r7
 800e3ea:	bd80      	pop	{r7, pc}

0800e3ec <_ZN9__gnu_cxx13new_allocatorI6SymbolE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800e3ec:	b580      	push	{r7, lr}
 800e3ee:	b084      	sub	sp, #16
 800e3f0:	af00      	add	r7, sp, #0
 800e3f2:	60f8      	str	r0, [r7, #12]
 800e3f4:	60b9      	str	r1, [r7, #8]
 800e3f6:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800e3f8:	68b8      	ldr	r0, [r7, #8]
 800e3fa:	f014 fc12 	bl	8022c22 <_ZdlPv>
      }
 800e3fe:	3710      	adds	r7, #16
 800e400:	46bd      	mov	sp, r7
 800e402:	bd80      	pop	{r7, pc}

0800e404 <_ZNSt16allocator_traitsISaI6SymbolEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 800e404:	b580      	push	{r7, lr}
 800e406:	b082      	sub	sp, #8
 800e408:	af00      	add	r7, sp, #0
 800e40a:	6078      	str	r0, [r7, #4]
 800e40c:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800e40e:	2200      	movs	r2, #0
 800e410:	6839      	ldr	r1, [r7, #0]
 800e412:	6878      	ldr	r0, [r7, #4]
 800e414:	f000 fac2 	bl	800e99c <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv>
 800e418:	4603      	mov	r3, r0
 800e41a:	4618      	mov	r0, r3
 800e41c:	3708      	adds	r7, #8
 800e41e:	46bd      	mov	sp, r7
 800e420:	bd80      	pop	{r7, pc}

0800e422 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 800e422:	b580      	push	{r7, lr}
 800e424:	b086      	sub	sp, #24
 800e426:	af00      	add	r7, sp, #0
 800e428:	60f8      	str	r0, [r7, #12]
 800e42a:	60b9      	str	r1, [r7, #8]
 800e42c:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 800e42e:	2301      	movs	r3, #1
 800e430:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 800e432:	687a      	ldr	r2, [r7, #4]
 800e434:	68b9      	ldr	r1, [r7, #8]
 800e436:	68f8      	ldr	r0, [r7, #12]
 800e438:	f000 facf 	bl	800e9da <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_>
 800e43c:	4603      	mov	r3, r0
    }
 800e43e:	4618      	mov	r0, r3
 800e440:	3718      	adds	r7, #24
 800e442:	46bd      	mov	sp, r7
 800e444:	bd80      	pop	{r7, pc}

0800e446 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_>:
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 800e446:	b580      	push	{r7, lr}
 800e448:	b082      	sub	sp, #8
 800e44a:	af00      	add	r7, sp, #0
 800e44c:	6078      	str	r0, [r7, #4]
 800e44e:	6039      	str	r1, [r7, #0]
	  for (; __first != __last; ++__first)
 800e450:	687a      	ldr	r2, [r7, #4]
 800e452:	683b      	ldr	r3, [r7, #0]
 800e454:	429a      	cmp	r2, r3
 800e456:	d00a      	beq.n	800e46e <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_+0x28>
	    std::_Destroy(std::__addressof(*__first));
 800e458:	6878      	ldr	r0, [r7, #4]
 800e45a:	f000 faed 	bl	800ea38 <_ZSt11__addressofI6SymbolEPT_RS1_>
 800e45e:	4603      	mov	r3, r0
 800e460:	4618      	mov	r0, r3
 800e462:	f000 faf4 	bl	800ea4e <_ZSt8_DestroyI6SymbolEvPT_>
	  for (; __first != __last; ++__first)
 800e466:	687b      	ldr	r3, [r7, #4]
 800e468:	3320      	adds	r3, #32
 800e46a:	607b      	str	r3, [r7, #4]
 800e46c:	e7f0      	b.n	800e450 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_+0xa>
	}
 800e46e:	bf00      	nop
 800e470:	3708      	adds	r7, #8
 800e472:	46bd      	mov	sp, r7
 800e474:	bd80      	pop	{r7, pc}

0800e476 <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 800e476:	b580      	push	{r7, lr}
 800e478:	b082      	sub	sp, #8
 800e47a:	af00      	add	r7, sp, #0
 800e47c:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 800e47e:	1d3b      	adds	r3, r7, #4
 800e480:	4618      	mov	r0, r3
 800e482:	f000 faef 	bl	800ea64 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 800e486:	4603      	mov	r3, r0
 800e488:	681b      	ldr	r3, [r3, #0]
 800e48a:	4618      	mov	r0, r3
 800e48c:	3708      	adds	r7, #8
 800e48e:	46bd      	mov	sp, r7
 800e490:	bd80      	pop	{r7, pc}

0800e492 <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 800e492:	b580      	push	{r7, lr}
 800e494:	b082      	sub	sp, #8
 800e496:	af00      	add	r7, sp, #0
 800e498:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 800e49a:	1d3b      	adds	r3, r7, #4
 800e49c:	4618      	mov	r0, r3
 800e49e:	f000 faec 	bl	800ea7a <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 800e4a2:	4603      	mov	r3, r0
 800e4a4:	681b      	ldr	r3, [r3, #0]
 800e4a6:	4618      	mov	r0, r3
 800e4a8:	3708      	adds	r7, #8
 800e4aa:	46bd      	mov	sp, r7
 800e4ac:	bd80      	pop	{r7, pc}

0800e4ae <_ZSt13__copy_move_aILb0EPK6SymbolPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 800e4ae:	b580      	push	{r7, lr}
 800e4b0:	b086      	sub	sp, #24
 800e4b2:	af00      	add	r7, sp, #0
 800e4b4:	60f8      	str	r0, [r7, #12]
 800e4b6:	60b9      	str	r1, [r7, #8]
 800e4b8:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 800e4ba:	2300      	movs	r3, #0
 800e4bc:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 800e4be:	687a      	ldr	r2, [r7, #4]
 800e4c0:	68b9      	ldr	r1, [r7, #8]
 800e4c2:	68f8      	ldr	r0, [r7, #12]
 800e4c4:	f000 fae4 	bl	800ea90 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_>
 800e4c8:	4603      	mov	r3, r0
    }
 800e4ca:	4618      	mov	r0, r3
 800e4cc:	3718      	adds	r7, #24
 800e4ce:	46bd      	mov	sp, r7
 800e4d0:	bd80      	pop	{r7, pc}

0800e4d2 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_>:
    __niter_wrap(_From __from, _To __res)
 800e4d2:	b580      	push	{r7, lr}
 800e4d4:	b082      	sub	sp, #8
 800e4d6:	af00      	add	r7, sp, #0
 800e4d8:	6078      	str	r0, [r7, #4]
 800e4da:	6039      	str	r1, [r7, #0]
    { return __from + (__res - std::__niter_base(__from)); }
 800e4dc:	6878      	ldr	r0, [r7, #4]
 800e4de:	f7ff ffd8 	bl	800e492 <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 800e4e2:	4602      	mov	r2, r0
 800e4e4:	683b      	ldr	r3, [r7, #0]
 800e4e6:	1a9b      	subs	r3, r3, r2
 800e4e8:	115b      	asrs	r3, r3, #5
 800e4ea:	461a      	mov	r2, r3
 800e4ec:	1d3b      	adds	r3, r7, #4
 800e4ee:	4611      	mov	r1, r2
 800e4f0:	4618      	mov	r0, r3
 800e4f2:	f000 faee 	bl	800ead2 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEplEi>
 800e4f6:	4603      	mov	r3, r0
 800e4f8:	4618      	mov	r0, r3
 800e4fa:	3708      	adds	r7, #8
 800e4fc:	46bd      	mov	sp, r7
 800e4fe:	bd80      	pop	{r7, pc}

0800e500 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_>:
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 800e500:	b580      	push	{r7, lr}
 800e502:	b082      	sub	sp, #8
 800e504:	af00      	add	r7, sp, #0
 800e506:	6078      	str	r0, [r7, #4]
 800e508:	6039      	str	r1, [r7, #0]
	  for (; __first != __last; ++__first)
 800e50a:	463a      	mov	r2, r7
 800e50c:	1d3b      	adds	r3, r7, #4
 800e50e:	4611      	mov	r1, r2
 800e510:	4618      	mov	r0, r3
 800e512:	f000 faf6 	bl	800eb02 <_ZN9__gnu_cxxneIP6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
 800e516:	4603      	mov	r3, r0
 800e518:	2b00      	cmp	r3, #0
 800e51a:	d010      	beq.n	800e53e <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_+0x3e>
	    std::_Destroy(std::__addressof(*__first));
 800e51c:	1d3b      	adds	r3, r7, #4
 800e51e:	4618      	mov	r0, r3
 800e520:	f000 fb18 	bl	800eb54 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEdeEv>
 800e524:	4603      	mov	r3, r0
 800e526:	4618      	mov	r0, r3
 800e528:	f000 fa86 	bl	800ea38 <_ZSt11__addressofI6SymbolEPT_RS1_>
 800e52c:	4603      	mov	r3, r0
 800e52e:	4618      	mov	r0, r3
 800e530:	f000 fa8d 	bl	800ea4e <_ZSt8_DestroyI6SymbolEvPT_>
	  for (; __first != __last; ++__first)
 800e534:	1d3b      	adds	r3, r7, #4
 800e536:	4618      	mov	r0, r3
 800e538:	f000 fafb 	bl	800eb32 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEppEv>
 800e53c:	e7e5      	b.n	800e50a <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_+0xa>
	}
 800e53e:	bf00      	nop
 800e540:	3708      	adds	r7, #8
 800e542:	46bd      	mov	sp, r7
 800e544:	bd80      	pop	{r7, pc}

0800e546 <_ZSt12__niter_baseIP6SymbolET_S2_>:
    __niter_base(_Iterator __it)
 800e546:	b480      	push	{r7}
 800e548:	b083      	sub	sp, #12
 800e54a:	af00      	add	r7, sp, #0
 800e54c:	6078      	str	r0, [r7, #4]
    { return __it; }
 800e54e:	687b      	ldr	r3, [r7, #4]
 800e550:	4618      	mov	r0, r3
 800e552:	370c      	adds	r7, #12
 800e554:	46bd      	mov	sp, r7
 800e556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e55a:	4770      	bx	lr

0800e55c <_ZSt13__copy_move_aILb0EP6SymbolS1_ET1_T0_S3_S2_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 800e55c:	b580      	push	{r7, lr}
 800e55e:	b086      	sub	sp, #24
 800e560:	af00      	add	r7, sp, #0
 800e562:	60f8      	str	r0, [r7, #12]
 800e564:	60b9      	str	r1, [r7, #8]
 800e566:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 800e568:	2300      	movs	r3, #0
 800e56a:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 800e56c:	687a      	ldr	r2, [r7, #4]
 800e56e:	68b9      	ldr	r1, [r7, #8]
 800e570:	68f8      	ldr	r0, [r7, #12]
 800e572:	f000 fafb 	bl	800eb6c <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_>
 800e576:	4603      	mov	r3, r0
    }
 800e578:	4618      	mov	r0, r3
 800e57a:	3718      	adds	r7, #24
 800e57c:	46bd      	mov	sp, r7
 800e57e:	bd80      	pop	{r7, pc}

0800e580 <_ZSt12__niter_wrapIP6SymbolET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 800e580:	b480      	push	{r7}
 800e582:	b083      	sub	sp, #12
 800e584:	af00      	add	r7, sp, #0
 800e586:	6078      	str	r0, [r7, #4]
 800e588:	6039      	str	r1, [r7, #0]
    { return __res; }
 800e58a:	683b      	ldr	r3, [r7, #0]
 800e58c:	4618      	mov	r0, r3
 800e58e:	370c      	adds	r7, #12
 800e590:	46bd      	mov	sp, r7
 800e592:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e596:	4770      	bx	lr

0800e598 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 800e598:	b580      	push	{r7, lr}
 800e59a:	b086      	sub	sp, #24
 800e59c:	af00      	add	r7, sp, #0
 800e59e:	60f8      	str	r0, [r7, #12]
 800e5a0:	60b9      	str	r1, [r7, #8]
 800e5a2:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 800e5a4:	687b      	ldr	r3, [r7, #4]
 800e5a6:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 800e5a8:	68fa      	ldr	r2, [r7, #12]
 800e5aa:	68bb      	ldr	r3, [r7, #8]
 800e5ac:	429a      	cmp	r2, r3
 800e5ae:	d00e      	beq.n	800e5ce <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_+0x36>
		std::_Construct(std::__addressof(*__cur), *__first);
 800e5b0:	6978      	ldr	r0, [r7, #20]
 800e5b2:	f000 fa41 	bl	800ea38 <_ZSt11__addressofI6SymbolEPT_RS1_>
 800e5b6:	4603      	mov	r3, r0
 800e5b8:	68f9      	ldr	r1, [r7, #12]
 800e5ba:	4618      	mov	r0, r3
 800e5bc:	f000 faf7 	bl	800ebae <_ZSt10_ConstructI6SymbolJRS0_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 800e5c0:	68fb      	ldr	r3, [r7, #12]
 800e5c2:	3320      	adds	r3, #32
 800e5c4:	60fb      	str	r3, [r7, #12]
 800e5c6:	697b      	ldr	r3, [r7, #20]
 800e5c8:	3320      	adds	r3, #32
 800e5ca:	617b      	str	r3, [r7, #20]
 800e5cc:	e7ec      	b.n	800e5a8 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_+0x10>
	      return __cur;
 800e5ce:	697b      	ldr	r3, [r7, #20]
	}
 800e5d0:	4618      	mov	r0, r3
 800e5d2:	3718      	adds	r7, #24
 800e5d4:	46bd      	mov	sp, r7
 800e5d6:	bd80      	pop	{r7, pc}

0800e5d8 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>:
    addressof(_Tp& __r) noexcept
 800e5d8:	b580      	push	{r7, lr}
 800e5da:	b082      	sub	sp, #8
 800e5dc:	af00      	add	r7, sp, #0
 800e5de:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800e5e0:	6878      	ldr	r0, [r7, #4]
 800e5e2:	f000 fafb 	bl	800ebdc <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>
 800e5e6:	4603      	mov	r3, r0
 800e5e8:	4618      	mov	r0, r3
 800e5ea:	3708      	adds	r7, #8
 800e5ec:	46bd      	mov	sp, r7
 800e5ee:	bd80      	pop	{r7, pc}

0800e5f0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS7_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 800e5f0:	b480      	push	{r7}
 800e5f2:	b083      	sub	sp, #12
 800e5f4:	af00      	add	r7, sp, #0
 800e5f6:	6078      	str	r0, [r7, #4]
 800e5f8:	6039      	str	r1, [r7, #0]
 800e5fa:	687b      	ldr	r3, [r7, #4]
 800e5fc:	4618      	mov	r0, r3
 800e5fe:	370c      	adds	r7, #12
 800e600:	46bd      	mov	sp, r7
 800e602:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e606:	4770      	bx	lr

0800e608 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1ERKS6_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 800e608:	b580      	push	{r7, lr}
 800e60a:	b082      	sub	sp, #8
 800e60c:	af00      	add	r7, sp, #0
 800e60e:	6078      	str	r0, [r7, #4]
 800e610:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 800e612:	6839      	ldr	r1, [r7, #0]
 800e614:	6878      	ldr	r0, [r7, #4]
 800e616:	f7ff fc75 	bl	800df04 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>
 800e61a:	687b      	ldr	r3, [r7, #4]
 800e61c:	4618      	mov	r0, r3
 800e61e:	f7ff fc99 	bl	800df54 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1Ev>
	{ }
 800e622:	687b      	ldr	r3, [r7, #4]
 800e624:	4618      	mov	r0, r3
 800e626:	3708      	adds	r7, #8
 800e628:	46bd      	mov	sp, r7
 800e62a:	bd80      	pop	{r7, pc}

0800e62c <_ZSt4moveIRSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
 800e62c:	b480      	push	{r7}
 800e62e:	b083      	sub	sp, #12
 800e630:	af00      	add	r7, sp, #0
 800e632:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800e634:	687b      	ldr	r3, [r7, #4]
 800e636:	4618      	mov	r0, r3
 800e638:	370c      	adds	r7, #12
 800e63a:	46bd      	mov	sp, r7
 800e63c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e640:	4770      	bx	lr

0800e642 <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1ERKS2_>:
 800e642:	b480      	push	{r7}
 800e644:	b083      	sub	sp, #12
 800e646:	af00      	add	r7, sp, #0
 800e648:	6078      	str	r0, [r7, #4]
 800e64a:	6039      	str	r1, [r7, #0]
 800e64c:	687b      	ldr	r3, [r7, #4]
 800e64e:	4618      	mov	r0, r3
 800e650:	370c      	adds	r7, #12
 800e652:	46bd      	mov	sp, r7
 800e654:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e658:	4770      	bx	lr

0800e65a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 800e65a:	b580      	push	{r7, lr}
 800e65c:	b082      	sub	sp, #8
 800e65e:	af00      	add	r7, sp, #0
 800e660:	6078      	str	r0, [r7, #4]
 800e662:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 800e664:	6839      	ldr	r1, [r7, #0]
 800e666:	6878      	ldr	r0, [r7, #4]
 800e668:	f7ff fcda 	bl	800e020 <_ZNSaI6SymbolEC1ERKS0_>
 800e66c:	687b      	ldr	r3, [r7, #4]
 800e66e:	4618      	mov	r0, r3
 800e670:	f7ff fcfe 	bl	800e070 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 800e674:	687b      	ldr	r3, [r7, #4]
 800e676:	4618      	mov	r0, r3
 800e678:	3708      	adds	r7, #8
 800e67a:	46bd      	mov	sp, r7
 800e67c:	bd80      	pop	{r7, pc}

0800e67e <_ZSt4moveIRSaI6SymbolEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 800e67e:	b480      	push	{r7}
 800e680:	b083      	sub	sp, #12
 800e682:	af00      	add	r7, sp, #0
 800e684:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800e686:	687b      	ldr	r3, [r7, #4]
 800e688:	4618      	mov	r0, r3
 800e68a:	370c      	adds	r7, #12
 800e68c:	46bd      	mov	sp, r7
 800e68e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e692:	4770      	bx	lr

0800e694 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE37select_on_container_copy_constructionERKS6_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 800e694:	b580      	push	{r7, lr}
 800e696:	b082      	sub	sp, #8
 800e698:	af00      	add	r7, sp, #0
 800e69a:	6078      	str	r0, [r7, #4]
 800e69c:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 800e69e:	6839      	ldr	r1, [r7, #0]
 800e6a0:	6878      	ldr	r0, [r7, #4]
 800e6a2:	f7ff fc2f 	bl	800df04 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>
 800e6a6:	6878      	ldr	r0, [r7, #4]
 800e6a8:	3708      	adds	r7, #8
 800e6aa:	46bd      	mov	sp, r7
 800e6ac:	bd80      	pop	{r7, pc}

0800e6ae <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 800e6ae:	b580      	push	{r7, lr}
 800e6b0:	b082      	sub	sp, #8
 800e6b2:	af00      	add	r7, sp, #0
 800e6b4:	6078      	str	r0, [r7, #4]
 800e6b6:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 800e6b8:	6839      	ldr	r1, [r7, #0]
 800e6ba:	6878      	ldr	r0, [r7, #4]
 800e6bc:	f7ff f90f 	bl	800d8de <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEj>
 800e6c0:	4602      	mov	r2, r0
 800e6c2:	687b      	ldr	r3, [r7, #4]
 800e6c4:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 800e6c6:	687b      	ldr	r3, [r7, #4]
 800e6c8:	681a      	ldr	r2, [r3, #0]
 800e6ca:	687b      	ldr	r3, [r7, #4]
 800e6cc:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 800e6ce:	687b      	ldr	r3, [r7, #4]
 800e6d0:	6819      	ldr	r1, [r3, #0]
 800e6d2:	683a      	ldr	r2, [r7, #0]
 800e6d4:	4613      	mov	r3, r2
 800e6d6:	005b      	lsls	r3, r3, #1
 800e6d8:	4413      	add	r3, r2
 800e6da:	00db      	lsls	r3, r3, #3
 800e6dc:	18ca      	adds	r2, r1, r3
 800e6de:	687b      	ldr	r3, [r7, #4]
 800e6e0:	609a      	str	r2, [r3, #8]
      }
 800e6e2:	bf00      	nop
 800e6e4:	3708      	adds	r7, #8
 800e6e6:	46bd      	mov	sp, r7
 800e6e8:	bd80      	pop	{r7, pc}

0800e6ea <_ZNSt16allocator_traitsISaI6SymbolEE37select_on_container_copy_constructionERKS1_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 800e6ea:	b580      	push	{r7, lr}
 800e6ec:	b082      	sub	sp, #8
 800e6ee:	af00      	add	r7, sp, #0
 800e6f0:	6078      	str	r0, [r7, #4]
 800e6f2:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 800e6f4:	6839      	ldr	r1, [r7, #0]
 800e6f6:	6878      	ldr	r0, [r7, #4]
 800e6f8:	f7ff fc92 	bl	800e020 <_ZNSaI6SymbolEC1ERKS0_>
 800e6fc:	6878      	ldr	r0, [r7, #4]
 800e6fe:	3708      	adds	r7, #8
 800e700:	46bd      	mov	sp, r7
 800e702:	bd80      	pop	{r7, pc}

0800e704 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 800e704:	b580      	push	{r7, lr}
 800e706:	b082      	sub	sp, #8
 800e708:	af00      	add	r7, sp, #0
 800e70a:	6078      	str	r0, [r7, #4]
 800e70c:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 800e70e:	6839      	ldr	r1, [r7, #0]
 800e710:	6878      	ldr	r0, [r7, #4]
 800e712:	f7ff fa89 	bl	800dc28 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 800e716:	4602      	mov	r2, r0
 800e718:	687b      	ldr	r3, [r7, #4]
 800e71a:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 800e71c:	687b      	ldr	r3, [r7, #4]
 800e71e:	681a      	ldr	r2, [r3, #0]
 800e720:	687b      	ldr	r3, [r7, #4]
 800e722:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 800e724:	687b      	ldr	r3, [r7, #4]
 800e726:	681a      	ldr	r2, [r3, #0]
 800e728:	683b      	ldr	r3, [r7, #0]
 800e72a:	015b      	lsls	r3, r3, #5
 800e72c:	441a      	add	r2, r3
 800e72e:	687b      	ldr	r3, [r7, #4]
 800e730:	609a      	str	r2, [r3, #8]
      }
 800e732:	bf00      	nop
 800e734:	3708      	adds	r7, #8
 800e736:	46bd      	mov	sp, r7
 800e738:	bd80      	pop	{r7, pc}

0800e73a <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800e73a:	b480      	push	{r7}
 800e73c:	b083      	sub	sp, #12
 800e73e:	af00      	add	r7, sp, #0
 800e740:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800e742:	687b      	ldr	r3, [r7, #4]
 800e744:	4618      	mov	r0, r3
 800e746:	370c      	adds	r7, #12
 800e748:	46bd      	mov	sp, r7
 800e74a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e74e:	4770      	bx	lr

0800e750 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 800e750:	b580      	push	{r7, lr}
 800e752:	b084      	sub	sp, #16
 800e754:	af00      	add	r7, sp, #0
 800e756:	60f8      	str	r0, [r7, #12]
 800e758:	60b9      	str	r1, [r7, #8]
 800e75a:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800e75c:	68f8      	ldr	r0, [r7, #12]
 800e75e:	f000 fa49 	bl	800ebf4 <_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv>
 800e762:	4602      	mov	r2, r0
 800e764:	68bb      	ldr	r3, [r7, #8]
 800e766:	4293      	cmp	r3, r2
 800e768:	bf8c      	ite	hi
 800e76a:	2301      	movhi	r3, #1
 800e76c:	2300      	movls	r3, #0
 800e76e:	b2db      	uxtb	r3, r3
 800e770:	2b00      	cmp	r3, #0
 800e772:	d001      	beq.n	800e778 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 800e774:	f014 fb2d 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 800e778:	68ba      	ldr	r2, [r7, #8]
 800e77a:	4613      	mov	r3, r2
 800e77c:	005b      	lsls	r3, r3, #1
 800e77e:	4413      	add	r3, r2
 800e780:	00db      	lsls	r3, r3, #3
 800e782:	4618      	mov	r0, r3
 800e784:	f014 fa60 	bl	8022c48 <_Znwj>
 800e788:	4603      	mov	r3, r0
 800e78a:	bf00      	nop
      }
 800e78c:	4618      	mov	r0, r3
 800e78e:	3710      	adds	r7, #16
 800e790:	46bd      	mov	sp, r7
 800e792:	bd80      	pop	{r7, pc}

0800e794 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 800e794:	b590      	push	{r4, r7, lr}
 800e796:	b087      	sub	sp, #28
 800e798:	af00      	add	r7, sp, #0
 800e79a:	60f8      	str	r0, [r7, #12]
 800e79c:	60b9      	str	r1, [r7, #8]
 800e79e:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 800e7a0:	687b      	ldr	r3, [r7, #4]
 800e7a2:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 800e7a4:	f107 0208 	add.w	r2, r7, #8
 800e7a8:	f107 030c 	add.w	r3, r7, #12
 800e7ac:	4611      	mov	r1, r2
 800e7ae:	4618      	mov	r0, r3
 800e7b0:	f000 fa2e 	bl	800ec10 <_ZN9__gnu_cxxneIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESH_>
 800e7b4:	4603      	mov	r3, r0
 800e7b6:	2b00      	cmp	r3, #0
 800e7b8:	d016      	beq.n	800e7e8 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_+0x54>
		std::_Construct(std::__addressof(*__cur), *__first);
 800e7ba:	6978      	ldr	r0, [r7, #20]
 800e7bc:	f7f7 fdcb 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800e7c0:	4604      	mov	r4, r0
 800e7c2:	f107 030c 	add.w	r3, r7, #12
 800e7c6:	4618      	mov	r0, r3
 800e7c8:	f000 fa4b 	bl	800ec62 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>
 800e7cc:	4603      	mov	r3, r0
 800e7ce:	4619      	mov	r1, r3
 800e7d0:	4620      	mov	r0, r4
 800e7d2:	f000 fa52 	bl	800ec7a <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 800e7d6:	f107 030c 	add.w	r3, r7, #12
 800e7da:	4618      	mov	r0, r3
 800e7dc:	f000 fa30 	bl	800ec40 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>
 800e7e0:	697b      	ldr	r3, [r7, #20]
 800e7e2:	3318      	adds	r3, #24
 800e7e4:	617b      	str	r3, [r7, #20]
 800e7e6:	e7dd      	b.n	800e7a4 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_+0x10>
	      return __cur;
 800e7e8:	697b      	ldr	r3, [r7, #20]
	}
 800e7ea:	4618      	mov	r0, r3
 800e7ec:	371c      	adds	r7, #28
 800e7ee:	46bd      	mov	sp, r7
 800e7f0:	bd90      	pop	{r4, r7, pc}

0800e7f2 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800e7f2:	b480      	push	{r7}
 800e7f4:	b083      	sub	sp, #12
 800e7f6:	af00      	add	r7, sp, #0
 800e7f8:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800e7fa:	687b      	ldr	r3, [r7, #4]
 800e7fc:	4618      	mov	r0, r3
 800e7fe:	370c      	adds	r7, #12
 800e800:	46bd      	mov	sp, r7
 800e802:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e806:	4770      	bx	lr

0800e808 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800e808:	b480      	push	{r7}
 800e80a:	b083      	sub	sp, #12
 800e80c:	af00      	add	r7, sp, #0
 800e80e:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800e810:	687b      	ldr	r3, [r7, #4]
 800e812:	4618      	mov	r0, r3
 800e814:	370c      	adds	r7, #12
 800e816:	46bd      	mov	sp, r7
 800e818:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e81c:	4770      	bx	lr
	...

0800e820 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS8_EET0_T_SD_SC_>:
	__copy_m(_II __first, _II __last, _OI __result)
 800e820:	b580      	push	{r7, lr}
 800e822:	b086      	sub	sp, #24
 800e824:	af00      	add	r7, sp, #0
 800e826:	60f8      	str	r0, [r7, #12]
 800e828:	60b9      	str	r1, [r7, #8]
 800e82a:	607a      	str	r2, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 800e82c:	68ba      	ldr	r2, [r7, #8]
 800e82e:	68fb      	ldr	r3, [r7, #12]
 800e830:	1ad3      	subs	r3, r2, r3
 800e832:	10db      	asrs	r3, r3, #3
 800e834:	4a0c      	ldr	r2, [pc, #48]	; (800e868 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS8_EET0_T_SD_SC_+0x48>)
 800e836:	fb02 f303 	mul.w	r3, r2, r3
 800e83a:	617b      	str	r3, [r7, #20]
 800e83c:	697b      	ldr	r3, [r7, #20]
 800e83e:	2b00      	cmp	r3, #0
 800e840:	dd0d      	ble.n	800e85e <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS8_EET0_T_SD_SC_+0x3e>
	      *__result = *__first;
 800e842:	68f9      	ldr	r1, [r7, #12]
 800e844:	6878      	ldr	r0, [r7, #4]
 800e846:	f014 fbdc 	bl	8023002 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	      ++__first;
 800e84a:	68fb      	ldr	r3, [r7, #12]
 800e84c:	3318      	adds	r3, #24
 800e84e:	60fb      	str	r3, [r7, #12]
	      ++__result;
 800e850:	687b      	ldr	r3, [r7, #4]
 800e852:	3318      	adds	r3, #24
 800e854:	607b      	str	r3, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 800e856:	697b      	ldr	r3, [r7, #20]
 800e858:	3b01      	subs	r3, #1
 800e85a:	617b      	str	r3, [r7, #20]
 800e85c:	e7ee      	b.n	800e83c <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS8_EET0_T_SD_SC_+0x1c>
	  return __result;
 800e85e:	687b      	ldr	r3, [r7, #4]
	}
 800e860:	4618      	mov	r0, r3
 800e862:	3718      	adds	r7, #24
 800e864:	46bd      	mov	sp, r7
 800e866:	bd80      	pop	{r7, pc}
 800e868:	aaaaaaab 	.word	0xaaaaaaab

0800e86c <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEplEi>:
      operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 800e86c:	b580      	push	{r7, lr}
 800e86e:	b084      	sub	sp, #16
 800e870:	af00      	add	r7, sp, #0
 800e872:	6078      	str	r0, [r7, #4]
 800e874:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current + __n); }
 800e876:	687b      	ldr	r3, [r7, #4]
 800e878:	6819      	ldr	r1, [r3, #0]
 800e87a:	683a      	ldr	r2, [r7, #0]
 800e87c:	4613      	mov	r3, r2
 800e87e:	005b      	lsls	r3, r3, #1
 800e880:	4413      	add	r3, r2
 800e882:	00db      	lsls	r3, r3, #3
 800e884:	440b      	add	r3, r1
 800e886:	60fb      	str	r3, [r7, #12]
 800e888:	f107 020c 	add.w	r2, r7, #12
 800e88c:	f107 0308 	add.w	r3, r7, #8
 800e890:	4611      	mov	r1, r2
 800e892:	4618      	mov	r0, r3
 800e894:	f7ff f855 	bl	800d942 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC1ERKS7_>
 800e898:	68bb      	ldr	r3, [r7, #8]
 800e89a:	4618      	mov	r0, r3
 800e89c:	3710      	adds	r7, #16
 800e89e:	46bd      	mov	sp, r7
 800e8a0:	bd80      	pop	{r7, pc}

0800e8a2 <_ZN9__gnu_cxxneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800e8a2:	b590      	push	{r4, r7, lr}
 800e8a4:	b083      	sub	sp, #12
 800e8a6:	af00      	add	r7, sp, #0
 800e8a8:	6078      	str	r0, [r7, #4]
 800e8aa:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800e8ac:	6878      	ldr	r0, [r7, #4]
 800e8ae:	f7ff ffab 	bl	800e808 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
 800e8b2:	4603      	mov	r3, r0
 800e8b4:	681c      	ldr	r4, [r3, #0]
 800e8b6:	6838      	ldr	r0, [r7, #0]
 800e8b8:	f7ff ffa6 	bl	800e808 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
 800e8bc:	4603      	mov	r3, r0
 800e8be:	681b      	ldr	r3, [r3, #0]
 800e8c0:	429c      	cmp	r4, r3
 800e8c2:	bf14      	ite	ne
 800e8c4:	2301      	movne	r3, #1
 800e8c6:	2300      	moveq	r3, #0
 800e8c8:	b2db      	uxtb	r3, r3
 800e8ca:	4618      	mov	r0, r3
 800e8cc:	370c      	adds	r7, #12
 800e8ce:	46bd      	mov	sp, r7
 800e8d0:	bd90      	pop	{r4, r7, pc}

0800e8d2 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800e8d2:	b480      	push	{r7}
 800e8d4:	b083      	sub	sp, #12
 800e8d6:	af00      	add	r7, sp, #0
 800e8d8:	6078      	str	r0, [r7, #4]
	++_M_current;
 800e8da:	687b      	ldr	r3, [r7, #4]
 800e8dc:	681b      	ldr	r3, [r3, #0]
 800e8de:	f103 0218 	add.w	r2, r3, #24
 800e8e2:	687b      	ldr	r3, [r7, #4]
 800e8e4:	601a      	str	r2, [r3, #0]
	return *this;
 800e8e6:	687b      	ldr	r3, [r7, #4]
      }
 800e8e8:	4618      	mov	r0, r3
 800e8ea:	370c      	adds	r7, #12
 800e8ec:	46bd      	mov	sp, r7
 800e8ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8f2:	4770      	bx	lr

0800e8f4 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800e8f4:	b480      	push	{r7}
 800e8f6:	b083      	sub	sp, #12
 800e8f8:	af00      	add	r7, sp, #0
 800e8fa:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800e8fc:	687b      	ldr	r3, [r7, #4]
 800e8fe:	681b      	ldr	r3, [r3, #0]
 800e900:	4618      	mov	r0, r3
 800e902:	370c      	adds	r7, #12
 800e904:	46bd      	mov	sp, r7
 800e906:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e90a:	4770      	bx	lr

0800e90c <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_EET0_T_SB_SA_>:
	__copy_m(_II __first, _II __last, _OI __result)
 800e90c:	b580      	push	{r7, lr}
 800e90e:	b086      	sub	sp, #24
 800e910:	af00      	add	r7, sp, #0
 800e912:	60f8      	str	r0, [r7, #12]
 800e914:	60b9      	str	r1, [r7, #8]
 800e916:	607a      	str	r2, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 800e918:	68ba      	ldr	r2, [r7, #8]
 800e91a:	68fb      	ldr	r3, [r7, #12]
 800e91c:	1ad3      	subs	r3, r2, r3
 800e91e:	10db      	asrs	r3, r3, #3
 800e920:	4a0c      	ldr	r2, [pc, #48]	; (800e954 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_EET0_T_SB_SA_+0x48>)
 800e922:	fb02 f303 	mul.w	r3, r2, r3
 800e926:	617b      	str	r3, [r7, #20]
 800e928:	697b      	ldr	r3, [r7, #20]
 800e92a:	2b00      	cmp	r3, #0
 800e92c:	dd0d      	ble.n	800e94a <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_EET0_T_SB_SA_+0x3e>
	      *__result = *__first;
 800e92e:	68f9      	ldr	r1, [r7, #12]
 800e930:	6878      	ldr	r0, [r7, #4]
 800e932:	f014 fb66 	bl	8023002 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	      ++__first;
 800e936:	68fb      	ldr	r3, [r7, #12]
 800e938:	3318      	adds	r3, #24
 800e93a:	60fb      	str	r3, [r7, #12]
	      ++__result;
 800e93c:	687b      	ldr	r3, [r7, #4]
 800e93e:	3318      	adds	r3, #24
 800e940:	607b      	str	r3, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 800e942:	697b      	ldr	r3, [r7, #20]
 800e944:	3b01      	subs	r3, #1
 800e946:	617b      	str	r3, [r7, #20]
 800e948:	e7ee      	b.n	800e928 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_EET0_T_SB_SA_+0x1c>
	  return __result;
 800e94a:	687b      	ldr	r3, [r7, #4]
	}
 800e94c:	4618      	mov	r0, r3
 800e94e:	3718      	adds	r7, #24
 800e950:	46bd      	mov	sp, r7
 800e952:	bd80      	pop	{r7, pc}
 800e954:	aaaaaaab 	.word	0xaaaaaaab

0800e958 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRS5_EEvPT_DpOT0_>:
    _Construct(_T1* __p, _Args&&... __args)
 800e958:	b590      	push	{r4, r7, lr}
 800e95a:	b083      	sub	sp, #12
 800e95c:	af00      	add	r7, sp, #0
 800e95e:	6078      	str	r0, [r7, #4]
 800e960:	6039      	str	r1, [r7, #0]
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 800e962:	6838      	ldr	r0, [r7, #0]
 800e964:	f7f7 fb99 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800e968:	4604      	mov	r4, r0
 800e96a:	687b      	ldr	r3, [r7, #4]
 800e96c:	4619      	mov	r1, r3
 800e96e:	2018      	movs	r0, #24
 800e970:	f7f2 fb73 	bl	800105a <_ZnwjPv>
 800e974:	4603      	mov	r3, r0
 800e976:	4621      	mov	r1, r4
 800e978:	4618      	mov	r0, r3
 800e97a:	f014 fc6d 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800e97e:	bf00      	nop
 800e980:	370c      	adds	r7, #12
 800e982:	46bd      	mov	sp, r7
 800e984:	bd90      	pop	{r4, r7, pc}

0800e986 <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEEEEPT_RSC_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800e986:	b480      	push	{r7}
 800e988:	b083      	sub	sp, #12
 800e98a:	af00      	add	r7, sp, #0
 800e98c:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800e98e:	687b      	ldr	r3, [r7, #4]
 800e990:	4618      	mov	r0, r3
 800e992:	370c      	adds	r7, #12
 800e994:	46bd      	mov	sp, r7
 800e996:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e99a:	4770      	bx	lr

0800e99c <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 800e99c:	b580      	push	{r7, lr}
 800e99e:	b084      	sub	sp, #16
 800e9a0:	af00      	add	r7, sp, #0
 800e9a2:	60f8      	str	r0, [r7, #12]
 800e9a4:	60b9      	str	r1, [r7, #8]
 800e9a6:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800e9a8:	68f8      	ldr	r0, [r7, #12]
 800e9aa:	f000 f97d 	bl	800eca8 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>
 800e9ae:	4602      	mov	r2, r0
 800e9b0:	68bb      	ldr	r3, [r7, #8]
 800e9b2:	4293      	cmp	r3, r2
 800e9b4:	bf8c      	ite	hi
 800e9b6:	2301      	movhi	r3, #1
 800e9b8:	2300      	movls	r3, #0
 800e9ba:	b2db      	uxtb	r3, r3
 800e9bc:	2b00      	cmp	r3, #0
 800e9be:	d001      	beq.n	800e9c4 <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 800e9c0:	f014 fa07 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 800e9c4:	68bb      	ldr	r3, [r7, #8]
 800e9c6:	015b      	lsls	r3, r3, #5
 800e9c8:	4618      	mov	r0, r3
 800e9ca:	f014 f93d 	bl	8022c48 <_Znwj>
 800e9ce:	4603      	mov	r3, r0
 800e9d0:	bf00      	nop
      }
 800e9d2:	4618      	mov	r0, r3
 800e9d4:	3710      	adds	r7, #16
 800e9d6:	46bd      	mov	sp, r7
 800e9d8:	bd80      	pop	{r7, pc}

0800e9da <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 800e9da:	b590      	push	{r4, r7, lr}
 800e9dc:	b087      	sub	sp, #28
 800e9de:	af00      	add	r7, sp, #0
 800e9e0:	60f8      	str	r0, [r7, #12]
 800e9e2:	60b9      	str	r1, [r7, #8]
 800e9e4:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 800e9e6:	687b      	ldr	r3, [r7, #4]
 800e9e8:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 800e9ea:	f107 0208 	add.w	r2, r7, #8
 800e9ee:	f107 030c 	add.w	r3, r7, #12
 800e9f2:	4611      	mov	r1, r2
 800e9f4:	4618      	mov	r0, r3
 800e9f6:	f000 f963 	bl	800ecc0 <_ZN9__gnu_cxxneIPK6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800e9fa:	4603      	mov	r3, r0
 800e9fc:	2b00      	cmp	r3, #0
 800e9fe:	d016      	beq.n	800ea2e <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_+0x54>
		std::_Construct(std::__addressof(*__cur), *__first);
 800ea00:	6978      	ldr	r0, [r7, #20]
 800ea02:	f000 f819 	bl	800ea38 <_ZSt11__addressofI6SymbolEPT_RS1_>
 800ea06:	4604      	mov	r4, r0
 800ea08:	f107 030c 	add.w	r3, r7, #12
 800ea0c:	4618      	mov	r0, r3
 800ea0e:	f000 f980 	bl	800ed12 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEdeEv>
 800ea12:	4603      	mov	r3, r0
 800ea14:	4619      	mov	r1, r3
 800ea16:	4620      	mov	r0, r4
 800ea18:	f000 f987 	bl	800ed2a <_ZSt10_ConstructI6SymbolJRKS0_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 800ea1c:	f107 030c 	add.w	r3, r7, #12
 800ea20:	4618      	mov	r0, r3
 800ea22:	f000 f965 	bl	800ecf0 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEppEv>
 800ea26:	697b      	ldr	r3, [r7, #20]
 800ea28:	3320      	adds	r3, #32
 800ea2a:	617b      	str	r3, [r7, #20]
 800ea2c:	e7dd      	b.n	800e9ea <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_+0x10>
	      return __cur;
 800ea2e:	697b      	ldr	r3, [r7, #20]
	}
 800ea30:	4618      	mov	r0, r3
 800ea32:	371c      	adds	r7, #28
 800ea34:	46bd      	mov	sp, r7
 800ea36:	bd90      	pop	{r4, r7, pc}

0800ea38 <_ZSt11__addressofI6SymbolEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800ea38:	b480      	push	{r7}
 800ea3a:	b083      	sub	sp, #12
 800ea3c:	af00      	add	r7, sp, #0
 800ea3e:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800ea40:	687b      	ldr	r3, [r7, #4]
 800ea42:	4618      	mov	r0, r3
 800ea44:	370c      	adds	r7, #12
 800ea46:	46bd      	mov	sp, r7
 800ea48:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea4c:	4770      	bx	lr

0800ea4e <_ZSt8_DestroyI6SymbolEvPT_>:
    _Destroy(_Tp* __pointer)
 800ea4e:	b580      	push	{r7, lr}
 800ea50:	b082      	sub	sp, #8
 800ea52:	af00      	add	r7, sp, #0
 800ea54:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800ea56:	6878      	ldr	r0, [r7, #4]
 800ea58:	f7f7 ff2e 	bl	80068b8 <_ZN6SymbolD1Ev>
 800ea5c:	bf00      	nop
 800ea5e:	3708      	adds	r7, #8
 800ea60:	46bd      	mov	sp, r7
 800ea62:	bd80      	pop	{r7, pc}

0800ea64 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800ea64:	b480      	push	{r7}
 800ea66:	b083      	sub	sp, #12
 800ea68:	af00      	add	r7, sp, #0
 800ea6a:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800ea6c:	687b      	ldr	r3, [r7, #4]
 800ea6e:	4618      	mov	r0, r3
 800ea70:	370c      	adds	r7, #12
 800ea72:	46bd      	mov	sp, r7
 800ea74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea78:	4770      	bx	lr

0800ea7a <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800ea7a:	b480      	push	{r7}
 800ea7c:	b083      	sub	sp, #12
 800ea7e:	af00      	add	r7, sp, #0
 800ea80:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800ea82:	687b      	ldr	r3, [r7, #4]
 800ea84:	4618      	mov	r0, r3
 800ea86:	370c      	adds	r7, #12
 800ea88:	46bd      	mov	sp, r7
 800ea8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea8e:	4770      	bx	lr

0800ea90 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_>:
	__copy_m(_II __first, _II __last, _OI __result)
 800ea90:	b580      	push	{r7, lr}
 800ea92:	b086      	sub	sp, #24
 800ea94:	af00      	add	r7, sp, #0
 800ea96:	60f8      	str	r0, [r7, #12]
 800ea98:	60b9      	str	r1, [r7, #8]
 800ea9a:	607a      	str	r2, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 800ea9c:	68ba      	ldr	r2, [r7, #8]
 800ea9e:	68fb      	ldr	r3, [r7, #12]
 800eaa0:	1ad3      	subs	r3, r2, r3
 800eaa2:	115b      	asrs	r3, r3, #5
 800eaa4:	617b      	str	r3, [r7, #20]
 800eaa6:	697b      	ldr	r3, [r7, #20]
 800eaa8:	2b00      	cmp	r3, #0
 800eaaa:	dd0d      	ble.n	800eac8 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_+0x38>
	      *__result = *__first;
 800eaac:	68f9      	ldr	r1, [r7, #12]
 800eaae:	6878      	ldr	r0, [r7, #4]
 800eab0:	f7f8 fcbd 	bl	800742e <_ZN6SymbolaSERKS_>
	      ++__first;
 800eab4:	68fb      	ldr	r3, [r7, #12]
 800eab6:	3320      	adds	r3, #32
 800eab8:	60fb      	str	r3, [r7, #12]
	      ++__result;
 800eaba:	687b      	ldr	r3, [r7, #4]
 800eabc:	3320      	adds	r3, #32
 800eabe:	607b      	str	r3, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 800eac0:	697b      	ldr	r3, [r7, #20]
 800eac2:	3b01      	subs	r3, #1
 800eac4:	617b      	str	r3, [r7, #20]
 800eac6:	e7ee      	b.n	800eaa6 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_+0x16>
	  return __result;
 800eac8:	687b      	ldr	r3, [r7, #4]
	}
 800eaca:	4618      	mov	r0, r3
 800eacc:	3718      	adds	r7, #24
 800eace:	46bd      	mov	sp, r7
 800ead0:	bd80      	pop	{r7, pc}

0800ead2 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEplEi>:
      operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 800ead2:	b580      	push	{r7, lr}
 800ead4:	b084      	sub	sp, #16
 800ead6:	af00      	add	r7, sp, #0
 800ead8:	6078      	str	r0, [r7, #4]
 800eada:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current + __n); }
 800eadc:	687b      	ldr	r3, [r7, #4]
 800eade:	681a      	ldr	r2, [r3, #0]
 800eae0:	683b      	ldr	r3, [r7, #0]
 800eae2:	015b      	lsls	r3, r3, #5
 800eae4:	4413      	add	r3, r2
 800eae6:	60fb      	str	r3, [r7, #12]
 800eae8:	f107 020c 	add.w	r2, r7, #12
 800eaec:	f107 0308 	add.w	r3, r7, #8
 800eaf0:	4611      	mov	r1, r2
 800eaf2:	4618      	mov	r0, r3
 800eaf4:	f7ff f8ca 	bl	800dc8c <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 800eaf8:	68bb      	ldr	r3, [r7, #8]
 800eafa:	4618      	mov	r0, r3
 800eafc:	3710      	adds	r7, #16
 800eafe:	46bd      	mov	sp, r7
 800eb00:	bd80      	pop	{r7, pc}

0800eb02 <_ZN9__gnu_cxxneIP6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800eb02:	b590      	push	{r4, r7, lr}
 800eb04:	b083      	sub	sp, #12
 800eb06:	af00      	add	r7, sp, #0
 800eb08:	6078      	str	r0, [r7, #4]
 800eb0a:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800eb0c:	6878      	ldr	r0, [r7, #4]
 800eb0e:	f7ff ffb4 	bl	800ea7a <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 800eb12:	4603      	mov	r3, r0
 800eb14:	681c      	ldr	r4, [r3, #0]
 800eb16:	6838      	ldr	r0, [r7, #0]
 800eb18:	f7ff ffaf 	bl	800ea7a <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 800eb1c:	4603      	mov	r3, r0
 800eb1e:	681b      	ldr	r3, [r3, #0]
 800eb20:	429c      	cmp	r4, r3
 800eb22:	bf14      	ite	ne
 800eb24:	2301      	movne	r3, #1
 800eb26:	2300      	moveq	r3, #0
 800eb28:	b2db      	uxtb	r3, r3
 800eb2a:	4618      	mov	r0, r3
 800eb2c:	370c      	adds	r7, #12
 800eb2e:	46bd      	mov	sp, r7
 800eb30:	bd90      	pop	{r4, r7, pc}

0800eb32 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800eb32:	b480      	push	{r7}
 800eb34:	b083      	sub	sp, #12
 800eb36:	af00      	add	r7, sp, #0
 800eb38:	6078      	str	r0, [r7, #4]
	++_M_current;
 800eb3a:	687b      	ldr	r3, [r7, #4]
 800eb3c:	681b      	ldr	r3, [r3, #0]
 800eb3e:	f103 0220 	add.w	r2, r3, #32
 800eb42:	687b      	ldr	r3, [r7, #4]
 800eb44:	601a      	str	r2, [r3, #0]
	return *this;
 800eb46:	687b      	ldr	r3, [r7, #4]
      }
 800eb48:	4618      	mov	r0, r3
 800eb4a:	370c      	adds	r7, #12
 800eb4c:	46bd      	mov	sp, r7
 800eb4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb52:	4770      	bx	lr

0800eb54 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800eb54:	b480      	push	{r7}
 800eb56:	b083      	sub	sp, #12
 800eb58:	af00      	add	r7, sp, #0
 800eb5a:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800eb5c:	687b      	ldr	r3, [r7, #4]
 800eb5e:	681b      	ldr	r3, [r3, #0]
 800eb60:	4618      	mov	r0, r3
 800eb62:	370c      	adds	r7, #12
 800eb64:	46bd      	mov	sp, r7
 800eb66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb6a:	4770      	bx	lr

0800eb6c <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_>:
	__copy_m(_II __first, _II __last, _OI __result)
 800eb6c:	b580      	push	{r7, lr}
 800eb6e:	b086      	sub	sp, #24
 800eb70:	af00      	add	r7, sp, #0
 800eb72:	60f8      	str	r0, [r7, #12]
 800eb74:	60b9      	str	r1, [r7, #8]
 800eb76:	607a      	str	r2, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 800eb78:	68ba      	ldr	r2, [r7, #8]
 800eb7a:	68fb      	ldr	r3, [r7, #12]
 800eb7c:	1ad3      	subs	r3, r2, r3
 800eb7e:	115b      	asrs	r3, r3, #5
 800eb80:	617b      	str	r3, [r7, #20]
 800eb82:	697b      	ldr	r3, [r7, #20]
 800eb84:	2b00      	cmp	r3, #0
 800eb86:	dd0d      	ble.n	800eba4 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_+0x38>
	      *__result = *__first;
 800eb88:	68f9      	ldr	r1, [r7, #12]
 800eb8a:	6878      	ldr	r0, [r7, #4]
 800eb8c:	f7f8 fc4f 	bl	800742e <_ZN6SymbolaSERKS_>
	      ++__first;
 800eb90:	68fb      	ldr	r3, [r7, #12]
 800eb92:	3320      	adds	r3, #32
 800eb94:	60fb      	str	r3, [r7, #12]
	      ++__result;
 800eb96:	687b      	ldr	r3, [r7, #4]
 800eb98:	3320      	adds	r3, #32
 800eb9a:	607b      	str	r3, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 800eb9c:	697b      	ldr	r3, [r7, #20]
 800eb9e:	3b01      	subs	r3, #1
 800eba0:	617b      	str	r3, [r7, #20]
 800eba2:	e7ee      	b.n	800eb82 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_+0x16>
	  return __result;
 800eba4:	687b      	ldr	r3, [r7, #4]
	}
 800eba6:	4618      	mov	r0, r3
 800eba8:	3718      	adds	r7, #24
 800ebaa:	46bd      	mov	sp, r7
 800ebac:	bd80      	pop	{r7, pc}

0800ebae <_ZSt10_ConstructI6SymbolJRS0_EEvPT_DpOT0_>:
    _Construct(_T1* __p, _Args&&... __args)
 800ebae:	b590      	push	{r4, r7, lr}
 800ebb0:	b083      	sub	sp, #12
 800ebb2:	af00      	add	r7, sp, #0
 800ebb4:	6078      	str	r0, [r7, #4]
 800ebb6:	6039      	str	r1, [r7, #0]
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 800ebb8:	6838      	ldr	r0, [r7, #0]
 800ebba:	f000 f8cd 	bl	800ed58 <_ZSt7forwardIR6SymbolEOT_RNSt16remove_referenceIS2_E4typeE>
 800ebbe:	4604      	mov	r4, r0
 800ebc0:	687b      	ldr	r3, [r7, #4]
 800ebc2:	4619      	mov	r1, r3
 800ebc4:	2020      	movs	r0, #32
 800ebc6:	f7f2 fa48 	bl	800105a <_ZnwjPv>
 800ebca:	4603      	mov	r3, r0
 800ebcc:	4621      	mov	r1, r4
 800ebce:	4618      	mov	r0, r3
 800ebd0:	f7f8 faa0 	bl	8007114 <_ZN6SymbolC1ERKS_>
 800ebd4:	bf00      	nop
 800ebd6:	370c      	adds	r7, #12
 800ebd8:	46bd      	mov	sp, r7
 800ebda:	bd90      	pop	{r4, r7, pc}

0800ebdc <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800ebdc:	b480      	push	{r7}
 800ebde:	b083      	sub	sp, #12
 800ebe0:	af00      	add	r7, sp, #0
 800ebe2:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800ebe4:	687b      	ldr	r3, [r7, #4]
 800ebe6:	4618      	mov	r0, r3
 800ebe8:	370c      	adds	r7, #12
 800ebea:	46bd      	mov	sp, r7
 800ebec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebf0:	4770      	bx	lr
	...

0800ebf4 <_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 800ebf4:	b480      	push	{r7}
 800ebf6:	b083      	sub	sp, #12
 800ebf8:	af00      	add	r7, sp, #0
 800ebfa:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 800ebfc:	4b03      	ldr	r3, [pc, #12]	; (800ec0c <_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv+0x18>)
      }
 800ebfe:	4618      	mov	r0, r3
 800ec00:	370c      	adds	r7, #12
 800ec02:	46bd      	mov	sp, r7
 800ec04:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec08:	4770      	bx	lr
 800ec0a:	bf00      	nop
 800ec0c:	05555555 	.word	0x05555555

0800ec10 <_ZN9__gnu_cxxneIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESH_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800ec10:	b590      	push	{r4, r7, lr}
 800ec12:	b083      	sub	sp, #12
 800ec14:	af00      	add	r7, sp, #0
 800ec16:	6078      	str	r0, [r7, #4]
 800ec18:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800ec1a:	6878      	ldr	r0, [r7, #4]
 800ec1c:	f7ff fde9 	bl	800e7f2 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
 800ec20:	4603      	mov	r3, r0
 800ec22:	681c      	ldr	r4, [r3, #0]
 800ec24:	6838      	ldr	r0, [r7, #0]
 800ec26:	f7ff fde4 	bl	800e7f2 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
 800ec2a:	4603      	mov	r3, r0
 800ec2c:	681b      	ldr	r3, [r3, #0]
 800ec2e:	429c      	cmp	r4, r3
 800ec30:	bf14      	ite	ne
 800ec32:	2301      	movne	r3, #1
 800ec34:	2300      	moveq	r3, #0
 800ec36:	b2db      	uxtb	r3, r3
 800ec38:	4618      	mov	r0, r3
 800ec3a:	370c      	adds	r7, #12
 800ec3c:	46bd      	mov	sp, r7
 800ec3e:	bd90      	pop	{r4, r7, pc}

0800ec40 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800ec40:	b480      	push	{r7}
 800ec42:	b083      	sub	sp, #12
 800ec44:	af00      	add	r7, sp, #0
 800ec46:	6078      	str	r0, [r7, #4]
	++_M_current;
 800ec48:	687b      	ldr	r3, [r7, #4]
 800ec4a:	681b      	ldr	r3, [r3, #0]
 800ec4c:	f103 0218 	add.w	r2, r3, #24
 800ec50:	687b      	ldr	r3, [r7, #4]
 800ec52:	601a      	str	r2, [r3, #0]
	return *this;
 800ec54:	687b      	ldr	r3, [r7, #4]
      }
 800ec56:	4618      	mov	r0, r3
 800ec58:	370c      	adds	r7, #12
 800ec5a:	46bd      	mov	sp, r7
 800ec5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec60:	4770      	bx	lr

0800ec62 <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800ec62:	b480      	push	{r7}
 800ec64:	b083      	sub	sp, #12
 800ec66:	af00      	add	r7, sp, #0
 800ec68:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800ec6a:	687b      	ldr	r3, [r7, #4]
 800ec6c:	681b      	ldr	r3, [r3, #0]
 800ec6e:	4618      	mov	r0, r3
 800ec70:	370c      	adds	r7, #12
 800ec72:	46bd      	mov	sp, r7
 800ec74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec78:	4770      	bx	lr

0800ec7a <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEvPT_DpOT0_>:
    _Construct(_T1* __p, _Args&&... __args)
 800ec7a:	b590      	push	{r4, r7, lr}
 800ec7c:	b083      	sub	sp, #12
 800ec7e:	af00      	add	r7, sp, #0
 800ec80:	6078      	str	r0, [r7, #4]
 800ec82:	6039      	str	r1, [r7, #0]
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 800ec84:	6838      	ldr	r0, [r7, #0]
 800ec86:	f7fb fe8b 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800ec8a:	4604      	mov	r4, r0
 800ec8c:	687b      	ldr	r3, [r7, #4]
 800ec8e:	4619      	mov	r1, r3
 800ec90:	2018      	movs	r0, #24
 800ec92:	f7f2 f9e2 	bl	800105a <_ZnwjPv>
 800ec96:	4603      	mov	r3, r0
 800ec98:	4621      	mov	r1, r4
 800ec9a:	4618      	mov	r0, r3
 800ec9c:	f014 fadc 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800eca0:	bf00      	nop
 800eca2:	370c      	adds	r7, #12
 800eca4:	46bd      	mov	sp, r7
 800eca6:	bd90      	pop	{r4, r7, pc}

0800eca8 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 800eca8:	b480      	push	{r7}
 800ecaa:	b083      	sub	sp, #12
 800ecac:	af00      	add	r7, sp, #0
 800ecae:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 800ecb0:	f06f 437c 	mvn.w	r3, #4227858432	; 0xfc000000
      }
 800ecb4:	4618      	mov	r0, r3
 800ecb6:	370c      	adds	r7, #12
 800ecb8:	46bd      	mov	sp, r7
 800ecba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecbe:	4770      	bx	lr

0800ecc0 <_ZN9__gnu_cxxneIPK6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800ecc0:	b590      	push	{r4, r7, lr}
 800ecc2:	b083      	sub	sp, #12
 800ecc4:	af00      	add	r7, sp, #0
 800ecc6:	6078      	str	r0, [r7, #4]
 800ecc8:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800ecca:	6878      	ldr	r0, [r7, #4]
 800eccc:	f7ff feca 	bl	800ea64 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 800ecd0:	4603      	mov	r3, r0
 800ecd2:	681c      	ldr	r4, [r3, #0]
 800ecd4:	6838      	ldr	r0, [r7, #0]
 800ecd6:	f7ff fec5 	bl	800ea64 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 800ecda:	4603      	mov	r3, r0
 800ecdc:	681b      	ldr	r3, [r3, #0]
 800ecde:	429c      	cmp	r4, r3
 800ece0:	bf14      	ite	ne
 800ece2:	2301      	movne	r3, #1
 800ece4:	2300      	moveq	r3, #0
 800ece6:	b2db      	uxtb	r3, r3
 800ece8:	4618      	mov	r0, r3
 800ecea:	370c      	adds	r7, #12
 800ecec:	46bd      	mov	sp, r7
 800ecee:	bd90      	pop	{r4, r7, pc}

0800ecf0 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800ecf0:	b480      	push	{r7}
 800ecf2:	b083      	sub	sp, #12
 800ecf4:	af00      	add	r7, sp, #0
 800ecf6:	6078      	str	r0, [r7, #4]
	++_M_current;
 800ecf8:	687b      	ldr	r3, [r7, #4]
 800ecfa:	681b      	ldr	r3, [r3, #0]
 800ecfc:	f103 0220 	add.w	r2, r3, #32
 800ed00:	687b      	ldr	r3, [r7, #4]
 800ed02:	601a      	str	r2, [r3, #0]
	return *this;
 800ed04:	687b      	ldr	r3, [r7, #4]
      }
 800ed06:	4618      	mov	r0, r3
 800ed08:	370c      	adds	r7, #12
 800ed0a:	46bd      	mov	sp, r7
 800ed0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed10:	4770      	bx	lr

0800ed12 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800ed12:	b480      	push	{r7}
 800ed14:	b083      	sub	sp, #12
 800ed16:	af00      	add	r7, sp, #0
 800ed18:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800ed1a:	687b      	ldr	r3, [r7, #4]
 800ed1c:	681b      	ldr	r3, [r3, #0]
 800ed1e:	4618      	mov	r0, r3
 800ed20:	370c      	adds	r7, #12
 800ed22:	46bd      	mov	sp, r7
 800ed24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed28:	4770      	bx	lr

0800ed2a <_ZSt10_ConstructI6SymbolJRKS0_EEvPT_DpOT0_>:
    _Construct(_T1* __p, _Args&&... __args)
 800ed2a:	b590      	push	{r4, r7, lr}
 800ed2c:	b083      	sub	sp, #12
 800ed2e:	af00      	add	r7, sp, #0
 800ed30:	6078      	str	r0, [r7, #4]
 800ed32:	6039      	str	r1, [r7, #0]
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 800ed34:	6838      	ldr	r0, [r7, #0]
 800ed36:	f000 f81a 	bl	800ed6e <_ZSt7forwardIRK6SymbolEOT_RNSt16remove_referenceIS3_E4typeE>
 800ed3a:	4604      	mov	r4, r0
 800ed3c:	687b      	ldr	r3, [r7, #4]
 800ed3e:	4619      	mov	r1, r3
 800ed40:	2020      	movs	r0, #32
 800ed42:	f7f2 f98a 	bl	800105a <_ZnwjPv>
 800ed46:	4603      	mov	r3, r0
 800ed48:	4621      	mov	r1, r4
 800ed4a:	4618      	mov	r0, r3
 800ed4c:	f7f8 f9e2 	bl	8007114 <_ZN6SymbolC1ERKS_>
 800ed50:	bf00      	nop
 800ed52:	370c      	adds	r7, #12
 800ed54:	46bd      	mov	sp, r7
 800ed56:	bd90      	pop	{r4, r7, pc}

0800ed58 <_ZSt7forwardIR6SymbolEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800ed58:	b480      	push	{r7}
 800ed5a:	b083      	sub	sp, #12
 800ed5c:	af00      	add	r7, sp, #0
 800ed5e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800ed60:	687b      	ldr	r3, [r7, #4]
 800ed62:	4618      	mov	r0, r3
 800ed64:	370c      	adds	r7, #12
 800ed66:	46bd      	mov	sp, r7
 800ed68:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed6c:	4770      	bx	lr

0800ed6e <_ZSt7forwardIRK6SymbolEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800ed6e:	b480      	push	{r7}
 800ed70:	b083      	sub	sp, #12
 800ed72:	af00      	add	r7, sp, #0
 800ed74:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800ed76:	687b      	ldr	r3, [r7, #4]
 800ed78:	4618      	mov	r0, r3
 800ed7a:	370c      	adds	r7, #12
 800ed7c:	46bd      	mov	sp, r7
 800ed7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed82:	4770      	bx	lr

0800ed84 <_Z41__static_initialization_and_destruction_0ii>:
 800ed84:	b590      	push	{r4, r7, lr}
 800ed86:	b0e7      	sub	sp, #412	; 0x19c
 800ed88:	af02      	add	r7, sp, #8
 800ed8a:	1d3b      	adds	r3, r7, #4
 800ed8c:	6018      	str	r0, [r3, #0]
 800ed8e:	463b      	mov	r3, r7
 800ed90:	6019      	str	r1, [r3, #0]
 800ed92:	1d3b      	adds	r3, r7, #4
 800ed94:	681b      	ldr	r3, [r3, #0]
 800ed96:	2b01      	cmp	r3, #1
 800ed98:	f040 819d 	bne.w	800f0d6 <_Z41__static_initialization_and_destruction_0ii+0x352>
 800ed9c:	463b      	mov	r3, r7
 800ed9e:	681b      	ldr	r3, [r3, #0]
 800eda0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800eda4:	4293      	cmp	r3, r2
 800eda6:	f040 8196 	bne.w	800f0d6 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800edaa:	f107 0314 	add.w	r3, r7, #20
 800edae:	4618      	mov	r0, r3
 800edb0:	2322      	movs	r3, #34	; 0x22
 800edb2:	461a      	mov	r2, r3
 800edb4:	2100      	movs	r1, #0
 800edb6:	f015 facd 	bl	8024354 <memset>
 800edba:	f107 0314 	add.w	r3, r7, #20
 800edbe:	223a      	movs	r2, #58	; 0x3a
 800edc0:	701a      	strb	r2, [r3, #0]
 800edc2:	f107 0314 	add.w	r3, r7, #20
 800edc6:	2201      	movs	r2, #1
 800edc8:	705a      	strb	r2, [r3, #1]
 800edca:	f107 0314 	add.w	r3, r7, #20
 800edce:	220a      	movs	r2, #10
 800edd0:	709a      	strb	r2, [r3, #2]
 800edd2:	f107 0314 	add.w	r3, r7, #20
 800edd6:	220a      	movs	r2, #10
 800edd8:	70da      	strb	r2, [r3, #3]
 800edda:	f107 0314 	add.w	r3, r7, #20
 800edde:	222c      	movs	r2, #44	; 0x2c
 800ede0:	711a      	strb	r2, [r3, #4]
 800ede2:	f107 0314 	add.w	r3, r7, #20
 800ede6:	220c      	movs	r2, #12
 800ede8:	715a      	strb	r2, [r3, #5]
 800edea:	f107 0314 	add.w	r3, r7, #20
 800edee:	222e      	movs	r2, #46	; 0x2e
 800edf0:	719a      	strb	r2, [r3, #6]
 800edf2:	f107 0314 	add.w	r3, r7, #20
 800edf6:	220b      	movs	r2, #11
 800edf8:	71da      	strb	r2, [r3, #7]
 800edfa:	f107 0314 	add.w	r3, r7, #20
 800edfe:	225b      	movs	r2, #91	; 0x5b
 800ee00:	721a      	strb	r2, [r3, #8]
 800ee02:	f107 0314 	add.w	r3, r7, #20
 800ee06:	220d      	movs	r2, #13
 800ee08:	725a      	strb	r2, [r3, #9]
 800ee0a:	f107 0314 	add.w	r3, r7, #20
 800ee0e:	225d      	movs	r2, #93	; 0x5d
 800ee10:	729a      	strb	r2, [r3, #10]
 800ee12:	f107 0314 	add.w	r3, r7, #20
 800ee16:	220e      	movs	r2, #14
 800ee18:	72da      	strb	r2, [r3, #11]
 800ee1a:	f107 0314 	add.w	r3, r7, #20
 800ee1e:	227c      	movs	r2, #124	; 0x7c
 800ee20:	731a      	strb	r2, [r3, #12]
 800ee22:	f107 0314 	add.w	r3, r7, #20
 800ee26:	2215      	movs	r2, #21
 800ee28:	735a      	strb	r2, [r3, #13]
 800ee2a:	f107 0314 	add.w	r3, r7, #20
 800ee2e:	2226      	movs	r2, #38	; 0x26
 800ee30:	739a      	strb	r2, [r3, #14]
 800ee32:	f107 0314 	add.w	r3, r7, #20
 800ee36:	2216      	movs	r2, #22
 800ee38:	73da      	strb	r2, [r3, #15]
 800ee3a:	f107 0314 	add.w	r3, r7, #20
 800ee3e:	222b      	movs	r2, #43	; 0x2b
 800ee40:	741a      	strb	r2, [r3, #16]
 800ee42:	f107 0314 	add.w	r3, r7, #20
 800ee46:	221f      	movs	r2, #31
 800ee48:	745a      	strb	r2, [r3, #17]
 800ee4a:	f107 0314 	add.w	r3, r7, #20
 800ee4e:	222d      	movs	r2, #45	; 0x2d
 800ee50:	749a      	strb	r2, [r3, #18]
 800ee52:	f107 0314 	add.w	r3, r7, #20
 800ee56:	2220      	movs	r2, #32
 800ee58:	74da      	strb	r2, [r3, #19]
 800ee5a:	f107 0314 	add.w	r3, r7, #20
 800ee5e:	222a      	movs	r2, #42	; 0x2a
 800ee60:	751a      	strb	r2, [r3, #20]
 800ee62:	f107 0314 	add.w	r3, r7, #20
 800ee66:	2221      	movs	r2, #33	; 0x21
 800ee68:	755a      	strb	r2, [r3, #21]
 800ee6a:	f107 0314 	add.w	r3, r7, #20
 800ee6e:	222f      	movs	r2, #47	; 0x2f
 800ee70:	759a      	strb	r2, [r3, #22]
 800ee72:	f107 0314 	add.w	r3, r7, #20
 800ee76:	2222      	movs	r2, #34	; 0x22
 800ee78:	75da      	strb	r2, [r3, #23]
 800ee7a:	f107 0314 	add.w	r3, r7, #20
 800ee7e:	225e      	movs	r2, #94	; 0x5e
 800ee80:	761a      	strb	r2, [r3, #24]
 800ee82:	f107 0314 	add.w	r3, r7, #20
 800ee86:	2223      	movs	r2, #35	; 0x23
 800ee88:	765a      	strb	r2, [r3, #25]
 800ee8a:	f107 0314 	add.w	r3, r7, #20
 800ee8e:	2225      	movs	r2, #37	; 0x25
 800ee90:	769a      	strb	r2, [r3, #26]
 800ee92:	f107 0314 	add.w	r3, r7, #20
 800ee96:	2224      	movs	r2, #36	; 0x24
 800ee98:	76da      	strb	r2, [r3, #27]
 800ee9a:	f107 0314 	add.w	r3, r7, #20
 800ee9e:	2228      	movs	r2, #40	; 0x28
 800eea0:	771a      	strb	r2, [r3, #28]
 800eea2:	f107 0314 	add.w	r3, r7, #20
 800eea6:	2226      	movs	r2, #38	; 0x26
 800eea8:	775a      	strb	r2, [r3, #29]
 800eeaa:	f107 0314 	add.w	r3, r7, #20
 800eeae:	2229      	movs	r2, #41	; 0x29
 800eeb0:	779a      	strb	r2, [r3, #30]
 800eeb2:	f107 0314 	add.w	r3, r7, #20
 800eeb6:	2227      	movs	r2, #39	; 0x27
 800eeb8:	77da      	strb	r2, [r3, #31]
 800eeba:	f107 0314 	add.w	r3, r7, #20
 800eebe:	2225      	movs	r2, #37	; 0x25
 800eec0:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800eec4:	f107 030c 	add.w	r3, r7, #12
 800eec8:	f107 0214 	add.w	r2, r7, #20
 800eecc:	601a      	str	r2, [r3, #0]
 800eece:	f107 030c 	add.w	r3, r7, #12
 800eed2:	2211      	movs	r2, #17
 800eed4:	605a      	str	r2, [r3, #4]
 800eed6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800eeda:	4618      	mov	r0, r3
 800eedc:	f7f2 fa02 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800eee0:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800eee4:	f107 020c 	add.w	r2, r7, #12
 800eee8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800eeec:	9300      	str	r3, [sp, #0]
 800eeee:	460b      	mov	r3, r1
 800eef0:	ca06      	ldmia	r2, {r1, r2}
 800eef2:	4885      	ldr	r0, [pc, #532]	; (800f108 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800eef4:	f7f2 fa0e 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800eef8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800eefc:	4618      	mov	r0, r3
 800eefe:	f7f2 f9fd 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800ef02:	2305      	movs	r3, #5
 800ef04:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800ef08:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800ef0c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef10:	497e      	ldr	r1, [pc, #504]	; (800f10c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800ef12:	4618      	mov	r0, r3
 800ef14:	f7f2 f8ea 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800ef18:	2306      	movs	r3, #6
 800ef1a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800ef1e:	f207 1263 	addw	r2, r7, #355	; 0x163
 800ef22:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef26:	331c      	adds	r3, #28
 800ef28:	4979      	ldr	r1, [pc, #484]	; (800f110 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800ef2a:	4618      	mov	r0, r3
 800ef2c:	f7f2 f906 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800ef30:	2307      	movs	r3, #7
 800ef32:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800ef36:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800ef3a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef3e:	3338      	adds	r3, #56	; 0x38
 800ef40:	4974      	ldr	r1, [pc, #464]	; (800f114 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800ef42:	4618      	mov	r0, r3
 800ef44:	f7f2 f8fa 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800ef48:	2308      	movs	r3, #8
 800ef4a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800ef4e:	f207 1265 	addw	r2, r7, #357	; 0x165
 800ef52:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef56:	3354      	adds	r3, #84	; 0x54
 800ef58:	496f      	ldr	r1, [pc, #444]	; (800f118 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800ef5a:	4618      	mov	r0, r3
 800ef5c:	f7f2 f8c6 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800ef60:	2309      	movs	r3, #9
 800ef62:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800ef66:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800ef6a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef6e:	3370      	adds	r3, #112	; 0x70
 800ef70:	496a      	ldr	r1, [pc, #424]	; (800f11c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800ef72:	4618      	mov	r0, r3
 800ef74:	f7f2 f90a 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800ef78:	2310      	movs	r3, #16
 800ef7a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800ef7e:	f207 1267 	addw	r2, r7, #359	; 0x167
 800ef82:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef86:	338c      	adds	r3, #140	; 0x8c
 800ef88:	4965      	ldr	r1, [pc, #404]	; (800f120 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800ef8a:	4618      	mov	r0, r3
 800ef8c:	f7f2 f926 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800ef90:	2311      	movs	r3, #17
 800ef92:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800ef96:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800ef9a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef9e:	33a8      	adds	r3, #168	; 0xa8
 800efa0:	4960      	ldr	r1, [pc, #384]	; (800f124 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800efa2:	4618      	mov	r0, r3
 800efa4:	f7f2 f8f2 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800efa8:	2312      	movs	r3, #18
 800efaa:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800efae:	f207 1269 	addw	r2, r7, #361	; 0x169
 800efb2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800efb6:	33c4      	adds	r3, #196	; 0xc4
 800efb8:	495b      	ldr	r1, [pc, #364]	; (800f128 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800efba:	4618      	mov	r0, r3
 800efbc:	f7f2 f896 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800efc0:	2313      	movs	r3, #19
 800efc2:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800efc6:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800efca:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800efce:	33e0      	adds	r3, #224	; 0xe0
 800efd0:	4956      	ldr	r1, [pc, #344]	; (800f12c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800efd2:	4618      	mov	r0, r3
 800efd4:	f7f2 f8b2 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800efd8:	2314      	movs	r3, #20
 800efda:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800efde:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800efe2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800efe6:	33fc      	adds	r3, #252	; 0xfc
 800efe8:	4951      	ldr	r1, [pc, #324]	; (800f130 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800efea:	4618      	mov	r0, r3
 800efec:	f7f2 f91e 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800eff0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800eff4:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800eff8:	601a      	str	r2, [r3, #0]
 800effa:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800effe:	220a      	movs	r2, #10
 800f000:	605a      	str	r2, [r3, #4]
 800f002:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800f006:	4618      	mov	r0, r3
 800f008:	f7f2 fa11 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800f00c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800f010:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800f014:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800f018:	9300      	str	r3, [sp, #0]
 800f01a:	460b      	mov	r3, r1
 800f01c:	ca06      	ldmia	r2, {r1, r2}
 800f01e:	4845      	ldr	r0, [pc, #276]	; (800f134 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800f020:	f7f2 fa1d 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800f024:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800f028:	4618      	mov	r0, r3
 800f02a:	f7f2 fa0c 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800f02e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800f032:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800f036:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f03a:	429c      	cmp	r4, r3
 800f03c:	d004      	beq.n	800f048 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800f03e:	3c1c      	subs	r4, #28
 800f040:	4620      	mov	r0, r4
 800f042:	f7f2 f846 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800f046:	e7f6      	b.n	800f036 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800f048:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800f04c:	2200      	movs	r2, #0
 800f04e:	601a      	str	r2, [r3, #0]
 800f050:	605a      	str	r2, [r3, #4]
 800f052:	609a      	str	r2, [r3, #8]
 800f054:	233c      	movs	r3, #60	; 0x3c
 800f056:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800f05a:	231b      	movs	r3, #27
 800f05c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800f060:	231c      	movs	r3, #28
 800f062:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800f066:	233e      	movs	r3, #62	; 0x3e
 800f068:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800f06c:	2319      	movs	r3, #25
 800f06e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800f072:	231a      	movs	r3, #26
 800f074:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800f078:	233d      	movs	r3, #61	; 0x3d
 800f07a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800f07e:	2318      	movs	r3, #24
 800f080:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800f084:	231d      	movs	r3, #29
 800f086:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800f08a:	2321      	movs	r3, #33	; 0x21
 800f08c:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800f090:	2317      	movs	r3, #23
 800f092:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800f096:	231e      	movs	r3, #30
 800f098:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800f09c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800f0a0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800f0a4:	2304      	movs	r3, #4
 800f0a6:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800f0aa:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800f0ae:	4618      	mov	r0, r3
 800f0b0:	f7f2 fa05 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800f0b4:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800f0b8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800f0bc:	9300      	str	r3, [sp, #0]
 800f0be:	4613      	mov	r3, r2
 800f0c0:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800f0c4:	ca06      	ldmia	r2, {r1, r2}
 800f0c6:	481c      	ldr	r0, [pc, #112]	; (800f138 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800f0c8:	f7f2 fa11 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800f0cc:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800f0d0:	4618      	mov	r0, r3
 800f0d2:	f7f2 fa00 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800f0d6:	1d3b      	adds	r3, r7, #4
 800f0d8:	681b      	ldr	r3, [r3, #0]
 800f0da:	2b00      	cmp	r3, #0
 800f0dc:	d10e      	bne.n	800f0fc <_Z41__static_initialization_and_destruction_0ii+0x378>
 800f0de:	463b      	mov	r3, r7
 800f0e0:	681b      	ldr	r3, [r3, #0]
 800f0e2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f0e6:	4293      	cmp	r3, r2
 800f0e8:	d108      	bne.n	800f0fc <_Z41__static_initialization_and_destruction_0ii+0x378>
 800f0ea:	4813      	ldr	r0, [pc, #76]	; (800f138 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800f0ec:	f7f4 fe58 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800f0f0:	4810      	ldr	r0, [pc, #64]	; (800f134 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800f0f2:	f7f4 fe62 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800f0f6:	4804      	ldr	r0, [pc, #16]	; (800f108 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800f0f8:	f7f4 fe6c 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800f0fc:	bf00      	nop
 800f0fe:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800f102:	46bd      	mov	sp, r7
 800f104:	bd90      	pop	{r4, r7, pc}
 800f106:	bf00      	nop
 800f108:	20000294 	.word	0x20000294
 800f10c:	08027494 	.word	0x08027494
 800f110:	0802749c 	.word	0x0802749c
 800f114:	080274a4 	.word	0x080274a4
 800f118:	080274ac 	.word	0x080274ac
 800f11c:	080274b4 	.word	0x080274b4
 800f120:	080274bc 	.word	0x080274bc
 800f124:	080274c0 	.word	0x080274c0
 800f128:	080274c8 	.word	0x080274c8
 800f12c:	080274d0 	.word	0x080274d0
 800f130:	080274d8 	.word	0x080274d8
 800f134:	200002ac 	.word	0x200002ac
 800f138:	200002c4 	.word	0x200002c4

0800f13c <_GLOBAL__sub_I__ZN21Expression_calculator12get_instanceEv>:
 800f13c:	b580      	push	{r7, lr}
 800f13e:	af00      	add	r7, sp, #0
 800f140:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f144:	2001      	movs	r0, #1
 800f146:	f7ff fe1d 	bl	800ed84 <_Z41__static_initialization_and_destruction_0ii>
 800f14a:	bd80      	pop	{r7, pc}

0800f14c <_GLOBAL__sub_D__ZN21Expression_calculator12get_instanceEv>:
 800f14c:	b580      	push	{r7, lr}
 800f14e:	af00      	add	r7, sp, #0
 800f150:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f154:	2000      	movs	r0, #0
 800f156:	f7ff fe15 	bl	800ed84 <_Z41__static_initialization_and_destruction_0ii>
 800f15a:	bd80      	pop	{r7, pc}

0800f15c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEED1Ev>:
 800f15c:	b580      	push	{r7, lr}
 800f15e:	b082      	sub	sp, #8
 800f160:	af00      	add	r7, sp, #0
 800f162:	6078      	str	r0, [r7, #4]
 800f164:	687b      	ldr	r3, [r7, #4]
 800f166:	4618      	mov	r0, r3
 800f168:	f000 f8bc 	bl	800f2e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EED1Ev>
 800f16c:	687b      	ldr	r3, [r7, #4]
 800f16e:	4618      	mov	r0, r3
 800f170:	3708      	adds	r7, #8
 800f172:	46bd      	mov	sp, r7
 800f174:	bd80      	pop	{r7, pc}

0800f176 <_ZN16Function_handlerD1Ev>:

typedef Symbol (*function_pointer)(std::vector<Expression*>);

#define ADD_FUNCTION(x) functions.insert({#x, &x});

class Function_handler
 800f176:	b580      	push	{r7, lr}
 800f178:	b082      	sub	sp, #8
 800f17a:	af00      	add	r7, sp, #0
 800f17c:	6078      	str	r0, [r7, #4]
 800f17e:	687b      	ldr	r3, [r7, #4]
 800f180:	4618      	mov	r0, r3
 800f182:	f7ff ffeb 	bl	800f15c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEED1Ev>
 800f186:	687b      	ldr	r3, [r7, #4]
 800f188:	4618      	mov	r0, r3
 800f18a:	3708      	adds	r7, #8
 800f18c:	46bd      	mov	sp, r7
 800f18e:	bd80      	pop	{r7, pc}

0800f190 <__tcf_0>:
#include "Function_handler.h"

Symbol Function_handler::run_function(Function_call *fcall)
{
	static Function_handler instance;
 800f190:	b580      	push	{r7, lr}
 800f192:	af00      	add	r7, sp, #0
 800f194:	4801      	ldr	r0, [pc, #4]	; (800f19c <__tcf_0+0xc>)
 800f196:	f7ff ffee 	bl	800f176 <_ZN16Function_handlerD1Ev>
 800f19a:	bd80      	pop	{r7, pc}
 800f19c:	2000032c 	.word	0x2000032c

0800f1a0 <_ZN16Function_handler12run_functionEP13Function_call>:
{
 800f1a0:	b590      	push	{r4, r7, lr}
 800f1a2:	b095      	sub	sp, #84	; 0x54
 800f1a4:	af00      	add	r7, sp, #0
 800f1a6:	6078      	str	r0, [r7, #4]
 800f1a8:	6039      	str	r1, [r7, #0]
	static Function_handler instance;
 800f1aa:	4b43      	ldr	r3, [pc, #268]	; (800f2b8 <_ZN16Function_handler12run_functionEP13Function_call+0x118>)
 800f1ac:	781b      	ldrb	r3, [r3, #0]
 800f1ae:	f3bf 8f5b 	dmb	ish
 800f1b2:	b2db      	uxtb	r3, r3
 800f1b4:	f003 0301 	and.w	r3, r3, #1
 800f1b8:	2b00      	cmp	r3, #0
 800f1ba:	bf0c      	ite	eq
 800f1bc:	2301      	moveq	r3, #1
 800f1be:	2300      	movne	r3, #0
 800f1c0:	b2db      	uxtb	r3, r3
 800f1c2:	2b00      	cmp	r3, #0
 800f1c4:	d013      	beq.n	800f1ee <_ZN16Function_handler12run_functionEP13Function_call+0x4e>
 800f1c6:	483c      	ldr	r0, [pc, #240]	; (800f2b8 <_ZN16Function_handler12run_functionEP13Function_call+0x118>)
 800f1c8:	f013 fd2f 	bl	8022c2a <__cxa_guard_acquire>
 800f1cc:	4603      	mov	r3, r0
 800f1ce:	2b00      	cmp	r3, #0
 800f1d0:	bf14      	ite	ne
 800f1d2:	2301      	movne	r3, #1
 800f1d4:	2300      	moveq	r3, #0
 800f1d6:	b2db      	uxtb	r3, r3
 800f1d8:	2b00      	cmp	r3, #0
 800f1da:	d008      	beq.n	800f1ee <_ZN16Function_handler12run_functionEP13Function_call+0x4e>
 800f1dc:	4837      	ldr	r0, [pc, #220]	; (800f2bc <_ZN16Function_handler12run_functionEP13Function_call+0x11c>)
 800f1de:	f010 fa45 	bl	801f66c <_ZN16Function_handlerC1Ev>
 800f1e2:	4835      	ldr	r0, [pc, #212]	; (800f2b8 <_ZN16Function_handler12run_functionEP13Function_call+0x118>)
 800f1e4:	f013 fd2d 	bl	8022c42 <__cxa_guard_release>
 800f1e8:	4835      	ldr	r0, [pc, #212]	; (800f2c0 <_ZN16Function_handler12run_functionEP13Function_call+0x120>)
 800f1ea:	f015 f80a 	bl	8024202 <atexit>

	auto search = instance.functions.find(fcall->id);
 800f1ee:	683b      	ldr	r3, [r7, #0]
 800f1f0:	3308      	adds	r3, #8
 800f1f2:	4619      	mov	r1, r3
 800f1f4:	4831      	ldr	r0, [pc, #196]	; (800f2bc <_ZN16Function_handler12run_functionEP13Function_call+0x11c>)
 800f1f6:	f000 f88a 	bl	800f30e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE4findERSH_>
 800f1fa:	4603      	mov	r3, r0
 800f1fc:	60bb      	str	r3, [r7, #8]
	if (search != instance.functions.end())
 800f1fe:	482f      	ldr	r0, [pc, #188]	; (800f2bc <_ZN16Function_handler12run_functionEP13Function_call+0x11c>)
 800f200:	f000 f894 	bl	800f32c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE3endEv>
 800f204:	4603      	mov	r3, r0
 800f206:	60fb      	str	r3, [r7, #12]
 800f208:	f107 020c 	add.w	r2, r7, #12
 800f20c:	f107 0308 	add.w	r3, r7, #8
 800f210:	4611      	mov	r1, r2
 800f212:	4618      	mov	r0, r3
 800f214:	f000 f897 	bl	800f346 <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 800f218:	4603      	mov	r3, r0
 800f21a:	2b00      	cmp	r3, #0
 800f21c:	d01d      	beq.n	800f25a <_ZN16Function_handler12run_functionEP13Function_call+0xba>
	{
		function_pointer fun = search->second;
 800f21e:	f107 0308 	add.w	r3, r7, #8
 800f222:	4618      	mov	r0, r3
 800f224:	f000 f8a3 	bl	800f36e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEptEv>
 800f228:	4603      	mov	r3, r0
 800f22a:	699b      	ldr	r3, [r3, #24]
 800f22c:	64fb      	str	r3, [r7, #76]	; 0x4c
		return fun(fcall->arguments);
 800f22e:	6cfc      	ldr	r4, [r7, #76]	; 0x4c
 800f230:	683b      	ldr	r3, [r7, #0]
 800f232:	f103 0220 	add.w	r2, r3, #32
 800f236:	f107 0310 	add.w	r3, r7, #16
 800f23a:	4611      	mov	r1, r2
 800f23c:	4618      	mov	r0, r3
 800f23e:	f000 f8a4 	bl	800f38a <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 800f242:	687b      	ldr	r3, [r7, #4]
 800f244:	f107 0210 	add.w	r2, r7, #16
 800f248:	4611      	mov	r1, r2
 800f24a:	4618      	mov	r0, r3
 800f24c:	47a0      	blx	r4
 800f24e:	f107 0310 	add.w	r3, r7, #16
 800f252:	4618      	mov	r0, r3
 800f254:	f000 f8d6 	bl	800f404 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
 800f258:	e029      	b.n	800f2ae <_ZN16Function_handler12run_functionEP13Function_call+0x10e>
	}
	else
	{
		Transmitter::report_error(std::string("function " + fcall->id + " not found"));
 800f25a:	683b      	ldr	r3, [r7, #0]
 800f25c:	f103 0208 	add.w	r2, r3, #8
 800f260:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800f264:	4917      	ldr	r1, [pc, #92]	; (800f2c4 <_ZN16Function_handler12run_functionEP13Function_call+0x124>)
 800f266:	4618      	mov	r0, r3
 800f268:	f000 f8e7 	bl	800f43a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 800f26c:	f107 031c 	add.w	r3, r7, #28
 800f270:	f107 0134 	add.w	r1, r7, #52	; 0x34
 800f274:	4a14      	ldr	r2, [pc, #80]	; (800f2c8 <_ZN16Function_handler12run_functionEP13Function_call+0x128>)
 800f276:	4618      	mov	r0, r3
 800f278:	f000 f904 	bl	800f484 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 800f27c:	f107 031c 	add.w	r3, r7, #28
 800f280:	4618      	mov	r0, r3
 800f282:	f009 fde3 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800f286:	f107 031c 	add.w	r3, r7, #28
 800f28a:	4618      	mov	r0, r3
 800f28c:	f013 feb3 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f290:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800f294:	4618      	mov	r0, r3
 800f296:	f013 feae 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		return {};
 800f29a:	687b      	ldr	r3, [r7, #4]
 800f29c:	4618      	mov	r0, r3
 800f29e:	2320      	movs	r3, #32
 800f2a0:	461a      	mov	r2, r3
 800f2a2:	2100      	movs	r1, #0
 800f2a4:	f015 f856 	bl	8024354 <memset>
 800f2a8:	6878      	ldr	r0, [r7, #4]
 800f2aa:	f7f8 f882 	bl	80073b2 <_ZN6SymbolC1Ev>
	}
}
 800f2ae:	6878      	ldr	r0, [r7, #4]
 800f2b0:	3754      	adds	r7, #84	; 0x54
 800f2b2:	46bd      	mov	sp, r7
 800f2b4:	bd90      	pop	{r4, r7, pc}
 800f2b6:	bf00      	nop
 800f2b8:	20000344 	.word	0x20000344
 800f2bc:	2000032c 	.word	0x2000032c
 800f2c0:	0800f191 	.word	0x0800f191
 800f2c4:	080274dc 	.word	0x080274dc
 800f2c8:	080274e8 	.word	0x080274e8

0800f2cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EED1Ev>:
	struct _Rb_tree_impl
 800f2cc:	b580      	push	{r7, lr}
 800f2ce:	b082      	sub	sp, #8
 800f2d0:	af00      	add	r7, sp, #0
 800f2d2:	6078      	str	r0, [r7, #4]
 800f2d4:	6878      	ldr	r0, [r7, #4]
 800f2d6:	f000 f8ec 	bl	800f4b2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEED1Ev>
 800f2da:	687b      	ldr	r3, [r7, #4]
 800f2dc:	4618      	mov	r0, r3
 800f2de:	3708      	adds	r7, #8
 800f2e0:	46bd      	mov	sp, r7
 800f2e2:	bd80      	pop	{r7, pc}

0800f2e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 800f2e4:	b580      	push	{r7, lr}
 800f2e6:	b082      	sub	sp, #8
 800f2e8:	af00      	add	r7, sp, #0
 800f2ea:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 800f2ec:	6878      	ldr	r0, [r7, #4]
 800f2ee:	f000 f90b 	bl	800f508 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 800f2f2:	4603      	mov	r3, r0
 800f2f4:	4619      	mov	r1, r3
 800f2f6:	6878      	ldr	r0, [r7, #4]
 800f2f8:	f000 f8e7 	bl	800f4ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
 800f2fc:	687b      	ldr	r3, [r7, #4]
 800f2fe:	4618      	mov	r0, r3
 800f300:	f7ff ffe4 	bl	800f2cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EED1Ev>
 800f304:	687b      	ldr	r3, [r7, #4]
 800f306:	4618      	mov	r0, r3
 800f308:	3708      	adds	r7, #8
 800f30a:	46bd      	mov	sp, r7
 800f30c:	bd80      	pop	{r7, pc}

0800f30e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE4findERSH_>:
       *  pointing to the sought after %pair.  If unsuccessful it returns the
       *  past-the-end ( @c end() ) iterator.
       */

      iterator
      find(const key_type& __x)
 800f30e:	b580      	push	{r7, lr}
 800f310:	b082      	sub	sp, #8
 800f312:	af00      	add	r7, sp, #0
 800f314:	6078      	str	r0, [r7, #4]
 800f316:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800f318:	687b      	ldr	r3, [r7, #4]
 800f31a:	6839      	ldr	r1, [r7, #0]
 800f31c:	4618      	mov	r0, r3
 800f31e:	f000 f8ff 	bl	800f520 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_>
 800f322:	4603      	mov	r3, r0
 800f324:	4618      	mov	r0, r3
 800f326:	3708      	adds	r7, #8
 800f328:	46bd      	mov	sp, r7
 800f32a:	bd80      	pop	{r7, pc}

0800f32c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800f32c:	b580      	push	{r7, lr}
 800f32e:	b082      	sub	sp, #8
 800f330:	af00      	add	r7, sp, #0
 800f332:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800f334:	687b      	ldr	r3, [r7, #4]
 800f336:	4618      	mov	r0, r3
 800f338:	f000 f92e 	bl	800f598 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800f33c:	4603      	mov	r3, r0
 800f33e:	4618      	mov	r0, r3
 800f340:	3708      	adds	r7, #8
 800f342:	46bd      	mov	sp, r7
 800f344:	bd80      	pop	{r7, pc}

0800f346 <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800f346:	b480      	push	{r7}
 800f348:	b083      	sub	sp, #12
 800f34a:	af00      	add	r7, sp, #0
 800f34c:	6078      	str	r0, [r7, #4]
 800f34e:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800f350:	687b      	ldr	r3, [r7, #4]
 800f352:	681a      	ldr	r2, [r3, #0]
 800f354:	683b      	ldr	r3, [r7, #0]
 800f356:	681b      	ldr	r3, [r3, #0]
 800f358:	429a      	cmp	r2, r3
 800f35a:	bf14      	ite	ne
 800f35c:	2301      	movne	r3, #1
 800f35e:	2300      	moveq	r3, #0
 800f360:	b2db      	uxtb	r3, r3
 800f362:	4618      	mov	r0, r3
 800f364:	370c      	adds	r7, #12
 800f366:	46bd      	mov	sp, r7
 800f368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f36c:	4770      	bx	lr

0800f36e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800f36e:	b580      	push	{r7, lr}
 800f370:	b082      	sub	sp, #8
 800f372:	af00      	add	r7, sp, #0
 800f374:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 800f376:	687b      	ldr	r3, [r7, #4]
 800f378:	681b      	ldr	r3, [r3, #0]
 800f37a:	4618      	mov	r0, r3
 800f37c:	f000 f91d 	bl	800f5ba <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800f380:	4603      	mov	r3, r0
 800f382:	4618      	mov	r0, r3
 800f384:	3708      	adds	r7, #8
 800f386:	46bd      	mov	sp, r7
 800f388:	bd80      	pop	{r7, pc}

0800f38a <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>:
      vector(const vector& __x)
 800f38a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f38c:	b085      	sub	sp, #20
 800f38e:	af00      	add	r7, sp, #0
 800f390:	6078      	str	r0, [r7, #4]
 800f392:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 800f394:	687c      	ldr	r4, [r7, #4]
 800f396:	6838      	ldr	r0, [r7, #0]
 800f398:	f000 f91d 	bl	800f5d6 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 800f39c:	4605      	mov	r5, r0
 800f39e:	683b      	ldr	r3, [r7, #0]
 800f3a0:	4618      	mov	r0, r3
 800f3a2:	f000 f936 	bl	800f612 <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800f3a6:	4602      	mov	r2, r0
 800f3a8:	f107 030c 	add.w	r3, r7, #12
 800f3ac:	4611      	mov	r1, r2
 800f3ae:	4618      	mov	r0, r3
 800f3b0:	f000 f921 	bl	800f5f6 <_ZN9__gnu_cxx14__alloc_traitsISaIP10ExpressionES2_E17_S_select_on_copyERKS3_>
 800f3b4:	f107 030c 	add.w	r3, r7, #12
 800f3b8:	461a      	mov	r2, r3
 800f3ba:	4629      	mov	r1, r5
 800f3bc:	4620      	mov	r0, r4
 800f3be:	f000 f94b 	bl	800f658 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1EjRKS2_>
 800f3c2:	f107 030c 	add.w	r3, r7, #12
 800f3c6:	4618      	mov	r0, r3
 800f3c8:	f000 f92e 	bl	800f628 <_ZNSaIP10ExpressionED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800f3cc:	6838      	ldr	r0, [r7, #0]
 800f3ce:	f000 f970 	bl	800f6b2 <_ZNKSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 800f3d2:	4605      	mov	r5, r0
 800f3d4:	6838      	ldr	r0, [r7, #0]
 800f3d6:	f000 f980 	bl	800f6da <_ZNKSt6vectorIP10ExpressionSaIS1_EE3endEv>
 800f3da:	4606      	mov	r6, r0
 800f3dc:	687b      	ldr	r3, [r7, #4]
 800f3de:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 800f3e0:	687b      	ldr	r3, [r7, #4]
 800f3e2:	4618      	mov	r0, r3
 800f3e4:	f000 f98d 	bl	800f702 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800f3e8:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800f3ea:	4622      	mov	r2, r4
 800f3ec:	4631      	mov	r1, r6
 800f3ee:	4628      	mov	r0, r5
 800f3f0:	f000 f992 	bl	800f718 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>
 800f3f4:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 800f3f6:	687b      	ldr	r3, [r7, #4]
 800f3f8:	605a      	str	r2, [r3, #4]
      }
 800f3fa:	687b      	ldr	r3, [r7, #4]
 800f3fc:	4618      	mov	r0, r3
 800f3fe:	3714      	adds	r7, #20
 800f400:	46bd      	mov	sp, r7
 800f402:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f404 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800f404:	b5b0      	push	{r4, r5, r7, lr}
 800f406:	b082      	sub	sp, #8
 800f408:	af00      	add	r7, sp, #0
 800f40a:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800f40c:	687b      	ldr	r3, [r7, #4]
 800f40e:	681c      	ldr	r4, [r3, #0]
 800f410:	687b      	ldr	r3, [r7, #4]
 800f412:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800f414:	687b      	ldr	r3, [r7, #4]
 800f416:	4618      	mov	r0, r3
 800f418:	f000 f973 	bl	800f702 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800f41c:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800f41e:	461a      	mov	r2, r3
 800f420:	4629      	mov	r1, r5
 800f422:	4620      	mov	r0, r4
 800f424:	f000 f989 	bl	800f73a <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>
      }
 800f428:	687b      	ldr	r3, [r7, #4]
 800f42a:	4618      	mov	r0, r3
 800f42c:	f000 f928 	bl	800f680 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EED1Ev>
 800f430:	687b      	ldr	r3, [r7, #4]
 800f432:	4618      	mov	r0, r3
 800f434:	3708      	adds	r7, #8
 800f436:	46bd      	mov	sp, r7
 800f438:	bdb0      	pop	{r4, r5, r7, pc}

0800f43a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
    }
#endif  // !_GLIBCXX_USE_CXX11_ABI
   
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
 800f43a:	b580      	push	{r7, lr}
 800f43c:	b086      	sub	sp, #24
 800f43e:	af00      	add	r7, sp, #0
 800f440:	60f8      	str	r0, [r7, #12]
 800f442:	60b9      	str	r1, [r7, #8]
 800f444:	607a      	str	r2, [r7, #4]
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    {
      __glibcxx_requires_string(__lhs);
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      const __size_type __len = _Traits::length(__lhs);
 800f446:	68b8      	ldr	r0, [r7, #8]
 800f448:	f7f1 fdf0 	bl	800102c <_ZNSt11char_traitsIcE6lengthEPKc>
 800f44c:	6178      	str	r0, [r7, #20]
      __string_type __str;
 800f44e:	68f8      	ldr	r0, [r7, #12]
 800f450:	f013 fdb0 	bl	8022fb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
      __str.reserve(__len + __rhs.size());
 800f454:	6878      	ldr	r0, [r7, #4]
 800f456:	f013 fe02 	bl	802305e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 800f45a:	4602      	mov	r2, r0
 800f45c:	697b      	ldr	r3, [r7, #20]
 800f45e:	4413      	add	r3, r2
 800f460:	4619      	mov	r1, r3
 800f462:	68f8      	ldr	r0, [r7, #12]
 800f464:	f013 fdff 	bl	8023066 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
      __str.append(__lhs, __len);
 800f468:	697a      	ldr	r2, [r7, #20]
 800f46a:	68b9      	ldr	r1, [r7, #8]
 800f46c:	68f8      	ldr	r0, [r7, #12]
 800f46e:	f013 fe83 	bl	8023178 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
      __str.append(__rhs);
 800f472:	6879      	ldr	r1, [r7, #4]
 800f474:	68f8      	ldr	r0, [r7, #12]
 800f476:	f013 fe75 	bl	8023164 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
      return __str;
 800f47a:	bf00      	nop
    }
 800f47c:	68f8      	ldr	r0, [r7, #12]
 800f47e:	3718      	adds	r7, #24
 800f480:	46bd      	mov	sp, r7
 800f482:	bd80      	pop	{r7, pc}

0800f484 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 800f484:	b580      	push	{r7, lr}
 800f486:	b084      	sub	sp, #16
 800f488:	af00      	add	r7, sp, #0
 800f48a:	60f8      	str	r0, [r7, #12]
 800f48c:	60b9      	str	r1, [r7, #8]
 800f48e:	607a      	str	r2, [r7, #4]
    { return std::move(__lhs.append(__rhs)); }
 800f490:	6879      	ldr	r1, [r7, #4]
 800f492:	68b8      	ldr	r0, [r7, #8]
 800f494:	f013 fe80 	bl	8023198 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
 800f498:	4603      	mov	r3, r0
 800f49a:	4618      	mov	r0, r3
 800f49c:	f7fb fe5b 	bl	800b156 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800f4a0:	4603      	mov	r3, r0
 800f4a2:	4619      	mov	r1, r3
 800f4a4:	68f8      	ldr	r0, [r7, #12]
 800f4a6:	f013 fd8c 	bl	8022fc2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 800f4aa:	68f8      	ldr	r0, [r7, #12]
 800f4ac:	3710      	adds	r7, #16
 800f4ae:	46bd      	mov	sp, r7
 800f4b0:	bd80      	pop	{r7, pc}

0800f4b2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 800f4b2:	b580      	push	{r7, lr}
 800f4b4:	b082      	sub	sp, #8
 800f4b6:	af00      	add	r7, sp, #0
 800f4b8:	6078      	str	r0, [r7, #4]
 800f4ba:	6878      	ldr	r0, [r7, #4]
 800f4bc:	f000 f94b 	bl	800f756 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEED1Ev>
 800f4c0:	687b      	ldr	r3, [r7, #4]
 800f4c2:	4618      	mov	r0, r3
 800f4c4:	3708      	adds	r7, #8
 800f4c6:	46bd      	mov	sp, r7
 800f4c8:	bd80      	pop	{r7, pc}

0800f4ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800f4ca:	b580      	push	{r7, lr}
 800f4cc:	b084      	sub	sp, #16
 800f4ce:	af00      	add	r7, sp, #0
 800f4d0:	6078      	str	r0, [r7, #4]
 800f4d2:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 800f4d4:	683b      	ldr	r3, [r7, #0]
 800f4d6:	2b00      	cmp	r3, #0
 800f4d8:	d012      	beq.n	800f500 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x36>
	  _M_erase(_S_right(__x));
 800f4da:	6838      	ldr	r0, [r7, #0]
 800f4dc:	f000 f946 	bl	800f76c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 800f4e0:	4603      	mov	r3, r0
 800f4e2:	4619      	mov	r1, r3
 800f4e4:	6878      	ldr	r0, [r7, #4]
 800f4e6:	f7ff fff0 	bl	800f4ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
	  _Link_type __y = _S_left(__x);
 800f4ea:	6838      	ldr	r0, [r7, #0]
 800f4ec:	f000 f94a 	bl	800f784 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 800f4f0:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 800f4f2:	6839      	ldr	r1, [r7, #0]
 800f4f4:	6878      	ldr	r0, [r7, #4]
 800f4f6:	f000 f951 	bl	800f79c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISG_E>
	  __x = __y;
 800f4fa:	68fb      	ldr	r3, [r7, #12]
 800f4fc:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800f4fe:	e7e9      	b.n	800f4d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0xa>
    }
 800f500:	bf00      	nop
 800f502:	3710      	adds	r7, #16
 800f504:	46bd      	mov	sp, r7
 800f506:	bd80      	pop	{r7, pc}

0800f508 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 800f508:	b480      	push	{r7}
 800f50a:	b083      	sub	sp, #12
 800f50c:	af00      	add	r7, sp, #0
 800f50e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 800f510:	687b      	ldr	r3, [r7, #4]
 800f512:	689b      	ldr	r3, [r3, #8]
 800f514:	4618      	mov	r0, r3
 800f516:	370c      	adds	r7, #12
 800f518:	46bd      	mov	sp, r7
 800f51a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f51e:	4770      	bx	lr

0800f520 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800f520:	b590      	push	{r4, r7, lr}
 800f522:	b085      	sub	sp, #20
 800f524:	af00      	add	r7, sp, #0
 800f526:	6078      	str	r0, [r7, #4]
 800f528:	6039      	str	r1, [r7, #0]
    find(const _Key& __k)
    {
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 800f52a:	6878      	ldr	r0, [r7, #4]
 800f52c:	f7ff ffec 	bl	800f508 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 800f530:	4604      	mov	r4, r0
 800f532:	6878      	ldr	r0, [r7, #4]
 800f534:	f000 f943 	bl	800f7be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 800f538:	4602      	mov	r2, r0
 800f53a:	683b      	ldr	r3, [r7, #0]
 800f53c:	4621      	mov	r1, r4
 800f53e:	6878      	ldr	r0, [r7, #4]
 800f540:	f000 f949 	bl	800f7d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_>
 800f544:	4603      	mov	r3, r0
 800f546:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 800f548:	6878      	ldr	r0, [r7, #4]
 800f54a:	f000 f825 	bl	800f598 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800f54e:	4603      	mov	r3, r0
 800f550:	60fb      	str	r3, [r7, #12]
 800f552:	f107 020c 	add.w	r2, r7, #12
 800f556:	f107 0308 	add.w	r3, r7, #8
 800f55a:	4611      	mov	r1, r2
 800f55c:	4618      	mov	r0, r3
 800f55e:	f000 f96b 	bl	800f838 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 800f562:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
					_S_key(__j._M_node))) ? end() : __j;
 800f564:	2b00      	cmp	r3, #0
 800f566:	d10d      	bne.n	800f584 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 800f568:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 800f56a:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 800f56c:	4618      	mov	r0, r3
 800f56e:	f000 f977 	bl	800f860 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800f572:	4603      	mov	r3, r0
 800f574:	461a      	mov	r2, r3
 800f576:	6839      	ldr	r1, [r7, #0]
 800f578:	4620      	mov	r0, r4
 800f57a:	f7f3 fd0d 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800f57e:	4603      	mov	r3, r0
 800f580:	2b00      	cmp	r3, #0
 800f582:	d004      	beq.n	800f58e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 800f584:	6878      	ldr	r0, [r7, #4]
 800f586:	f000 f807 	bl	800f598 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800f58a:	4603      	mov	r3, r0
 800f58c:	e000      	b.n	800f590 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x70>
 800f58e:	68bb      	ldr	r3, [r7, #8]
    }
 800f590:	4618      	mov	r0, r3
 800f592:	3714      	adds	r7, #20
 800f594:	46bd      	mov	sp, r7
 800f596:	bd90      	pop	{r4, r7, pc}

0800f598 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800f598:	b580      	push	{r7, lr}
 800f59a:	b084      	sub	sp, #16
 800f59c:	af00      	add	r7, sp, #0
 800f59e:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 800f5a0:	687b      	ldr	r3, [r7, #4]
 800f5a2:	1d1a      	adds	r2, r3, #4
 800f5a4:	f107 030c 	add.w	r3, r7, #12
 800f5a8:	4611      	mov	r1, r2
 800f5aa:	4618      	mov	r0, r3
 800f5ac:	f000 f964 	bl	800f878 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 800f5b0:	68fb      	ldr	r3, [r7, #12]
 800f5b2:	4618      	mov	r0, r3
 800f5b4:	3710      	adds	r7, #16
 800f5b6:	46bd      	mov	sp, r7
 800f5b8:	bd80      	pop	{r7, pc}

0800f5ba <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>:
      _M_valptr()
 800f5ba:	b580      	push	{r7, lr}
 800f5bc:	b082      	sub	sp, #8
 800f5be:	af00      	add	r7, sp, #0
 800f5c0:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 800f5c2:	687b      	ldr	r3, [r7, #4]
 800f5c4:	3310      	adds	r3, #16
 800f5c6:	4618      	mov	r0, r3
 800f5c8:	f000 f965 	bl	800f896 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>
 800f5cc:	4603      	mov	r3, r0
 800f5ce:	4618      	mov	r0, r3
 800f5d0:	3708      	adds	r7, #8
 800f5d2:	46bd      	mov	sp, r7
 800f5d4:	bd80      	pop	{r7, pc}

0800f5d6 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800f5d6:	b480      	push	{r7}
 800f5d8:	b083      	sub	sp, #12
 800f5da:	af00      	add	r7, sp, #0
 800f5dc:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800f5de:	687b      	ldr	r3, [r7, #4]
 800f5e0:	685a      	ldr	r2, [r3, #4]
 800f5e2:	687b      	ldr	r3, [r7, #4]
 800f5e4:	681b      	ldr	r3, [r3, #0]
 800f5e6:	1ad3      	subs	r3, r2, r3
 800f5e8:	109b      	asrs	r3, r3, #2
 800f5ea:	4618      	mov	r0, r3
 800f5ec:	370c      	adds	r7, #12
 800f5ee:	46bd      	mov	sp, r7
 800f5f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f5f4:	4770      	bx	lr

0800f5f6 <_ZN9__gnu_cxx14__alloc_traitsISaIP10ExpressionES2_E17_S_select_on_copyERKS3_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 800f5f6:	b580      	push	{r7, lr}
 800f5f8:	b082      	sub	sp, #8
 800f5fa:	af00      	add	r7, sp, #0
 800f5fc:	6078      	str	r0, [r7, #4]
 800f5fe:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 800f600:	687b      	ldr	r3, [r7, #4]
 800f602:	6839      	ldr	r1, [r7, #0]
 800f604:	4618      	mov	r0, r3
 800f606:	f000 f952 	bl	800f8ae <_ZNSt16allocator_traitsISaIP10ExpressionEE37select_on_container_copy_constructionERKS2_>
 800f60a:	6878      	ldr	r0, [r7, #4]
 800f60c:	3708      	adds	r7, #8
 800f60e:	46bd      	mov	sp, r7
 800f610:	bd80      	pop	{r7, pc}

0800f612 <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 800f612:	b480      	push	{r7}
 800f614:	b083      	sub	sp, #12
 800f616:	af00      	add	r7, sp, #0
 800f618:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800f61a:	687b      	ldr	r3, [r7, #4]
 800f61c:	4618      	mov	r0, r3
 800f61e:	370c      	adds	r7, #12
 800f620:	46bd      	mov	sp, r7
 800f622:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f626:	4770      	bx	lr

0800f628 <_ZNSaIP10ExpressionED1Ev>:
 800f628:	b580      	push	{r7, lr}
 800f62a:	b082      	sub	sp, #8
 800f62c:	af00      	add	r7, sp, #0
 800f62e:	6078      	str	r0, [r7, #4]
 800f630:	6878      	ldr	r0, [r7, #4]
 800f632:	f000 f949 	bl	800f8c8 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionED1Ev>
 800f636:	687b      	ldr	r3, [r7, #4]
 800f638:	4618      	mov	r0, r3
 800f63a:	3708      	adds	r7, #8
 800f63c:	46bd      	mov	sp, r7
 800f63e:	bd80      	pop	{r7, pc}

0800f640 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800f640:	b580      	push	{r7, lr}
 800f642:	b082      	sub	sp, #8
 800f644:	af00      	add	r7, sp, #0
 800f646:	6078      	str	r0, [r7, #4]
 800f648:	6878      	ldr	r0, [r7, #4]
 800f64a:	f7ff ffed 	bl	800f628 <_ZNSaIP10ExpressionED1Ev>
 800f64e:	687b      	ldr	r3, [r7, #4]
 800f650:	4618      	mov	r0, r3
 800f652:	3708      	adds	r7, #8
 800f654:	46bd      	mov	sp, r7
 800f656:	bd80      	pop	{r7, pc}

0800f658 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1EjRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 800f658:	b580      	push	{r7, lr}
 800f65a:	b084      	sub	sp, #16
 800f65c:	af00      	add	r7, sp, #0
 800f65e:	60f8      	str	r0, [r7, #12]
 800f660:	60b9      	str	r1, [r7, #8]
 800f662:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 800f664:	68fb      	ldr	r3, [r7, #12]
 800f666:	6879      	ldr	r1, [r7, #4]
 800f668:	4618      	mov	r0, r3
 800f66a:	f000 f938 	bl	800f8de <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
 800f66e:	68b9      	ldr	r1, [r7, #8]
 800f670:	68f8      	ldr	r0, [r7, #12]
 800f672:	f000 f946 	bl	800f902 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_M_create_storageEj>
 800f676:	68fb      	ldr	r3, [r7, #12]
 800f678:	4618      	mov	r0, r3
 800f67a:	3710      	adds	r7, #16
 800f67c:	46bd      	mov	sp, r7
 800f67e:	bd80      	pop	{r7, pc}

0800f680 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800f680:	b580      	push	{r7, lr}
 800f682:	b082      	sub	sp, #8
 800f684:	af00      	add	r7, sp, #0
 800f686:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800f688:	687b      	ldr	r3, [r7, #4]
 800f68a:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800f68c:	687b      	ldr	r3, [r7, #4]
 800f68e:	689a      	ldr	r2, [r3, #8]
 800f690:	687b      	ldr	r3, [r7, #4]
 800f692:	681b      	ldr	r3, [r3, #0]
 800f694:	1ad3      	subs	r3, r2, r3
 800f696:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800f698:	461a      	mov	r2, r3
 800f69a:	6878      	ldr	r0, [r7, #4]
 800f69c:	f000 f94c 	bl	800f938 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800f6a0:	687b      	ldr	r3, [r7, #4]
 800f6a2:	4618      	mov	r0, r3
 800f6a4:	f7ff ffcc 	bl	800f640 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implD1Ev>
 800f6a8:	687b      	ldr	r3, [r7, #4]
 800f6aa:	4618      	mov	r0, r3
 800f6ac:	3708      	adds	r7, #8
 800f6ae:	46bd      	mov	sp, r7
 800f6b0:	bd80      	pop	{r7, pc}

0800f6b2 <_ZNKSt6vectorIP10ExpressionSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 800f6b2:	b580      	push	{r7, lr}
 800f6b4:	b084      	sub	sp, #16
 800f6b6:	af00      	add	r7, sp, #0
 800f6b8:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 800f6ba:	687b      	ldr	r3, [r7, #4]
 800f6bc:	681b      	ldr	r3, [r3, #0]
 800f6be:	60fb      	str	r3, [r7, #12]
 800f6c0:	f107 020c 	add.w	r2, r7, #12
 800f6c4:	f107 0308 	add.w	r3, r7, #8
 800f6c8:	4611      	mov	r1, r2
 800f6ca:	4618      	mov	r0, r3
 800f6cc:	f000 f947 	bl	800f95e <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>
 800f6d0:	68bb      	ldr	r3, [r7, #8]
 800f6d2:	4618      	mov	r0, r3
 800f6d4:	3710      	adds	r7, #16
 800f6d6:	46bd      	mov	sp, r7
 800f6d8:	bd80      	pop	{r7, pc}

0800f6da <_ZNKSt6vectorIP10ExpressionSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800f6da:	b580      	push	{r7, lr}
 800f6dc:	b084      	sub	sp, #16
 800f6de:	af00      	add	r7, sp, #0
 800f6e0:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 800f6e2:	687b      	ldr	r3, [r7, #4]
 800f6e4:	685b      	ldr	r3, [r3, #4]
 800f6e6:	60fb      	str	r3, [r7, #12]
 800f6e8:	f107 020c 	add.w	r2, r7, #12
 800f6ec:	f107 0308 	add.w	r3, r7, #8
 800f6f0:	4611      	mov	r1, r2
 800f6f2:	4618      	mov	r0, r3
 800f6f4:	f000 f933 	bl	800f95e <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>
 800f6f8:	68bb      	ldr	r3, [r7, #8]
 800f6fa:	4618      	mov	r0, r3
 800f6fc:	3710      	adds	r7, #16
 800f6fe:	46bd      	mov	sp, r7
 800f700:	bd80      	pop	{r7, pc}

0800f702 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800f702:	b480      	push	{r7}
 800f704:	b083      	sub	sp, #12
 800f706:	af00      	add	r7, sp, #0
 800f708:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800f70a:	687b      	ldr	r3, [r7, #4]
 800f70c:	4618      	mov	r0, r3
 800f70e:	370c      	adds	r7, #12
 800f710:	46bd      	mov	sp, r7
 800f712:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f716:	4770      	bx	lr

0800f718 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 800f718:	b580      	push	{r7, lr}
 800f71a:	b084      	sub	sp, #16
 800f71c:	af00      	add	r7, sp, #0
 800f71e:	60f8      	str	r0, [r7, #12]
 800f720:	60b9      	str	r1, [r7, #8]
 800f722:	607a      	str	r2, [r7, #4]
 800f724:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 800f726:	687a      	ldr	r2, [r7, #4]
 800f728:	68b9      	ldr	r1, [r7, #8]
 800f72a:	68f8      	ldr	r0, [r7, #12]
 800f72c:	f000 f927 	bl	800f97e <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
 800f730:	4603      	mov	r3, r0
 800f732:	4618      	mov	r0, r3
 800f734:	3710      	adds	r7, #16
 800f736:	46bd      	mov	sp, r7
 800f738:	bd80      	pop	{r7, pc}

0800f73a <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800f73a:	b580      	push	{r7, lr}
 800f73c:	b084      	sub	sp, #16
 800f73e:	af00      	add	r7, sp, #0
 800f740:	60f8      	str	r0, [r7, #12]
 800f742:	60b9      	str	r1, [r7, #8]
 800f744:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800f746:	68b9      	ldr	r1, [r7, #8]
 800f748:	68f8      	ldr	r0, [r7, #12]
 800f74a:	f000 f92a 	bl	800f9a2 <_ZSt8_DestroyIPP10ExpressionEvT_S3_>
    }
 800f74e:	bf00      	nop
 800f750:	3710      	adds	r7, #16
 800f752:	46bd      	mov	sp, r7
 800f754:	bd80      	pop	{r7, pc}

0800f756 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800f756:	b480      	push	{r7}
 800f758:	b083      	sub	sp, #12
 800f75a:	af00      	add	r7, sp, #0
 800f75c:	6078      	str	r0, [r7, #4]
 800f75e:	687b      	ldr	r3, [r7, #4]
 800f760:	4618      	mov	r0, r3
 800f762:	370c      	adds	r7, #12
 800f764:	46bd      	mov	sp, r7
 800f766:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f76a:	4770      	bx	lr

0800f76c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800f76c:	b480      	push	{r7}
 800f76e:	b083      	sub	sp, #12
 800f770:	af00      	add	r7, sp, #0
 800f772:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 800f774:	687b      	ldr	r3, [r7, #4]
 800f776:	68db      	ldr	r3, [r3, #12]
 800f778:	4618      	mov	r0, r3
 800f77a:	370c      	adds	r7, #12
 800f77c:	46bd      	mov	sp, r7
 800f77e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f782:	4770      	bx	lr

0800f784 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800f784:	b480      	push	{r7}
 800f786:	b083      	sub	sp, #12
 800f788:	af00      	add	r7, sp, #0
 800f78a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800f78c:	687b      	ldr	r3, [r7, #4]
 800f78e:	689b      	ldr	r3, [r3, #8]
 800f790:	4618      	mov	r0, r3
 800f792:	370c      	adds	r7, #12
 800f794:	46bd      	mov	sp, r7
 800f796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f79a:	4770      	bx	lr

0800f79c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800f79c:	b580      	push	{r7, lr}
 800f79e:	b082      	sub	sp, #8
 800f7a0:	af00      	add	r7, sp, #0
 800f7a2:	6078      	str	r0, [r7, #4]
 800f7a4:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 800f7a6:	6839      	ldr	r1, [r7, #0]
 800f7a8:	6878      	ldr	r0, [r7, #4]
 800f7aa:	f000 f907 	bl	800f9bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISG_E>
	_M_put_node(__p);
 800f7ae:	6839      	ldr	r1, [r7, #0]
 800f7b0:	6878      	ldr	r0, [r7, #4]
 800f7b2:	f000 f918 	bl	800f9e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_put_nodeEPSt13_Rb_tree_nodeISG_E>
      }
 800f7b6:	bf00      	nop
 800f7b8:	3708      	adds	r7, #8
 800f7ba:	46bd      	mov	sp, r7
 800f7bc:	bd80      	pop	{r7, pc}

0800f7be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 800f7be:	b480      	push	{r7}
 800f7c0:	b083      	sub	sp, #12
 800f7c2:	af00      	add	r7, sp, #0
 800f7c4:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 800f7c6:	687b      	ldr	r3, [r7, #4]
 800f7c8:	3304      	adds	r3, #4
 800f7ca:	4618      	mov	r0, r3
 800f7cc:	370c      	adds	r7, #12
 800f7ce:	46bd      	mov	sp, r7
 800f7d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7d4:	4770      	bx	lr

0800f7d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800f7d6:	b590      	push	{r4, r7, lr}
 800f7d8:	b087      	sub	sp, #28
 800f7da:	af00      	add	r7, sp, #0
 800f7dc:	60f8      	str	r0, [r7, #12]
 800f7de:	60b9      	str	r1, [r7, #8]
 800f7e0:	607a      	str	r2, [r7, #4]
 800f7e2:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800f7e4:	68bb      	ldr	r3, [r7, #8]
 800f7e6:	2b00      	cmp	r3, #0
 800f7e8:	d01b      	beq.n	800f822 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 800f7ea:	68fc      	ldr	r4, [r7, #12]
 800f7ec:	68b8      	ldr	r0, [r7, #8]
 800f7ee:	f000 f90c 	bl	800fa0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 800f7f2:	4603      	mov	r3, r0
 800f7f4:	683a      	ldr	r2, [r7, #0]
 800f7f6:	4619      	mov	r1, r3
 800f7f8:	4620      	mov	r0, r4
 800f7fa:	f7f3 fbcd 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800f7fe:	4603      	mov	r3, r0
 800f800:	f083 0301 	eor.w	r3, r3, #1
 800f804:	b2db      	uxtb	r3, r3
 800f806:	2b00      	cmp	r3, #0
 800f808:	d006      	beq.n	800f818 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 800f80a:	68bb      	ldr	r3, [r7, #8]
 800f80c:	607b      	str	r3, [r7, #4]
 800f80e:	68b8      	ldr	r0, [r7, #8]
 800f810:	f7ff ffb8 	bl	800f784 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 800f814:	60b8      	str	r0, [r7, #8]
 800f816:	e7e5      	b.n	800f7e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 800f818:	68b8      	ldr	r0, [r7, #8]
 800f81a:	f7ff ffa7 	bl	800f76c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 800f81e:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 800f820:	e7e0      	b.n	800f7e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 800f822:	f107 0314 	add.w	r3, r7, #20
 800f826:	6879      	ldr	r1, [r7, #4]
 800f828:	4618      	mov	r0, r3
 800f82a:	f000 f825 	bl	800f878 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 800f82e:	697b      	ldr	r3, [r7, #20]
    }
 800f830:	4618      	mov	r0, r3
 800f832:	371c      	adds	r7, #28
 800f834:	46bd      	mov	sp, r7
 800f836:	bd90      	pop	{r4, r7, pc}

0800f838 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800f838:	b480      	push	{r7}
 800f83a:	b083      	sub	sp, #12
 800f83c:	af00      	add	r7, sp, #0
 800f83e:	6078      	str	r0, [r7, #4]
 800f840:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 800f842:	687b      	ldr	r3, [r7, #4]
 800f844:	681a      	ldr	r2, [r3, #0]
 800f846:	683b      	ldr	r3, [r7, #0]
 800f848:	681b      	ldr	r3, [r3, #0]
 800f84a:	429a      	cmp	r2, r3
 800f84c:	bf0c      	ite	eq
 800f84e:	2301      	moveq	r3, #1
 800f850:	2300      	movne	r3, #0
 800f852:	b2db      	uxtb	r3, r3
 800f854:	4618      	mov	r0, r3
 800f856:	370c      	adds	r7, #12
 800f858:	46bd      	mov	sp, r7
 800f85a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f85e:	4770      	bx	lr

0800f860 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 800f860:	b580      	push	{r7, lr}
 800f862:	b082      	sub	sp, #8
 800f864:	af00      	add	r7, sp, #0
 800f866:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 800f868:	6878      	ldr	r0, [r7, #4]
 800f86a:	f000 f8ce 	bl	800fa0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 800f86e:	4603      	mov	r3, r0
 800f870:	4618      	mov	r0, r3
 800f872:	3708      	adds	r7, #8
 800f874:	46bd      	mov	sp, r7
 800f876:	bd80      	pop	{r7, pc}

0800f878 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800f878:	b480      	push	{r7}
 800f87a:	b083      	sub	sp, #12
 800f87c:	af00      	add	r7, sp, #0
 800f87e:	6078      	str	r0, [r7, #4]
 800f880:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800f882:	687b      	ldr	r3, [r7, #4]
 800f884:	683a      	ldr	r2, [r7, #0]
 800f886:	601a      	str	r2, [r3, #0]
 800f888:	687b      	ldr	r3, [r7, #4]
 800f88a:	4618      	mov	r0, r3
 800f88c:	370c      	adds	r7, #12
 800f88e:	46bd      	mov	sp, r7
 800f890:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f894:	4770      	bx	lr

0800f896 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 800f896:	b580      	push	{r7, lr}
 800f898:	b082      	sub	sp, #8
 800f89a:	af00      	add	r7, sp, #0
 800f89c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800f89e:	6878      	ldr	r0, [r7, #4]
 800f8a0:	f000 f8c6 	bl	800fa30 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>
 800f8a4:	4603      	mov	r3, r0
 800f8a6:	4618      	mov	r0, r3
 800f8a8:	3708      	adds	r7, #8
 800f8aa:	46bd      	mov	sp, r7
 800f8ac:	bd80      	pop	{r7, pc}

0800f8ae <_ZNSt16allocator_traitsISaIP10ExpressionEE37select_on_container_copy_constructionERKS2_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 800f8ae:	b580      	push	{r7, lr}
 800f8b0:	b082      	sub	sp, #8
 800f8b2:	af00      	add	r7, sp, #0
 800f8b4:	6078      	str	r0, [r7, #4]
 800f8b6:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 800f8b8:	6839      	ldr	r1, [r7, #0]
 800f8ba:	6878      	ldr	r0, [r7, #4]
 800f8bc:	f000 f8c3 	bl	800fa46 <_ZNSaIP10ExpressionEC1ERKS1_>
 800f8c0:	6878      	ldr	r0, [r7, #4]
 800f8c2:	3708      	adds	r7, #8
 800f8c4:	46bd      	mov	sp, r7
 800f8c6:	bd80      	pop	{r7, pc}

0800f8c8 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionED1Ev>:
 800f8c8:	b480      	push	{r7}
 800f8ca:	b083      	sub	sp, #12
 800f8cc:	af00      	add	r7, sp, #0
 800f8ce:	6078      	str	r0, [r7, #4]
 800f8d0:	687b      	ldr	r3, [r7, #4]
 800f8d2:	4618      	mov	r0, r3
 800f8d4:	370c      	adds	r7, #12
 800f8d6:	46bd      	mov	sp, r7
 800f8d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8dc:	4770      	bx	lr

0800f8de <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 800f8de:	b580      	push	{r7, lr}
 800f8e0:	b082      	sub	sp, #8
 800f8e2:	af00      	add	r7, sp, #0
 800f8e4:	6078      	str	r0, [r7, #4]
 800f8e6:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 800f8e8:	6839      	ldr	r1, [r7, #0]
 800f8ea:	6878      	ldr	r0, [r7, #4]
 800f8ec:	f000 f8ab 	bl	800fa46 <_ZNSaIP10ExpressionEC1ERKS1_>
 800f8f0:	687b      	ldr	r3, [r7, #4]
 800f8f2:	4618      	mov	r0, r3
 800f8f4:	f000 f8b5 	bl	800fa62 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 800f8f8:	687b      	ldr	r3, [r7, #4]
 800f8fa:	4618      	mov	r0, r3
 800f8fc:	3708      	adds	r7, #8
 800f8fe:	46bd      	mov	sp, r7
 800f900:	bd80      	pop	{r7, pc}

0800f902 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 800f902:	b580      	push	{r7, lr}
 800f904:	b082      	sub	sp, #8
 800f906:	af00      	add	r7, sp, #0
 800f908:	6078      	str	r0, [r7, #4]
 800f90a:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 800f90c:	6839      	ldr	r1, [r7, #0]
 800f90e:	6878      	ldr	r0, [r7, #4]
 800f910:	f000 f8bb 	bl	800fa8a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 800f914:	4602      	mov	r2, r0
 800f916:	687b      	ldr	r3, [r7, #4]
 800f918:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 800f91a:	687b      	ldr	r3, [r7, #4]
 800f91c:	681a      	ldr	r2, [r3, #0]
 800f91e:	687b      	ldr	r3, [r7, #4]
 800f920:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 800f922:	687b      	ldr	r3, [r7, #4]
 800f924:	681a      	ldr	r2, [r3, #0]
 800f926:	683b      	ldr	r3, [r7, #0]
 800f928:	009b      	lsls	r3, r3, #2
 800f92a:	441a      	add	r2, r3
 800f92c:	687b      	ldr	r3, [r7, #4]
 800f92e:	609a      	str	r2, [r3, #8]
      }
 800f930:	bf00      	nop
 800f932:	3708      	adds	r7, #8
 800f934:	46bd      	mov	sp, r7
 800f936:	bd80      	pop	{r7, pc}

0800f938 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800f938:	b580      	push	{r7, lr}
 800f93a:	b084      	sub	sp, #16
 800f93c:	af00      	add	r7, sp, #0
 800f93e:	60f8      	str	r0, [r7, #12]
 800f940:	60b9      	str	r1, [r7, #8]
 800f942:	607a      	str	r2, [r7, #4]
	if (__p)
 800f944:	68bb      	ldr	r3, [r7, #8]
 800f946:	2b00      	cmp	r3, #0
 800f948:	d005      	beq.n	800f956 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800f94a:	68fb      	ldr	r3, [r7, #12]
 800f94c:	687a      	ldr	r2, [r7, #4]
 800f94e:	68b9      	ldr	r1, [r7, #8]
 800f950:	4618      	mov	r0, r3
 800f952:	f000 f8ae 	bl	800fab2 <_ZNSt16allocator_traitsISaIP10ExpressionEE10deallocateERS2_PS1_j>
      }
 800f956:	bf00      	nop
 800f958:	3710      	adds	r7, #16
 800f95a:	46bd      	mov	sp, r7
 800f95c:	bd80      	pop	{r7, pc}

0800f95e <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800f95e:	b480      	push	{r7}
 800f960:	b083      	sub	sp, #12
 800f962:	af00      	add	r7, sp, #0
 800f964:	6078      	str	r0, [r7, #4]
 800f966:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800f968:	683b      	ldr	r3, [r7, #0]
 800f96a:	681a      	ldr	r2, [r3, #0]
 800f96c:	687b      	ldr	r3, [r7, #4]
 800f96e:	601a      	str	r2, [r3, #0]
 800f970:	687b      	ldr	r3, [r7, #4]
 800f972:	4618      	mov	r0, r3
 800f974:	370c      	adds	r7, #12
 800f976:	46bd      	mov	sp, r7
 800f978:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f97c:	4770      	bx	lr

0800f97e <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 800f97e:	b580      	push	{r7, lr}
 800f980:	b086      	sub	sp, #24
 800f982:	af00      	add	r7, sp, #0
 800f984:	60f8      	str	r0, [r7, #12]
 800f986:	60b9      	str	r1, [r7, #8]
 800f988:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 800f98a:	2301      	movs	r3, #1
 800f98c:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 800f98e:	687a      	ldr	r2, [r7, #4]
 800f990:	68b9      	ldr	r1, [r7, #8]
 800f992:	68f8      	ldr	r0, [r7, #12]
 800f994:	f000 f89c 	bl	800fad0 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>
 800f998:	4603      	mov	r3, r0
    }
 800f99a:	4618      	mov	r0, r3
 800f99c:	3718      	adds	r7, #24
 800f99e:	46bd      	mov	sp, r7
 800f9a0:	bd80      	pop	{r7, pc}

0800f9a2 <_ZSt8_DestroyIPP10ExpressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800f9a2:	b580      	push	{r7, lr}
 800f9a4:	b082      	sub	sp, #8
 800f9a6:	af00      	add	r7, sp, #0
 800f9a8:	6078      	str	r0, [r7, #4]
 800f9aa:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800f9ac:	6839      	ldr	r1, [r7, #0]
 800f9ae:	6878      	ldr	r0, [r7, #4]
 800f9b0:	f000 f89e 	bl	800faf0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10ExpressionEEvT_S5_>
    }
 800f9b4:	bf00      	nop
 800f9b6:	3708      	adds	r7, #8
 800f9b8:	46bd      	mov	sp, r7
 800f9ba:	bd80      	pop	{r7, pc}

0800f9bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800f9bc:	b590      	push	{r4, r7, lr}
 800f9be:	b083      	sub	sp, #12
 800f9c0:	af00      	add	r7, sp, #0
 800f9c2:	6078      	str	r0, [r7, #4]
 800f9c4:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 800f9c6:	6878      	ldr	r0, [r7, #4]
 800f9c8:	f000 f89d 	bl	800fb06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 800f9cc:	4604      	mov	r4, r0
 800f9ce:	6838      	ldr	r0, [r7, #0]
 800f9d0:	f7ff fdf3 	bl	800f5ba <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800f9d4:	4603      	mov	r3, r0
 800f9d6:	4619      	mov	r1, r3
 800f9d8:	4620      	mov	r0, r4
 800f9da:	f000 f89f 	bl	800fb1c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE7destroyISH_EEvRSJ_PT_>
      }
 800f9de:	bf00      	nop
 800f9e0:	370c      	adds	r7, #12
 800f9e2:	46bd      	mov	sp, r7
 800f9e4:	bd90      	pop	{r4, r7, pc}

0800f9e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_put_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800f9e6:	b580      	push	{r7, lr}
 800f9e8:	b082      	sub	sp, #8
 800f9ea:	af00      	add	r7, sp, #0
 800f9ec:	6078      	str	r0, [r7, #4]
 800f9ee:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 800f9f0:	6878      	ldr	r0, [r7, #4]
 800f9f2:	f000 f888 	bl	800fb06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 800f9f6:	4603      	mov	r3, r0
 800f9f8:	2201      	movs	r2, #1
 800f9fa:	6839      	ldr	r1, [r7, #0]
 800f9fc:	4618      	mov	r0, r3
 800f9fe:	f000 f89a 	bl	800fb36 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE10deallocateERSJ_PSI_j>
 800fa02:	bf00      	nop
 800fa04:	3708      	adds	r7, #8
 800fa06:	46bd      	mov	sp, r7
 800fa08:	bd80      	pop	{r7, pc}

0800fa0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>:
      _S_key(_Const_Link_type __x)
 800fa0a:	b580      	push	{r7, lr}
 800fa0c:	b084      	sub	sp, #16
 800fa0e:	af00      	add	r7, sp, #0
 800fa10:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 800fa12:	6878      	ldr	r0, [r7, #4]
 800fa14:	f000 f89e 	bl	800fb54 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800fa18:	4602      	mov	r2, r0
 800fa1a:	f107 030c 	add.w	r3, r7, #12
 800fa1e:	4611      	mov	r1, r2
 800fa20:	4618      	mov	r0, r3
 800fa22:	f000 f8a5 	bl	800fb70 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERKSG_>
 800fa26:	4603      	mov	r3, r0
      }
 800fa28:	4618      	mov	r0, r3
 800fa2a:	3710      	adds	r7, #16
 800fa2c:	46bd      	mov	sp, r7
 800fa2e:	bd80      	pop	{r7, pc}

0800fa30 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>:
      _M_addr() noexcept
 800fa30:	b480      	push	{r7}
 800fa32:	b083      	sub	sp, #12
 800fa34:	af00      	add	r7, sp, #0
 800fa36:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 800fa38:	687b      	ldr	r3, [r7, #4]
 800fa3a:	4618      	mov	r0, r3
 800fa3c:	370c      	adds	r7, #12
 800fa3e:	46bd      	mov	sp, r7
 800fa40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa44:	4770      	bx	lr

0800fa46 <_ZNSaIP10ExpressionEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800fa46:	b580      	push	{r7, lr}
 800fa48:	b082      	sub	sp, #8
 800fa4a:	af00      	add	r7, sp, #0
 800fa4c:	6078      	str	r0, [r7, #4]
 800fa4e:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 800fa50:	6839      	ldr	r1, [r7, #0]
 800fa52:	6878      	ldr	r0, [r7, #4]
 800fa54:	f000 f898 	bl	800fb88 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1ERKS3_>
 800fa58:	687b      	ldr	r3, [r7, #4]
 800fa5a:	4618      	mov	r0, r3
 800fa5c:	3708      	adds	r7, #8
 800fa5e:	46bd      	mov	sp, r7
 800fa60:	bd80      	pop	{r7, pc}

0800fa62 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 800fa62:	b480      	push	{r7}
 800fa64:	b083      	sub	sp, #12
 800fa66:	af00      	add	r7, sp, #0
 800fa68:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 800fa6a:	687b      	ldr	r3, [r7, #4]
 800fa6c:	2200      	movs	r2, #0
 800fa6e:	601a      	str	r2, [r3, #0]
 800fa70:	687b      	ldr	r3, [r7, #4]
 800fa72:	2200      	movs	r2, #0
 800fa74:	605a      	str	r2, [r3, #4]
 800fa76:	687b      	ldr	r3, [r7, #4]
 800fa78:	2200      	movs	r2, #0
 800fa7a:	609a      	str	r2, [r3, #8]
	{ }
 800fa7c:	687b      	ldr	r3, [r7, #4]
 800fa7e:	4618      	mov	r0, r3
 800fa80:	370c      	adds	r7, #12
 800fa82:	46bd      	mov	sp, r7
 800fa84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa88:	4770      	bx	lr

0800fa8a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 800fa8a:	b580      	push	{r7, lr}
 800fa8c:	b082      	sub	sp, #8
 800fa8e:	af00      	add	r7, sp, #0
 800fa90:	6078      	str	r0, [r7, #4]
 800fa92:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 800fa94:	683b      	ldr	r3, [r7, #0]
 800fa96:	2b00      	cmp	r3, #0
 800fa98:	d006      	beq.n	800faa8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj+0x1e>
 800fa9a:	687b      	ldr	r3, [r7, #4]
 800fa9c:	6839      	ldr	r1, [r7, #0]
 800fa9e:	4618      	mov	r0, r3
 800faa0:	f000 f87e 	bl	800fba0 <_ZNSt16allocator_traitsISaIP10ExpressionEE8allocateERS2_j>
 800faa4:	4603      	mov	r3, r0
 800faa6:	e000      	b.n	800faaa <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj+0x20>
 800faa8:	2300      	movs	r3, #0
      }
 800faaa:	4618      	mov	r0, r3
 800faac:	3708      	adds	r7, #8
 800faae:	46bd      	mov	sp, r7
 800fab0:	bd80      	pop	{r7, pc}

0800fab2 <_ZNSt16allocator_traitsISaIP10ExpressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800fab2:	b580      	push	{r7, lr}
 800fab4:	b084      	sub	sp, #16
 800fab6:	af00      	add	r7, sp, #0
 800fab8:	60f8      	str	r0, [r7, #12]
 800faba:	60b9      	str	r1, [r7, #8]
 800fabc:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800fabe:	687a      	ldr	r2, [r7, #4]
 800fac0:	68b9      	ldr	r1, [r7, #8]
 800fac2:	68f8      	ldr	r0, [r7, #12]
 800fac4:	f000 f87b 	bl	800fbbe <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE10deallocateEPS2_j>
 800fac8:	bf00      	nop
 800faca:	3710      	adds	r7, #16
 800facc:	46bd      	mov	sp, r7
 800face:	bd80      	pop	{r7, pc}

0800fad0 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 800fad0:	b580      	push	{r7, lr}
 800fad2:	b084      	sub	sp, #16
 800fad4:	af00      	add	r7, sp, #0
 800fad6:	60f8      	str	r0, [r7, #12]
 800fad8:	60b9      	str	r1, [r7, #8]
 800fada:	607a      	str	r2, [r7, #4]
        { return std::copy(__first, __last, __result); }
 800fadc:	687a      	ldr	r2, [r7, #4]
 800fade:	68b9      	ldr	r1, [r7, #8]
 800fae0:	68f8      	ldr	r0, [r7, #12]
 800fae2:	f000 f878 	bl	800fbd6 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
 800fae6:	4603      	mov	r3, r0
 800fae8:	4618      	mov	r0, r3
 800faea:	3710      	adds	r7, #16
 800faec:	46bd      	mov	sp, r7
 800faee:	bd80      	pop	{r7, pc}

0800faf0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10ExpressionEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 800faf0:	b480      	push	{r7}
 800faf2:	b083      	sub	sp, #12
 800faf4:	af00      	add	r7, sp, #0
 800faf6:	6078      	str	r0, [r7, #4]
 800faf8:	6039      	str	r1, [r7, #0]
 800fafa:	bf00      	nop
 800fafc:	370c      	adds	r7, #12
 800fafe:	46bd      	mov	sp, r7
 800fb00:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb04:	4770      	bx	lr

0800fb06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 800fb06:	b480      	push	{r7}
 800fb08:	b083      	sub	sp, #12
 800fb0a:	af00      	add	r7, sp, #0
 800fb0c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800fb0e:	687b      	ldr	r3, [r7, #4]
 800fb10:	4618      	mov	r0, r3
 800fb12:	370c      	adds	r7, #12
 800fb14:	46bd      	mov	sp, r7
 800fb16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb1a:	4770      	bx	lr

0800fb1c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE7destroyISH_EEvRSJ_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 800fb1c:	b580      	push	{r7, lr}
 800fb1e:	b082      	sub	sp, #8
 800fb20:	af00      	add	r7, sp, #0
 800fb22:	6078      	str	r0, [r7, #4]
 800fb24:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 800fb26:	6839      	ldr	r1, [r7, #0]
 800fb28:	6878      	ldr	r0, [r7, #4]
 800fb2a:	f000 f879 	bl	800fc20 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE7destroyISI_EEvPT_>
 800fb2e:	bf00      	nop
 800fb30:	3708      	adds	r7, #8
 800fb32:	46bd      	mov	sp, r7
 800fb34:	bd80      	pop	{r7, pc}

0800fb36 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE10deallocateERSJ_PSI_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800fb36:	b580      	push	{r7, lr}
 800fb38:	b084      	sub	sp, #16
 800fb3a:	af00      	add	r7, sp, #0
 800fb3c:	60f8      	str	r0, [r7, #12]
 800fb3e:	60b9      	str	r1, [r7, #8]
 800fb40:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800fb42:	687a      	ldr	r2, [r7, #4]
 800fb44:	68b9      	ldr	r1, [r7, #8]
 800fb46:	68f8      	ldr	r0, [r7, #12]
 800fb48:	f000 f876 	bl	800fc38 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE10deallocateEPSJ_j>
 800fb4c:	bf00      	nop
 800fb4e:	3710      	adds	r7, #16
 800fb50:	46bd      	mov	sp, r7
 800fb52:	bd80      	pop	{r7, pc}

0800fb54 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>:
      _M_valptr() const
 800fb54:	b580      	push	{r7, lr}
 800fb56:	b082      	sub	sp, #8
 800fb58:	af00      	add	r7, sp, #0
 800fb5a:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 800fb5c:	687b      	ldr	r3, [r7, #4]
 800fb5e:	3310      	adds	r3, #16
 800fb60:	4618      	mov	r0, r3
 800fb62:	f000 f875 	bl	800fc50 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>
 800fb66:	4603      	mov	r3, r0
 800fb68:	4618      	mov	r0, r3
 800fb6a:	3708      	adds	r7, #8
 800fb6c:	46bd      	mov	sp, r7
 800fb6e:	bd80      	pop	{r7, pc}

0800fb70 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERKSG_>:
      operator()(const _Pair& __x) const
 800fb70:	b480      	push	{r7}
 800fb72:	b083      	sub	sp, #12
 800fb74:	af00      	add	r7, sp, #0
 800fb76:	6078      	str	r0, [r7, #4]
 800fb78:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 800fb7a:	683b      	ldr	r3, [r7, #0]
 800fb7c:	4618      	mov	r0, r3
 800fb7e:	370c      	adds	r7, #12
 800fb80:	46bd      	mov	sp, r7
 800fb82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb86:	4770      	bx	lr

0800fb88 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1ERKS3_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 800fb88:	b480      	push	{r7}
 800fb8a:	b083      	sub	sp, #12
 800fb8c:	af00      	add	r7, sp, #0
 800fb8e:	6078      	str	r0, [r7, #4]
 800fb90:	6039      	str	r1, [r7, #0]
 800fb92:	687b      	ldr	r3, [r7, #4]
 800fb94:	4618      	mov	r0, r3
 800fb96:	370c      	adds	r7, #12
 800fb98:	46bd      	mov	sp, r7
 800fb9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb9e:	4770      	bx	lr

0800fba0 <_ZNSt16allocator_traitsISaIP10ExpressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 800fba0:	b580      	push	{r7, lr}
 800fba2:	b082      	sub	sp, #8
 800fba4:	af00      	add	r7, sp, #0
 800fba6:	6078      	str	r0, [r7, #4]
 800fba8:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800fbaa:	2200      	movs	r2, #0
 800fbac:	6839      	ldr	r1, [r7, #0]
 800fbae:	6878      	ldr	r0, [r7, #4]
 800fbb0:	f000 f85a 	bl	800fc68 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv>
 800fbb4:	4603      	mov	r3, r0
 800fbb6:	4618      	mov	r0, r3
 800fbb8:	3708      	adds	r7, #8
 800fbba:	46bd      	mov	sp, r7
 800fbbc:	bd80      	pop	{r7, pc}

0800fbbe <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800fbbe:	b580      	push	{r7, lr}
 800fbc0:	b084      	sub	sp, #16
 800fbc2:	af00      	add	r7, sp, #0
 800fbc4:	60f8      	str	r0, [r7, #12]
 800fbc6:	60b9      	str	r1, [r7, #8]
 800fbc8:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800fbca:	68b8      	ldr	r0, [r7, #8]
 800fbcc:	f013 f829 	bl	8022c22 <_ZdlPv>
      }
 800fbd0:	3710      	adds	r7, #16
 800fbd2:	46bd      	mov	sp, r7
 800fbd4:	bd80      	pop	{r7, pc}

0800fbd6 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
    copy(_II __first, _II __last, _OI __result)
 800fbd6:	b590      	push	{r4, r7, lr}
 800fbd8:	b085      	sub	sp, #20
 800fbda:	af00      	add	r7, sp, #0
 800fbdc:	60f8      	str	r0, [r7, #12]
 800fbde:	60b9      	str	r1, [r7, #8]
 800fbe0:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 800fbe2:	68f8      	ldr	r0, [r7, #12]
 800fbe4:	f000 f85f 	bl	800fca6 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>
 800fbe8:	4604      	mov	r4, r0
 800fbea:	68b8      	ldr	r0, [r7, #8]
 800fbec:	f000 f85b 	bl	800fca6 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>
 800fbf0:	4603      	mov	r3, r0
 800fbf2:	687a      	ldr	r2, [r7, #4]
 800fbf4:	4619      	mov	r1, r3
 800fbf6:	4620      	mov	r0, r4
 800fbf8:	f000 f860 	bl	800fcbc <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_>
 800fbfc:	4603      	mov	r3, r0
    }
 800fbfe:	4618      	mov	r0, r3
 800fc00:	3714      	adds	r7, #20
 800fc02:	46bd      	mov	sp, r7
 800fc04:	bd90      	pop	{r4, r7, pc}

0800fc06 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>:
    struct pair
 800fc06:	b580      	push	{r7, lr}
 800fc08:	b082      	sub	sp, #8
 800fc0a:	af00      	add	r7, sp, #0
 800fc0c:	6078      	str	r0, [r7, #4]
 800fc0e:	687b      	ldr	r3, [r7, #4]
 800fc10:	4618      	mov	r0, r3
 800fc12:	f013 f9f0 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800fc16:	687b      	ldr	r3, [r7, #4]
 800fc18:	4618      	mov	r0, r3
 800fc1a:	3708      	adds	r7, #8
 800fc1c:	46bd      	mov	sp, r7
 800fc1e:	bd80      	pop	{r7, pc}

0800fc20 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE7destroyISI_EEvPT_>:
	destroy(_Up* __p)
 800fc20:	b580      	push	{r7, lr}
 800fc22:	b082      	sub	sp, #8
 800fc24:	af00      	add	r7, sp, #0
 800fc26:	6078      	str	r0, [r7, #4]
 800fc28:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 800fc2a:	6838      	ldr	r0, [r7, #0]
 800fc2c:	f7ff ffeb 	bl	800fc06 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>
 800fc30:	bf00      	nop
 800fc32:	3708      	adds	r7, #8
 800fc34:	46bd      	mov	sp, r7
 800fc36:	bd80      	pop	{r7, pc}

0800fc38 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE10deallocateEPSJ_j>:
      deallocate(pointer __p, size_type)
 800fc38:	b580      	push	{r7, lr}
 800fc3a:	b084      	sub	sp, #16
 800fc3c:	af00      	add	r7, sp, #0
 800fc3e:	60f8      	str	r0, [r7, #12]
 800fc40:	60b9      	str	r1, [r7, #8]
 800fc42:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800fc44:	68b8      	ldr	r0, [r7, #8]
 800fc46:	f012 ffec 	bl	8022c22 <_ZdlPv>
      }
 800fc4a:	3710      	adds	r7, #16
 800fc4c:	46bd      	mov	sp, r7
 800fc4e:	bd80      	pop	{r7, pc}

0800fc50 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 800fc50:	b580      	push	{r7, lr}
 800fc52:	b082      	sub	sp, #8
 800fc54:	af00      	add	r7, sp, #0
 800fc56:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 800fc58:	6878      	ldr	r0, [r7, #4]
 800fc5a:	f000 f852 	bl	800fd02 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>
 800fc5e:	4603      	mov	r3, r0
 800fc60:	4618      	mov	r0, r3
 800fc62:	3708      	adds	r7, #8
 800fc64:	46bd      	mov	sp, r7
 800fc66:	bd80      	pop	{r7, pc}

0800fc68 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 800fc68:	b580      	push	{r7, lr}
 800fc6a:	b084      	sub	sp, #16
 800fc6c:	af00      	add	r7, sp, #0
 800fc6e:	60f8      	str	r0, [r7, #12]
 800fc70:	60b9      	str	r1, [r7, #8]
 800fc72:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800fc74:	68f8      	ldr	r0, [r7, #12]
 800fc76:	f000 f84f 	bl	800fd18 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>
 800fc7a:	4602      	mov	r2, r0
 800fc7c:	68bb      	ldr	r3, [r7, #8]
 800fc7e:	4293      	cmp	r3, r2
 800fc80:	bf8c      	ite	hi
 800fc82:	2301      	movhi	r3, #1
 800fc84:	2300      	movls	r3, #0
 800fc86:	b2db      	uxtb	r3, r3
 800fc88:	2b00      	cmp	r3, #0
 800fc8a:	d001      	beq.n	800fc90 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 800fc8c:	f013 f8a1 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 800fc90:	68bb      	ldr	r3, [r7, #8]
 800fc92:	009b      	lsls	r3, r3, #2
 800fc94:	4618      	mov	r0, r3
 800fc96:	f012 ffd7 	bl	8022c48 <_Znwj>
 800fc9a:	4603      	mov	r3, r0
 800fc9c:	bf00      	nop
      }
 800fc9e:	4618      	mov	r0, r3
 800fca0:	3710      	adds	r7, #16
 800fca2:	46bd      	mov	sp, r7
 800fca4:	bd80      	pop	{r7, pc}

0800fca6 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>:
    __miter_base(_Iterator __it)
 800fca6:	b480      	push	{r7}
 800fca8:	b083      	sub	sp, #12
 800fcaa:	af00      	add	r7, sp, #0
 800fcac:	6078      	str	r0, [r7, #4]
    { return __it; }
 800fcae:	687b      	ldr	r3, [r7, #4]
 800fcb0:	4618      	mov	r0, r3
 800fcb2:	370c      	adds	r7, #12
 800fcb4:	46bd      	mov	sp, r7
 800fcb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fcba:	4770      	bx	lr

0800fcbc <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 800fcbc:	b5b0      	push	{r4, r5, r7, lr}
 800fcbe:	b084      	sub	sp, #16
 800fcc0:	af00      	add	r7, sp, #0
 800fcc2:	60f8      	str	r0, [r7, #12]
 800fcc4:	60b9      	str	r1, [r7, #8]
 800fcc6:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 800fcc8:	68f8      	ldr	r0, [r7, #12]
 800fcca:	f000 f831 	bl	800fd30 <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>
 800fcce:	4604      	mov	r4, r0
 800fcd0:	68b8      	ldr	r0, [r7, #8]
 800fcd2:	f000 f82d 	bl	800fd30 <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>
 800fcd6:	4605      	mov	r5, r0
 800fcd8:	687b      	ldr	r3, [r7, #4]
 800fcda:	4618      	mov	r0, r3
 800fcdc:	f000 f836 	bl	800fd4c <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 800fce0:	4603      	mov	r3, r0
 800fce2:	461a      	mov	r2, r3
 800fce4:	4629      	mov	r1, r5
 800fce6:	4620      	mov	r0, r4
 800fce8:	f000 f83b 	bl	800fd62 <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>
 800fcec:	4602      	mov	r2, r0
 800fcee:	1d3b      	adds	r3, r7, #4
 800fcf0:	4611      	mov	r1, r2
 800fcf2:	4618      	mov	r0, r3
 800fcf4:	f000 f847 	bl	800fd86 <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>
 800fcf8:	4603      	mov	r3, r0
    }
 800fcfa:	4618      	mov	r0, r3
 800fcfc:	3710      	adds	r7, #16
 800fcfe:	46bd      	mov	sp, r7
 800fd00:	bdb0      	pop	{r4, r5, r7, pc}

0800fd02 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>:
      _M_addr() const noexcept
 800fd02:	b480      	push	{r7}
 800fd04:	b083      	sub	sp, #12
 800fd06:	af00      	add	r7, sp, #0
 800fd08:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 800fd0a:	687b      	ldr	r3, [r7, #4]
 800fd0c:	4618      	mov	r0, r3
 800fd0e:	370c      	adds	r7, #12
 800fd10:	46bd      	mov	sp, r7
 800fd12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd16:	4770      	bx	lr

0800fd18 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 800fd18:	b480      	push	{r7}
 800fd1a:	b083      	sub	sp, #12
 800fd1c:	af00      	add	r7, sp, #0
 800fd1e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 800fd20:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 800fd24:	4618      	mov	r0, r3
 800fd26:	370c      	adds	r7, #12
 800fd28:	46bd      	mov	sp, r7
 800fd2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd2e:	4770      	bx	lr

0800fd30 <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 800fd30:	b580      	push	{r7, lr}
 800fd32:	b082      	sub	sp, #8
 800fd34:	af00      	add	r7, sp, #0
 800fd36:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 800fd38:	1d3b      	adds	r3, r7, #4
 800fd3a:	4618      	mov	r0, r3
 800fd3c:	f000 f82f 	bl	800fd9e <_ZNK9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800fd40:	4603      	mov	r3, r0
 800fd42:	681b      	ldr	r3, [r3, #0]
 800fd44:	4618      	mov	r0, r3
 800fd46:	3708      	adds	r7, #8
 800fd48:	46bd      	mov	sp, r7
 800fd4a:	bd80      	pop	{r7, pc}

0800fd4c <_ZSt12__niter_baseIPP10ExpressionET_S3_>:
    __niter_base(_Iterator __it)
 800fd4c:	b480      	push	{r7}
 800fd4e:	b083      	sub	sp, #12
 800fd50:	af00      	add	r7, sp, #0
 800fd52:	6078      	str	r0, [r7, #4]
    { return __it; }
 800fd54:	687b      	ldr	r3, [r7, #4]
 800fd56:	4618      	mov	r0, r3
 800fd58:	370c      	adds	r7, #12
 800fd5a:	46bd      	mov	sp, r7
 800fd5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd60:	4770      	bx	lr

0800fd62 <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 800fd62:	b580      	push	{r7, lr}
 800fd64:	b086      	sub	sp, #24
 800fd66:	af00      	add	r7, sp, #0
 800fd68:	60f8      	str	r0, [r7, #12]
 800fd6a:	60b9      	str	r1, [r7, #8]
 800fd6c:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 800fd6e:	2301      	movs	r3, #1
 800fd70:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 800fd72:	687a      	ldr	r2, [r7, #4]
 800fd74:	68b9      	ldr	r1, [r7, #8]
 800fd76:	68f8      	ldr	r0, [r7, #12]
 800fd78:	f000 f81c 	bl	800fdb4 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_>
 800fd7c:	4603      	mov	r3, r0
    }
 800fd7e:	4618      	mov	r0, r3
 800fd80:	3718      	adds	r7, #24
 800fd82:	46bd      	mov	sp, r7
 800fd84:	bd80      	pop	{r7, pc}

0800fd86 <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 800fd86:	b480      	push	{r7}
 800fd88:	b083      	sub	sp, #12
 800fd8a:	af00      	add	r7, sp, #0
 800fd8c:	6078      	str	r0, [r7, #4]
 800fd8e:	6039      	str	r1, [r7, #0]
    { return __res; }
 800fd90:	683b      	ldr	r3, [r7, #0]
 800fd92:	4618      	mov	r0, r3
 800fd94:	370c      	adds	r7, #12
 800fd96:	46bd      	mov	sp, r7
 800fd98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd9c:	4770      	bx	lr

0800fd9e <_ZNK9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800fd9e:	b480      	push	{r7}
 800fda0:	b083      	sub	sp, #12
 800fda2:	af00      	add	r7, sp, #0
 800fda4:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800fda6:	687b      	ldr	r3, [r7, #4]
 800fda8:	4618      	mov	r0, r3
 800fdaa:	370c      	adds	r7, #12
 800fdac:	46bd      	mov	sp, r7
 800fdae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdb2:	4770      	bx	lr

0800fdb4 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 800fdb4:	b580      	push	{r7, lr}
 800fdb6:	b086      	sub	sp, #24
 800fdb8:	af00      	add	r7, sp, #0
 800fdba:	60f8      	str	r0, [r7, #12]
 800fdbc:	60b9      	str	r1, [r7, #8]
 800fdbe:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 800fdc0:	68ba      	ldr	r2, [r7, #8]
 800fdc2:	68fb      	ldr	r3, [r7, #12]
 800fdc4:	1ad3      	subs	r3, r2, r3
 800fdc6:	109b      	asrs	r3, r3, #2
 800fdc8:	617b      	str	r3, [r7, #20]
	  if (_Num)
 800fdca:	697b      	ldr	r3, [r7, #20]
 800fdcc:	2b00      	cmp	r3, #0
 800fdce:	d006      	beq.n	800fdde <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_+0x2a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 800fdd0:	697b      	ldr	r3, [r7, #20]
 800fdd2:	009b      	lsls	r3, r3, #2
 800fdd4:	461a      	mov	r2, r3
 800fdd6:	68f9      	ldr	r1, [r7, #12]
 800fdd8:	6878      	ldr	r0, [r7, #4]
 800fdda:	f014 faa1 	bl	8024320 <memmove>
	  return __result + _Num;
 800fdde:	697b      	ldr	r3, [r7, #20]
 800fde0:	009b      	lsls	r3, r3, #2
 800fde2:	687a      	ldr	r2, [r7, #4]
 800fde4:	4413      	add	r3, r2
	}
 800fde6:	4618      	mov	r0, r3
 800fde8:	3718      	adds	r7, #24
 800fdea:	46bd      	mov	sp, r7
 800fdec:	bd80      	pop	{r7, pc}
	...

0800fdf0 <_Z41__static_initialization_and_destruction_0ii>:
 800fdf0:	b590      	push	{r4, r7, lr}
 800fdf2:	b0e7      	sub	sp, #412	; 0x19c
 800fdf4:	af02      	add	r7, sp, #8
 800fdf6:	1d3b      	adds	r3, r7, #4
 800fdf8:	6018      	str	r0, [r3, #0]
 800fdfa:	463b      	mov	r3, r7
 800fdfc:	6019      	str	r1, [r3, #0]
 800fdfe:	1d3b      	adds	r3, r7, #4
 800fe00:	681b      	ldr	r3, [r3, #0]
 800fe02:	2b01      	cmp	r3, #1
 800fe04:	f040 819d 	bne.w	8010142 <_Z41__static_initialization_and_destruction_0ii+0x352>
 800fe08:	463b      	mov	r3, r7
 800fe0a:	681b      	ldr	r3, [r3, #0]
 800fe0c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fe10:	4293      	cmp	r3, r2
 800fe12:	f040 8196 	bne.w	8010142 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800fe16:	f107 0314 	add.w	r3, r7, #20
 800fe1a:	4618      	mov	r0, r3
 800fe1c:	2322      	movs	r3, #34	; 0x22
 800fe1e:	461a      	mov	r2, r3
 800fe20:	2100      	movs	r1, #0
 800fe22:	f014 fa97 	bl	8024354 <memset>
 800fe26:	f107 0314 	add.w	r3, r7, #20
 800fe2a:	223a      	movs	r2, #58	; 0x3a
 800fe2c:	701a      	strb	r2, [r3, #0]
 800fe2e:	f107 0314 	add.w	r3, r7, #20
 800fe32:	2201      	movs	r2, #1
 800fe34:	705a      	strb	r2, [r3, #1]
 800fe36:	f107 0314 	add.w	r3, r7, #20
 800fe3a:	220a      	movs	r2, #10
 800fe3c:	709a      	strb	r2, [r3, #2]
 800fe3e:	f107 0314 	add.w	r3, r7, #20
 800fe42:	220a      	movs	r2, #10
 800fe44:	70da      	strb	r2, [r3, #3]
 800fe46:	f107 0314 	add.w	r3, r7, #20
 800fe4a:	222c      	movs	r2, #44	; 0x2c
 800fe4c:	711a      	strb	r2, [r3, #4]
 800fe4e:	f107 0314 	add.w	r3, r7, #20
 800fe52:	220c      	movs	r2, #12
 800fe54:	715a      	strb	r2, [r3, #5]
 800fe56:	f107 0314 	add.w	r3, r7, #20
 800fe5a:	222e      	movs	r2, #46	; 0x2e
 800fe5c:	719a      	strb	r2, [r3, #6]
 800fe5e:	f107 0314 	add.w	r3, r7, #20
 800fe62:	220b      	movs	r2, #11
 800fe64:	71da      	strb	r2, [r3, #7]
 800fe66:	f107 0314 	add.w	r3, r7, #20
 800fe6a:	225b      	movs	r2, #91	; 0x5b
 800fe6c:	721a      	strb	r2, [r3, #8]
 800fe6e:	f107 0314 	add.w	r3, r7, #20
 800fe72:	220d      	movs	r2, #13
 800fe74:	725a      	strb	r2, [r3, #9]
 800fe76:	f107 0314 	add.w	r3, r7, #20
 800fe7a:	225d      	movs	r2, #93	; 0x5d
 800fe7c:	729a      	strb	r2, [r3, #10]
 800fe7e:	f107 0314 	add.w	r3, r7, #20
 800fe82:	220e      	movs	r2, #14
 800fe84:	72da      	strb	r2, [r3, #11]
 800fe86:	f107 0314 	add.w	r3, r7, #20
 800fe8a:	227c      	movs	r2, #124	; 0x7c
 800fe8c:	731a      	strb	r2, [r3, #12]
 800fe8e:	f107 0314 	add.w	r3, r7, #20
 800fe92:	2215      	movs	r2, #21
 800fe94:	735a      	strb	r2, [r3, #13]
 800fe96:	f107 0314 	add.w	r3, r7, #20
 800fe9a:	2226      	movs	r2, #38	; 0x26
 800fe9c:	739a      	strb	r2, [r3, #14]
 800fe9e:	f107 0314 	add.w	r3, r7, #20
 800fea2:	2216      	movs	r2, #22
 800fea4:	73da      	strb	r2, [r3, #15]
 800fea6:	f107 0314 	add.w	r3, r7, #20
 800feaa:	222b      	movs	r2, #43	; 0x2b
 800feac:	741a      	strb	r2, [r3, #16]
 800feae:	f107 0314 	add.w	r3, r7, #20
 800feb2:	221f      	movs	r2, #31
 800feb4:	745a      	strb	r2, [r3, #17]
 800feb6:	f107 0314 	add.w	r3, r7, #20
 800feba:	222d      	movs	r2, #45	; 0x2d
 800febc:	749a      	strb	r2, [r3, #18]
 800febe:	f107 0314 	add.w	r3, r7, #20
 800fec2:	2220      	movs	r2, #32
 800fec4:	74da      	strb	r2, [r3, #19]
 800fec6:	f107 0314 	add.w	r3, r7, #20
 800feca:	222a      	movs	r2, #42	; 0x2a
 800fecc:	751a      	strb	r2, [r3, #20]
 800fece:	f107 0314 	add.w	r3, r7, #20
 800fed2:	2221      	movs	r2, #33	; 0x21
 800fed4:	755a      	strb	r2, [r3, #21]
 800fed6:	f107 0314 	add.w	r3, r7, #20
 800feda:	222f      	movs	r2, #47	; 0x2f
 800fedc:	759a      	strb	r2, [r3, #22]
 800fede:	f107 0314 	add.w	r3, r7, #20
 800fee2:	2222      	movs	r2, #34	; 0x22
 800fee4:	75da      	strb	r2, [r3, #23]
 800fee6:	f107 0314 	add.w	r3, r7, #20
 800feea:	225e      	movs	r2, #94	; 0x5e
 800feec:	761a      	strb	r2, [r3, #24]
 800feee:	f107 0314 	add.w	r3, r7, #20
 800fef2:	2223      	movs	r2, #35	; 0x23
 800fef4:	765a      	strb	r2, [r3, #25]
 800fef6:	f107 0314 	add.w	r3, r7, #20
 800fefa:	2225      	movs	r2, #37	; 0x25
 800fefc:	769a      	strb	r2, [r3, #26]
 800fefe:	f107 0314 	add.w	r3, r7, #20
 800ff02:	2224      	movs	r2, #36	; 0x24
 800ff04:	76da      	strb	r2, [r3, #27]
 800ff06:	f107 0314 	add.w	r3, r7, #20
 800ff0a:	2228      	movs	r2, #40	; 0x28
 800ff0c:	771a      	strb	r2, [r3, #28]
 800ff0e:	f107 0314 	add.w	r3, r7, #20
 800ff12:	2226      	movs	r2, #38	; 0x26
 800ff14:	775a      	strb	r2, [r3, #29]
 800ff16:	f107 0314 	add.w	r3, r7, #20
 800ff1a:	2229      	movs	r2, #41	; 0x29
 800ff1c:	779a      	strb	r2, [r3, #30]
 800ff1e:	f107 0314 	add.w	r3, r7, #20
 800ff22:	2227      	movs	r2, #39	; 0x27
 800ff24:	77da      	strb	r2, [r3, #31]
 800ff26:	f107 0314 	add.w	r3, r7, #20
 800ff2a:	2225      	movs	r2, #37	; 0x25
 800ff2c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800ff30:	f107 030c 	add.w	r3, r7, #12
 800ff34:	f107 0214 	add.w	r2, r7, #20
 800ff38:	601a      	str	r2, [r3, #0]
 800ff3a:	f107 030c 	add.w	r3, r7, #12
 800ff3e:	2211      	movs	r2, #17
 800ff40:	605a      	str	r2, [r3, #4]
 800ff42:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ff46:	4618      	mov	r0, r3
 800ff48:	f7f1 f9cc 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800ff4c:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800ff50:	f107 020c 	add.w	r2, r7, #12
 800ff54:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ff58:	9300      	str	r3, [sp, #0]
 800ff5a:	460b      	mov	r3, r1
 800ff5c:	ca06      	ldmia	r2, {r1, r2}
 800ff5e:	4885      	ldr	r0, [pc, #532]	; (8010174 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800ff60:	f7f1 f9d8 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800ff64:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ff68:	4618      	mov	r0, r3
 800ff6a:	f7f1 f9c7 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800ff6e:	2305      	movs	r3, #5
 800ff70:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800ff74:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800ff78:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ff7c:	497e      	ldr	r1, [pc, #504]	; (8010178 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800ff7e:	4618      	mov	r0, r3
 800ff80:	f7f1 f8b4 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800ff84:	2306      	movs	r3, #6
 800ff86:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800ff8a:	f207 1263 	addw	r2, r7, #355	; 0x163
 800ff8e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ff92:	331c      	adds	r3, #28
 800ff94:	4979      	ldr	r1, [pc, #484]	; (801017c <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800ff96:	4618      	mov	r0, r3
 800ff98:	f7f1 f8d0 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800ff9c:	2307      	movs	r3, #7
 800ff9e:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800ffa2:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800ffa6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ffaa:	3338      	adds	r3, #56	; 0x38
 800ffac:	4974      	ldr	r1, [pc, #464]	; (8010180 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800ffae:	4618      	mov	r0, r3
 800ffb0:	f7f1 f8c4 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800ffb4:	2308      	movs	r3, #8
 800ffb6:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800ffba:	f207 1265 	addw	r2, r7, #357	; 0x165
 800ffbe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ffc2:	3354      	adds	r3, #84	; 0x54
 800ffc4:	496f      	ldr	r1, [pc, #444]	; (8010184 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800ffc6:	4618      	mov	r0, r3
 800ffc8:	f7f1 f890 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800ffcc:	2309      	movs	r3, #9
 800ffce:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800ffd2:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800ffd6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ffda:	3370      	adds	r3, #112	; 0x70
 800ffdc:	496a      	ldr	r1, [pc, #424]	; (8010188 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800ffde:	4618      	mov	r0, r3
 800ffe0:	f7f1 f8d4 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800ffe4:	2310      	movs	r3, #16
 800ffe6:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800ffea:	f207 1267 	addw	r2, r7, #359	; 0x167
 800ffee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800fff2:	338c      	adds	r3, #140	; 0x8c
 800fff4:	4965      	ldr	r1, [pc, #404]	; (801018c <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800fff6:	4618      	mov	r0, r3
 800fff8:	f7f1 f8f0 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800fffc:	2311      	movs	r3, #17
 800fffe:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8010002:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8010006:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801000a:	33a8      	adds	r3, #168	; 0xa8
 801000c:	4960      	ldr	r1, [pc, #384]	; (8010190 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801000e:	4618      	mov	r0, r3
 8010010:	f7f1 f8bc 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8010014:	2312      	movs	r3, #18
 8010016:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801001a:	f207 1269 	addw	r2, r7, #361	; 0x169
 801001e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8010022:	33c4      	adds	r3, #196	; 0xc4
 8010024:	495b      	ldr	r1, [pc, #364]	; (8010194 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8010026:	4618      	mov	r0, r3
 8010028:	f7f1 f860 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801002c:	2313      	movs	r3, #19
 801002e:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8010032:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8010036:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801003a:	33e0      	adds	r3, #224	; 0xe0
 801003c:	4956      	ldr	r1, [pc, #344]	; (8010198 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801003e:	4618      	mov	r0, r3
 8010040:	f7f1 f87c 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8010044:	2314      	movs	r3, #20
 8010046:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801004a:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801004e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8010052:	33fc      	adds	r3, #252	; 0xfc
 8010054:	4951      	ldr	r1, [pc, #324]	; (801019c <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8010056:	4618      	mov	r0, r3
 8010058:	f7f1 f8e8 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801005c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8010060:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8010064:	601a      	str	r2, [r3, #0]
 8010066:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801006a:	220a      	movs	r2, #10
 801006c:	605a      	str	r2, [r3, #4]
 801006e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8010072:	4618      	mov	r0, r3
 8010074:	f7f1 f9db 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8010078:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801007c:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8010080:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8010084:	9300      	str	r3, [sp, #0]
 8010086:	460b      	mov	r3, r1
 8010088:	ca06      	ldmia	r2, {r1, r2}
 801008a:	4845      	ldr	r0, [pc, #276]	; (80101a0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801008c:	f7f1 f9e7 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8010090:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8010094:	4618      	mov	r0, r3
 8010096:	f7f1 f9d6 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801009a:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801009e:	f504 748c 	add.w	r4, r4, #280	; 0x118
 80100a2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80100a6:	429c      	cmp	r4, r3
 80100a8:	d004      	beq.n	80100b4 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 80100aa:	3c1c      	subs	r4, #28
 80100ac:	4620      	mov	r0, r4
 80100ae:	f7f1 f810 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 80100b2:	e7f6      	b.n	80100a2 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 80100b4:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80100b8:	2200      	movs	r2, #0
 80100ba:	601a      	str	r2, [r3, #0]
 80100bc:	605a      	str	r2, [r3, #4]
 80100be:	609a      	str	r2, [r3, #8]
 80100c0:	233c      	movs	r3, #60	; 0x3c
 80100c2:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 80100c6:	231b      	movs	r3, #27
 80100c8:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 80100cc:	231c      	movs	r3, #28
 80100ce:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 80100d2:	233e      	movs	r3, #62	; 0x3e
 80100d4:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 80100d8:	2319      	movs	r3, #25
 80100da:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 80100de:	231a      	movs	r3, #26
 80100e0:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 80100e4:	233d      	movs	r3, #61	; 0x3d
 80100e6:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 80100ea:	2318      	movs	r3, #24
 80100ec:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 80100f0:	231d      	movs	r3, #29
 80100f2:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 80100f6:	2321      	movs	r3, #33	; 0x21
 80100f8:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 80100fc:	2317      	movs	r3, #23
 80100fe:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8010102:	231e      	movs	r3, #30
 8010104:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8010108:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801010c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8010110:	2304      	movs	r3, #4
 8010112:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8010116:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801011a:	4618      	mov	r0, r3
 801011c:	f7f1 f9cf 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8010120:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8010124:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8010128:	9300      	str	r3, [sp, #0]
 801012a:	4613      	mov	r3, r2
 801012c:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8010130:	ca06      	ldmia	r2, {r1, r2}
 8010132:	481c      	ldr	r0, [pc, #112]	; (80101a4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8010134:	f7f1 f9db 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8010138:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801013c:	4618      	mov	r0, r3
 801013e:	f7f1 f9ca 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8010142:	1d3b      	adds	r3, r7, #4
 8010144:	681b      	ldr	r3, [r3, #0]
 8010146:	2b00      	cmp	r3, #0
 8010148:	d10e      	bne.n	8010168 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801014a:	463b      	mov	r3, r7
 801014c:	681b      	ldr	r3, [r3, #0]
 801014e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010152:	4293      	cmp	r3, r2
 8010154:	d108      	bne.n	8010168 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8010156:	4813      	ldr	r0, [pc, #76]	; (80101a4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8010158:	f7f3 fe22 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801015c:	4810      	ldr	r0, [pc, #64]	; (80101a0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801015e:	f7f3 fe2c 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8010162:	4804      	ldr	r0, [pc, #16]	; (8010174 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8010164:	f7f3 fe36 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8010168:	bf00      	nop
 801016a:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801016e:	46bd      	mov	sp, r7
 8010170:	bd90      	pop	{r4, r7, pc}
 8010172:	bf00      	nop
 8010174:	200002e4 	.word	0x200002e4
 8010178:	08027520 	.word	0x08027520
 801017c:	08027528 	.word	0x08027528
 8010180:	08027530 	.word	0x08027530
 8010184:	08027538 	.word	0x08027538
 8010188:	08027540 	.word	0x08027540
 801018c:	08027548 	.word	0x08027548
 8010190:	0802754c 	.word	0x0802754c
 8010194:	08027554 	.word	0x08027554
 8010198:	0802755c 	.word	0x0802755c
 801019c:	08027564 	.word	0x08027564
 80101a0:	200002fc 	.word	0x200002fc
 80101a4:	20000314 	.word	0x20000314

080101a8 <_GLOBAL__sub_I__ZN16Function_handler12run_functionEP13Function_call>:
 80101a8:	b580      	push	{r7, lr}
 80101aa:	af00      	add	r7, sp, #0
 80101ac:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80101b0:	2001      	movs	r0, #1
 80101b2:	f7ff fe1d 	bl	800fdf0 <_Z41__static_initialization_and_destruction_0ii>
 80101b6:	bd80      	pop	{r7, pc}

080101b8 <_GLOBAL__sub_D__ZN16Function_handler12run_functionEP13Function_call>:
 80101b8:	b580      	push	{r7, lr}
 80101ba:	af00      	add	r7, sp, #0
 80101bc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80101c0:	2000      	movs	r0, #0
 80101c2:	f7ff fe15 	bl	800fdf0 <_Z41__static_initialization_and_destruction_0ii>
 80101c6:	bd80      	pop	{r7, pc}

080101c8 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji>:

#if _GLIBCXX_USE_C99_STDLIB
  // 21.4 Numeric Conversions [string.conversions].
  inline int
  stoi(const string& __str, size_t* __idx = 0, int __base = 10)
  { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
 80101c8:	b580      	push	{r7, lr}
 80101ca:	b086      	sub	sp, #24
 80101cc:	af02      	add	r7, sp, #8
 80101ce:	60f8      	str	r0, [r7, #12]
 80101d0:	60b9      	str	r1, [r7, #8]
 80101d2:	607a      	str	r2, [r7, #4]
 80101d4:	68f8      	ldr	r0, [r7, #12]
 80101d6:	f012 fff5 	bl	80231c4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 80101da:	4602      	mov	r2, r0
 80101dc:	687b      	ldr	r3, [r7, #4]
 80101de:	9300      	str	r3, [sp, #0]
 80101e0:	68bb      	ldr	r3, [r7, #8]
 80101e2:	4904      	ldr	r1, [pc, #16]	; (80101f4 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji+0x2c>)
 80101e4:	4804      	ldr	r0, [pc, #16]	; (80101f8 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji+0x30>)
 80101e6:	f000 fd18 	bl	8010c1a <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>
 80101ea:	4603      	mov	r3, r0
					__idx, __base); }
 80101ec:	4618      	mov	r0, r3
 80101ee:	3710      	adds	r7, #16
 80101f0:	46bd      	mov	sp, r7
 80101f2:	bd80      	pop	{r7, pc}
 80101f4:	08027568 	.word	0x08027568
 80101f8:	08025369 	.word	0x08025369

080101fc <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>:
			     __idx, __base); }

  // NB: strtof vs strtod.
  inline float
  stof(const string& __str, size_t* __idx = 0)
  { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
 80101fc:	b580      	push	{r7, lr}
 80101fe:	b082      	sub	sp, #8
 8010200:	af00      	add	r7, sp, #0
 8010202:	6078      	str	r0, [r7, #4]
 8010204:	6039      	str	r1, [r7, #0]
 8010206:	6878      	ldr	r0, [r7, #4]
 8010208:	f012 ffdc 	bl	80231c4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 801020c:	4602      	mov	r2, r0
 801020e:	683b      	ldr	r3, [r7, #0]
 8010210:	4905      	ldr	r1, [pc, #20]	; (8010228 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj+0x2c>)
 8010212:	4806      	ldr	r0, [pc, #24]	; (801022c <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj+0x30>)
 8010214:	f000 fd81 	bl	8010d1a <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>
 8010218:	eef0 7a40 	vmov.f32	s15, s0
 801021c:	eeb0 0a67 	vmov.f32	s0, s15
 8010220:	3708      	adds	r7, #8
 8010222:	46bd      	mov	sp, r7
 8010224:	bd80      	pop	{r7, pc}
 8010226:	bf00      	nop
 8010228:	08027570 	.word	0x08027570
 801022c:	080251ad 	.word	0x080251ad

08010230 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 8010230:	b580      	push	{r7, lr}
 8010232:	b082      	sub	sp, #8
 8010234:	af00      	add	r7, sp, #0
 8010236:	6078      	str	r0, [r7, #4]
 8010238:	687b      	ldr	r3, [r7, #4]
 801023a:	4618      	mov	r0, r3
 801023c:	f000 fe0e 	bl	8010e5c <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 8010240:	687b      	ldr	r3, [r7, #4]
 8010242:	4618      	mov	r0, r3
 8010244:	3708      	adds	r7, #8
 8010246:	46bd      	mov	sp, r7
 8010248:	bd80      	pop	{r7, pc}

0801024a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 801024a:	b580      	push	{r7, lr}
 801024c:	b082      	sub	sp, #8
 801024e:	af00      	add	r7, sp, #0
 8010250:	6078      	str	r0, [r7, #4]
 8010252:	687b      	ldr	r3, [r7, #4]
 8010254:	4618      	mov	r0, r3
 8010256:	f7ff ffeb 	bl	8010230 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 801025a:	687b      	ldr	r3, [r7, #4]
 801025c:	4618      	mov	r0, r3
 801025e:	3708      	adds	r7, #8
 8010260:	46bd      	mov	sp, r7
 8010262:	bd80      	pop	{r7, pc}

08010264 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 8010264:	b580      	push	{r7, lr}
 8010266:	b082      	sub	sp, #8
 8010268:	af00      	add	r7, sp, #0
 801026a:	6078      	str	r0, [r7, #4]
 801026c:	687b      	ldr	r3, [r7, #4]
 801026e:	4618      	mov	r0, r3
 8010270:	f7ff ffeb 	bl	801024a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 8010274:	687b      	ldr	r3, [r7, #4]
 8010276:	4618      	mov	r0, r3
 8010278:	3708      	adds	r7, #8
 801027a:	46bd      	mov	sp, r7
 801027c:	bd80      	pop	{r7, pc}

0801027e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 801027e:	b580      	push	{r7, lr}
 8010280:	b082      	sub	sp, #8
 8010282:	af00      	add	r7, sp, #0
 8010284:	6078      	str	r0, [r7, #4]
 8010286:	687b      	ldr	r3, [r7, #4]
 8010288:	4618      	mov	r0, r3
 801028a:	f7ff ffeb 	bl	8010264 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 801028e:	687b      	ldr	r3, [r7, #4]
 8010290:	4618      	mov	r0, r3
 8010292:	3708      	adds	r7, #8
 8010294:	46bd      	mov	sp, r7
 8010296:	bd80      	pop	{r7, pc}

08010298 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8010298:	b580      	push	{r7, lr}
 801029a:	b082      	sub	sp, #8
 801029c:	af00      	add	r7, sp, #0
 801029e:	6078      	str	r0, [r7, #4]
 80102a0:	687b      	ldr	r3, [r7, #4]
 80102a2:	4618      	mov	r0, r3
 80102a4:	f7ff ffeb 	bl	801027e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 80102a8:	687b      	ldr	r3, [r7, #4]
 80102aa:	4618      	mov	r0, r3
 80102ac:	3708      	adds	r7, #8
 80102ae:	46bd      	mov	sp, r7
 80102b0:	bd80      	pop	{r7, pc}

080102b2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      variant() = default;
 80102b2:	b580      	push	{r7, lr}
 80102b4:	b082      	sub	sp, #8
 80102b6:	af00      	add	r7, sp, #0
 80102b8:	6078      	str	r0, [r7, #4]
 80102ba:	687b      	ldr	r3, [r7, #4]
 80102bc:	4618      	mov	r0, r3
 80102be:	f000 fdc0 	bl	8010e42 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 80102c2:	687b      	ldr	r3, [r7, #4]
 80102c4:	4618      	mov	r0, r3
 80102c6:	3708      	adds	r7, #8
 80102c8:	46bd      	mov	sp, r7
 80102ca:	bd80      	pop	{r7, pc}

080102cc <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
      ~variant() = default;
 80102cc:	b580      	push	{r7, lr}
 80102ce:	b082      	sub	sp, #8
 80102d0:	af00      	add	r7, sp, #0
 80102d2:	6078      	str	r0, [r7, #4]
 80102d4:	687b      	ldr	r3, [r7, #4]
 80102d6:	4618      	mov	r0, r3
 80102d8:	f7ff ffde 	bl	8010298 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 80102dc:	687b      	ldr	r3, [r7, #4]
 80102de:	4618      	mov	r0, r3
 80102e0:	3708      	adds	r7, #8
 80102e2:	46bd      	mov	sp, r7
 80102e4:	bd80      	pop	{r7, pc}

080102e6 <_ZN5TokenC1Ev>:
#include <string>
#include "token_types.h"

typedef std::variant<std::string, int, float, bool> token_value;

class Token
 80102e6:	b580      	push	{r7, lr}
 80102e8:	b082      	sub	sp, #8
 80102ea:	af00      	add	r7, sp, #0
 80102ec:	6078      	str	r0, [r7, #4]
 80102ee:	687b      	ldr	r3, [r7, #4]
 80102f0:	3304      	adds	r3, #4
 80102f2:	4618      	mov	r0, r3
 80102f4:	f7ff ffdd 	bl	80102b2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 80102f8:	687b      	ldr	r3, [r7, #4]
 80102fa:	4618      	mov	r0, r3
 80102fc:	3708      	adds	r7, #8
 80102fe:	46bd      	mov	sp, r7
 8010300:	bd80      	pop	{r7, pc}

08010302 <_ZN5TokenD1Ev>:
 8010302:	b580      	push	{r7, lr}
 8010304:	b082      	sub	sp, #8
 8010306:	af00      	add	r7, sp, #0
 8010308:	6078      	str	r0, [r7, #4]
 801030a:	687b      	ldr	r3, [r7, #4]
 801030c:	3304      	adds	r3, #4
 801030e:	4618      	mov	r0, r3
 8010310:	f7ff ffdc 	bl	80102cc <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 8010314:	687b      	ldr	r3, [r7, #4]
 8010316:	4618      	mov	r0, r3
 8010318:	3708      	adds	r7, #8
 801031a:	46bd      	mov	sp, r7
 801031c:	bd80      	pop	{r7, pc}

0801031e <_ZN5LexerC1Ev>:
#include <Lexer.h>

Lexer::Lexer()
 801031e:	b580      	push	{r7, lr}
 8010320:	b082      	sub	sp, #8
 8010322:	af00      	add	r7, sp, #0
 8010324:	6078      	str	r0, [r7, #4]
 8010326:	687b      	ldr	r3, [r7, #4]
 8010328:	3304      	adds	r3, #4
 801032a:	4618      	mov	r0, r3
 801032c:	f7ff ffdb 	bl	80102e6 <_ZN5TokenC1Ev>
{
	// needs to start with whitespace in buffer
	char_buffer = ' ';
 8010330:	687b      	ldr	r3, [r7, #4]
 8010332:	2220      	movs	r2, #32
 8010334:	701a      	strb	r2, [r3, #0]
}
 8010336:	687b      	ldr	r3, [r7, #4]
 8010338:	4618      	mov	r0, r3
 801033a:	3708      	adds	r7, #8
 801033c:	46bd      	mov	sp, r7
 801033e:	bd80      	pop	{r7, pc}

08010340 <_ZN5Lexer17match_single_charEv>:

bool Lexer::match_single_char()
{
 8010340:	b580      	push	{r7, lr}
 8010342:	b084      	sub	sp, #16
 8010344:	af00      	add	r7, sp, #0
 8010346:	6078      	str	r0, [r7, #4]
	auto result = token_chars.find(char_buffer);
 8010348:	687b      	ldr	r3, [r7, #4]
 801034a:	4619      	mov	r1, r3
 801034c:	4815      	ldr	r0, [pc, #84]	; (80103a4 <_ZN5Lexer17match_single_charEv+0x64>)
 801034e:	f000 fd91 	bl	8010e74 <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>
 8010352:	4603      	mov	r3, r0
 8010354:	60bb      	str	r3, [r7, #8]
	if (result != token_chars.end())
 8010356:	4813      	ldr	r0, [pc, #76]	; (80103a4 <_ZN5Lexer17match_single_charEv+0x64>)
 8010358:	f000 fd9b 	bl	8010e92 <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE3endEv>
 801035c:	4603      	mov	r3, r0
 801035e:	60fb      	str	r3, [r7, #12]
 8010360:	f107 020c 	add.w	r2, r7, #12
 8010364:	f107 0308 	add.w	r3, r7, #8
 8010368:	4611      	mov	r1, r2
 801036a:	4618      	mov	r0, r3
 801036c:	f000 fd9e 	bl	8010eac <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>
 8010370:	4603      	mov	r3, r0
 8010372:	2b00      	cmp	r3, #0
 8010374:	d010      	beq.n	8010398 <_ZN5Lexer17match_single_charEv+0x58>
	{
		product.type = result->second;
 8010376:	f107 0308 	add.w	r3, r7, #8
 801037a:	4618      	mov	r0, r3
 801037c:	f000 fdaa 	bl	8010ed4 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEptEv>
 8010380:	4603      	mov	r3, r0
 8010382:	785a      	ldrb	r2, [r3, #1]
 8010384:	687b      	ldr	r3, [r7, #4]
 8010386:	711a      	strb	r2, [r3, #4]
		char_buffer = Transmitter::receive_code_char();
 8010388:	f008 fdf8 	bl	8018f7c <_ZN11Transmitter17receive_code_charEv>
 801038c:	4603      	mov	r3, r0
 801038e:	461a      	mov	r2, r3
 8010390:	687b      	ldr	r3, [r7, #4]
 8010392:	701a      	strb	r2, [r3, #0]
		return true;
 8010394:	2301      	movs	r3, #1
 8010396:	e000      	b.n	801039a <_ZN5Lexer17match_single_charEv+0x5a>
	}
	return false;
 8010398:	2300      	movs	r3, #0
}
 801039a:	4618      	mov	r0, r3
 801039c:	3710      	adds	r7, #16
 801039e:	46bd      	mov	sp, r7
 80103a0:	bd80      	pop	{r7, pc}
 80103a2:	bf00      	nop
 80103a4:	20000348 	.word	0x20000348

080103a8 <_ZN5Lexer17match_double_charEv>:

bool Lexer::match_double_char()
{
 80103a8:	b580      	push	{r7, lr}
 80103aa:	b084      	sub	sp, #16
 80103ac:	af00      	add	r7, sp, #0
 80103ae:	6078      	str	r0, [r7, #4]
	auto result = token_double_chars.find(char_buffer);
 80103b0:	687b      	ldr	r3, [r7, #4]
 80103b2:	4619      	mov	r1, r3
 80103b4:	481f      	ldr	r0, [pc, #124]	; (8010434 <_ZN5Lexer17match_double_charEv+0x8c>)
 80103b6:	f000 fd9b 	bl	8010ef0 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>
 80103ba:	4603      	mov	r3, r0
 80103bc:	60bb      	str	r3, [r7, #8]
	if (result != token_double_chars.end())
 80103be:	481d      	ldr	r0, [pc, #116]	; (8010434 <_ZN5Lexer17match_double_charEv+0x8c>)
 80103c0:	f000 fda5 	bl	8010f0e <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE3endEv>
 80103c4:	4603      	mov	r3, r0
 80103c6:	60fb      	str	r3, [r7, #12]
 80103c8:	f107 020c 	add.w	r2, r7, #12
 80103cc:	f107 0308 	add.w	r3, r7, #8
 80103d0:	4611      	mov	r1, r2
 80103d2:	4618      	mov	r0, r3
 80103d4:	f000 fda8 	bl	8010f28 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>
 80103d8:	4603      	mov	r3, r0
 80103da:	2b00      	cmp	r3, #0
 80103dc:	d024      	beq.n	8010428 <_ZN5Lexer17match_double_charEv+0x80>
	{
		char_buffer = Transmitter::receive_code_char();
 80103de:	f008 fdcd 	bl	8018f7c <_ZN11Transmitter17receive_code_charEv>
 80103e2:	4603      	mov	r3, r0
 80103e4:	461a      	mov	r2, r3
 80103e6:	687b      	ldr	r3, [r7, #4]
 80103e8:	701a      	strb	r2, [r3, #0]
		if (char_buffer == '=')
 80103ea:	687b      	ldr	r3, [r7, #4]
 80103ec:	781b      	ldrb	r3, [r3, #0]
 80103ee:	2b3d      	cmp	r3, #61	; 0x3d
 80103f0:	d10f      	bne.n	8010412 <_ZN5Lexer17match_double_charEv+0x6a>
		{
			product.type = result->second.double_char;
 80103f2:	f107 0308 	add.w	r3, r7, #8
 80103f6:	4618      	mov	r0, r3
 80103f8:	f000 fdaa 	bl	8010f50 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>
 80103fc:	4603      	mov	r3, r0
 80103fe:	789a      	ldrb	r2, [r3, #2]
 8010400:	687b      	ldr	r3, [r7, #4]
 8010402:	711a      	strb	r2, [r3, #4]
			char_buffer = Transmitter::receive_code_char();
 8010404:	f008 fdba 	bl	8018f7c <_ZN11Transmitter17receive_code_charEv>
 8010408:	4603      	mov	r3, r0
 801040a:	461a      	mov	r2, r3
 801040c:	687b      	ldr	r3, [r7, #4]
 801040e:	701a      	strb	r2, [r3, #0]
 8010410:	e008      	b.n	8010424 <_ZN5Lexer17match_double_charEv+0x7c>
		}
		else
		{
			product.type = result->second.single_char;
 8010412:	f107 0308 	add.w	r3, r7, #8
 8010416:	4618      	mov	r0, r3
 8010418:	f000 fd9a 	bl	8010f50 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>
 801041c:	4603      	mov	r3, r0
 801041e:	785a      	ldrb	r2, [r3, #1]
 8010420:	687b      	ldr	r3, [r7, #4]
 8010422:	711a      	strb	r2, [r3, #4]
		}
		return true;
 8010424:	2301      	movs	r3, #1
 8010426:	e000      	b.n	801042a <_ZN5Lexer17match_double_charEv+0x82>
	}
	return false;
 8010428:	2300      	movs	r3, #0
}
 801042a:	4618      	mov	r0, r3
 801042c:	3710      	adds	r7, #16
 801042e:	46bd      	mov	sp, r7
 8010430:	bd80      	pop	{r7, pc}
 8010432:	bf00      	nop
 8010434:	20000378 	.word	0x20000378

08010438 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_word(std::string &word)
{
 8010438:	b580      	push	{r7, lr}
 801043a:	b082      	sub	sp, #8
 801043c:	af00      	add	r7, sp, #0
 801043e:	6078      	str	r0, [r7, #4]
 8010440:	6039      	str	r1, [r7, #0]
	do
	{
		word.push_back(char_buffer);
 8010442:	687b      	ldr	r3, [r7, #4]
 8010444:	781b      	ldrb	r3, [r3, #0]
 8010446:	4619      	mov	r1, r3
 8010448:	6838      	ldr	r0, [r7, #0]
 801044a:	f012 fe43 	bl	80230d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
		char_buffer = Transmitter::receive_code_char();
 801044e:	f008 fd95 	bl	8018f7c <_ZN11Transmitter17receive_code_charEv>
 8010452:	4603      	mov	r3, r0
 8010454:	461a      	mov	r2, r3
 8010456:	687b      	ldr	r3, [r7, #4]
 8010458:	701a      	strb	r2, [r3, #0]
	} while (isalnum(char_buffer) || char_buffer == '_');
 801045a:	687b      	ldr	r3, [r7, #4]
 801045c:	781b      	ldrb	r3, [r3, #0]
 801045e:	4618      	mov	r0, r3
 8010460:	f013 ff00 	bl	8024264 <isalnum>
 8010464:	4603      	mov	r3, r0
 8010466:	2b00      	cmp	r3, #0
 8010468:	d1eb      	bne.n	8010442 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
 801046a:	687b      	ldr	r3, [r7, #4]
 801046c:	781b      	ldrb	r3, [r3, #0]
 801046e:	2b5f      	cmp	r3, #95	; 0x5f
 8010470:	d100      	bne.n	8010474 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3c>
	do
 8010472:	e7e6      	b.n	8010442 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
}
 8010474:	bf00      	nop
 8010476:	3708      	adds	r7, #8
 8010478:	46bd      	mov	sp, r7
 801047a:	bd80      	pop	{r7, pc}

0801047c <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_keyword_or_id(std::string &word)
{
 801047c:	b580      	push	{r7, lr}
 801047e:	b08a      	sub	sp, #40	; 0x28
 8010480:	af00      	add	r7, sp, #0
 8010482:	6078      	str	r0, [r7, #4]
 8010484:	6039      	str	r1, [r7, #0]
	auto result = token_strings.find(word);
 8010486:	6839      	ldr	r1, [r7, #0]
 8010488:	481c      	ldr	r0, [pc, #112]	; (80104fc <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 801048a:	f000 fd6f 	bl	8010f6c <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 801048e:	4603      	mov	r3, r0
 8010490:	60bb      	str	r3, [r7, #8]
	if (result != token_strings.end())
 8010492:	481a      	ldr	r0, [pc, #104]	; (80104fc <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 8010494:	f000 fd79 	bl	8010f8a <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 8010498:	4603      	mov	r3, r0
 801049a:	60fb      	str	r3, [r7, #12]
 801049c:	f107 020c 	add.w	r2, r7, #12
 80104a0:	f107 0308 	add.w	r3, r7, #8
 80104a4:	4611      	mov	r1, r2
 80104a6:	4618      	mov	r0, r3
 80104a8:	f000 fd7c 	bl	8010fa4 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 80104ac:	4603      	mov	r3, r0
 80104ae:	2b00      	cmp	r3, #0
 80104b0:	d009      	beq.n	80104c6 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a>
	{
		product.type = result->second;
 80104b2:	f107 0308 	add.w	r3, r7, #8
 80104b6:	4618      	mov	r0, r3
 80104b8:	f000 fd88 	bl	8010fcc <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEptEv>
 80104bc:	4603      	mov	r3, r0
 80104be:	7e1a      	ldrb	r2, [r3, #24]
 80104c0:	687b      	ldr	r3, [r7, #4]
 80104c2:	711a      	strb	r2, [r3, #4]
	else
	{
		product.type = TOKEN_IDENTIFIER;
		product.value = std::string(word);
	}
}
 80104c4:	e015      	b.n	80104f2 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x76>
		product.type = TOKEN_IDENTIFIER;
 80104c6:	687b      	ldr	r3, [r7, #4]
 80104c8:	2202      	movs	r2, #2
 80104ca:	711a      	strb	r2, [r3, #4]
		product.value = std::string(word);
 80104cc:	f107 0310 	add.w	r3, r7, #16
 80104d0:	6839      	ldr	r1, [r7, #0]
 80104d2:	4618      	mov	r0, r3
 80104d4:	f012 fec0 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80104d8:	687b      	ldr	r3, [r7, #4]
 80104da:	3308      	adds	r3, #8
 80104dc:	f107 0210 	add.w	r2, r7, #16
 80104e0:	4611      	mov	r1, r2
 80104e2:	4618      	mov	r0, r3
 80104e4:	f000 fd93 	bl	801100e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
 80104e8:	f107 0310 	add.w	r3, r7, #16
 80104ec:	4618      	mov	r0, r3
 80104ee:	f012 fd82 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 80104f2:	bf00      	nop
 80104f4:	3728      	adds	r7, #40	; 0x28
 80104f6:	46bd      	mov	sp, r7
 80104f8:	bd80      	pop	{r7, pc}
 80104fa:	bf00      	nop
 80104fc:	20000360 	.word	0x20000360

08010500 <_ZN5Lexer19build_keyword_or_idEv>:

bool Lexer::build_keyword_or_id()
{
 8010500:	b590      	push	{r4, r7, lr}
 8010502:	b089      	sub	sp, #36	; 0x24
 8010504:	af00      	add	r7, sp, #0
 8010506:	6078      	str	r0, [r7, #4]
	if (isalpha(char_buffer))
 8010508:	687b      	ldr	r3, [r7, #4]
 801050a:	781b      	ldrb	r3, [r3, #0]
 801050c:	4618      	mov	r0, r3
 801050e:	f013 feb1 	bl	8024274 <isalpha>
 8010512:	4603      	mov	r3, r0
 8010514:	2b00      	cmp	r3, #0
 8010516:	d017      	beq.n	8010548 <_ZN5Lexer19build_keyword_or_idEv+0x48>
	{
		std::string word;
 8010518:	f107 0308 	add.w	r3, r7, #8
 801051c:	4618      	mov	r0, r3
 801051e:	f012 fd49 	bl	8022fb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_word(word);
 8010522:	f107 0308 	add.w	r3, r7, #8
 8010526:	4619      	mov	r1, r3
 8010528:	6878      	ldr	r0, [r7, #4]
 801052a:	f7ff ff85 	bl	8010438 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		match_keyword_or_id(word);
 801052e:	f107 0308 	add.w	r3, r7, #8
 8010532:	4619      	mov	r1, r3
 8010534:	6878      	ldr	r0, [r7, #4]
 8010536:	f7ff ffa1 	bl	801047c <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		return true;
 801053a:	2401      	movs	r4, #1
		std::string word;
 801053c:	f107 0308 	add.w	r3, r7, #8
 8010540:	4618      	mov	r0, r3
 8010542:	f012 fd58 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8010546:	e000      	b.n	801054a <_ZN5Lexer19build_keyword_or_idEv+0x4a>
	}
	return false;
 8010548:	2400      	movs	r4, #0
 801054a:	4623      	mov	r3, r4
}
 801054c:	4618      	mov	r0, r3
 801054e:	3724      	adds	r7, #36	; 0x24
 8010550:	46bd      	mov	sp, r7
 8010552:	bd90      	pop	{r4, r7, pc}

08010554 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_int(std::string &word)
{
 8010554:	b580      	push	{r7, lr}
 8010556:	b082      	sub	sp, #8
 8010558:	af00      	add	r7, sp, #0
 801055a:	6078      	str	r0, [r7, #4]
 801055c:	6039      	str	r1, [r7, #0]
	do
	{
		word.push_back(char_buffer);
 801055e:	687b      	ldr	r3, [r7, #4]
 8010560:	781b      	ldrb	r3, [r3, #0]
 8010562:	4619      	mov	r1, r3
 8010564:	6838      	ldr	r0, [r7, #0]
 8010566:	f012 fdb5 	bl	80230d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
		char_buffer = Transmitter::receive_code_char();
 801056a:	f008 fd07 	bl	8018f7c <_ZN11Transmitter17receive_code_charEv>
 801056e:	4603      	mov	r3, r0
 8010570:	461a      	mov	r2, r3
 8010572:	687b      	ldr	r3, [r7, #4]
 8010574:	701a      	strb	r2, [r3, #0]
	} while (isdigit(char_buffer));
 8010576:	687b      	ldr	r3, [r7, #4]
 8010578:	781b      	ldrb	r3, [r3, #0]
 801057a:	3b30      	subs	r3, #48	; 0x30
 801057c:	2b09      	cmp	r3, #9
 801057e:	bf94      	ite	ls
 8010580:	2301      	movls	r3, #1
 8010582:	2300      	movhi	r3, #0
 8010584:	b2db      	uxtb	r3, r3
 8010586:	2b00      	cmp	r3, #0
 8010588:	d000      	beq.n	801058c <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	do
 801058a:	e7e8      	b.n	801055e <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
}
 801058c:	bf00      	nop
 801058e:	3708      	adds	r7, #8
 8010590:	46bd      	mov	sp, r7
 8010592:	bd80      	pop	{r7, pc}

08010594 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_int_or_float(std::string &word)
{
 8010594:	b580      	push	{r7, lr}
 8010596:	b084      	sub	sp, #16
 8010598:	af00      	add	r7, sp, #0
 801059a:	6078      	str	r0, [r7, #4]
 801059c:	6039      	str	r1, [r7, #0]
	if (char_buffer != '.')
 801059e:	687b      	ldr	r3, [r7, #4]
 80105a0:	781b      	ldrb	r3, [r3, #0]
 80105a2:	2b2e      	cmp	r3, #46	; 0x2e
 80105a4:	d012      	beq.n	80105cc <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	{
		product.type = TOKEN_INT;
 80105a6:	687b      	ldr	r3, [r7, #4]
 80105a8:	2203      	movs	r2, #3
 80105aa:	711a      	strb	r2, [r3, #4]
		product.value = std::stoi(word);
 80105ac:	220a      	movs	r2, #10
 80105ae:	2100      	movs	r1, #0
 80105b0:	6838      	ldr	r0, [r7, #0]
 80105b2:	f7ff fe09 	bl	80101c8 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji>
 80105b6:	4603      	mov	r3, r0
 80105b8:	60bb      	str	r3, [r7, #8]
 80105ba:	687b      	ldr	r3, [r7, #4]
 80105bc:	3308      	adds	r3, #8
 80105be:	f107 0208 	add.w	r2, r7, #8
 80105c2:	4611      	mov	r1, r2
 80105c4:	4618      	mov	r0, r3
 80105c6:	f000 fd4e 	bl	8011066 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
	{
		build_int(word);
		product.type = TOKEN_FLOAT;
		product.value = std::stof(word);
	}
}
 80105ca:	e016      	b.n	80105fa <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x66>
		build_int(word);
 80105cc:	6839      	ldr	r1, [r7, #0]
 80105ce:	6878      	ldr	r0, [r7, #4]
 80105d0:	f7ff ffc0 	bl	8010554 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		product.type = TOKEN_FLOAT;
 80105d4:	687b      	ldr	r3, [r7, #4]
 80105d6:	2204      	movs	r2, #4
 80105d8:	711a      	strb	r2, [r3, #4]
		product.value = std::stof(word);
 80105da:	2100      	movs	r1, #0
 80105dc:	6838      	ldr	r0, [r7, #0]
 80105de:	f7ff fe0d 	bl	80101fc <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>
 80105e2:	eef0 7a40 	vmov.f32	s15, s0
 80105e6:	edc7 7a03 	vstr	s15, [r7, #12]
 80105ea:	687b      	ldr	r3, [r7, #4]
 80105ec:	3308      	adds	r3, #8
 80105ee:	f107 020c 	add.w	r2, r7, #12
 80105f2:	4611      	mov	r1, r2
 80105f4:	4618      	mov	r0, r3
 80105f6:	f000 fd60 	bl	80110ba <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
}
 80105fa:	bf00      	nop
 80105fc:	3710      	adds	r7, #16
 80105fe:	46bd      	mov	sp, r7
 8010600:	bd80      	pop	{r7, pc}

08010602 <_ZN5Lexer18build_int_or_floatEv>:

bool Lexer::build_int_or_float()
{
 8010602:	b590      	push	{r4, r7, lr}
 8010604:	b089      	sub	sp, #36	; 0x24
 8010606:	af00      	add	r7, sp, #0
 8010608:	6078      	str	r0, [r7, #4]
	if (isdigit(char_buffer) && char_buffer != '0')
 801060a:	687b      	ldr	r3, [r7, #4]
 801060c:	781b      	ldrb	r3, [r3, #0]
 801060e:	3b30      	subs	r3, #48	; 0x30
 8010610:	2b09      	cmp	r3, #9
 8010612:	bf94      	ite	ls
 8010614:	2301      	movls	r3, #1
 8010616:	2300      	movhi	r3, #0
 8010618:	b2db      	uxtb	r3, r3
 801061a:	2b00      	cmp	r3, #0
 801061c:	d01b      	beq.n	8010656 <_ZN5Lexer18build_int_or_floatEv+0x54>
 801061e:	687b      	ldr	r3, [r7, #4]
 8010620:	781b      	ldrb	r3, [r3, #0]
 8010622:	2b30      	cmp	r3, #48	; 0x30
 8010624:	d017      	beq.n	8010656 <_ZN5Lexer18build_int_or_floatEv+0x54>
	{
		std::string word;
 8010626:	f107 0308 	add.w	r3, r7, #8
 801062a:	4618      	mov	r0, r3
 801062c:	f012 fcc2 	bl	8022fb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_int(word);
 8010630:	f107 0308 	add.w	r3, r7, #8
 8010634:	4619      	mov	r1, r3
 8010636:	6878      	ldr	r0, [r7, #4]
 8010638:	f7ff ff8c 	bl	8010554 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		match_int_or_float(word);
 801063c:	f107 0308 	add.w	r3, r7, #8
 8010640:	4619      	mov	r1, r3
 8010642:	6878      	ldr	r0, [r7, #4]
 8010644:	f7ff ffa6 	bl	8010594 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		return true;
 8010648:	2401      	movs	r4, #1
		std::string word;
 801064a:	f107 0308 	add.w	r3, r7, #8
 801064e:	4618      	mov	r0, r3
 8010650:	f012 fcd1 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8010654:	e000      	b.n	8010658 <_ZN5Lexer18build_int_or_floatEv+0x56>
	}
	return false;
 8010656:	2400      	movs	r4, #0
 8010658:	4623      	mov	r3, r4
}
 801065a:	4618      	mov	r0, r3
 801065c:	3724      	adds	r7, #36	; 0x24
 801065e:	46bd      	mov	sp, r7
 8010660:	bd90      	pop	{r4, r7, pc}

08010662 <_ZN5Lexer20build_0_int_or_floatEv>:

bool Lexer::build_0_int_or_float()
{
 8010662:	b580      	push	{r7, lr}
 8010664:	b08a      	sub	sp, #40	; 0x28
 8010666:	af00      	add	r7, sp, #0
 8010668:	6078      	str	r0, [r7, #4]
	if (char_buffer == '0')
 801066a:	687b      	ldr	r3, [r7, #4]
 801066c:	781b      	ldrb	r3, [r3, #0]
 801066e:	2b30      	cmp	r3, #48	; 0x30
 8010670:	d13e      	bne.n	80106f0 <_ZN5Lexer20build_0_int_or_floatEv+0x8e>
	{
		char_buffer = Transmitter::receive_code_char();
 8010672:	f008 fc83 	bl	8018f7c <_ZN11Transmitter17receive_code_charEv>
 8010676:	4603      	mov	r3, r0
 8010678:	461a      	mov	r2, r3
 801067a:	687b      	ldr	r3, [r7, #4]
 801067c:	701a      	strb	r2, [r3, #0]
		if (char_buffer == '.')
 801067e:	687b      	ldr	r3, [r7, #4]
 8010680:	781b      	ldrb	r3, [r3, #0]
 8010682:	2b2e      	cmp	r3, #46	; 0x2e
 8010684:	d125      	bne.n	80106d2 <_ZN5Lexer20build_0_int_or_floatEv+0x70>
		{
			std::string word;
 8010686:	f107 0308 	add.w	r3, r7, #8
 801068a:	4618      	mov	r0, r3
 801068c:	f012 fc92 	bl	8022fb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
			build_int(word);
 8010690:	f107 0308 	add.w	r3, r7, #8
 8010694:	4619      	mov	r1, r3
 8010696:	6878      	ldr	r0, [r7, #4]
 8010698:	f7ff ff5c 	bl	8010554 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
			product.type = TOKEN_FLOAT;
 801069c:	687b      	ldr	r3, [r7, #4]
 801069e:	2204      	movs	r2, #4
 80106a0:	711a      	strb	r2, [r3, #4]
			product.value = std::stof(word);
 80106a2:	f107 0308 	add.w	r3, r7, #8
 80106a6:	2100      	movs	r1, #0
 80106a8:	4618      	mov	r0, r3
 80106aa:	f7ff fda7 	bl	80101fc <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>
 80106ae:	eef0 7a40 	vmov.f32	s15, s0
 80106b2:	edc7 7a08 	vstr	s15, [r7, #32]
 80106b6:	687b      	ldr	r3, [r7, #4]
 80106b8:	3308      	adds	r3, #8
 80106ba:	f107 0220 	add.w	r2, r7, #32
 80106be:	4611      	mov	r1, r2
 80106c0:	4618      	mov	r0, r3
 80106c2:	f000 fcfa 	bl	80110ba <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
			std::string word;
 80106c6:	f107 0308 	add.w	r3, r7, #8
 80106ca:	4618      	mov	r0, r3
 80106cc:	f012 fc93 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80106d0:	e00c      	b.n	80106ec <_ZN5Lexer20build_0_int_or_floatEv+0x8a>
		}
		else
		{
			product.type = TOKEN_INT;
 80106d2:	687b      	ldr	r3, [r7, #4]
 80106d4:	2203      	movs	r2, #3
 80106d6:	711a      	strb	r2, [r3, #4]
			product.value = 0;
 80106d8:	2300      	movs	r3, #0
 80106da:	627b      	str	r3, [r7, #36]	; 0x24
 80106dc:	687b      	ldr	r3, [r7, #4]
 80106de:	3308      	adds	r3, #8
 80106e0:	f107 0224 	add.w	r2, r7, #36	; 0x24
 80106e4:	4611      	mov	r1, r2
 80106e6:	4618      	mov	r0, r3
 80106e8:	f000 fcbd 	bl	8011066 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
		}
		return true;
 80106ec:	2301      	movs	r3, #1
 80106ee:	e000      	b.n	80106f2 <_ZN5Lexer20build_0_int_or_floatEv+0x90>
	}
	return false;
 80106f0:	2300      	movs	r3, #0
}
 80106f2:	4618      	mov	r0, r3
 80106f4:	3728      	adds	r7, #40	; 0x28
 80106f6:	46bd      	mov	sp, r7
 80106f8:	bd80      	pop	{r7, pc}
	...

080106fc <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_escape_char(std::string &word)
{
 80106fc:	b580      	push	{r7, lr}
 80106fe:	b084      	sub	sp, #16
 8010700:	af00      	add	r7, sp, #0
 8010702:	6078      	str	r0, [r7, #4]
 8010704:	6039      	str	r1, [r7, #0]
	char true_char;
	switch (char_buffer)
 8010706:	687b      	ldr	r3, [r7, #4]
 8010708:	781b      	ldrb	r3, [r3, #0]
 801070a:	2b76      	cmp	r3, #118	; 0x76
 801070c:	dc66      	bgt.n	80107dc <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 801070e:	2b5c      	cmp	r3, #92	; 0x5c
 8010710:	da04      	bge.n	801071c <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20>
 8010712:	2b22      	cmp	r3, #34	; 0x22
 8010714:	d047      	beq.n	80107a6 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xaa>
 8010716:	2b27      	cmp	r3, #39	; 0x27
 8010718:	d03f      	beq.n	801079a <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9e>
		break;
	case 'v':
		true_char = '\v';
		break;
	default:
		return;
 801071a:	e05f      	b.n	80107dc <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 801071c:	3b5c      	subs	r3, #92	; 0x5c
 801071e:	2b1a      	cmp	r3, #26
 8010720:	d85c      	bhi.n	80107dc <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 8010722:	a201      	add	r2, pc, #4	; (adr r2, 8010728 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>)
 8010724:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010728:	080107a1 	.word	0x080107a1
 801072c:	080107dd 	.word	0x080107dd
 8010730:	080107dd 	.word	0x080107dd
 8010734:	080107dd 	.word	0x080107dd
 8010738:	080107dd 	.word	0x080107dd
 801073c:	080107dd 	.word	0x080107dd
 8010740:	080107b9 	.word	0x080107b9
 8010744:	080107dd 	.word	0x080107dd
 8010748:	080107dd 	.word	0x080107dd
 801074c:	080107dd 	.word	0x080107dd
 8010750:	080107bf 	.word	0x080107bf
 8010754:	080107dd 	.word	0x080107dd
 8010758:	080107dd 	.word	0x080107dd
 801075c:	080107dd 	.word	0x080107dd
 8010760:	080107dd 	.word	0x080107dd
 8010764:	080107dd 	.word	0x080107dd
 8010768:	080107dd 	.word	0x080107dd
 801076c:	080107dd 	.word	0x080107dd
 8010770:	08010795 	.word	0x08010795
 8010774:	080107dd 	.word	0x080107dd
 8010778:	080107dd 	.word	0x080107dd
 801077c:	080107dd 	.word	0x080107dd
 8010780:	080107ad 	.word	0x080107ad
 8010784:	080107dd 	.word	0x080107dd
 8010788:	080107b3 	.word	0x080107b3
 801078c:	080107dd 	.word	0x080107dd
 8010790:	080107c5 	.word	0x080107c5
		true_char = '\n';
 8010794:	230a      	movs	r3, #10
 8010796:	73fb      	strb	r3, [r7, #15]
		break;
 8010798:	e017      	b.n	80107ca <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\'';
 801079a:	2327      	movs	r3, #39	; 0x27
 801079c:	73fb      	strb	r3, [r7, #15]
		break;
 801079e:	e014      	b.n	80107ca <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\\';
 80107a0:	235c      	movs	r3, #92	; 0x5c
 80107a2:	73fb      	strb	r3, [r7, #15]
		break;
 80107a4:	e011      	b.n	80107ca <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\"';
 80107a6:	2322      	movs	r3, #34	; 0x22
 80107a8:	73fb      	strb	r3, [r7, #15]
		break;
 80107aa:	e00e      	b.n	80107ca <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\r';
 80107ac:	230d      	movs	r3, #13
 80107ae:	73fb      	strb	r3, [r7, #15]
		break;
 80107b0:	e00b      	b.n	80107ca <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\t';
 80107b2:	2309      	movs	r3, #9
 80107b4:	73fb      	strb	r3, [r7, #15]
		break;
 80107b6:	e008      	b.n	80107ca <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\b';
 80107b8:	2308      	movs	r3, #8
 80107ba:	73fb      	strb	r3, [r7, #15]
		break;
 80107bc:	e005      	b.n	80107ca <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\f';
 80107be:	230c      	movs	r3, #12
 80107c0:	73fb      	strb	r3, [r7, #15]
		break;
 80107c2:	e002      	b.n	80107ca <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\v';
 80107c4:	230b      	movs	r3, #11
 80107c6:	73fb      	strb	r3, [r7, #15]
		break;
 80107c8:	bf00      	nop
	}
	word.pop_back();
 80107ca:	6838      	ldr	r0, [r7, #0]
 80107cc:	f012 fca1 	bl	8023112 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>
	word.push_back(true_char);
 80107d0:	7bfb      	ldrb	r3, [r7, #15]
 80107d2:	4619      	mov	r1, r3
 80107d4:	6838      	ldr	r0, [r7, #0]
 80107d6:	f012 fc7d 	bl	80230d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 80107da:	e000      	b.n	80107de <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe2>
		return;
 80107dc:	bf00      	nop
}
 80107de:	3710      	adds	r7, #16
 80107e0:	46bd      	mov	sp, r7
 80107e2:	bd80      	pop	{r7, pc}

080107e4 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::add_string_char(std::string &word)
{
 80107e4:	b580      	push	{r7, lr}
 80107e6:	b082      	sub	sp, #8
 80107e8:	af00      	add	r7, sp, #0
 80107ea:	6078      	str	r0, [r7, #4]
 80107ec:	6039      	str	r1, [r7, #0]
	if (word.back() == '\\')
 80107ee:	6838      	ldr	r0, [r7, #0]
 80107f0:	f012 fc6b 	bl	80230ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
 80107f4:	4603      	mov	r3, r0
 80107f6:	781b      	ldrb	r3, [r3, #0]
 80107f8:	2b5c      	cmp	r3, #92	; 0x5c
 80107fa:	bf0c      	ite	eq
 80107fc:	2301      	moveq	r3, #1
 80107fe:	2300      	movne	r3, #0
 8010800:	b2db      	uxtb	r3, r3
 8010802:	2b00      	cmp	r3, #0
 8010804:	d004      	beq.n	8010810 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>
	{
		match_escape_char(word);
 8010806:	6839      	ldr	r1, [r7, #0]
 8010808:	6878      	ldr	r0, [r7, #4]
 801080a:	f7ff ff77 	bl	80106fc <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801080e:	e005      	b.n	801081c <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	}
	else
	{
		word.push_back(char_buffer);
 8010810:	687b      	ldr	r3, [r7, #4]
 8010812:	781b      	ldrb	r3, [r3, #0]
 8010814:	4619      	mov	r1, r3
 8010816:	6838      	ldr	r0, [r7, #0]
 8010818:	f012 fc5c 	bl	80230d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
	}
	char_buffer = Transmitter::receive_code_char();
 801081c:	f008 fbae 	bl	8018f7c <_ZN11Transmitter17receive_code_charEv>
 8010820:	4603      	mov	r3, r0
 8010822:	461a      	mov	r2, r3
 8010824:	687b      	ldr	r3, [r7, #4]
 8010826:	701a      	strb	r2, [r3, #0]
}
 8010828:	bf00      	nop
 801082a:	3708      	adds	r7, #8
 801082c:	46bd      	mov	sp, r7
 801082e:	bd80      	pop	{r7, pc}

08010830 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_string_content(std::string &word)
{
 8010830:	b580      	push	{r7, lr}
 8010832:	b082      	sub	sp, #8
 8010834:	af00      	add	r7, sp, #0
 8010836:	6078      	str	r0, [r7, #4]
 8010838:	6039      	str	r1, [r7, #0]
	char_buffer = Transmitter::receive_code_char();
 801083a:	f008 fb9f 	bl	8018f7c <_ZN11Transmitter17receive_code_charEv>
 801083e:	4603      	mov	r3, r0
 8010840:	461a      	mov	r2, r3
 8010842:	687b      	ldr	r3, [r7, #4]
 8010844:	701a      	strb	r2, [r3, #0]
	while (!(char_buffer == '\"' && word.back() != '\\'))
 8010846:	687b      	ldr	r3, [r7, #4]
 8010848:	781b      	ldrb	r3, [r3, #0]
 801084a:	2b22      	cmp	r3, #34	; 0x22
 801084c:	d106      	bne.n	801085c <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>
 801084e:	6838      	ldr	r0, [r7, #0]
 8010850:	f012 fc3b 	bl	80230ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
 8010854:	4603      	mov	r3, r0
 8010856:	781b      	ldrb	r3, [r3, #0]
 8010858:	2b5c      	cmp	r3, #92	; 0x5c
 801085a:	d101      	bne.n	8010860 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x30>
 801085c:	2301      	movs	r3, #1
 801085e:	e000      	b.n	8010862 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x32>
 8010860:	2300      	movs	r3, #0
 8010862:	2b00      	cmp	r3, #0
 8010864:	d004      	beq.n	8010870 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x40>
	{
		add_string_char(word);
 8010866:	6839      	ldr	r1, [r7, #0]
 8010868:	6878      	ldr	r0, [r7, #4]
 801086a:	f7ff ffbb 	bl	80107e4 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
	while (!(char_buffer == '\"' && word.back() != '\\'))
 801086e:	e7ea      	b.n	8010846 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x16>
	}
	char_buffer = Transmitter::receive_code_char();
 8010870:	f008 fb84 	bl	8018f7c <_ZN11Transmitter17receive_code_charEv>
 8010874:	4603      	mov	r3, r0
 8010876:	461a      	mov	r2, r3
 8010878:	687b      	ldr	r3, [r7, #4]
 801087a:	701a      	strb	r2, [r3, #0]
}
 801087c:	bf00      	nop
 801087e:	3708      	adds	r7, #8
 8010880:	46bd      	mov	sp, r7
 8010882:	bd80      	pop	{r7, pc}

08010884 <_ZN5Lexer12build_stringEv>:

bool Lexer::build_string()
{
 8010884:	b590      	push	{r4, r7, lr}
 8010886:	b08f      	sub	sp, #60	; 0x3c
 8010888:	af00      	add	r7, sp, #0
 801088a:	6078      	str	r0, [r7, #4]
	if (char_buffer == '\"')
 801088c:	687b      	ldr	r3, [r7, #4]
 801088e:	781b      	ldrb	r3, [r3, #0]
 8010890:	2b22      	cmp	r3, #34	; 0x22
 8010892:	d129      	bne.n	80108e8 <_ZN5Lexer12build_stringEv+0x64>
	{
		std::string word;
 8010894:	f107 0308 	add.w	r3, r7, #8
 8010898:	4618      	mov	r0, r3
 801089a:	f012 fb8b 	bl	8022fb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_string_content(word);
 801089e:	f107 0308 	add.w	r3, r7, #8
 80108a2:	4619      	mov	r1, r3
 80108a4:	6878      	ldr	r0, [r7, #4]
 80108a6:	f7ff ffc3 	bl	8010830 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		product.type = TOKEN_STRING;
 80108aa:	687b      	ldr	r3, [r7, #4]
 80108ac:	220f      	movs	r2, #15
 80108ae:	711a      	strb	r2, [r3, #4]
		product.value = std::string(word);
 80108b0:	f107 0208 	add.w	r2, r7, #8
 80108b4:	f107 0320 	add.w	r3, r7, #32
 80108b8:	4611      	mov	r1, r2
 80108ba:	4618      	mov	r0, r3
 80108bc:	f012 fccc 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80108c0:	687b      	ldr	r3, [r7, #4]
 80108c2:	3308      	adds	r3, #8
 80108c4:	f107 0220 	add.w	r2, r7, #32
 80108c8:	4611      	mov	r1, r2
 80108ca:	4618      	mov	r0, r3
 80108cc:	f000 fb9f 	bl	801100e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
 80108d0:	f107 0320 	add.w	r3, r7, #32
 80108d4:	4618      	mov	r0, r3
 80108d6:	f012 fb8e 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		return true;
 80108da:	2401      	movs	r4, #1
		std::string word;
 80108dc:	f107 0308 	add.w	r3, r7, #8
 80108e0:	4618      	mov	r0, r3
 80108e2:	f012 fb88 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80108e6:	e000      	b.n	80108ea <_ZN5Lexer12build_stringEv+0x66>
	}
	return false;
 80108e8:	2400      	movs	r4, #0
 80108ea:	4623      	mov	r3, r4
}
 80108ec:	4618      	mov	r0, r3
 80108ee:	373c      	adds	r7, #60	; 0x3c
 80108f0:	46bd      	mov	sp, r7
 80108f2:	bd90      	pop	{r4, r7, pc}

080108f4 <_ZN5Lexer17build_token_valueEv>:

bool Lexer::build_token_value()
{
 80108f4:	b580      	push	{r7, lr}
 80108f6:	b082      	sub	sp, #8
 80108f8:	af00      	add	r7, sp, #0
 80108fa:	6078      	str	r0, [r7, #4]
	return match_single_char() || match_double_char() || build_keyword_or_id()
 80108fc:	6878      	ldr	r0, [r7, #4]
 80108fe:	f7ff fd1f 	bl	8010340 <_ZN5Lexer17match_single_charEv>
 8010902:	4603      	mov	r3, r0
			|| build_int_or_float() || build_0_int_or_float() || build_string();
 8010904:	2b00      	cmp	r3, #0
 8010906:	d11d      	bne.n	8010944 <_ZN5Lexer17build_token_valueEv+0x50>
	return match_single_char() || match_double_char() || build_keyword_or_id()
 8010908:	6878      	ldr	r0, [r7, #4]
 801090a:	f7ff fd4d 	bl	80103a8 <_ZN5Lexer17match_double_charEv>
 801090e:	4603      	mov	r3, r0
 8010910:	2b00      	cmp	r3, #0
 8010912:	d117      	bne.n	8010944 <_ZN5Lexer17build_token_valueEv+0x50>
 8010914:	6878      	ldr	r0, [r7, #4]
 8010916:	f7ff fdf3 	bl	8010500 <_ZN5Lexer19build_keyword_or_idEv>
 801091a:	4603      	mov	r3, r0
 801091c:	2b00      	cmp	r3, #0
 801091e:	d111      	bne.n	8010944 <_ZN5Lexer17build_token_valueEv+0x50>
			|| build_int_or_float() || build_0_int_or_float() || build_string();
 8010920:	6878      	ldr	r0, [r7, #4]
 8010922:	f7ff fe6e 	bl	8010602 <_ZN5Lexer18build_int_or_floatEv>
 8010926:	4603      	mov	r3, r0
 8010928:	2b00      	cmp	r3, #0
 801092a:	d10b      	bne.n	8010944 <_ZN5Lexer17build_token_valueEv+0x50>
 801092c:	6878      	ldr	r0, [r7, #4]
 801092e:	f7ff fe98 	bl	8010662 <_ZN5Lexer20build_0_int_or_floatEv>
 8010932:	4603      	mov	r3, r0
 8010934:	2b00      	cmp	r3, #0
 8010936:	d105      	bne.n	8010944 <_ZN5Lexer17build_token_valueEv+0x50>
 8010938:	6878      	ldr	r0, [r7, #4]
 801093a:	f7ff ffa3 	bl	8010884 <_ZN5Lexer12build_stringEv>
 801093e:	4603      	mov	r3, r0
 8010940:	2b00      	cmp	r3, #0
 8010942:	d001      	beq.n	8010948 <_ZN5Lexer17build_token_valueEv+0x54>
 8010944:	2301      	movs	r3, #1
 8010946:	e000      	b.n	801094a <_ZN5Lexer17build_token_valueEv+0x56>
 8010948:	2300      	movs	r3, #0
}
 801094a:	4618      	mov	r0, r3
 801094c:	3708      	adds	r7, #8
 801094e:	46bd      	mov	sp, r7
 8010950:	bd80      	pop	{r7, pc}

08010952 <_ZN5LexerD1Ev>:
#define INC_LEXER_H_

#include "Transmitter.h"
#include "Token.h"

class Lexer
 8010952:	b580      	push	{r7, lr}
 8010954:	b082      	sub	sp, #8
 8010956:	af00      	add	r7, sp, #0
 8010958:	6078      	str	r0, [r7, #4]
 801095a:	687b      	ldr	r3, [r7, #4]
 801095c:	3304      	adds	r3, #4
 801095e:	4618      	mov	r0, r3
 8010960:	f7ff fccf 	bl	8010302 <_ZN5TokenD1Ev>
 8010964:	687b      	ldr	r3, [r7, #4]
 8010966:	4618      	mov	r0, r3
 8010968:	3708      	adds	r7, #8
 801096a:	46bd      	mov	sp, r7
 801096c:	bd80      	pop	{r7, pc}
	...

08010970 <__tcf_0>:

Token Lexer::build_token()
{
	static Lexer lex;
 8010970:	b580      	push	{r7, lr}
 8010972:	af00      	add	r7, sp, #0
 8010974:	4801      	ldr	r0, [pc, #4]	; (801097c <__tcf_0+0xc>)
 8010976:	f7ff ffec 	bl	8010952 <_ZN5LexerD1Ev>
 801097a:	bd80      	pop	{r7, pc}
 801097c:	20000390 	.word	0x20000390

08010980 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Move_ctor_base(const _Move_ctor_base&) = default;
 8010980:	b580      	push	{r7, lr}
 8010982:	b082      	sub	sp, #8
 8010984:	af00      	add	r7, sp, #0
 8010986:	6078      	str	r0, [r7, #4]
 8010988:	6039      	str	r1, [r7, #0]
 801098a:	687b      	ldr	r3, [r7, #4]
 801098c:	683a      	ldr	r2, [r7, #0]
 801098e:	4611      	mov	r1, r2
 8010990:	4618      	mov	r0, r3
 8010992:	f000 fbbc 	bl	801110e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 8010996:	687b      	ldr	r3, [r7, #4]
 8010998:	4618      	mov	r0, r3
 801099a:	3708      	adds	r7, #8
 801099c:	46bd      	mov	sp, r7
 801099e:	bd80      	pop	{r7, pc}

080109a0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Copy_assign_base(const _Copy_assign_base&) = default;
 80109a0:	b580      	push	{r7, lr}
 80109a2:	b082      	sub	sp, #8
 80109a4:	af00      	add	r7, sp, #0
 80109a6:	6078      	str	r0, [r7, #4]
 80109a8:	6039      	str	r1, [r7, #0]
 80109aa:	687b      	ldr	r3, [r7, #4]
 80109ac:	683a      	ldr	r2, [r7, #0]
 80109ae:	4611      	mov	r1, r2
 80109b0:	4618      	mov	r0, r3
 80109b2:	f7ff ffe5 	bl	8010980 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 80109b6:	687b      	ldr	r3, [r7, #4]
 80109b8:	4618      	mov	r0, r3
 80109ba:	3708      	adds	r7, #8
 80109bc:	46bd      	mov	sp, r7
 80109be:	bd80      	pop	{r7, pc}

080109c0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Move_assign_base(const _Move_assign_base&) = default;
 80109c0:	b580      	push	{r7, lr}
 80109c2:	b082      	sub	sp, #8
 80109c4:	af00      	add	r7, sp, #0
 80109c6:	6078      	str	r0, [r7, #4]
 80109c8:	6039      	str	r1, [r7, #0]
 80109ca:	687b      	ldr	r3, [r7, #4]
 80109cc:	683a      	ldr	r2, [r7, #0]
 80109ce:	4611      	mov	r1, r2
 80109d0:	4618      	mov	r0, r3
 80109d2:	f7ff ffe5 	bl	80109a0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 80109d6:	687b      	ldr	r3, [r7, #4]
 80109d8:	4618      	mov	r0, r3
 80109da:	3708      	adds	r7, #8
 80109dc:	46bd      	mov	sp, r7
 80109de:	bd80      	pop	{r7, pc}

080109e0 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Variant_base(const _Variant_base&) = default;
 80109e0:	b580      	push	{r7, lr}
 80109e2:	b082      	sub	sp, #8
 80109e4:	af00      	add	r7, sp, #0
 80109e6:	6078      	str	r0, [r7, #4]
 80109e8:	6039      	str	r1, [r7, #0]
 80109ea:	687b      	ldr	r3, [r7, #4]
 80109ec:	683a      	ldr	r2, [r7, #0]
 80109ee:	4611      	mov	r1, r2
 80109f0:	4618      	mov	r0, r3
 80109f2:	f7ff ffe5 	bl	80109c0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 80109f6:	687b      	ldr	r3, [r7, #4]
 80109f8:	4618      	mov	r0, r3
 80109fa:	3708      	adds	r7, #8
 80109fc:	46bd      	mov	sp, r7
 80109fe:	bd80      	pop	{r7, pc}

08010a00 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS6_>:
      variant(const variant& __rhs) = default;
 8010a00:	b580      	push	{r7, lr}
 8010a02:	b082      	sub	sp, #8
 8010a04:	af00      	add	r7, sp, #0
 8010a06:	6078      	str	r0, [r7, #4]
 8010a08:	6039      	str	r1, [r7, #0]
 8010a0a:	687b      	ldr	r3, [r7, #4]
 8010a0c:	683a      	ldr	r2, [r7, #0]
 8010a0e:	4611      	mov	r1, r2
 8010a10:	4618      	mov	r0, r3
 8010a12:	f7ff ffe5 	bl	80109e0 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 8010a16:	687b      	ldr	r3, [r7, #4]
 8010a18:	4618      	mov	r0, r3
 8010a1a:	3708      	adds	r7, #8
 8010a1c:	46bd      	mov	sp, r7
 8010a1e:	bd80      	pop	{r7, pc}

08010a20 <_ZN5TokenC1ERKS_>:
 8010a20:	b580      	push	{r7, lr}
 8010a22:	b082      	sub	sp, #8
 8010a24:	af00      	add	r7, sp, #0
 8010a26:	6078      	str	r0, [r7, #4]
 8010a28:	6039      	str	r1, [r7, #0]
 8010a2a:	683b      	ldr	r3, [r7, #0]
 8010a2c:	781a      	ldrb	r2, [r3, #0]
 8010a2e:	687b      	ldr	r3, [r7, #4]
 8010a30:	701a      	strb	r2, [r3, #0]
 8010a32:	687b      	ldr	r3, [r7, #4]
 8010a34:	1d1a      	adds	r2, r3, #4
 8010a36:	683b      	ldr	r3, [r7, #0]
 8010a38:	3304      	adds	r3, #4
 8010a3a:	4619      	mov	r1, r3
 8010a3c:	4610      	mov	r0, r2
 8010a3e:	f7ff ffdf 	bl	8010a00 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS6_>
 8010a42:	687b      	ldr	r3, [r7, #4]
 8010a44:	4618      	mov	r0, r3
 8010a46:	3708      	adds	r7, #8
 8010a48:	46bd      	mov	sp, r7
 8010a4a:	bd80      	pop	{r7, pc}

08010a4c <_ZN5Lexer11build_tokenEv>:
{
 8010a4c:	b580      	push	{r7, lr}
 8010a4e:	b082      	sub	sp, #8
 8010a50:	af00      	add	r7, sp, #0
 8010a52:	6078      	str	r0, [r7, #4]
	static Lexer lex;
 8010a54:	4b1b      	ldr	r3, [pc, #108]	; (8010ac4 <_ZN5Lexer11build_tokenEv+0x78>)
 8010a56:	781b      	ldrb	r3, [r3, #0]
 8010a58:	f3bf 8f5b 	dmb	ish
 8010a5c:	b2db      	uxtb	r3, r3
 8010a5e:	f003 0301 	and.w	r3, r3, #1
 8010a62:	2b00      	cmp	r3, #0
 8010a64:	bf0c      	ite	eq
 8010a66:	2301      	moveq	r3, #1
 8010a68:	2300      	movne	r3, #0
 8010a6a:	b2db      	uxtb	r3, r3
 8010a6c:	2b00      	cmp	r3, #0
 8010a6e:	d013      	beq.n	8010a98 <_ZN5Lexer11build_tokenEv+0x4c>
 8010a70:	4814      	ldr	r0, [pc, #80]	; (8010ac4 <_ZN5Lexer11build_tokenEv+0x78>)
 8010a72:	f012 f8da 	bl	8022c2a <__cxa_guard_acquire>
 8010a76:	4603      	mov	r3, r0
 8010a78:	2b00      	cmp	r3, #0
 8010a7a:	bf14      	ite	ne
 8010a7c:	2301      	movne	r3, #1
 8010a7e:	2300      	moveq	r3, #0
 8010a80:	b2db      	uxtb	r3, r3
 8010a82:	2b00      	cmp	r3, #0
 8010a84:	d008      	beq.n	8010a98 <_ZN5Lexer11build_tokenEv+0x4c>
 8010a86:	4810      	ldr	r0, [pc, #64]	; (8010ac8 <_ZN5Lexer11build_tokenEv+0x7c>)
 8010a88:	f7ff fc49 	bl	801031e <_ZN5LexerC1Ev>
 8010a8c:	480d      	ldr	r0, [pc, #52]	; (8010ac4 <_ZN5Lexer11build_tokenEv+0x78>)
 8010a8e:	f012 f8d8 	bl	8022c42 <__cxa_guard_release>
 8010a92:	480e      	ldr	r0, [pc, #56]	; (8010acc <_ZN5Lexer11build_tokenEv+0x80>)
 8010a94:	f013 fbb5 	bl	8024202 <atexit>
	lex.get_working_char();
 8010a98:	480b      	ldr	r0, [pc, #44]	; (8010ac8 <_ZN5Lexer11build_tokenEv+0x7c>)
 8010a9a:	f000 f86f 	bl	8010b7c <_ZN5Lexer16get_working_charEv>

	if (lex.build_token_value())
 8010a9e:	480a      	ldr	r0, [pc, #40]	; (8010ac8 <_ZN5Lexer11build_tokenEv+0x7c>)
 8010aa0:	f7ff ff28 	bl	80108f4 <_ZN5Lexer17build_token_valueEv>
 8010aa4:	4603      	mov	r3, r0
 8010aa6:	2b00      	cmp	r3, #0
 8010aa8:	d004      	beq.n	8010ab4 <_ZN5Lexer11build_tokenEv+0x68>
	{
		return lex.product;
 8010aaa:	4909      	ldr	r1, [pc, #36]	; (8010ad0 <_ZN5Lexer11build_tokenEv+0x84>)
 8010aac:	6878      	ldr	r0, [r7, #4]
 8010aae:	f7ff ffb7 	bl	8010a20 <_ZN5TokenC1ERKS_>
 8010ab2:	e003      	b.n	8010abc <_ZN5Lexer11build_tokenEv+0x70>
	}

	return lex.product;
 8010ab4:	4906      	ldr	r1, [pc, #24]	; (8010ad0 <_ZN5Lexer11build_tokenEv+0x84>)
 8010ab6:	6878      	ldr	r0, [r7, #4]
 8010ab8:	f7ff ffb2 	bl	8010a20 <_ZN5TokenC1ERKS_>
}
 8010abc:	6878      	ldr	r0, [r7, #4]
 8010abe:	3708      	adds	r7, #8
 8010ac0:	46bd      	mov	sp, r7
 8010ac2:	bd80      	pop	{r7, pc}
 8010ac4:	200003b4 	.word	0x200003b4
 8010ac8:	20000390 	.word	0x20000390
 8010acc:	08010971 	.word	0x08010971
 8010ad0:	20000394 	.word	0x20000394

08010ad4 <_ZN5Lexer12skip_commentEv>:

void Lexer::skip_comment()
{
 8010ad4:	b580      	push	{r7, lr}
 8010ad6:	b082      	sub	sp, #8
 8010ad8:	af00      	add	r7, sp, #0
 8010ada:	6078      	str	r0, [r7, #4]
	while (char_buffer == '#')
 8010adc:	687b      	ldr	r3, [r7, #4]
 8010ade:	781b      	ldrb	r3, [r3, #0]
 8010ae0:	2b23      	cmp	r3, #35	; 0x23
 8010ae2:	d111      	bne.n	8010b08 <_ZN5Lexer12skip_commentEv+0x34>
	{
		while (char_buffer != '\n')
 8010ae4:	687b      	ldr	r3, [r7, #4]
 8010ae6:	781b      	ldrb	r3, [r3, #0]
 8010ae8:	2b0a      	cmp	r3, #10
 8010aea:	d006      	beq.n	8010afa <_ZN5Lexer12skip_commentEv+0x26>
		{
			char_buffer = Transmitter::receive_code_char();
 8010aec:	f008 fa46 	bl	8018f7c <_ZN11Transmitter17receive_code_charEv>
 8010af0:	4603      	mov	r3, r0
 8010af2:	461a      	mov	r2, r3
 8010af4:	687b      	ldr	r3, [r7, #4]
 8010af6:	701a      	strb	r2, [r3, #0]
		while (char_buffer != '\n')
 8010af8:	e7f4      	b.n	8010ae4 <_ZN5Lexer12skip_commentEv+0x10>
		}
		char_buffer = Transmitter::receive_code_char();
 8010afa:	f008 fa3f 	bl	8018f7c <_ZN11Transmitter17receive_code_charEv>
 8010afe:	4603      	mov	r3, r0
 8010b00:	461a      	mov	r2, r3
 8010b02:	687b      	ldr	r3, [r7, #4]
 8010b04:	701a      	strb	r2, [r3, #0]
	while (char_buffer == '#')
 8010b06:	e7e9      	b.n	8010adc <_ZN5Lexer12skip_commentEv+0x8>
	}
}
 8010b08:	bf00      	nop
 8010b0a:	3708      	adds	r7, #8
 8010b0c:	46bd      	mov	sp, r7
 8010b0e:	bd80      	pop	{r7, pc}

08010b10 <_ZN5Lexer15skip_whitespaceEv>:

void Lexer::skip_whitespace()
{
 8010b10:	b580      	push	{r7, lr}
 8010b12:	b082      	sub	sp, #8
 8010b14:	af00      	add	r7, sp, #0
 8010b16:	6078      	str	r0, [r7, #4]
	while (isspace(char_buffer) && char_buffer != '\n')
 8010b18:	687b      	ldr	r3, [r7, #4]
 8010b1a:	781b      	ldrb	r3, [r3, #0]
 8010b1c:	4618      	mov	r0, r3
 8010b1e:	f013 fbb1 	bl	8024284 <isspace>
 8010b22:	4603      	mov	r3, r0
 8010b24:	2b00      	cmp	r3, #0
 8010b26:	d00a      	beq.n	8010b3e <_ZN5Lexer15skip_whitespaceEv+0x2e>
 8010b28:	687b      	ldr	r3, [r7, #4]
 8010b2a:	781b      	ldrb	r3, [r3, #0]
 8010b2c:	2b0a      	cmp	r3, #10
 8010b2e:	d006      	beq.n	8010b3e <_ZN5Lexer15skip_whitespaceEv+0x2e>
	{
		char_buffer = Transmitter::receive_code_char();
 8010b30:	f008 fa24 	bl	8018f7c <_ZN11Transmitter17receive_code_charEv>
 8010b34:	4603      	mov	r3, r0
 8010b36:	461a      	mov	r2, r3
 8010b38:	687b      	ldr	r3, [r7, #4]
 8010b3a:	701a      	strb	r2, [r3, #0]
	while (isspace(char_buffer) && char_buffer != '\n')
 8010b3c:	e7ec      	b.n	8010b18 <_ZN5Lexer15skip_whitespaceEv+0x8>
	}
}
 8010b3e:	bf00      	nop
 8010b40:	3708      	adds	r7, #8
 8010b42:	46bd      	mov	sp, r7
 8010b44:	bd80      	pop	{r7, pc}

08010b46 <_ZN5Lexer15is_invalid_charEv>:

bool Lexer::is_invalid_char()
{
 8010b46:	b580      	push	{r7, lr}
 8010b48:	b082      	sub	sp, #8
 8010b4a:	af00      	add	r7, sp, #0
 8010b4c:	6078      	str	r0, [r7, #4]
	return (isspace(char_buffer) && char_buffer != '\n') || char_buffer == '#';
 8010b4e:	687b      	ldr	r3, [r7, #4]
 8010b50:	781b      	ldrb	r3, [r3, #0]
 8010b52:	4618      	mov	r0, r3
 8010b54:	f013 fb96 	bl	8024284 <isspace>
 8010b58:	4603      	mov	r3, r0
 8010b5a:	2b00      	cmp	r3, #0
 8010b5c:	d003      	beq.n	8010b66 <_ZN5Lexer15is_invalid_charEv+0x20>
 8010b5e:	687b      	ldr	r3, [r7, #4]
 8010b60:	781b      	ldrb	r3, [r3, #0]
 8010b62:	2b0a      	cmp	r3, #10
 8010b64:	d103      	bne.n	8010b6e <_ZN5Lexer15is_invalid_charEv+0x28>
 8010b66:	687b      	ldr	r3, [r7, #4]
 8010b68:	781b      	ldrb	r3, [r3, #0]
 8010b6a:	2b23      	cmp	r3, #35	; 0x23
 8010b6c:	d101      	bne.n	8010b72 <_ZN5Lexer15is_invalid_charEv+0x2c>
 8010b6e:	2301      	movs	r3, #1
 8010b70:	e000      	b.n	8010b74 <_ZN5Lexer15is_invalid_charEv+0x2e>
 8010b72:	2300      	movs	r3, #0
}
 8010b74:	4618      	mov	r0, r3
 8010b76:	3708      	adds	r7, #8
 8010b78:	46bd      	mov	sp, r7
 8010b7a:	bd80      	pop	{r7, pc}

08010b7c <_ZN5Lexer16get_working_charEv>:

void Lexer::get_working_char()
{
 8010b7c:	b580      	push	{r7, lr}
 8010b7e:	b082      	sub	sp, #8
 8010b80:	af00      	add	r7, sp, #0
 8010b82:	6078      	str	r0, [r7, #4]
	while (is_invalid_char())
 8010b84:	6878      	ldr	r0, [r7, #4]
 8010b86:	f7ff ffde 	bl	8010b46 <_ZN5Lexer15is_invalid_charEv>
 8010b8a:	4603      	mov	r3, r0
 8010b8c:	2b00      	cmp	r3, #0
 8010b8e:	d006      	beq.n	8010b9e <_ZN5Lexer16get_working_charEv+0x22>
	{
		skip_comment();
 8010b90:	6878      	ldr	r0, [r7, #4]
 8010b92:	f7ff ff9f 	bl	8010ad4 <_ZN5Lexer12skip_commentEv>
		skip_whitespace();
 8010b96:	6878      	ldr	r0, [r7, #4]
 8010b98:	f7ff ffba 	bl	8010b10 <_ZN5Lexer15skip_whitespaceEv>
	while (is_invalid_char())
 8010b9c:	e7f2      	b.n	8010b84 <_ZN5Lexer16get_working_charEv+0x8>
	}
}
 8010b9e:	bf00      	nop
 8010ba0:	3708      	adds	r7, #8
 8010ba2:	46bd      	mov	sp, r7
 8010ba4:	bd80      	pop	{r7, pc}

08010ba6 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>:
      _Ret __ret;

      _CharT* __endptr;

      struct _Save_errno {
	_Save_errno() : _M_errno(errno) { errno = 0; }
 8010ba6:	b580      	push	{r7, lr}
 8010ba8:	b082      	sub	sp, #8
 8010baa:	af00      	add	r7, sp, #0
 8010bac:	6078      	str	r0, [r7, #4]
 8010bae:	f013 fb2f 	bl	8024210 <__errno>
 8010bb2:	4603      	mov	r3, r0
 8010bb4:	681a      	ldr	r2, [r3, #0]
 8010bb6:	687b      	ldr	r3, [r7, #4]
 8010bb8:	601a      	str	r2, [r3, #0]
 8010bba:	f013 fb29 	bl	8024210 <__errno>
 8010bbe:	4603      	mov	r3, r0
 8010bc0:	2200      	movs	r2, #0
 8010bc2:	601a      	str	r2, [r3, #0]
 8010bc4:	687b      	ldr	r3, [r7, #4]
 8010bc6:	4618      	mov	r0, r3
 8010bc8:	3708      	adds	r7, #8
 8010bca:	46bd      	mov	sp, r7
 8010bcc:	bd80      	pop	{r7, pc}

08010bce <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>:
	~_Save_errno() { if (errno == 0) errno = _M_errno; }
 8010bce:	b590      	push	{r4, r7, lr}
 8010bd0:	b083      	sub	sp, #12
 8010bd2:	af00      	add	r7, sp, #0
 8010bd4:	6078      	str	r0, [r7, #4]
 8010bd6:	f013 fb1b 	bl	8024210 <__errno>
 8010bda:	4603      	mov	r3, r0
 8010bdc:	681b      	ldr	r3, [r3, #0]
 8010bde:	2b00      	cmp	r3, #0
 8010be0:	bf0c      	ite	eq
 8010be2:	2301      	moveq	r3, #1
 8010be4:	2300      	movne	r3, #0
 8010be6:	b2db      	uxtb	r3, r3
 8010be8:	2b00      	cmp	r3, #0
 8010bea:	d005      	beq.n	8010bf8 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev+0x2a>
 8010bec:	687b      	ldr	r3, [r7, #4]
 8010bee:	681c      	ldr	r4, [r3, #0]
 8010bf0:	f013 fb0e 	bl	8024210 <__errno>
 8010bf4:	4603      	mov	r3, r0
 8010bf6:	601c      	str	r4, [r3, #0]
 8010bf8:	687b      	ldr	r3, [r7, #4]
 8010bfa:	4618      	mov	r0, r3
 8010bfc:	370c      	adds	r7, #12
 8010bfe:	46bd      	mov	sp, r7
 8010c00:	bd90      	pop	{r4, r7, pc}

08010c02 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkElSt17integral_constantIbLb1EE>:
      struct _Range_chk {
	  static bool
	  _S_chk(_TRet, std::false_type) { return false; }

	  static bool
	  _S_chk(_TRet __val, std::true_type) // only called when _Ret is int
 8010c02:	b480      	push	{r7}
 8010c04:	b083      	sub	sp, #12
 8010c06:	af00      	add	r7, sp, #0
 8010c08:	6078      	str	r0, [r7, #4]
 8010c0a:	7039      	strb	r1, [r7, #0]
	  {
	    return __val < _TRet(__numeric_traits<int>::__min)
	      || __val > _TRet(__numeric_traits<int>::__max);
 8010c0c:	2300      	movs	r3, #0
	  }
 8010c0e:	4618      	mov	r0, r3
 8010c10:	370c      	adds	r7, #12
 8010c12:	46bd      	mov	sp, r7
 8010c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c18:	4770      	bx	lr

08010c1a <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>:
    __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
 8010c1a:	b590      	push	{r4, r7, lr}
 8010c1c:	b08b      	sub	sp, #44	; 0x2c
 8010c1e:	af00      	add	r7, sp, #0
 8010c20:	60f8      	str	r0, [r7, #12]
 8010c22:	60b9      	str	r1, [r7, #8]
 8010c24:	607a      	str	r2, [r7, #4]
 8010c26:	603b      	str	r3, [r7, #0]
      } const __save_errno;
 8010c28:	f107 0314 	add.w	r3, r7, #20
 8010c2c:	4618      	mov	r0, r3
 8010c2e:	f7ff ffba 	bl	8010ba6 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>
      };

      const _TRet __tmp = __convf(__str, &__endptr, __base...);
 8010c32:	68fb      	ldr	r3, [r7, #12]
 8010c34:	f107 0118 	add.w	r1, r7, #24
 8010c38:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8010c3a:	6878      	ldr	r0, [r7, #4]
 8010c3c:	4798      	blx	r3
 8010c3e:	6278      	str	r0, [r7, #36]	; 0x24

      if (__endptr == __str)
 8010c40:	69bb      	ldr	r3, [r7, #24]
 8010c42:	687a      	ldr	r2, [r7, #4]
 8010c44:	429a      	cmp	r2, r3
 8010c46:	d102      	bne.n	8010c4e <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x34>
	std::__throw_invalid_argument(__name);
 8010c48:	68b8      	ldr	r0, [r7, #8]
 8010c4a:	f012 f8c8 	bl	8022dde <_ZSt24__throw_invalid_argumentPKc>
      else if (errno == ERANGE
 8010c4e:	f013 fadf 	bl	8024210 <__errno>
 8010c52:	4603      	mov	r3, r0
 8010c54:	681b      	ldr	r3, [r3, #0]
	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
 8010c56:	2b22      	cmp	r3, #34	; 0x22
 8010c58:	d006      	beq.n	8010c68 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x4e>
 8010c5a:	4621      	mov	r1, r4
 8010c5c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8010c5e:	f7ff ffd0 	bl	8010c02 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkElSt17integral_constantIbLb1EE>
 8010c62:	4603      	mov	r3, r0
 8010c64:	2b00      	cmp	r3, #0
 8010c66:	d001      	beq.n	8010c6c <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x52>
 8010c68:	2301      	movs	r3, #1
 8010c6a:	e000      	b.n	8010c6e <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x54>
 8010c6c:	2300      	movs	r3, #0
      else if (errno == ERANGE
 8010c6e:	2b00      	cmp	r3, #0
 8010c70:	d002      	beq.n	8010c78 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x5e>
	std::__throw_out_of_range(__name);
 8010c72:	68b8      	ldr	r0, [r7, #8]
 8010c74:	f012 f8b9 	bl	8022dea <_ZSt20__throw_out_of_rangePKc>
      else
	__ret = __tmp;
 8010c78:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010c7a:	623b      	str	r3, [r7, #32]

      if (__idx)
 8010c7c:	683b      	ldr	r3, [r7, #0]
 8010c7e:	2b00      	cmp	r3, #0
 8010c80:	d005      	beq.n	8010c8e <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x74>
	*__idx = __endptr - __str;
 8010c82:	69ba      	ldr	r2, [r7, #24]
 8010c84:	687b      	ldr	r3, [r7, #4]
 8010c86:	1ad3      	subs	r3, r2, r3
 8010c88:	461a      	mov	r2, r3
 8010c8a:	683b      	ldr	r3, [r7, #0]
 8010c8c:	601a      	str	r2, [r3, #0]

      return __ret;
 8010c8e:	6a3c      	ldr	r4, [r7, #32]
      } const __save_errno;
 8010c90:	f107 0314 	add.w	r3, r7, #20
 8010c94:	4618      	mov	r0, r3
 8010c96:	f7ff ff9a 	bl	8010bce <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>
      return __ret;
 8010c9a:	4623      	mov	r3, r4
    }
 8010c9c:	4618      	mov	r0, r3
 8010c9e:	372c      	adds	r7, #44	; 0x2c
 8010ca0:	46bd      	mov	sp, r7
 8010ca2:	bd90      	pop	{r4, r7, pc}

08010ca4 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>:
	_Save_errno() : _M_errno(errno) { errno = 0; }
 8010ca4:	b580      	push	{r7, lr}
 8010ca6:	b082      	sub	sp, #8
 8010ca8:	af00      	add	r7, sp, #0
 8010caa:	6078      	str	r0, [r7, #4]
 8010cac:	f013 fab0 	bl	8024210 <__errno>
 8010cb0:	4603      	mov	r3, r0
 8010cb2:	681a      	ldr	r2, [r3, #0]
 8010cb4:	687b      	ldr	r3, [r7, #4]
 8010cb6:	601a      	str	r2, [r3, #0]
 8010cb8:	f013 faaa 	bl	8024210 <__errno>
 8010cbc:	4603      	mov	r3, r0
 8010cbe:	2200      	movs	r2, #0
 8010cc0:	601a      	str	r2, [r3, #0]
 8010cc2:	687b      	ldr	r3, [r7, #4]
 8010cc4:	4618      	mov	r0, r3
 8010cc6:	3708      	adds	r7, #8
 8010cc8:	46bd      	mov	sp, r7
 8010cca:	bd80      	pop	{r7, pc}

08010ccc <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>:
	~_Save_errno() { if (errno == 0) errno = _M_errno; }
 8010ccc:	b590      	push	{r4, r7, lr}
 8010cce:	b083      	sub	sp, #12
 8010cd0:	af00      	add	r7, sp, #0
 8010cd2:	6078      	str	r0, [r7, #4]
 8010cd4:	f013 fa9c 	bl	8024210 <__errno>
 8010cd8:	4603      	mov	r3, r0
 8010cda:	681b      	ldr	r3, [r3, #0]
 8010cdc:	2b00      	cmp	r3, #0
 8010cde:	bf0c      	ite	eq
 8010ce0:	2301      	moveq	r3, #1
 8010ce2:	2300      	movne	r3, #0
 8010ce4:	b2db      	uxtb	r3, r3
 8010ce6:	2b00      	cmp	r3, #0
 8010ce8:	d005      	beq.n	8010cf6 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev+0x2a>
 8010cea:	687b      	ldr	r3, [r7, #4]
 8010cec:	681c      	ldr	r4, [r3, #0]
 8010cee:	f013 fa8f 	bl	8024210 <__errno>
 8010cf2:	4603      	mov	r3, r0
 8010cf4:	601c      	str	r4, [r3, #0]
 8010cf6:	687b      	ldr	r3, [r7, #4]
 8010cf8:	4618      	mov	r0, r3
 8010cfa:	370c      	adds	r7, #12
 8010cfc:	46bd      	mov	sp, r7
 8010cfe:	bd90      	pop	{r4, r7, pc}

08010d00 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkEfSt17integral_constantIbLb0EE>:
	  _S_chk(_TRet, std::false_type) { return false; }
 8010d00:	b480      	push	{r7}
 8010d02:	b083      	sub	sp, #12
 8010d04:	af00      	add	r7, sp, #0
 8010d06:	ed87 0a01 	vstr	s0, [r7, #4]
 8010d0a:	7038      	strb	r0, [r7, #0]
 8010d0c:	2300      	movs	r3, #0
 8010d0e:	4618      	mov	r0, r3
 8010d10:	370c      	adds	r7, #12
 8010d12:	46bd      	mov	sp, r7
 8010d14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d18:	4770      	bx	lr

08010d1a <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>:
    __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
 8010d1a:	b590      	push	{r4, r7, lr}
 8010d1c:	b08b      	sub	sp, #44	; 0x2c
 8010d1e:	af00      	add	r7, sp, #0
 8010d20:	60f8      	str	r0, [r7, #12]
 8010d22:	60b9      	str	r1, [r7, #8]
 8010d24:	607a      	str	r2, [r7, #4]
 8010d26:	603b      	str	r3, [r7, #0]
      } const __save_errno;
 8010d28:	f107 0314 	add.w	r3, r7, #20
 8010d2c:	4618      	mov	r0, r3
 8010d2e:	f7ff ffb9 	bl	8010ca4 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>
      const _TRet __tmp = __convf(__str, &__endptr, __base...);
 8010d32:	68fb      	ldr	r3, [r7, #12]
 8010d34:	f107 0218 	add.w	r2, r7, #24
 8010d38:	4611      	mov	r1, r2
 8010d3a:	6878      	ldr	r0, [r7, #4]
 8010d3c:	4798      	blx	r3
 8010d3e:	ed87 0a09 	vstr	s0, [r7, #36]	; 0x24
      if (__endptr == __str)
 8010d42:	69bb      	ldr	r3, [r7, #24]
 8010d44:	687a      	ldr	r2, [r7, #4]
 8010d46:	429a      	cmp	r2, r3
 8010d48:	d102      	bne.n	8010d50 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x36>
	std::__throw_invalid_argument(__name);
 8010d4a:	68b8      	ldr	r0, [r7, #8]
 8010d4c:	f012 f847 	bl	8022dde <_ZSt24__throw_invalid_argumentPKc>
      else if (errno == ERANGE
 8010d50:	f013 fa5e 	bl	8024210 <__errno>
 8010d54:	4603      	mov	r3, r0
 8010d56:	681b      	ldr	r3, [r3, #0]
	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
 8010d58:	2b22      	cmp	r3, #34	; 0x22
 8010d5a:	d007      	beq.n	8010d6c <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x52>
 8010d5c:	4620      	mov	r0, r4
 8010d5e:	ed97 0a09 	vldr	s0, [r7, #36]	; 0x24
 8010d62:	f7ff ffcd 	bl	8010d00 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkEfSt17integral_constantIbLb0EE>
 8010d66:	4603      	mov	r3, r0
 8010d68:	2b00      	cmp	r3, #0
 8010d6a:	d001      	beq.n	8010d70 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x56>
 8010d6c:	2301      	movs	r3, #1
 8010d6e:	e000      	b.n	8010d72 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x58>
 8010d70:	2300      	movs	r3, #0
      else if (errno == ERANGE
 8010d72:	2b00      	cmp	r3, #0
 8010d74:	d002      	beq.n	8010d7c <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x62>
	std::__throw_out_of_range(__name);
 8010d76:	68b8      	ldr	r0, [r7, #8]
 8010d78:	f012 f837 	bl	8022dea <_ZSt20__throw_out_of_rangePKc>
	__ret = __tmp;
 8010d7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010d7e:	623b      	str	r3, [r7, #32]
      if (__idx)
 8010d80:	683b      	ldr	r3, [r7, #0]
 8010d82:	2b00      	cmp	r3, #0
 8010d84:	d005      	beq.n	8010d92 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x78>
	*__idx = __endptr - __str;
 8010d86:	69ba      	ldr	r2, [r7, #24]
 8010d88:	687b      	ldr	r3, [r7, #4]
 8010d8a:	1ad3      	subs	r3, r2, r3
 8010d8c:	461a      	mov	r2, r3
 8010d8e:	683b      	ldr	r3, [r7, #0]
 8010d90:	601a      	str	r2, [r3, #0]
      return __ret;
 8010d92:	6a3c      	ldr	r4, [r7, #32]
      } const __save_errno;
 8010d94:	f107 0314 	add.w	r3, r7, #20
 8010d98:	4618      	mov	r0, r3
 8010d9a:	f7ff ff97 	bl	8010ccc <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>
      return __ret;
 8010d9e:	ee07 4a90 	vmov	s15, r4
    }
 8010da2:	eeb0 0a67 	vmov.f32	s0, s15
 8010da6:	372c      	adds	r7, #44	; 0x2c
 8010da8:	46bd      	mov	sp, r7
 8010daa:	bd90      	pop	{r4, r7, pc}

08010dac <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8010dac:	b580      	push	{r7, lr}
 8010dae:	b082      	sub	sp, #8
 8010db0:	af00      	add	r7, sp, #0
 8010db2:	6078      	str	r0, [r7, #4]
 8010db4:	7039      	strb	r1, [r7, #0]
 8010db6:	687b      	ldr	r3, [r7, #4]
 8010db8:	4611      	mov	r1, r2
 8010dba:	4618      	mov	r0, r3
 8010dbc:	f000 f9df 	bl	801117e <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8010dc0:	687b      	ldr	r3, [r7, #4]
 8010dc2:	4618      	mov	r0, r3
 8010dc4:	3708      	adds	r7, #8
 8010dc6:	46bd      	mov	sp, r7
 8010dc8:	bd80      	pop	{r7, pc}

08010dca <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8010dca:	b580      	push	{r7, lr}
 8010dcc:	b082      	sub	sp, #8
 8010dce:	af00      	add	r7, sp, #0
 8010dd0:	6078      	str	r0, [r7, #4]
 8010dd2:	7039      	strb	r1, [r7, #0]
 8010dd4:	687b      	ldr	r3, [r7, #4]
 8010dd6:	4611      	mov	r1, r2
 8010dd8:	4618      	mov	r0, r3
 8010dda:	f7ff ffe7 	bl	8010dac <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8010dde:	687b      	ldr	r3, [r7, #4]
 8010de0:	4618      	mov	r0, r3
 8010de2:	3708      	adds	r7, #8
 8010de4:	46bd      	mov	sp, r7
 8010de6:	bd80      	pop	{r7, pc}

08010de8 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8010de8:	b580      	push	{r7, lr}
 8010dea:	b082      	sub	sp, #8
 8010dec:	af00      	add	r7, sp, #0
 8010dee:	6078      	str	r0, [r7, #4]
 8010df0:	7039      	strb	r1, [r7, #0]
 8010df2:	687b      	ldr	r3, [r7, #4]
 8010df4:	4611      	mov	r1, r2
 8010df6:	4618      	mov	r0, r3
 8010df8:	f7ff ffe7 	bl	8010dca <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8010dfc:	687b      	ldr	r3, [r7, #4]
 8010dfe:	4618      	mov	r0, r3
 8010e00:	3708      	adds	r7, #8
 8010e02:	46bd      	mov	sp, r7
 8010e04:	bd80      	pop	{r7, pc}

08010e06 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8010e06:	b580      	push	{r7, lr}
 8010e08:	b082      	sub	sp, #8
 8010e0a:	af00      	add	r7, sp, #0
 8010e0c:	6078      	str	r0, [r7, #4]
 8010e0e:	7039      	strb	r1, [r7, #0]
 8010e10:	687b      	ldr	r3, [r7, #4]
 8010e12:	4611      	mov	r1, r2
 8010e14:	4618      	mov	r0, r3
 8010e16:	f7ff ffe7 	bl	8010de8 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8010e1a:	687b      	ldr	r3, [r7, #4]
 8010e1c:	4618      	mov	r0, r3
 8010e1e:	3708      	adds	r7, #8
 8010e20:	46bd      	mov	sp, r7
 8010e22:	bd80      	pop	{r7, pc}

08010e24 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8010e24:	b580      	push	{r7, lr}
 8010e26:	b082      	sub	sp, #8
 8010e28:	af00      	add	r7, sp, #0
 8010e2a:	6078      	str	r0, [r7, #4]
 8010e2c:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 8010e2e:	687b      	ldr	r3, [r7, #4]
 8010e30:	4611      	mov	r1, r2
 8010e32:	4618      	mov	r0, r3
 8010e34:	f7ff ffe7 	bl	8010e06 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8010e38:	687b      	ldr	r3, [r7, #4]
 8010e3a:	4618      	mov	r0, r3
 8010e3c:	3708      	adds	r7, #8
 8010e3e:	46bd      	mov	sp, r7
 8010e40:	bd80      	pop	{r7, pc}

08010e42 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      _Variant_base()
 8010e42:	b580      	push	{r7, lr}
 8010e44:	b082      	sub	sp, #8
 8010e46:	af00      	add	r7, sp, #0
 8010e48:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 8010e4a:	4619      	mov	r1, r3
 8010e4c:	6878      	ldr	r0, [r7, #4]
 8010e4e:	f7ff ffe9 	bl	8010e24 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8010e52:	687b      	ldr	r3, [r7, #4]
 8010e54:	4618      	mov	r0, r3
 8010e56:	3708      	adds	r7, #8
 8010e58:	46bd      	mov	sp, r7
 8010e5a:	bd80      	pop	{r7, pc}

08010e5c <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
      ~_Variant_storage()
 8010e5c:	b580      	push	{r7, lr}
 8010e5e:	b082      	sub	sp, #8
 8010e60:	af00      	add	r7, sp, #0
 8010e62:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 8010e64:	6878      	ldr	r0, [r7, #4]
 8010e66:	f000 f99c 	bl	80111a2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
 8010e6a:	687b      	ldr	r3, [r7, #4]
 8010e6c:	4618      	mov	r0, r3
 8010e6e:	3708      	adds	r7, #8
 8010e70:	46bd      	mov	sp, r7
 8010e72:	bd80      	pop	{r7, pc}

08010e74 <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>:
       *  iterator pointing to the sought after %pair. If unsuccessful it
       *  returns the past-the-end ( @c end() ) iterator.
       */

      const_iterator
      find(const key_type& __x) const
 8010e74:	b580      	push	{r7, lr}
 8010e76:	b082      	sub	sp, #8
 8010e78:	af00      	add	r7, sp, #0
 8010e7a:	6078      	str	r0, [r7, #4]
 8010e7c:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 8010e7e:	687b      	ldr	r3, [r7, #4]
 8010e80:	6839      	ldr	r1, [r7, #0]
 8010e82:	4618      	mov	r0, r3
 8010e84:	f000 f99b 	bl	80111be <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>
 8010e88:	4603      	mov	r3, r0
 8010e8a:	4618      	mov	r0, r3
 8010e8c:	3708      	adds	r7, #8
 8010e8e:	46bd      	mov	sp, r7
 8010e90:	bd80      	pop	{r7, pc}

08010e92 <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 8010e92:	b580      	push	{r7, lr}
 8010e94:	b082      	sub	sp, #8
 8010e96:	af00      	add	r7, sp, #0
 8010e98:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 8010e9a:	687b      	ldr	r3, [r7, #4]
 8010e9c:	4618      	mov	r0, r3
 8010e9e:	f000 f9ca 	bl	8011236 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8010ea2:	4603      	mov	r3, r0
 8010ea4:	4618      	mov	r0, r3
 8010ea6:	3708      	adds	r7, #8
 8010ea8:	46bd      	mov	sp, r7
 8010eaa:	bd80      	pop	{r7, pc}

08010eac <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8010eac:	b480      	push	{r7}
 8010eae:	b083      	sub	sp, #12
 8010eb0:	af00      	add	r7, sp, #0
 8010eb2:	6078      	str	r0, [r7, #4]
 8010eb4:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 8010eb6:	687b      	ldr	r3, [r7, #4]
 8010eb8:	681a      	ldr	r2, [r3, #0]
 8010eba:	683b      	ldr	r3, [r7, #0]
 8010ebc:	681b      	ldr	r3, [r3, #0]
 8010ebe:	429a      	cmp	r2, r3
 8010ec0:	bf14      	ite	ne
 8010ec2:	2301      	movne	r3, #1
 8010ec4:	2300      	moveq	r3, #0
 8010ec6:	b2db      	uxtb	r3, r3
 8010ec8:	4618      	mov	r0, r3
 8010eca:	370c      	adds	r7, #12
 8010ecc:	46bd      	mov	sp, r7
 8010ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ed2:	4770      	bx	lr

08010ed4 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 8010ed4:	b580      	push	{r7, lr}
 8010ed6:	b082      	sub	sp, #8
 8010ed8:	af00      	add	r7, sp, #0
 8010eda:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 8010edc:	687b      	ldr	r3, [r7, #4]
 8010ede:	681b      	ldr	r3, [r3, #0]
 8010ee0:	4618      	mov	r0, r3
 8010ee2:	f7f2 fc7f 	bl	80037e4 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 8010ee6:	4603      	mov	r3, r0
 8010ee8:	4618      	mov	r0, r3
 8010eea:	3708      	adds	r7, #8
 8010eec:	46bd      	mov	sp, r7
 8010eee:	bd80      	pop	{r7, pc}

08010ef0 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>:
      find(const key_type& __x) const
 8010ef0:	b580      	push	{r7, lr}
 8010ef2:	b082      	sub	sp, #8
 8010ef4:	af00      	add	r7, sp, #0
 8010ef6:	6078      	str	r0, [r7, #4]
 8010ef8:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 8010efa:	687b      	ldr	r3, [r7, #4]
 8010efc:	6839      	ldr	r1, [r7, #0]
 8010efe:	4618      	mov	r0, r3
 8010f00:	f000 f9aa 	bl	8011258 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>
 8010f04:	4603      	mov	r3, r0
 8010f06:	4618      	mov	r0, r3
 8010f08:	3708      	adds	r7, #8
 8010f0a:	46bd      	mov	sp, r7
 8010f0c:	bd80      	pop	{r7, pc}

08010f0e <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 8010f0e:	b580      	push	{r7, lr}
 8010f10:	b082      	sub	sp, #8
 8010f12:	af00      	add	r7, sp, #0
 8010f14:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 8010f16:	687b      	ldr	r3, [r7, #4]
 8010f18:	4618      	mov	r0, r3
 8010f1a:	f000 f9d9 	bl	80112d0 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8010f1e:	4603      	mov	r3, r0
 8010f20:	4618      	mov	r0, r3
 8010f22:	3708      	adds	r7, #8
 8010f24:	46bd      	mov	sp, r7
 8010f26:	bd80      	pop	{r7, pc}

08010f28 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8010f28:	b480      	push	{r7}
 8010f2a:	b083      	sub	sp, #12
 8010f2c:	af00      	add	r7, sp, #0
 8010f2e:	6078      	str	r0, [r7, #4]
 8010f30:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 8010f32:	687b      	ldr	r3, [r7, #4]
 8010f34:	681a      	ldr	r2, [r3, #0]
 8010f36:	683b      	ldr	r3, [r7, #0]
 8010f38:	681b      	ldr	r3, [r3, #0]
 8010f3a:	429a      	cmp	r2, r3
 8010f3c:	bf14      	ite	ne
 8010f3e:	2301      	movne	r3, #1
 8010f40:	2300      	moveq	r3, #0
 8010f42:	b2db      	uxtb	r3, r3
 8010f44:	4618      	mov	r0, r3
 8010f46:	370c      	adds	r7, #12
 8010f48:	46bd      	mov	sp, r7
 8010f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f4e:	4770      	bx	lr

08010f50 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 8010f50:	b580      	push	{r7, lr}
 8010f52:	b082      	sub	sp, #8
 8010f54:	af00      	add	r7, sp, #0
 8010f56:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 8010f58:	687b      	ldr	r3, [r7, #4]
 8010f5a:	681b      	ldr	r3, [r3, #0]
 8010f5c:	4618      	mov	r0, r3
 8010f5e:	f7f2 fd1c 	bl	800399a <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 8010f62:	4603      	mov	r3, r0
 8010f64:	4618      	mov	r0, r3
 8010f66:	3708      	adds	r7, #8
 8010f68:	46bd      	mov	sp, r7
 8010f6a:	bd80      	pop	{r7, pc}

08010f6c <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>:
      find(const key_type& __x) const
 8010f6c:	b580      	push	{r7, lr}
 8010f6e:	b082      	sub	sp, #8
 8010f70:	af00      	add	r7, sp, #0
 8010f72:	6078      	str	r0, [r7, #4]
 8010f74:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 8010f76:	687b      	ldr	r3, [r7, #4]
 8010f78:	6839      	ldr	r1, [r7, #0]
 8010f7a:	4618      	mov	r0, r3
 8010f7c:	f000 f9b9 	bl	80112f2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>
 8010f80:	4603      	mov	r3, r0
 8010f82:	4618      	mov	r0, r3
 8010f84:	3708      	adds	r7, #8
 8010f86:	46bd      	mov	sp, r7
 8010f88:	bd80      	pop	{r7, pc}

08010f8a <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 8010f8a:	b580      	push	{r7, lr}
 8010f8c:	b082      	sub	sp, #8
 8010f8e:	af00      	add	r7, sp, #0
 8010f90:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 8010f92:	687b      	ldr	r3, [r7, #4]
 8010f94:	4618      	mov	r0, r3
 8010f96:	f000 f9e8 	bl	801136a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8010f9a:	4603      	mov	r3, r0
 8010f9c:	4618      	mov	r0, r3
 8010f9e:	3708      	adds	r7, #8
 8010fa0:	46bd      	mov	sp, r7
 8010fa2:	bd80      	pop	{r7, pc}

08010fa4 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8010fa4:	b480      	push	{r7}
 8010fa6:	b083      	sub	sp, #12
 8010fa8:	af00      	add	r7, sp, #0
 8010faa:	6078      	str	r0, [r7, #4]
 8010fac:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 8010fae:	687b      	ldr	r3, [r7, #4]
 8010fb0:	681a      	ldr	r2, [r3, #0]
 8010fb2:	683b      	ldr	r3, [r7, #0]
 8010fb4:	681b      	ldr	r3, [r3, #0]
 8010fb6:	429a      	cmp	r2, r3
 8010fb8:	bf14      	ite	ne
 8010fba:	2301      	movne	r3, #1
 8010fbc:	2300      	moveq	r3, #0
 8010fbe:	b2db      	uxtb	r3, r3
 8010fc0:	4618      	mov	r0, r3
 8010fc2:	370c      	adds	r7, #12
 8010fc4:	46bd      	mov	sp, r7
 8010fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010fca:	4770      	bx	lr

08010fcc <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 8010fcc:	b580      	push	{r7, lr}
 8010fce:	b082      	sub	sp, #8
 8010fd0:	af00      	add	r7, sp, #0
 8010fd2:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 8010fd4:	687b      	ldr	r3, [r7, #4]
 8010fd6:	681b      	ldr	r3, [r3, #0]
 8010fd8:	4618      	mov	r0, r3
 8010fda:	f7f2 fc71 	bl	80038c0 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8010fde:	4603      	mov	r3, r0
 8010fe0:	4618      	mov	r0, r3
 8010fe2:	3708      	adds	r7, #8
 8010fe4:	46bd      	mov	sp, r7
 8010fe6:	bd80      	pop	{r7, pc}

08010fe8 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>:
      constexpr size_t index() const noexcept
 8010fe8:	b480      	push	{r7}
 8010fea:	b083      	sub	sp, #12
 8010fec:	af00      	add	r7, sp, #0
 8010fee:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 8010ff0:	687b      	ldr	r3, [r7, #4]
 8010ff2:	7e1b      	ldrb	r3, [r3, #24]
 8010ff4:	2bff      	cmp	r3, #255	; 0xff
 8010ff6:	d102      	bne.n	8010ffe <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv+0x16>
	  return variant_npos;
 8010ff8:	f04f 33ff 	mov.w	r3, #4294967295
 8010ffc:	e001      	b.n	8011002 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv+0x1a>
	return this->_M_index;
 8010ffe:	687b      	ldr	r3, [r7, #4]
 8011000:	7e1b      	ldrb	r3, [r3, #24]
      }
 8011002:	4618      	mov	r0, r3
 8011004:	370c      	adds	r7, #12
 8011006:	46bd      	mov	sp, r7
 8011008:	f85d 7b04 	ldr.w	r7, [sp], #4
 801100c:	4770      	bx	lr

0801100e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 801100e:	b590      	push	{r4, r7, lr}
 8011010:	b085      	sub	sp, #20
 8011012:	af00      	add	r7, sp, #0
 8011014:	6078      	str	r0, [r7, #4]
 8011016:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8011018:	2300      	movs	r3, #0
 801101a:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801101c:	6878      	ldr	r0, [r7, #4]
 801101e:	f7ff ffe3 	bl	8010fe8 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8011022:	4603      	mov	r3, r0
 8011024:	2b00      	cmp	r3, #0
 8011026:	bf0c      	ite	eq
 8011028:	2301      	moveq	r3, #1
 801102a:	2300      	movne	r3, #0
 801102c:	b2db      	uxtb	r3, r3
 801102e:	2b00      	cmp	r3, #0
 8011030:	d00c      	beq.n	801104c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8011032:	6838      	ldr	r0, [r7, #0]
 8011034:	f7fa f89a 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8011038:	4604      	mov	r4, r0
 801103a:	6878      	ldr	r0, [r7, #4]
 801103c:	f000 f9c8 	bl	80113d0 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8011040:	4603      	mov	r3, r0
 8011042:	4621      	mov	r1, r4
 8011044:	4618      	mov	r0, r3
 8011046:	f011 ffe2 	bl	802300e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 801104a:	e007      	b.n	801105c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801104c:	6838      	ldr	r0, [r7, #0]
 801104e:	f7fa f88d 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8011052:	4603      	mov	r3, r0
 8011054:	4619      	mov	r1, r3
 8011056:	6878      	ldr	r0, [r7, #4]
 8011058:	f000 f9d6 	bl	8011408 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 801105c:	687b      	ldr	r3, [r7, #4]
	}
 801105e:	4618      	mov	r0, r3
 8011060:	3714      	adds	r7, #20
 8011062:	46bd      	mov	sp, r7
 8011064:	bd90      	pop	{r4, r7, pc}

08011066 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 8011066:	b590      	push	{r4, r7, lr}
 8011068:	b085      	sub	sp, #20
 801106a:	af00      	add	r7, sp, #0
 801106c:	6078      	str	r0, [r7, #4]
 801106e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8011070:	2301      	movs	r3, #1
 8011072:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8011074:	6878      	ldr	r0, [r7, #4]
 8011076:	f7ff ffb7 	bl	8010fe8 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 801107a:	4603      	mov	r3, r0
 801107c:	2b01      	cmp	r3, #1
 801107e:	bf0c      	ite	eq
 8011080:	2301      	moveq	r3, #1
 8011082:	2300      	movne	r3, #0
 8011084:	b2db      	uxtb	r3, r3
 8011086:	2b00      	cmp	r3, #0
 8011088:	d00a      	beq.n	80110a0 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801108a:	6838      	ldr	r0, [r7, #0]
 801108c:	f7f9 ffe7 	bl	800b05e <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8011090:	4603      	mov	r3, r0
 8011092:	681c      	ldr	r4, [r3, #0]
 8011094:	6878      	ldr	r0, [r7, #4]
 8011096:	f000 fa05 	bl	80114a4 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801109a:	4603      	mov	r3, r0
 801109c:	601c      	str	r4, [r3, #0]
 801109e:	e007      	b.n	80110b0 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80110a0:	6838      	ldr	r0, [r7, #0]
 80110a2:	f7f9 ffdc 	bl	800b05e <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 80110a6:	4603      	mov	r3, r0
 80110a8:	4619      	mov	r1, r3
 80110aa:	6878      	ldr	r0, [r7, #4]
 80110ac:	f000 fa16 	bl	80114dc <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 80110b0:	687b      	ldr	r3, [r7, #4]
	}
 80110b2:	4618      	mov	r0, r3
 80110b4:	3714      	adds	r7, #20
 80110b6:	46bd      	mov	sp, r7
 80110b8:	bd90      	pop	{r4, r7, pc}

080110ba <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 80110ba:	b590      	push	{r4, r7, lr}
 80110bc:	b085      	sub	sp, #20
 80110be:	af00      	add	r7, sp, #0
 80110c0:	6078      	str	r0, [r7, #4]
 80110c2:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80110c4:	2302      	movs	r3, #2
 80110c6:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80110c8:	6878      	ldr	r0, [r7, #4]
 80110ca:	f7ff ff8d 	bl	8010fe8 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80110ce:	4603      	mov	r3, r0
 80110d0:	2b02      	cmp	r3, #2
 80110d2:	bf0c      	ite	eq
 80110d4:	2301      	moveq	r3, #1
 80110d6:	2300      	movne	r3, #0
 80110d8:	b2db      	uxtb	r3, r3
 80110da:	2b00      	cmp	r3, #0
 80110dc:	d00a      	beq.n	80110f4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80110de:	6838      	ldr	r0, [r7, #0]
 80110e0:	f7f9 ffea 	bl	800b0b8 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 80110e4:	4603      	mov	r3, r0
 80110e6:	681c      	ldr	r4, [r3, #0]
 80110e8:	6878      	ldr	r0, [r7, #4]
 80110ea:	f000 fa57 	bl	801159c <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 80110ee:	4603      	mov	r3, r0
 80110f0:	601c      	str	r4, [r3, #0]
 80110f2:	e007      	b.n	8011104 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80110f4:	6838      	ldr	r0, [r7, #0]
 80110f6:	f7f9 ffdf 	bl	800b0b8 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 80110fa:	4603      	mov	r3, r0
 80110fc:	4619      	mov	r1, r3
 80110fe:	6878      	ldr	r0, [r7, #4]
 8011100:	f000 fa68 	bl	80115d4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 8011104:	687b      	ldr	r3, [r7, #4]
	}
 8011106:	4618      	mov	r0, r3
 8011108:	3714      	adds	r7, #20
 801110a:	46bd      	mov	sp, r7
 801110c:	bd90      	pop	{r4, r7, pc}

0801110e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Copy_ctor_base(const _Copy_ctor_base& __rhs)
 801110e:	b580      	push	{r7, lr}
 8011110:	b082      	sub	sp, #8
 8011112:	af00      	add	r7, sp, #0
 8011114:	6078      	str	r0, [r7, #4]
 8011116:	6039      	str	r1, [r7, #0]
      {
 8011118:	687b      	ldr	r3, [r7, #4]
 801111a:	4618      	mov	r0, r3
 801111c:	f000 fa80 	bl	8011620 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
	__variant_construct<_Types...>(*this, __rhs);
 8011120:	6839      	ldr	r1, [r7, #0]
 8011122:	6878      	ldr	r0, [r7, #4]
 8011124:	f000 fd1a 	bl	8011b5c <_ZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_>
      }
 8011128:	687b      	ldr	r3, [r7, #4]
 801112a:	4618      	mov	r0, r3
 801112c:	3708      	adds	r7, #8
 801112e:	46bd      	mov	sp, r7
 8011130:	bd80      	pop	{r7, pc}

08011132 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8011132:	b580      	push	{r7, lr}
 8011134:	b082      	sub	sp, #8
 8011136:	af00      	add	r7, sp, #0
 8011138:	6078      	str	r0, [r7, #4]
 801113a:	7039      	strb	r1, [r7, #0]
	  ::new ((void*)std::addressof(_M_storage))
 801113c:	687b      	ldr	r3, [r7, #4]
 801113e:	4618      	mov	r0, r3
 8011140:	f7fd f840 	bl	800e1c4 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 8011144:	4603      	mov	r3, r0
 8011146:	4619      	mov	r1, r3
 8011148:	2018      	movs	r0, #24
 801114a:	f7ef ff86 	bl	800105a <_ZnwjPv>
 801114e:	4603      	mov	r3, r0
 8011150:	4618      	mov	r0, r3
 8011152:	f011 ff2f 	bl	8022fb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
	}
 8011156:	687b      	ldr	r3, [r7, #4]
 8011158:	4618      	mov	r0, r3
 801115a:	3708      	adds	r7, #8
 801115c:	46bd      	mov	sp, r7
 801115e:	bd80      	pop	{r7, pc}

08011160 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8011160:	b580      	push	{r7, lr}
 8011162:	b082      	sub	sp, #8
 8011164:	af00      	add	r7, sp, #0
 8011166:	6078      	str	r0, [r7, #4]
 8011168:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 801116a:	687b      	ldr	r3, [r7, #4]
 801116c:	4611      	mov	r1, r2
 801116e:	4618      	mov	r0, r3
 8011170:	f7ff ffdf 	bl	8011132 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8011174:	687b      	ldr	r3, [r7, #4]
 8011176:	4618      	mov	r0, r3
 8011178:	3708      	adds	r7, #8
 801117a:	46bd      	mov	sp, r7
 801117c:	bd80      	pop	{r7, pc}

0801117e <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 801117e:	b580      	push	{r7, lr}
 8011180:	b082      	sub	sp, #8
 8011182:	af00      	add	r7, sp, #0
 8011184:	6078      	str	r0, [r7, #4]
 8011186:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 8011188:	687b      	ldr	r3, [r7, #4]
 801118a:	4611      	mov	r1, r2
 801118c:	4618      	mov	r0, r3
 801118e:	f7ff ffe7 	bl	8011160 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 8011192:	687b      	ldr	r3, [r7, #4]
 8011194:	2200      	movs	r2, #0
 8011196:	761a      	strb	r2, [r3, #24]
	{ }
 8011198:	687b      	ldr	r3, [r7, #4]
 801119a:	4618      	mov	r0, r3
 801119c:	3708      	adds	r7, #8
 801119e:	46bd      	mov	sp, r7
 80111a0:	bd80      	pop	{r7, pc}

080111a2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>:
      void _M_reset()
 80111a2:	b580      	push	{r7, lr}
 80111a4:	b082      	sub	sp, #8
 80111a6:	af00      	add	r7, sp, #0
 80111a8:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 80111aa:	6878      	ldr	r0, [r7, #4]
 80111ac:	f000 fee6 	bl	8011f7c <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEv>
	_M_index = variant_npos;
 80111b0:	687b      	ldr	r3, [r7, #4]
 80111b2:	22ff      	movs	r2, #255	; 0xff
 80111b4:	761a      	strb	r2, [r3, #24]
      }
 80111b6:	bf00      	nop
 80111b8:	3708      	adds	r7, #8
 80111ba:	46bd      	mov	sp, r7
 80111bc:	bd80      	pop	{r7, pc}

080111be <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::const_iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80111be:	b590      	push	{r4, r7, lr}
 80111c0:	b085      	sub	sp, #20
 80111c2:	af00      	add	r7, sp, #0
 80111c4:	6078      	str	r0, [r7, #4]
 80111c6:	6039      	str	r1, [r7, #0]
    find(const _Key& __k) const
    {
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 80111c8:	6878      	ldr	r0, [r7, #4]
 80111ca:	f000 fee9 	bl	8011fa0 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 80111ce:	4604      	mov	r4, r0
 80111d0:	6878      	ldr	r0, [r7, #4]
 80111d2:	f000 fef1 	bl	8011fb8 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 80111d6:	4602      	mov	r2, r0
 80111d8:	683b      	ldr	r3, [r7, #0]
 80111da:	4621      	mov	r1, r4
 80111dc:	6878      	ldr	r0, [r7, #4]
 80111de:	f000 fef7 	bl	8011fd0 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>
 80111e2:	4603      	mov	r3, r0
 80111e4:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 80111e6:	6878      	ldr	r0, [r7, #4]
 80111e8:	f000 f825 	bl	8011236 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 80111ec:	4603      	mov	r3, r0
 80111ee:	60fb      	str	r3, [r7, #12]
 80111f0:	f107 020c 	add.w	r2, r7, #12
 80111f4:	f107 0308 	add.w	r3, r7, #8
 80111f8:	4611      	mov	r1, r2
 80111fa:	4618      	mov	r0, r3
 80111fc:	f000 ff19 	bl	8012032 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>
 8011200:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
					_S_key(__j._M_node))) ? end() : __j;
 8011202:	2b00      	cmp	r3, #0
 8011204:	d10d      	bne.n	8011222 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x64>
	      || _M_impl._M_key_compare(__k,
 8011206:	687c      	ldr	r4, [r7, #4]
 8011208:	68bb      	ldr	r3, [r7, #8]
 801120a:	4618      	mov	r0, r3
 801120c:	f7f1 fd23 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8011210:	4603      	mov	r3, r0
 8011212:	461a      	mov	r2, r3
 8011214:	6839      	ldr	r1, [r7, #0]
 8011216:	4620      	mov	r0, r4
 8011218:	f7f1 fd29 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 801121c:	4603      	mov	r3, r0
 801121e:	2b00      	cmp	r3, #0
 8011220:	d004      	beq.n	801122c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8011222:	6878      	ldr	r0, [r7, #4]
 8011224:	f000 f807 	bl	8011236 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8011228:	4603      	mov	r3, r0
 801122a:	e000      	b.n	801122e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x70>
 801122c:	68bb      	ldr	r3, [r7, #8]
    }
 801122e:	4618      	mov	r0, r3
 8011230:	3714      	adds	r7, #20
 8011232:	46bd      	mov	sp, r7
 8011234:	bd90      	pop	{r4, r7, pc}

08011236 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 8011236:	b580      	push	{r7, lr}
 8011238:	b084      	sub	sp, #16
 801123a:	af00      	add	r7, sp, #0
 801123c:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 801123e:	687b      	ldr	r3, [r7, #4]
 8011240:	1d1a      	adds	r2, r3, #4
 8011242:	f107 030c 	add.w	r3, r7, #12
 8011246:	4611      	mov	r1, r2
 8011248:	4618      	mov	r0, r3
 801124a:	f000 ff06 	bl	801205a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>
 801124e:	68fb      	ldr	r3, [r7, #12]
 8011250:	4618      	mov	r0, r3
 8011252:	3710      	adds	r7, #16
 8011254:	46bd      	mov	sp, r7
 8011256:	bd80      	pop	{r7, pc}

08011258 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8011258:	b590      	push	{r4, r7, lr}
 801125a:	b085      	sub	sp, #20
 801125c:	af00      	add	r7, sp, #0
 801125e:	6078      	str	r0, [r7, #4]
 8011260:	6039      	str	r1, [r7, #0]
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 8011262:	6878      	ldr	r0, [r7, #4]
 8011264:	f000 ff08 	bl	8012078 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8011268:	4604      	mov	r4, r0
 801126a:	6878      	ldr	r0, [r7, #4]
 801126c:	f000 ff10 	bl	8012090 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8011270:	4602      	mov	r2, r0
 8011272:	683b      	ldr	r3, [r7, #0]
 8011274:	4621      	mov	r1, r4
 8011276:	6878      	ldr	r0, [r7, #4]
 8011278:	f000 ff16 	bl	80120a8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>
 801127c:	4603      	mov	r3, r0
 801127e:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 8011280:	6878      	ldr	r0, [r7, #4]
 8011282:	f000 f825 	bl	80112d0 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8011286:	4603      	mov	r3, r0
 8011288:	60fb      	str	r3, [r7, #12]
 801128a:	f107 020c 	add.w	r2, r7, #12
 801128e:	f107 0308 	add.w	r3, r7, #8
 8011292:	4611      	mov	r1, r2
 8011294:	4618      	mov	r0, r3
 8011296:	f000 ff38 	bl	801210a <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>
 801129a:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 801129c:	2b00      	cmp	r3, #0
 801129e:	d10d      	bne.n	80112bc <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x64>
	      || _M_impl._M_key_compare(__k,
 80112a0:	687c      	ldr	r4, [r7, #4]
 80112a2:	68bb      	ldr	r3, [r7, #8]
 80112a4:	4618      	mov	r0, r3
 80112a6:	f7f1 ffb5 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80112aa:	4603      	mov	r3, r0
 80112ac:	461a      	mov	r2, r3
 80112ae:	6839      	ldr	r1, [r7, #0]
 80112b0:	4620      	mov	r0, r4
 80112b2:	f7f1 fcdc 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 80112b6:	4603      	mov	r3, r0
 80112b8:	2b00      	cmp	r3, #0
 80112ba:	d004      	beq.n	80112c6 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 80112bc:	6878      	ldr	r0, [r7, #4]
 80112be:	f000 f807 	bl	80112d0 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 80112c2:	4603      	mov	r3, r0
 80112c4:	e000      	b.n	80112c8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x70>
 80112c6:	68bb      	ldr	r3, [r7, #8]
    }
 80112c8:	4618      	mov	r0, r3
 80112ca:	3714      	adds	r7, #20
 80112cc:	46bd      	mov	sp, r7
 80112ce:	bd90      	pop	{r4, r7, pc}

080112d0 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 80112d0:	b580      	push	{r7, lr}
 80112d2:	b084      	sub	sp, #16
 80112d4:	af00      	add	r7, sp, #0
 80112d6:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 80112d8:	687b      	ldr	r3, [r7, #4]
 80112da:	1d1a      	adds	r2, r3, #4
 80112dc:	f107 030c 	add.w	r3, r7, #12
 80112e0:	4611      	mov	r1, r2
 80112e2:	4618      	mov	r0, r3
 80112e4:	f000 ff25 	bl	8012132 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>
 80112e8:	68fb      	ldr	r3, [r7, #12]
 80112ea:	4618      	mov	r0, r3
 80112ec:	3710      	adds	r7, #16
 80112ee:	46bd      	mov	sp, r7
 80112f0:	bd80      	pop	{r7, pc}

080112f2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80112f2:	b590      	push	{r4, r7, lr}
 80112f4:	b085      	sub	sp, #20
 80112f6:	af00      	add	r7, sp, #0
 80112f8:	6078      	str	r0, [r7, #4]
 80112fa:	6039      	str	r1, [r7, #0]
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 80112fc:	6878      	ldr	r0, [r7, #4]
 80112fe:	f000 ff27 	bl	8012150 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8011302:	4604      	mov	r4, r0
 8011304:	6878      	ldr	r0, [r7, #4]
 8011306:	f000 ff2f 	bl	8012168 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 801130a:	4602      	mov	r2, r0
 801130c:	683b      	ldr	r3, [r7, #0]
 801130e:	4621      	mov	r1, r4
 8011310:	6878      	ldr	r0, [r7, #4]
 8011312:	f000 ff35 	bl	8012180 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_>
 8011316:	4603      	mov	r3, r0
 8011318:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 801131a:	6878      	ldr	r0, [r7, #4]
 801131c:	f000 f825 	bl	801136a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8011320:	4603      	mov	r3, r0
 8011322:	60fb      	str	r3, [r7, #12]
 8011324:	f107 020c 	add.w	r2, r7, #12
 8011328:	f107 0308 	add.w	r3, r7, #8
 801132c:	4611      	mov	r1, r2
 801132e:	4618      	mov	r0, r3
 8011330:	f000 ff57 	bl	80121e2 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 8011334:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 8011336:	2b00      	cmp	r3, #0
 8011338:	d10d      	bne.n	8011356 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 801133a:	687c      	ldr	r4, [r7, #4]
 801133c:	68bb      	ldr	r3, [r7, #8]
 801133e:	4618      	mov	r0, r3
 8011340:	f7f1 fe1e 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8011344:	4603      	mov	r3, r0
 8011346:	461a      	mov	r2, r3
 8011348:	6839      	ldr	r1, [r7, #0]
 801134a:	4620      	mov	r0, r4
 801134c:	f7f1 fe24 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8011350:	4603      	mov	r3, r0
 8011352:	2b00      	cmp	r3, #0
 8011354:	d004      	beq.n	8011360 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8011356:	6878      	ldr	r0, [r7, #4]
 8011358:	f000 f807 	bl	801136a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 801135c:	4603      	mov	r3, r0
 801135e:	e000      	b.n	8011362 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x70>
 8011360:	68bb      	ldr	r3, [r7, #8]
    }
 8011362:	4618      	mov	r0, r3
 8011364:	3714      	adds	r7, #20
 8011366:	46bd      	mov	sp, r7
 8011368:	bd90      	pop	{r4, r7, pc}

0801136a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 801136a:	b580      	push	{r7, lr}
 801136c:	b084      	sub	sp, #16
 801136e:	af00      	add	r7, sp, #0
 8011370:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 8011372:	687b      	ldr	r3, [r7, #4]
 8011374:	1d1a      	adds	r2, r3, #4
 8011376:	f107 030c 	add.w	r3, r7, #12
 801137a:	4611      	mov	r1, r2
 801137c:	4618      	mov	r0, r3
 801137e:	f000 ff44 	bl	801220a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>
 8011382:	68fb      	ldr	r3, [r7, #12]
 8011384:	4618      	mov	r0, r3
 8011386:	3710      	adds	r7, #16
 8011388:	46bd      	mov	sp, r7
 801138a:	bd80      	pop	{r7, pc}

0801138c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801138c:	b580      	push	{r7, lr}
 801138e:	b082      	sub	sp, #8
 8011390:	af00      	add	r7, sp, #0
 8011392:	7138      	strb	r0, [r7, #4]
 8011394:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8011396:	6838      	ldr	r0, [r7, #0]
 8011398:	f000 ff51 	bl	801223e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801139c:	4603      	mov	r3, r0
 801139e:	4618      	mov	r0, r3
 80113a0:	f7f4 fcc3 	bl	8005d2a <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 80113a4:	4603      	mov	r3, r0
 80113a6:	4618      	mov	r0, r3
 80113a8:	3708      	adds	r7, #8
 80113aa:	46bd      	mov	sp, r7
 80113ac:	bd80      	pop	{r7, pc}

080113ae <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80113ae:	b590      	push	{r4, r7, lr}
 80113b0:	b083      	sub	sp, #12
 80113b2:	af00      	add	r7, sp, #0
 80113b4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80113b6:	6878      	ldr	r0, [r7, #4]
 80113b8:	f000 ff36 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80113bc:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80113be:	4619      	mov	r1, r3
 80113c0:	4620      	mov	r0, r4
 80113c2:	f7ff ffe3 	bl	801138c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 80113c6:	4603      	mov	r3, r0
    }
 80113c8:	4618      	mov	r0, r3
 80113ca:	370c      	adds	r7, #12
 80113cc:	46bd      	mov	sp, r7
 80113ce:	bd90      	pop	{r4, r7, pc}

080113d0 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 80113d0:	b580      	push	{r7, lr}
 80113d2:	b082      	sub	sp, #8
 80113d4:	af00      	add	r7, sp, #0
 80113d6:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80113d8:	6878      	ldr	r0, [r7, #4]
 80113da:	f7ff fe05 	bl	8010fe8 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80113de:	4603      	mov	r3, r0
 80113e0:	2b00      	cmp	r3, #0
 80113e2:	bf14      	ite	ne
 80113e4:	2301      	movne	r3, #1
 80113e6:	2300      	moveq	r3, #0
 80113e8:	b2db      	uxtb	r3, r3
 80113ea:	2b00      	cmp	r3, #0
 80113ec:	d002      	beq.n	80113f4 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80113ee:	4805      	ldr	r0, [pc, #20]	; (8011404 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 80113f0:	f7f2 feea 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80113f4:	6878      	ldr	r0, [r7, #4]
 80113f6:	f7ff ffda 	bl	80113ae <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80113fa:	4603      	mov	r3, r0
    }
 80113fc:	4618      	mov	r0, r3
 80113fe:	3708      	adds	r7, #8
 8011400:	46bd      	mov	sp, r7
 8011402:	bd80      	pop	{r7, pc}
 8011404:	08027578 	.word	0x08027578

08011408 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8011408:	b580      	push	{r7, lr}
 801140a:	b082      	sub	sp, #8
 801140c:	af00      	add	r7, sp, #0
 801140e:	6078      	str	r0, [r7, #4]
 8011410:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8011412:	687b      	ldr	r3, [r7, #4]
 8011414:	4618      	mov	r0, r3
 8011416:	f7ff fec4 	bl	80111a2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801141a:	6838      	ldr	r0, [r7, #0]
 801141c:	f7f9 fea6 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8011420:	4603      	mov	r3, r0
 8011422:	4619      	mov	r1, r3
 8011424:	6878      	ldr	r0, [r7, #4]
 8011426:	f000 ff15 	bl	8012254 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801142a:	6878      	ldr	r0, [r7, #4]
 801142c:	f7ff ffd0 	bl	80113d0 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8011430:	4603      	mov	r3, r0
	}
 8011432:	4618      	mov	r0, r3
 8011434:	3708      	adds	r7, #8
 8011436:	46bd      	mov	sp, r7
 8011438:	bd80      	pop	{r7, pc}

0801143a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801143a:	b580      	push	{r7, lr}
 801143c:	b082      	sub	sp, #8
 801143e:	af00      	add	r7, sp, #0
 8011440:	7138      	strb	r0, [r7, #4]
 8011442:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8011444:	6838      	ldr	r0, [r7, #0]
 8011446:	f000 ff26 	bl	8012296 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 801144a:	4603      	mov	r3, r0
 801144c:	4618      	mov	r0, r3
 801144e:	f7f4 fc28 	bl	8005ca2 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8011452:	4603      	mov	r3, r0
 8011454:	4618      	mov	r0, r3
 8011456:	3708      	adds	r7, #8
 8011458:	46bd      	mov	sp, r7
 801145a:	bd80      	pop	{r7, pc}

0801145c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801145c:	b590      	push	{r4, r7, lr}
 801145e:	b083      	sub	sp, #12
 8011460:	af00      	add	r7, sp, #0
 8011462:	7138      	strb	r0, [r7, #4]
 8011464:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011466:	6838      	ldr	r0, [r7, #0]
 8011468:	f000 fee9 	bl	801223e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801146c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801146e:	4619      	mov	r1, r3
 8011470:	4620      	mov	r0, r4
 8011472:	f7ff ffe2 	bl	801143a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8011476:	4603      	mov	r3, r0
    }
 8011478:	4618      	mov	r0, r3
 801147a:	370c      	adds	r7, #12
 801147c:	46bd      	mov	sp, r7
 801147e:	bd90      	pop	{r4, r7, pc}

08011480 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8011480:	b590      	push	{r4, r7, lr}
 8011482:	b083      	sub	sp, #12
 8011484:	af00      	add	r7, sp, #0
 8011486:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8011488:	6878      	ldr	r0, [r7, #4]
 801148a:	f000 fecd 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801148e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8011490:	4619      	mov	r1, r3
 8011492:	4620      	mov	r0, r4
 8011494:	f7ff ffe2 	bl	801145c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011498:	4603      	mov	r3, r0
    }
 801149a:	4618      	mov	r0, r3
 801149c:	370c      	adds	r7, #12
 801149e:	46bd      	mov	sp, r7
 80114a0:	bd90      	pop	{r4, r7, pc}
	...

080114a4 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 80114a4:	b580      	push	{r7, lr}
 80114a6:	b082      	sub	sp, #8
 80114a8:	af00      	add	r7, sp, #0
 80114aa:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80114ac:	6878      	ldr	r0, [r7, #4]
 80114ae:	f7ff fd9b 	bl	8010fe8 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80114b2:	4603      	mov	r3, r0
 80114b4:	2b01      	cmp	r3, #1
 80114b6:	bf14      	ite	ne
 80114b8:	2301      	movne	r3, #1
 80114ba:	2300      	moveq	r3, #0
 80114bc:	b2db      	uxtb	r3, r3
 80114be:	2b00      	cmp	r3, #0
 80114c0:	d002      	beq.n	80114c8 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80114c2:	4805      	ldr	r0, [pc, #20]	; (80114d8 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 80114c4:	f7f2 fe80 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80114c8:	6878      	ldr	r0, [r7, #4]
 80114ca:	f7ff ffd9 	bl	8011480 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80114ce:	4603      	mov	r3, r0
    }
 80114d0:	4618      	mov	r0, r3
 80114d2:	3708      	adds	r7, #8
 80114d4:	46bd      	mov	sp, r7
 80114d6:	bd80      	pop	{r7, pc}
 80114d8:	08027578 	.word	0x08027578

080114dc <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 80114dc:	b580      	push	{r7, lr}
 80114de:	b082      	sub	sp, #8
 80114e0:	af00      	add	r7, sp, #0
 80114e2:	6078      	str	r0, [r7, #4]
 80114e4:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80114e6:	687b      	ldr	r3, [r7, #4]
 80114e8:	4618      	mov	r0, r3
 80114ea:	f7ff fe5a 	bl	80111a2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80114ee:	6838      	ldr	r0, [r7, #0]
 80114f0:	f7f9 fdb5 	bl	800b05e <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 80114f4:	4603      	mov	r3, r0
 80114f6:	4619      	mov	r1, r3
 80114f8:	6878      	ldr	r0, [r7, #4]
 80114fa:	f000 fed7 	bl	80122ac <_ZSt28__variant_construct_by_indexILj1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80114fe:	6878      	ldr	r0, [r7, #4]
 8011500:	f7ff ffd0 	bl	80114a4 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8011504:	4603      	mov	r3, r0
	}
 8011506:	4618      	mov	r0, r3
 8011508:	3708      	adds	r7, #8
 801150a:	46bd      	mov	sp, r7
 801150c:	bd80      	pop	{r7, pc}

0801150e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801150e:	b580      	push	{r7, lr}
 8011510:	b082      	sub	sp, #8
 8011512:	af00      	add	r7, sp, #0
 8011514:	7138      	strb	r0, [r7, #4]
 8011516:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8011518:	6838      	ldr	r0, [r7, #0]
 801151a:	f000 fee6 	bl	80122ea <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 801151e:	4603      	mov	r3, r0
 8011520:	4618      	mov	r0, r3
 8011522:	f7f4 fbe0 	bl	8005ce6 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 8011526:	4603      	mov	r3, r0
 8011528:	4618      	mov	r0, r3
 801152a:	3708      	adds	r7, #8
 801152c:	46bd      	mov	sp, r7
 801152e:	bd80      	pop	{r7, pc}

08011530 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8011530:	b590      	push	{r4, r7, lr}
 8011532:	b083      	sub	sp, #12
 8011534:	af00      	add	r7, sp, #0
 8011536:	7138      	strb	r0, [r7, #4]
 8011538:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801153a:	6838      	ldr	r0, [r7, #0]
 801153c:	f000 feab 	bl	8012296 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8011540:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8011542:	4619      	mov	r1, r3
 8011544:	4620      	mov	r0, r4
 8011546:	f7ff ffe2 	bl	801150e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>
 801154a:	4603      	mov	r3, r0
    }
 801154c:	4618      	mov	r0, r3
 801154e:	370c      	adds	r7, #12
 8011550:	46bd      	mov	sp, r7
 8011552:	bd90      	pop	{r4, r7, pc}

08011554 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8011554:	b590      	push	{r4, r7, lr}
 8011556:	b083      	sub	sp, #12
 8011558:	af00      	add	r7, sp, #0
 801155a:	7138      	strb	r0, [r7, #4]
 801155c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801155e:	6838      	ldr	r0, [r7, #0]
 8011560:	f000 fe6d 	bl	801223e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8011564:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8011566:	4619      	mov	r1, r3
 8011568:	4620      	mov	r0, r4
 801156a:	f7ff ffe1 	bl	8011530 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801156e:	4603      	mov	r3, r0
    }
 8011570:	4618      	mov	r0, r3
 8011572:	370c      	adds	r7, #12
 8011574:	46bd      	mov	sp, r7
 8011576:	bd90      	pop	{r4, r7, pc}

08011578 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8011578:	b590      	push	{r4, r7, lr}
 801157a:	b083      	sub	sp, #12
 801157c:	af00      	add	r7, sp, #0
 801157e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8011580:	6878      	ldr	r0, [r7, #4]
 8011582:	f000 fe51 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011586:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8011588:	4619      	mov	r1, r3
 801158a:	4620      	mov	r0, r4
 801158c:	f7ff ffe2 	bl	8011554 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011590:	4603      	mov	r3, r0
    }
 8011592:	4618      	mov	r0, r3
 8011594:	370c      	adds	r7, #12
 8011596:	46bd      	mov	sp, r7
 8011598:	bd90      	pop	{r4, r7, pc}
	...

0801159c <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 801159c:	b580      	push	{r7, lr}
 801159e:	b082      	sub	sp, #8
 80115a0:	af00      	add	r7, sp, #0
 80115a2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80115a4:	6878      	ldr	r0, [r7, #4]
 80115a6:	f7ff fd1f 	bl	8010fe8 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80115aa:	4603      	mov	r3, r0
 80115ac:	2b02      	cmp	r3, #2
 80115ae:	bf14      	ite	ne
 80115b0:	2301      	movne	r3, #1
 80115b2:	2300      	moveq	r3, #0
 80115b4:	b2db      	uxtb	r3, r3
 80115b6:	2b00      	cmp	r3, #0
 80115b8:	d002      	beq.n	80115c0 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80115ba:	4805      	ldr	r0, [pc, #20]	; (80115d0 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 80115bc:	f7f2 fe04 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80115c0:	6878      	ldr	r0, [r7, #4]
 80115c2:	f7ff ffd9 	bl	8011578 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80115c6:	4603      	mov	r3, r0
    }
 80115c8:	4618      	mov	r0, r3
 80115ca:	3708      	adds	r7, #8
 80115cc:	46bd      	mov	sp, r7
 80115ce:	bd80      	pop	{r7, pc}
 80115d0:	08027578 	.word	0x08027578

080115d4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 80115d4:	b580      	push	{r7, lr}
 80115d6:	b082      	sub	sp, #8
 80115d8:	af00      	add	r7, sp, #0
 80115da:	6078      	str	r0, [r7, #4]
 80115dc:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80115de:	687b      	ldr	r3, [r7, #4]
 80115e0:	4618      	mov	r0, r3
 80115e2:	f7ff fdde 	bl	80111a2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80115e6:	6838      	ldr	r0, [r7, #0]
 80115e8:	f7f9 fd66 	bl	800b0b8 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 80115ec:	4603      	mov	r3, r0
 80115ee:	4619      	mov	r1, r3
 80115f0:	6878      	ldr	r0, [r7, #4]
 80115f2:	f000 fe85 	bl	8012300 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80115f6:	6878      	ldr	r0, [r7, #4]
 80115f8:	f7ff ffd0 	bl	801159c <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 80115fc:	4603      	mov	r3, r0
	}
 80115fe:	4618      	mov	r0, r3
 8011600:	3708      	adds	r7, #8
 8011602:	46bd      	mov	sp, r7
 8011604:	bd80      	pop	{r7, pc}

08011606 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8011606:	b580      	push	{r7, lr}
 8011608:	b082      	sub	sp, #8
 801160a:	af00      	add	r7, sp, #0
 801160c:	6078      	str	r0, [r7, #4]
 801160e:	687b      	ldr	r3, [r7, #4]
 8011610:	4618      	mov	r0, r3
 8011612:	f000 fe94 	bl	801233e <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1Ev>
 8011616:	687b      	ldr	r3, [r7, #4]
 8011618:	4618      	mov	r0, r3
 801161a:	3708      	adds	r7, #8
 801161c:	46bd      	mov	sp, r7
 801161e:	bd80      	pop	{r7, pc}

08011620 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      constexpr _Variant_storage() : _M_index(variant_npos) { }
 8011620:	b580      	push	{r7, lr}
 8011622:	b082      	sub	sp, #8
 8011624:	af00      	add	r7, sp, #0
 8011626:	6078      	str	r0, [r7, #4]
 8011628:	687b      	ldr	r3, [r7, #4]
 801162a:	4618      	mov	r0, r3
 801162c:	f7ff ffeb 	bl	8011606 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 8011630:	687b      	ldr	r3, [r7, #4]
 8011632:	22ff      	movs	r2, #255	; 0xff
 8011634:	761a      	strb	r2, [r3, #24]
 8011636:	687b      	ldr	r3, [r7, #4]
 8011638:	4618      	mov	r0, r3
 801163a:	3708      	adds	r7, #8
 801163c:	46bd      	mov	sp, r7
 801163e:	bd80      	pop	{r7, pc}

08011640 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8011640:	b480      	push	{r7}
 8011642:	b083      	sub	sp, #12
 8011644:	af00      	add	r7, sp, #0
 8011646:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 8011648:	687b      	ldr	r3, [r7, #4]
    }
 801164a:	4618      	mov	r0, r3
 801164c:	370c      	adds	r7, #12
 801164e:	46bd      	mov	sp, r7
 8011650:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011654:	4770      	bx	lr

08011656 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8011656:	b580      	push	{r7, lr}
 8011658:	b082      	sub	sp, #8
 801165a:	af00      	add	r7, sp, #0
 801165c:	7138      	strb	r0, [r7, #4]
 801165e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8011660:	6838      	ldr	r0, [r7, #0]
 8011662:	f000 fe9a 	bl	801239a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8011666:	4603      	mov	r3, r0
 8011668:	4618      	mov	r0, r3
 801166a:	f7f8 fabe 	bl	8009bea <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 801166e:	4603      	mov	r3, r0
 8011670:	4618      	mov	r0, r3
 8011672:	3708      	adds	r7, #8
 8011674:	46bd      	mov	sp, r7
 8011676:	bd80      	pop	{r7, pc}

08011678 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8011678:	b590      	push	{r4, r7, lr}
 801167a:	b083      	sub	sp, #12
 801167c:	af00      	add	r7, sp, #0
 801167e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8011680:	6878      	ldr	r0, [r7, #4]
 8011682:	f000 fe7f 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8011686:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8011688:	4619      	mov	r1, r3
 801168a:	4620      	mov	r0, r4
 801168c:	f7ff ffe3 	bl	8011656 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8011690:	4603      	mov	r3, r0
    }
 8011692:	4618      	mov	r0, r3
 8011694:	370c      	adds	r7, #12
 8011696:	46bd      	mov	sp, r7
 8011698:	bd90      	pop	{r4, r7, pc}

0801169a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801169a:	b580      	push	{r7, lr}
 801169c:	b082      	sub	sp, #8
 801169e:	af00      	add	r7, sp, #0
 80116a0:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80116a2:	6878      	ldr	r0, [r7, #4]
 80116a4:	f000 fe6e 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80116a8:	4603      	mov	r3, r0
 80116aa:	4618      	mov	r0, r3
 80116ac:	f7ff ffe4 	bl	8011678 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80116b0:	4603      	mov	r3, r0
	}
 80116b2:	4618      	mov	r0, r3
 80116b4:	3708      	adds	r7, #8
 80116b6:	46bd      	mov	sp, r7
 80116b8:	bd80      	pop	{r7, pc}

080116ba <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80116ba:	b5b0      	push	{r4, r5, r7, lr}
 80116bc:	b082      	sub	sp, #8
 80116be:	af00      	add	r7, sp, #0
 80116c0:	6078      	str	r0, [r7, #4]
 80116c2:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80116c4:	6878      	ldr	r0, [r7, #4]
 80116c6:	f000 fe52 	bl	801236e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80116ca:	4604      	mov	r4, r0
 80116cc:	6838      	ldr	r0, [r7, #0]
 80116ce:	f000 fe59 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80116d2:	4603      	mov	r3, r0
 80116d4:	4618      	mov	r0, r3
 80116d6:	f7ff ffe0 	bl	801169a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSH_>
 80116da:	4603      	mov	r3, r0
 80116dc:	4619      	mov	r1, r3
 80116de:	4620      	mov	r0, r4
 80116e0:	f000 fe66 	bl	80123b0 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 80116e4:	462b      	mov	r3, r5
      }
 80116e6:	4618      	mov	r0, r3
 80116e8:	3708      	adds	r7, #8
 80116ea:	46bd      	mov	sp, r7
 80116ec:	bdb0      	pop	{r4, r5, r7, pc}

080116ee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80116ee:	b5b0      	push	{r4, r5, r7, lr}
 80116f0:	b082      	sub	sp, #8
 80116f2:	af00      	add	r7, sp, #0
 80116f4:	6078      	str	r0, [r7, #4]
 80116f6:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80116f8:	6878      	ldr	r0, [r7, #4]
 80116fa:	f000 fe38 	bl	801236e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80116fe:	4604      	mov	r4, r0
 8011700:	6838      	ldr	r0, [r7, #0]
 8011702:	f000 fe3f 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8011706:	4603      	mov	r3, r0
 8011708:	4619      	mov	r1, r3
 801170a:	4620      	mov	r0, r4
 801170c:	f7ff ffd5 	bl	80116ba <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8011710:	462b      	mov	r3, r5
      }
 8011712:	4618      	mov	r0, r3
 8011714:	3708      	adds	r7, #8
 8011716:	46bd      	mov	sp, r7
 8011718:	bdb0      	pop	{r4, r5, r7, pc}

0801171a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801171a:	b5b0      	push	{r4, r5, r7, lr}
 801171c:	b082      	sub	sp, #8
 801171e:	af00      	add	r7, sp, #0
 8011720:	6078      	str	r0, [r7, #4]
 8011722:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8011724:	6878      	ldr	r0, [r7, #4]
 8011726:	f000 fe22 	bl	801236e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801172a:	4604      	mov	r4, r0
 801172c:	6838      	ldr	r0, [r7, #0]
 801172e:	f000 fe29 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8011732:	4603      	mov	r3, r0
 8011734:	4619      	mov	r1, r3
 8011736:	4620      	mov	r0, r4
 8011738:	f7ff ffd9 	bl	80116ee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 801173c:	462b      	mov	r3, r5
      }
 801173e:	4618      	mov	r0, r3
 8011740:	3708      	adds	r7, #8
 8011742:	46bd      	mov	sp, r7
 8011744:	bdb0      	pop	{r4, r5, r7, pc}

08011746 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8011746:	b580      	push	{r7, lr}
 8011748:	b082      	sub	sp, #8
 801174a:	af00      	add	r7, sp, #0
 801174c:	7138      	strb	r0, [r7, #4]
 801174e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8011750:	6838      	ldr	r0, [r7, #0]
 8011752:	f000 fe44 	bl	80123de <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8011756:	4603      	mov	r3, r0
 8011758:	4618      	mov	r0, r3
 801175a:	f7f8 f9aa 	bl	8009ab2 <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 801175e:	4603      	mov	r3, r0
 8011760:	4618      	mov	r0, r3
 8011762:	3708      	adds	r7, #8
 8011764:	46bd      	mov	sp, r7
 8011766:	bd80      	pop	{r7, pc}

08011768 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8011768:	b590      	push	{r4, r7, lr}
 801176a:	b083      	sub	sp, #12
 801176c:	af00      	add	r7, sp, #0
 801176e:	7138      	strb	r0, [r7, #4]
 8011770:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011772:	6838      	ldr	r0, [r7, #0]
 8011774:	f000 fe11 	bl	801239a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8011778:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801177a:	4619      	mov	r1, r3
 801177c:	4620      	mov	r0, r4
 801177e:	f7ff ffe2 	bl	8011746 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8011782:	4603      	mov	r3, r0
    }
 8011784:	4618      	mov	r0, r3
 8011786:	370c      	adds	r7, #12
 8011788:	46bd      	mov	sp, r7
 801178a:	bd90      	pop	{r4, r7, pc}

0801178c <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801178c:	b590      	push	{r4, r7, lr}
 801178e:	b083      	sub	sp, #12
 8011790:	af00      	add	r7, sp, #0
 8011792:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8011794:	6878      	ldr	r0, [r7, #4]
 8011796:	f000 fdf5 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801179a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801179c:	4619      	mov	r1, r3
 801179e:	4620      	mov	r0, r4
 80117a0:	f7ff ffe2 	bl	8011768 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80117a4:	4603      	mov	r3, r0
    }
 80117a6:	4618      	mov	r0, r3
 80117a8:	370c      	adds	r7, #12
 80117aa:	46bd      	mov	sp, r7
 80117ac:	bd90      	pop	{r4, r7, pc}

080117ae <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80117ae:	b580      	push	{r7, lr}
 80117b0:	b082      	sub	sp, #8
 80117b2:	af00      	add	r7, sp, #0
 80117b4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80117b6:	6878      	ldr	r0, [r7, #4]
 80117b8:	f000 fde4 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80117bc:	4603      	mov	r3, r0
 80117be:	4618      	mov	r0, r3
 80117c0:	f7ff ffe4 	bl	801178c <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80117c4:	4603      	mov	r3, r0
	}
 80117c6:	4618      	mov	r0, r3
 80117c8:	3708      	adds	r7, #8
 80117ca:	46bd      	mov	sp, r7
 80117cc:	bd80      	pop	{r7, pc}

080117ce <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80117ce:	b5b0      	push	{r4, r5, r7, lr}
 80117d0:	b082      	sub	sp, #8
 80117d2:	af00      	add	r7, sp, #0
 80117d4:	6078      	str	r0, [r7, #4]
 80117d6:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80117d8:	6878      	ldr	r0, [r7, #4]
 80117da:	f000 fdc8 	bl	801236e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80117de:	4604      	mov	r4, r0
 80117e0:	6838      	ldr	r0, [r7, #0]
 80117e2:	f000 fdcf 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80117e6:	4603      	mov	r3, r0
 80117e8:	4618      	mov	r0, r3
 80117ea:	f7ff ffe0 	bl	80117ae <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSH_>
 80117ee:	4603      	mov	r3, r0
 80117f0:	4619      	mov	r1, r3
 80117f2:	4620      	mov	r0, r4
 80117f4:	f000 fdfe 	bl	80123f4 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 80117f8:	462b      	mov	r3, r5
      }
 80117fa:	4618      	mov	r0, r3
 80117fc:	3708      	adds	r7, #8
 80117fe:	46bd      	mov	sp, r7
 8011800:	bdb0      	pop	{r4, r5, r7, pc}

08011802 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011802:	b5b0      	push	{r4, r5, r7, lr}
 8011804:	b082      	sub	sp, #8
 8011806:	af00      	add	r7, sp, #0
 8011808:	6078      	str	r0, [r7, #4]
 801180a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801180c:	6878      	ldr	r0, [r7, #4]
 801180e:	f000 fdae 	bl	801236e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011812:	4604      	mov	r4, r0
 8011814:	6838      	ldr	r0, [r7, #0]
 8011816:	f000 fdb5 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801181a:	4603      	mov	r3, r0
 801181c:	4619      	mov	r1, r3
 801181e:	4620      	mov	r0, r4
 8011820:	f7ff ffd5 	bl	80117ce <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8011824:	462b      	mov	r3, r5
      }
 8011826:	4618      	mov	r0, r3
 8011828:	3708      	adds	r7, #8
 801182a:	46bd      	mov	sp, r7
 801182c:	bdb0      	pop	{r4, r5, r7, pc}

0801182e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801182e:	b5b0      	push	{r4, r5, r7, lr}
 8011830:	b082      	sub	sp, #8
 8011832:	af00      	add	r7, sp, #0
 8011834:	6078      	str	r0, [r7, #4]
 8011836:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8011838:	6878      	ldr	r0, [r7, #4]
 801183a:	f000 fd98 	bl	801236e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801183e:	4604      	mov	r4, r0
 8011840:	6838      	ldr	r0, [r7, #0]
 8011842:	f000 fd9f 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8011846:	4603      	mov	r3, r0
 8011848:	4619      	mov	r1, r3
 801184a:	4620      	mov	r0, r4
 801184c:	f7ff ffd9 	bl	8011802 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8011850:	462b      	mov	r3, r5
      }
 8011852:	4618      	mov	r0, r3
 8011854:	3708      	adds	r7, #8
 8011856:	46bd      	mov	sp, r7
 8011858:	bdb0      	pop	{r4, r5, r7, pc}

0801185a <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801185a:	b580      	push	{r7, lr}
 801185c:	b082      	sub	sp, #8
 801185e:	af00      	add	r7, sp, #0
 8011860:	7138      	strb	r0, [r7, #4]
 8011862:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8011864:	6838      	ldr	r0, [r7, #0]
 8011866:	f000 fddc 	bl	8012422 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801186a:	4603      	mov	r3, r0
 801186c:	4618      	mov	r0, r3
 801186e:	f7f8 f954 	bl	8009b1a <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 8011872:	4603      	mov	r3, r0
 8011874:	4618      	mov	r0, r3
 8011876:	3708      	adds	r7, #8
 8011878:	46bd      	mov	sp, r7
 801187a:	bd80      	pop	{r7, pc}

0801187c <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801187c:	b590      	push	{r4, r7, lr}
 801187e:	b083      	sub	sp, #12
 8011880:	af00      	add	r7, sp, #0
 8011882:	7138      	strb	r0, [r7, #4]
 8011884:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011886:	6838      	ldr	r0, [r7, #0]
 8011888:	f000 fda9 	bl	80123de <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801188c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801188e:	4619      	mov	r1, r3
 8011890:	4620      	mov	r0, r4
 8011892:	f7ff ffe2 	bl	801185a <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8011896:	4603      	mov	r3, r0
    }
 8011898:	4618      	mov	r0, r3
 801189a:	370c      	adds	r7, #12
 801189c:	46bd      	mov	sp, r7
 801189e:	bd90      	pop	{r4, r7, pc}

080118a0 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80118a0:	b590      	push	{r4, r7, lr}
 80118a2:	b083      	sub	sp, #12
 80118a4:	af00      	add	r7, sp, #0
 80118a6:	7138      	strb	r0, [r7, #4]
 80118a8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80118aa:	6838      	ldr	r0, [r7, #0]
 80118ac:	f000 fd75 	bl	801239a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 80118b0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80118b2:	4619      	mov	r1, r3
 80118b4:	4620      	mov	r0, r4
 80118b6:	f7ff ffe1 	bl	801187c <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80118ba:	4603      	mov	r3, r0
    }
 80118bc:	4618      	mov	r0, r3
 80118be:	370c      	adds	r7, #12
 80118c0:	46bd      	mov	sp, r7
 80118c2:	bd90      	pop	{r4, r7, pc}

080118c4 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80118c4:	b590      	push	{r4, r7, lr}
 80118c6:	b083      	sub	sp, #12
 80118c8:	af00      	add	r7, sp, #0
 80118ca:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80118cc:	6878      	ldr	r0, [r7, #4]
 80118ce:	f000 fd59 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80118d2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80118d4:	4619      	mov	r1, r3
 80118d6:	4620      	mov	r0, r4
 80118d8:	f7ff ffe2 	bl	80118a0 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80118dc:	4603      	mov	r3, r0
    }
 80118de:	4618      	mov	r0, r3
 80118e0:	370c      	adds	r7, #12
 80118e2:	46bd      	mov	sp, r7
 80118e4:	bd90      	pop	{r4, r7, pc}

080118e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80118e6:	b580      	push	{r7, lr}
 80118e8:	b082      	sub	sp, #8
 80118ea:	af00      	add	r7, sp, #0
 80118ec:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80118ee:	6878      	ldr	r0, [r7, #4]
 80118f0:	f000 fd48 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80118f4:	4603      	mov	r3, r0
 80118f6:	4618      	mov	r0, r3
 80118f8:	f7ff ffe4 	bl	80118c4 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80118fc:	4603      	mov	r3, r0
	}
 80118fe:	4618      	mov	r0, r3
 8011900:	3708      	adds	r7, #8
 8011902:	46bd      	mov	sp, r7
 8011904:	bd80      	pop	{r7, pc}

08011906 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8011906:	b5b0      	push	{r4, r5, r7, lr}
 8011908:	b082      	sub	sp, #8
 801190a:	af00      	add	r7, sp, #0
 801190c:	6078      	str	r0, [r7, #4]
 801190e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8011910:	6878      	ldr	r0, [r7, #4]
 8011912:	f000 fd2c 	bl	801236e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011916:	4604      	mov	r4, r0
 8011918:	6838      	ldr	r0, [r7, #0]
 801191a:	f000 fd33 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801191e:	4603      	mov	r3, r0
 8011920:	4618      	mov	r0, r3
 8011922:	f7ff ffe0 	bl	80118e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSH_>
 8011926:	4603      	mov	r3, r0
 8011928:	4619      	mov	r1, r3
 801192a:	4620      	mov	r0, r4
 801192c:	f000 fd84 	bl	8012438 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8011930:	462b      	mov	r3, r5
      }
 8011932:	4618      	mov	r0, r3
 8011934:	3708      	adds	r7, #8
 8011936:	46bd      	mov	sp, r7
 8011938:	bdb0      	pop	{r4, r5, r7, pc}

0801193a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801193a:	b5b0      	push	{r4, r5, r7, lr}
 801193c:	b082      	sub	sp, #8
 801193e:	af00      	add	r7, sp, #0
 8011940:	6078      	str	r0, [r7, #4]
 8011942:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8011944:	6878      	ldr	r0, [r7, #4]
 8011946:	f000 fd12 	bl	801236e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801194a:	4604      	mov	r4, r0
 801194c:	6838      	ldr	r0, [r7, #0]
 801194e:	f000 fd19 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8011952:	4603      	mov	r3, r0
 8011954:	4619      	mov	r1, r3
 8011956:	4620      	mov	r0, r4
 8011958:	f7ff ffd5 	bl	8011906 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 801195c:	462b      	mov	r3, r5
      }
 801195e:	4618      	mov	r0, r3
 8011960:	3708      	adds	r7, #8
 8011962:	46bd      	mov	sp, r7
 8011964:	bdb0      	pop	{r4, r5, r7, pc}

08011966 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011966:	b5b0      	push	{r4, r5, r7, lr}
 8011968:	b082      	sub	sp, #8
 801196a:	af00      	add	r7, sp, #0
 801196c:	6078      	str	r0, [r7, #4]
 801196e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8011970:	6878      	ldr	r0, [r7, #4]
 8011972:	f000 fcfc 	bl	801236e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011976:	4604      	mov	r4, r0
 8011978:	6838      	ldr	r0, [r7, #0]
 801197a:	f000 fd03 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801197e:	4603      	mov	r3, r0
 8011980:	4619      	mov	r1, r3
 8011982:	4620      	mov	r0, r4
 8011984:	f7ff ffd9 	bl	801193a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8011988:	462b      	mov	r3, r5
      }
 801198a:	4618      	mov	r0, r3
 801198c:	3708      	adds	r7, #8
 801198e:	46bd      	mov	sp, r7
 8011990:	bdb0      	pop	{r4, r5, r7, pc}

08011992 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8011992:	b580      	push	{r7, lr}
 8011994:	b082      	sub	sp, #8
 8011996:	af00      	add	r7, sp, #0
 8011998:	7138      	strb	r0, [r7, #4]
 801199a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801199c:	6838      	ldr	r0, [r7, #0]
 801199e:	f000 fd62 	bl	8012466 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80119a2:	4603      	mov	r3, r0
 80119a4:	4618      	mov	r0, r3
 80119a6:	f7f8 f8ec 	bl	8009b82 <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 80119aa:	4603      	mov	r3, r0
 80119ac:	4618      	mov	r0, r3
 80119ae:	3708      	adds	r7, #8
 80119b0:	46bd      	mov	sp, r7
 80119b2:	bd80      	pop	{r7, pc}

080119b4 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80119b4:	b590      	push	{r4, r7, lr}
 80119b6:	b083      	sub	sp, #12
 80119b8:	af00      	add	r7, sp, #0
 80119ba:	7138      	strb	r0, [r7, #4]
 80119bc:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80119be:	6838      	ldr	r0, [r7, #0]
 80119c0:	f000 fd2f 	bl	8012422 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80119c4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80119c6:	4619      	mov	r1, r3
 80119c8:	4620      	mov	r0, r4
 80119ca:	f7ff ffe2 	bl	8011992 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>
 80119ce:	4603      	mov	r3, r0
    }
 80119d0:	4618      	mov	r0, r3
 80119d2:	370c      	adds	r7, #12
 80119d4:	46bd      	mov	sp, r7
 80119d6:	bd90      	pop	{r4, r7, pc}

080119d8 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80119d8:	b590      	push	{r4, r7, lr}
 80119da:	b083      	sub	sp, #12
 80119dc:	af00      	add	r7, sp, #0
 80119de:	7138      	strb	r0, [r7, #4]
 80119e0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80119e2:	6838      	ldr	r0, [r7, #0]
 80119e4:	f000 fcfb 	bl	80123de <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80119e8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80119ea:	4619      	mov	r1, r3
 80119ec:	4620      	mov	r0, r4
 80119ee:	f7ff ffe1 	bl	80119b4 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80119f2:	4603      	mov	r3, r0
    }
 80119f4:	4618      	mov	r0, r3
 80119f6:	370c      	adds	r7, #12
 80119f8:	46bd      	mov	sp, r7
 80119fa:	bd90      	pop	{r4, r7, pc}

080119fc <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80119fc:	b590      	push	{r4, r7, lr}
 80119fe:	b083      	sub	sp, #12
 8011a00:	af00      	add	r7, sp, #0
 8011a02:	7138      	strb	r0, [r7, #4]
 8011a04:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011a06:	6838      	ldr	r0, [r7, #0]
 8011a08:	f000 fcc7 	bl	801239a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8011a0c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8011a0e:	4619      	mov	r1, r3
 8011a10:	4620      	mov	r0, r4
 8011a12:	f7ff ffe1 	bl	80119d8 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011a16:	4603      	mov	r3, r0
    }
 8011a18:	4618      	mov	r0, r3
 8011a1a:	370c      	adds	r7, #12
 8011a1c:	46bd      	mov	sp, r7
 8011a1e:	bd90      	pop	{r4, r7, pc}

08011a20 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8011a20:	b590      	push	{r4, r7, lr}
 8011a22:	b083      	sub	sp, #12
 8011a24:	af00      	add	r7, sp, #0
 8011a26:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8011a28:	6878      	ldr	r0, [r7, #4]
 8011a2a:	f000 fcab 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8011a2e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8011a30:	4619      	mov	r1, r3
 8011a32:	4620      	mov	r0, r4
 8011a34:	f7ff ffe2 	bl	80119fc <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011a38:	4603      	mov	r3, r0
    }
 8011a3a:	4618      	mov	r0, r3
 8011a3c:	370c      	adds	r7, #12
 8011a3e:	46bd      	mov	sp, r7
 8011a40:	bd90      	pop	{r4, r7, pc}

08011a42 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8011a42:	b580      	push	{r7, lr}
 8011a44:	b082      	sub	sp, #8
 8011a46:	af00      	add	r7, sp, #0
 8011a48:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8011a4a:	6878      	ldr	r0, [r7, #4]
 8011a4c:	f000 fc9a 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8011a50:	4603      	mov	r3, r0
 8011a52:	4618      	mov	r0, r3
 8011a54:	f7ff ffe4 	bl	8011a20 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8011a58:	4603      	mov	r3, r0
	}
 8011a5a:	4618      	mov	r0, r3
 8011a5c:	3708      	adds	r7, #8
 8011a5e:	46bd      	mov	sp, r7
 8011a60:	bd80      	pop	{r7, pc}

08011a62 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8011a62:	b5b0      	push	{r4, r5, r7, lr}
 8011a64:	b082      	sub	sp, #8
 8011a66:	af00      	add	r7, sp, #0
 8011a68:	6078      	str	r0, [r7, #4]
 8011a6a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8011a6c:	6878      	ldr	r0, [r7, #4]
 8011a6e:	f000 fc7e 	bl	801236e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011a72:	4604      	mov	r4, r0
 8011a74:	6838      	ldr	r0, [r7, #0]
 8011a76:	f000 fc85 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8011a7a:	4603      	mov	r3, r0
 8011a7c:	4618      	mov	r0, r3
 8011a7e:	f7ff ffe0 	bl	8011a42 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSH_>
 8011a82:	4603      	mov	r3, r0
 8011a84:	4619      	mov	r1, r3
 8011a86:	4620      	mov	r0, r4
 8011a88:	f000 fcf8 	bl	801247c <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8011a8c:	462b      	mov	r3, r5
      }
 8011a8e:	4618      	mov	r0, r3
 8011a90:	3708      	adds	r7, #8
 8011a92:	46bd      	mov	sp, r7
 8011a94:	bdb0      	pop	{r4, r5, r7, pc}

08011a96 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011a96:	b5b0      	push	{r4, r5, r7, lr}
 8011a98:	b082      	sub	sp, #8
 8011a9a:	af00      	add	r7, sp, #0
 8011a9c:	6078      	str	r0, [r7, #4]
 8011a9e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8011aa0:	6878      	ldr	r0, [r7, #4]
 8011aa2:	f000 fc64 	bl	801236e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011aa6:	4604      	mov	r4, r0
 8011aa8:	6838      	ldr	r0, [r7, #0]
 8011aaa:	f000 fc6b 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8011aae:	4603      	mov	r3, r0
 8011ab0:	4619      	mov	r1, r3
 8011ab2:	4620      	mov	r0, r4
 8011ab4:	f7ff ffd5 	bl	8011a62 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8011ab8:	462b      	mov	r3, r5
      }
 8011aba:	4618      	mov	r0, r3
 8011abc:	3708      	adds	r7, #8
 8011abe:	46bd      	mov	sp, r7
 8011ac0:	bdb0      	pop	{r4, r5, r7, pc}

08011ac2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011ac2:	b5b0      	push	{r4, r5, r7, lr}
 8011ac4:	b082      	sub	sp, #8
 8011ac6:	af00      	add	r7, sp, #0
 8011ac8:	6078      	str	r0, [r7, #4]
 8011aca:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8011acc:	6878      	ldr	r0, [r7, #4]
 8011ace:	f000 fc4e 	bl	801236e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011ad2:	4604      	mov	r4, r0
 8011ad4:	6838      	ldr	r0, [r7, #0]
 8011ad6:	f000 fc55 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8011ada:	4603      	mov	r3, r0
 8011adc:	4619      	mov	r1, r3
 8011ade:	4620      	mov	r0, r4
 8011ae0:	f7ff ffd9 	bl	8011a96 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8011ae4:	462b      	mov	r3, r5
      }
 8011ae6:	4618      	mov	r0, r3
 8011ae8:	3708      	adds	r7, #8
 8011aea:	46bd      	mov	sp, r7
 8011aec:	bdb0      	pop	{r4, r5, r7, pc}

08011aee <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSS_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8011aee:	b580      	push	{r7, lr}
 8011af0:	b082      	sub	sp, #8
 8011af2:	af00      	add	r7, sp, #0
 8011af4:	6078      	str	r0, [r7, #4]
 8011af6:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8011af8:	683b      	ldr	r3, [r7, #0]
 8011afa:	009b      	lsls	r3, r3, #2
 8011afc:	687a      	ldr	r2, [r7, #4]
 8011afe:	4413      	add	r3, r2
 8011b00:	4618      	mov	r0, r3
 8011b02:	f000 fcd2 	bl	80124aa <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 8011b06:	4603      	mov	r3, r0
	}
 8011b08:	4618      	mov	r0, r3
 8011b0a:	3708      	adds	r7, #8
 8011b0c:	46bd      	mov	sp, r7
 8011b0e:	bd80      	pop	{r7, pc}

08011b10 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8011b10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011b12:	b085      	sub	sp, #20
 8011b14:	af00      	add	r7, sp, #0
 8011b16:	6078      	str	r0, [r7, #4]
 8011b18:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8011b1a:	4b0f      	ldr	r3, [pc, #60]	; (8011b58 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_+0x48>)
 8011b1c:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8011b1e:	6838      	ldr	r0, [r7, #0]
 8011b20:	f7ff fa62 	bl	8010fe8 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8011b24:	4603      	mov	r3, r0
 8011b26:	4619      	mov	r1, r3
 8011b28:	68f8      	ldr	r0, [r7, #12]
 8011b2a:	f7ff ffe0 	bl	8011aee <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSS_jDpT_>
 8011b2e:	4603      	mov	r3, r0
 8011b30:	681b      	ldr	r3, [r3, #0]
 8011b32:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8011b34:	68bc      	ldr	r4, [r7, #8]
 8011b36:	6878      	ldr	r0, [r7, #4]
 8011b38:	f000 fcc2 	bl	80124c0 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011b3c:	4605      	mov	r5, r0
 8011b3e:	6838      	ldr	r0, [r7, #0]
 8011b40:	f000 fc20 	bl	8012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8011b44:	4603      	mov	r3, r0
 8011b46:	4619      	mov	r1, r3
 8011b48:	4628      	mov	r0, r5
 8011b4a:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8011b4c:	4633      	mov	r3, r6
    }
 8011b4e:	4618      	mov	r0, r3
 8011b50:	3714      	adds	r7, #20
 8011b52:	46bd      	mov	sp, r7
 8011b54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011b56:	bf00      	nop
 8011b58:	08027ee4 	.word	0x08027ee4

08011b5c <_ZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 8011b5c:	b580      	push	{r7, lr}
 8011b5e:	b084      	sub	sp, #16
 8011b60:	af00      	add	r7, sp, #0
 8011b62:	6078      	str	r0, [r7, #4]
 8011b64:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 8011b66:	683b      	ldr	r3, [r7, #0]
 8011b68:	7e1a      	ldrb	r2, [r3, #24]
 8011b6a:	687b      	ldr	r3, [r7, #4]
 8011b6c:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8011b6e:	687b      	ldr	r3, [r7, #4]
 8011b70:	60fb      	str	r3, [r7, #12]
 8011b72:	6838      	ldr	r0, [r7, #0]
 8011b74:	f000 fbf0 	bl	8012358 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8011b78:	4603      	mov	r3, r0
 8011b7a:	4618      	mov	r0, r3
 8011b7c:	f7ff fd60 	bl	8011640 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJS5_ifbEEEEDcOT0_>
 8011b80:	4602      	mov	r2, r0
 8011b82:	f107 030c 	add.w	r3, r7, #12
 8011b86:	4611      	mov	r1, r2
 8011b88:	4618      	mov	r0, r3
 8011b8a:	f7ff ffc1 	bl	8011b10 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_>
    }
 8011b8e:	bf00      	nop
 8011b90:	3710      	adds	r7, #16
 8011b92:	46bd      	mov	sp, r7
 8011b94:	bd80      	pop	{r7, pc}

08011b96 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant16_Variant_storageILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8011b96:	b480      	push	{r7}
 8011b98:	b083      	sub	sp, #12
 8011b9a:	af00      	add	r7, sp, #0
 8011b9c:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8011b9e:	687b      	ldr	r3, [r7, #4]
    }
 8011ba0:	4618      	mov	r0, r3
 8011ba2:	370c      	adds	r7, #12
 8011ba4:	46bd      	mov	sp, r7
 8011ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011baa:	4770      	bx	lr

08011bac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8011bac:	b580      	push	{r7, lr}
 8011bae:	b082      	sub	sp, #8
 8011bb0:	af00      	add	r7, sp, #0
 8011bb2:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8011bb4:	6878      	ldr	r0, [r7, #4]
 8011bb6:	f000 fb37 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011bba:	4603      	mov	r3, r0
 8011bbc:	4618      	mov	r0, r3
 8011bbe:	f7ff fbf6 	bl	80113ae <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8011bc2:	4603      	mov	r3, r0
	}
 8011bc4:	4618      	mov	r0, r3
 8011bc6:	3708      	adds	r7, #8
 8011bc8:	46bd      	mov	sp, r7
 8011bca:	bd80      	pop	{r7, pc}

08011bcc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8011bcc:	b5b0      	push	{r4, r5, r7, lr}
 8011bce:	b082      	sub	sp, #8
 8011bd0:	af00      	add	r7, sp, #0
 8011bd2:	6078      	str	r0, [r7, #4]
 8011bd4:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8011bd6:	6878      	ldr	r0, [r7, #4]
 8011bd8:	f000 fc7d 	bl	80124d6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011bdc:	4604      	mov	r4, r0
 8011bde:	6838      	ldr	r0, [r7, #0]
 8011be0:	f000 fb22 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011be4:	4603      	mov	r3, r0
 8011be6:	4618      	mov	r0, r3
 8011be8:	f7ff ffe0 	bl	8011bac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESI_EEDcOT0_>
 8011bec:	4603      	mov	r3, r0
 8011bee:	4619      	mov	r1, r3
 8011bf0:	4620      	mov	r0, r4
 8011bf2:	f000 fc7b 	bl	80124ec <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8011bf6:	462b      	mov	r3, r5
      }
 8011bf8:	4618      	mov	r0, r3
 8011bfa:	3708      	adds	r7, #8
 8011bfc:	46bd      	mov	sp, r7
 8011bfe:	bdb0      	pop	{r4, r5, r7, pc}

08011c00 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011c00:	b5b0      	push	{r4, r5, r7, lr}
 8011c02:	b082      	sub	sp, #8
 8011c04:	af00      	add	r7, sp, #0
 8011c06:	6078      	str	r0, [r7, #4]
 8011c08:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8011c0a:	6878      	ldr	r0, [r7, #4]
 8011c0c:	f000 fc63 	bl	80124d6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011c10:	4604      	mov	r4, r0
 8011c12:	6838      	ldr	r0, [r7, #0]
 8011c14:	f000 fb08 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011c18:	4603      	mov	r3, r0
 8011c1a:	4619      	mov	r1, r3
 8011c1c:	4620      	mov	r0, r4
 8011c1e:	f7ff ffd5 	bl	8011bcc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8011c22:	462b      	mov	r3, r5
      }
 8011c24:	4618      	mov	r0, r3
 8011c26:	3708      	adds	r7, #8
 8011c28:	46bd      	mov	sp, r7
 8011c2a:	bdb0      	pop	{r4, r5, r7, pc}

08011c2c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011c2c:	b5b0      	push	{r4, r5, r7, lr}
 8011c2e:	b082      	sub	sp, #8
 8011c30:	af00      	add	r7, sp, #0
 8011c32:	6078      	str	r0, [r7, #4]
 8011c34:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8011c36:	6878      	ldr	r0, [r7, #4]
 8011c38:	f000 fc4d 	bl	80124d6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011c3c:	4604      	mov	r4, r0
 8011c3e:	6838      	ldr	r0, [r7, #0]
 8011c40:	f000 faf2 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011c44:	4603      	mov	r3, r0
 8011c46:	4619      	mov	r1, r3
 8011c48:	4620      	mov	r0, r4
 8011c4a:	f7ff ffd9 	bl	8011c00 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8011c4e:	462b      	mov	r3, r5
      }
 8011c50:	4618      	mov	r0, r3
 8011c52:	3708      	adds	r7, #8
 8011c54:	46bd      	mov	sp, r7
 8011c56:	bdb0      	pop	{r4, r5, r7, pc}

08011c58 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8011c58:	b580      	push	{r7, lr}
 8011c5a:	b082      	sub	sp, #8
 8011c5c:	af00      	add	r7, sp, #0
 8011c5e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8011c60:	6878      	ldr	r0, [r7, #4]
 8011c62:	f000 fae1 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011c66:	4603      	mov	r3, r0
 8011c68:	4618      	mov	r0, r3
 8011c6a:	f7ff fc09 	bl	8011480 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8011c6e:	4603      	mov	r3, r0
	}
 8011c70:	4618      	mov	r0, r3
 8011c72:	3708      	adds	r7, #8
 8011c74:	46bd      	mov	sp, r7
 8011c76:	bd80      	pop	{r7, pc}

08011c78 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8011c78:	b5b0      	push	{r4, r5, r7, lr}
 8011c7a:	b082      	sub	sp, #8
 8011c7c:	af00      	add	r7, sp, #0
 8011c7e:	6078      	str	r0, [r7, #4]
 8011c80:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8011c82:	6878      	ldr	r0, [r7, #4]
 8011c84:	f000 fc27 	bl	80124d6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011c88:	4604      	mov	r4, r0
 8011c8a:	6838      	ldr	r0, [r7, #0]
 8011c8c:	f000 facc 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011c90:	4603      	mov	r3, r0
 8011c92:	4618      	mov	r0, r3
 8011c94:	f7ff ffe0 	bl	8011c58 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESI_EEDcOT0_>
 8011c98:	4603      	mov	r3, r0
 8011c9a:	4619      	mov	r1, r3
 8011c9c:	4620      	mov	r0, r4
 8011c9e:	f000 fc3c 	bl	801251a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8011ca2:	462b      	mov	r3, r5
      }
 8011ca4:	4618      	mov	r0, r3
 8011ca6:	3708      	adds	r7, #8
 8011ca8:	46bd      	mov	sp, r7
 8011caa:	bdb0      	pop	{r4, r5, r7, pc}

08011cac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011cac:	b5b0      	push	{r4, r5, r7, lr}
 8011cae:	b082      	sub	sp, #8
 8011cb0:	af00      	add	r7, sp, #0
 8011cb2:	6078      	str	r0, [r7, #4]
 8011cb4:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8011cb6:	6878      	ldr	r0, [r7, #4]
 8011cb8:	f000 fc0d 	bl	80124d6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011cbc:	4604      	mov	r4, r0
 8011cbe:	6838      	ldr	r0, [r7, #0]
 8011cc0:	f000 fab2 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011cc4:	4603      	mov	r3, r0
 8011cc6:	4619      	mov	r1, r3
 8011cc8:	4620      	mov	r0, r4
 8011cca:	f7ff ffd5 	bl	8011c78 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8011cce:	462b      	mov	r3, r5
      }
 8011cd0:	4618      	mov	r0, r3
 8011cd2:	3708      	adds	r7, #8
 8011cd4:	46bd      	mov	sp, r7
 8011cd6:	bdb0      	pop	{r4, r5, r7, pc}

08011cd8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011cd8:	b5b0      	push	{r4, r5, r7, lr}
 8011cda:	b082      	sub	sp, #8
 8011cdc:	af00      	add	r7, sp, #0
 8011cde:	6078      	str	r0, [r7, #4]
 8011ce0:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8011ce2:	6878      	ldr	r0, [r7, #4]
 8011ce4:	f000 fbf7 	bl	80124d6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011ce8:	4604      	mov	r4, r0
 8011cea:	6838      	ldr	r0, [r7, #0]
 8011cec:	f000 fa9c 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011cf0:	4603      	mov	r3, r0
 8011cf2:	4619      	mov	r1, r3
 8011cf4:	4620      	mov	r0, r4
 8011cf6:	f7ff ffd9 	bl	8011cac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8011cfa:	462b      	mov	r3, r5
      }
 8011cfc:	4618      	mov	r0, r3
 8011cfe:	3708      	adds	r7, #8
 8011d00:	46bd      	mov	sp, r7
 8011d02:	bdb0      	pop	{r4, r5, r7, pc}

08011d04 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8011d04:	b580      	push	{r7, lr}
 8011d06:	b082      	sub	sp, #8
 8011d08:	af00      	add	r7, sp, #0
 8011d0a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8011d0c:	6878      	ldr	r0, [r7, #4]
 8011d0e:	f000 fa8b 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011d12:	4603      	mov	r3, r0
 8011d14:	4618      	mov	r0, r3
 8011d16:	f7ff fc2f 	bl	8011578 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8011d1a:	4603      	mov	r3, r0
	}
 8011d1c:	4618      	mov	r0, r3
 8011d1e:	3708      	adds	r7, #8
 8011d20:	46bd      	mov	sp, r7
 8011d22:	bd80      	pop	{r7, pc}

08011d24 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8011d24:	b5b0      	push	{r4, r5, r7, lr}
 8011d26:	b082      	sub	sp, #8
 8011d28:	af00      	add	r7, sp, #0
 8011d2a:	6078      	str	r0, [r7, #4]
 8011d2c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8011d2e:	6878      	ldr	r0, [r7, #4]
 8011d30:	f000 fbd1 	bl	80124d6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011d34:	4604      	mov	r4, r0
 8011d36:	6838      	ldr	r0, [r7, #0]
 8011d38:	f000 fa76 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011d3c:	4603      	mov	r3, r0
 8011d3e:	4618      	mov	r0, r3
 8011d40:	f7ff ffe0 	bl	8011d04 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESI_EEDcOT0_>
 8011d44:	4603      	mov	r3, r0
 8011d46:	4619      	mov	r1, r3
 8011d48:	4620      	mov	r0, r4
 8011d4a:	f000 fbfd 	bl	8012548 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8011d4e:	462b      	mov	r3, r5
      }
 8011d50:	4618      	mov	r0, r3
 8011d52:	3708      	adds	r7, #8
 8011d54:	46bd      	mov	sp, r7
 8011d56:	bdb0      	pop	{r4, r5, r7, pc}

08011d58 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011d58:	b5b0      	push	{r4, r5, r7, lr}
 8011d5a:	b082      	sub	sp, #8
 8011d5c:	af00      	add	r7, sp, #0
 8011d5e:	6078      	str	r0, [r7, #4]
 8011d60:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8011d62:	6878      	ldr	r0, [r7, #4]
 8011d64:	f000 fbb7 	bl	80124d6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011d68:	4604      	mov	r4, r0
 8011d6a:	6838      	ldr	r0, [r7, #0]
 8011d6c:	f000 fa5c 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011d70:	4603      	mov	r3, r0
 8011d72:	4619      	mov	r1, r3
 8011d74:	4620      	mov	r0, r4
 8011d76:	f7ff ffd5 	bl	8011d24 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8011d7a:	462b      	mov	r3, r5
      }
 8011d7c:	4618      	mov	r0, r3
 8011d7e:	3708      	adds	r7, #8
 8011d80:	46bd      	mov	sp, r7
 8011d82:	bdb0      	pop	{r4, r5, r7, pc}

08011d84 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011d84:	b5b0      	push	{r4, r5, r7, lr}
 8011d86:	b082      	sub	sp, #8
 8011d88:	af00      	add	r7, sp, #0
 8011d8a:	6078      	str	r0, [r7, #4]
 8011d8c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8011d8e:	6878      	ldr	r0, [r7, #4]
 8011d90:	f000 fba1 	bl	80124d6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011d94:	4604      	mov	r4, r0
 8011d96:	6838      	ldr	r0, [r7, #0]
 8011d98:	f000 fa46 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011d9c:	4603      	mov	r3, r0
 8011d9e:	4619      	mov	r1, r3
 8011da0:	4620      	mov	r0, r4
 8011da2:	f7ff ffd9 	bl	8011d58 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8011da6:	462b      	mov	r3, r5
      }
 8011da8:	4618      	mov	r0, r3
 8011daa:	3708      	adds	r7, #8
 8011dac:	46bd      	mov	sp, r7
 8011dae:	bdb0      	pop	{r4, r5, r7, pc}

08011db0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8011db0:	b580      	push	{r7, lr}
 8011db2:	b082      	sub	sp, #8
 8011db4:	af00      	add	r7, sp, #0
 8011db6:	7138      	strb	r0, [r7, #4]
 8011db8:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8011dba:	6838      	ldr	r0, [r7, #0]
 8011dbc:	f000 fbdb 	bl	8012576 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8011dc0:	4603      	mov	r3, r0
 8011dc2:	4618      	mov	r0, r3
 8011dc4:	f7f3 ff4b 	bl	8005c5e <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 8011dc8:	4603      	mov	r3, r0
 8011dca:	4618      	mov	r0, r3
 8011dcc:	3708      	adds	r7, #8
 8011dce:	46bd      	mov	sp, r7
 8011dd0:	bd80      	pop	{r7, pc}

08011dd2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8011dd2:	b590      	push	{r4, r7, lr}
 8011dd4:	b083      	sub	sp, #12
 8011dd6:	af00      	add	r7, sp, #0
 8011dd8:	7138      	strb	r0, [r7, #4]
 8011dda:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011ddc:	6838      	ldr	r0, [r7, #0]
 8011dde:	f000 fa84 	bl	80122ea <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8011de2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8011de4:	4619      	mov	r1, r3
 8011de6:	4620      	mov	r0, r4
 8011de8:	f7ff ffe2 	bl	8011db0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8011dec:	4603      	mov	r3, r0
    }
 8011dee:	4618      	mov	r0, r3
 8011df0:	370c      	adds	r7, #12
 8011df2:	46bd      	mov	sp, r7
 8011df4:	bd90      	pop	{r4, r7, pc}

08011df6 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8011df6:	b590      	push	{r4, r7, lr}
 8011df8:	b083      	sub	sp, #12
 8011dfa:	af00      	add	r7, sp, #0
 8011dfc:	7138      	strb	r0, [r7, #4]
 8011dfe:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011e00:	6838      	ldr	r0, [r7, #0]
 8011e02:	f000 fa48 	bl	8012296 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8011e06:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8011e08:	4619      	mov	r1, r3
 8011e0a:	4620      	mov	r0, r4
 8011e0c:	f7ff ffe1 	bl	8011dd2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011e10:	4603      	mov	r3, r0
    }
 8011e12:	4618      	mov	r0, r3
 8011e14:	370c      	adds	r7, #12
 8011e16:	46bd      	mov	sp, r7
 8011e18:	bd90      	pop	{r4, r7, pc}

08011e1a <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8011e1a:	b590      	push	{r4, r7, lr}
 8011e1c:	b083      	sub	sp, #12
 8011e1e:	af00      	add	r7, sp, #0
 8011e20:	7138      	strb	r0, [r7, #4]
 8011e22:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011e24:	6838      	ldr	r0, [r7, #0]
 8011e26:	f000 fa0a 	bl	801223e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8011e2a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8011e2c:	4619      	mov	r1, r3
 8011e2e:	4620      	mov	r0, r4
 8011e30:	f7ff ffe1 	bl	8011df6 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011e34:	4603      	mov	r3, r0
    }
 8011e36:	4618      	mov	r0, r3
 8011e38:	370c      	adds	r7, #12
 8011e3a:	46bd      	mov	sp, r7
 8011e3c:	bd90      	pop	{r4, r7, pc}

08011e3e <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8011e3e:	b590      	push	{r4, r7, lr}
 8011e40:	b083      	sub	sp, #12
 8011e42:	af00      	add	r7, sp, #0
 8011e44:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8011e46:	6878      	ldr	r0, [r7, #4]
 8011e48:	f000 f9ee 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011e4c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8011e4e:	4619      	mov	r1, r3
 8011e50:	4620      	mov	r0, r4
 8011e52:	f7ff ffe2 	bl	8011e1a <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011e56:	4603      	mov	r3, r0
    }
 8011e58:	4618      	mov	r0, r3
 8011e5a:	370c      	adds	r7, #12
 8011e5c:	46bd      	mov	sp, r7
 8011e5e:	bd90      	pop	{r4, r7, pc}

08011e60 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8011e60:	b580      	push	{r7, lr}
 8011e62:	b082      	sub	sp, #8
 8011e64:	af00      	add	r7, sp, #0
 8011e66:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8011e68:	6878      	ldr	r0, [r7, #4]
 8011e6a:	f000 f9dd 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011e6e:	4603      	mov	r3, r0
 8011e70:	4618      	mov	r0, r3
 8011e72:	f7ff ffe4 	bl	8011e3e <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8011e76:	4603      	mov	r3, r0
	}
 8011e78:	4618      	mov	r0, r3
 8011e7a:	3708      	adds	r7, #8
 8011e7c:	46bd      	mov	sp, r7
 8011e7e:	bd80      	pop	{r7, pc}

08011e80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8011e80:	b5b0      	push	{r4, r5, r7, lr}
 8011e82:	b082      	sub	sp, #8
 8011e84:	af00      	add	r7, sp, #0
 8011e86:	6078      	str	r0, [r7, #4]
 8011e88:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8011e8a:	6878      	ldr	r0, [r7, #4]
 8011e8c:	f000 fb23 	bl	80124d6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011e90:	4604      	mov	r4, r0
 8011e92:	6838      	ldr	r0, [r7, #0]
 8011e94:	f000 f9c8 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011e98:	4603      	mov	r3, r0
 8011e9a:	4618      	mov	r0, r3
 8011e9c:	f7ff ffe0 	bl	8011e60 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESI_EEDcOT0_>
 8011ea0:	4603      	mov	r3, r0
 8011ea2:	4619      	mov	r1, r3
 8011ea4:	4620      	mov	r0, r4
 8011ea6:	f000 fb71 	bl	801258c <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8011eaa:	462b      	mov	r3, r5
      }
 8011eac:	4618      	mov	r0, r3
 8011eae:	3708      	adds	r7, #8
 8011eb0:	46bd      	mov	sp, r7
 8011eb2:	bdb0      	pop	{r4, r5, r7, pc}

08011eb4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011eb4:	b5b0      	push	{r4, r5, r7, lr}
 8011eb6:	b082      	sub	sp, #8
 8011eb8:	af00      	add	r7, sp, #0
 8011eba:	6078      	str	r0, [r7, #4]
 8011ebc:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8011ebe:	6878      	ldr	r0, [r7, #4]
 8011ec0:	f000 fb09 	bl	80124d6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011ec4:	4604      	mov	r4, r0
 8011ec6:	6838      	ldr	r0, [r7, #0]
 8011ec8:	f000 f9ae 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011ecc:	4603      	mov	r3, r0
 8011ece:	4619      	mov	r1, r3
 8011ed0:	4620      	mov	r0, r4
 8011ed2:	f7ff ffd5 	bl	8011e80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8011ed6:	462b      	mov	r3, r5
      }
 8011ed8:	4618      	mov	r0, r3
 8011eda:	3708      	adds	r7, #8
 8011edc:	46bd      	mov	sp, r7
 8011ede:	bdb0      	pop	{r4, r5, r7, pc}

08011ee0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011ee0:	b5b0      	push	{r4, r5, r7, lr}
 8011ee2:	b082      	sub	sp, #8
 8011ee4:	af00      	add	r7, sp, #0
 8011ee6:	6078      	str	r0, [r7, #4]
 8011ee8:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8011eea:	6878      	ldr	r0, [r7, #4]
 8011eec:	f000 faf3 	bl	80124d6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011ef0:	4604      	mov	r4, r0
 8011ef2:	6838      	ldr	r0, [r7, #0]
 8011ef4:	f000 f998 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011ef8:	4603      	mov	r3, r0
 8011efa:	4619      	mov	r1, r3
 8011efc:	4620      	mov	r0, r4
 8011efe:	f7ff ffd9 	bl	8011eb4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8011f02:	462b      	mov	r3, r5
      }
 8011f04:	4618      	mov	r0, r3
 8011f06:	3708      	adds	r7, #8
 8011f08:	46bd      	mov	sp, r7
 8011f0a:	bdb0      	pop	{r4, r5, r7, pc}

08011f0c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSJ_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8011f0c:	b580      	push	{r7, lr}
 8011f0e:	b082      	sub	sp, #8
 8011f10:	af00      	add	r7, sp, #0
 8011f12:	6078      	str	r0, [r7, #4]
 8011f14:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8011f16:	683b      	ldr	r3, [r7, #0]
 8011f18:	009b      	lsls	r3, r3, #2
 8011f1a:	687a      	ldr	r2, [r7, #4]
 8011f1c:	4413      	add	r3, r2
 8011f1e:	4618      	mov	r0, r3
 8011f20:	f000 fb4b 	bl	80125ba <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 8011f24:	4603      	mov	r3, r0
	}
 8011f26:	4618      	mov	r0, r3
 8011f28:	3708      	adds	r7, #8
 8011f2a:	46bd      	mov	sp, r7
 8011f2c:	bd80      	pop	{r7, pc}
	...

08011f30 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8011f30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f32:	b085      	sub	sp, #20
 8011f34:	af00      	add	r7, sp, #0
 8011f36:	6078      	str	r0, [r7, #4]
 8011f38:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8011f3a:	4b0f      	ldr	r3, [pc, #60]	; (8011f78 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_+0x48>)
 8011f3c:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8011f3e:	6838      	ldr	r0, [r7, #0]
 8011f40:	f7ff f852 	bl	8010fe8 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8011f44:	4603      	mov	r3, r0
 8011f46:	4619      	mov	r1, r3
 8011f48:	68f8      	ldr	r0, [r7, #12]
 8011f4a:	f7ff ffdf 	bl	8011f0c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSJ_jDpT_>
 8011f4e:	4603      	mov	r3, r0
 8011f50:	681b      	ldr	r3, [r3, #0]
 8011f52:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8011f54:	68bc      	ldr	r4, [r7, #8]
 8011f56:	6878      	ldr	r0, [r7, #4]
 8011f58:	f000 fb3a 	bl	80125d0 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011f5c:	4605      	mov	r5, r0
 8011f5e:	6838      	ldr	r0, [r7, #0]
 8011f60:	f000 f962 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8011f64:	4603      	mov	r3, r0
 8011f66:	4619      	mov	r1, r3
 8011f68:	4628      	mov	r0, r5
 8011f6a:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8011f6c:	4633      	mov	r3, r6
    }
 8011f6e:	4618      	mov	r0, r3
 8011f70:	3714      	adds	r7, #20
 8011f72:	46bd      	mov	sp, r7
 8011f74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011f76:	bf00      	nop
 8011f78:	08027ef4 	.word	0x08027ef4

08011f7c <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 8011f7c:	b580      	push	{r7, lr}
 8011f7e:	b084      	sub	sp, #16
 8011f80:	af00      	add	r7, sp, #0
 8011f82:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 8011f84:	6878      	ldr	r0, [r7, #4]
 8011f86:	f7ff fe06 	bl	8011b96 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant16_Variant_storageILb0EJS5_ifbEEEEDcOT0_>
 8011f8a:	4602      	mov	r2, r0
 8011f8c:	f107 030c 	add.w	r3, r7, #12
 8011f90:	4611      	mov	r1, r2
 8011f92:	4618      	mov	r0, r3
 8011f94:	f7ff ffcc 	bl	8011f30 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>
      }
 8011f98:	bf00      	nop
 8011f9a:	3710      	adds	r7, #16
 8011f9c:	46bd      	mov	sp, r7
 8011f9e:	bd80      	pop	{r7, pc}

08011fa0 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8011fa0:	b480      	push	{r7}
 8011fa2:	b083      	sub	sp, #12
 8011fa4:	af00      	add	r7, sp, #0
 8011fa6:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8011fa8:	687b      	ldr	r3, [r7, #4]
 8011faa:	689b      	ldr	r3, [r3, #8]
      }
 8011fac:	4618      	mov	r0, r3
 8011fae:	370c      	adds	r7, #12
 8011fb0:	46bd      	mov	sp, r7
 8011fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011fb6:	4770      	bx	lr

08011fb8 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8011fb8:	b480      	push	{r7}
 8011fba:	b083      	sub	sp, #12
 8011fbc:	af00      	add	r7, sp, #0
 8011fbe:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8011fc0:	687b      	ldr	r3, [r7, #4]
 8011fc2:	3304      	adds	r3, #4
 8011fc4:	4618      	mov	r0, r3
 8011fc6:	370c      	adds	r7, #12
 8011fc8:	46bd      	mov	sp, r7
 8011fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011fce:	4770      	bx	lr

08011fd0 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8011fd0:	b590      	push	{r4, r7, lr}
 8011fd2:	b087      	sub	sp, #28
 8011fd4:	af00      	add	r7, sp, #0
 8011fd6:	60f8      	str	r0, [r7, #12]
 8011fd8:	60b9      	str	r1, [r7, #8]
 8011fda:	607a      	str	r2, [r7, #4]
 8011fdc:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8011fde:	68bb      	ldr	r3, [r7, #8]
 8011fe0:	2b00      	cmp	r3, #0
 8011fe2:	d01b      	beq.n	801201c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8011fe4:	68fc      	ldr	r4, [r7, #12]
 8011fe6:	68b8      	ldr	r0, [r7, #8]
 8011fe8:	f7f1 fa1c 	bl	8003424 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8011fec:	4603      	mov	r3, r0
 8011fee:	683a      	ldr	r2, [r7, #0]
 8011ff0:	4619      	mov	r1, r3
 8011ff2:	4620      	mov	r0, r4
 8011ff4:	f7f0 fe3b 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8011ff8:	4603      	mov	r3, r0
 8011ffa:	f083 0301 	eor.w	r3, r3, #1
 8011ffe:	b2db      	uxtb	r3, r3
 8012000:	2b00      	cmp	r3, #0
 8012002:	d006      	beq.n	8012012 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x42>
	  __y = __x, __x = _S_left(__x);
 8012004:	68bb      	ldr	r3, [r7, #8]
 8012006:	607b      	str	r3, [r7, #4]
 8012008:	68b8      	ldr	r0, [r7, #8]
 801200a:	f000 faec 	bl	80125e6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>
 801200e:	60b8      	str	r0, [r7, #8]
 8012010:	e7e5      	b.n	8011fde <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
	  __x = _S_right(__x);
 8012012:	68b8      	ldr	r0, [r7, #8]
 8012014:	f000 faf3 	bl	80125fe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>
 8012018:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 801201a:	e7e0      	b.n	8011fde <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
      return const_iterator(__y);
 801201c:	f107 0314 	add.w	r3, r7, #20
 8012020:	6879      	ldr	r1, [r7, #4]
 8012022:	4618      	mov	r0, r3
 8012024:	f000 f819 	bl	801205a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>
 8012028:	697b      	ldr	r3, [r7, #20]
    }
 801202a:	4618      	mov	r0, r3
 801202c:	371c      	adds	r7, #28
 801202e:	46bd      	mov	sp, r7
 8012030:	bd90      	pop	{r4, r7, pc}

08012032 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8012032:	b480      	push	{r7}
 8012034:	b083      	sub	sp, #12
 8012036:	af00      	add	r7, sp, #0
 8012038:	6078      	str	r0, [r7, #4]
 801203a:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 801203c:	687b      	ldr	r3, [r7, #4]
 801203e:	681a      	ldr	r2, [r3, #0]
 8012040:	683b      	ldr	r3, [r7, #0]
 8012042:	681b      	ldr	r3, [r3, #0]
 8012044:	429a      	cmp	r2, r3
 8012046:	bf0c      	ite	eq
 8012048:	2301      	moveq	r3, #1
 801204a:	2300      	movne	r3, #0
 801204c:	b2db      	uxtb	r3, r3
 801204e:	4618      	mov	r0, r3
 8012050:	370c      	adds	r7, #12
 8012052:	46bd      	mov	sp, r7
 8012054:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012058:	4770      	bx	lr

0801205a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801205a:	b480      	push	{r7}
 801205c:	b083      	sub	sp, #12
 801205e:	af00      	add	r7, sp, #0
 8012060:	6078      	str	r0, [r7, #4]
 8012062:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8012064:	687b      	ldr	r3, [r7, #4]
 8012066:	683a      	ldr	r2, [r7, #0]
 8012068:	601a      	str	r2, [r3, #0]
 801206a:	687b      	ldr	r3, [r7, #4]
 801206c:	4618      	mov	r0, r3
 801206e:	370c      	adds	r7, #12
 8012070:	46bd      	mov	sp, r7
 8012072:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012076:	4770      	bx	lr

08012078 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8012078:	b480      	push	{r7}
 801207a:	b083      	sub	sp, #12
 801207c:	af00      	add	r7, sp, #0
 801207e:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8012080:	687b      	ldr	r3, [r7, #4]
 8012082:	689b      	ldr	r3, [r3, #8]
      }
 8012084:	4618      	mov	r0, r3
 8012086:	370c      	adds	r7, #12
 8012088:	46bd      	mov	sp, r7
 801208a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801208e:	4770      	bx	lr

08012090 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8012090:	b480      	push	{r7}
 8012092:	b083      	sub	sp, #12
 8012094:	af00      	add	r7, sp, #0
 8012096:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8012098:	687b      	ldr	r3, [r7, #4]
 801209a:	3304      	adds	r3, #4
 801209c:	4618      	mov	r0, r3
 801209e:	370c      	adds	r7, #12
 80120a0:	46bd      	mov	sp, r7
 80120a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80120a6:	4770      	bx	lr

080120a8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80120a8:	b590      	push	{r4, r7, lr}
 80120aa:	b087      	sub	sp, #28
 80120ac:	af00      	add	r7, sp, #0
 80120ae:	60f8      	str	r0, [r7, #12]
 80120b0:	60b9      	str	r1, [r7, #8]
 80120b2:	607a      	str	r2, [r7, #4]
 80120b4:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80120b6:	68bb      	ldr	r3, [r7, #8]
 80120b8:	2b00      	cmp	r3, #0
 80120ba:	d01b      	beq.n	80120f4 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 80120bc:	68fc      	ldr	r4, [r7, #12]
 80120be:	68b8      	ldr	r0, [r7, #8]
 80120c0:	f7f1 fb05 	bl	80036ce <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 80120c4:	4603      	mov	r3, r0
 80120c6:	683a      	ldr	r2, [r7, #0]
 80120c8:	4619      	mov	r1, r3
 80120ca:	4620      	mov	r0, r4
 80120cc:	f7f0 fdcf 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 80120d0:	4603      	mov	r3, r0
 80120d2:	f083 0301 	eor.w	r3, r3, #1
 80120d6:	b2db      	uxtb	r3, r3
 80120d8:	2b00      	cmp	r3, #0
 80120da:	d006      	beq.n	80120ea <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x42>
	  __y = __x, __x = _S_left(__x);
 80120dc:	68bb      	ldr	r3, [r7, #8]
 80120de:	607b      	str	r3, [r7, #4]
 80120e0:	68b8      	ldr	r0, [r7, #8]
 80120e2:	f000 fa98 	bl	8012616 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>
 80120e6:	60b8      	str	r0, [r7, #8]
 80120e8:	e7e5      	b.n	80120b6 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
	  __x = _S_right(__x);
 80120ea:	68b8      	ldr	r0, [r7, #8]
 80120ec:	f000 fa9f 	bl	801262e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>
 80120f0:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 80120f2:	e7e0      	b.n	80120b6 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
      return const_iterator(__y);
 80120f4:	f107 0314 	add.w	r3, r7, #20
 80120f8:	6879      	ldr	r1, [r7, #4]
 80120fa:	4618      	mov	r0, r3
 80120fc:	f000 f819 	bl	8012132 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>
 8012100:	697b      	ldr	r3, [r7, #20]
    }
 8012102:	4618      	mov	r0, r3
 8012104:	371c      	adds	r7, #28
 8012106:	46bd      	mov	sp, r7
 8012108:	bd90      	pop	{r4, r7, pc}

0801210a <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 801210a:	b480      	push	{r7}
 801210c:	b083      	sub	sp, #12
 801210e:	af00      	add	r7, sp, #0
 8012110:	6078      	str	r0, [r7, #4]
 8012112:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8012114:	687b      	ldr	r3, [r7, #4]
 8012116:	681a      	ldr	r2, [r3, #0]
 8012118:	683b      	ldr	r3, [r7, #0]
 801211a:	681b      	ldr	r3, [r3, #0]
 801211c:	429a      	cmp	r2, r3
 801211e:	bf0c      	ite	eq
 8012120:	2301      	moveq	r3, #1
 8012122:	2300      	movne	r3, #0
 8012124:	b2db      	uxtb	r3, r3
 8012126:	4618      	mov	r0, r3
 8012128:	370c      	adds	r7, #12
 801212a:	46bd      	mov	sp, r7
 801212c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012130:	4770      	bx	lr

08012132 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8012132:	b480      	push	{r7}
 8012134:	b083      	sub	sp, #12
 8012136:	af00      	add	r7, sp, #0
 8012138:	6078      	str	r0, [r7, #4]
 801213a:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 801213c:	687b      	ldr	r3, [r7, #4]
 801213e:	683a      	ldr	r2, [r7, #0]
 8012140:	601a      	str	r2, [r3, #0]
 8012142:	687b      	ldr	r3, [r7, #4]
 8012144:	4618      	mov	r0, r3
 8012146:	370c      	adds	r7, #12
 8012148:	46bd      	mov	sp, r7
 801214a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801214e:	4770      	bx	lr

08012150 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8012150:	b480      	push	{r7}
 8012152:	b083      	sub	sp, #12
 8012154:	af00      	add	r7, sp, #0
 8012156:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8012158:	687b      	ldr	r3, [r7, #4]
 801215a:	689b      	ldr	r3, [r3, #8]
      }
 801215c:	4618      	mov	r0, r3
 801215e:	370c      	adds	r7, #12
 8012160:	46bd      	mov	sp, r7
 8012162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012166:	4770      	bx	lr

08012168 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8012168:	b480      	push	{r7}
 801216a:	b083      	sub	sp, #12
 801216c:	af00      	add	r7, sp, #0
 801216e:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8012170:	687b      	ldr	r3, [r7, #4]
 8012172:	3304      	adds	r3, #4
 8012174:	4618      	mov	r0, r3
 8012176:	370c      	adds	r7, #12
 8012178:	46bd      	mov	sp, r7
 801217a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801217e:	4770      	bx	lr

08012180 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012180:	b590      	push	{r4, r7, lr}
 8012182:	b087      	sub	sp, #28
 8012184:	af00      	add	r7, sp, #0
 8012186:	60f8      	str	r0, [r7, #12]
 8012188:	60b9      	str	r1, [r7, #8]
 801218a:	607a      	str	r2, [r7, #4]
 801218c:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 801218e:	68bb      	ldr	r3, [r7, #8]
 8012190:	2b00      	cmp	r3, #0
 8012192:	d01b      	beq.n	80121cc <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8012194:	68fc      	ldr	r4, [r7, #12]
 8012196:	68b8      	ldr	r0, [r7, #8]
 8012198:	f7f1 f9ec 	bl	8003574 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 801219c:	4603      	mov	r3, r0
 801219e:	683a      	ldr	r2, [r7, #0]
 80121a0:	4619      	mov	r1, r3
 80121a2:	4620      	mov	r0, r4
 80121a4:	f7f0 fef8 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80121a8:	4603      	mov	r3, r0
 80121aa:	f083 0301 	eor.w	r3, r3, #1
 80121ae:	b2db      	uxtb	r3, r3
 80121b0:	2b00      	cmp	r3, #0
 80121b2:	d006      	beq.n	80121c2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 80121b4:	68bb      	ldr	r3, [r7, #8]
 80121b6:	607b      	str	r3, [r7, #4]
 80121b8:	68b8      	ldr	r0, [r7, #8]
 80121ba:	f000 fa44 	bl	8012646 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPKSt18_Rb_tree_node_base>
 80121be:	60b8      	str	r0, [r7, #8]
 80121c0:	e7e5      	b.n	801218e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 80121c2:	68b8      	ldr	r0, [r7, #8]
 80121c4:	f000 fa4b 	bl	801265e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPKSt18_Rb_tree_node_base>
 80121c8:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 80121ca:	e7e0      	b.n	801218e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0xe>
      return const_iterator(__y);
 80121cc:	f107 0314 	add.w	r3, r7, #20
 80121d0:	6879      	ldr	r1, [r7, #4]
 80121d2:	4618      	mov	r0, r3
 80121d4:	f000 f819 	bl	801220a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>
 80121d8:	697b      	ldr	r3, [r7, #20]
    }
 80121da:	4618      	mov	r0, r3
 80121dc:	371c      	adds	r7, #28
 80121de:	46bd      	mov	sp, r7
 80121e0:	bd90      	pop	{r4, r7, pc}

080121e2 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 80121e2:	b480      	push	{r7}
 80121e4:	b083      	sub	sp, #12
 80121e6:	af00      	add	r7, sp, #0
 80121e8:	6078      	str	r0, [r7, #4]
 80121ea:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 80121ec:	687b      	ldr	r3, [r7, #4]
 80121ee:	681a      	ldr	r2, [r3, #0]
 80121f0:	683b      	ldr	r3, [r7, #0]
 80121f2:	681b      	ldr	r3, [r3, #0]
 80121f4:	429a      	cmp	r2, r3
 80121f6:	bf0c      	ite	eq
 80121f8:	2301      	moveq	r3, #1
 80121fa:	2300      	movne	r3, #0
 80121fc:	b2db      	uxtb	r3, r3
 80121fe:	4618      	mov	r0, r3
 8012200:	370c      	adds	r7, #12
 8012202:	46bd      	mov	sp, r7
 8012204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012208:	4770      	bx	lr

0801220a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801220a:	b480      	push	{r7}
 801220c:	b083      	sub	sp, #12
 801220e:	af00      	add	r7, sp, #0
 8012210:	6078      	str	r0, [r7, #4]
 8012212:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8012214:	687b      	ldr	r3, [r7, #4]
 8012216:	683a      	ldr	r2, [r7, #0]
 8012218:	601a      	str	r2, [r3, #0]
 801221a:	687b      	ldr	r3, [r7, #4]
 801221c:	4618      	mov	r0, r3
 801221e:	370c      	adds	r7, #12
 8012220:	46bd      	mov	sp, r7
 8012222:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012226:	4770      	bx	lr

08012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012228:	b480      	push	{r7}
 801222a:	b083      	sub	sp, #12
 801222c:	af00      	add	r7, sp, #0
 801222e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012230:	687b      	ldr	r3, [r7, #4]
 8012232:	4618      	mov	r0, r3
 8012234:	370c      	adds	r7, #12
 8012236:	46bd      	mov	sp, r7
 8012238:	f85d 7b04 	ldr.w	r7, [sp], #4
 801223c:	4770      	bx	lr

0801223e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801223e:	b480      	push	{r7}
 8012240:	b083      	sub	sp, #12
 8012242:	af00      	add	r7, sp, #0
 8012244:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012246:	687b      	ldr	r3, [r7, #4]
 8012248:	4618      	mov	r0, r3
 801224a:	370c      	adds	r7, #12
 801224c:	46bd      	mov	sp, r7
 801224e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012252:	4770      	bx	lr

08012254 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8012254:	b590      	push	{r4, r7, lr}
 8012256:	b085      	sub	sp, #20
 8012258:	af00      	add	r7, sp, #0
 801225a:	6078      	str	r0, [r7, #4]
 801225c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801225e:	687b      	ldr	r3, [r7, #4]
 8012260:	2200      	movs	r2, #0
 8012262:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8012264:	6878      	ldr	r0, [r7, #4]
 8012266:	f7ff f8a2 	bl	80113ae <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 801226a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801226c:	6838      	ldr	r0, [r7, #0]
 801226e:	f7f8 ff7d 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8012272:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 8012274:	68f8      	ldr	r0, [r7, #12]
 8012276:	f7fb f85a 	bl	800d32e <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 801227a:	4603      	mov	r3, r0
 801227c:	4619      	mov	r1, r3
 801227e:	2018      	movs	r0, #24
 8012280:	f7ee feeb 	bl	800105a <_ZnwjPv>
 8012284:	4603      	mov	r3, r0
 8012286:	4621      	mov	r1, r4
 8012288:	4618      	mov	r0, r3
 801228a:	f010 fe9a 	bl	8022fc2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 801228e:	bf00      	nop
 8012290:	3714      	adds	r7, #20
 8012292:	46bd      	mov	sp, r7
 8012294:	bd90      	pop	{r4, r7, pc}

08012296 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012296:	b480      	push	{r7}
 8012298:	b083      	sub	sp, #12
 801229a:	af00      	add	r7, sp, #0
 801229c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801229e:	687b      	ldr	r3, [r7, #4]
 80122a0:	4618      	mov	r0, r3
 80122a2:	370c      	adds	r7, #12
 80122a4:	46bd      	mov	sp, r7
 80122a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122aa:	4770      	bx	lr

080122ac <_ZSt28__variant_construct_by_indexILj1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80122ac:	b590      	push	{r4, r7, lr}
 80122ae:	b085      	sub	sp, #20
 80122b0:	af00      	add	r7, sp, #0
 80122b2:	6078      	str	r0, [r7, #4]
 80122b4:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80122b6:	687b      	ldr	r3, [r7, #4]
 80122b8:	2201      	movs	r2, #1
 80122ba:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80122bc:	6878      	ldr	r0, [r7, #4]
 80122be:	f7ff f8df 	bl	8011480 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80122c2:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80122c4:	6838      	ldr	r0, [r7, #0]
 80122c6:	f7f8 feca 	bl	800b05e <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 80122ca:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80122cc:	681c      	ldr	r4, [r3, #0]
 80122ce:	68f8      	ldr	r0, [r7, #12]
 80122d0:	f7fb f809 	bl	800d2e6 <_ZSt9addressofIiEPT_RS0_>
 80122d4:	4603      	mov	r3, r0
 80122d6:	4619      	mov	r1, r3
 80122d8:	2004      	movs	r0, #4
 80122da:	f7ee febe 	bl	800105a <_ZnwjPv>
 80122de:	4603      	mov	r3, r0
 80122e0:	601c      	str	r4, [r3, #0]
    }
 80122e2:	bf00      	nop
 80122e4:	3714      	adds	r7, #20
 80122e6:	46bd      	mov	sp, r7
 80122e8:	bd90      	pop	{r4, r7, pc}

080122ea <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80122ea:	b480      	push	{r7}
 80122ec:	b083      	sub	sp, #12
 80122ee:	af00      	add	r7, sp, #0
 80122f0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80122f2:	687b      	ldr	r3, [r7, #4]
 80122f4:	4618      	mov	r0, r3
 80122f6:	370c      	adds	r7, #12
 80122f8:	46bd      	mov	sp, r7
 80122fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122fe:	4770      	bx	lr

08012300 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8012300:	b590      	push	{r4, r7, lr}
 8012302:	b085      	sub	sp, #20
 8012304:	af00      	add	r7, sp, #0
 8012306:	6078      	str	r0, [r7, #4]
 8012308:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801230a:	687b      	ldr	r3, [r7, #4]
 801230c:	2202      	movs	r2, #2
 801230e:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8012310:	6878      	ldr	r0, [r7, #4]
 8012312:	f7ff f931 	bl	8011578 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8012316:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8012318:	6838      	ldr	r0, [r7, #0]
 801231a:	f7f8 fecd 	bl	800b0b8 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 801231e:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8012320:	681c      	ldr	r4, [r3, #0]
 8012322:	68f8      	ldr	r0, [r7, #12]
 8012324:	f7fa ffeb 	bl	800d2fe <_ZSt9addressofIfEPT_RS0_>
 8012328:	4603      	mov	r3, r0
 801232a:	4619      	mov	r1, r3
 801232c:	2004      	movs	r0, #4
 801232e:	f7ee fe94 	bl	800105a <_ZnwjPv>
 8012332:	4603      	mov	r3, r0
 8012334:	601c      	str	r4, [r3, #0]
    }
 8012336:	bf00      	nop
 8012338:	3714      	adds	r7, #20
 801233a:	46bd      	mov	sp, r7
 801233c:	bd90      	pop	{r4, r7, pc}

0801233e <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 801233e:	b580      	push	{r7, lr}
 8012340:	b082      	sub	sp, #8
 8012342:	af00      	add	r7, sp, #0
 8012344:	6078      	str	r0, [r7, #4]
 8012346:	687b      	ldr	r3, [r7, #4]
 8012348:	4618      	mov	r0, r3
 801234a:	f000 f994 	bl	8012676 <_ZNSt8__detail9__variant15_Variadic_unionIJfbEEC1Ev>
 801234e:	687b      	ldr	r3, [r7, #4]
 8012350:	4618      	mov	r0, r3
 8012352:	3708      	adds	r7, #8
 8012354:	46bd      	mov	sp, r7
 8012356:	bd80      	pop	{r7, pc}

08012358 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012358:	b480      	push	{r7}
 801235a:	b083      	sub	sp, #12
 801235c:	af00      	add	r7, sp, #0
 801235e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012360:	687b      	ldr	r3, [r7, #4]
 8012362:	4618      	mov	r0, r3
 8012364:	370c      	adds	r7, #12
 8012366:	46bd      	mov	sp, r7
 8012368:	f85d 7b04 	ldr.w	r7, [sp], #4
 801236c:	4770      	bx	lr

0801236e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801236e:	b480      	push	{r7}
 8012370:	b083      	sub	sp, #12
 8012372:	af00      	add	r7, sp, #0
 8012374:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012376:	687b      	ldr	r3, [r7, #4]
 8012378:	4618      	mov	r0, r3
 801237a:	370c      	adds	r7, #12
 801237c:	46bd      	mov	sp, r7
 801237e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012382:	4770      	bx	lr

08012384 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012384:	b480      	push	{r7}
 8012386:	b083      	sub	sp, #12
 8012388:	af00      	add	r7, sp, #0
 801238a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801238c:	687b      	ldr	r3, [r7, #4]
 801238e:	4618      	mov	r0, r3
 8012390:	370c      	adds	r7, #12
 8012392:	46bd      	mov	sp, r7
 8012394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012398:	4770      	bx	lr

0801239a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801239a:	b480      	push	{r7}
 801239c:	b083      	sub	sp, #12
 801239e:	af00      	add	r7, sp, #0
 80123a0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80123a2:	687b      	ldr	r3, [r7, #4]
 80123a4:	4618      	mov	r0, r3
 80123a6:	370c      	adds	r7, #12
 80123a8:	46bd      	mov	sp, r7
 80123aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123ae:	4770      	bx	lr

080123b0 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80123b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80123b2:	b083      	sub	sp, #12
 80123b4:	af00      	add	r7, sp, #0
 80123b6:	6078      	str	r0, [r7, #4]
 80123b8:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80123ba:	6878      	ldr	r0, [r7, #4]
 80123bc:	f000 f880 	bl	80124c0 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80123c0:	4604      	mov	r4, r0
 80123c2:	6838      	ldr	r0, [r7, #0]
 80123c4:	f7f8 faec 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80123c8:	4603      	mov	r3, r0
 80123ca:	461a      	mov	r2, r3
 80123cc:	4621      	mov	r1, r4
 80123ce:	4628      	mov	r0, r5
 80123d0:	f000 f95e 	bl	8012690 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKS9_EESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 80123d4:	4633      	mov	r3, r6
    }
 80123d6:	4618      	mov	r0, r3
 80123d8:	370c      	adds	r7, #12
 80123da:	46bd      	mov	sp, r7
 80123dc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080123de <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80123de:	b480      	push	{r7}
 80123e0:	b083      	sub	sp, #12
 80123e2:	af00      	add	r7, sp, #0
 80123e4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80123e6:	687b      	ldr	r3, [r7, #4]
 80123e8:	4618      	mov	r0, r3
 80123ea:	370c      	adds	r7, #12
 80123ec:	46bd      	mov	sp, r7
 80123ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123f2:	4770      	bx	lr

080123f4 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80123f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80123f6:	b083      	sub	sp, #12
 80123f8:	af00      	add	r7, sp, #0
 80123fa:	6078      	str	r0, [r7, #4]
 80123fc:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80123fe:	6878      	ldr	r0, [r7, #4]
 8012400:	f000 f85e 	bl	80124c0 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8012404:	4604      	mov	r4, r0
 8012406:	6838      	ldr	r0, [r7, #0]
 8012408:	f7f8 fa43 	bl	800a892 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 801240c:	4603      	mov	r3, r0
 801240e:	461a      	mov	r2, r3
 8012410:	4621      	mov	r1, r4
 8012412:	4628      	mov	r0, r5
 8012414:	f000 f953 	bl	80126be <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKiEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 8012418:	4633      	mov	r3, r6
    }
 801241a:	4618      	mov	r0, r3
 801241c:	370c      	adds	r7, #12
 801241e:	46bd      	mov	sp, r7
 8012420:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012422 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012422:	b480      	push	{r7}
 8012424:	b083      	sub	sp, #12
 8012426:	af00      	add	r7, sp, #0
 8012428:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801242a:	687b      	ldr	r3, [r7, #4]
 801242c:	4618      	mov	r0, r3
 801242e:	370c      	adds	r7, #12
 8012430:	46bd      	mov	sp, r7
 8012432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012436:	4770      	bx	lr

08012438 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8012438:	b5f0      	push	{r4, r5, r6, r7, lr}
 801243a:	b083      	sub	sp, #12
 801243c:	af00      	add	r7, sp, #0
 801243e:	6078      	str	r0, [r7, #4]
 8012440:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8012442:	6878      	ldr	r0, [r7, #4]
 8012444:	f000 f83c 	bl	80124c0 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8012448:	4604      	mov	r4, r0
 801244a:	6838      	ldr	r0, [r7, #0]
 801244c:	f7f8 fa4a 	bl	800a8e4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8012450:	4603      	mov	r3, r0
 8012452:	461a      	mov	r2, r3
 8012454:	4621      	mov	r1, r4
 8012456:	4628      	mov	r0, r5
 8012458:	f000 f948 	bl	80126ec <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKfEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 801245c:	4633      	mov	r3, r6
    }
 801245e:	4618      	mov	r0, r3
 8012460:	370c      	adds	r7, #12
 8012462:	46bd      	mov	sp, r7
 8012464:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012466 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012466:	b480      	push	{r7}
 8012468:	b083      	sub	sp, #12
 801246a:	af00      	add	r7, sp, #0
 801246c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801246e:	687b      	ldr	r3, [r7, #4]
 8012470:	4618      	mov	r0, r3
 8012472:	370c      	adds	r7, #12
 8012474:	46bd      	mov	sp, r7
 8012476:	f85d 7b04 	ldr.w	r7, [sp], #4
 801247a:	4770      	bx	lr

0801247c <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801247c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801247e:	b083      	sub	sp, #12
 8012480:	af00      	add	r7, sp, #0
 8012482:	6078      	str	r0, [r7, #4]
 8012484:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8012486:	6878      	ldr	r0, [r7, #4]
 8012488:	f000 f81a 	bl	80124c0 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801248c:	4604      	mov	r4, r0
 801248e:	6838      	ldr	r0, [r7, #0]
 8012490:	f7f8 fa51 	bl	800a936 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8012494:	4603      	mov	r3, r0
 8012496:	461a      	mov	r2, r3
 8012498:	4621      	mov	r1, r4
 801249a:	4628      	mov	r0, r5
 801249c:	f000 f93d 	bl	801271a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKbEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 80124a0:	4633      	mov	r3, r6
    }
 80124a2:	4618      	mov	r0, r3
 80124a4:	370c      	adds	r7, #12
 80124a6:	46bd      	mov	sp, r7
 80124a8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080124aa <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 80124aa:	b480      	push	{r7}
 80124ac:	b083      	sub	sp, #12
 80124ae:	af00      	add	r7, sp, #0
 80124b0:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 80124b2:	687b      	ldr	r3, [r7, #4]
 80124b4:	4618      	mov	r0, r3
 80124b6:	370c      	adds	r7, #12
 80124b8:	46bd      	mov	sp, r7
 80124ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80124be:	4770      	bx	lr

080124c0 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80124c0:	b480      	push	{r7}
 80124c2:	b083      	sub	sp, #12
 80124c4:	af00      	add	r7, sp, #0
 80124c6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80124c8:	687b      	ldr	r3, [r7, #4]
 80124ca:	4618      	mov	r0, r3
 80124cc:	370c      	adds	r7, #12
 80124ce:	46bd      	mov	sp, r7
 80124d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80124d4:	4770      	bx	lr

080124d6 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80124d6:	b480      	push	{r7}
 80124d8:	b083      	sub	sp, #12
 80124da:	af00      	add	r7, sp, #0
 80124dc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80124de:	687b      	ldr	r3, [r7, #4]
 80124e0:	4618      	mov	r0, r3
 80124e2:	370c      	adds	r7, #12
 80124e4:	46bd      	mov	sp, r7
 80124e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80124ea:	4770      	bx	lr

080124ec <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80124ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80124ee:	b083      	sub	sp, #12
 80124f0:	af00      	add	r7, sp, #0
 80124f2:	6078      	str	r0, [r7, #4]
 80124f4:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80124f6:	6878      	ldr	r0, [r7, #4]
 80124f8:	f000 f86a 	bl	80125d0 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80124fc:	4604      	mov	r4, r0
 80124fe:	6838      	ldr	r0, [r7, #0]
 8012500:	f7f3 fdcb 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8012504:	4603      	mov	r3, r0
 8012506:	461a      	mov	r2, r3
 8012508:	4621      	mov	r1, r4
 801250a:	4628      	mov	r0, r5
 801250c:	f000 f91c 	bl	8012748 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS9_EESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8012510:	4633      	mov	r3, r6
    }
 8012512:	4618      	mov	r0, r3
 8012514:	370c      	adds	r7, #12
 8012516:	46bd      	mov	sp, r7
 8012518:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801251a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801251a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801251c:	b083      	sub	sp, #12
 801251e:	af00      	add	r7, sp, #0
 8012520:	6078      	str	r0, [r7, #4]
 8012522:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8012524:	6878      	ldr	r0, [r7, #4]
 8012526:	f000 f853 	bl	80125d0 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 801252a:	4604      	mov	r4, r0
 801252c:	6838      	ldr	r0, [r7, #0]
 801252e:	f7f3 fd64 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8012532:	4603      	mov	r3, r0
 8012534:	461a      	mov	r2, r3
 8012536:	4621      	mov	r1, r4
 8012538:	4628      	mov	r0, r5
 801253a:	f000 f91c 	bl	8012776 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 801253e:	4633      	mov	r3, r6
    }
 8012540:	4618      	mov	r0, r3
 8012542:	370c      	adds	r7, #12
 8012544:	46bd      	mov	sp, r7
 8012546:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012548 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8012548:	b5f0      	push	{r4, r5, r6, r7, lr}
 801254a:	b083      	sub	sp, #12
 801254c:	af00      	add	r7, sp, #0
 801254e:	6078      	str	r0, [r7, #4]
 8012550:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8012552:	6878      	ldr	r0, [r7, #4]
 8012554:	f000 f83c 	bl	80125d0 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8012558:	4604      	mov	r4, r0
 801255a:	6838      	ldr	r0, [r7, #0]
 801255c:	f7f3 fd6f 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8012560:	4603      	mov	r3, r0
 8012562:	461a      	mov	r2, r3
 8012564:	4621      	mov	r1, r4
 8012566:	4628      	mov	r0, r5
 8012568:	f000 f91c 	bl	80127a4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 801256c:	4633      	mov	r3, r6
    }
 801256e:	4618      	mov	r0, r3
 8012570:	370c      	adds	r7, #12
 8012572:	46bd      	mov	sp, r7
 8012574:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012576 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012576:	b480      	push	{r7}
 8012578:	b083      	sub	sp, #12
 801257a:	af00      	add	r7, sp, #0
 801257c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801257e:	687b      	ldr	r3, [r7, #4]
 8012580:	4618      	mov	r0, r3
 8012582:	370c      	adds	r7, #12
 8012584:	46bd      	mov	sp, r7
 8012586:	f85d 7b04 	ldr.w	r7, [sp], #4
 801258a:	4770      	bx	lr

0801258c <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801258c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801258e:	b083      	sub	sp, #12
 8012590:	af00      	add	r7, sp, #0
 8012592:	6078      	str	r0, [r7, #4]
 8012594:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8012596:	6878      	ldr	r0, [r7, #4]
 8012598:	f000 f81a 	bl	80125d0 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 801259c:	4604      	mov	r4, r0
 801259e:	6838      	ldr	r0, [r7, #0]
 80125a0:	f7f3 fd09 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80125a4:	4603      	mov	r3, r0
 80125a6:	461a      	mov	r2, r3
 80125a8:	4621      	mov	r1, r4
 80125aa:	4628      	mov	r0, r5
 80125ac:	f000 f911 	bl	80127d2 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 80125b0:	4633      	mov	r3, r6
    }
 80125b2:	4618      	mov	r0, r3
 80125b4:	370c      	adds	r7, #12
 80125b6:	46bd      	mov	sp, r7
 80125b8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080125ba <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 80125ba:	b480      	push	{r7}
 80125bc:	b083      	sub	sp, #12
 80125be:	af00      	add	r7, sp, #0
 80125c0:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 80125c2:	687b      	ldr	r3, [r7, #4]
 80125c4:	4618      	mov	r0, r3
 80125c6:	370c      	adds	r7, #12
 80125c8:	46bd      	mov	sp, r7
 80125ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80125ce:	4770      	bx	lr

080125d0 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80125d0:	b480      	push	{r7}
 80125d2:	b083      	sub	sp, #12
 80125d4:	af00      	add	r7, sp, #0
 80125d6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80125d8:	687b      	ldr	r3, [r7, #4]
 80125da:	4618      	mov	r0, r3
 80125dc:	370c      	adds	r7, #12
 80125de:	46bd      	mov	sp, r7
 80125e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80125e4:	4770      	bx	lr

080125e6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80125e6:	b480      	push	{r7}
 80125e8:	b083      	sub	sp, #12
 80125ea:	af00      	add	r7, sp, #0
 80125ec:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 80125ee:	687b      	ldr	r3, [r7, #4]
 80125f0:	689b      	ldr	r3, [r3, #8]
 80125f2:	4618      	mov	r0, r3
 80125f4:	370c      	adds	r7, #12
 80125f6:	46bd      	mov	sp, r7
 80125f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80125fc:	4770      	bx	lr

080125fe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80125fe:	b480      	push	{r7}
 8012600:	b083      	sub	sp, #12
 8012602:	af00      	add	r7, sp, #0
 8012604:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 8012606:	687b      	ldr	r3, [r7, #4]
 8012608:	68db      	ldr	r3, [r3, #12]
 801260a:	4618      	mov	r0, r3
 801260c:	370c      	adds	r7, #12
 801260e:	46bd      	mov	sp, r7
 8012610:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012614:	4770      	bx	lr

08012616 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8012616:	b480      	push	{r7}
 8012618:	b083      	sub	sp, #12
 801261a:	af00      	add	r7, sp, #0
 801261c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 801261e:	687b      	ldr	r3, [r7, #4]
 8012620:	689b      	ldr	r3, [r3, #8]
 8012622:	4618      	mov	r0, r3
 8012624:	370c      	adds	r7, #12
 8012626:	46bd      	mov	sp, r7
 8012628:	f85d 7b04 	ldr.w	r7, [sp], #4
 801262c:	4770      	bx	lr

0801262e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801262e:	b480      	push	{r7}
 8012630:	b083      	sub	sp, #12
 8012632:	af00      	add	r7, sp, #0
 8012634:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 8012636:	687b      	ldr	r3, [r7, #4]
 8012638:	68db      	ldr	r3, [r3, #12]
 801263a:	4618      	mov	r0, r3
 801263c:	370c      	adds	r7, #12
 801263e:	46bd      	mov	sp, r7
 8012640:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012644:	4770      	bx	lr

08012646 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8012646:	b480      	push	{r7}
 8012648:	b083      	sub	sp, #12
 801264a:	af00      	add	r7, sp, #0
 801264c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 801264e:	687b      	ldr	r3, [r7, #4]
 8012650:	689b      	ldr	r3, [r3, #8]
 8012652:	4618      	mov	r0, r3
 8012654:	370c      	adds	r7, #12
 8012656:	46bd      	mov	sp, r7
 8012658:	f85d 7b04 	ldr.w	r7, [sp], #4
 801265c:	4770      	bx	lr

0801265e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801265e:	b480      	push	{r7}
 8012660:	b083      	sub	sp, #12
 8012662:	af00      	add	r7, sp, #0
 8012664:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 8012666:	687b      	ldr	r3, [r7, #4]
 8012668:	68db      	ldr	r3, [r3, #12]
 801266a:	4618      	mov	r0, r3
 801266c:	370c      	adds	r7, #12
 801266e:	46bd      	mov	sp, r7
 8012670:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012674:	4770      	bx	lr

08012676 <_ZNSt8__detail9__variant15_Variadic_unionIJfbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8012676:	b580      	push	{r7, lr}
 8012678:	b082      	sub	sp, #8
 801267a:	af00      	add	r7, sp, #0
 801267c:	6078      	str	r0, [r7, #4]
 801267e:	687b      	ldr	r3, [r7, #4]
 8012680:	4618      	mov	r0, r3
 8012682:	f000 f8bd 	bl	8012800 <_ZNSt8__detail9__variant15_Variadic_unionIJbEEC1Ev>
 8012686:	687b      	ldr	r3, [r7, #4]
 8012688:	4618      	mov	r0, r3
 801268a:	3708      	adds	r7, #8
 801268c:	46bd      	mov	sp, r7
 801268e:	bd80      	pop	{r7, pc}

08012690 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKS9_EESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8012690:	b5b0      	push	{r4, r5, r7, lr}
 8012692:	b084      	sub	sp, #16
 8012694:	af00      	add	r7, sp, #0
 8012696:	7338      	strb	r0, [r7, #12]
 8012698:	60b9      	str	r1, [r7, #8]
 801269a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801269c:	68b8      	ldr	r0, [r7, #8]
 801269e:	f7ff ff0f 	bl	80124c0 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80126a2:	4604      	mov	r4, r0
 80126a4:	6878      	ldr	r0, [r7, #4]
 80126a6:	f7f8 f97b 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80126aa:	4603      	mov	r3, r0
 80126ac:	4619      	mov	r1, r3
 80126ae:	4620      	mov	r0, r4
 80126b0:	f000 f8b1 	bl	8012816 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESI_>
 80126b4:	462b      	mov	r3, r5
 80126b6:	4618      	mov	r0, r3
 80126b8:	3710      	adds	r7, #16
 80126ba:	46bd      	mov	sp, r7
 80126bc:	bdb0      	pop	{r4, r5, r7, pc}

080126be <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKiEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80126be:	b5b0      	push	{r4, r5, r7, lr}
 80126c0:	b084      	sub	sp, #16
 80126c2:	af00      	add	r7, sp, #0
 80126c4:	7338      	strb	r0, [r7, #12]
 80126c6:	60b9      	str	r1, [r7, #8]
 80126c8:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80126ca:	68b8      	ldr	r0, [r7, #8]
 80126cc:	f7ff fef8 	bl	80124c0 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80126d0:	4604      	mov	r4, r0
 80126d2:	6878      	ldr	r0, [r7, #4]
 80126d4:	f7f8 f8dd 	bl	800a892 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 80126d8:	4603      	mov	r3, r0
 80126da:	4619      	mov	r1, r3
 80126dc:	4620      	mov	r0, r4
 80126de:	f000 f8b2 	bl	8012846 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESI_>
 80126e2:	462b      	mov	r3, r5
 80126e4:	4618      	mov	r0, r3
 80126e6:	3710      	adds	r7, #16
 80126e8:	46bd      	mov	sp, r7
 80126ea:	bdb0      	pop	{r4, r5, r7, pc}

080126ec <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKfEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80126ec:	b5b0      	push	{r4, r5, r7, lr}
 80126ee:	b084      	sub	sp, #16
 80126f0:	af00      	add	r7, sp, #0
 80126f2:	7338      	strb	r0, [r7, #12]
 80126f4:	60b9      	str	r1, [r7, #8]
 80126f6:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80126f8:	68b8      	ldr	r0, [r7, #8]
 80126fa:	f7ff fee1 	bl	80124c0 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80126fe:	4604      	mov	r4, r0
 8012700:	6878      	ldr	r0, [r7, #4]
 8012702:	f7f8 f8ef 	bl	800a8e4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8012706:	4603      	mov	r3, r0
 8012708:	4619      	mov	r1, r3
 801270a:	4620      	mov	r0, r4
 801270c:	f000 f8b3 	bl	8012876 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESI_>
 8012710:	462b      	mov	r3, r5
 8012712:	4618      	mov	r0, r3
 8012714:	3710      	adds	r7, #16
 8012716:	46bd      	mov	sp, r7
 8012718:	bdb0      	pop	{r4, r5, r7, pc}

0801271a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKbEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801271a:	b5b0      	push	{r4, r5, r7, lr}
 801271c:	b084      	sub	sp, #16
 801271e:	af00      	add	r7, sp, #0
 8012720:	7338      	strb	r0, [r7, #12]
 8012722:	60b9      	str	r1, [r7, #8]
 8012724:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8012726:	68b8      	ldr	r0, [r7, #8]
 8012728:	f7ff feca 	bl	80124c0 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801272c:	4604      	mov	r4, r0
 801272e:	6878      	ldr	r0, [r7, #4]
 8012730:	f7f8 f901 	bl	800a936 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8012734:	4603      	mov	r3, r0
 8012736:	4619      	mov	r1, r3
 8012738:	4620      	mov	r0, r4
 801273a:	f000 f8b4 	bl	80128a6 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESI_>
 801273e:	462b      	mov	r3, r5
 8012740:	4618      	mov	r0, r3
 8012742:	3710      	adds	r7, #16
 8012744:	46bd      	mov	sp, r7
 8012746:	bdb0      	pop	{r4, r5, r7, pc}

08012748 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS9_EESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8012748:	b5b0      	push	{r4, r5, r7, lr}
 801274a:	b084      	sub	sp, #16
 801274c:	af00      	add	r7, sp, #0
 801274e:	7338      	strb	r0, [r7, #12]
 8012750:	60b9      	str	r1, [r7, #8]
 8012752:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8012754:	68b8      	ldr	r0, [r7, #8]
 8012756:	f7ff ff3b 	bl	80125d0 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 801275a:	4604      	mov	r4, r0
 801275c:	6878      	ldr	r0, [r7, #4]
 801275e:	f7f3 fc9c 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8012762:	4603      	mov	r3, r0
 8012764:	4619      	mov	r1, r3
 8012766:	4620      	mov	r0, r4
 8012768:	f000 f8b5 	bl	80128d6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESA_>
 801276c:	462b      	mov	r3, r5
 801276e:	4618      	mov	r0, r3
 8012770:	3710      	adds	r7, #16
 8012772:	46bd      	mov	sp, r7
 8012774:	bdb0      	pop	{r4, r5, r7, pc}

08012776 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8012776:	b5b0      	push	{r4, r5, r7, lr}
 8012778:	b084      	sub	sp, #16
 801277a:	af00      	add	r7, sp, #0
 801277c:	7338      	strb	r0, [r7, #12]
 801277e:	60b9      	str	r1, [r7, #8]
 8012780:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8012782:	68b8      	ldr	r0, [r7, #8]
 8012784:	f7ff ff24 	bl	80125d0 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8012788:	4604      	mov	r4, r0
 801278a:	6878      	ldr	r0, [r7, #4]
 801278c:	f7f3 fc35 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8012790:	4603      	mov	r3, r0
 8012792:	4619      	mov	r1, r3
 8012794:	4620      	mov	r0, r4
 8012796:	f000 f8af 	bl	80128f8 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESA_>
 801279a:	462b      	mov	r3, r5
 801279c:	4618      	mov	r0, r3
 801279e:	3710      	adds	r7, #16
 80127a0:	46bd      	mov	sp, r7
 80127a2:	bdb0      	pop	{r4, r5, r7, pc}

080127a4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80127a4:	b5b0      	push	{r4, r5, r7, lr}
 80127a6:	b084      	sub	sp, #16
 80127a8:	af00      	add	r7, sp, #0
 80127aa:	7338      	strb	r0, [r7, #12]
 80127ac:	60b9      	str	r1, [r7, #8]
 80127ae:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80127b0:	68b8      	ldr	r0, [r7, #8]
 80127b2:	f7ff ff0d 	bl	80125d0 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80127b6:	4604      	mov	r4, r0
 80127b8:	6878      	ldr	r0, [r7, #4]
 80127ba:	f7f3 fc40 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80127be:	4603      	mov	r3, r0
 80127c0:	4619      	mov	r1, r3
 80127c2:	4620      	mov	r0, r4
 80127c4:	f000 f8a9 	bl	801291a <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESA_>
 80127c8:	462b      	mov	r3, r5
 80127ca:	4618      	mov	r0, r3
 80127cc:	3710      	adds	r7, #16
 80127ce:	46bd      	mov	sp, r7
 80127d0:	bdb0      	pop	{r4, r5, r7, pc}

080127d2 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80127d2:	b5b0      	push	{r4, r5, r7, lr}
 80127d4:	b084      	sub	sp, #16
 80127d6:	af00      	add	r7, sp, #0
 80127d8:	7338      	strb	r0, [r7, #12]
 80127da:	60b9      	str	r1, [r7, #8]
 80127dc:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80127de:	68b8      	ldr	r0, [r7, #8]
 80127e0:	f7ff fef6 	bl	80125d0 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80127e4:	4604      	mov	r4, r0
 80127e6:	6878      	ldr	r0, [r7, #4]
 80127e8:	f7f3 fbe5 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80127ec:	4603      	mov	r3, r0
 80127ee:	4619      	mov	r1, r3
 80127f0:	4620      	mov	r0, r4
 80127f2:	f000 f8a3 	bl	801293c <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESA_>
 80127f6:	462b      	mov	r3, r5
 80127f8:	4618      	mov	r0, r3
 80127fa:	3710      	adds	r7, #16
 80127fc:	46bd      	mov	sp, r7
 80127fe:	bdb0      	pop	{r4, r5, r7, pc}

08012800 <_ZNSt8__detail9__variant15_Variadic_unionIJbEEC1Ev>:
 8012800:	b480      	push	{r7}
 8012802:	b083      	sub	sp, #12
 8012804:	af00      	add	r7, sp, #0
 8012806:	6078      	str	r0, [r7, #4]
 8012808:	687b      	ldr	r3, [r7, #4]
 801280a:	4618      	mov	r0, r3
 801280c:	370c      	adds	r7, #12
 801280e:	46bd      	mov	sp, r7
 8012810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012814:	4770      	bx	lr

08012816 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESI_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8012816:	b5b0      	push	{r4, r5, r7, lr}
 8012818:	b082      	sub	sp, #8
 801281a:	af00      	add	r7, sp, #0
 801281c:	6078      	str	r0, [r7, #4]
 801281e:	6039      	str	r1, [r7, #0]
 8012820:	687b      	ldr	r3, [r7, #4]
 8012822:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8012824:	4618      	mov	r0, r3
 8012826:	f000 f89a 	bl	801295e <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801282a:	4604      	mov	r4, r0
 801282c:	6838      	ldr	r0, [r7, #0]
 801282e:	f7f8 f8b7 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8012832:	4603      	mov	r3, r0
 8012834:	4619      	mov	r1, r3
 8012836:	4620      	mov	r0, r4
 8012838:	f000 f8b3 	bl	80129a2 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKS8_EEvOT_OT0_>
	  return {};
 801283c:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801283e:	4618      	mov	r0, r3
 8012840:	3708      	adds	r7, #8
 8012842:	46bd      	mov	sp, r7
 8012844:	bdb0      	pop	{r4, r5, r7, pc}

08012846 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESI_>:
 8012846:	b5b0      	push	{r4, r5, r7, lr}
 8012848:	b082      	sub	sp, #8
 801284a:	af00      	add	r7, sp, #0
 801284c:	6078      	str	r0, [r7, #4]
 801284e:	6039      	str	r1, [r7, #0]
 8012850:	687b      	ldr	r3, [r7, #4]
 8012852:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8012854:	4618      	mov	r0, r3
 8012856:	f000 f882 	bl	801295e <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801285a:	4604      	mov	r4, r0
 801285c:	6838      	ldr	r0, [r7, #0]
 801285e:	f7f8 f818 	bl	800a892 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8012862:	4603      	mov	r3, r0
 8012864:	4619      	mov	r1, r3
 8012866:	4620      	mov	r0, r4
 8012868:	f000 f8b7 	bl	80129da <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKiEEvOT_OT0_>
	  return {};
 801286c:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801286e:	4618      	mov	r0, r3
 8012870:	3708      	adds	r7, #8
 8012872:	46bd      	mov	sp, r7
 8012874:	bdb0      	pop	{r4, r5, r7, pc}

08012876 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESI_>:
 8012876:	b5b0      	push	{r4, r5, r7, lr}
 8012878:	b082      	sub	sp, #8
 801287a:	af00      	add	r7, sp, #0
 801287c:	6078      	str	r0, [r7, #4]
 801287e:	6039      	str	r1, [r7, #0]
 8012880:	687b      	ldr	r3, [r7, #4]
 8012882:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8012884:	4618      	mov	r0, r3
 8012886:	f000 f86a 	bl	801295e <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801288a:	4604      	mov	r4, r0
 801288c:	6838      	ldr	r0, [r7, #0]
 801288e:	f7f8 f829 	bl	800a8e4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8012892:	4603      	mov	r3, r0
 8012894:	4619      	mov	r1, r3
 8012896:	4620      	mov	r0, r4
 8012898:	f000 f8b9 	bl	8012a0e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKfEEvOT_OT0_>
	  return {};
 801289c:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801289e:	4618      	mov	r0, r3
 80128a0:	3708      	adds	r7, #8
 80128a2:	46bd      	mov	sp, r7
 80128a4:	bdb0      	pop	{r4, r5, r7, pc}

080128a6 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESI_>:
 80128a6:	b5b0      	push	{r4, r5, r7, lr}
 80128a8:	b082      	sub	sp, #8
 80128aa:	af00      	add	r7, sp, #0
 80128ac:	6078      	str	r0, [r7, #4]
 80128ae:	6039      	str	r1, [r7, #0]
 80128b0:	687b      	ldr	r3, [r7, #4]
 80128b2:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 80128b4:	4618      	mov	r0, r3
 80128b6:	f000 f852 	bl	801295e <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80128ba:	4604      	mov	r4, r0
 80128bc:	6838      	ldr	r0, [r7, #0]
 80128be:	f7f8 f83a 	bl	800a936 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 80128c2:	4603      	mov	r3, r0
 80128c4:	4619      	mov	r1, r3
 80128c6:	4620      	mov	r0, r4
 80128c8:	f000 f8bb 	bl	8012a42 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKbEEvOT_OT0_>
	  return {};
 80128cc:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80128ce:	4618      	mov	r0, r3
 80128d0:	3708      	adds	r7, #8
 80128d2:	46bd      	mov	sp, r7
 80128d4:	bdb0      	pop	{r4, r5, r7, pc}

080128d6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESA_>:
	__do_visit([](auto&& __this_mem) mutable
 80128d6:	b590      	push	{r4, r7, lr}
 80128d8:	b083      	sub	sp, #12
 80128da:	af00      	add	r7, sp, #0
 80128dc:	6078      	str	r0, [r7, #4]
 80128de:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80128e0:	6838      	ldr	r0, [r7, #0]
 80128e2:	f7f3 fd38 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 80128e6:	4603      	mov	r3, r0
 80128e8:	4618      	mov	r0, r3
 80128ea:	f7f3 fd3f 	bl	800636c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 80128ee:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80128f0:	4618      	mov	r0, r3
 80128f2:	370c      	adds	r7, #12
 80128f4:	46bd      	mov	sp, r7
 80128f6:	bd90      	pop	{r4, r7, pc}

080128f8 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESA_>:
 80128f8:	b590      	push	{r4, r7, lr}
 80128fa:	b083      	sub	sp, #12
 80128fc:	af00      	add	r7, sp, #0
 80128fe:	6078      	str	r0, [r7, #4]
 8012900:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8012902:	6838      	ldr	r0, [r7, #0]
 8012904:	f7f3 fcfd 	bl	8006302 <_ZSt11__addressofIiEPT_RS0_>
 8012908:	4603      	mov	r3, r0
 801290a:	4618      	mov	r0, r3
 801290c:	f7f3 fd04 	bl	8006318 <_ZSt8_DestroyIiEvPT_>
	    return {};
 8012910:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8012912:	4618      	mov	r0, r3
 8012914:	370c      	adds	r7, #12
 8012916:	46bd      	mov	sp, r7
 8012918:	bd90      	pop	{r4, r7, pc}

0801291a <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESA_>:
 801291a:	b590      	push	{r4, r7, lr}
 801291c:	b083      	sub	sp, #12
 801291e:	af00      	add	r7, sp, #0
 8012920:	6078      	str	r0, [r7, #4]
 8012922:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8012924:	6838      	ldr	r0, [r7, #0]
 8012926:	f7f3 fd01 	bl	800632c <_ZSt11__addressofIfEPT_RS0_>
 801292a:	4603      	mov	r3, r0
 801292c:	4618      	mov	r0, r3
 801292e:	f7f3 fd08 	bl	8006342 <_ZSt8_DestroyIfEvPT_>
	    return {};
 8012932:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8012934:	4618      	mov	r0, r3
 8012936:	370c      	adds	r7, #12
 8012938:	46bd      	mov	sp, r7
 801293a:	bd90      	pop	{r4, r7, pc}

0801293c <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESA_>:
 801293c:	b590      	push	{r4, r7, lr}
 801293e:	b083      	sub	sp, #12
 8012940:	af00      	add	r7, sp, #0
 8012942:	6078      	str	r0, [r7, #4]
 8012944:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8012946:	6838      	ldr	r0, [r7, #0]
 8012948:	f7f3 fcc6 	bl	80062d8 <_ZSt11__addressofIbEPT_RS0_>
 801294c:	4603      	mov	r3, r0
 801294e:	4618      	mov	r0, r3
 8012950:	f7f3 fccd 	bl	80062ee <_ZSt8_DestroyIbEvPT_>
	    return {};
 8012954:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8012956:	4618      	mov	r0, r3
 8012958:	370c      	adds	r7, #12
 801295a:	46bd      	mov	sp, r7
 801295c:	bd90      	pop	{r4, r7, pc}

0801295e <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801295e:	b480      	push	{r7}
 8012960:	b083      	sub	sp, #12
 8012962:	af00      	add	r7, sp, #0
 8012964:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012966:	687b      	ldr	r3, [r7, #4]
 8012968:	4618      	mov	r0, r3
 801296a:	370c      	adds	r7, #12
 801296c:	46bd      	mov	sp, r7
 801296e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012972:	4770      	bx	lr

08012974 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>:
    addressof(_Tp& __r) noexcept
 8012974:	b580      	push	{r7, lr}
 8012976:	b082      	sub	sp, #8
 8012978:	af00      	add	r7, sp, #0
 801297a:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801297c:	6878      	ldr	r0, [r7, #4]
 801297e:	f000 f805 	bl	801298c <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 8012982:	4603      	mov	r3, r0
 8012984:	4618      	mov	r0, r3
 8012986:	3708      	adds	r7, #8
 8012988:	46bd      	mov	sp, r7
 801298a:	bd80      	pop	{r7, pc}

0801298c <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801298c:	b480      	push	{r7}
 801298e:	b083      	sub	sp, #12
 8012990:	af00      	add	r7, sp, #0
 8012992:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8012994:	687b      	ldr	r3, [r7, #4]
 8012996:	4618      	mov	r0, r3
 8012998:	370c      	adds	r7, #12
 801299a:	46bd      	mov	sp, r7
 801299c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80129a0:	4770      	bx	lr

080129a2 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKS8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 80129a2:	b590      	push	{r4, r7, lr}
 80129a4:	b085      	sub	sp, #20
 80129a6:	af00      	add	r7, sp, #0
 80129a8:	6078      	str	r0, [r7, #4]
 80129aa:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80129ac:	687b      	ldr	r3, [r7, #4]
 80129ae:	4618      	mov	r0, r3
 80129b0:	f7ff ffe0 	bl	8012974 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 80129b4:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80129b6:	6838      	ldr	r0, [r7, #0]
 80129b8:	f7f7 fff2 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80129bc:	4604      	mov	r4, r0
        ::new (__storage)
 80129be:	68fb      	ldr	r3, [r7, #12]
 80129c0:	4619      	mov	r1, r3
 80129c2:	2018      	movs	r0, #24
 80129c4:	f7ee fb49 	bl	800105a <_ZnwjPv>
 80129c8:	4603      	mov	r3, r0
 80129ca:	4621      	mov	r1, r4
 80129cc:	4618      	mov	r0, r3
 80129ce:	f010 fc43 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
    }
 80129d2:	bf00      	nop
 80129d4:	3714      	adds	r7, #20
 80129d6:	46bd      	mov	sp, r7
 80129d8:	bd90      	pop	{r4, r7, pc}

080129da <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 80129da:	b590      	push	{r4, r7, lr}
 80129dc:	b085      	sub	sp, #20
 80129de:	af00      	add	r7, sp, #0
 80129e0:	6078      	str	r0, [r7, #4]
 80129e2:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80129e4:	687b      	ldr	r3, [r7, #4]
 80129e6:	4618      	mov	r0, r3
 80129e8:	f7ff ffc4 	bl	8012974 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 80129ec:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80129ee:	6838      	ldr	r0, [r7, #0]
 80129f0:	f7f7 ff4f 	bl	800a892 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 80129f4:	4603      	mov	r3, r0
        ::new (__storage)
 80129f6:	681c      	ldr	r4, [r3, #0]
 80129f8:	68fb      	ldr	r3, [r7, #12]
 80129fa:	4619      	mov	r1, r3
 80129fc:	2004      	movs	r0, #4
 80129fe:	f7ee fb2c 	bl	800105a <_ZnwjPv>
 8012a02:	4603      	mov	r3, r0
 8012a04:	601c      	str	r4, [r3, #0]
    }
 8012a06:	bf00      	nop
 8012a08:	3714      	adds	r7, #20
 8012a0a:	46bd      	mov	sp, r7
 8012a0c:	bd90      	pop	{r4, r7, pc}

08012a0e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8012a0e:	b590      	push	{r4, r7, lr}
 8012a10:	b085      	sub	sp, #20
 8012a12:	af00      	add	r7, sp, #0
 8012a14:	6078      	str	r0, [r7, #4]
 8012a16:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8012a18:	687b      	ldr	r3, [r7, #4]
 8012a1a:	4618      	mov	r0, r3
 8012a1c:	f7ff ffaa 	bl	8012974 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 8012a20:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8012a22:	6838      	ldr	r0, [r7, #0]
 8012a24:	f7f7 ff5e 	bl	800a8e4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8012a28:	4603      	mov	r3, r0
        ::new (__storage)
 8012a2a:	681c      	ldr	r4, [r3, #0]
 8012a2c:	68fb      	ldr	r3, [r7, #12]
 8012a2e:	4619      	mov	r1, r3
 8012a30:	2004      	movs	r0, #4
 8012a32:	f7ee fb12 	bl	800105a <_ZnwjPv>
 8012a36:	4603      	mov	r3, r0
 8012a38:	601c      	str	r4, [r3, #0]
    }
 8012a3a:	bf00      	nop
 8012a3c:	3714      	adds	r7, #20
 8012a3e:	46bd      	mov	sp, r7
 8012a40:	bd90      	pop	{r4, r7, pc}

08012a42 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8012a42:	b590      	push	{r4, r7, lr}
 8012a44:	b085      	sub	sp, #20
 8012a46:	af00      	add	r7, sp, #0
 8012a48:	6078      	str	r0, [r7, #4]
 8012a4a:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8012a4c:	687b      	ldr	r3, [r7, #4]
 8012a4e:	4618      	mov	r0, r3
 8012a50:	f7ff ff90 	bl	8012974 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 8012a54:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8012a56:	6838      	ldr	r0, [r7, #0]
 8012a58:	f7f7 ff6d 	bl	800a936 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8012a5c:	4603      	mov	r3, r0
        ::new (__storage)
 8012a5e:	781c      	ldrb	r4, [r3, #0]
 8012a60:	68fb      	ldr	r3, [r7, #12]
 8012a62:	4619      	mov	r1, r3
 8012a64:	2001      	movs	r0, #1
 8012a66:	f7ee faf8 	bl	800105a <_ZnwjPv>
 8012a6a:	4603      	mov	r3, r0
 8012a6c:	4622      	mov	r2, r4
 8012a6e:	701a      	strb	r2, [r3, #0]
    }
 8012a70:	bf00      	nop
 8012a72:	3714      	adds	r7, #20
 8012a74:	46bd      	mov	sp, r7
 8012a76:	bd90      	pop	{r4, r7, pc}

08012a78 <_Z41__static_initialization_and_destruction_0ii>:
 8012a78:	b590      	push	{r4, r7, lr}
 8012a7a:	b0e7      	sub	sp, #412	; 0x19c
 8012a7c:	af02      	add	r7, sp, #8
 8012a7e:	1d3b      	adds	r3, r7, #4
 8012a80:	6018      	str	r0, [r3, #0]
 8012a82:	463b      	mov	r3, r7
 8012a84:	6019      	str	r1, [r3, #0]
 8012a86:	1d3b      	adds	r3, r7, #4
 8012a88:	681b      	ldr	r3, [r3, #0]
 8012a8a:	2b01      	cmp	r3, #1
 8012a8c:	f040 819d 	bne.w	8012dca <_Z41__static_initialization_and_destruction_0ii+0x352>
 8012a90:	463b      	mov	r3, r7
 8012a92:	681b      	ldr	r3, [r3, #0]
 8012a94:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012a98:	4293      	cmp	r3, r2
 8012a9a:	f040 8196 	bne.w	8012dca <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8012a9e:	f107 0314 	add.w	r3, r7, #20
 8012aa2:	4618      	mov	r0, r3
 8012aa4:	2322      	movs	r3, #34	; 0x22
 8012aa6:	461a      	mov	r2, r3
 8012aa8:	2100      	movs	r1, #0
 8012aaa:	f011 fc53 	bl	8024354 <memset>
 8012aae:	f107 0314 	add.w	r3, r7, #20
 8012ab2:	223a      	movs	r2, #58	; 0x3a
 8012ab4:	701a      	strb	r2, [r3, #0]
 8012ab6:	f107 0314 	add.w	r3, r7, #20
 8012aba:	2201      	movs	r2, #1
 8012abc:	705a      	strb	r2, [r3, #1]
 8012abe:	f107 0314 	add.w	r3, r7, #20
 8012ac2:	220a      	movs	r2, #10
 8012ac4:	709a      	strb	r2, [r3, #2]
 8012ac6:	f107 0314 	add.w	r3, r7, #20
 8012aca:	220a      	movs	r2, #10
 8012acc:	70da      	strb	r2, [r3, #3]
 8012ace:	f107 0314 	add.w	r3, r7, #20
 8012ad2:	222c      	movs	r2, #44	; 0x2c
 8012ad4:	711a      	strb	r2, [r3, #4]
 8012ad6:	f107 0314 	add.w	r3, r7, #20
 8012ada:	220c      	movs	r2, #12
 8012adc:	715a      	strb	r2, [r3, #5]
 8012ade:	f107 0314 	add.w	r3, r7, #20
 8012ae2:	222e      	movs	r2, #46	; 0x2e
 8012ae4:	719a      	strb	r2, [r3, #6]
 8012ae6:	f107 0314 	add.w	r3, r7, #20
 8012aea:	220b      	movs	r2, #11
 8012aec:	71da      	strb	r2, [r3, #7]
 8012aee:	f107 0314 	add.w	r3, r7, #20
 8012af2:	225b      	movs	r2, #91	; 0x5b
 8012af4:	721a      	strb	r2, [r3, #8]
 8012af6:	f107 0314 	add.w	r3, r7, #20
 8012afa:	220d      	movs	r2, #13
 8012afc:	725a      	strb	r2, [r3, #9]
 8012afe:	f107 0314 	add.w	r3, r7, #20
 8012b02:	225d      	movs	r2, #93	; 0x5d
 8012b04:	729a      	strb	r2, [r3, #10]
 8012b06:	f107 0314 	add.w	r3, r7, #20
 8012b0a:	220e      	movs	r2, #14
 8012b0c:	72da      	strb	r2, [r3, #11]
 8012b0e:	f107 0314 	add.w	r3, r7, #20
 8012b12:	227c      	movs	r2, #124	; 0x7c
 8012b14:	731a      	strb	r2, [r3, #12]
 8012b16:	f107 0314 	add.w	r3, r7, #20
 8012b1a:	2215      	movs	r2, #21
 8012b1c:	735a      	strb	r2, [r3, #13]
 8012b1e:	f107 0314 	add.w	r3, r7, #20
 8012b22:	2226      	movs	r2, #38	; 0x26
 8012b24:	739a      	strb	r2, [r3, #14]
 8012b26:	f107 0314 	add.w	r3, r7, #20
 8012b2a:	2216      	movs	r2, #22
 8012b2c:	73da      	strb	r2, [r3, #15]
 8012b2e:	f107 0314 	add.w	r3, r7, #20
 8012b32:	222b      	movs	r2, #43	; 0x2b
 8012b34:	741a      	strb	r2, [r3, #16]
 8012b36:	f107 0314 	add.w	r3, r7, #20
 8012b3a:	221f      	movs	r2, #31
 8012b3c:	745a      	strb	r2, [r3, #17]
 8012b3e:	f107 0314 	add.w	r3, r7, #20
 8012b42:	222d      	movs	r2, #45	; 0x2d
 8012b44:	749a      	strb	r2, [r3, #18]
 8012b46:	f107 0314 	add.w	r3, r7, #20
 8012b4a:	2220      	movs	r2, #32
 8012b4c:	74da      	strb	r2, [r3, #19]
 8012b4e:	f107 0314 	add.w	r3, r7, #20
 8012b52:	222a      	movs	r2, #42	; 0x2a
 8012b54:	751a      	strb	r2, [r3, #20]
 8012b56:	f107 0314 	add.w	r3, r7, #20
 8012b5a:	2221      	movs	r2, #33	; 0x21
 8012b5c:	755a      	strb	r2, [r3, #21]
 8012b5e:	f107 0314 	add.w	r3, r7, #20
 8012b62:	222f      	movs	r2, #47	; 0x2f
 8012b64:	759a      	strb	r2, [r3, #22]
 8012b66:	f107 0314 	add.w	r3, r7, #20
 8012b6a:	2222      	movs	r2, #34	; 0x22
 8012b6c:	75da      	strb	r2, [r3, #23]
 8012b6e:	f107 0314 	add.w	r3, r7, #20
 8012b72:	225e      	movs	r2, #94	; 0x5e
 8012b74:	761a      	strb	r2, [r3, #24]
 8012b76:	f107 0314 	add.w	r3, r7, #20
 8012b7a:	2223      	movs	r2, #35	; 0x23
 8012b7c:	765a      	strb	r2, [r3, #25]
 8012b7e:	f107 0314 	add.w	r3, r7, #20
 8012b82:	2225      	movs	r2, #37	; 0x25
 8012b84:	769a      	strb	r2, [r3, #26]
 8012b86:	f107 0314 	add.w	r3, r7, #20
 8012b8a:	2224      	movs	r2, #36	; 0x24
 8012b8c:	76da      	strb	r2, [r3, #27]
 8012b8e:	f107 0314 	add.w	r3, r7, #20
 8012b92:	2228      	movs	r2, #40	; 0x28
 8012b94:	771a      	strb	r2, [r3, #28]
 8012b96:	f107 0314 	add.w	r3, r7, #20
 8012b9a:	2226      	movs	r2, #38	; 0x26
 8012b9c:	775a      	strb	r2, [r3, #29]
 8012b9e:	f107 0314 	add.w	r3, r7, #20
 8012ba2:	2229      	movs	r2, #41	; 0x29
 8012ba4:	779a      	strb	r2, [r3, #30]
 8012ba6:	f107 0314 	add.w	r3, r7, #20
 8012baa:	2227      	movs	r2, #39	; 0x27
 8012bac:	77da      	strb	r2, [r3, #31]
 8012bae:	f107 0314 	add.w	r3, r7, #20
 8012bb2:	2225      	movs	r2, #37	; 0x25
 8012bb4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8012bb8:	f107 030c 	add.w	r3, r7, #12
 8012bbc:	f107 0214 	add.w	r2, r7, #20
 8012bc0:	601a      	str	r2, [r3, #0]
 8012bc2:	f107 030c 	add.w	r3, r7, #12
 8012bc6:	2211      	movs	r2, #17
 8012bc8:	605a      	str	r2, [r3, #4]
 8012bca:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8012bce:	4618      	mov	r0, r3
 8012bd0:	f7ee fb88 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8012bd4:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8012bd8:	f107 020c 	add.w	r2, r7, #12
 8012bdc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8012be0:	9300      	str	r3, [sp, #0]
 8012be2:	460b      	mov	r3, r1
 8012be4:	ca06      	ldmia	r2, {r1, r2}
 8012be6:	4885      	ldr	r0, [pc, #532]	; (8012dfc <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8012be8:	f7ee fb94 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8012bec:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8012bf0:	4618      	mov	r0, r3
 8012bf2:	f7ee fb83 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8012bf6:	2305      	movs	r3, #5
 8012bf8:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8012bfc:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8012c00:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012c04:	497e      	ldr	r1, [pc, #504]	; (8012e00 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8012c06:	4618      	mov	r0, r3
 8012c08:	f7ee fa70 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8012c0c:	2306      	movs	r3, #6
 8012c0e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8012c12:	f207 1263 	addw	r2, r7, #355	; 0x163
 8012c16:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012c1a:	331c      	adds	r3, #28
 8012c1c:	4979      	ldr	r1, [pc, #484]	; (8012e04 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8012c1e:	4618      	mov	r0, r3
 8012c20:	f7ee fa8c 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8012c24:	2307      	movs	r3, #7
 8012c26:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8012c2a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8012c2e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012c32:	3338      	adds	r3, #56	; 0x38
 8012c34:	4974      	ldr	r1, [pc, #464]	; (8012e08 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8012c36:	4618      	mov	r0, r3
 8012c38:	f7ee fa80 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8012c3c:	2308      	movs	r3, #8
 8012c3e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8012c42:	f207 1265 	addw	r2, r7, #357	; 0x165
 8012c46:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012c4a:	3354      	adds	r3, #84	; 0x54
 8012c4c:	496f      	ldr	r1, [pc, #444]	; (8012e0c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8012c4e:	4618      	mov	r0, r3
 8012c50:	f7ee fa4c 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8012c54:	2309      	movs	r3, #9
 8012c56:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8012c5a:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8012c5e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012c62:	3370      	adds	r3, #112	; 0x70
 8012c64:	496a      	ldr	r1, [pc, #424]	; (8012e10 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8012c66:	4618      	mov	r0, r3
 8012c68:	f7ee fa90 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8012c6c:	2310      	movs	r3, #16
 8012c6e:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8012c72:	f207 1267 	addw	r2, r7, #359	; 0x167
 8012c76:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012c7a:	338c      	adds	r3, #140	; 0x8c
 8012c7c:	4965      	ldr	r1, [pc, #404]	; (8012e14 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8012c7e:	4618      	mov	r0, r3
 8012c80:	f7ee faac 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8012c84:	2311      	movs	r3, #17
 8012c86:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8012c8a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8012c8e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012c92:	33a8      	adds	r3, #168	; 0xa8
 8012c94:	4960      	ldr	r1, [pc, #384]	; (8012e18 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8012c96:	4618      	mov	r0, r3
 8012c98:	f7ee fa78 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8012c9c:	2312      	movs	r3, #18
 8012c9e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8012ca2:	f207 1269 	addw	r2, r7, #361	; 0x169
 8012ca6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012caa:	33c4      	adds	r3, #196	; 0xc4
 8012cac:	495b      	ldr	r1, [pc, #364]	; (8012e1c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8012cae:	4618      	mov	r0, r3
 8012cb0:	f7ee fa1c 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8012cb4:	2313      	movs	r3, #19
 8012cb6:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8012cba:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8012cbe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012cc2:	33e0      	adds	r3, #224	; 0xe0
 8012cc4:	4956      	ldr	r1, [pc, #344]	; (8012e20 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8012cc6:	4618      	mov	r0, r3
 8012cc8:	f7ee fa38 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8012ccc:	2314      	movs	r3, #20
 8012cce:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8012cd2:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8012cd6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012cda:	33fc      	adds	r3, #252	; 0xfc
 8012cdc:	4951      	ldr	r1, [pc, #324]	; (8012e24 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8012cde:	4618      	mov	r0, r3
 8012ce0:	f7ee faa4 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8012ce4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8012ce8:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8012cec:	601a      	str	r2, [r3, #0]
 8012cee:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8012cf2:	220a      	movs	r2, #10
 8012cf4:	605a      	str	r2, [r3, #4]
 8012cf6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8012cfa:	4618      	mov	r0, r3
 8012cfc:	f7ee fb97 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8012d00:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8012d04:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8012d08:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8012d0c:	9300      	str	r3, [sp, #0]
 8012d0e:	460b      	mov	r3, r1
 8012d10:	ca06      	ldmia	r2, {r1, r2}
 8012d12:	4845      	ldr	r0, [pc, #276]	; (8012e28 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8012d14:	f7ee fba3 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8012d18:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8012d1c:	4618      	mov	r0, r3
 8012d1e:	f7ee fb92 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8012d22:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8012d26:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8012d2a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012d2e:	429c      	cmp	r4, r3
 8012d30:	d004      	beq.n	8012d3c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8012d32:	3c1c      	subs	r4, #28
 8012d34:	4620      	mov	r0, r4
 8012d36:	f7ee f9cc 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8012d3a:	e7f6      	b.n	8012d2a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8012d3c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8012d40:	2200      	movs	r2, #0
 8012d42:	601a      	str	r2, [r3, #0]
 8012d44:	605a      	str	r2, [r3, #4]
 8012d46:	609a      	str	r2, [r3, #8]
 8012d48:	233c      	movs	r3, #60	; 0x3c
 8012d4a:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8012d4e:	231b      	movs	r3, #27
 8012d50:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8012d54:	231c      	movs	r3, #28
 8012d56:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8012d5a:	233e      	movs	r3, #62	; 0x3e
 8012d5c:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8012d60:	2319      	movs	r3, #25
 8012d62:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8012d66:	231a      	movs	r3, #26
 8012d68:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8012d6c:	233d      	movs	r3, #61	; 0x3d
 8012d6e:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8012d72:	2318      	movs	r3, #24
 8012d74:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8012d78:	231d      	movs	r3, #29
 8012d7a:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8012d7e:	2321      	movs	r3, #33	; 0x21
 8012d80:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8012d84:	2317      	movs	r3, #23
 8012d86:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8012d8a:	231e      	movs	r3, #30
 8012d8c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8012d90:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8012d94:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8012d98:	2304      	movs	r3, #4
 8012d9a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8012d9e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8012da2:	4618      	mov	r0, r3
 8012da4:	f7ee fb8b 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8012da8:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8012dac:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8012db0:	9300      	str	r3, [sp, #0]
 8012db2:	4613      	mov	r3, r2
 8012db4:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8012db8:	ca06      	ldmia	r2, {r1, r2}
 8012dba:	481c      	ldr	r0, [pc, #112]	; (8012e2c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8012dbc:	f7ee fb97 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8012dc0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8012dc4:	4618      	mov	r0, r3
 8012dc6:	f7ee fb86 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8012dca:	1d3b      	adds	r3, r7, #4
 8012dcc:	681b      	ldr	r3, [r3, #0]
 8012dce:	2b00      	cmp	r3, #0
 8012dd0:	d10e      	bne.n	8012df0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8012dd2:	463b      	mov	r3, r7
 8012dd4:	681b      	ldr	r3, [r3, #0]
 8012dd6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012dda:	4293      	cmp	r3, r2
 8012ddc:	d108      	bne.n	8012df0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8012dde:	4813      	ldr	r0, [pc, #76]	; (8012e2c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8012de0:	f7f0 ffde 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8012de4:	4810      	ldr	r0, [pc, #64]	; (8012e28 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8012de6:	f7f0 ffe8 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8012dea:	4804      	ldr	r0, [pc, #16]	; (8012dfc <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8012dec:	f7f0 fff2 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8012df0:	bf00      	nop
 8012df2:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8012df6:	46bd      	mov	sp, r7
 8012df8:	bd90      	pop	{r4, r7, pc}
 8012dfa:	bf00      	nop
 8012dfc:	20000348 	.word	0x20000348
 8012e00:	080275b8 	.word	0x080275b8
 8012e04:	080275c0 	.word	0x080275c0
 8012e08:	080275c8 	.word	0x080275c8
 8012e0c:	080275d0 	.word	0x080275d0
 8012e10:	080275d8 	.word	0x080275d8
 8012e14:	080275e0 	.word	0x080275e0
 8012e18:	080275e4 	.word	0x080275e4
 8012e1c:	080275ec 	.word	0x080275ec
 8012e20:	080275f4 	.word	0x080275f4
 8012e24:	080275fc 	.word	0x080275fc
 8012e28:	20000360 	.word	0x20000360
 8012e2c:	20000378 	.word	0x20000378

08012e30 <_GLOBAL__sub_I__ZN5LexerC2Ev>:
 8012e30:	b580      	push	{r7, lr}
 8012e32:	af00      	add	r7, sp, #0
 8012e34:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012e38:	2001      	movs	r0, #1
 8012e3a:	f7ff fe1d 	bl	8012a78 <_Z41__static_initialization_and_destruction_0ii>
 8012e3e:	bd80      	pop	{r7, pc}

08012e40 <_GLOBAL__sub_D__ZN5LexerC2Ev>:
 8012e40:	b580      	push	{r7, lr}
 8012e42:	af00      	add	r7, sp, #0
 8012e44:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012e48:	2000      	movs	r0, #0
 8012e4a:	f7ff fe15 	bl	8012a78 <_Z41__static_initialization_and_destruction_0ii>
 8012e4e:	bd80      	pop	{r7, pc}

08012e50 <_ZN7ProgramD1Ev>:
#include "Parser.h"

Program::~Program()
 8012e50:	b590      	push	{r4, r7, lr}
 8012e52:	b083      	sub	sp, #12
 8012e54:	af00      	add	r7, sp, #0
 8012e56:	6078      	str	r0, [r7, #4]
{
	delete setup;
 8012e58:	687b      	ldr	r3, [r7, #4]
 8012e5a:	681c      	ldr	r4, [r3, #0]
 8012e5c:	2c00      	cmp	r4, #0
 8012e5e:	d006      	beq.n	8012e6e <_ZN7ProgramD1Ev+0x1e>
 8012e60:	4620      	mov	r0, r4
 8012e62:	f003 fd7a 	bl	801695a <_ZN4BodyD1Ev>
 8012e66:	210c      	movs	r1, #12
 8012e68:	4620      	mov	r0, r4
 8012e6a:	f00f fedc 	bl	8022c26 <_ZdlPvj>
	delete loop;
 8012e6e:	687b      	ldr	r3, [r7, #4]
 8012e70:	685c      	ldr	r4, [r3, #4]
 8012e72:	2c00      	cmp	r4, #0
 8012e74:	d006      	beq.n	8012e84 <_ZN7ProgramD1Ev+0x34>
 8012e76:	4620      	mov	r0, r4
 8012e78:	f003 fd6f 	bl	801695a <_ZN4BodyD1Ev>
 8012e7c:	210c      	movs	r1, #12
 8012e7e:	4620      	mov	r0, r4
 8012e80:	f00f fed1 	bl	8022c26 <_ZdlPvj>
	delete finish;
 8012e84:	687b      	ldr	r3, [r7, #4]
 8012e86:	689c      	ldr	r4, [r3, #8]
 8012e88:	2c00      	cmp	r4, #0
 8012e8a:	d006      	beq.n	8012e9a <_ZN7ProgramD1Ev+0x4a>
 8012e8c:	4620      	mov	r0, r4
 8012e8e:	f003 fd64 	bl	801695a <_ZN4BodyD1Ev>
 8012e92:	210c      	movs	r1, #12
 8012e94:	4620      	mov	r0, r4
 8012e96:	f00f fec6 	bl	8022c26 <_ZdlPvj>
}
 8012e9a:	687b      	ldr	r3, [r7, #4]
 8012e9c:	4618      	mov	r0, r3
 8012e9e:	370c      	adds	r7, #12
 8012ea0:	46bd      	mov	sp, r7
 8012ea2:	bd90      	pop	{r4, r7, pc}

08012ea4 <_ZN6Parser11parse_whileEv>:

While_statement* Parser::parse_while()
{
 8012ea4:	b580      	push	{r7, lr}
 8012ea6:	b092      	sub	sp, #72	; 0x48
 8012ea8:	af00      	add	r7, sp, #0
 8012eaa:	6078      	str	r0, [r7, #4]
	auto st = new While_statement();
 8012eac:	2008      	movs	r0, #8
 8012eae:	f00f fecb 	bl	8022c48 <_Znwj>
 8012eb2:	4603      	mov	r3, r0
 8012eb4:	2200      	movs	r2, #0
 8012eb6:	601a      	str	r2, [r3, #0]
 8012eb8:	2200      	movs	r2, #0
 8012eba:	605a      	str	r2, [r3, #4]
 8012ebc:	647b      	str	r3, [r7, #68]	; 0x44
	st->condition = parse_expression();
 8012ebe:	6878      	ldr	r0, [r7, #4]
 8012ec0:	f008 f876 	bl	801afb0 <_ZN6Parser16parse_expressionEv>
 8012ec4:	4602      	mov	r2, r0
 8012ec6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8012ec8:	601a      	str	r2, [r3, #0]
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 8012eca:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8012ece:	4618      	mov	r0, r3
 8012ed0:	f00f fecb 	bl	8022c6a <_ZNSaIcEC1Ev>
 8012ed4:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8012ed8:	f107 030c 	add.w	r3, r7, #12
 8012edc:	4921      	ldr	r1, [pc, #132]	; (8012f64 <_ZN6Parser11parse_whileEv+0xc0>)
 8012ede:	4618      	mov	r0, r3
 8012ee0:	f7ee fa53 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8012ee4:	f107 030c 	add.w	r3, r7, #12
 8012ee8:	461a      	mov	r2, r3
 8012eea:	210a      	movs	r1, #10
 8012eec:	6878      	ldr	r0, [r7, #4]
 8012eee:	f000 fafd 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8012ef2:	f107 030c 	add.w	r3, r7, #12
 8012ef6:	4618      	mov	r0, r3
 8012ef8:	f010 f87d 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8012efc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8012f00:	4618      	mov	r0, r3
 8012f02:	f00f feb3 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 8012f06:	6878      	ldr	r0, [r7, #4]
 8012f08:	f000 fe09 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	st->while_body = parse_body();
 8012f0c:	6878      	ldr	r0, [r7, #4]
 8012f0e:	f000 fda3 	bl	8013a58 <_ZN6Parser10parse_bodyEv>
 8012f12:	4602      	mov	r2, r0
 8012f14:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8012f16:	605a      	str	r2, [r3, #4]
	assert_token(TOKEN_END, "\"end\" after if body");
 8012f18:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8012f1c:	4618      	mov	r0, r3
 8012f1e:	f00f fea4 	bl	8022c6a <_ZNSaIcEC1Ev>
 8012f22:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8012f26:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012f2a:	490f      	ldr	r1, [pc, #60]	; (8012f68 <_ZN6Parser11parse_whileEv+0xc4>)
 8012f2c:	4618      	mov	r0, r3
 8012f2e:	f7ee fa2c 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8012f32:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012f36:	461a      	mov	r2, r3
 8012f38:	2114      	movs	r1, #20
 8012f3a:	6878      	ldr	r0, [r7, #4]
 8012f3c:	f000 fad6 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8012f40:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012f44:	4618      	mov	r0, r3
 8012f46:	f010 f856 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8012f4a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8012f4e:	4618      	mov	r0, r3
 8012f50:	f00f fe8c 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 8012f54:	6878      	ldr	r0, [r7, #4]
 8012f56:	f000 fde2 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	return st;
 8012f5a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
}
 8012f5c:	4618      	mov	r0, r3
 8012f5e:	3748      	adds	r7, #72	; 0x48
 8012f60:	46bd      	mov	sp, r7
 8012f62:	bd80      	pop	{r7, pc}
 8012f64:	08027600 	.word	0x08027600
 8012f68:	08027628 	.word	0x08027628

08012f6c <_ZN6Parser20parse_elseif_contentEP12If_statement>:

void Parser::parse_elseif_content(If_statement *st)
{
 8012f6c:	b590      	push	{r4, r7, lr}
 8012f6e:	b08d      	sub	sp, #52	; 0x34
 8012f70:	af00      	add	r7, sp, #0
 8012f72:	6078      	str	r0, [r7, #4]
 8012f74:	6039      	str	r1, [r7, #0]
	get_next_token();
 8012f76:	6878      	ldr	r0, [r7, #4]
 8012f78:	f000 fdd1 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	st->conditions.push_back(parse_expression());
 8012f7c:	683c      	ldr	r4, [r7, #0]
 8012f7e:	6878      	ldr	r0, [r7, #4]
 8012f80:	f008 f816 	bl	801afb0 <_ZN6Parser16parse_expressionEv>
 8012f84:	4603      	mov	r3, r0
 8012f86:	60fb      	str	r3, [r7, #12]
 8012f88:	f107 030c 	add.w	r3, r7, #12
 8012f8c:	4619      	mov	r1, r3
 8012f8e:	4620      	mov	r0, r4
 8012f90:	f000 ff44 	bl	8013e1c <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 8012f94:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012f98:	4618      	mov	r0, r3
 8012f9a:	f00f fe66 	bl	8022c6a <_ZNSaIcEC1Ev>
 8012f9e:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8012fa2:	f107 0310 	add.w	r3, r7, #16
 8012fa6:	4915      	ldr	r1, [pc, #84]	; (8012ffc <_ZN6Parser20parse_elseif_contentEP12If_statement+0x90>)
 8012fa8:	4618      	mov	r0, r3
 8012faa:	f7ee f9ee 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8012fae:	f107 0310 	add.w	r3, r7, #16
 8012fb2:	461a      	mov	r2, r3
 8012fb4:	210a      	movs	r1, #10
 8012fb6:	6878      	ldr	r0, [r7, #4]
 8012fb8:	f000 fa98 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8012fbc:	f107 0310 	add.w	r3, r7, #16
 8012fc0:	4618      	mov	r0, r3
 8012fc2:	f010 f818 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8012fc6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012fca:	4618      	mov	r0, r3
 8012fcc:	f00f fe4e 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 8012fd0:	6878      	ldr	r0, [r7, #4]
 8012fd2:	f000 fda4 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 8012fd6:	683b      	ldr	r3, [r7, #0]
 8012fd8:	f103 040c 	add.w	r4, r3, #12
 8012fdc:	6878      	ldr	r0, [r7, #4]
 8012fde:	f000 fd3b 	bl	8013a58 <_ZN6Parser10parse_bodyEv>
 8012fe2:	4603      	mov	r3, r0
 8012fe4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8012fe6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8012fea:	4619      	mov	r1, r3
 8012fec:	4620      	mov	r0, r4
 8012fee:	f000 ff26 	bl	8013e3e <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 8012ff2:	bf00      	nop
 8012ff4:	3734      	adds	r7, #52	; 0x34
 8012ff6:	46bd      	mov	sp, r7
 8012ff8:	bd90      	pop	{r4, r7, pc}
 8012ffa:	bf00      	nop
 8012ffc:	08027600 	.word	0x08027600

08013000 <_ZN6Parser18parse_else_contentEP12If_statement>:

void Parser::parse_else_content(If_statement *st)
{
 8013000:	b590      	push	{r4, r7, lr}
 8013002:	b08b      	sub	sp, #44	; 0x2c
 8013004:	af00      	add	r7, sp, #0
 8013006:	6078      	str	r0, [r7, #4]
 8013008:	6039      	str	r1, [r7, #0]
	get_next_token();
 801300a:	6878      	ldr	r0, [r7, #4]
 801300c:	f000 fd87 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after \"else\"");
 8013010:	f107 0320 	add.w	r3, r7, #32
 8013014:	4618      	mov	r0, r3
 8013016:	f00f fe28 	bl	8022c6a <_ZNSaIcEC1Ev>
 801301a:	f107 0220 	add.w	r2, r7, #32
 801301e:	f107 0308 	add.w	r3, r7, #8
 8013022:	4915      	ldr	r1, [pc, #84]	; (8013078 <_ZN6Parser18parse_else_contentEP12If_statement+0x78>)
 8013024:	4618      	mov	r0, r3
 8013026:	f7ee f9b0 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801302a:	f107 0308 	add.w	r3, r7, #8
 801302e:	461a      	mov	r2, r3
 8013030:	210a      	movs	r1, #10
 8013032:	6878      	ldr	r0, [r7, #4]
 8013034:	f000 fa5a 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013038:	f107 0308 	add.w	r3, r7, #8
 801303c:	4618      	mov	r0, r3
 801303e:	f00f ffda 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013042:	f107 0320 	add.w	r3, r7, #32
 8013046:	4618      	mov	r0, r3
 8013048:	f00f fe10 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 801304c:	6878      	ldr	r0, [r7, #4]
 801304e:	f000 fd66 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 8013052:	683b      	ldr	r3, [r7, #0]
 8013054:	f103 040c 	add.w	r4, r3, #12
 8013058:	6878      	ldr	r0, [r7, #4]
 801305a:	f000 fcfd 	bl	8013a58 <_ZN6Parser10parse_bodyEv>
 801305e:	4603      	mov	r3, r0
 8013060:	627b      	str	r3, [r7, #36]	; 0x24
 8013062:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013066:	4619      	mov	r1, r3
 8013068:	4620      	mov	r0, r4
 801306a:	f000 fee8 	bl	8013e3e <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 801306e:	bf00      	nop
 8013070:	372c      	adds	r7, #44	; 0x2c
 8013072:	46bd      	mov	sp, r7
 8013074:	bd90      	pop	{r4, r7, pc}
 8013076:	bf00      	nop
 8013078:	0802763c 	.word	0x0802763c

0801307c <_ZN6Parser16parse_if_contentEP12If_statement>:

void Parser::parse_if_content(If_statement *st)
{
 801307c:	b590      	push	{r4, r7, lr}
 801307e:	b08d      	sub	sp, #52	; 0x34
 8013080:	af00      	add	r7, sp, #0
 8013082:	6078      	str	r0, [r7, #4]
 8013084:	6039      	str	r1, [r7, #0]
	st->conditions.push_back(parse_expression());
 8013086:	683c      	ldr	r4, [r7, #0]
 8013088:	6878      	ldr	r0, [r7, #4]
 801308a:	f007 ff91 	bl	801afb0 <_ZN6Parser16parse_expressionEv>
 801308e:	4603      	mov	r3, r0
 8013090:	60fb      	str	r3, [r7, #12]
 8013092:	f107 030c 	add.w	r3, r7, #12
 8013096:	4619      	mov	r1, r3
 8013098:	4620      	mov	r0, r4
 801309a:	f000 febf 	bl	8013e1c <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 801309e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80130a2:	4618      	mov	r0, r3
 80130a4:	f00f fde1 	bl	8022c6a <_ZNSaIcEC1Ev>
 80130a8:	f107 0228 	add.w	r2, r7, #40	; 0x28
 80130ac:	f107 0310 	add.w	r3, r7, #16
 80130b0:	4914      	ldr	r1, [pc, #80]	; (8013104 <_ZN6Parser16parse_if_contentEP12If_statement+0x88>)
 80130b2:	4618      	mov	r0, r3
 80130b4:	f7ee f969 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80130b8:	f107 0310 	add.w	r3, r7, #16
 80130bc:	461a      	mov	r2, r3
 80130be:	210a      	movs	r1, #10
 80130c0:	6878      	ldr	r0, [r7, #4]
 80130c2:	f000 fa13 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80130c6:	f107 0310 	add.w	r3, r7, #16
 80130ca:	4618      	mov	r0, r3
 80130cc:	f00f ff93 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80130d0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80130d4:	4618      	mov	r0, r3
 80130d6:	f00f fdc9 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 80130da:	6878      	ldr	r0, [r7, #4]
 80130dc:	f000 fd1f 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 80130e0:	683b      	ldr	r3, [r7, #0]
 80130e2:	f103 040c 	add.w	r4, r3, #12
 80130e6:	6878      	ldr	r0, [r7, #4]
 80130e8:	f000 fcb6 	bl	8013a58 <_ZN6Parser10parse_bodyEv>
 80130ec:	4603      	mov	r3, r0
 80130ee:	62fb      	str	r3, [r7, #44]	; 0x2c
 80130f0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80130f4:	4619      	mov	r1, r3
 80130f6:	4620      	mov	r0, r4
 80130f8:	f000 fea1 	bl	8013e3e <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 80130fc:	bf00      	nop
 80130fe:	3734      	adds	r7, #52	; 0x34
 8013100:	46bd      	mov	sp, r7
 8013102:	bd90      	pop	{r4, r7, pc}
 8013104:	08027600 	.word	0x08027600

08013108 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 8013108:	b580      	push	{r7, lr}
 801310a:	b082      	sub	sp, #8
 801310c:	af00      	add	r7, sp, #0
 801310e:	6078      	str	r0, [r7, #4]
 8013110:	687b      	ldr	r3, [r7, #4]
 8013112:	4618      	mov	r0, r3
 8013114:	f000 fea4 	bl	8013e60 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1Ev>
 8013118:	687b      	ldr	r3, [r7, #4]
 801311a:	4618      	mov	r0, r3
 801311c:	3708      	adds	r7, #8
 801311e:	46bd      	mov	sp, r7
 8013120:	bd80      	pop	{r7, pc}

08013122 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>:
      vector() = default;
 8013122:	b580      	push	{r7, lr}
 8013124:	b082      	sub	sp, #8
 8013126:	af00      	add	r7, sp, #0
 8013128:	6078      	str	r0, [r7, #4]
 801312a:	687b      	ldr	r3, [r7, #4]
 801312c:	4618      	mov	r0, r3
 801312e:	f7ff ffeb 	bl	8013108 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1Ev>
 8013132:	687b      	ldr	r3, [r7, #4]
 8013134:	4618      	mov	r0, r3
 8013136:	3708      	adds	r7, #8
 8013138:	46bd      	mov	sp, r7
 801313a:	bd80      	pop	{r7, pc}

0801313c <_ZNSt12_Vector_baseIP4BodySaIS1_EEC1Ev>:
      _Vector_base() = default;
 801313c:	b580      	push	{r7, lr}
 801313e:	b082      	sub	sp, #8
 8013140:	af00      	add	r7, sp, #0
 8013142:	6078      	str	r0, [r7, #4]
 8013144:	687b      	ldr	r3, [r7, #4]
 8013146:	4618      	mov	r0, r3
 8013148:	f000 fe9a 	bl	8013e80 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implC1Ev>
 801314c:	687b      	ldr	r3, [r7, #4]
 801314e:	4618      	mov	r0, r3
 8013150:	3708      	adds	r7, #8
 8013152:	46bd      	mov	sp, r7
 8013154:	bd80      	pop	{r7, pc}

08013156 <_ZNSt6vectorIP4BodySaIS1_EEC1Ev>:
      vector() = default;
 8013156:	b580      	push	{r7, lr}
 8013158:	b082      	sub	sp, #8
 801315a:	af00      	add	r7, sp, #0
 801315c:	6078      	str	r0, [r7, #4]
 801315e:	687b      	ldr	r3, [r7, #4]
 8013160:	4618      	mov	r0, r3
 8013162:	f7ff ffeb 	bl	801313c <_ZNSt12_Vector_baseIP4BodySaIS1_EEC1Ev>
 8013166:	687b      	ldr	r3, [r7, #4]
 8013168:	4618      	mov	r0, r3
 801316a:	3708      	adds	r7, #8
 801316c:	46bd      	mov	sp, r7
 801316e:	bd80      	pop	{r7, pc}

08013170 <_ZN12If_statementC1Ev>:
public:
	~Body();
	std::vector<Statement*> statements;
};

class If_statement
 8013170:	b580      	push	{r7, lr}
 8013172:	b082      	sub	sp, #8
 8013174:	af00      	add	r7, sp, #0
 8013176:	6078      	str	r0, [r7, #4]
 8013178:	687b      	ldr	r3, [r7, #4]
 801317a:	4618      	mov	r0, r3
 801317c:	f7ff ffd1 	bl	8013122 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>
 8013180:	687b      	ldr	r3, [r7, #4]
 8013182:	330c      	adds	r3, #12
 8013184:	4618      	mov	r0, r3
 8013186:	f7ff ffe6 	bl	8013156 <_ZNSt6vectorIP4BodySaIS1_EEC1Ev>
 801318a:	687b      	ldr	r3, [r7, #4]
 801318c:	4618      	mov	r0, r3
 801318e:	3708      	adds	r7, #8
 8013190:	46bd      	mov	sp, r7
 8013192:	bd80      	pop	{r7, pc}

08013194 <_ZN6Parser8parse_ifEv>:

If_statement* Parser::parse_if()
{
 8013194:	b590      	push	{r4, r7, lr}
 8013196:	b08b      	sub	sp, #44	; 0x2c
 8013198:	af00      	add	r7, sp, #0
 801319a:	6078      	str	r0, [r7, #4]
	auto st = new If_statement();
 801319c:	2018      	movs	r0, #24
 801319e:	f00f fd53 	bl	8022c48 <_Znwj>
 80131a2:	4603      	mov	r3, r0
 80131a4:	461c      	mov	r4, r3
 80131a6:	4622      	mov	r2, r4
 80131a8:	2300      	movs	r3, #0
 80131aa:	6013      	str	r3, [r2, #0]
 80131ac:	6053      	str	r3, [r2, #4]
 80131ae:	6093      	str	r3, [r2, #8]
 80131b0:	60d3      	str	r3, [r2, #12]
 80131b2:	6113      	str	r3, [r2, #16]
 80131b4:	6153      	str	r3, [r2, #20]
 80131b6:	4620      	mov	r0, r4
 80131b8:	f7ff ffda 	bl	8013170 <_ZN12If_statementC1Ev>
 80131bc:	627c      	str	r4, [r7, #36]	; 0x24

	parse_if_content(st);
 80131be:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80131c0:	6878      	ldr	r0, [r7, #4]
 80131c2:	f7ff ff5b 	bl	801307c <_ZN6Parser16parse_if_contentEP12If_statement>
	while (token_buffer.type == TOKEN_ELSEIF)
 80131c6:	687b      	ldr	r3, [r7, #4]
 80131c8:	781b      	ldrb	r3, [r3, #0]
 80131ca:	2b11      	cmp	r3, #17
 80131cc:	d104      	bne.n	80131d8 <_ZN6Parser8parse_ifEv+0x44>
	{
		parse_elseif_content(st);
 80131ce:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80131d0:	6878      	ldr	r0, [r7, #4]
 80131d2:	f7ff fecb 	bl	8012f6c <_ZN6Parser20parse_elseif_contentEP12If_statement>
	while (token_buffer.type == TOKEN_ELSEIF)
 80131d6:	e7f6      	b.n	80131c6 <_ZN6Parser8parse_ifEv+0x32>
	}
	if (token_buffer.type == TOKEN_ELSE)
 80131d8:	687b      	ldr	r3, [r7, #4]
 80131da:	781b      	ldrb	r3, [r3, #0]
 80131dc:	2b12      	cmp	r3, #18
 80131de:	d103      	bne.n	80131e8 <_ZN6Parser8parse_ifEv+0x54>
	{
		parse_else_content(st);
 80131e0:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80131e2:	6878      	ldr	r0, [r7, #4]
 80131e4:	f7ff ff0c 	bl	8013000 <_ZN6Parser18parse_else_contentEP12If_statement>
	}
	assert_token(TOKEN_END, "\"end\" after if body");
 80131e8:	f107 0320 	add.w	r3, r7, #32
 80131ec:	4618      	mov	r0, r3
 80131ee:	f00f fd3c 	bl	8022c6a <_ZNSaIcEC1Ev>
 80131f2:	f107 0220 	add.w	r2, r7, #32
 80131f6:	f107 0308 	add.w	r3, r7, #8
 80131fa:	490e      	ldr	r1, [pc, #56]	; (8013234 <_ZN6Parser8parse_ifEv+0xa0>)
 80131fc:	4618      	mov	r0, r3
 80131fe:	f7ee f8c4 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013202:	f107 0308 	add.w	r3, r7, #8
 8013206:	461a      	mov	r2, r3
 8013208:	2114      	movs	r1, #20
 801320a:	6878      	ldr	r0, [r7, #4]
 801320c:	f000 f96e 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013210:	f107 0308 	add.w	r3, r7, #8
 8013214:	4618      	mov	r0, r3
 8013216:	f00f feee 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801321a:	f107 0320 	add.w	r3, r7, #32
 801321e:	4618      	mov	r0, r3
 8013220:	f00f fd24 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 8013224:	6878      	ldr	r0, [r7, #4]
 8013226:	f000 fc7a 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>

	return st;
 801322a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 801322c:	4618      	mov	r0, r3
 801322e:	372c      	adds	r7, #44	; 0x2c
 8013230:	46bd      	mov	sp, r7
 8013232:	bd90      	pop	{r4, r7, pc}
 8013234:	08027628 	.word	0x08027628

08013238 <_ZN6Parser20parse_variable_indexEP8Variable>:

void Parser::parse_variable_index(Variable *var)
{
 8013238:	b580      	push	{r7, lr}
 801323a:	b08a      	sub	sp, #40	; 0x28
 801323c:	af00      	add	r7, sp, #0
 801323e:	6078      	str	r0, [r7, #4]
 8013240:	6039      	str	r1, [r7, #0]
	if (token_buffer.type == TOKEN_LEFT_SQUARE)
 8013242:	687b      	ldr	r3, [r7, #4]
 8013244:	781b      	ldrb	r3, [r3, #0]
 8013246:	2b0d      	cmp	r3, #13
 8013248:	d12a      	bne.n	80132a0 <_ZN6Parser20parse_variable_indexEP8Variable+0x68>
	{
		get_next_token();
 801324a:	6878      	ldr	r0, [r7, #4]
 801324c:	f000 fc67 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		var->index = parse_expression();
 8013250:	6878      	ldr	r0, [r7, #4]
 8013252:	f007 fead 	bl	801afb0 <_ZN6Parser16parse_expressionEv>
 8013256:	4602      	mov	r2, r0
 8013258:	683b      	ldr	r3, [r7, #0]
 801325a:	61da      	str	r2, [r3, #28]
		assert_token(TOKEN_RIGHT_SQUARE, "closing square bracket");
 801325c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013260:	4618      	mov	r0, r3
 8013262:	f00f fd02 	bl	8022c6a <_ZNSaIcEC1Ev>
 8013266:	f107 0224 	add.w	r2, r7, #36	; 0x24
 801326a:	f107 030c 	add.w	r3, r7, #12
 801326e:	4910      	ldr	r1, [pc, #64]	; (80132b0 <_ZN6Parser20parse_variable_indexEP8Variable+0x78>)
 8013270:	4618      	mov	r0, r3
 8013272:	f7ee f88a 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013276:	f107 030c 	add.w	r3, r7, #12
 801327a:	461a      	mov	r2, r3
 801327c:	210e      	movs	r1, #14
 801327e:	6878      	ldr	r0, [r7, #4]
 8013280:	f000 f934 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013284:	f107 030c 	add.w	r3, r7, #12
 8013288:	4618      	mov	r0, r3
 801328a:	f00f feb4 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801328e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013292:	4618      	mov	r0, r3
 8013294:	f00f fcea 	bl	8022c6c <_ZNSaIcED1Ev>
		get_next_token();
 8013298:	6878      	ldr	r0, [r7, #4]
 801329a:	f000 fc40 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	}
	else
	{
		var->index = nullptr;
	}
}
 801329e:	e002      	b.n	80132a6 <_ZN6Parser20parse_variable_indexEP8Variable+0x6e>
		var->index = nullptr;
 80132a0:	683b      	ldr	r3, [r7, #0]
 80132a2:	2200      	movs	r2, #0
 80132a4:	61da      	str	r2, [r3, #28]
}
 80132a6:	bf00      	nop
 80132a8:	3728      	adds	r7, #40	; 0x28
 80132aa:	46bd      	mov	sp, r7
 80132ac:	bd80      	pop	{r7, pc}
 80132ae:	bf00      	nop
 80132b0:	08027654 	.word	0x08027654

080132b4 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Parser::parse_member_selection_id(std::string &id)
{
 80132b4:	b580      	push	{r7, lr}
 80132b6:	b096      	sub	sp, #88	; 0x58
 80132b8:	af00      	add	r7, sp, #0
 80132ba:	6078      	str	r0, [r7, #4]
 80132bc:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_COLON, "colon operator \":\"");
 80132be:	f107 0320 	add.w	r3, r7, #32
 80132c2:	4618      	mov	r0, r3
 80132c4:	f00f fcd1 	bl	8022c6a <_ZNSaIcEC1Ev>
 80132c8:	f107 0220 	add.w	r2, r7, #32
 80132cc:	f107 0308 	add.w	r3, r7, #8
 80132d0:	4929      	ldr	r1, [pc, #164]	; (8013378 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc4>)
 80132d2:	4618      	mov	r0, r3
 80132d4:	f7ee f859 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80132d8:	f107 0308 	add.w	r3, r7, #8
 80132dc:	461a      	mov	r2, r3
 80132de:	2101      	movs	r1, #1
 80132e0:	6878      	ldr	r0, [r7, #4]
 80132e2:	f000 f903 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80132e6:	f107 0308 	add.w	r3, r7, #8
 80132ea:	4618      	mov	r0, r3
 80132ec:	f00f fe83 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80132f0:	f107 0320 	add.w	r3, r7, #32
 80132f4:	4618      	mov	r0, r3
 80132f6:	f00f fcb9 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 80132fa:	6878      	ldr	r0, [r7, #4]
 80132fc:	f000 fc0f 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_IDENTIFIER, "identifier");
 8013300:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013304:	4618      	mov	r0, r3
 8013306:	f00f fcb0 	bl	8022c6a <_ZNSaIcEC1Ev>
 801330a:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 801330e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013312:	491a      	ldr	r1, [pc, #104]	; (801337c <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc8>)
 8013314:	4618      	mov	r0, r3
 8013316:	f7ee f838 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801331a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801331e:	461a      	mov	r2, r3
 8013320:	2102      	movs	r1, #2
 8013322:	6878      	ldr	r0, [r7, #4]
 8013324:	f000 f8e2 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013328:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801332c:	4618      	mov	r0, r3
 801332e:	f00f fe62 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013332:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013336:	4618      	mov	r0, r3
 8013338:	f00f fc98 	bl	8022c6c <_ZNSaIcED1Ev>
	id = std::string(std::get<std::string>(token_buffer.value));
 801333c:	687b      	ldr	r3, [r7, #4]
 801333e:	3304      	adds	r3, #4
 8013340:	4618      	mov	r0, r3
 8013342:	f000 fdad 	bl	8013ea0 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8013346:	4602      	mov	r2, r0
 8013348:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801334c:	4611      	mov	r1, r2
 801334e:	4618      	mov	r0, r3
 8013350:	f00f ff82 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8013354:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013358:	4619      	mov	r1, r3
 801335a:	6838      	ldr	r0, [r7, #0]
 801335c:	f00f fe57 	bl	802300e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8013360:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013364:	4618      	mov	r0, r3
 8013366:	f00f fe46 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	get_next_token();
 801336a:	6878      	ldr	r0, [r7, #4]
 801336c:	f000 fbd7 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
}
 8013370:	bf00      	nop
 8013372:	3758      	adds	r7, #88	; 0x58
 8013374:	46bd      	mov	sp, r7
 8013376:	bd80      	pop	{r7, pc}
 8013378:	0802766c 	.word	0x0802766c
 801337c:	08027680 	.word	0x08027680

08013380 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable>:

void Parser::parse_variable_id(std::string &id, Variable *var)
{
 8013380:	b580      	push	{r7, lr}
 8013382:	b08a      	sub	sp, #40	; 0x28
 8013384:	af00      	add	r7, sp, #0
 8013386:	60f8      	str	r0, [r7, #12]
 8013388:	60b9      	str	r1, [r7, #8]
 801338a:	607a      	str	r2, [r7, #4]
	if (id == "Arg")
 801338c:	491b      	ldr	r1, [pc, #108]	; (80133fc <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x7c>)
 801338e:	68b8      	ldr	r0, [r7, #8]
 8013390:	f000 fd92 	bl	8013eb8 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 8013394:	4603      	mov	r3, r0
 8013396:	2b00      	cmp	r3, #0
 8013398:	d007      	beq.n	80133aa <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x2a>
	{
		var->type = ASSIGNMENT_ARG;
 801339a:	687b      	ldr	r3, [r7, #4]
 801339c:	2201      	movs	r2, #1
 801339e:	701a      	strb	r2, [r3, #0]
		parse_member_selection_id(id);
 80133a0:	68b9      	ldr	r1, [r7, #8]
 80133a2:	68f8      	ldr	r0, [r7, #12]
 80133a4:	f7ff ff86 	bl	80132b4 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80133a8:	e011      	b.n	80133ce <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x4e>
	}
	else if (id == "Par")
 80133aa:	4915      	ldr	r1, [pc, #84]	; (8013400 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x80>)
 80133ac:	68b8      	ldr	r0, [r7, #8]
 80133ae:	f000 fd83 	bl	8013eb8 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 80133b2:	4603      	mov	r3, r0
 80133b4:	2b00      	cmp	r3, #0
 80133b6:	d007      	beq.n	80133c8 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x48>
	{
		var->type = ASSIGNMENT_PAR;
 80133b8:	687b      	ldr	r3, [r7, #4]
 80133ba:	2202      	movs	r2, #2
 80133bc:	701a      	strb	r2, [r3, #0]
		parse_member_selection_id(id);
 80133be:	68b9      	ldr	r1, [r7, #8]
 80133c0:	68f8      	ldr	r0, [r7, #12]
 80133c2:	f7ff ff77 	bl	80132b4 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80133c6:	e002      	b.n	80133ce <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x4e>
	}
	else
	{
		var->type = ASSIGNMENT_LOCAL;
 80133c8:	687b      	ldr	r3, [r7, #4]
 80133ca:	2200      	movs	r2, #0
 80133cc:	701a      	strb	r2, [r3, #0]
	}

	var->id = std::string(id);
 80133ce:	f107 0310 	add.w	r3, r7, #16
 80133d2:	68b9      	ldr	r1, [r7, #8]
 80133d4:	4618      	mov	r0, r3
 80133d6:	f00f ff3f 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80133da:	687b      	ldr	r3, [r7, #4]
 80133dc:	3304      	adds	r3, #4
 80133de:	f107 0210 	add.w	r2, r7, #16
 80133e2:	4611      	mov	r1, r2
 80133e4:	4618      	mov	r0, r3
 80133e6:	f00f fe12 	bl	802300e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 80133ea:	f107 0310 	add.w	r3, r7, #16
 80133ee:	4618      	mov	r0, r3
 80133f0:	f00f fe01 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 80133f4:	bf00      	nop
 80133f6:	3728      	adds	r7, #40	; 0x28
 80133f8:	46bd      	mov	sp, r7
 80133fa:	bd80      	pop	{r7, pc}
 80133fc:	0802768c 	.word	0x0802768c
 8013400:	08027690 	.word	0x08027690

08013404 <_ZN8VariableC1Ev>:
	ASSIGNMENT_LOCAL,
	ASSIGNMENT_ARG,
	ASSIGNMENT_PAR,
}variable_type;

class Variable
 8013404:	b580      	push	{r7, lr}
 8013406:	b082      	sub	sp, #8
 8013408:	af00      	add	r7, sp, #0
 801340a:	6078      	str	r0, [r7, #4]
 801340c:	687b      	ldr	r3, [r7, #4]
 801340e:	3304      	adds	r3, #4
 8013410:	4618      	mov	r0, r3
 8013412:	f00f fdcf 	bl	8022fb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8013416:	687b      	ldr	r3, [r7, #4]
 8013418:	4618      	mov	r0, r3
 801341a:	3708      	adds	r7, #8
 801341c:	46bd      	mov	sp, r7
 801341e:	bd80      	pop	{r7, pc}

08013420 <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Variable* Parser::parse_variable(std::string &id)
{
 8013420:	b590      	push	{r4, r7, lr}
 8013422:	b085      	sub	sp, #20
 8013424:	af00      	add	r7, sp, #0
 8013426:	6078      	str	r0, [r7, #4]
 8013428:	6039      	str	r1, [r7, #0]
	auto var = new Variable();
 801342a:	2020      	movs	r0, #32
 801342c:	f00f fc0c 	bl	8022c48 <_Znwj>
 8013430:	4603      	mov	r3, r0
 8013432:	461c      	mov	r4, r3
 8013434:	4620      	mov	r0, r4
 8013436:	2320      	movs	r3, #32
 8013438:	461a      	mov	r2, r3
 801343a:	2100      	movs	r1, #0
 801343c:	f010 ff8a 	bl	8024354 <memset>
 8013440:	4620      	mov	r0, r4
 8013442:	f7ff ffdf 	bl	8013404 <_ZN8VariableC1Ev>
 8013446:	60fc      	str	r4, [r7, #12]
	parse_variable_id(id, var);
 8013448:	68fa      	ldr	r2, [r7, #12]
 801344a:	6839      	ldr	r1, [r7, #0]
 801344c:	6878      	ldr	r0, [r7, #4]
 801344e:	f7ff ff97 	bl	8013380 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable>
	parse_variable_index(var);
 8013452:	68f9      	ldr	r1, [r7, #12]
 8013454:	6878      	ldr	r0, [r7, #4]
 8013456:	f7ff feef 	bl	8013238 <_ZN6Parser20parse_variable_indexEP8Variable>
	return var;
 801345a:	68fb      	ldr	r3, [r7, #12]
}
 801345c:	4618      	mov	r0, r3
 801345e:	3714      	adds	r7, #20
 8013460:	46bd      	mov	sp, r7
 8013462:	bd90      	pop	{r4, r7, pc}

08013464 <_ZN6Parser16parse_assignmentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Assignment* Parser::parse_assignment(std::string &id)
{
 8013464:	b580      	push	{r7, lr}
 8013466:	b08a      	sub	sp, #40	; 0x28
 8013468:	af00      	add	r7, sp, #0
 801346a:	6078      	str	r0, [r7, #4]
 801346c:	6039      	str	r1, [r7, #0]
	auto st = new Assignment();
 801346e:	2008      	movs	r0, #8
 8013470:	f00f fbea 	bl	8022c48 <_Znwj>
 8013474:	4603      	mov	r3, r0
 8013476:	2200      	movs	r2, #0
 8013478:	601a      	str	r2, [r3, #0]
 801347a:	2200      	movs	r2, #0
 801347c:	605a      	str	r2, [r3, #4]
 801347e:	627b      	str	r3, [r7, #36]	; 0x24
	st->var = parse_variable(id);
 8013480:	6839      	ldr	r1, [r7, #0]
 8013482:	6878      	ldr	r0, [r7, #4]
 8013484:	f7ff ffcc 	bl	8013420 <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013488:	4602      	mov	r2, r0
 801348a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801348c:	601a      	str	r2, [r3, #0]
	assert_token(TOKEN_ASSIGN, "assignment operator \"=\"");
 801348e:	f107 0320 	add.w	r3, r7, #32
 8013492:	4618      	mov	r0, r3
 8013494:	f00f fbe9 	bl	8022c6a <_ZNSaIcEC1Ev>
 8013498:	f107 0220 	add.w	r2, r7, #32
 801349c:	f107 0308 	add.w	r3, r7, #8
 80134a0:	4911      	ldr	r1, [pc, #68]	; (80134e8 <_ZN6Parser16parse_assignmentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x84>)
 80134a2:	4618      	mov	r0, r3
 80134a4:	f7ed ff71 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80134a8:	f107 0308 	add.w	r3, r7, #8
 80134ac:	461a      	mov	r2, r3
 80134ae:	2118      	movs	r1, #24
 80134b0:	6878      	ldr	r0, [r7, #4]
 80134b2:	f000 f81b 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80134b6:	f107 0308 	add.w	r3, r7, #8
 80134ba:	4618      	mov	r0, r3
 80134bc:	f00f fd9b 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80134c0:	f107 0320 	add.w	r3, r7, #32
 80134c4:	4618      	mov	r0, r3
 80134c6:	f00f fbd1 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 80134ca:	6878      	ldr	r0, [r7, #4]
 80134cc:	f000 fb27 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	st->value = parse_expression();
 80134d0:	6878      	ldr	r0, [r7, #4]
 80134d2:	f007 fd6d 	bl	801afb0 <_ZN6Parser16parse_expressionEv>
 80134d6:	4602      	mov	r2, r0
 80134d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80134da:	605a      	str	r2, [r3, #4]
	return st;
 80134dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 80134de:	4618      	mov	r0, r3
 80134e0:	3728      	adds	r7, #40	; 0x28
 80134e2:	46bd      	mov	sp, r7
 80134e4:	bd80      	pop	{r7, pc}
 80134e6:	bf00      	nop
 80134e8:	08027694 	.word	0x08027694

080134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Parser::assert_token(token_type type, const std::string message)
{
 80134ec:	b580      	push	{r7, lr}
 80134ee:	b096      	sub	sp, #88	; 0x58
 80134f0:	af00      	add	r7, sp, #0
 80134f2:	60f8      	str	r0, [r7, #12]
 80134f4:	460b      	mov	r3, r1
 80134f6:	607a      	str	r2, [r7, #4]
 80134f8:	72fb      	strb	r3, [r7, #11]
	if (token_buffer.type != type)
 80134fa:	68fb      	ldr	r3, [r7, #12]
 80134fc:	781b      	ldrb	r3, [r3, #0]
 80134fe:	7afa      	ldrb	r2, [r7, #11]
 8013500:	429a      	cmp	r2, r3
 8013502:	d02a      	beq.n	801355a <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6e>
	{
		std::string msg = "expected " + message + "\n";
 8013504:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013508:	687a      	ldr	r2, [r7, #4]
 801350a:	4916      	ldr	r1, [pc, #88]	; (8013564 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78>)
 801350c:	4618      	mov	r0, r3
 801350e:	f7fb ff94 	bl	800f43a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 8013512:	f107 0310 	add.w	r3, r7, #16
 8013516:	f107 0128 	add.w	r1, r7, #40	; 0x28
 801351a:	4a13      	ldr	r2, [pc, #76]	; (8013568 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>)
 801351c:	4618      	mov	r0, r3
 801351e:	f7fb ffb1 	bl	800f484 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8013522:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013526:	4618      	mov	r0, r3
 8013528:	f00f fd65 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		Transmitter::report_error(msg);
 801352c:	f107 0210 	add.w	r2, r7, #16
 8013530:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013534:	4611      	mov	r1, r2
 8013536:	4618      	mov	r0, r3
 8013538:	f00f fe8e 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801353c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013540:	4618      	mov	r0, r3
 8013542:	f005 fc83 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013546:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801354a:	4618      	mov	r0, r3
 801354c:	f00f fd53 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		std::string msg = "expected " + message + "\n";
 8013550:	f107 0310 	add.w	r3, r7, #16
 8013554:	4618      	mov	r0, r3
 8013556:	f00f fd4e 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 801355a:	bf00      	nop
 801355c:	3758      	adds	r7, #88	; 0x58
 801355e:	46bd      	mov	sp, r7
 8013560:	bd80      	pop	{r7, pc}
 8013562:	bf00      	nop
 8013564:	080276ac 	.word	0x080276ac
 8013568:	080276b8 	.word	0x080276b8

0801356c <_ZN6Parser24parse_function_argumentsEP13Function_call>:

void Parser::parse_function_arguments(Function_call *f)
{
 801356c:	b590      	push	{r4, r7, lr}
 801356e:	b085      	sub	sp, #20
 8013570:	af00      	add	r7, sp, #0
 8013572:	6078      	str	r0, [r7, #4]
 8013574:	6039      	str	r1, [r7, #0]
	if (token_buffer.type != TOKEN_RIGHT_BRACKET)
 8013576:	687b      	ldr	r3, [r7, #4]
 8013578:	781b      	ldrb	r3, [r3, #0]
 801357a:	2b27      	cmp	r3, #39	; 0x27
 801357c:	d023      	beq.n	80135c6 <_ZN6Parser24parse_function_argumentsEP13Function_call+0x5a>
	{
		f->arguments.push_back(parse_expression());
 801357e:	683b      	ldr	r3, [r7, #0]
 8013580:	f103 0420 	add.w	r4, r3, #32
 8013584:	6878      	ldr	r0, [r7, #4]
 8013586:	f007 fd13 	bl	801afb0 <_ZN6Parser16parse_expressionEv>
 801358a:	4603      	mov	r3, r0
 801358c:	60bb      	str	r3, [r7, #8]
 801358e:	f107 0308 	add.w	r3, r7, #8
 8013592:	4619      	mov	r1, r3
 8013594:	4620      	mov	r0, r4
 8013596:	f000 fc41 	bl	8013e1c <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
		while (token_buffer.type == TOKEN_COMA)
 801359a:	687b      	ldr	r3, [r7, #4]
 801359c:	781b      	ldrb	r3, [r3, #0]
 801359e:	2b0c      	cmp	r3, #12
 80135a0:	d111      	bne.n	80135c6 <_ZN6Parser24parse_function_argumentsEP13Function_call+0x5a>
		{
			get_next_token();
 80135a2:	6878      	ldr	r0, [r7, #4]
 80135a4:	f000 fabb 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
			f->arguments.push_back(parse_expression());
 80135a8:	683b      	ldr	r3, [r7, #0]
 80135aa:	f103 0420 	add.w	r4, r3, #32
 80135ae:	6878      	ldr	r0, [r7, #4]
 80135b0:	f007 fcfe 	bl	801afb0 <_ZN6Parser16parse_expressionEv>
 80135b4:	4603      	mov	r3, r0
 80135b6:	60fb      	str	r3, [r7, #12]
 80135b8:	f107 030c 	add.w	r3, r7, #12
 80135bc:	4619      	mov	r1, r3
 80135be:	4620      	mov	r0, r4
 80135c0:	f000 fc2c 	bl	8013e1c <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
		while (token_buffer.type == TOKEN_COMA)
 80135c4:	e7e9      	b.n	801359a <_ZN6Parser24parse_function_argumentsEP13Function_call+0x2e>
		}
	}
}
 80135c6:	bf00      	nop
 80135c8:	3714      	adds	r7, #20
 80135ca:	46bd      	mov	sp, r7
 80135cc:	bd90      	pop	{r4, r7, pc}

080135ce <_ZN13Function_callC1Ev>:
	variable_type type;
	std::string id;
	Expression* index;
};

class Function_call
 80135ce:	b580      	push	{r7, lr}
 80135d0:	b082      	sub	sp, #8
 80135d2:	af00      	add	r7, sp, #0
 80135d4:	6078      	str	r0, [r7, #4]
 80135d6:	687b      	ldr	r3, [r7, #4]
 80135d8:	3308      	adds	r3, #8
 80135da:	4618      	mov	r0, r3
 80135dc:	f00f fcea 	bl	8022fb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 80135e0:	687b      	ldr	r3, [r7, #4]
 80135e2:	3320      	adds	r3, #32
 80135e4:	4618      	mov	r0, r3
 80135e6:	f7ff fd9c 	bl	8013122 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>
 80135ea:	687b      	ldr	r3, [r7, #4]
 80135ec:	4618      	mov	r0, r3
 80135ee:	3708      	adds	r7, #8
 80135f0:	46bd      	mov	sp, r7
 80135f2:	bd80      	pop	{r7, pc}

080135f4 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Function_call* Parser::parse_function_call(std::string &id)
{
 80135f4:	b590      	push	{r4, r7, lr}
 80135f6:	b091      	sub	sp, #68	; 0x44
 80135f8:	af00      	add	r7, sp, #0
 80135fa:	6078      	str	r0, [r7, #4]
 80135fc:	6039      	str	r1, [r7, #0]
	auto f = new Function_call();
 80135fe:	202c      	movs	r0, #44	; 0x2c
 8013600:	f00f fb22 	bl	8022c48 <_Znwj>
 8013604:	4603      	mov	r3, r0
 8013606:	461c      	mov	r4, r3
 8013608:	4620      	mov	r0, r4
 801360a:	232c      	movs	r3, #44	; 0x2c
 801360c:	461a      	mov	r2, r3
 801360e:	2100      	movs	r1, #0
 8013610:	f010 fea0 	bl	8024354 <memset>
 8013614:	4620      	mov	r0, r4
 8013616:	f7ff ffda 	bl	80135ce <_ZN13Function_callC1Ev>
 801361a:	63fc      	str	r4, [r7, #60]	; 0x3c
	f->id = std::string(id);
 801361c:	f107 0308 	add.w	r3, r7, #8
 8013620:	6839      	ldr	r1, [r7, #0]
 8013622:	4618      	mov	r0, r3
 8013624:	f00f fe18 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8013628:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801362a:	3308      	adds	r3, #8
 801362c:	f107 0208 	add.w	r2, r7, #8
 8013630:	4611      	mov	r1, r2
 8013632:	4618      	mov	r0, r3
 8013634:	f00f fceb 	bl	802300e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8013638:	f107 0308 	add.w	r3, r7, #8
 801363c:	4618      	mov	r0, r3
 801363e:	f00f fcda 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	f->line = Position_counter::get_instance().line;
 8013642:	f003 f945 	bl	80168d0 <_ZN16Position_counter12get_instanceEv>
 8013646:	4603      	mov	r3, r0
 8013648:	681a      	ldr	r2, [r3, #0]
 801364a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801364c:	601a      	str	r2, [r3, #0]
	f->position = Position_counter::get_instance().position;
 801364e:	f003 f93f 	bl	80168d0 <_ZN16Position_counter12get_instanceEv>
 8013652:	4603      	mov	r3, r0
 8013654:	685a      	ldr	r2, [r3, #4]
 8013656:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8013658:	605a      	str	r2, [r3, #4]
	get_next_token();
 801365a:	6878      	ldr	r0, [r7, #4]
 801365c:	f000 fa5f 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	parse_function_arguments(f);
 8013660:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8013662:	6878      	ldr	r0, [r7, #4]
 8013664:	f7ff ff82 	bl	801356c <_ZN6Parser24parse_function_argumentsEP13Function_call>
	assert_token(TOKEN_RIGHT_BRACKET, "closing bracket");
 8013668:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801366c:	4618      	mov	r0, r3
 801366e:	f00f fafc 	bl	8022c6a <_ZNSaIcEC1Ev>
 8013672:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8013676:	f107 0320 	add.w	r3, r7, #32
 801367a:	490e      	ldr	r1, [pc, #56]	; (80136b4 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc0>)
 801367c:	4618      	mov	r0, r3
 801367e:	f7ed fe84 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013682:	f107 0320 	add.w	r3, r7, #32
 8013686:	461a      	mov	r2, r3
 8013688:	2127      	movs	r1, #39	; 0x27
 801368a:	6878      	ldr	r0, [r7, #4]
 801368c:	f7ff ff2e 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013690:	f107 0320 	add.w	r3, r7, #32
 8013694:	4618      	mov	r0, r3
 8013696:	f00f fcae 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801369a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801369e:	4618      	mov	r0, r3
 80136a0:	f00f fae4 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 80136a4:	6878      	ldr	r0, [r7, #4]
 80136a6:	f000 fa3a 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	return f;
 80136aa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
}
 80136ac:	4618      	mov	r0, r3
 80136ae:	3744      	adds	r7, #68	; 0x44
 80136b0:	46bd      	mov	sp, r7
 80136b2:	bd90      	pop	{r4, r7, pc}
 80136b4:	080276bc 	.word	0x080276bc

080136b8 <_ZN11Method_callC1Ev>:
	int position;
	std::string id;
	arglist arguments;
};

class Method_call
 80136b8:	b580      	push	{r7, lr}
 80136ba:	b082      	sub	sp, #8
 80136bc:	af00      	add	r7, sp, #0
 80136be:	6078      	str	r0, [r7, #4]
 80136c0:	687b      	ldr	r3, [r7, #4]
 80136c2:	4618      	mov	r0, r3
 80136c4:	f00f fc76 	bl	8022fb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 80136c8:	687b      	ldr	r3, [r7, #4]
 80136ca:	4618      	mov	r0, r3
 80136cc:	3708      	adds	r7, #8
 80136ce:	46bd      	mov	sp, r7
 80136d0:	bd80      	pop	{r7, pc}
	...

080136d4 <_ZN6Parser17parse_method_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Method_call* Parser::parse_method_call(std::string &id)
{
 80136d4:	b590      	push	{r4, r7, lr}
 80136d6:	b099      	sub	sp, #100	; 0x64
 80136d8:	af00      	add	r7, sp, #0
 80136da:	6078      	str	r0, [r7, #4]
 80136dc:	6039      	str	r1, [r7, #0]
	auto m = new Method_call();
 80136de:	201c      	movs	r0, #28
 80136e0:	f00f fab2 	bl	8022c48 <_Znwj>
 80136e4:	4603      	mov	r3, r0
 80136e6:	461c      	mov	r4, r3
 80136e8:	4622      	mov	r2, r4
 80136ea:	2300      	movs	r3, #0
 80136ec:	6013      	str	r3, [r2, #0]
 80136ee:	6053      	str	r3, [r2, #4]
 80136f0:	6093      	str	r3, [r2, #8]
 80136f2:	60d3      	str	r3, [r2, #12]
 80136f4:	6113      	str	r3, [r2, #16]
 80136f6:	6153      	str	r3, [r2, #20]
 80136f8:	6193      	str	r3, [r2, #24]
 80136fa:	4620      	mov	r0, r4
 80136fc:	f7ff ffdc 	bl	80136b8 <_ZN11Method_callC1Ev>
 8013700:	65fc      	str	r4, [r7, #92]	; 0x5c
	m->vector_id = std::string(id);
 8013702:	f107 030c 	add.w	r3, r7, #12
 8013706:	6839      	ldr	r1, [r7, #0]
 8013708:	4618      	mov	r0, r3
 801370a:	f00f fda5 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801370e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8013710:	f107 020c 	add.w	r2, r7, #12
 8013714:	4611      	mov	r1, r2
 8013716:	4618      	mov	r0, r3
 8013718:	f00f fc79 	bl	802300e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 801371c:	f107 030c 	add.w	r3, r7, #12
 8013720:	4618      	mov	r0, r3
 8013722:	f00f fc68 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	get_next_token();
 8013726:	6878      	ldr	r0, [r7, #4]
 8013728:	f000 f9f9 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_IDENTIFIER, "method identifier");
 801372c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013730:	4618      	mov	r0, r3
 8013732:	f00f fa9a 	bl	8022c6a <_ZNSaIcEC1Ev>
 8013736:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 801373a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801373e:	4926      	ldr	r1, [pc, #152]	; (80137d8 <_ZN6Parser17parse_method_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x104>)
 8013740:	4618      	mov	r0, r3
 8013742:	f7ed fe22 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013746:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801374a:	461a      	mov	r2, r3
 801374c:	2102      	movs	r1, #2
 801374e:	6878      	ldr	r0, [r7, #4]
 8013750:	f7ff fecc 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013754:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013758:	4618      	mov	r0, r3
 801375a:	f00f fc4c 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801375e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013762:	4618      	mov	r0, r3
 8013764:	f00f fa82 	bl	8022c6c <_ZNSaIcED1Ev>
	id = std::get<std::string>(token_buffer.value);
 8013768:	687b      	ldr	r3, [r7, #4]
 801376a:	3304      	adds	r3, #4
 801376c:	4618      	mov	r0, r3
 801376e:	f000 fb97 	bl	8013ea0 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8013772:	4603      	mov	r3, r0
 8013774:	4619      	mov	r1, r3
 8013776:	6838      	ldr	r0, [r7, #0]
 8013778:	f00f fc43 	bl	8023002 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	get_next_token();
 801377c:	6878      	ldr	r0, [r7, #4]
 801377e:	f000 f9ce 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_LEFT_BRACKET, "opening bracket");
 8013782:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8013786:	4618      	mov	r0, r3
 8013788:	f00f fa6f 	bl	8022c6a <_ZNSaIcEC1Ev>
 801378c:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8013790:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013794:	4911      	ldr	r1, [pc, #68]	; (80137dc <_ZN6Parser17parse_method_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x108>)
 8013796:	4618      	mov	r0, r3
 8013798:	f7ed fdf7 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801379c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80137a0:	461a      	mov	r2, r3
 80137a2:	2126      	movs	r1, #38	; 0x26
 80137a4:	6878      	ldr	r0, [r7, #4]
 80137a6:	f7ff fea1 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80137aa:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80137ae:	4618      	mov	r0, r3
 80137b0:	f00f fc21 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80137b4:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80137b8:	4618      	mov	r0, r3
 80137ba:	f00f fa57 	bl	8022c6c <_ZNSaIcED1Ev>
	m->call = parse_function_call(id);
 80137be:	6839      	ldr	r1, [r7, #0]
 80137c0:	6878      	ldr	r0, [r7, #4]
 80137c2:	f7ff ff17 	bl	80135f4 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80137c6:	4602      	mov	r2, r0
 80137c8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80137ca:	619a      	str	r2, [r3, #24]
	return m;
 80137cc:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
}
 80137ce:	4618      	mov	r0, r3
 80137d0:	3764      	adds	r7, #100	; 0x64
 80137d2:	46bd      	mov	sp, r7
 80137d4:	bd90      	pop	{r4, r7, pc}
 80137d6:	bf00      	nop
 80137d8:	080276cc 	.word	0x080276cc
 80137dc:	080276e0 	.word	0x080276e0

080137e0 <_ZN6Parser26parse_identifier_statementEP9Statement>:

void Parser::parse_identifier_statement(Statement *s)
{
 80137e0:	b580      	push	{r7, lr}
 80137e2:	b08c      	sub	sp, #48	; 0x30
 80137e4:	af00      	add	r7, sp, #0
 80137e6:	6078      	str	r0, [r7, #4]
 80137e8:	6039      	str	r1, [r7, #0]
	std::string id = std::get<std::string>(token_buffer.value);
 80137ea:	687b      	ldr	r3, [r7, #4]
 80137ec:	3304      	adds	r3, #4
 80137ee:	4618      	mov	r0, r3
 80137f0:	f000 fb56 	bl	8013ea0 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 80137f4:	4602      	mov	r2, r0
 80137f6:	f107 030c 	add.w	r3, r7, #12
 80137fa:	4611      	mov	r1, r2
 80137fc:	4618      	mov	r0, r3
 80137fe:	f00f fd2b 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 8013802:	6878      	ldr	r0, [r7, #4]
 8013804:	f000 f98b 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	if (token_buffer.type == TOKEN_LEFT_BRACKET)
 8013808:	687b      	ldr	r3, [r7, #4]
 801380a:	781b      	ldrb	r3, [r3, #0]
 801380c:	2b26      	cmp	r3, #38	; 0x26
 801380e:	d113      	bne.n	8013838 <_ZN6Parser26parse_identifier_statementEP9Statement+0x58>
	{
		s->type = STATEMENT_FUNCTION_CALL;
 8013810:	683b      	ldr	r3, [r7, #0]
 8013812:	2201      	movs	r2, #1
 8013814:	701a      	strb	r2, [r3, #0]
		s->content = parse_function_call(id);
 8013816:	f107 030c 	add.w	r3, r7, #12
 801381a:	4619      	mov	r1, r3
 801381c:	6878      	ldr	r0, [r7, #4]
 801381e:	f7ff fee9 	bl	80135f4 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013822:	4603      	mov	r3, r0
 8013824:	627b      	str	r3, [r7, #36]	; 0x24
 8013826:	683b      	ldr	r3, [r7, #0]
 8013828:	3304      	adds	r3, #4
 801382a:	f107 0224 	add.w	r2, r7, #36	; 0x24
 801382e:	4611      	mov	r1, r2
 8013830:	4618      	mov	r0, r3
 8013832:	f000 fb67 	bl	8013f04 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8013836:	e02a      	b.n	801388e <_ZN6Parser26parse_identifier_statementEP9Statement+0xae>
	}
	else if(token_buffer.type == TOKEN_DOT)
 8013838:	687b      	ldr	r3, [r7, #4]
 801383a:	781b      	ldrb	r3, [r3, #0]
 801383c:	2b0b      	cmp	r3, #11
 801383e:	d113      	bne.n	8013868 <_ZN6Parser26parse_identifier_statementEP9Statement+0x88>
	{
		s->type = STATEMENT_METHOD_CALL;
 8013840:	683b      	ldr	r3, [r7, #0]
 8013842:	2202      	movs	r2, #2
 8013844:	701a      	strb	r2, [r3, #0]
		s->content = parse_method_call(id);
 8013846:	f107 030c 	add.w	r3, r7, #12
 801384a:	4619      	mov	r1, r3
 801384c:	6878      	ldr	r0, [r7, #4]
 801384e:	f7ff ff41 	bl	80136d4 <_ZN6Parser17parse_method_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013852:	4603      	mov	r3, r0
 8013854:	62bb      	str	r3, [r7, #40]	; 0x28
 8013856:	683b      	ldr	r3, [r7, #0]
 8013858:	3304      	adds	r3, #4
 801385a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 801385e:	4611      	mov	r1, r2
 8013860:	4618      	mov	r0, r3
 8013862:	f000 fb79 	bl	8013f58 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8013866:	e012      	b.n	801388e <_ZN6Parser26parse_identifier_statementEP9Statement+0xae>
	}
	else
	{
		s->type = STATEMENT_ASSIGNMENT;
 8013868:	683b      	ldr	r3, [r7, #0]
 801386a:	2200      	movs	r2, #0
 801386c:	701a      	strb	r2, [r3, #0]
		s->content = parse_assignment(id);
 801386e:	f107 030c 	add.w	r3, r7, #12
 8013872:	4619      	mov	r1, r3
 8013874:	6878      	ldr	r0, [r7, #4]
 8013876:	f7ff fdf5 	bl	8013464 <_ZN6Parser16parse_assignmentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801387a:	4603      	mov	r3, r0
 801387c:	62fb      	str	r3, [r7, #44]	; 0x2c
 801387e:	683b      	ldr	r3, [r7, #0]
 8013880:	3304      	adds	r3, #4
 8013882:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8013886:	4611      	mov	r1, r2
 8013888:	4618      	mov	r0, r3
 801388a:	f000 fb8f 	bl	8013fac <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
	std::string id = std::get<std::string>(token_buffer.value);
 801388e:	f107 030c 	add.w	r3, r7, #12
 8013892:	4618      	mov	r0, r3
 8013894:	f00f fbaf 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8013898:	bf00      	nop
 801389a:	3730      	adds	r7, #48	; 0x30
 801389c:	46bd      	mov	sp, r7
 801389e:	bd80      	pop	{r7, pc}

080138a0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>:
      variant() = default;
 80138a0:	b580      	push	{r7, lr}
 80138a2:	b082      	sub	sp, #8
 80138a4:	af00      	add	r7, sp, #0
 80138a6:	6078      	str	r0, [r7, #4]
 80138a8:	687b      	ldr	r3, [r7, #4]
 80138aa:	4618      	mov	r0, r3
 80138ac:	f000 fbf3 	bl	8014096 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>
 80138b0:	687b      	ldr	r3, [r7, #4]
 80138b2:	4618      	mov	r0, r3
 80138b4:	3708      	adds	r7, #8
 80138b6:	46bd      	mov	sp, r7
 80138b8:	bd80      	pop	{r7, pc}

080138ba <_ZN9StatementC1Ev>:
	STATEMENT_IF
}statement_type;

typedef std::variant<Assignment*, Function_call*, Method_call*, While_statement*, If_statement*> statement_content;

class Statement
 80138ba:	b580      	push	{r7, lr}
 80138bc:	b082      	sub	sp, #8
 80138be:	af00      	add	r7, sp, #0
 80138c0:	6078      	str	r0, [r7, #4]
 80138c2:	687b      	ldr	r3, [r7, #4]
 80138c4:	3304      	adds	r3, #4
 80138c6:	4618      	mov	r0, r3
 80138c8:	f7ff ffea 	bl	80138a0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>
 80138cc:	687b      	ldr	r3, [r7, #4]
 80138ce:	4618      	mov	r0, r3
 80138d0:	3708      	adds	r7, #8
 80138d2:	46bd      	mov	sp, r7
 80138d4:	bd80      	pop	{r7, pc}
	...

080138d8 <_ZN6Parser15parse_statementEv>:

Statement* Parser::parse_statement() //todo refactor
{
 80138d8:	b590      	push	{r4, r7, lr}
 80138da:	b08d      	sub	sp, #52	; 0x34
 80138dc:	af00      	add	r7, sp, #0
 80138de:	6078      	str	r0, [r7, #4]
	auto s = new Statement();
 80138e0:	200c      	movs	r0, #12
 80138e2:	f00f f9b1 	bl	8022c48 <_Znwj>
 80138e6:	4603      	mov	r3, r0
 80138e8:	461c      	mov	r4, r3
 80138ea:	2300      	movs	r3, #0
 80138ec:	7023      	strb	r3, [r4, #0]
 80138ee:	2300      	movs	r3, #0
 80138f0:	6063      	str	r3, [r4, #4]
 80138f2:	2300      	movs	r3, #0
 80138f4:	7223      	strb	r3, [r4, #8]
 80138f6:	4620      	mov	r0, r4
 80138f8:	f7ff ffdf 	bl	80138ba <_ZN9StatementC1Ev>
 80138fc:	62fc      	str	r4, [r7, #44]	; 0x2c
	switch (token_buffer.type)
 80138fe:	687b      	ldr	r3, [r7, #4]
 8013900:	781b      	ldrb	r3, [r3, #0]
 8013902:	2b13      	cmp	r3, #19
 8013904:	d00b      	beq.n	801391e <_ZN6Parser15parse_statementEv+0x46>
 8013906:	2b13      	cmp	r3, #19
 8013908:	dc31      	bgt.n	801396e <_ZN6Parser15parse_statementEv+0x96>
 801390a:	2b02      	cmp	r3, #2
 801390c:	d002      	beq.n	8013914 <_ZN6Parser15parse_statementEv+0x3c>
 801390e:	2b10      	cmp	r3, #16
 8013910:	d019      	beq.n	8013946 <_ZN6Parser15parse_statementEv+0x6e>
 8013912:	e02c      	b.n	801396e <_ZN6Parser15parse_statementEv+0x96>
	{
	case TOKEN_IDENTIFIER:
		parse_identifier_statement(s);
 8013914:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8013916:	6878      	ldr	r0, [r7, #4]
 8013918:	f7ff ff62 	bl	80137e0 <_ZN6Parser26parse_identifier_statementEP9Statement>
		break;
 801391c:	e044      	b.n	80139a8 <_ZN6Parser15parse_statementEv+0xd0>
	case TOKEN_WHILE:
		s->type = STATEMENT_WHILE;
 801391e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013920:	2203      	movs	r2, #3
 8013922:	701a      	strb	r2, [r3, #0]
		get_next_token();
 8013924:	6878      	ldr	r0, [r7, #4]
 8013926:	f000 f8fa 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		s->content = parse_while();
 801392a:	6878      	ldr	r0, [r7, #4]
 801392c:	f7ff faba 	bl	8012ea4 <_ZN6Parser11parse_whileEv>
 8013930:	4603      	mov	r3, r0
 8013932:	60bb      	str	r3, [r7, #8]
 8013934:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013936:	3304      	adds	r3, #4
 8013938:	f107 0208 	add.w	r2, r7, #8
 801393c:	4611      	mov	r1, r2
 801393e:	4618      	mov	r0, r3
 8013940:	f000 fbb6 	bl	80140b0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8013944:	e030      	b.n	80139a8 <_ZN6Parser15parse_statementEv+0xd0>
	case TOKEN_IF:
		s->type = STATEMENT_IF;
 8013946:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013948:	2204      	movs	r2, #4
 801394a:	701a      	strb	r2, [r3, #0]
		get_next_token();
 801394c:	6878      	ldr	r0, [r7, #4]
 801394e:	f000 f8e6 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		s->content = parse_if();
 8013952:	6878      	ldr	r0, [r7, #4]
 8013954:	f7ff fc1e 	bl	8013194 <_ZN6Parser8parse_ifEv>
 8013958:	4603      	mov	r3, r0
 801395a:	60fb      	str	r3, [r7, #12]
 801395c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801395e:	3304      	adds	r3, #4
 8013960:	f107 020c 	add.w	r2, r7, #12
 8013964:	4611      	mov	r1, r2
 8013966:	4618      	mov	r0, r3
 8013968:	f000 fbcc 	bl	8014104 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 801396c:	e01c      	b.n	80139a8 <_ZN6Parser15parse_statementEv+0xd0>
	default:
		Transmitter::report_error("expected statement:\nidentifier, if, while\n");
 801396e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013972:	4618      	mov	r0, r3
 8013974:	f00f f979 	bl	8022c6a <_ZNSaIcEC1Ev>
 8013978:	f107 0228 	add.w	r2, r7, #40	; 0x28
 801397c:	f107 0310 	add.w	r3, r7, #16
 8013980:	490c      	ldr	r1, [pc, #48]	; (80139b4 <_ZN6Parser15parse_statementEv+0xdc>)
 8013982:	4618      	mov	r0, r3
 8013984:	f7ed fd01 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013988:	f107 0310 	add.w	r3, r7, #16
 801398c:	4618      	mov	r0, r3
 801398e:	f005 fa5d 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013992:	f107 0310 	add.w	r3, r7, #16
 8013996:	4618      	mov	r0, r3
 8013998:	f00f fb2d 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801399c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80139a0:	4618      	mov	r0, r3
 80139a2:	f00f f963 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 80139a6:	bf00      	nop
	}
	return s;
 80139a8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 80139aa:	4618      	mov	r0, r3
 80139ac:	3734      	adds	r7, #52	; 0x34
 80139ae:	46bd      	mov	sp, r7
 80139b0:	bd90      	pop	{r4, r7, pc}
 80139b2:	bf00      	nop
 80139b4:	080276f0 	.word	0x080276f0

080139b8 <_ZN6Parser24is_token_statement_firstEv>:

bool Parser::is_token_statement_first()
{
 80139b8:	b480      	push	{r7}
 80139ba:	b083      	sub	sp, #12
 80139bc:	af00      	add	r7, sp, #0
 80139be:	6078      	str	r0, [r7, #4]
	return token_buffer.type == TOKEN_IDENTIFIER
 80139c0:	687b      	ldr	r3, [r7, #4]
 80139c2:	781b      	ldrb	r3, [r3, #0]
			|| token_buffer.type == TOKEN_WHILE
			|| token_buffer.type == TOKEN_IF;
 80139c4:	2b02      	cmp	r3, #2
 80139c6:	d007      	beq.n	80139d8 <_ZN6Parser24is_token_statement_firstEv+0x20>
			|| token_buffer.type == TOKEN_WHILE
 80139c8:	687b      	ldr	r3, [r7, #4]
 80139ca:	781b      	ldrb	r3, [r3, #0]
 80139cc:	2b13      	cmp	r3, #19
 80139ce:	d003      	beq.n	80139d8 <_ZN6Parser24is_token_statement_firstEv+0x20>
			|| token_buffer.type == TOKEN_IF;
 80139d0:	687b      	ldr	r3, [r7, #4]
 80139d2:	781b      	ldrb	r3, [r3, #0]
 80139d4:	2b10      	cmp	r3, #16
 80139d6:	d101      	bne.n	80139dc <_ZN6Parser24is_token_statement_firstEv+0x24>
 80139d8:	2301      	movs	r3, #1
 80139da:	e000      	b.n	80139de <_ZN6Parser24is_token_statement_firstEv+0x26>
 80139dc:	2300      	movs	r3, #0
}
 80139de:	4618      	mov	r0, r3
 80139e0:	370c      	adds	r7, #12
 80139e2:	46bd      	mov	sp, r7
 80139e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80139e8:	4770      	bx	lr

080139ea <_ZN6Parser13skip_newlinesEv>:

void Parser::skip_newlines()
{
 80139ea:	b580      	push	{r7, lr}
 80139ec:	b082      	sub	sp, #8
 80139ee:	af00      	add	r7, sp, #0
 80139f0:	6078      	str	r0, [r7, #4]
	while (token_buffer.type == TOKEN_NEWLINE)
 80139f2:	687b      	ldr	r3, [r7, #4]
 80139f4:	781b      	ldrb	r3, [r3, #0]
 80139f6:	2b0a      	cmp	r3, #10
 80139f8:	d103      	bne.n	8013a02 <_ZN6Parser13skip_newlinesEv+0x18>
	{
		get_next_token();
 80139fa:	6878      	ldr	r0, [r7, #4]
 80139fc:	f000 f88f 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	while (token_buffer.type == TOKEN_NEWLINE)
 8013a00:	e7f7      	b.n	80139f2 <_ZN6Parser13skip_newlinesEv+0x8>
	}
}
 8013a02:	bf00      	nop
 8013a04:	3708      	adds	r7, #8
 8013a06:	46bd      	mov	sp, r7
 8013a08:	bd80      	pop	{r7, pc}

08013a0a <_ZNSt12_Vector_baseIP9StatementSaIS1_EEC1Ev>:
      _Vector_base() = default;
 8013a0a:	b580      	push	{r7, lr}
 8013a0c:	b082      	sub	sp, #8
 8013a0e:	af00      	add	r7, sp, #0
 8013a10:	6078      	str	r0, [r7, #4]
 8013a12:	687b      	ldr	r3, [r7, #4]
 8013a14:	4618      	mov	r0, r3
 8013a16:	f000 fb9f 	bl	8014158 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implC1Ev>
 8013a1a:	687b      	ldr	r3, [r7, #4]
 8013a1c:	4618      	mov	r0, r3
 8013a1e:	3708      	adds	r7, #8
 8013a20:	46bd      	mov	sp, r7
 8013a22:	bd80      	pop	{r7, pc}

08013a24 <_ZNSt6vectorIP9StatementSaIS1_EEC1Ev>:
      vector() = default;
 8013a24:	b580      	push	{r7, lr}
 8013a26:	b082      	sub	sp, #8
 8013a28:	af00      	add	r7, sp, #0
 8013a2a:	6078      	str	r0, [r7, #4]
 8013a2c:	687b      	ldr	r3, [r7, #4]
 8013a2e:	4618      	mov	r0, r3
 8013a30:	f7ff ffeb 	bl	8013a0a <_ZNSt12_Vector_baseIP9StatementSaIS1_EEC1Ev>
 8013a34:	687b      	ldr	r3, [r7, #4]
 8013a36:	4618      	mov	r0, r3
 8013a38:	3708      	adds	r7, #8
 8013a3a:	46bd      	mov	sp, r7
 8013a3c:	bd80      	pop	{r7, pc}

08013a3e <_ZN4BodyC1Ev>:
class Body
 8013a3e:	b580      	push	{r7, lr}
 8013a40:	b082      	sub	sp, #8
 8013a42:	af00      	add	r7, sp, #0
 8013a44:	6078      	str	r0, [r7, #4]
 8013a46:	687b      	ldr	r3, [r7, #4]
 8013a48:	4618      	mov	r0, r3
 8013a4a:	f7ff ffeb 	bl	8013a24 <_ZNSt6vectorIP9StatementSaIS1_EEC1Ev>
 8013a4e:	687b      	ldr	r3, [r7, #4]
 8013a50:	4618      	mov	r0, r3
 8013a52:	3708      	adds	r7, #8
 8013a54:	46bd      	mov	sp, r7
 8013a56:	bd80      	pop	{r7, pc}

08013a58 <_ZN6Parser10parse_bodyEv>:

Body* Parser::parse_body()
{
 8013a58:	b590      	push	{r4, r7, lr}
 8013a5a:	b085      	sub	sp, #20
 8013a5c:	af00      	add	r7, sp, #0
 8013a5e:	6078      	str	r0, [r7, #4]
	auto bod = new Body();
 8013a60:	200c      	movs	r0, #12
 8013a62:	f00f f8f1 	bl	8022c48 <_Znwj>
 8013a66:	4603      	mov	r3, r0
 8013a68:	461c      	mov	r4, r3
 8013a6a:	4622      	mov	r2, r4
 8013a6c:	2300      	movs	r3, #0
 8013a6e:	6013      	str	r3, [r2, #0]
 8013a70:	6053      	str	r3, [r2, #4]
 8013a72:	6093      	str	r3, [r2, #8]
 8013a74:	4620      	mov	r0, r4
 8013a76:	f7ff ffe2 	bl	8013a3e <_ZN4BodyC1Ev>
 8013a7a:	60fc      	str	r4, [r7, #12]
	while (is_token_statement_first())
 8013a7c:	6878      	ldr	r0, [r7, #4]
 8013a7e:	f7ff ff9b 	bl	80139b8 <_ZN6Parser24is_token_statement_firstEv>
 8013a82:	4603      	mov	r3, r0
 8013a84:	2b00      	cmp	r3, #0
 8013a86:	d00f      	beq.n	8013aa8 <_ZN6Parser10parse_bodyEv+0x50>
	{
		bod->statements.push_back(parse_statement());
 8013a88:	68fc      	ldr	r4, [r7, #12]
 8013a8a:	6878      	ldr	r0, [r7, #4]
 8013a8c:	f7ff ff24 	bl	80138d8 <_ZN6Parser15parse_statementEv>
 8013a90:	4603      	mov	r3, r0
 8013a92:	60bb      	str	r3, [r7, #8]
 8013a94:	f107 0308 	add.w	r3, r7, #8
 8013a98:	4619      	mov	r1, r3
 8013a9a:	4620      	mov	r0, r4
 8013a9c:	f000 fb6c 	bl	8014178 <_ZNSt6vectorIP9StatementSaIS1_EE9push_backEOS1_>
		skip_newlines();
 8013aa0:	6878      	ldr	r0, [r7, #4]
 8013aa2:	f7ff ffa2 	bl	80139ea <_ZN6Parser13skip_newlinesEv>
	while (is_token_statement_first())
 8013aa6:	e7e9      	b.n	8013a7c <_ZN6Parser10parse_bodyEv+0x24>
	}
	return bod;
 8013aa8:	68fb      	ldr	r3, [r7, #12]
}
 8013aaa:	4618      	mov	r0, r3
 8013aac:	3714      	adds	r7, #20
 8013aae:	46bd      	mov	sp, r7
 8013ab0:	bd90      	pop	{r4, r7, pc}

08013ab2 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8013ab2:	b580      	push	{r7, lr}
 8013ab4:	b082      	sub	sp, #8
 8013ab6:	af00      	add	r7, sp, #0
 8013ab8:	6078      	str	r0, [r7, #4]
 8013aba:	6039      	str	r1, [r7, #0]
 8013abc:	687b      	ldr	r3, [r7, #4]
 8013abe:	683a      	ldr	r2, [r7, #0]
 8013ac0:	4611      	mov	r1, r2
 8013ac2:	4618      	mov	r0, r3
 8013ac4:	f000 fd0c 	bl	80144e0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>
 8013ac8:	687b      	ldr	r3, [r7, #4]
 8013aca:	4618      	mov	r0, r3
 8013acc:	3708      	adds	r7, #8
 8013ace:	46bd      	mov	sp, r7
 8013ad0:	bd80      	pop	{r7, pc}

08013ad2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS6_>:
    class variant
 8013ad2:	b580      	push	{r7, lr}
 8013ad4:	b082      	sub	sp, #8
 8013ad6:	af00      	add	r7, sp, #0
 8013ad8:	6078      	str	r0, [r7, #4]
 8013ada:	6039      	str	r1, [r7, #0]
 8013adc:	687b      	ldr	r3, [r7, #4]
 8013ade:	683a      	ldr	r2, [r7, #0]
 8013ae0:	4611      	mov	r1, r2
 8013ae2:	4618      	mov	r0, r3
 8013ae4:	f7ff ffe5 	bl	8013ab2 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>
 8013ae8:	687b      	ldr	r3, [r7, #4]
 8013aea:	4618      	mov	r0, r3
 8013aec:	3708      	adds	r7, #8
 8013aee:	46bd      	mov	sp, r7
 8013af0:	bd80      	pop	{r7, pc}

08013af2 <_ZN5TokenaSEOS_>:
 8013af2:	b580      	push	{r7, lr}
 8013af4:	b082      	sub	sp, #8
 8013af6:	af00      	add	r7, sp, #0
 8013af8:	6078      	str	r0, [r7, #4]
 8013afa:	6039      	str	r1, [r7, #0]
 8013afc:	683b      	ldr	r3, [r7, #0]
 8013afe:	781a      	ldrb	r2, [r3, #0]
 8013b00:	687b      	ldr	r3, [r7, #4]
 8013b02:	701a      	strb	r2, [r3, #0]
 8013b04:	683b      	ldr	r3, [r7, #0]
 8013b06:	1d1a      	adds	r2, r3, #4
 8013b08:	687b      	ldr	r3, [r7, #4]
 8013b0a:	3304      	adds	r3, #4
 8013b0c:	4611      	mov	r1, r2
 8013b0e:	4618      	mov	r0, r3
 8013b10:	f7ff ffdf 	bl	8013ad2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS6_>
 8013b14:	687b      	ldr	r3, [r7, #4]
 8013b16:	4618      	mov	r0, r3
 8013b18:	3708      	adds	r7, #8
 8013b1a:	46bd      	mov	sp, r7
 8013b1c:	bd80      	pop	{r7, pc}

08013b1e <_ZN6Parser14get_next_tokenEv>:

void Parser::get_next_token()
{
 8013b1e:	b580      	push	{r7, lr}
 8013b20:	b090      	sub	sp, #64	; 0x40
 8013b22:	af00      	add	r7, sp, #0
 8013b24:	6078      	str	r0, [r7, #4]
	token_buffer = Lexer::build_token();
 8013b26:	f107 0308 	add.w	r3, r7, #8
 8013b2a:	4618      	mov	r0, r3
 8013b2c:	f7fc ff8e 	bl	8010a4c <_ZN5Lexer11build_tokenEv>
 8013b30:	687b      	ldr	r3, [r7, #4]
 8013b32:	f107 0208 	add.w	r2, r7, #8
 8013b36:	4611      	mov	r1, r2
 8013b38:	4618      	mov	r0, r3
 8013b3a:	f7ff ffda 	bl	8013af2 <_ZN5TokenaSEOS_>
 8013b3e:	f107 0308 	add.w	r3, r7, #8
 8013b42:	4618      	mov	r0, r3
 8013b44:	f7fc fbdd 	bl	8010302 <_ZN5TokenD1Ev>
	if (token_buffer.type == TOKEN_ERROR)
 8013b48:	687b      	ldr	r3, [r7, #4]
 8013b4a:	781b      	ldrb	r3, [r3, #0]
 8013b4c:	2b00      	cmp	r3, #0
 8013b4e:	d115      	bne.n	8013b7c <_ZN6Parser14get_next_tokenEv+0x5e>
	{
		Transmitter::report_error(std::get<std::string>(token_buffer.value));
 8013b50:	687b      	ldr	r3, [r7, #4]
 8013b52:	3304      	adds	r3, #4
 8013b54:	4618      	mov	r0, r3
 8013b56:	f000 f9a3 	bl	8013ea0 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8013b5a:	4602      	mov	r2, r0
 8013b5c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013b60:	4611      	mov	r1, r2
 8013b62:	4618      	mov	r0, r3
 8013b64:	f00f fb78 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8013b68:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013b6c:	4618      	mov	r0, r3
 8013b6e:	f005 f96d 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013b72:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013b76:	4618      	mov	r0, r3
 8013b78:	f00f fa3d 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8013b7c:	bf00      	nop
 8013b7e:	3740      	adds	r7, #64	; 0x40
 8013b80:	46bd      	mov	sp, r7
 8013b82:	bd80      	pop	{r7, pc}

08013b84 <_ZN6Parser11parse_setupEP7Program>:

void Parser::parse_setup(Program *Prog)
{
 8013b84:	b580      	push	{r7, lr}
 8013b86:	b090      	sub	sp, #64	; 0x40
 8013b88:	af00      	add	r7, sp, #0
 8013b8a:	6078      	str	r0, [r7, #4]
 8013b8c:	6039      	str	r1, [r7, #0]
	get_next_token();
 8013b8e:	6878      	ldr	r0, [r7, #4]
 8013b90:	f7ff ffc5 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_SETUP, "\"setup\" keyword");
 8013b94:	f107 0320 	add.w	r3, r7, #32
 8013b98:	4618      	mov	r0, r3
 8013b9a:	f00f f866 	bl	8022c6a <_ZNSaIcEC1Ev>
 8013b9e:	f107 0220 	add.w	r2, r7, #32
 8013ba2:	f107 0308 	add.w	r3, r7, #8
 8013ba6:	4923      	ldr	r1, [pc, #140]	; (8013c34 <_ZN6Parser11parse_setupEP7Program+0xb0>)
 8013ba8:	4618      	mov	r0, r3
 8013baa:	f7ed fbee 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013bae:	f107 0308 	add.w	r3, r7, #8
 8013bb2:	461a      	mov	r2, r3
 8013bb4:	2107      	movs	r1, #7
 8013bb6:	6878      	ldr	r0, [r7, #4]
 8013bb8:	f7ff fc98 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013bbc:	f107 0308 	add.w	r3, r7, #8
 8013bc0:	4618      	mov	r0, r3
 8013bc2:	f00f fa18 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013bc6:	f107 0320 	add.w	r3, r7, #32
 8013bca:	4618      	mov	r0, r3
 8013bcc:	f00f f84e 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 8013bd0:	6878      	ldr	r0, [r7, #4]
 8013bd2:	f7ff ffa4 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after setup");
 8013bd6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013bda:	4618      	mov	r0, r3
 8013bdc:	f00f f845 	bl	8022c6a <_ZNSaIcEC1Ev>
 8013be0:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8013be4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013be8:	4913      	ldr	r1, [pc, #76]	; (8013c38 <_ZN6Parser11parse_setupEP7Program+0xb4>)
 8013bea:	4618      	mov	r0, r3
 8013bec:	f7ed fbcd 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013bf0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013bf4:	461a      	mov	r2, r3
 8013bf6:	210a      	movs	r1, #10
 8013bf8:	6878      	ldr	r0, [r7, #4]
 8013bfa:	f7ff fc77 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013bfe:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013c02:	4618      	mov	r0, r3
 8013c04:	f00f f9f7 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013c08:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013c0c:	4618      	mov	r0, r3
 8013c0e:	f00f f82d 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 8013c12:	6878      	ldr	r0, [r7, #4]
 8013c14:	f7ff ff83 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 8013c18:	6878      	ldr	r0, [r7, #4]
 8013c1a:	f7ff fee6 	bl	80139ea <_ZN6Parser13skip_newlinesEv>
	Prog->setup = parse_body();
 8013c1e:	6878      	ldr	r0, [r7, #4]
 8013c20:	f7ff ff1a 	bl	8013a58 <_ZN6Parser10parse_bodyEv>
 8013c24:	4602      	mov	r2, r0
 8013c26:	683b      	ldr	r3, [r7, #0]
 8013c28:	601a      	str	r2, [r3, #0]
}
 8013c2a:	bf00      	nop
 8013c2c:	3740      	adds	r7, #64	; 0x40
 8013c2e:	46bd      	mov	sp, r7
 8013c30:	bd80      	pop	{r7, pc}
 8013c32:	bf00      	nop
 8013c34:	0802771c 	.word	0x0802771c
 8013c38:	0802772c 	.word	0x0802772c

08013c3c <_ZN6Parser10parse_loopEP7Program>:

void Parser::parse_loop(Program *Prog)
{
 8013c3c:	b580      	push	{r7, lr}
 8013c3e:	b090      	sub	sp, #64	; 0x40
 8013c40:	af00      	add	r7, sp, #0
 8013c42:	6078      	str	r0, [r7, #4]
 8013c44:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_LOOP, "\"loop\" keyword");
 8013c46:	f107 0320 	add.w	r3, r7, #32
 8013c4a:	4618      	mov	r0, r3
 8013c4c:	f00f f80d 	bl	8022c6a <_ZNSaIcEC1Ev>
 8013c50:	f107 0220 	add.w	r2, r7, #32
 8013c54:	f107 0308 	add.w	r3, r7, #8
 8013c58:	4922      	ldr	r1, [pc, #136]	; (8013ce4 <_ZN6Parser10parse_loopEP7Program+0xa8>)
 8013c5a:	4618      	mov	r0, r3
 8013c5c:	f7ed fb95 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013c60:	f107 0308 	add.w	r3, r7, #8
 8013c64:	461a      	mov	r2, r3
 8013c66:	2108      	movs	r1, #8
 8013c68:	6878      	ldr	r0, [r7, #4]
 8013c6a:	f7ff fc3f 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013c6e:	f107 0308 	add.w	r3, r7, #8
 8013c72:	4618      	mov	r0, r3
 8013c74:	f00f f9bf 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013c78:	f107 0320 	add.w	r3, r7, #32
 8013c7c:	4618      	mov	r0, r3
 8013c7e:	f00e fff5 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 8013c82:	6878      	ldr	r0, [r7, #4]
 8013c84:	f7ff ff4b 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after loop");
 8013c88:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013c8c:	4618      	mov	r0, r3
 8013c8e:	f00e ffec 	bl	8022c6a <_ZNSaIcEC1Ev>
 8013c92:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8013c96:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013c9a:	4913      	ldr	r1, [pc, #76]	; (8013ce8 <_ZN6Parser10parse_loopEP7Program+0xac>)
 8013c9c:	4618      	mov	r0, r3
 8013c9e:	f7ed fb74 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013ca2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013ca6:	461a      	mov	r2, r3
 8013ca8:	210a      	movs	r1, #10
 8013caa:	6878      	ldr	r0, [r7, #4]
 8013cac:	f7ff fc1e 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013cb0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013cb4:	4618      	mov	r0, r3
 8013cb6:	f00f f99e 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013cba:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013cbe:	4618      	mov	r0, r3
 8013cc0:	f00e ffd4 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 8013cc4:	6878      	ldr	r0, [r7, #4]
 8013cc6:	f7ff ff2a 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 8013cca:	6878      	ldr	r0, [r7, #4]
 8013ccc:	f7ff fe8d 	bl	80139ea <_ZN6Parser13skip_newlinesEv>
	Prog->loop = parse_body();
 8013cd0:	6878      	ldr	r0, [r7, #4]
 8013cd2:	f7ff fec1 	bl	8013a58 <_ZN6Parser10parse_bodyEv>
 8013cd6:	4602      	mov	r2, r0
 8013cd8:	683b      	ldr	r3, [r7, #0]
 8013cda:	605a      	str	r2, [r3, #4]
}
 8013cdc:	bf00      	nop
 8013cde:	3740      	adds	r7, #64	; 0x40
 8013ce0:	46bd      	mov	sp, r7
 8013ce2:	bd80      	pop	{r7, pc}
 8013ce4:	08027744 	.word	0x08027744
 8013ce8:	08027754 	.word	0x08027754

08013cec <_ZN6Parser12parse_finishEP7Program>:

void Parser::parse_finish(Program *Prog)
{
 8013cec:	b580      	push	{r7, lr}
 8013cee:	b090      	sub	sp, #64	; 0x40
 8013cf0:	af00      	add	r7, sp, #0
 8013cf2:	6078      	str	r0, [r7, #4]
 8013cf4:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_FINISH, "\"finish\" keyword");
 8013cf6:	f107 0320 	add.w	r3, r7, #32
 8013cfa:	4618      	mov	r0, r3
 8013cfc:	f00e ffb5 	bl	8022c6a <_ZNSaIcEC1Ev>
 8013d00:	f107 0220 	add.w	r2, r7, #32
 8013d04:	f107 0308 	add.w	r3, r7, #8
 8013d08:	4922      	ldr	r1, [pc, #136]	; (8013d94 <_ZN6Parser12parse_finishEP7Program+0xa8>)
 8013d0a:	4618      	mov	r0, r3
 8013d0c:	f7ed fb3d 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013d10:	f107 0308 	add.w	r3, r7, #8
 8013d14:	461a      	mov	r2, r3
 8013d16:	2109      	movs	r1, #9
 8013d18:	6878      	ldr	r0, [r7, #4]
 8013d1a:	f7ff fbe7 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013d1e:	f107 0308 	add.w	r3, r7, #8
 8013d22:	4618      	mov	r0, r3
 8013d24:	f00f f967 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013d28:	f107 0320 	add.w	r3, r7, #32
 8013d2c:	4618      	mov	r0, r3
 8013d2e:	f00e ff9d 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 8013d32:	6878      	ldr	r0, [r7, #4]
 8013d34:	f7ff fef3 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after finish");
 8013d38:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013d3c:	4618      	mov	r0, r3
 8013d3e:	f00e ff94 	bl	8022c6a <_ZNSaIcEC1Ev>
 8013d42:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8013d46:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013d4a:	4913      	ldr	r1, [pc, #76]	; (8013d98 <_ZN6Parser12parse_finishEP7Program+0xac>)
 8013d4c:	4618      	mov	r0, r3
 8013d4e:	f7ed fb1c 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013d52:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013d56:	461a      	mov	r2, r3
 8013d58:	210a      	movs	r1, #10
 8013d5a:	6878      	ldr	r0, [r7, #4]
 8013d5c:	f7ff fbc6 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013d60:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013d64:	4618      	mov	r0, r3
 8013d66:	f00f f946 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013d6a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013d6e:	4618      	mov	r0, r3
 8013d70:	f00e ff7c 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 8013d74:	6878      	ldr	r0, [r7, #4]
 8013d76:	f7ff fed2 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 8013d7a:	6878      	ldr	r0, [r7, #4]
 8013d7c:	f7ff fe35 	bl	80139ea <_ZN6Parser13skip_newlinesEv>
	Prog->finish = parse_body();
 8013d80:	6878      	ldr	r0, [r7, #4]
 8013d82:	f7ff fe69 	bl	8013a58 <_ZN6Parser10parse_bodyEv>
 8013d86:	4602      	mov	r2, r0
 8013d88:	683b      	ldr	r3, [r7, #0]
 8013d8a:	609a      	str	r2, [r3, #8]
}
 8013d8c:	bf00      	nop
 8013d8e:	3740      	adds	r7, #64	; 0x40
 8013d90:	46bd      	mov	sp, r7
 8013d92:	bd80      	pop	{r7, pc}
 8013d94:	0802776c 	.word	0x0802776c
 8013d98:	08027780 	.word	0x08027780

08013d9c <_ZN6Parser13parse_programEv>:

Program* Parser::parse_program()
{
 8013d9c:	b580      	push	{r7, lr}
 8013d9e:	b08a      	sub	sp, #40	; 0x28
 8013da0:	af00      	add	r7, sp, #0
 8013da2:	6078      	str	r0, [r7, #4]
	auto Prog = new Program();
 8013da4:	200c      	movs	r0, #12
 8013da6:	f00e ff4f 	bl	8022c48 <_Znwj>
 8013daa:	4603      	mov	r3, r0
 8013dac:	2200      	movs	r2, #0
 8013dae:	601a      	str	r2, [r3, #0]
 8013db0:	2200      	movs	r2, #0
 8013db2:	605a      	str	r2, [r3, #4]
 8013db4:	2200      	movs	r2, #0
 8013db6:	609a      	str	r2, [r3, #8]
 8013db8:	627b      	str	r3, [r7, #36]	; 0x24
	parse_setup(Prog);
 8013dba:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8013dbc:	6878      	ldr	r0, [r7, #4]
 8013dbe:	f7ff fee1 	bl	8013b84 <_ZN6Parser11parse_setupEP7Program>
	parse_loop(Prog);
 8013dc2:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8013dc4:	6878      	ldr	r0, [r7, #4]
 8013dc6:	f7ff ff39 	bl	8013c3c <_ZN6Parser10parse_loopEP7Program>
	parse_finish(Prog);
 8013dca:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8013dcc:	6878      	ldr	r0, [r7, #4]
 8013dce:	f7ff ff8d 	bl	8013cec <_ZN6Parser12parse_finishEP7Program>
	assert_token(TOKEN_END_OF_FILE, "end of file");
 8013dd2:	f107 0320 	add.w	r3, r7, #32
 8013dd6:	4618      	mov	r0, r3
 8013dd8:	f00e ff47 	bl	8022c6a <_ZNSaIcEC1Ev>
 8013ddc:	f107 0220 	add.w	r2, r7, #32
 8013de0:	f107 0308 	add.w	r3, r7, #8
 8013de4:	490c      	ldr	r1, [pc, #48]	; (8013e18 <_ZN6Parser13parse_programEv+0x7c>)
 8013de6:	4618      	mov	r0, r3
 8013de8:	f7ed facf 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013dec:	f107 0308 	add.w	r3, r7, #8
 8013df0:	461a      	mov	r2, r3
 8013df2:	2125      	movs	r1, #37	; 0x25
 8013df4:	6878      	ldr	r0, [r7, #4]
 8013df6:	f7ff fb79 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013dfa:	f107 0308 	add.w	r3, r7, #8
 8013dfe:	4618      	mov	r0, r3
 8013e00:	f00f f8f9 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013e04:	f107 0320 	add.w	r3, r7, #32
 8013e08:	4618      	mov	r0, r3
 8013e0a:	f00e ff2f 	bl	8022c6c <_ZNSaIcED1Ev>
	return Prog;
 8013e0e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 8013e10:	4618      	mov	r0, r3
 8013e12:	3728      	adds	r7, #40	; 0x28
 8013e14:	46bd      	mov	sp, r7
 8013e16:	bd80      	pop	{r7, pc}
 8013e18:	08027798 	.word	0x08027798

08013e1c <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 8013e1c:	b580      	push	{r7, lr}
 8013e1e:	b082      	sub	sp, #8
 8013e20:	af00      	add	r7, sp, #0
 8013e22:	6078      	str	r0, [r7, #4]
 8013e24:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8013e26:	6838      	ldr	r0, [r7, #0]
 8013e28:	f000 fb70 	bl	801450c <_ZSt4moveIRP10ExpressionEONSt16remove_referenceIT_E4typeEOS4_>
 8013e2c:	4603      	mov	r3, r0
 8013e2e:	4619      	mov	r1, r3
 8013e30:	6878      	ldr	r0, [r7, #4]
 8013e32:	f000 fb76 	bl	8014522 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8013e36:	bf00      	nop
 8013e38:	3708      	adds	r7, #8
 8013e3a:	46bd      	mov	sp, r7
 8013e3c:	bd80      	pop	{r7, pc}

08013e3e <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 8013e3e:	b580      	push	{r7, lr}
 8013e40:	b082      	sub	sp, #8
 8013e42:	af00      	add	r7, sp, #0
 8013e44:	6078      	str	r0, [r7, #4]
 8013e46:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8013e48:	6838      	ldr	r0, [r7, #0]
 8013e4a:	f000 fb9c 	bl	8014586 <_ZSt4moveIRP4BodyEONSt16remove_referenceIT_E4typeEOS4_>
 8013e4e:	4603      	mov	r3, r0
 8013e50:	4619      	mov	r1, r3
 8013e52:	6878      	ldr	r0, [r7, #4]
 8013e54:	f000 fba2 	bl	801459c <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8013e58:	bf00      	nop
 8013e5a:	3708      	adds	r7, #8
 8013e5c:	46bd      	mov	sp, r7
 8013e5e:	bd80      	pop	{r7, pc}

08013e60 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8013e60:	b580      	push	{r7, lr}
 8013e62:	b082      	sub	sp, #8
 8013e64:	af00      	add	r7, sp, #0
 8013e66:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8013e68:	6878      	ldr	r0, [r7, #4]
 8013e6a:	f000 fbc9 	bl	8014600 <_ZNSaIP10ExpressionEC1Ev>
 8013e6e:	687b      	ldr	r3, [r7, #4]
 8013e70:	4618      	mov	r0, r3
 8013e72:	f7fb fdf6 	bl	800fa62 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 8013e76:	687b      	ldr	r3, [r7, #4]
 8013e78:	4618      	mov	r0, r3
 8013e7a:	3708      	adds	r7, #8
 8013e7c:	46bd      	mov	sp, r7
 8013e7e:	bd80      	pop	{r7, pc}

08013e80 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8013e80:	b580      	push	{r7, lr}
 8013e82:	b082      	sub	sp, #8
 8013e84:	af00      	add	r7, sp, #0
 8013e86:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8013e88:	6878      	ldr	r0, [r7, #4]
 8013e8a:	f000 fbc5 	bl	8014618 <_ZNSaIP4BodyEC1Ev>
 8013e8e:	687b      	ldr	r3, [r7, #4]
 8013e90:	4618      	mov	r0, r3
 8013e92:	f000 fbcd 	bl	8014630 <_ZNSt12_Vector_baseIP4BodySaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 8013e96:	687b      	ldr	r3, [r7, #4]
 8013e98:	4618      	mov	r0, r3
 8013e9a:	3708      	adds	r7, #8
 8013e9c:	46bd      	mov	sp, r7
 8013e9e:	bd80      	pop	{r7, pc}

08013ea0 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8013ea0:	b580      	push	{r7, lr}
 8013ea2:	b082      	sub	sp, #8
 8013ea4:	af00      	add	r7, sp, #0
 8013ea6:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8013ea8:	6878      	ldr	r0, [r7, #4]
 8013eaa:	f7fd fa91 	bl	80113d0 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8013eae:	4603      	mov	r3, r0
    }
 8013eb0:	4618      	mov	r0, r3
 8013eb2:	3708      	adds	r7, #8
 8013eb4:	46bd      	mov	sp, r7
 8013eb6:	bd80      	pop	{r7, pc}

08013eb8 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>:
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 8013eb8:	b580      	push	{r7, lr}
 8013eba:	b082      	sub	sp, #8
 8013ebc:	af00      	add	r7, sp, #0
 8013ebe:	6078      	str	r0, [r7, #4]
 8013ec0:	6039      	str	r1, [r7, #0]
    { return __lhs.compare(__rhs) == 0; }
 8013ec2:	6839      	ldr	r1, [r7, #0]
 8013ec4:	6878      	ldr	r0, [r7, #4]
 8013ec6:	f00f f98d 	bl	80231e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
 8013eca:	4603      	mov	r3, r0
 8013ecc:	2b00      	cmp	r3, #0
 8013ece:	bf0c      	ite	eq
 8013ed0:	2301      	moveq	r3, #1
 8013ed2:	2300      	movne	r3, #0
 8013ed4:	b2db      	uxtb	r3, r3
 8013ed6:	4618      	mov	r0, r3
 8013ed8:	3708      	adds	r7, #8
 8013eda:	46bd      	mov	sp, r7
 8013edc:	bd80      	pop	{r7, pc}

08013ede <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>:
      constexpr size_t index() const noexcept
 8013ede:	b480      	push	{r7}
 8013ee0:	b083      	sub	sp, #12
 8013ee2:	af00      	add	r7, sp, #0
 8013ee4:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 8013ee6:	687b      	ldr	r3, [r7, #4]
 8013ee8:	791b      	ldrb	r3, [r3, #4]
 8013eea:	2bff      	cmp	r3, #255	; 0xff
 8013eec:	d102      	bne.n	8013ef4 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv+0x16>
	  return variant_npos;
 8013eee:	f04f 33ff 	mov.w	r3, #4294967295
 8013ef2:	e001      	b.n	8013ef8 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv+0x1a>
	return this->_M_index;
 8013ef4:	687b      	ldr	r3, [r7, #4]
 8013ef6:	791b      	ldrb	r3, [r3, #4]
      }
 8013ef8:	4618      	mov	r0, r3
 8013efa:	370c      	adds	r7, #12
 8013efc:	46bd      	mov	sp, r7
 8013efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013f02:	4770      	bx	lr

08013f04 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8013f04:	b590      	push	{r4, r7, lr}
 8013f06:	b085      	sub	sp, #20
 8013f08:	af00      	add	r7, sp, #0
 8013f0a:	6078      	str	r0, [r7, #4]
 8013f0c:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8013f0e:	2301      	movs	r3, #1
 8013f10:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8013f12:	6878      	ldr	r0, [r7, #4]
 8013f14:	f7ff ffe3 	bl	8013ede <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8013f18:	4603      	mov	r3, r0
 8013f1a:	2b01      	cmp	r3, #1
 8013f1c:	bf0c      	ite	eq
 8013f1e:	2301      	moveq	r3, #1
 8013f20:	2300      	movne	r3, #0
 8013f22:	b2db      	uxtb	r3, r3
 8013f24:	2b00      	cmp	r3, #0
 8013f26:	d00a      	beq.n	8013f3e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8013f28:	6838      	ldr	r0, [r7, #0]
 8013f2a:	f000 fc03 	bl	8014734 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8013f2e:	4603      	mov	r3, r0
 8013f30:	681c      	ldr	r4, [r3, #0]
 8013f32:	6878      	ldr	r0, [r7, #4]
 8013f34:	f000 fbe2 	bl	80146fc <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8013f38:	4603      	mov	r3, r0
 8013f3a:	601c      	str	r4, [r3, #0]
 8013f3c:	e007      	b.n	8013f4e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8013f3e:	6838      	ldr	r0, [r7, #0]
 8013f40:	f000 fbf8 	bl	8014734 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8013f44:	4603      	mov	r3, r0
 8013f46:	4619      	mov	r1, r3
 8013f48:	6878      	ldr	r0, [r7, #4]
 8013f4a:	f000 fbfe 	bl	801474a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8013f4e:	687b      	ldr	r3, [r7, #4]
	}
 8013f50:	4618      	mov	r0, r3
 8013f52:	3714      	adds	r7, #20
 8013f54:	46bd      	mov	sp, r7
 8013f56:	bd90      	pop	{r4, r7, pc}

08013f58 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8013f58:	b590      	push	{r4, r7, lr}
 8013f5a:	b085      	sub	sp, #20
 8013f5c:	af00      	add	r7, sp, #0
 8013f5e:	6078      	str	r0, [r7, #4]
 8013f60:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8013f62:	2302      	movs	r3, #2
 8013f64:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8013f66:	6878      	ldr	r0, [r7, #4]
 8013f68:	f7ff ffb9 	bl	8013ede <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8013f6c:	4603      	mov	r3, r0
 8013f6e:	2b02      	cmp	r3, #2
 8013f70:	bf0c      	ite	eq
 8013f72:	2301      	moveq	r3, #1
 8013f74:	2300      	movne	r3, #0
 8013f76:	b2db      	uxtb	r3, r3
 8013f78:	2b00      	cmp	r3, #0
 8013f7a:	d00a      	beq.n	8013f92 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8013f7c:	6838      	ldr	r0, [r7, #0]
 8013f7e:	f000 fc5f 	bl	8014840 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8013f82:	4603      	mov	r3, r0
 8013f84:	681c      	ldr	r4, [r3, #0]
 8013f86:	6878      	ldr	r0, [r7, #4]
 8013f88:	f000 fc3e 	bl	8014808 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8013f8c:	4603      	mov	r3, r0
 8013f8e:	601c      	str	r4, [r3, #0]
 8013f90:	e007      	b.n	8013fa2 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8013f92:	6838      	ldr	r0, [r7, #0]
 8013f94:	f000 fc54 	bl	8014840 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8013f98:	4603      	mov	r3, r0
 8013f9a:	4619      	mov	r1, r3
 8013f9c:	6878      	ldr	r0, [r7, #4]
 8013f9e:	f000 fc5a 	bl	8014856 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj2EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8013fa2:	687b      	ldr	r3, [r7, #4]
	}
 8013fa4:	4618      	mov	r0, r3
 8013fa6:	3714      	adds	r7, #20
 8013fa8:	46bd      	mov	sp, r7
 8013faa:	bd90      	pop	{r4, r7, pc}

08013fac <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8013fac:	b590      	push	{r4, r7, lr}
 8013fae:	b085      	sub	sp, #20
 8013fb0:	af00      	add	r7, sp, #0
 8013fb2:	6078      	str	r0, [r7, #4]
 8013fb4:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8013fb6:	2300      	movs	r3, #0
 8013fb8:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8013fba:	6878      	ldr	r0, [r7, #4]
 8013fbc:	f7ff ff8f 	bl	8013ede <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8013fc0:	4603      	mov	r3, r0
 8013fc2:	2b00      	cmp	r3, #0
 8013fc4:	bf0c      	ite	eq
 8013fc6:	2301      	moveq	r3, #1
 8013fc8:	2300      	movne	r3, #0
 8013fca:	b2db      	uxtb	r3, r3
 8013fcc:	2b00      	cmp	r3, #0
 8013fce:	d00a      	beq.n	8013fe6 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8013fd0:	6838      	ldr	r0, [r7, #0]
 8013fd2:	f000 fc97 	bl	8014904 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 8013fd6:	4603      	mov	r3, r0
 8013fd8:	681c      	ldr	r4, [r3, #0]
 8013fda:	6878      	ldr	r0, [r7, #4]
 8013fdc:	f000 fc76 	bl	80148cc <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8013fe0:	4603      	mov	r3, r0
 8013fe2:	601c      	str	r4, [r3, #0]
 8013fe4:	e007      	b.n	8013ff6 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8013fe6:	6838      	ldr	r0, [r7, #0]
 8013fe8:	f000 fc8c 	bl	8014904 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 8013fec:	4603      	mov	r3, r0
 8013fee:	4619      	mov	r1, r3
 8013ff0:	6878      	ldr	r0, [r7, #4]
 8013ff2:	f000 fc92 	bl	801491a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8013ff6:	687b      	ldr	r3, [r7, #4]
	}
 8013ff8:	4618      	mov	r0, r3
 8013ffa:	3714      	adds	r7, #20
 8013ffc:	46bd      	mov	sp, r7
 8013ffe:	bd90      	pop	{r4, r7, pc}

08014000 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8014000:	b580      	push	{r7, lr}
 8014002:	b082      	sub	sp, #8
 8014004:	af00      	add	r7, sp, #0
 8014006:	6078      	str	r0, [r7, #4]
 8014008:	7039      	strb	r1, [r7, #0]
 801400a:	687b      	ldr	r3, [r7, #4]
 801400c:	4611      	mov	r1, r2
 801400e:	4618      	mov	r0, r3
 8014010:	f000 fcba 	bl	8014988 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8014014:	687b      	ldr	r3, [r7, #4]
 8014016:	4618      	mov	r0, r3
 8014018:	3708      	adds	r7, #8
 801401a:	46bd      	mov	sp, r7
 801401c:	bd80      	pop	{r7, pc}

0801401e <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801401e:	b580      	push	{r7, lr}
 8014020:	b082      	sub	sp, #8
 8014022:	af00      	add	r7, sp, #0
 8014024:	6078      	str	r0, [r7, #4]
 8014026:	7039      	strb	r1, [r7, #0]
 8014028:	687b      	ldr	r3, [r7, #4]
 801402a:	4611      	mov	r1, r2
 801402c:	4618      	mov	r0, r3
 801402e:	f7ff ffe7 	bl	8014000 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8014032:	687b      	ldr	r3, [r7, #4]
 8014034:	4618      	mov	r0, r3
 8014036:	3708      	adds	r7, #8
 8014038:	46bd      	mov	sp, r7
 801403a:	bd80      	pop	{r7, pc}

0801403c <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801403c:	b580      	push	{r7, lr}
 801403e:	b082      	sub	sp, #8
 8014040:	af00      	add	r7, sp, #0
 8014042:	6078      	str	r0, [r7, #4]
 8014044:	7039      	strb	r1, [r7, #0]
 8014046:	687b      	ldr	r3, [r7, #4]
 8014048:	4611      	mov	r1, r2
 801404a:	4618      	mov	r0, r3
 801404c:	f7ff ffe7 	bl	801401e <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8014050:	687b      	ldr	r3, [r7, #4]
 8014052:	4618      	mov	r0, r3
 8014054:	3708      	adds	r7, #8
 8014056:	46bd      	mov	sp, r7
 8014058:	bd80      	pop	{r7, pc}

0801405a <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801405a:	b580      	push	{r7, lr}
 801405c:	b082      	sub	sp, #8
 801405e:	af00      	add	r7, sp, #0
 8014060:	6078      	str	r0, [r7, #4]
 8014062:	7039      	strb	r1, [r7, #0]
 8014064:	687b      	ldr	r3, [r7, #4]
 8014066:	4611      	mov	r1, r2
 8014068:	4618      	mov	r0, r3
 801406a:	f7ff ffe7 	bl	801403c <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801406e:	687b      	ldr	r3, [r7, #4]
 8014070:	4618      	mov	r0, r3
 8014072:	3708      	adds	r7, #8
 8014074:	46bd      	mov	sp, r7
 8014076:	bd80      	pop	{r7, pc}

08014078 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8014078:	b580      	push	{r7, lr}
 801407a:	b082      	sub	sp, #8
 801407c:	af00      	add	r7, sp, #0
 801407e:	6078      	str	r0, [r7, #4]
 8014080:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 8014082:	687b      	ldr	r3, [r7, #4]
 8014084:	4611      	mov	r1, r2
 8014086:	4618      	mov	r0, r3
 8014088:	f7ff ffe7 	bl	801405a <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801408c:	687b      	ldr	r3, [r7, #4]
 801408e:	4618      	mov	r0, r3
 8014090:	3708      	adds	r7, #8
 8014092:	46bd      	mov	sp, r7
 8014094:	bd80      	pop	{r7, pc}

08014096 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>:
      _Variant_base()
 8014096:	b580      	push	{r7, lr}
 8014098:	b082      	sub	sp, #8
 801409a:	af00      	add	r7, sp, #0
 801409c:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 801409e:	4619      	mov	r1, r3
 80140a0:	6878      	ldr	r0, [r7, #4]
 80140a2:	f7ff ffe9 	bl	8014078 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80140a6:	687b      	ldr	r3, [r7, #4]
 80140a8:	4618      	mov	r0, r3
 80140aa:	3708      	adds	r7, #8
 80140ac:	46bd      	mov	sp, r7
 80140ae:	bd80      	pop	{r7, pc}

080140b0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 80140b0:	b590      	push	{r4, r7, lr}
 80140b2:	b085      	sub	sp, #20
 80140b4:	af00      	add	r7, sp, #0
 80140b6:	6078      	str	r0, [r7, #4]
 80140b8:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80140ba:	2303      	movs	r3, #3
 80140bc:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80140be:	6878      	ldr	r0, [r7, #4]
 80140c0:	f7ff ff0d 	bl	8013ede <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 80140c4:	4603      	mov	r3, r0
 80140c6:	2b03      	cmp	r3, #3
 80140c8:	bf0c      	ite	eq
 80140ca:	2301      	moveq	r3, #1
 80140cc:	2300      	movne	r3, #0
 80140ce:	b2db      	uxtb	r3, r3
 80140d0:	2b00      	cmp	r3, #0
 80140d2:	d00a      	beq.n	80140ea <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80140d4:	6838      	ldr	r0, [r7, #0]
 80140d6:	f000 fcdd 	bl	8014a94 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 80140da:	4603      	mov	r3, r0
 80140dc:	681c      	ldr	r4, [r3, #0]
 80140de:	6878      	ldr	r0, [r7, #4]
 80140e0:	f000 fcbc 	bl	8014a5c <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80140e4:	4603      	mov	r3, r0
 80140e6:	601c      	str	r4, [r3, #0]
 80140e8:	e007      	b.n	80140fa <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80140ea:	6838      	ldr	r0, [r7, #0]
 80140ec:	f000 fcd2 	bl	8014a94 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 80140f0:	4603      	mov	r3, r0
 80140f2:	4619      	mov	r1, r3
 80140f4:	6878      	ldr	r0, [r7, #4]
 80140f6:	f000 fcd8 	bl	8014aaa <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj3EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 80140fa:	687b      	ldr	r3, [r7, #4]
	}
 80140fc:	4618      	mov	r0, r3
 80140fe:	3714      	adds	r7, #20
 8014100:	46bd      	mov	sp, r7
 8014102:	bd90      	pop	{r4, r7, pc}

08014104 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8014104:	b590      	push	{r4, r7, lr}
 8014106:	b085      	sub	sp, #20
 8014108:	af00      	add	r7, sp, #0
 801410a:	6078      	str	r0, [r7, #4]
 801410c:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801410e:	2304      	movs	r3, #4
 8014110:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8014112:	6878      	ldr	r0, [r7, #4]
 8014114:	f7ff fee3 	bl	8013ede <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8014118:	4603      	mov	r3, r0
 801411a:	2b04      	cmp	r3, #4
 801411c:	bf0c      	ite	eq
 801411e:	2301      	moveq	r3, #1
 8014120:	2300      	movne	r3, #0
 8014122:	b2db      	uxtb	r3, r3
 8014124:	2b00      	cmp	r3, #0
 8014126:	d00a      	beq.n	801413e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8014128:	6838      	ldr	r0, [r7, #0]
 801412a:	f000 fd5d 	bl	8014be8 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 801412e:	4603      	mov	r3, r0
 8014130:	681c      	ldr	r4, [r3, #0]
 8014132:	6878      	ldr	r0, [r7, #4]
 8014134:	f000 fd3c 	bl	8014bb0 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014138:	4603      	mov	r3, r0
 801413a:	601c      	str	r4, [r3, #0]
 801413c:	e007      	b.n	801414e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801413e:	6838      	ldr	r0, [r7, #0]
 8014140:	f000 fd52 	bl	8014be8 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014144:	4603      	mov	r3, r0
 8014146:	4619      	mov	r1, r3
 8014148:	6878      	ldr	r0, [r7, #4]
 801414a:	f000 fd58 	bl	8014bfe <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801414e:	687b      	ldr	r3, [r7, #4]
	}
 8014150:	4618      	mov	r0, r3
 8014152:	3714      	adds	r7, #20
 8014154:	46bd      	mov	sp, r7
 8014156:	bd90      	pop	{r4, r7, pc}

08014158 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8014158:	b580      	push	{r7, lr}
 801415a:	b082      	sub	sp, #8
 801415c:	af00      	add	r7, sp, #0
 801415e:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8014160:	6878      	ldr	r0, [r7, #4]
 8014162:	f000 fd65 	bl	8014c30 <_ZNSaIP9StatementEC1Ev>
 8014166:	687b      	ldr	r3, [r7, #4]
 8014168:	4618      	mov	r0, r3
 801416a:	f000 fd6d 	bl	8014c48 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801416e:	687b      	ldr	r3, [r7, #4]
 8014170:	4618      	mov	r0, r3
 8014172:	3708      	adds	r7, #8
 8014174:	46bd      	mov	sp, r7
 8014176:	bd80      	pop	{r7, pc}

08014178 <_ZNSt6vectorIP9StatementSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 8014178:	b580      	push	{r7, lr}
 801417a:	b082      	sub	sp, #8
 801417c:	af00      	add	r7, sp, #0
 801417e:	6078      	str	r0, [r7, #4]
 8014180:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8014182:	6838      	ldr	r0, [r7, #0]
 8014184:	f000 fd92 	bl	8014cac <_ZSt4moveIRP9StatementEONSt16remove_referenceIT_E4typeEOS4_>
 8014188:	4603      	mov	r3, r0
 801418a:	4619      	mov	r1, r3
 801418c:	6878      	ldr	r0, [r7, #4]
 801418e:	f000 fd98 	bl	8014cc2 <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8014192:	bf00      	nop
 8014194:	3708      	adds	r7, #8
 8014196:	46bd      	mov	sp, r7
 8014198:	bd80      	pop	{r7, pc}

0801419a <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 801419a:	b480      	push	{r7}
 801419c:	b083      	sub	sp, #12
 801419e:	af00      	add	r7, sp, #0
 80141a0:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 80141a2:	687b      	ldr	r3, [r7, #4]
    }
 80141a4:	4618      	mov	r0, r3
 80141a6:	370c      	adds	r7, #12
 80141a8:	46bd      	mov	sp, r7
 80141aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80141ae:	4770      	bx	lr

080141b0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80141b0:	b580      	push	{r7, lr}
 80141b2:	b082      	sub	sp, #8
 80141b4:	af00      	add	r7, sp, #0
 80141b6:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80141b8:	6878      	ldr	r0, [r7, #4]
 80141ba:	f7fe f835 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80141be:	4603      	mov	r3, r0
 80141c0:	4618      	mov	r0, r3
 80141c2:	f7fd f8f4 	bl	80113ae <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80141c6:	4603      	mov	r3, r0
	}
 80141c8:	4618      	mov	r0, r3
 80141ca:	3708      	adds	r7, #8
 80141cc:	46bd      	mov	sp, r7
 80141ce:	bd80      	pop	{r7, pc}

080141d0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80141d0:	b5b0      	push	{r4, r5, r7, lr}
 80141d2:	b084      	sub	sp, #16
 80141d4:	af00      	add	r7, sp, #0
 80141d6:	6078      	str	r0, [r7, #4]
 80141d8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80141da:	6878      	ldr	r0, [r7, #4]
 80141dc:	f000 fda3 	bl	8014d26 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80141e0:	4604      	mov	r4, r0
 80141e2:	6838      	ldr	r0, [r7, #0]
 80141e4:	f7fe f820 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80141e8:	4603      	mov	r3, r0
 80141ea:	4618      	mov	r0, r3
 80141ec:	f7ff ffe0 	bl	80141b0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESK_EEDcOSF_>
 80141f0:	4601      	mov	r1, r0
 80141f2:	f107 030c 	add.w	r3, r7, #12
 80141f6:	461a      	mov	r2, r3
 80141f8:	4620      	mov	r0, r4
 80141fa:	f000 fd9f 	bl	8014d3c <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRS8_St17integral_constantIjLj0EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 80141fe:	462b      	mov	r3, r5
      }
 8014200:	4618      	mov	r0, r3
 8014202:	3710      	adds	r7, #16
 8014204:	46bd      	mov	sp, r7
 8014206:	bdb0      	pop	{r4, r5, r7, pc}

08014208 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014208:	b5b0      	push	{r4, r5, r7, lr}
 801420a:	b082      	sub	sp, #8
 801420c:	af00      	add	r7, sp, #0
 801420e:	6078      	str	r0, [r7, #4]
 8014210:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8014212:	6878      	ldr	r0, [r7, #4]
 8014214:	f000 fd87 	bl	8014d26 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014218:	4604      	mov	r4, r0
 801421a:	6838      	ldr	r0, [r7, #0]
 801421c:	f7fe f804 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014220:	4603      	mov	r3, r0
 8014222:	4619      	mov	r1, r3
 8014224:	4620      	mov	r0, r4
 8014226:	f7ff ffd3 	bl	80141d0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 801422a:	462b      	mov	r3, r5
      }
 801422c:	4618      	mov	r0, r3
 801422e:	3708      	adds	r7, #8
 8014230:	46bd      	mov	sp, r7
 8014232:	bdb0      	pop	{r4, r5, r7, pc}

08014234 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014234:	b5b0      	push	{r4, r5, r7, lr}
 8014236:	b082      	sub	sp, #8
 8014238:	af00      	add	r7, sp, #0
 801423a:	6078      	str	r0, [r7, #4]
 801423c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801423e:	6878      	ldr	r0, [r7, #4]
 8014240:	f000 fd71 	bl	8014d26 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014244:	4604      	mov	r4, r0
 8014246:	6838      	ldr	r0, [r7, #0]
 8014248:	f7fd ffee 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801424c:	4603      	mov	r3, r0
 801424e:	4619      	mov	r1, r3
 8014250:	4620      	mov	r0, r4
 8014252:	f7ff ffd9 	bl	8014208 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014256:	462b      	mov	r3, r5
      }
 8014258:	4618      	mov	r0, r3
 801425a:	3708      	adds	r7, #8
 801425c:	46bd      	mov	sp, r7
 801425e:	bdb0      	pop	{r4, r5, r7, pc}

08014260 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8014260:	b580      	push	{r7, lr}
 8014262:	b082      	sub	sp, #8
 8014264:	af00      	add	r7, sp, #0
 8014266:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8014268:	6878      	ldr	r0, [r7, #4]
 801426a:	f7fd ffdd 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801426e:	4603      	mov	r3, r0
 8014270:	4618      	mov	r0, r3
 8014272:	f7fd f905 	bl	8011480 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8014276:	4603      	mov	r3, r0
	}
 8014278:	4618      	mov	r0, r3
 801427a:	3708      	adds	r7, #8
 801427c:	46bd      	mov	sp, r7
 801427e:	bd80      	pop	{r7, pc}

08014280 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8014280:	b5b0      	push	{r4, r5, r7, lr}
 8014282:	b084      	sub	sp, #16
 8014284:	af00      	add	r7, sp, #0
 8014286:	6078      	str	r0, [r7, #4]
 8014288:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801428a:	6878      	ldr	r0, [r7, #4]
 801428c:	f000 fd4b 	bl	8014d26 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014290:	4604      	mov	r4, r0
 8014292:	6838      	ldr	r0, [r7, #0]
 8014294:	f7fd ffc8 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014298:	4603      	mov	r3, r0
 801429a:	4618      	mov	r0, r3
 801429c:	f7ff ffe0 	bl	8014260 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESK_EEDcOSF_>
 80142a0:	4601      	mov	r1, r0
 80142a2:	f107 030c 	add.w	r3, r7, #12
 80142a6:	461a      	mov	r2, r3
 80142a8:	4620      	mov	r0, r4
 80142aa:	f000 fd65 	bl	8014d78 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 80142ae:	462b      	mov	r3, r5
      }
 80142b0:	4618      	mov	r0, r3
 80142b2:	3710      	adds	r7, #16
 80142b4:	46bd      	mov	sp, r7
 80142b6:	bdb0      	pop	{r4, r5, r7, pc}

080142b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80142b8:	b5b0      	push	{r4, r5, r7, lr}
 80142ba:	b082      	sub	sp, #8
 80142bc:	af00      	add	r7, sp, #0
 80142be:	6078      	str	r0, [r7, #4]
 80142c0:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80142c2:	6878      	ldr	r0, [r7, #4]
 80142c4:	f000 fd2f 	bl	8014d26 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80142c8:	4604      	mov	r4, r0
 80142ca:	6838      	ldr	r0, [r7, #0]
 80142cc:	f7fd ffac 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80142d0:	4603      	mov	r3, r0
 80142d2:	4619      	mov	r1, r3
 80142d4:	4620      	mov	r0, r4
 80142d6:	f7ff ffd3 	bl	8014280 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80142da:	462b      	mov	r3, r5
      }
 80142dc:	4618      	mov	r0, r3
 80142de:	3708      	adds	r7, #8
 80142e0:	46bd      	mov	sp, r7
 80142e2:	bdb0      	pop	{r4, r5, r7, pc}

080142e4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80142e4:	b5b0      	push	{r4, r5, r7, lr}
 80142e6:	b082      	sub	sp, #8
 80142e8:	af00      	add	r7, sp, #0
 80142ea:	6078      	str	r0, [r7, #4]
 80142ec:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80142ee:	6878      	ldr	r0, [r7, #4]
 80142f0:	f000 fd19 	bl	8014d26 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80142f4:	4604      	mov	r4, r0
 80142f6:	6838      	ldr	r0, [r7, #0]
 80142f8:	f7fd ff96 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80142fc:	4603      	mov	r3, r0
 80142fe:	4619      	mov	r1, r3
 8014300:	4620      	mov	r0, r4
 8014302:	f7ff ffd9 	bl	80142b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014306:	462b      	mov	r3, r5
      }
 8014308:	4618      	mov	r0, r3
 801430a:	3708      	adds	r7, #8
 801430c:	46bd      	mov	sp, r7
 801430e:	bdb0      	pop	{r4, r5, r7, pc}

08014310 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8014310:	b580      	push	{r7, lr}
 8014312:	b082      	sub	sp, #8
 8014314:	af00      	add	r7, sp, #0
 8014316:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8014318:	6878      	ldr	r0, [r7, #4]
 801431a:	f7fd ff85 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801431e:	4603      	mov	r3, r0
 8014320:	4618      	mov	r0, r3
 8014322:	f7fd f929 	bl	8011578 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8014326:	4603      	mov	r3, r0
	}
 8014328:	4618      	mov	r0, r3
 801432a:	3708      	adds	r7, #8
 801432c:	46bd      	mov	sp, r7
 801432e:	bd80      	pop	{r7, pc}

08014330 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8014330:	b5b0      	push	{r4, r5, r7, lr}
 8014332:	b084      	sub	sp, #16
 8014334:	af00      	add	r7, sp, #0
 8014336:	6078      	str	r0, [r7, #4]
 8014338:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801433a:	6878      	ldr	r0, [r7, #4]
 801433c:	f000 fcf3 	bl	8014d26 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014340:	4604      	mov	r4, r0
 8014342:	6838      	ldr	r0, [r7, #0]
 8014344:	f7fd ff70 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014348:	4603      	mov	r3, r0
 801434a:	4618      	mov	r0, r3
 801434c:	f7ff ffe0 	bl	8014310 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESK_EEDcOSF_>
 8014350:	4601      	mov	r1, r0
 8014352:	f107 030c 	add.w	r3, r7, #12
 8014356:	461a      	mov	r2, r3
 8014358:	4620      	mov	r0, r4
 801435a:	f000 fd2b 	bl	8014db4 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 801435e:	462b      	mov	r3, r5
      }
 8014360:	4618      	mov	r0, r3
 8014362:	3710      	adds	r7, #16
 8014364:	46bd      	mov	sp, r7
 8014366:	bdb0      	pop	{r4, r5, r7, pc}

08014368 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014368:	b5b0      	push	{r4, r5, r7, lr}
 801436a:	b082      	sub	sp, #8
 801436c:	af00      	add	r7, sp, #0
 801436e:	6078      	str	r0, [r7, #4]
 8014370:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8014372:	6878      	ldr	r0, [r7, #4]
 8014374:	f000 fcd7 	bl	8014d26 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014378:	4604      	mov	r4, r0
 801437a:	6838      	ldr	r0, [r7, #0]
 801437c:	f7fd ff54 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014380:	4603      	mov	r3, r0
 8014382:	4619      	mov	r1, r3
 8014384:	4620      	mov	r0, r4
 8014386:	f7ff ffd3 	bl	8014330 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 801438a:	462b      	mov	r3, r5
      }
 801438c:	4618      	mov	r0, r3
 801438e:	3708      	adds	r7, #8
 8014390:	46bd      	mov	sp, r7
 8014392:	bdb0      	pop	{r4, r5, r7, pc}

08014394 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014394:	b5b0      	push	{r4, r5, r7, lr}
 8014396:	b082      	sub	sp, #8
 8014398:	af00      	add	r7, sp, #0
 801439a:	6078      	str	r0, [r7, #4]
 801439c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801439e:	6878      	ldr	r0, [r7, #4]
 80143a0:	f000 fcc1 	bl	8014d26 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80143a4:	4604      	mov	r4, r0
 80143a6:	6838      	ldr	r0, [r7, #0]
 80143a8:	f7fd ff3e 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80143ac:	4603      	mov	r3, r0
 80143ae:	4619      	mov	r1, r3
 80143b0:	4620      	mov	r0, r4
 80143b2:	f7ff ffd9 	bl	8014368 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80143b6:	462b      	mov	r3, r5
      }
 80143b8:	4618      	mov	r0, r3
 80143ba:	3708      	adds	r7, #8
 80143bc:	46bd      	mov	sp, r7
 80143be:	bdb0      	pop	{r4, r5, r7, pc}

080143c0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80143c0:	b580      	push	{r7, lr}
 80143c2:	b082      	sub	sp, #8
 80143c4:	af00      	add	r7, sp, #0
 80143c6:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80143c8:	6878      	ldr	r0, [r7, #4]
 80143ca:	f7fd ff2d 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80143ce:	4603      	mov	r3, r0
 80143d0:	4618      	mov	r0, r3
 80143d2:	f7fd fd34 	bl	8011e3e <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80143d6:	4603      	mov	r3, r0
	}
 80143d8:	4618      	mov	r0, r3
 80143da:	3708      	adds	r7, #8
 80143dc:	46bd      	mov	sp, r7
 80143de:	bd80      	pop	{r7, pc}

080143e0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80143e0:	b5b0      	push	{r4, r5, r7, lr}
 80143e2:	b084      	sub	sp, #16
 80143e4:	af00      	add	r7, sp, #0
 80143e6:	6078      	str	r0, [r7, #4]
 80143e8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80143ea:	6878      	ldr	r0, [r7, #4]
 80143ec:	f000 fc9b 	bl	8014d26 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80143f0:	4604      	mov	r4, r0
 80143f2:	6838      	ldr	r0, [r7, #0]
 80143f4:	f7fd ff18 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80143f8:	4603      	mov	r3, r0
 80143fa:	4618      	mov	r0, r3
 80143fc:	f7ff ffe0 	bl	80143c0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESK_EEDcOSF_>
 8014400:	4601      	mov	r1, r0
 8014402:	f107 030c 	add.w	r3, r7, #12
 8014406:	461a      	mov	r2, r3
 8014408:	4620      	mov	r0, r4
 801440a:	f000 fcf1 	bl	8014df0 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 801440e:	462b      	mov	r3, r5
      }
 8014410:	4618      	mov	r0, r3
 8014412:	3710      	adds	r7, #16
 8014414:	46bd      	mov	sp, r7
 8014416:	bdb0      	pop	{r4, r5, r7, pc}

08014418 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014418:	b5b0      	push	{r4, r5, r7, lr}
 801441a:	b082      	sub	sp, #8
 801441c:	af00      	add	r7, sp, #0
 801441e:	6078      	str	r0, [r7, #4]
 8014420:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8014422:	6878      	ldr	r0, [r7, #4]
 8014424:	f000 fc7f 	bl	8014d26 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014428:	4604      	mov	r4, r0
 801442a:	6838      	ldr	r0, [r7, #0]
 801442c:	f7fd fefc 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014430:	4603      	mov	r3, r0
 8014432:	4619      	mov	r1, r3
 8014434:	4620      	mov	r0, r4
 8014436:	f7ff ffd3 	bl	80143e0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 801443a:	462b      	mov	r3, r5
      }
 801443c:	4618      	mov	r0, r3
 801443e:	3708      	adds	r7, #8
 8014440:	46bd      	mov	sp, r7
 8014442:	bdb0      	pop	{r4, r5, r7, pc}

08014444 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014444:	b5b0      	push	{r4, r5, r7, lr}
 8014446:	b082      	sub	sp, #8
 8014448:	af00      	add	r7, sp, #0
 801444a:	6078      	str	r0, [r7, #4]
 801444c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801444e:	6878      	ldr	r0, [r7, #4]
 8014450:	f000 fc69 	bl	8014d26 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014454:	4604      	mov	r4, r0
 8014456:	6838      	ldr	r0, [r7, #0]
 8014458:	f7fd fee6 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801445c:	4603      	mov	r3, r0
 801445e:	4619      	mov	r1, r3
 8014460:	4620      	mov	r0, r4
 8014462:	f7ff ffd9 	bl	8014418 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014466:	462b      	mov	r3, r5
      }
 8014468:	4618      	mov	r0, r3
 801446a:	3708      	adds	r7, #8
 801446c:	46bd      	mov	sp, r7
 801446e:	bdb0      	pop	{r4, r5, r7, pc}

08014470 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSL_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8014470:	b580      	push	{r7, lr}
 8014472:	b082      	sub	sp, #8
 8014474:	af00      	add	r7, sp, #0
 8014476:	6078      	str	r0, [r7, #4]
 8014478:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 801447a:	683b      	ldr	r3, [r7, #0]
 801447c:	009b      	lsls	r3, r3, #2
 801447e:	687a      	ldr	r2, [r7, #4]
 8014480:	4413      	add	r3, r2
 8014482:	4618      	mov	r0, r3
 8014484:	f000 fcd2 	bl	8014e2c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 8014488:	4603      	mov	r3, r0
	}
 801448a:	4618      	mov	r0, r3
 801448c:	3708      	adds	r7, #8
 801448e:	46bd      	mov	sp, r7
 8014490:	bd80      	pop	{r7, pc}
	...

08014494 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8014494:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014496:	b085      	sub	sp, #20
 8014498:	af00      	add	r7, sp, #0
 801449a:	6078      	str	r0, [r7, #4]
 801449c:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 801449e:	4b0f      	ldr	r3, [pc, #60]	; (80144dc <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_+0x48>)
 80144a0:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 80144a2:	6838      	ldr	r0, [r7, #0]
 80144a4:	f7fc fda0 	bl	8010fe8 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80144a8:	4603      	mov	r3, r0
 80144aa:	4619      	mov	r1, r3
 80144ac:	68f8      	ldr	r0, [r7, #12]
 80144ae:	f7ff ffdf 	bl	8014470 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSL_jDpT_>
 80144b2:	4603      	mov	r3, r0
 80144b4:	681b      	ldr	r3, [r3, #0]
 80144b6:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 80144b8:	68bc      	ldr	r4, [r7, #8]
 80144ba:	6878      	ldr	r0, [r7, #4]
 80144bc:	f000 fcc1 	bl	8014e42 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80144c0:	4605      	mov	r5, r0
 80144c2:	6838      	ldr	r0, [r7, #0]
 80144c4:	f7fd feb0 	bl	8012228 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80144c8:	4603      	mov	r3, r0
 80144ca:	4619      	mov	r1, r3
 80144cc:	4628      	mov	r0, r5
 80144ce:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 80144d0:	4633      	mov	r3, r6
    }
 80144d2:	4618      	mov	r0, r3
 80144d4:	3714      	adds	r7, #20
 80144d6:	46bd      	mov	sp, r7
 80144d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80144da:	bf00      	nop
 80144dc:	08027f04 	.word	0x08027f04

080144e0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>:
      operator=(_Move_assign_base&& __rhs)
 80144e0:	b580      	push	{r7, lr}
 80144e2:	b084      	sub	sp, #16
 80144e4:	af00      	add	r7, sp, #0
 80144e6:	6078      	str	r0, [r7, #4]
 80144e8:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80144ea:	687b      	ldr	r3, [r7, #4]
 80144ec:	60fb      	str	r3, [r7, #12]
 80144ee:	6838      	ldr	r0, [r7, #0]
 80144f0:	f7ff fe53 	bl	801419a <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 80144f4:	4602      	mov	r2, r0
 80144f6:	f107 030c 	add.w	r3, r7, #12
 80144fa:	4611      	mov	r1, r2
 80144fc:	4618      	mov	r0, r3
 80144fe:	f7ff ffc9 	bl	8014494 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>
	return *this;
 8014502:	687b      	ldr	r3, [r7, #4]
      }
 8014504:	4618      	mov	r0, r3
 8014506:	3710      	adds	r7, #16
 8014508:	46bd      	mov	sp, r7
 801450a:	bd80      	pop	{r7, pc}

0801450c <_ZSt4moveIRP10ExpressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801450c:	b480      	push	{r7}
 801450e:	b083      	sub	sp, #12
 8014510:	af00      	add	r7, sp, #0
 8014512:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8014514:	687b      	ldr	r3, [r7, #4]
 8014516:	4618      	mov	r0, r3
 8014518:	370c      	adds	r7, #12
 801451a:	46bd      	mov	sp, r7
 801451c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014520:	4770      	bx	lr

08014522 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 8014522:	b5b0      	push	{r4, r5, r7, lr}
 8014524:	b082      	sub	sp, #8
 8014526:	af00      	add	r7, sp, #0
 8014528:	6078      	str	r0, [r7, #4]
 801452a:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801452c:	687b      	ldr	r3, [r7, #4]
 801452e:	685a      	ldr	r2, [r3, #4]
 8014530:	687b      	ldr	r3, [r7, #4]
 8014532:	689b      	ldr	r3, [r3, #8]
 8014534:	429a      	cmp	r2, r3
 8014536:	d011      	beq.n	801455c <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8014538:	687c      	ldr	r4, [r7, #4]
 801453a:	687b      	ldr	r3, [r7, #4]
 801453c:	685d      	ldr	r5, [r3, #4]
 801453e:	6838      	ldr	r0, [r7, #0]
 8014540:	f000 fc8a 	bl	8014e58 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014544:	4603      	mov	r3, r0
 8014546:	461a      	mov	r2, r3
 8014548:	4629      	mov	r1, r5
 801454a:	4620      	mov	r0, r4
 801454c:	f000 fc8f 	bl	8014e6e <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8014550:	687b      	ldr	r3, [r7, #4]
 8014552:	685b      	ldr	r3, [r3, #4]
 8014554:	1d1a      	adds	r2, r3, #4
 8014556:	687b      	ldr	r3, [r7, #4]
 8014558:	605a      	str	r2, [r3, #4]
 801455a:	e00c      	b.n	8014576 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801455c:	6878      	ldr	r0, [r7, #4]
 801455e:	f000 fc99 	bl	8014e94 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 8014562:	4604      	mov	r4, r0
 8014564:	6838      	ldr	r0, [r7, #0]
 8014566:	f000 fc77 	bl	8014e58 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801456a:	4603      	mov	r3, r0
 801456c:	461a      	mov	r2, r3
 801456e:	4621      	mov	r1, r4
 8014570:	6878      	ldr	r0, [r7, #4]
 8014572:	f000 fca1 	bl	8014eb8 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8014576:	6878      	ldr	r0, [r7, #4]
 8014578:	f000 fd1a 	bl	8014fb0 <_ZNSt6vectorIP10ExpressionSaIS1_EE4backEv>
 801457c:	4603      	mov	r3, r0
      }
 801457e:	4618      	mov	r0, r3
 8014580:	3708      	adds	r7, #8
 8014582:	46bd      	mov	sp, r7
 8014584:	bdb0      	pop	{r4, r5, r7, pc}

08014586 <_ZSt4moveIRP4BodyEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8014586:	b480      	push	{r7}
 8014588:	b083      	sub	sp, #12
 801458a:	af00      	add	r7, sp, #0
 801458c:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801458e:	687b      	ldr	r3, [r7, #4]
 8014590:	4618      	mov	r0, r3
 8014592:	370c      	adds	r7, #12
 8014594:	46bd      	mov	sp, r7
 8014596:	f85d 7b04 	ldr.w	r7, [sp], #4
 801459a:	4770      	bx	lr

0801459c <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801459c:	b5b0      	push	{r4, r5, r7, lr}
 801459e:	b082      	sub	sp, #8
 80145a0:	af00      	add	r7, sp, #0
 80145a2:	6078      	str	r0, [r7, #4]
 80145a4:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 80145a6:	687b      	ldr	r3, [r7, #4]
 80145a8:	685a      	ldr	r2, [r3, #4]
 80145aa:	687b      	ldr	r3, [r7, #4]
 80145ac:	689b      	ldr	r3, [r3, #8]
 80145ae:	429a      	cmp	r2, r3
 80145b0:	d011      	beq.n	80145d6 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 80145b2:	687c      	ldr	r4, [r7, #4]
 80145b4:	687b      	ldr	r3, [r7, #4]
 80145b6:	685d      	ldr	r5, [r3, #4]
 80145b8:	6838      	ldr	r0, [r7, #0]
 80145ba:	f000 fd14 	bl	8014fe6 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 80145be:	4603      	mov	r3, r0
 80145c0:	461a      	mov	r2, r3
 80145c2:	4629      	mov	r1, r5
 80145c4:	4620      	mov	r0, r4
 80145c6:	f000 fd19 	bl	8014ffc <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 80145ca:	687b      	ldr	r3, [r7, #4]
 80145cc:	685b      	ldr	r3, [r3, #4]
 80145ce:	1d1a      	adds	r2, r3, #4
 80145d0:	687b      	ldr	r3, [r7, #4]
 80145d2:	605a      	str	r2, [r3, #4]
 80145d4:	e00c      	b.n	80145f0 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 80145d6:	6878      	ldr	r0, [r7, #4]
 80145d8:	f000 fd23 	bl	8015022 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 80145dc:	4604      	mov	r4, r0
 80145de:	6838      	ldr	r0, [r7, #0]
 80145e0:	f000 fd01 	bl	8014fe6 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 80145e4:	4603      	mov	r3, r0
 80145e6:	461a      	mov	r2, r3
 80145e8:	4621      	mov	r1, r4
 80145ea:	6878      	ldr	r0, [r7, #4]
 80145ec:	f000 fd2a 	bl	8015044 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 80145f0:	6878      	ldr	r0, [r7, #4]
 80145f2:	f000 fda3 	bl	801513c <_ZNSt6vectorIP4BodySaIS1_EE4backEv>
 80145f6:	4603      	mov	r3, r0
      }
 80145f8:	4618      	mov	r0, r3
 80145fa:	3708      	adds	r7, #8
 80145fc:	46bd      	mov	sp, r7
 80145fe:	bdb0      	pop	{r4, r5, r7, pc}

08014600 <_ZNSaIP10ExpressionEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 8014600:	b580      	push	{r7, lr}
 8014602:	b082      	sub	sp, #8
 8014604:	af00      	add	r7, sp, #0
 8014606:	6078      	str	r0, [r7, #4]
 8014608:	6878      	ldr	r0, [r7, #4]
 801460a:	f000 fdb2 	bl	8015172 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1Ev>
 801460e:	687b      	ldr	r3, [r7, #4]
 8014610:	4618      	mov	r0, r3
 8014612:	3708      	adds	r7, #8
 8014614:	46bd      	mov	sp, r7
 8014616:	bd80      	pop	{r7, pc}

08014618 <_ZNSaIP4BodyEC1Ev>:
 8014618:	b580      	push	{r7, lr}
 801461a:	b082      	sub	sp, #8
 801461c:	af00      	add	r7, sp, #0
 801461e:	6078      	str	r0, [r7, #4]
 8014620:	6878      	ldr	r0, [r7, #4]
 8014622:	f000 fdb1 	bl	8015188 <_ZN9__gnu_cxx13new_allocatorIP4BodyEC1Ev>
 8014626:	687b      	ldr	r3, [r7, #4]
 8014628:	4618      	mov	r0, r3
 801462a:	3708      	adds	r7, #8
 801462c:	46bd      	mov	sp, r7
 801462e:	bd80      	pop	{r7, pc}

08014630 <_ZNSt12_Vector_baseIP4BodySaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8014630:	b480      	push	{r7}
 8014632:	b083      	sub	sp, #12
 8014634:	af00      	add	r7, sp, #0
 8014636:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8014638:	687b      	ldr	r3, [r7, #4]
 801463a:	2200      	movs	r2, #0
 801463c:	601a      	str	r2, [r3, #0]
 801463e:	687b      	ldr	r3, [r7, #4]
 8014640:	2200      	movs	r2, #0
 8014642:	605a      	str	r2, [r3, #4]
 8014644:	687b      	ldr	r3, [r7, #4]
 8014646:	2200      	movs	r2, #0
 8014648:	609a      	str	r2, [r3, #8]
	{ }
 801464a:	687b      	ldr	r3, [r7, #4]
 801464c:	4618      	mov	r0, r3
 801464e:	370c      	adds	r7, #12
 8014650:	46bd      	mov	sp, r7
 8014652:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014656:	4770      	bx	lr

08014658 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8014658:	b580      	push	{r7, lr}
 801465a:	b084      	sub	sp, #16
 801465c:	af00      	add	r7, sp, #0
 801465e:	60f8      	str	r0, [r7, #12]
 8014660:	60b9      	str	r1, [r7, #8]
 8014662:	607a      	str	r2, [r7, #4]
	if (__p)
 8014664:	68bb      	ldr	r3, [r7, #8]
 8014666:	2b00      	cmp	r3, #0
 8014668:	d005      	beq.n	8014676 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 801466a:	68fb      	ldr	r3, [r7, #12]
 801466c:	687a      	ldr	r2, [r7, #4]
 801466e:	68b9      	ldr	r1, [r7, #8]
 8014670:	4618      	mov	r0, r3
 8014672:	f000 fd94 	bl	801519e <_ZNSt16allocator_traitsISaIP4BodyEE10deallocateERS2_PS1_j>
      }
 8014676:	bf00      	nop
 8014678:	3710      	adds	r7, #16
 801467a:	46bd      	mov	sp, r7
 801467c:	bd80      	pop	{r7, pc}

0801467e <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 801467e:	b480      	push	{r7}
 8014680:	b083      	sub	sp, #12
 8014682:	af00      	add	r7, sp, #0
 8014684:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8014686:	687b      	ldr	r3, [r7, #4]
 8014688:	4618      	mov	r0, r3
 801468a:	370c      	adds	r7, #12
 801468c:	46bd      	mov	sp, r7
 801468e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014692:	4770      	bx	lr

08014694 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8014694:	b580      	push	{r7, lr}
 8014696:	b082      	sub	sp, #8
 8014698:	af00      	add	r7, sp, #0
 801469a:	7138      	strb	r0, [r7, #4]
 801469c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801469e:	6838      	ldr	r0, [r7, #0]
 80146a0:	f000 fda2 	bl	80151e8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80146a4:	4603      	mov	r3, r0
 80146a6:	4618      	mov	r0, r3
 80146a8:	f7f1 f984 	bl	80059b4 <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>
 80146ac:	4603      	mov	r3, r0
 80146ae:	4618      	mov	r0, r3
 80146b0:	3708      	adds	r7, #8
 80146b2:	46bd      	mov	sp, r7
 80146b4:	bd80      	pop	{r7, pc}

080146b6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80146b6:	b590      	push	{r4, r7, lr}
 80146b8:	b083      	sub	sp, #12
 80146ba:	af00      	add	r7, sp, #0
 80146bc:	7138      	strb	r0, [r7, #4]
 80146be:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80146c0:	6838      	ldr	r0, [r7, #0]
 80146c2:	f000 fd86 	bl	80151d2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80146c6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80146c8:	4619      	mov	r1, r3
 80146ca:	4620      	mov	r0, r4
 80146cc:	f7ff ffe2 	bl	8014694 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 80146d0:	4603      	mov	r3, r0
    }
 80146d2:	4618      	mov	r0, r3
 80146d4:	370c      	adds	r7, #12
 80146d6:	46bd      	mov	sp, r7
 80146d8:	bd90      	pop	{r4, r7, pc}

080146da <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80146da:	b590      	push	{r4, r7, lr}
 80146dc:	b083      	sub	sp, #12
 80146de:	af00      	add	r7, sp, #0
 80146e0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80146e2:	6878      	ldr	r0, [r7, #4]
 80146e4:	f000 fd6a 	bl	80151bc <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 80146e8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80146ea:	4619      	mov	r1, r3
 80146ec:	4620      	mov	r0, r4
 80146ee:	f7ff ffe2 	bl	80146b6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80146f2:	4603      	mov	r3, r0
    }
 80146f4:	4618      	mov	r0, r3
 80146f6:	370c      	adds	r7, #12
 80146f8:	46bd      	mov	sp, r7
 80146fa:	bd90      	pop	{r4, r7, pc}

080146fc <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 80146fc:	b580      	push	{r7, lr}
 80146fe:	b082      	sub	sp, #8
 8014700:	af00      	add	r7, sp, #0
 8014702:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8014704:	6878      	ldr	r0, [r7, #4]
 8014706:	f7ff fbea 	bl	8013ede <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 801470a:	4603      	mov	r3, r0
 801470c:	2b01      	cmp	r3, #1
 801470e:	bf14      	ite	ne
 8014710:	2301      	movne	r3, #1
 8014712:	2300      	moveq	r3, #0
 8014714:	b2db      	uxtb	r3, r3
 8014716:	2b00      	cmp	r3, #0
 8014718:	d002      	beq.n	8014720 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 801471a:	4805      	ldr	r0, [pc, #20]	; (8014730 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 801471c:	f7ef fd54 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8014720:	6878      	ldr	r0, [r7, #4]
 8014722:	f7ff ffda 	bl	80146da <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8014726:	4603      	mov	r3, r0
    }
 8014728:	4618      	mov	r0, r3
 801472a:	3708      	adds	r7, #8
 801472c:	46bd      	mov	sp, r7
 801472e:	bd80      	pop	{r7, pc}
 8014730:	080277a4 	.word	0x080277a4

08014734 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014734:	b480      	push	{r7}
 8014736:	b083      	sub	sp, #12
 8014738:	af00      	add	r7, sp, #0
 801473a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801473c:	687b      	ldr	r3, [r7, #4]
 801473e:	4618      	mov	r0, r3
 8014740:	370c      	adds	r7, #12
 8014742:	46bd      	mov	sp, r7
 8014744:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014748:	4770      	bx	lr

0801474a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801474a:	b580      	push	{r7, lr}
 801474c:	b082      	sub	sp, #8
 801474e:	af00      	add	r7, sp, #0
 8014750:	6078      	str	r0, [r7, #4]
 8014752:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014754:	687b      	ldr	r3, [r7, #4]
 8014756:	4618      	mov	r0, r3
 8014758:	f000 fd51 	bl	80151fe <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801475c:	6838      	ldr	r0, [r7, #0]
 801475e:	f7ff ffe9 	bl	8014734 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014762:	4603      	mov	r3, r0
 8014764:	4619      	mov	r1, r3
 8014766:	6878      	ldr	r0, [r7, #4]
 8014768:	f000 fd56 	bl	8015218 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS4_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801476c:	6878      	ldr	r0, [r7, #4]
 801476e:	f7ff ffc5 	bl	80146fc <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014772:	4603      	mov	r3, r0
	}
 8014774:	4618      	mov	r0, r3
 8014776:	3708      	adds	r7, #8
 8014778:	46bd      	mov	sp, r7
 801477a:	bd80      	pop	{r7, pc}

0801477c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801477c:	b580      	push	{r7, lr}
 801477e:	b082      	sub	sp, #8
 8014780:	af00      	add	r7, sp, #0
 8014782:	7138      	strb	r0, [r7, #4]
 8014784:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8014786:	6838      	ldr	r0, [r7, #0]
 8014788:	f000 fd65 	bl	8015256 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801478c:	4603      	mov	r3, r0
 801478e:	4618      	mov	r0, r3
 8014790:	f000 fd6c 	bl	801526c <_ZNRSt8__detail9__variant14_UninitializedIP11Method_callLb1EE6_M_getEv>
 8014794:	4603      	mov	r3, r0
 8014796:	4618      	mov	r0, r3
 8014798:	3708      	adds	r7, #8
 801479a:	46bd      	mov	sp, r7
 801479c:	bd80      	pop	{r7, pc}

0801479e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801479e:	b590      	push	{r4, r7, lr}
 80147a0:	b083      	sub	sp, #12
 80147a2:	af00      	add	r7, sp, #0
 80147a4:	7138      	strb	r0, [r7, #4]
 80147a6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80147a8:	6838      	ldr	r0, [r7, #0]
 80147aa:	f000 fd1d 	bl	80151e8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80147ae:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80147b0:	4619      	mov	r1, r3
 80147b2:	4620      	mov	r0, r4
 80147b4:	f7ff ffe2 	bl	801477c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 80147b8:	4603      	mov	r3, r0
    }
 80147ba:	4618      	mov	r0, r3
 80147bc:	370c      	adds	r7, #12
 80147be:	46bd      	mov	sp, r7
 80147c0:	bd90      	pop	{r4, r7, pc}

080147c2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80147c2:	b590      	push	{r4, r7, lr}
 80147c4:	b083      	sub	sp, #12
 80147c6:	af00      	add	r7, sp, #0
 80147c8:	7138      	strb	r0, [r7, #4]
 80147ca:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80147cc:	6838      	ldr	r0, [r7, #0]
 80147ce:	f000 fd00 	bl	80151d2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80147d2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80147d4:	4619      	mov	r1, r3
 80147d6:	4620      	mov	r0, r4
 80147d8:	f7ff ffe1 	bl	801479e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80147dc:	4603      	mov	r3, r0
    }
 80147de:	4618      	mov	r0, r3
 80147e0:	370c      	adds	r7, #12
 80147e2:	46bd      	mov	sp, r7
 80147e4:	bd90      	pop	{r4, r7, pc}

080147e6 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80147e6:	b590      	push	{r4, r7, lr}
 80147e8:	b083      	sub	sp, #12
 80147ea:	af00      	add	r7, sp, #0
 80147ec:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80147ee:	6878      	ldr	r0, [r7, #4]
 80147f0:	f000 fce4 	bl	80151bc <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 80147f4:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80147f6:	4619      	mov	r1, r3
 80147f8:	4620      	mov	r0, r4
 80147fa:	f7ff ffe2 	bl	80147c2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80147fe:	4603      	mov	r3, r0
    }
 8014800:	4618      	mov	r0, r3
 8014802:	370c      	adds	r7, #12
 8014804:	46bd      	mov	sp, r7
 8014806:	bd90      	pop	{r4, r7, pc}

08014808 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8014808:	b580      	push	{r7, lr}
 801480a:	b082      	sub	sp, #8
 801480c:	af00      	add	r7, sp, #0
 801480e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8014810:	6878      	ldr	r0, [r7, #4]
 8014812:	f7ff fb64 	bl	8013ede <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8014816:	4603      	mov	r3, r0
 8014818:	2b02      	cmp	r3, #2
 801481a:	bf14      	ite	ne
 801481c:	2301      	movne	r3, #1
 801481e:	2300      	moveq	r3, #0
 8014820:	b2db      	uxtb	r3, r3
 8014822:	2b00      	cmp	r3, #0
 8014824:	d002      	beq.n	801482c <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8014826:	4805      	ldr	r0, [pc, #20]	; (801483c <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8014828:	f7ef fcce 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 801482c:	6878      	ldr	r0, [r7, #4]
 801482e:	f7ff ffda 	bl	80147e6 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8014832:	4603      	mov	r3, r0
    }
 8014834:	4618      	mov	r0, r3
 8014836:	3708      	adds	r7, #8
 8014838:	46bd      	mov	sp, r7
 801483a:	bd80      	pop	{r7, pc}
 801483c:	080277a4 	.word	0x080277a4

08014840 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014840:	b480      	push	{r7}
 8014842:	b083      	sub	sp, #12
 8014844:	af00      	add	r7, sp, #0
 8014846:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014848:	687b      	ldr	r3, [r7, #4]
 801484a:	4618      	mov	r0, r3
 801484c:	370c      	adds	r7, #12
 801484e:	46bd      	mov	sp, r7
 8014850:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014854:	4770      	bx	lr

08014856 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj2EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014856:	b580      	push	{r7, lr}
 8014858:	b082      	sub	sp, #8
 801485a:	af00      	add	r7, sp, #0
 801485c:	6078      	str	r0, [r7, #4]
 801485e:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014860:	687b      	ldr	r3, [r7, #4]
 8014862:	4618      	mov	r0, r3
 8014864:	f000 fccb 	bl	80151fe <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014868:	6838      	ldr	r0, [r7, #0]
 801486a:	f7ff ffe9 	bl	8014840 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801486e:	4603      	mov	r3, r0
 8014870:	4619      	mov	r1, r3
 8014872:	6878      	ldr	r0, [r7, #4]
 8014874:	f000 fd05 	bl	8015282 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014878:	6878      	ldr	r0, [r7, #4]
 801487a:	f7ff ffc5 	bl	8014808 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801487e:	4603      	mov	r3, r0
	}
 8014880:	4618      	mov	r0, r3
 8014882:	3708      	adds	r7, #8
 8014884:	46bd      	mov	sp, r7
 8014886:	bd80      	pop	{r7, pc}

08014888 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8014888:	b580      	push	{r7, lr}
 801488a:	b082      	sub	sp, #8
 801488c:	af00      	add	r7, sp, #0
 801488e:	7138      	strb	r0, [r7, #4]
 8014890:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8014892:	6838      	ldr	r0, [r7, #0]
 8014894:	f000 fc9d 	bl	80151d2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8014898:	4603      	mov	r3, r0
 801489a:	4618      	mov	r0, r3
 801489c:	f000 fd10 	bl	80152c0 <_ZNRSt8__detail9__variant14_UninitializedIP10AssignmentLb1EE6_M_getEv>
 80148a0:	4603      	mov	r3, r0
 80148a2:	4618      	mov	r0, r3
 80148a4:	3708      	adds	r7, #8
 80148a6:	46bd      	mov	sp, r7
 80148a8:	bd80      	pop	{r7, pc}

080148aa <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80148aa:	b590      	push	{r4, r7, lr}
 80148ac:	b083      	sub	sp, #12
 80148ae:	af00      	add	r7, sp, #0
 80148b0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80148b2:	6878      	ldr	r0, [r7, #4]
 80148b4:	f000 fc82 	bl	80151bc <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 80148b8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80148ba:	4619      	mov	r1, r3
 80148bc:	4620      	mov	r0, r4
 80148be:	f7ff ffe3 	bl	8014888 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 80148c2:	4603      	mov	r3, r0
    }
 80148c4:	4618      	mov	r0, r3
 80148c6:	370c      	adds	r7, #12
 80148c8:	46bd      	mov	sp, r7
 80148ca:	bd90      	pop	{r4, r7, pc}

080148cc <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 80148cc:	b580      	push	{r7, lr}
 80148ce:	b082      	sub	sp, #8
 80148d0:	af00      	add	r7, sp, #0
 80148d2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80148d4:	6878      	ldr	r0, [r7, #4]
 80148d6:	f7ff fb02 	bl	8013ede <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 80148da:	4603      	mov	r3, r0
 80148dc:	2b00      	cmp	r3, #0
 80148de:	bf14      	ite	ne
 80148e0:	2301      	movne	r3, #1
 80148e2:	2300      	moveq	r3, #0
 80148e4:	b2db      	uxtb	r3, r3
 80148e6:	2b00      	cmp	r3, #0
 80148e8:	d002      	beq.n	80148f0 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80148ea:	4805      	ldr	r0, [pc, #20]	; (8014900 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 80148ec:	f7ef fc6c 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80148f0:	6878      	ldr	r0, [r7, #4]
 80148f2:	f7ff ffda 	bl	80148aa <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 80148f6:	4603      	mov	r3, r0
    }
 80148f8:	4618      	mov	r0, r3
 80148fa:	3708      	adds	r7, #8
 80148fc:	46bd      	mov	sp, r7
 80148fe:	bd80      	pop	{r7, pc}
 8014900:	080277a4 	.word	0x080277a4

08014904 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014904:	b480      	push	{r7}
 8014906:	b083      	sub	sp, #12
 8014908:	af00      	add	r7, sp, #0
 801490a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801490c:	687b      	ldr	r3, [r7, #4]
 801490e:	4618      	mov	r0, r3
 8014910:	370c      	adds	r7, #12
 8014912:	46bd      	mov	sp, r7
 8014914:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014918:	4770      	bx	lr

0801491a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801491a:	b580      	push	{r7, lr}
 801491c:	b082      	sub	sp, #8
 801491e:	af00      	add	r7, sp, #0
 8014920:	6078      	str	r0, [r7, #4]
 8014922:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014924:	687b      	ldr	r3, [r7, #4]
 8014926:	4618      	mov	r0, r3
 8014928:	f000 fc69 	bl	80151fe <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801492c:	6838      	ldr	r0, [r7, #0]
 801492e:	f7ff ffe9 	bl	8014904 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 8014932:	4603      	mov	r3, r0
 8014934:	4619      	mov	r1, r3
 8014936:	6878      	ldr	r0, [r7, #4]
 8014938:	f000 fccd 	bl	80152d6 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS2_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801493c:	6878      	ldr	r0, [r7, #4]
 801493e:	f7ff ffc5 	bl	80148cc <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014942:	4603      	mov	r3, r0
	}
 8014944:	4618      	mov	r0, r3
 8014946:	3708      	adds	r7, #8
 8014948:	46bd      	mov	sp, r7
 801494a:	bd80      	pop	{r7, pc}

0801494c <_ZNSt8__detail9__variant14_UninitializedIP10AssignmentLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 801494c:	b480      	push	{r7}
 801494e:	b083      	sub	sp, #12
 8014950:	af00      	add	r7, sp, #0
 8014952:	6078      	str	r0, [r7, #4]
 8014954:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 8014956:	687b      	ldr	r3, [r7, #4]
 8014958:	2200      	movs	r2, #0
 801495a:	601a      	str	r2, [r3, #0]
	{ }
 801495c:	687b      	ldr	r3, [r7, #4]
 801495e:	4618      	mov	r0, r3
 8014960:	370c      	adds	r7, #12
 8014962:	46bd      	mov	sp, r7
 8014964:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014968:	4770      	bx	lr

0801496a <_ZNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801496a:	b580      	push	{r7, lr}
 801496c:	b082      	sub	sp, #8
 801496e:	af00      	add	r7, sp, #0
 8014970:	6078      	str	r0, [r7, #4]
 8014972:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8014974:	687b      	ldr	r3, [r7, #4]
 8014976:	4611      	mov	r1, r2
 8014978:	4618      	mov	r0, r3
 801497a:	f7ff ffe7 	bl	801494c <_ZNSt8__detail9__variant14_UninitializedIP10AssignmentLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801497e:	687b      	ldr	r3, [r7, #4]
 8014980:	4618      	mov	r0, r3
 8014982:	3708      	adds	r7, #8
 8014984:	46bd      	mov	sp, r7
 8014986:	bd80      	pop	{r7, pc}

08014988 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8014988:	b580      	push	{r7, lr}
 801498a:	b082      	sub	sp, #8
 801498c:	af00      	add	r7, sp, #0
 801498e:	6078      	str	r0, [r7, #4]
 8014990:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 8014992:	687b      	ldr	r3, [r7, #4]
 8014994:	4611      	mov	r1, r2
 8014996:	4618      	mov	r0, r3
 8014998:	f7ff ffe7 	bl	801496a <_ZNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 801499c:	687b      	ldr	r3, [r7, #4]
 801499e:	2200      	movs	r2, #0
 80149a0:	711a      	strb	r2, [r3, #4]
	{ }
 80149a2:	687b      	ldr	r3, [r7, #4]
 80149a4:	4618      	mov	r0, r3
 80149a6:	3708      	adds	r7, #8
 80149a8:	46bd      	mov	sp, r7
 80149aa:	bd80      	pop	{r7, pc}

080149ac <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80149ac:	b580      	push	{r7, lr}
 80149ae:	b082      	sub	sp, #8
 80149b0:	af00      	add	r7, sp, #0
 80149b2:	7138      	strb	r0, [r7, #4]
 80149b4:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80149b6:	6838      	ldr	r0, [r7, #0]
 80149b8:	f000 fcac 	bl	8015314 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80149bc:	4603      	mov	r3, r0
 80149be:	4618      	mov	r0, r3
 80149c0:	f000 fcb3 	bl	801532a <_ZNRSt8__detail9__variant14_UninitializedIP15While_statementLb1EE6_M_getEv>
 80149c4:	4603      	mov	r3, r0
 80149c6:	4618      	mov	r0, r3
 80149c8:	3708      	adds	r7, #8
 80149ca:	46bd      	mov	sp, r7
 80149cc:	bd80      	pop	{r7, pc}

080149ce <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80149ce:	b590      	push	{r4, r7, lr}
 80149d0:	b083      	sub	sp, #12
 80149d2:	af00      	add	r7, sp, #0
 80149d4:	7138      	strb	r0, [r7, #4]
 80149d6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80149d8:	6838      	ldr	r0, [r7, #0]
 80149da:	f000 fc3c 	bl	8015256 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80149de:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80149e0:	4619      	mov	r1, r3
 80149e2:	4620      	mov	r0, r4
 80149e4:	f7ff ffe2 	bl	80149ac <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 80149e8:	4603      	mov	r3, r0
    }
 80149ea:	4618      	mov	r0, r3
 80149ec:	370c      	adds	r7, #12
 80149ee:	46bd      	mov	sp, r7
 80149f0:	bd90      	pop	{r4, r7, pc}

080149f2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80149f2:	b590      	push	{r4, r7, lr}
 80149f4:	b083      	sub	sp, #12
 80149f6:	af00      	add	r7, sp, #0
 80149f8:	7138      	strb	r0, [r7, #4]
 80149fa:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80149fc:	6838      	ldr	r0, [r7, #0]
 80149fe:	f000 fbf3 	bl	80151e8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8014a02:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8014a04:	4619      	mov	r1, r3
 8014a06:	4620      	mov	r0, r4
 8014a08:	f7ff ffe1 	bl	80149ce <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8014a0c:	4603      	mov	r3, r0
    }
 8014a0e:	4618      	mov	r0, r3
 8014a10:	370c      	adds	r7, #12
 8014a12:	46bd      	mov	sp, r7
 8014a14:	bd90      	pop	{r4, r7, pc}

08014a16 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8014a16:	b590      	push	{r4, r7, lr}
 8014a18:	b083      	sub	sp, #12
 8014a1a:	af00      	add	r7, sp, #0
 8014a1c:	7138      	strb	r0, [r7, #4]
 8014a1e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8014a20:	6838      	ldr	r0, [r7, #0]
 8014a22:	f000 fbd6 	bl	80151d2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8014a26:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8014a28:	4619      	mov	r1, r3
 8014a2a:	4620      	mov	r0, r4
 8014a2c:	f7ff ffe1 	bl	80149f2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8014a30:	4603      	mov	r3, r0
    }
 8014a32:	4618      	mov	r0, r3
 8014a34:	370c      	adds	r7, #12
 8014a36:	46bd      	mov	sp, r7
 8014a38:	bd90      	pop	{r4, r7, pc}

08014a3a <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8014a3a:	b590      	push	{r4, r7, lr}
 8014a3c:	b083      	sub	sp, #12
 8014a3e:	af00      	add	r7, sp, #0
 8014a40:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8014a42:	6878      	ldr	r0, [r7, #4]
 8014a44:	f000 fbba 	bl	80151bc <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8014a48:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8014a4a:	4619      	mov	r1, r3
 8014a4c:	4620      	mov	r0, r4
 8014a4e:	f7ff ffe2 	bl	8014a16 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8014a52:	4603      	mov	r3, r0
    }
 8014a54:	4618      	mov	r0, r3
 8014a56:	370c      	adds	r7, #12
 8014a58:	46bd      	mov	sp, r7
 8014a5a:	bd90      	pop	{r4, r7, pc}

08014a5c <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8014a5c:	b580      	push	{r7, lr}
 8014a5e:	b082      	sub	sp, #8
 8014a60:	af00      	add	r7, sp, #0
 8014a62:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8014a64:	6878      	ldr	r0, [r7, #4]
 8014a66:	f7ff fa3a 	bl	8013ede <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8014a6a:	4603      	mov	r3, r0
 8014a6c:	2b03      	cmp	r3, #3
 8014a6e:	bf14      	ite	ne
 8014a70:	2301      	movne	r3, #1
 8014a72:	2300      	moveq	r3, #0
 8014a74:	b2db      	uxtb	r3, r3
 8014a76:	2b00      	cmp	r3, #0
 8014a78:	d002      	beq.n	8014a80 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8014a7a:	4805      	ldr	r0, [pc, #20]	; (8014a90 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8014a7c:	f7ef fba4 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8014a80:	6878      	ldr	r0, [r7, #4]
 8014a82:	f7ff ffda 	bl	8014a3a <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8014a86:	4603      	mov	r3, r0
    }
 8014a88:	4618      	mov	r0, r3
 8014a8a:	3708      	adds	r7, #8
 8014a8c:	46bd      	mov	sp, r7
 8014a8e:	bd80      	pop	{r7, pc}
 8014a90:	080277a4 	.word	0x080277a4

08014a94 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014a94:	b480      	push	{r7}
 8014a96:	b083      	sub	sp, #12
 8014a98:	af00      	add	r7, sp, #0
 8014a9a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014a9c:	687b      	ldr	r3, [r7, #4]
 8014a9e:	4618      	mov	r0, r3
 8014aa0:	370c      	adds	r7, #12
 8014aa2:	46bd      	mov	sp, r7
 8014aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014aa8:	4770      	bx	lr

08014aaa <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj3EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014aaa:	b580      	push	{r7, lr}
 8014aac:	b082      	sub	sp, #8
 8014aae:	af00      	add	r7, sp, #0
 8014ab0:	6078      	str	r0, [r7, #4]
 8014ab2:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014ab4:	687b      	ldr	r3, [r7, #4]
 8014ab6:	4618      	mov	r0, r3
 8014ab8:	f000 fba1 	bl	80151fe <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014abc:	6838      	ldr	r0, [r7, #0]
 8014abe:	f7ff ffe9 	bl	8014a94 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014ac2:	4603      	mov	r3, r0
 8014ac4:	4619      	mov	r1, r3
 8014ac6:	6878      	ldr	r0, [r7, #4]
 8014ac8:	f000 fc3a 	bl	8015340 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS8_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014acc:	6878      	ldr	r0, [r7, #4]
 8014ace:	f7ff ffc5 	bl	8014a5c <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014ad2:	4603      	mov	r3, r0
	}
 8014ad4:	4618      	mov	r0, r3
 8014ad6:	3708      	adds	r7, #8
 8014ad8:	46bd      	mov	sp, r7
 8014ada:	bd80      	pop	{r7, pc}

08014adc <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8014adc:	b580      	push	{r7, lr}
 8014ade:	b082      	sub	sp, #8
 8014ae0:	af00      	add	r7, sp, #0
 8014ae2:	7138      	strb	r0, [r7, #4]
 8014ae4:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8014ae6:	6838      	ldr	r0, [r7, #0]
 8014ae8:	f000 fc49 	bl	801537e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP12If_statementEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8014aec:	4603      	mov	r3, r0
 8014aee:	4618      	mov	r0, r3
 8014af0:	f000 fc50 	bl	8015394 <_ZNRSt8__detail9__variant14_UninitializedIP12If_statementLb1EE6_M_getEv>
 8014af4:	4603      	mov	r3, r0
 8014af6:	4618      	mov	r0, r3
 8014af8:	3708      	adds	r7, #8
 8014afa:	46bd      	mov	sp, r7
 8014afc:	bd80      	pop	{r7, pc}

08014afe <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8014afe:	b590      	push	{r4, r7, lr}
 8014b00:	b083      	sub	sp, #12
 8014b02:	af00      	add	r7, sp, #0
 8014b04:	7138      	strb	r0, [r7, #4]
 8014b06:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8014b08:	6838      	ldr	r0, [r7, #0]
 8014b0a:	f000 fc03 	bl	8015314 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014b0e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8014b10:	4619      	mov	r1, r3
 8014b12:	4620      	mov	r0, r4
 8014b14:	f7ff ffe2 	bl	8014adc <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8014b18:	4603      	mov	r3, r0
    }
 8014b1a:	4618      	mov	r0, r3
 8014b1c:	370c      	adds	r7, #12
 8014b1e:	46bd      	mov	sp, r7
 8014b20:	bd90      	pop	{r4, r7, pc}

08014b22 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8014b22:	b590      	push	{r4, r7, lr}
 8014b24:	b083      	sub	sp, #12
 8014b26:	af00      	add	r7, sp, #0
 8014b28:	7138      	strb	r0, [r7, #4]
 8014b2a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8014b2c:	6838      	ldr	r0, [r7, #0]
 8014b2e:	f000 fb92 	bl	8015256 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8014b32:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8014b34:	4619      	mov	r1, r3
 8014b36:	4620      	mov	r0, r4
 8014b38:	f7ff ffe1 	bl	8014afe <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8014b3c:	4603      	mov	r3, r0
    }
 8014b3e:	4618      	mov	r0, r3
 8014b40:	370c      	adds	r7, #12
 8014b42:	46bd      	mov	sp, r7
 8014b44:	bd90      	pop	{r4, r7, pc}

08014b46 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8014b46:	b590      	push	{r4, r7, lr}
 8014b48:	b083      	sub	sp, #12
 8014b4a:	af00      	add	r7, sp, #0
 8014b4c:	7138      	strb	r0, [r7, #4]
 8014b4e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8014b50:	6838      	ldr	r0, [r7, #0]
 8014b52:	f000 fb49 	bl	80151e8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8014b56:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8014b58:	4619      	mov	r1, r3
 8014b5a:	4620      	mov	r0, r4
 8014b5c:	f7ff ffe1 	bl	8014b22 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8014b60:	4603      	mov	r3, r0
    }
 8014b62:	4618      	mov	r0, r3
 8014b64:	370c      	adds	r7, #12
 8014b66:	46bd      	mov	sp, r7
 8014b68:	bd90      	pop	{r4, r7, pc}

08014b6a <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8014b6a:	b590      	push	{r4, r7, lr}
 8014b6c:	b083      	sub	sp, #12
 8014b6e:	af00      	add	r7, sp, #0
 8014b70:	7138      	strb	r0, [r7, #4]
 8014b72:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8014b74:	6838      	ldr	r0, [r7, #0]
 8014b76:	f000 fb2c 	bl	80151d2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8014b7a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8014b7c:	4619      	mov	r1, r3
 8014b7e:	4620      	mov	r0, r4
 8014b80:	f7ff ffe1 	bl	8014b46 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8014b84:	4603      	mov	r3, r0
    }
 8014b86:	4618      	mov	r0, r3
 8014b88:	370c      	adds	r7, #12
 8014b8a:	46bd      	mov	sp, r7
 8014b8c:	bd90      	pop	{r4, r7, pc}

08014b8e <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8014b8e:	b590      	push	{r4, r7, lr}
 8014b90:	b083      	sub	sp, #12
 8014b92:	af00      	add	r7, sp, #0
 8014b94:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8014b96:	6878      	ldr	r0, [r7, #4]
 8014b98:	f000 fb10 	bl	80151bc <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8014b9c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8014b9e:	4619      	mov	r1, r3
 8014ba0:	4620      	mov	r0, r4
 8014ba2:	f7ff ffe2 	bl	8014b6a <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8014ba6:	4603      	mov	r3, r0
    }
 8014ba8:	4618      	mov	r0, r3
 8014baa:	370c      	adds	r7, #12
 8014bac:	46bd      	mov	sp, r7
 8014bae:	bd90      	pop	{r4, r7, pc}

08014bb0 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8014bb0:	b580      	push	{r7, lr}
 8014bb2:	b082      	sub	sp, #8
 8014bb4:	af00      	add	r7, sp, #0
 8014bb6:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8014bb8:	6878      	ldr	r0, [r7, #4]
 8014bba:	f7ff f990 	bl	8013ede <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8014bbe:	4603      	mov	r3, r0
 8014bc0:	2b04      	cmp	r3, #4
 8014bc2:	bf14      	ite	ne
 8014bc4:	2301      	movne	r3, #1
 8014bc6:	2300      	moveq	r3, #0
 8014bc8:	b2db      	uxtb	r3, r3
 8014bca:	2b00      	cmp	r3, #0
 8014bcc:	d002      	beq.n	8014bd4 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8014bce:	4805      	ldr	r0, [pc, #20]	; (8014be4 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8014bd0:	f7ef fafa 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8014bd4:	6878      	ldr	r0, [r7, #4]
 8014bd6:	f7ff ffda 	bl	8014b8e <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8014bda:	4603      	mov	r3, r0
    }
 8014bdc:	4618      	mov	r0, r3
 8014bde:	3708      	adds	r7, #8
 8014be0:	46bd      	mov	sp, r7
 8014be2:	bd80      	pop	{r7, pc}
 8014be4:	080277a4 	.word	0x080277a4

08014be8 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014be8:	b480      	push	{r7}
 8014bea:	b083      	sub	sp, #12
 8014bec:	af00      	add	r7, sp, #0
 8014bee:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014bf0:	687b      	ldr	r3, [r7, #4]
 8014bf2:	4618      	mov	r0, r3
 8014bf4:	370c      	adds	r7, #12
 8014bf6:	46bd      	mov	sp, r7
 8014bf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014bfc:	4770      	bx	lr

08014bfe <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014bfe:	b580      	push	{r7, lr}
 8014c00:	b082      	sub	sp, #8
 8014c02:	af00      	add	r7, sp, #0
 8014c04:	6078      	str	r0, [r7, #4]
 8014c06:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014c08:	687b      	ldr	r3, [r7, #4]
 8014c0a:	4618      	mov	r0, r3
 8014c0c:	f000 faf7 	bl	80151fe <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014c10:	6838      	ldr	r0, [r7, #0]
 8014c12:	f7ff ffe9 	bl	8014be8 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014c16:	4603      	mov	r3, r0
 8014c18:	4619      	mov	r1, r3
 8014c1a:	6878      	ldr	r0, [r7, #4]
 8014c1c:	f000 fbc5 	bl	80153aa <_ZSt28__variant_construct_by_indexILj4ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014c20:	6878      	ldr	r0, [r7, #4]
 8014c22:	f7ff ffc5 	bl	8014bb0 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014c26:	4603      	mov	r3, r0
	}
 8014c28:	4618      	mov	r0, r3
 8014c2a:	3708      	adds	r7, #8
 8014c2c:	46bd      	mov	sp, r7
 8014c2e:	bd80      	pop	{r7, pc}

08014c30 <_ZNSaIP9StatementEC1Ev>:
 8014c30:	b580      	push	{r7, lr}
 8014c32:	b082      	sub	sp, #8
 8014c34:	af00      	add	r7, sp, #0
 8014c36:	6078      	str	r0, [r7, #4]
 8014c38:	6878      	ldr	r0, [r7, #4]
 8014c3a:	f000 fbd5 	bl	80153e8 <_ZN9__gnu_cxx13new_allocatorIP9StatementEC1Ev>
 8014c3e:	687b      	ldr	r3, [r7, #4]
 8014c40:	4618      	mov	r0, r3
 8014c42:	3708      	adds	r7, #8
 8014c44:	46bd      	mov	sp, r7
 8014c46:	bd80      	pop	{r7, pc}

08014c48 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8014c48:	b480      	push	{r7}
 8014c4a:	b083      	sub	sp, #12
 8014c4c:	af00      	add	r7, sp, #0
 8014c4e:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8014c50:	687b      	ldr	r3, [r7, #4]
 8014c52:	2200      	movs	r2, #0
 8014c54:	601a      	str	r2, [r3, #0]
 8014c56:	687b      	ldr	r3, [r7, #4]
 8014c58:	2200      	movs	r2, #0
 8014c5a:	605a      	str	r2, [r3, #4]
 8014c5c:	687b      	ldr	r3, [r7, #4]
 8014c5e:	2200      	movs	r2, #0
 8014c60:	609a      	str	r2, [r3, #8]
	{ }
 8014c62:	687b      	ldr	r3, [r7, #4]
 8014c64:	4618      	mov	r0, r3
 8014c66:	370c      	adds	r7, #12
 8014c68:	46bd      	mov	sp, r7
 8014c6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014c6e:	4770      	bx	lr

08014c70 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8014c70:	b580      	push	{r7, lr}
 8014c72:	b084      	sub	sp, #16
 8014c74:	af00      	add	r7, sp, #0
 8014c76:	60f8      	str	r0, [r7, #12]
 8014c78:	60b9      	str	r1, [r7, #8]
 8014c7a:	607a      	str	r2, [r7, #4]
	if (__p)
 8014c7c:	68bb      	ldr	r3, [r7, #8]
 8014c7e:	2b00      	cmp	r3, #0
 8014c80:	d005      	beq.n	8014c8e <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8014c82:	68fb      	ldr	r3, [r7, #12]
 8014c84:	687a      	ldr	r2, [r7, #4]
 8014c86:	68b9      	ldr	r1, [r7, #8]
 8014c88:	4618      	mov	r0, r3
 8014c8a:	f000 fbb8 	bl	80153fe <_ZNSt16allocator_traitsISaIP9StatementEE10deallocateERS2_PS1_j>
      }
 8014c8e:	bf00      	nop
 8014c90:	3710      	adds	r7, #16
 8014c92:	46bd      	mov	sp, r7
 8014c94:	bd80      	pop	{r7, pc}

08014c96 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8014c96:	b480      	push	{r7}
 8014c98:	b083      	sub	sp, #12
 8014c9a:	af00      	add	r7, sp, #0
 8014c9c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8014c9e:	687b      	ldr	r3, [r7, #4]
 8014ca0:	4618      	mov	r0, r3
 8014ca2:	370c      	adds	r7, #12
 8014ca4:	46bd      	mov	sp, r7
 8014ca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014caa:	4770      	bx	lr

08014cac <_ZSt4moveIRP9StatementEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8014cac:	b480      	push	{r7}
 8014cae:	b083      	sub	sp, #12
 8014cb0:	af00      	add	r7, sp, #0
 8014cb2:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8014cb4:	687b      	ldr	r3, [r7, #4]
 8014cb6:	4618      	mov	r0, r3
 8014cb8:	370c      	adds	r7, #12
 8014cba:	46bd      	mov	sp, r7
 8014cbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014cc0:	4770      	bx	lr

08014cc2 <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 8014cc2:	b5b0      	push	{r4, r5, r7, lr}
 8014cc4:	b082      	sub	sp, #8
 8014cc6:	af00      	add	r7, sp, #0
 8014cc8:	6078      	str	r0, [r7, #4]
 8014cca:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8014ccc:	687b      	ldr	r3, [r7, #4]
 8014cce:	685a      	ldr	r2, [r3, #4]
 8014cd0:	687b      	ldr	r3, [r7, #4]
 8014cd2:	689b      	ldr	r3, [r3, #8]
 8014cd4:	429a      	cmp	r2, r3
 8014cd6:	d011      	beq.n	8014cfc <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8014cd8:	687c      	ldr	r4, [r7, #4]
 8014cda:	687b      	ldr	r3, [r7, #4]
 8014cdc:	685d      	ldr	r5, [r3, #4]
 8014cde:	6838      	ldr	r0, [r7, #0]
 8014ce0:	f000 fb9c 	bl	801541c <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014ce4:	4603      	mov	r3, r0
 8014ce6:	461a      	mov	r2, r3
 8014ce8:	4629      	mov	r1, r5
 8014cea:	4620      	mov	r0, r4
 8014cec:	f000 fba1 	bl	8015432 <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8014cf0:	687b      	ldr	r3, [r7, #4]
 8014cf2:	685b      	ldr	r3, [r3, #4]
 8014cf4:	1d1a      	adds	r2, r3, #4
 8014cf6:	687b      	ldr	r3, [r7, #4]
 8014cf8:	605a      	str	r2, [r3, #4]
 8014cfa:	e00c      	b.n	8014d16 <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8014cfc:	6878      	ldr	r0, [r7, #4]
 8014cfe:	f000 fbab 	bl	8015458 <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 8014d02:	4604      	mov	r4, r0
 8014d04:	6838      	ldr	r0, [r7, #0]
 8014d06:	f000 fb89 	bl	801541c <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014d0a:	4603      	mov	r3, r0
 8014d0c:	461a      	mov	r2, r3
 8014d0e:	4621      	mov	r1, r4
 8014d10:	6878      	ldr	r0, [r7, #4]
 8014d12:	f000 fbb3 	bl	801547c <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8014d16:	6878      	ldr	r0, [r7, #4]
 8014d18:	f000 fc2c 	bl	8015574 <_ZNSt6vectorIP9StatementSaIS1_EE4backEv>
 8014d1c:	4603      	mov	r3, r0
      }
 8014d1e:	4618      	mov	r0, r3
 8014d20:	3708      	adds	r7, #8
 8014d22:	46bd      	mov	sp, r7
 8014d24:	bdb0      	pop	{r4, r5, r7, pc}

08014d26 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014d26:	b480      	push	{r7}
 8014d28:	b083      	sub	sp, #12
 8014d2a:	af00      	add	r7, sp, #0
 8014d2c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014d2e:	687b      	ldr	r3, [r7, #4]
 8014d30:	4618      	mov	r0, r3
 8014d32:	370c      	adds	r7, #12
 8014d34:	46bd      	mov	sp, r7
 8014d36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d3a:	4770      	bx	lr

08014d3c <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRS8_St17integral_constantIjLj0EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014d3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014d40:	b084      	sub	sp, #16
 8014d42:	af00      	add	r7, sp, #0
 8014d44:	60f8      	str	r0, [r7, #12]
 8014d46:	60b9      	str	r1, [r7, #8]
 8014d48:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014d4a:	68f8      	ldr	r0, [r7, #12]
 8014d4c:	f000 f879 	bl	8014e42 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014d50:	4604      	mov	r4, r0
 8014d52:	68b8      	ldr	r0, [r7, #8]
 8014d54:	f7f1 f9a1 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8014d58:	4605      	mov	r5, r0
 8014d5a:	6878      	ldr	r0, [r7, #4]
 8014d5c:	f7f5 fa4a 	bl	800a1f4 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014d60:	4603      	mov	r3, r0
 8014d62:	462a      	mov	r2, r5
 8014d64:	4621      	mov	r1, r4
 8014d66:	4630      	mov	r0, r6
 8014d68:	f000 fc1f 	bl	80155aa <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRS9_St17integral_constantIjLj0EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014d6c:	4643      	mov	r3, r8
    }
 8014d6e:	4618      	mov	r0, r3
 8014d70:	3710      	adds	r7, #16
 8014d72:	46bd      	mov	sp, r7
 8014d74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014d78 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014d78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014d7c:	b084      	sub	sp, #16
 8014d7e:	af00      	add	r7, sp, #0
 8014d80:	60f8      	str	r0, [r7, #12]
 8014d82:	60b9      	str	r1, [r7, #8]
 8014d84:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014d86:	68f8      	ldr	r0, [r7, #12]
 8014d88:	f000 f85b 	bl	8014e42 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014d8c:	4604      	mov	r4, r0
 8014d8e:	68b8      	ldr	r0, [r7, #8]
 8014d90:	f7f1 f933 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8014d94:	4605      	mov	r5, r0
 8014d96:	6878      	ldr	r0, [r7, #4]
 8014d98:	f7f5 fa55 	bl	800a246 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014d9c:	4603      	mov	r3, r0
 8014d9e:	462a      	mov	r2, r5
 8014da0:	4621      	mov	r1, r4
 8014da2:	4630      	mov	r0, r6
 8014da4:	f000 fc1f 	bl	80155e6 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014da8:	4643      	mov	r3, r8
    }
 8014daa:	4618      	mov	r0, r3
 8014dac:	3710      	adds	r7, #16
 8014dae:	46bd      	mov	sp, r7
 8014db0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014db4 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014db4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014db8:	b084      	sub	sp, #16
 8014dba:	af00      	add	r7, sp, #0
 8014dbc:	60f8      	str	r0, [r7, #12]
 8014dbe:	60b9      	str	r1, [r7, #8]
 8014dc0:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014dc2:	68f8      	ldr	r0, [r7, #12]
 8014dc4:	f000 f83d 	bl	8014e42 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014dc8:	4604      	mov	r4, r0
 8014dca:	68b8      	ldr	r0, [r7, #8]
 8014dcc:	f7f1 f937 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8014dd0:	4605      	mov	r5, r0
 8014dd2:	6878      	ldr	r0, [r7, #4]
 8014dd4:	f7f5 fa60 	bl	800a298 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014dd8:	4603      	mov	r3, r0
 8014dda:	462a      	mov	r2, r5
 8014ddc:	4621      	mov	r1, r4
 8014dde:	4630      	mov	r0, r6
 8014de0:	f000 fc1f 	bl	8015622 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014de4:	4643      	mov	r3, r8
    }
 8014de6:	4618      	mov	r0, r3
 8014de8:	3710      	adds	r7, #16
 8014dea:	46bd      	mov	sp, r7
 8014dec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014df0 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014df0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014df4:	b084      	sub	sp, #16
 8014df6:	af00      	add	r7, sp, #0
 8014df8:	60f8      	str	r0, [r7, #12]
 8014dfa:	60b9      	str	r1, [r7, #8]
 8014dfc:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014dfe:	68f8      	ldr	r0, [r7, #12]
 8014e00:	f000 f81f 	bl	8014e42 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014e04:	4604      	mov	r4, r0
 8014e06:	68b8      	ldr	r0, [r7, #8]
 8014e08:	f7f1 f8d5 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8014e0c:	4605      	mov	r5, r0
 8014e0e:	6878      	ldr	r0, [r7, #4]
 8014e10:	f7f5 fa6b 	bl	800a2ea <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014e14:	4603      	mov	r3, r0
 8014e16:	462a      	mov	r2, r5
 8014e18:	4621      	mov	r1, r4
 8014e1a:	4630      	mov	r0, r6
 8014e1c:	f000 fc1f 	bl	801565e <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014e20:	4643      	mov	r3, r8
    }
 8014e22:	4618      	mov	r0, r3
 8014e24:	3710      	adds	r7, #16
 8014e26:	46bd      	mov	sp, r7
 8014e28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014e2c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 8014e2c:	b480      	push	{r7}
 8014e2e:	b083      	sub	sp, #12
 8014e30:	af00      	add	r7, sp, #0
 8014e32:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8014e34:	687b      	ldr	r3, [r7, #4]
 8014e36:	4618      	mov	r0, r3
 8014e38:	370c      	adds	r7, #12
 8014e3a:	46bd      	mov	sp, r7
 8014e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e40:	4770      	bx	lr

08014e42 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014e42:	b480      	push	{r7}
 8014e44:	b083      	sub	sp, #12
 8014e46:	af00      	add	r7, sp, #0
 8014e48:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014e4a:	687b      	ldr	r3, [r7, #4]
 8014e4c:	4618      	mov	r0, r3
 8014e4e:	370c      	adds	r7, #12
 8014e50:	46bd      	mov	sp, r7
 8014e52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e56:	4770      	bx	lr

08014e58 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014e58:	b480      	push	{r7}
 8014e5a:	b083      	sub	sp, #12
 8014e5c:	af00      	add	r7, sp, #0
 8014e5e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014e60:	687b      	ldr	r3, [r7, #4]
 8014e62:	4618      	mov	r0, r3
 8014e64:	370c      	adds	r7, #12
 8014e66:	46bd      	mov	sp, r7
 8014e68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e6c:	4770      	bx	lr

08014e6e <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8014e6e:	b580      	push	{r7, lr}
 8014e70:	b084      	sub	sp, #16
 8014e72:	af00      	add	r7, sp, #0
 8014e74:	60f8      	str	r0, [r7, #12]
 8014e76:	60b9      	str	r1, [r7, #8]
 8014e78:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8014e7a:	6878      	ldr	r0, [r7, #4]
 8014e7c:	f7ff ffec 	bl	8014e58 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014e80:	4603      	mov	r3, r0
 8014e82:	461a      	mov	r2, r3
 8014e84:	68b9      	ldr	r1, [r7, #8]
 8014e86:	68f8      	ldr	r0, [r7, #12]
 8014e88:	f000 fc07 	bl	801569a <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 8014e8c:	bf00      	nop
 8014e8e:	3710      	adds	r7, #16
 8014e90:	46bd      	mov	sp, r7
 8014e92:	bd80      	pop	{r7, pc}

08014e94 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8014e94:	b580      	push	{r7, lr}
 8014e96:	b084      	sub	sp, #16
 8014e98:	af00      	add	r7, sp, #0
 8014e9a:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8014e9c:	687b      	ldr	r3, [r7, #4]
 8014e9e:	1d1a      	adds	r2, r3, #4
 8014ea0:	f107 030c 	add.w	r3, r7, #12
 8014ea4:	4611      	mov	r1, r2
 8014ea6:	4618      	mov	r0, r3
 8014ea8:	f000 fc0d 	bl	80156c6 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8014eac:	68fb      	ldr	r3, [r7, #12]
 8014eae:	4618      	mov	r0, r3
 8014eb0:	3710      	adds	r7, #16
 8014eb2:	46bd      	mov	sp, r7
 8014eb4:	bd80      	pop	{r7, pc}
	...

08014eb8 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      void
      vector<_Tp, _Alloc>::
 8014eb8:	b5b0      	push	{r4, r5, r7, lr}
 8014eba:	b08c      	sub	sp, #48	; 0x30
 8014ebc:	af00      	add	r7, sp, #0
 8014ebe:	60f8      	str	r0, [r7, #12]
 8014ec0:	60b9      	str	r1, [r7, #8]
 8014ec2:	607a      	str	r2, [r7, #4]
    void
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
 8014ec4:	4a39      	ldr	r2, [pc, #228]	; (8014fac <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 8014ec6:	2101      	movs	r1, #1
 8014ec8:	68f8      	ldr	r0, [r7, #12]
 8014eca:	f000 fc0c 	bl	80156e6 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc>
 8014ece:	62f8      	str	r0, [r7, #44]	; 0x2c
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
      pointer __old_start = this->_M_impl._M_start;
 8014ed0:	68fb      	ldr	r3, [r7, #12]
 8014ed2:	681b      	ldr	r3, [r3, #0]
 8014ed4:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 8014ed6:	68fb      	ldr	r3, [r7, #12]
 8014ed8:	685b      	ldr	r3, [r3, #4]
 8014eda:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8014edc:	68f8      	ldr	r0, [r7, #12]
 8014ede:	f000 fc49 	bl	8015774 <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 8014ee2:	4603      	mov	r3, r0
 8014ee4:	617b      	str	r3, [r7, #20]
 8014ee6:	f107 0214 	add.w	r2, r7, #20
 8014eea:	f107 0308 	add.w	r3, r7, #8
 8014eee:	4611      	mov	r1, r2
 8014ef0:	4618      	mov	r0, r3
 8014ef2:	f000 fc4f 	bl	8015794 <_ZN9__gnu_cxxmiIPP10ExpressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 8014ef6:	4603      	mov	r3, r0
 8014ef8:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8014efa:	68fb      	ldr	r3, [r7, #12]
 8014efc:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8014efe:	4618      	mov	r0, r3
 8014f00:	f7fa fdc3 	bl	800fa8a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 8014f04:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 8014f06:	69fb      	ldr	r3, [r7, #28]
 8014f08:	61bb      	str	r3, [r7, #24]
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
 8014f0a:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8014f0c:	6a3b      	ldr	r3, [r7, #32]
 8014f0e:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 8014f10:	69fa      	ldr	r2, [r7, #28]
 8014f12:	18d5      	adds	r5, r2, r3
 8014f14:	6878      	ldr	r0, [r7, #4]
 8014f16:	f7ff ff9f 	bl	8014e58 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014f1a:	4603      	mov	r3, r0
 8014f1c:	461a      	mov	r2, r3
 8014f1e:	4629      	mov	r1, r5
 8014f20:	4620      	mov	r0, r4
 8014f22:	f7ff ffa4 	bl	8014e6e <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
 8014f26:	2300      	movs	r3, #0
 8014f28:	61bb      	str	r3, [r7, #24]

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014f2a:	f107 0308 	add.w	r3, r7, #8
 8014f2e:	4618      	mov	r0, r3
 8014f30:	f000 fc59 	bl	80157e6 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8014f34:	4603      	mov	r3, r0
 8014f36:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 8014f38:	68fb      	ldr	r3, [r7, #12]
 8014f3a:	4618      	mov	r0, r3
 8014f3c:	f7fa fbe1 	bl	800f702 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8014f40:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014f42:	69fa      	ldr	r2, [r7, #28]
 8014f44:	4621      	mov	r1, r4
 8014f46:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8014f48:	f000 fc39 	bl	80157be <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014f4c:	61b8      	str	r0, [r7, #24]

	      ++__new_finish;
 8014f4e:	69bb      	ldr	r3, [r7, #24]
 8014f50:	3304      	adds	r3, #4
 8014f52:	61bb      	str	r3, [r7, #24]

	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014f54:	f107 0308 	add.w	r3, r7, #8
 8014f58:	4618      	mov	r0, r3
 8014f5a:	f000 fc44 	bl	80157e6 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8014f5e:	4603      	mov	r3, r0
 8014f60:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 8014f62:	68fb      	ldr	r3, [r7, #12]
 8014f64:	4618      	mov	r0, r3
 8014f66:	f7fa fbcc 	bl	800f702 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8014f6a:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014f6c:	69ba      	ldr	r2, [r7, #24]
 8014f6e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8014f70:	4620      	mov	r0, r4
 8014f72:	f000 fc24 	bl	80157be <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014f76:	61b8      	str	r0, [r7, #24]
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
 8014f78:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 8014f7a:	68fb      	ldr	r3, [r7, #12]
 8014f7c:	689a      	ldr	r2, [r3, #8]
 8014f7e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8014f80:	1ad3      	subs	r3, r2, r3
 8014f82:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 8014f84:	461a      	mov	r2, r3
 8014f86:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8014f88:	f7fa fcd6 	bl	800f938 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 8014f8c:	68fb      	ldr	r3, [r7, #12]
 8014f8e:	69fa      	ldr	r2, [r7, #28]
 8014f90:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 8014f92:	68fb      	ldr	r3, [r7, #12]
 8014f94:	69ba      	ldr	r2, [r7, #24]
 8014f96:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8014f98:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8014f9a:	009b      	lsls	r3, r3, #2
 8014f9c:	69fa      	ldr	r2, [r7, #28]
 8014f9e:	441a      	add	r2, r3
 8014fa0:	68fb      	ldr	r3, [r7, #12]
 8014fa2:	609a      	str	r2, [r3, #8]
    }
 8014fa4:	bf00      	nop
 8014fa6:	3730      	adds	r7, #48	; 0x30
 8014fa8:	46bd      	mov	sp, r7
 8014faa:	bdb0      	pop	{r4, r5, r7, pc}
 8014fac:	080277b8 	.word	0x080277b8

08014fb0 <_ZNSt6vectorIP10ExpressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 8014fb0:	b580      	push	{r7, lr}
 8014fb2:	b084      	sub	sp, #16
 8014fb4:	af00      	add	r7, sp, #0
 8014fb6:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 8014fb8:	6878      	ldr	r0, [r7, #4]
 8014fba:	f7ff ff6b 	bl	8014e94 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 8014fbe:	4603      	mov	r3, r0
 8014fc0:	60fb      	str	r3, [r7, #12]
 8014fc2:	f107 030c 	add.w	r3, r7, #12
 8014fc6:	2101      	movs	r1, #1
 8014fc8:	4618      	mov	r0, r3
 8014fca:	f000 fc17 	bl	80157fc <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEmiEi>
 8014fce:	4603      	mov	r3, r0
 8014fd0:	60bb      	str	r3, [r7, #8]
 8014fd2:	f107 0308 	add.w	r3, r7, #8
 8014fd6:	4618      	mov	r0, r3
 8014fd8:	f000 fc29 	bl	801582e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 8014fdc:	4603      	mov	r3, r0
      }
 8014fde:	4618      	mov	r0, r3
 8014fe0:	3710      	adds	r7, #16
 8014fe2:	46bd      	mov	sp, r7
 8014fe4:	bd80      	pop	{r7, pc}

08014fe6 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014fe6:	b480      	push	{r7}
 8014fe8:	b083      	sub	sp, #12
 8014fea:	af00      	add	r7, sp, #0
 8014fec:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014fee:	687b      	ldr	r3, [r7, #4]
 8014ff0:	4618      	mov	r0, r3
 8014ff2:	370c      	adds	r7, #12
 8014ff4:	46bd      	mov	sp, r7
 8014ff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ffa:	4770      	bx	lr

08014ffc <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8014ffc:	b580      	push	{r7, lr}
 8014ffe:	b084      	sub	sp, #16
 8015000:	af00      	add	r7, sp, #0
 8015002:	60f8      	str	r0, [r7, #12]
 8015004:	60b9      	str	r1, [r7, #8]
 8015006:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8015008:	6878      	ldr	r0, [r7, #4]
 801500a:	f7ff ffec 	bl	8014fe6 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 801500e:	4603      	mov	r3, r0
 8015010:	461a      	mov	r2, r3
 8015012:	68b9      	ldr	r1, [r7, #8]
 8015014:	68f8      	ldr	r0, [r7, #12]
 8015016:	f000 fc16 	bl	8015846 <_ZN9__gnu_cxx13new_allocatorIP4BodyE9constructIS2_JS2_EEEvPT_DpOT0_>
 801501a:	bf00      	nop
 801501c:	3710      	adds	r7, #16
 801501e:	46bd      	mov	sp, r7
 8015020:	bd80      	pop	{r7, pc}

08015022 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8015022:	b580      	push	{r7, lr}
 8015024:	b084      	sub	sp, #16
 8015026:	af00      	add	r7, sp, #0
 8015028:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 801502a:	687b      	ldr	r3, [r7, #4]
 801502c:	1d1a      	adds	r2, r3, #4
 801502e:	f107 030c 	add.w	r3, r7, #12
 8015032:	4611      	mov	r1, r2
 8015034:	4618      	mov	r0, r3
 8015036:	f000 fc1c 	bl	8015872 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801503a:	68fb      	ldr	r3, [r7, #12]
 801503c:	4618      	mov	r0, r3
 801503e:	3710      	adds	r7, #16
 8015040:	46bd      	mov	sp, r7
 8015042:	bd80      	pop	{r7, pc}

08015044 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 8015044:	b5b0      	push	{r4, r5, r7, lr}
 8015046:	b08c      	sub	sp, #48	; 0x30
 8015048:	af00      	add	r7, sp, #0
 801504a:	60f8      	str	r0, [r7, #12]
 801504c:	60b9      	str	r1, [r7, #8]
 801504e:	607a      	str	r2, [r7, #4]
      const size_type __len =
 8015050:	4a39      	ldr	r2, [pc, #228]	; (8015138 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 8015052:	2101      	movs	r1, #1
 8015054:	68f8      	ldr	r0, [r7, #12]
 8015056:	f000 fc1c 	bl	8015892 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc>
 801505a:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801505c:	68fb      	ldr	r3, [r7, #12]
 801505e:	681b      	ldr	r3, [r3, #0]
 8015060:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 8015062:	68fb      	ldr	r3, [r7, #12]
 8015064:	685b      	ldr	r3, [r3, #4]
 8015066:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8015068:	68f8      	ldr	r0, [r7, #12]
 801506a:	f000 fc59 	bl	8015920 <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>
 801506e:	4603      	mov	r3, r0
 8015070:	617b      	str	r3, [r7, #20]
 8015072:	f107 0214 	add.w	r2, r7, #20
 8015076:	f107 0308 	add.w	r3, r7, #8
 801507a:	4611      	mov	r1, r2
 801507c:	4618      	mov	r0, r3
 801507e:	f000 fc5f 	bl	8015940 <_ZN9__gnu_cxxmiIPP4BodySt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 8015082:	4603      	mov	r3, r0
 8015084:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8015086:	68fb      	ldr	r3, [r7, #12]
 8015088:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801508a:	4618      	mov	r0, r3
 801508c:	f000 fc6d 	bl	801596a <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj>
 8015090:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 8015092:	69fb      	ldr	r3, [r7, #28]
 8015094:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 8015096:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8015098:	6a3b      	ldr	r3, [r7, #32]
 801509a:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801509c:	69fa      	ldr	r2, [r7, #28]
 801509e:	18d5      	adds	r5, r2, r3
 80150a0:	6878      	ldr	r0, [r7, #4]
 80150a2:	f7ff ffa0 	bl	8014fe6 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 80150a6:	4603      	mov	r3, r0
 80150a8:	461a      	mov	r2, r3
 80150aa:	4629      	mov	r1, r5
 80150ac:	4620      	mov	r0, r4
 80150ae:	f7ff ffa5 	bl	8014ffc <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 80150b2:	2300      	movs	r3, #0
 80150b4:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 80150b6:	f107 0308 	add.w	r3, r7, #8
 80150ba:	4618      	mov	r0, r3
 80150bc:	f000 fc7d 	bl	80159ba <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 80150c0:	4603      	mov	r3, r0
 80150c2:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 80150c4:	68fb      	ldr	r3, [r7, #12]
 80150c6:	4618      	mov	r0, r3
 80150c8:	f7ff fad9 	bl	801467e <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 80150cc:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 80150ce:	69fa      	ldr	r2, [r7, #28]
 80150d0:	4621      	mov	r1, r4
 80150d2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80150d4:	f000 fc5d 	bl	8015992 <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 80150d8:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 80150da:	69bb      	ldr	r3, [r7, #24]
 80150dc:	3304      	adds	r3, #4
 80150de:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 80150e0:	f107 0308 	add.w	r3, r7, #8
 80150e4:	4618      	mov	r0, r3
 80150e6:	f000 fc68 	bl	80159ba <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 80150ea:	4603      	mov	r3, r0
 80150ec:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 80150ee:	68fb      	ldr	r3, [r7, #12]
 80150f0:	4618      	mov	r0, r3
 80150f2:	f7ff fac4 	bl	801467e <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 80150f6:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 80150f8:	69ba      	ldr	r2, [r7, #24]
 80150fa:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80150fc:	4620      	mov	r0, r4
 80150fe:	f000 fc48 	bl	8015992 <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8015102:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 8015104:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 8015106:	68fb      	ldr	r3, [r7, #12]
 8015108:	689a      	ldr	r2, [r3, #8]
 801510a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801510c:	1ad3      	subs	r3, r2, r3
 801510e:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 8015110:	461a      	mov	r2, r3
 8015112:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8015114:	f7ff faa0 	bl	8014658 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 8015118:	68fb      	ldr	r3, [r7, #12]
 801511a:	69fa      	ldr	r2, [r7, #28]
 801511c:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801511e:	68fb      	ldr	r3, [r7, #12]
 8015120:	69ba      	ldr	r2, [r7, #24]
 8015122:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8015124:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8015126:	009b      	lsls	r3, r3, #2
 8015128:	69fa      	ldr	r2, [r7, #28]
 801512a:	441a      	add	r2, r3
 801512c:	68fb      	ldr	r3, [r7, #12]
 801512e:	609a      	str	r2, [r3, #8]
    }
 8015130:	bf00      	nop
 8015132:	3730      	adds	r7, #48	; 0x30
 8015134:	46bd      	mov	sp, r7
 8015136:	bdb0      	pop	{r4, r5, r7, pc}
 8015138:	080277b8 	.word	0x080277b8

0801513c <_ZNSt6vectorIP4BodySaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801513c:	b580      	push	{r7, lr}
 801513e:	b084      	sub	sp, #16
 8015140:	af00      	add	r7, sp, #0
 8015142:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 8015144:	6878      	ldr	r0, [r7, #4]
 8015146:	f7ff ff6c 	bl	8015022 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 801514a:	4603      	mov	r3, r0
 801514c:	60fb      	str	r3, [r7, #12]
 801514e:	f107 030c 	add.w	r3, r7, #12
 8015152:	2101      	movs	r1, #1
 8015154:	4618      	mov	r0, r3
 8015156:	f000 fc3b 	bl	80159d0 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEmiEi>
 801515a:	4603      	mov	r3, r0
 801515c:	60bb      	str	r3, [r7, #8]
 801515e:	f107 0308 	add.w	r3, r7, #8
 8015162:	4618      	mov	r0, r3
 8015164:	f000 fc4d 	bl	8015a02 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>
 8015168:	4603      	mov	r3, r0
      }
 801516a:	4618      	mov	r0, r3
 801516c:	3710      	adds	r7, #16
 801516e:	46bd      	mov	sp, r7
 8015170:	bd80      	pop	{r7, pc}

08015172 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8015172:	b480      	push	{r7}
 8015174:	b083      	sub	sp, #12
 8015176:	af00      	add	r7, sp, #0
 8015178:	6078      	str	r0, [r7, #4]
 801517a:	687b      	ldr	r3, [r7, #4]
 801517c:	4618      	mov	r0, r3
 801517e:	370c      	adds	r7, #12
 8015180:	46bd      	mov	sp, r7
 8015182:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015186:	4770      	bx	lr

08015188 <_ZN9__gnu_cxx13new_allocatorIP4BodyEC1Ev>:
 8015188:	b480      	push	{r7}
 801518a:	b083      	sub	sp, #12
 801518c:	af00      	add	r7, sp, #0
 801518e:	6078      	str	r0, [r7, #4]
 8015190:	687b      	ldr	r3, [r7, #4]
 8015192:	4618      	mov	r0, r3
 8015194:	370c      	adds	r7, #12
 8015196:	46bd      	mov	sp, r7
 8015198:	f85d 7b04 	ldr.w	r7, [sp], #4
 801519c:	4770      	bx	lr

0801519e <_ZNSt16allocator_traitsISaIP4BodyEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 801519e:	b580      	push	{r7, lr}
 80151a0:	b084      	sub	sp, #16
 80151a2:	af00      	add	r7, sp, #0
 80151a4:	60f8      	str	r0, [r7, #12]
 80151a6:	60b9      	str	r1, [r7, #8]
 80151a8:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80151aa:	687a      	ldr	r2, [r7, #4]
 80151ac:	68b9      	ldr	r1, [r7, #8]
 80151ae:	68f8      	ldr	r0, [r7, #12]
 80151b0:	f000 fc33 	bl	8015a1a <_ZN9__gnu_cxx13new_allocatorIP4BodyE10deallocateEPS2_j>
 80151b4:	bf00      	nop
 80151b6:	3710      	adds	r7, #16
 80151b8:	46bd      	mov	sp, r7
 80151ba:	bd80      	pop	{r7, pc}

080151bc <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80151bc:	b480      	push	{r7}
 80151be:	b083      	sub	sp, #12
 80151c0:	af00      	add	r7, sp, #0
 80151c2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80151c4:	687b      	ldr	r3, [r7, #4]
 80151c6:	4618      	mov	r0, r3
 80151c8:	370c      	adds	r7, #12
 80151ca:	46bd      	mov	sp, r7
 80151cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80151d0:	4770      	bx	lr

080151d2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80151d2:	b480      	push	{r7}
 80151d4:	b083      	sub	sp, #12
 80151d6:	af00      	add	r7, sp, #0
 80151d8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80151da:	687b      	ldr	r3, [r7, #4]
 80151dc:	4618      	mov	r0, r3
 80151de:	370c      	adds	r7, #12
 80151e0:	46bd      	mov	sp, r7
 80151e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80151e6:	4770      	bx	lr

080151e8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80151e8:	b480      	push	{r7}
 80151ea:	b083      	sub	sp, #12
 80151ec:	af00      	add	r7, sp, #0
 80151ee:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80151f0:	687b      	ldr	r3, [r7, #4]
 80151f2:	4618      	mov	r0, r3
 80151f4:	370c      	adds	r7, #12
 80151f6:	46bd      	mov	sp, r7
 80151f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80151fc:	4770      	bx	lr

080151fe <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>:
      void _M_reset()
 80151fe:	b480      	push	{r7}
 8015200:	b083      	sub	sp, #12
 8015202:	af00      	add	r7, sp, #0
 8015204:	6078      	str	r0, [r7, #4]
      { _M_index = variant_npos; }
 8015206:	687b      	ldr	r3, [r7, #4]
 8015208:	22ff      	movs	r2, #255	; 0xff
 801520a:	711a      	strb	r2, [r3, #4]
 801520c:	bf00      	nop
 801520e:	370c      	adds	r7, #12
 8015210:	46bd      	mov	sp, r7
 8015212:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015216:	4770      	bx	lr

08015218 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS4_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8015218:	b590      	push	{r4, r7, lr}
 801521a:	b085      	sub	sp, #20
 801521c:	af00      	add	r7, sp, #0
 801521e:	6078      	str	r0, [r7, #4]
 8015220:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8015222:	687b      	ldr	r3, [r7, #4]
 8015224:	2201      	movs	r2, #1
 8015226:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8015228:	6878      	ldr	r0, [r7, #4]
 801522a:	f7ff fa56 	bl	80146da <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 801522e:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8015230:	6838      	ldr	r0, [r7, #0]
 8015232:	f7ff fa7f 	bl	8014734 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8015236:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8015238:	681c      	ldr	r4, [r3, #0]
 801523a:	68f8      	ldr	r0, [r7, #12]
 801523c:	f000 fbf9 	bl	8015a32 <_ZSt9addressofIP13Function_callEPT_RS2_>
 8015240:	4603      	mov	r3, r0
 8015242:	4619      	mov	r1, r3
 8015244:	2004      	movs	r0, #4
 8015246:	f7eb ff08 	bl	800105a <_ZnwjPv>
 801524a:	4603      	mov	r3, r0
 801524c:	601c      	str	r4, [r3, #0]
    }
 801524e:	bf00      	nop
 8015250:	3714      	adds	r7, #20
 8015252:	46bd      	mov	sp, r7
 8015254:	bd90      	pop	{r4, r7, pc}

08015256 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8015256:	b480      	push	{r7}
 8015258:	b083      	sub	sp, #12
 801525a:	af00      	add	r7, sp, #0
 801525c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801525e:	687b      	ldr	r3, [r7, #4]
 8015260:	4618      	mov	r0, r3
 8015262:	370c      	adds	r7, #12
 8015264:	46bd      	mov	sp, r7
 8015266:	f85d 7b04 	ldr.w	r7, [sp], #4
 801526a:	4770      	bx	lr

0801526c <_ZNRSt8__detail9__variant14_UninitializedIP11Method_callLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 801526c:	b480      	push	{r7}
 801526e:	b083      	sub	sp, #12
 8015270:	af00      	add	r7, sp, #0
 8015272:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8015274:	687b      	ldr	r3, [r7, #4]
 8015276:	4618      	mov	r0, r3
 8015278:	370c      	adds	r7, #12
 801527a:	46bd      	mov	sp, r7
 801527c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015280:	4770      	bx	lr

08015282 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8015282:	b590      	push	{r4, r7, lr}
 8015284:	b085      	sub	sp, #20
 8015286:	af00      	add	r7, sp, #0
 8015288:	6078      	str	r0, [r7, #4]
 801528a:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801528c:	687b      	ldr	r3, [r7, #4]
 801528e:	2202      	movs	r2, #2
 8015290:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8015292:	6878      	ldr	r0, [r7, #4]
 8015294:	f7ff faa7 	bl	80147e6 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8015298:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801529a:	6838      	ldr	r0, [r7, #0]
 801529c:	f7ff fad0 	bl	8014840 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 80152a0:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80152a2:	681c      	ldr	r4, [r3, #0]
 80152a4:	68f8      	ldr	r0, [r7, #12]
 80152a6:	f000 fbd0 	bl	8015a4a <_ZSt9addressofIP11Method_callEPT_RS2_>
 80152aa:	4603      	mov	r3, r0
 80152ac:	4619      	mov	r1, r3
 80152ae:	2004      	movs	r0, #4
 80152b0:	f7eb fed3 	bl	800105a <_ZnwjPv>
 80152b4:	4603      	mov	r3, r0
 80152b6:	601c      	str	r4, [r3, #0]
    }
 80152b8:	bf00      	nop
 80152ba:	3714      	adds	r7, #20
 80152bc:	46bd      	mov	sp, r7
 80152be:	bd90      	pop	{r4, r7, pc}

080152c0 <_ZNRSt8__detail9__variant14_UninitializedIP10AssignmentLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 80152c0:	b480      	push	{r7}
 80152c2:	b083      	sub	sp, #12
 80152c4:	af00      	add	r7, sp, #0
 80152c6:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 80152c8:	687b      	ldr	r3, [r7, #4]
 80152ca:	4618      	mov	r0, r3
 80152cc:	370c      	adds	r7, #12
 80152ce:	46bd      	mov	sp, r7
 80152d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80152d4:	4770      	bx	lr

080152d6 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS2_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80152d6:	b590      	push	{r4, r7, lr}
 80152d8:	b085      	sub	sp, #20
 80152da:	af00      	add	r7, sp, #0
 80152dc:	6078      	str	r0, [r7, #4]
 80152de:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80152e0:	687b      	ldr	r3, [r7, #4]
 80152e2:	2200      	movs	r2, #0
 80152e4:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80152e6:	6878      	ldr	r0, [r7, #4]
 80152e8:	f7ff fadf 	bl	80148aa <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 80152ec:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80152ee:	6838      	ldr	r0, [r7, #0]
 80152f0:	f7ff fb08 	bl	8014904 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 80152f4:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80152f6:	681c      	ldr	r4, [r3, #0]
 80152f8:	68f8      	ldr	r0, [r7, #12]
 80152fa:	f000 fbb2 	bl	8015a62 <_ZSt9addressofIP10AssignmentEPT_RS2_>
 80152fe:	4603      	mov	r3, r0
 8015300:	4619      	mov	r1, r3
 8015302:	2004      	movs	r0, #4
 8015304:	f7eb fea9 	bl	800105a <_ZnwjPv>
 8015308:	4603      	mov	r3, r0
 801530a:	601c      	str	r4, [r3, #0]
    }
 801530c:	bf00      	nop
 801530e:	3714      	adds	r7, #20
 8015310:	46bd      	mov	sp, r7
 8015312:	bd90      	pop	{r4, r7, pc}

08015314 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8015314:	b480      	push	{r7}
 8015316:	b083      	sub	sp, #12
 8015318:	af00      	add	r7, sp, #0
 801531a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801531c:	687b      	ldr	r3, [r7, #4]
 801531e:	4618      	mov	r0, r3
 8015320:	370c      	adds	r7, #12
 8015322:	46bd      	mov	sp, r7
 8015324:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015328:	4770      	bx	lr

0801532a <_ZNRSt8__detail9__variant14_UninitializedIP15While_statementLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 801532a:	b480      	push	{r7}
 801532c:	b083      	sub	sp, #12
 801532e:	af00      	add	r7, sp, #0
 8015330:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8015332:	687b      	ldr	r3, [r7, #4]
 8015334:	4618      	mov	r0, r3
 8015336:	370c      	adds	r7, #12
 8015338:	46bd      	mov	sp, r7
 801533a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801533e:	4770      	bx	lr

08015340 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS8_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8015340:	b590      	push	{r4, r7, lr}
 8015342:	b085      	sub	sp, #20
 8015344:	af00      	add	r7, sp, #0
 8015346:	6078      	str	r0, [r7, #4]
 8015348:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801534a:	687b      	ldr	r3, [r7, #4]
 801534c:	2203      	movs	r2, #3
 801534e:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8015350:	6878      	ldr	r0, [r7, #4]
 8015352:	f7ff fb72 	bl	8014a3a <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8015356:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8015358:	6838      	ldr	r0, [r7, #0]
 801535a:	f7ff fb9b 	bl	8014a94 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 801535e:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8015360:	681c      	ldr	r4, [r3, #0]
 8015362:	68f8      	ldr	r0, [r7, #12]
 8015364:	f000 fb89 	bl	8015a7a <_ZSt9addressofIP15While_statementEPT_RS2_>
 8015368:	4603      	mov	r3, r0
 801536a:	4619      	mov	r1, r3
 801536c:	2004      	movs	r0, #4
 801536e:	f7eb fe74 	bl	800105a <_ZnwjPv>
 8015372:	4603      	mov	r3, r0
 8015374:	601c      	str	r4, [r3, #0]
    }
 8015376:	bf00      	nop
 8015378:	3714      	adds	r7, #20
 801537a:	46bd      	mov	sp, r7
 801537c:	bd90      	pop	{r4, r7, pc}

0801537e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP12If_statementEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801537e:	b480      	push	{r7}
 8015380:	b083      	sub	sp, #12
 8015382:	af00      	add	r7, sp, #0
 8015384:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8015386:	687b      	ldr	r3, [r7, #4]
 8015388:	4618      	mov	r0, r3
 801538a:	370c      	adds	r7, #12
 801538c:	46bd      	mov	sp, r7
 801538e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015392:	4770      	bx	lr

08015394 <_ZNRSt8__detail9__variant14_UninitializedIP12If_statementLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8015394:	b480      	push	{r7}
 8015396:	b083      	sub	sp, #12
 8015398:	af00      	add	r7, sp, #0
 801539a:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 801539c:	687b      	ldr	r3, [r7, #4]
 801539e:	4618      	mov	r0, r3
 80153a0:	370c      	adds	r7, #12
 80153a2:	46bd      	mov	sp, r7
 80153a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80153a8:	4770      	bx	lr

080153aa <_ZSt28__variant_construct_by_indexILj4ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80153aa:	b590      	push	{r4, r7, lr}
 80153ac:	b085      	sub	sp, #20
 80153ae:	af00      	add	r7, sp, #0
 80153b0:	6078      	str	r0, [r7, #4]
 80153b2:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80153b4:	687b      	ldr	r3, [r7, #4]
 80153b6:	2204      	movs	r2, #4
 80153b8:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80153ba:	6878      	ldr	r0, [r7, #4]
 80153bc:	f7ff fbe7 	bl	8014b8e <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 80153c0:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80153c2:	6838      	ldr	r0, [r7, #0]
 80153c4:	f7ff fc10 	bl	8014be8 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 80153c8:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80153ca:	681c      	ldr	r4, [r3, #0]
 80153cc:	68f8      	ldr	r0, [r7, #12]
 80153ce:	f000 fb60 	bl	8015a92 <_ZSt9addressofIP12If_statementEPT_RS2_>
 80153d2:	4603      	mov	r3, r0
 80153d4:	4619      	mov	r1, r3
 80153d6:	2004      	movs	r0, #4
 80153d8:	f7eb fe3f 	bl	800105a <_ZnwjPv>
 80153dc:	4603      	mov	r3, r0
 80153de:	601c      	str	r4, [r3, #0]
    }
 80153e0:	bf00      	nop
 80153e2:	3714      	adds	r7, #20
 80153e4:	46bd      	mov	sp, r7
 80153e6:	bd90      	pop	{r4, r7, pc}

080153e8 <_ZN9__gnu_cxx13new_allocatorIP9StatementEC1Ev>:
 80153e8:	b480      	push	{r7}
 80153ea:	b083      	sub	sp, #12
 80153ec:	af00      	add	r7, sp, #0
 80153ee:	6078      	str	r0, [r7, #4]
 80153f0:	687b      	ldr	r3, [r7, #4]
 80153f2:	4618      	mov	r0, r3
 80153f4:	370c      	adds	r7, #12
 80153f6:	46bd      	mov	sp, r7
 80153f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80153fc:	4770      	bx	lr

080153fe <_ZNSt16allocator_traitsISaIP9StatementEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 80153fe:	b580      	push	{r7, lr}
 8015400:	b084      	sub	sp, #16
 8015402:	af00      	add	r7, sp, #0
 8015404:	60f8      	str	r0, [r7, #12]
 8015406:	60b9      	str	r1, [r7, #8]
 8015408:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 801540a:	687a      	ldr	r2, [r7, #4]
 801540c:	68b9      	ldr	r1, [r7, #8]
 801540e:	68f8      	ldr	r0, [r7, #12]
 8015410:	f000 fb4b 	bl	8015aaa <_ZN9__gnu_cxx13new_allocatorIP9StatementE10deallocateEPS2_j>
 8015414:	bf00      	nop
 8015416:	3710      	adds	r7, #16
 8015418:	46bd      	mov	sp, r7
 801541a:	bd80      	pop	{r7, pc}

0801541c <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801541c:	b480      	push	{r7}
 801541e:	b083      	sub	sp, #12
 8015420:	af00      	add	r7, sp, #0
 8015422:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8015424:	687b      	ldr	r3, [r7, #4]
 8015426:	4618      	mov	r0, r3
 8015428:	370c      	adds	r7, #12
 801542a:	46bd      	mov	sp, r7
 801542c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015430:	4770      	bx	lr

08015432 <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8015432:	b580      	push	{r7, lr}
 8015434:	b084      	sub	sp, #16
 8015436:	af00      	add	r7, sp, #0
 8015438:	60f8      	str	r0, [r7, #12]
 801543a:	60b9      	str	r1, [r7, #8]
 801543c:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801543e:	6878      	ldr	r0, [r7, #4]
 8015440:	f7ff ffec 	bl	801541c <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8015444:	4603      	mov	r3, r0
 8015446:	461a      	mov	r2, r3
 8015448:	68b9      	ldr	r1, [r7, #8]
 801544a:	68f8      	ldr	r0, [r7, #12]
 801544c:	f000 fb39 	bl	8015ac2 <_ZN9__gnu_cxx13new_allocatorIP9StatementE9constructIS2_JS2_EEEvPT_DpOT0_>
 8015450:	bf00      	nop
 8015452:	3710      	adds	r7, #16
 8015454:	46bd      	mov	sp, r7
 8015456:	bd80      	pop	{r7, pc}

08015458 <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8015458:	b580      	push	{r7, lr}
 801545a:	b084      	sub	sp, #16
 801545c:	af00      	add	r7, sp, #0
 801545e:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8015460:	687b      	ldr	r3, [r7, #4]
 8015462:	1d1a      	adds	r2, r3, #4
 8015464:	f107 030c 	add.w	r3, r7, #12
 8015468:	4611      	mov	r1, r2
 801546a:	4618      	mov	r0, r3
 801546c:	f000 fb3f 	bl	8015aee <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8015470:	68fb      	ldr	r3, [r7, #12]
 8015472:	4618      	mov	r0, r3
 8015474:	3710      	adds	r7, #16
 8015476:	46bd      	mov	sp, r7
 8015478:	bd80      	pop	{r7, pc}
	...

0801547c <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801547c:	b5b0      	push	{r4, r5, r7, lr}
 801547e:	b08c      	sub	sp, #48	; 0x30
 8015480:	af00      	add	r7, sp, #0
 8015482:	60f8      	str	r0, [r7, #12]
 8015484:	60b9      	str	r1, [r7, #8]
 8015486:	607a      	str	r2, [r7, #4]
      const size_type __len =
 8015488:	4a39      	ldr	r2, [pc, #228]	; (8015570 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801548a:	2101      	movs	r1, #1
 801548c:	68f8      	ldr	r0, [r7, #12]
 801548e:	f000 fb3e 	bl	8015b0e <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc>
 8015492:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 8015494:	68fb      	ldr	r3, [r7, #12]
 8015496:	681b      	ldr	r3, [r3, #0]
 8015498:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801549a:	68fb      	ldr	r3, [r7, #12]
 801549c:	685b      	ldr	r3, [r3, #4]
 801549e:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 80154a0:	68f8      	ldr	r0, [r7, #12]
 80154a2:	f000 fb7b 	bl	8015b9c <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>
 80154a6:	4603      	mov	r3, r0
 80154a8:	617b      	str	r3, [r7, #20]
 80154aa:	f107 0214 	add.w	r2, r7, #20
 80154ae:	f107 0308 	add.w	r3, r7, #8
 80154b2:	4611      	mov	r1, r2
 80154b4:	4618      	mov	r0, r3
 80154b6:	f000 fb81 	bl	8015bbc <_ZN9__gnu_cxxmiIPP9StatementSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 80154ba:	4603      	mov	r3, r0
 80154bc:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 80154be:	68fb      	ldr	r3, [r7, #12]
 80154c0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80154c2:	4618      	mov	r0, r3
 80154c4:	f000 fb8f 	bl	8015be6 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj>
 80154c8:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 80154ca:	69fb      	ldr	r3, [r7, #28]
 80154cc:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 80154ce:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 80154d0:	6a3b      	ldr	r3, [r7, #32]
 80154d2:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 80154d4:	69fa      	ldr	r2, [r7, #28]
 80154d6:	18d5      	adds	r5, r2, r3
 80154d8:	6878      	ldr	r0, [r7, #4]
 80154da:	f7ff ff9f 	bl	801541c <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 80154de:	4603      	mov	r3, r0
 80154e0:	461a      	mov	r2, r3
 80154e2:	4629      	mov	r1, r5
 80154e4:	4620      	mov	r0, r4
 80154e6:	f7ff ffa4 	bl	8015432 <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 80154ea:	2300      	movs	r3, #0
 80154ec:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 80154ee:	f107 0308 	add.w	r3, r7, #8
 80154f2:	4618      	mov	r0, r3
 80154f4:	f000 fb9f 	bl	8015c36 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 80154f8:	4603      	mov	r3, r0
 80154fa:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 80154fc:	68fb      	ldr	r3, [r7, #12]
 80154fe:	4618      	mov	r0, r3
 8015500:	f7ff fbc9 	bl	8014c96 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 8015504:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8015506:	69fa      	ldr	r2, [r7, #28]
 8015508:	4621      	mov	r1, r4
 801550a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801550c:	f000 fb7f 	bl	8015c0e <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8015510:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 8015512:	69bb      	ldr	r3, [r7, #24]
 8015514:	3304      	adds	r3, #4
 8015516:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8015518:	f107 0308 	add.w	r3, r7, #8
 801551c:	4618      	mov	r0, r3
 801551e:	f000 fb8a 	bl	8015c36 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8015522:	4603      	mov	r3, r0
 8015524:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 8015526:	68fb      	ldr	r3, [r7, #12]
 8015528:	4618      	mov	r0, r3
 801552a:	f7ff fbb4 	bl	8014c96 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 801552e:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8015530:	69ba      	ldr	r2, [r7, #24]
 8015532:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8015534:	4620      	mov	r0, r4
 8015536:	f000 fb6a 	bl	8015c0e <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801553a:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801553c:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801553e:	68fb      	ldr	r3, [r7, #12]
 8015540:	689a      	ldr	r2, [r3, #8]
 8015542:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8015544:	1ad3      	subs	r3, r2, r3
 8015546:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 8015548:	461a      	mov	r2, r3
 801554a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801554c:	f7ff fb90 	bl	8014c70 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 8015550:	68fb      	ldr	r3, [r7, #12]
 8015552:	69fa      	ldr	r2, [r7, #28]
 8015554:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 8015556:	68fb      	ldr	r3, [r7, #12]
 8015558:	69ba      	ldr	r2, [r7, #24]
 801555a:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801555c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801555e:	009b      	lsls	r3, r3, #2
 8015560:	69fa      	ldr	r2, [r7, #28]
 8015562:	441a      	add	r2, r3
 8015564:	68fb      	ldr	r3, [r7, #12]
 8015566:	609a      	str	r2, [r3, #8]
    }
 8015568:	bf00      	nop
 801556a:	3730      	adds	r7, #48	; 0x30
 801556c:	46bd      	mov	sp, r7
 801556e:	bdb0      	pop	{r4, r5, r7, pc}
 8015570:	080277b8 	.word	0x080277b8

08015574 <_ZNSt6vectorIP9StatementSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 8015574:	b580      	push	{r7, lr}
 8015576:	b084      	sub	sp, #16
 8015578:	af00      	add	r7, sp, #0
 801557a:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801557c:	6878      	ldr	r0, [r7, #4]
 801557e:	f7ff ff6b 	bl	8015458 <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 8015582:	4603      	mov	r3, r0
 8015584:	60fb      	str	r3, [r7, #12]
 8015586:	f107 030c 	add.w	r3, r7, #12
 801558a:	2101      	movs	r1, #1
 801558c:	4618      	mov	r0, r3
 801558e:	f000 fb5d 	bl	8015c4c <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEmiEi>
 8015592:	4603      	mov	r3, r0
 8015594:	60bb      	str	r3, [r7, #8]
 8015596:	f107 0308 	add.w	r3, r7, #8
 801559a:	4618      	mov	r0, r3
 801559c:	f000 fb6f 	bl	8015c7e <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>
 80155a0:	4603      	mov	r3, r0
      }
 80155a2:	4618      	mov	r0, r3
 80155a4:	3710      	adds	r7, #16
 80155a6:	46bd      	mov	sp, r7
 80155a8:	bd80      	pop	{r7, pc}

080155aa <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRS9_St17integral_constantIjLj0EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80155aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80155ae:	b084      	sub	sp, #16
 80155b0:	af00      	add	r7, sp, #0
 80155b2:	7338      	strb	r0, [r7, #12]
 80155b4:	60b9      	str	r1, [r7, #8]
 80155b6:	607a      	str	r2, [r7, #4]
 80155b8:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80155ba:	68b8      	ldr	r0, [r7, #8]
 80155bc:	f7ff fc41 	bl	8014e42 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80155c0:	4604      	mov	r4, r0
 80155c2:	6878      	ldr	r0, [r7, #4]
 80155c4:	f7f0 fd69 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80155c8:	4605      	mov	r5, r0
 80155ca:	6838      	ldr	r0, [r7, #0]
 80155cc:	f7f4 fe12 	bl	800a1f4 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80155d0:	4632      	mov	r2, r6
 80155d2:	4629      	mov	r1, r5
 80155d4:	4620      	mov	r0, r4
 80155d6:	f000 fb5e 	bl	8015c96 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_>
 80155da:	4643      	mov	r3, r8
 80155dc:	4618      	mov	r0, r3
 80155de:	3710      	adds	r7, #16
 80155e0:	46bd      	mov	sp, r7
 80155e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080155e6 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80155e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80155ea:	b084      	sub	sp, #16
 80155ec:	af00      	add	r7, sp, #0
 80155ee:	7338      	strb	r0, [r7, #12]
 80155f0:	60b9      	str	r1, [r7, #8]
 80155f2:	607a      	str	r2, [r7, #4]
 80155f4:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80155f6:	68b8      	ldr	r0, [r7, #8]
 80155f8:	f7ff fc23 	bl	8014e42 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80155fc:	4604      	mov	r4, r0
 80155fe:	6878      	ldr	r0, [r7, #4]
 8015600:	f7f0 fcfb 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8015604:	4605      	mov	r5, r0
 8015606:	6838      	ldr	r0, [r7, #0]
 8015608:	f7f4 fe1d 	bl	800a246 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 801560c:	4632      	mov	r2, r6
 801560e:	4629      	mov	r1, r5
 8015610:	4620      	mov	r0, r4
 8015612:	f000 fb89 	bl	8015d28 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_>
 8015616:	4643      	mov	r3, r8
 8015618:	4618      	mov	r0, r3
 801561a:	3710      	adds	r7, #16
 801561c:	46bd      	mov	sp, r7
 801561e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015622 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8015622:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015626:	b084      	sub	sp, #16
 8015628:	af00      	add	r7, sp, #0
 801562a:	7338      	strb	r0, [r7, #12]
 801562c:	60b9      	str	r1, [r7, #8]
 801562e:	607a      	str	r2, [r7, #4]
 8015630:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8015632:	68b8      	ldr	r0, [r7, #8]
 8015634:	f7ff fc05 	bl	8014e42 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8015638:	4604      	mov	r4, r0
 801563a:	6878      	ldr	r0, [r7, #4]
 801563c:	f7f0 fcff 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8015640:	4605      	mov	r5, r0
 8015642:	6838      	ldr	r0, [r7, #0]
 8015644:	f7f4 fe28 	bl	800a298 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8015648:	4632      	mov	r2, r6
 801564a:	4629      	mov	r1, r5
 801564c:	4620      	mov	r0, r4
 801564e:	f000 fbb2 	bl	8015db6 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_>
 8015652:	4643      	mov	r3, r8
 8015654:	4618      	mov	r0, r3
 8015656:	3710      	adds	r7, #16
 8015658:	46bd      	mov	sp, r7
 801565a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801565e <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801565e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015662:	b084      	sub	sp, #16
 8015664:	af00      	add	r7, sp, #0
 8015666:	7338      	strb	r0, [r7, #12]
 8015668:	60b9      	str	r1, [r7, #8]
 801566a:	607a      	str	r2, [r7, #4]
 801566c:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801566e:	68b8      	ldr	r0, [r7, #8]
 8015670:	f7ff fbe7 	bl	8014e42 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8015674:	4604      	mov	r4, r0
 8015676:	6878      	ldr	r0, [r7, #4]
 8015678:	f7f0 fc9d 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 801567c:	4605      	mov	r5, r0
 801567e:	6838      	ldr	r0, [r7, #0]
 8015680:	f7f4 fe33 	bl	800a2ea <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8015684:	4632      	mov	r2, r6
 8015686:	4629      	mov	r1, r5
 8015688:	4620      	mov	r0, r4
 801568a:	f000 fbdb 	bl	8015e44 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_>
 801568e:	4643      	mov	r3, r8
 8015690:	4618      	mov	r0, r3
 8015692:	3710      	adds	r7, #16
 8015694:	46bd      	mov	sp, r7
 8015696:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801569a <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801569a:	b590      	push	{r4, r7, lr}
 801569c:	b085      	sub	sp, #20
 801569e:	af00      	add	r7, sp, #0
 80156a0:	60f8      	str	r0, [r7, #12]
 80156a2:	60b9      	str	r1, [r7, #8]
 80156a4:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80156a6:	6878      	ldr	r0, [r7, #4]
 80156a8:	f7ff fbd6 	bl	8014e58 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 80156ac:	4603      	mov	r3, r0
 80156ae:	681c      	ldr	r4, [r3, #0]
 80156b0:	68bb      	ldr	r3, [r7, #8]
 80156b2:	4619      	mov	r1, r3
 80156b4:	2004      	movs	r0, #4
 80156b6:	f7eb fcd0 	bl	800105a <_ZnwjPv>
 80156ba:	4603      	mov	r3, r0
 80156bc:	601c      	str	r4, [r3, #0]
 80156be:	bf00      	nop
 80156c0:	3714      	adds	r7, #20
 80156c2:	46bd      	mov	sp, r7
 80156c4:	bd90      	pop	{r4, r7, pc}

080156c6 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 80156c6:	b480      	push	{r7}
 80156c8:	b083      	sub	sp, #12
 80156ca:	af00      	add	r7, sp, #0
 80156cc:	6078      	str	r0, [r7, #4]
 80156ce:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 80156d0:	683b      	ldr	r3, [r7, #0]
 80156d2:	681a      	ldr	r2, [r3, #0]
 80156d4:	687b      	ldr	r3, [r7, #4]
 80156d6:	601a      	str	r2, [r3, #0]
 80156d8:	687b      	ldr	r3, [r7, #4]
 80156da:	4618      	mov	r0, r3
 80156dc:	370c      	adds	r7, #12
 80156de:	46bd      	mov	sp, r7
 80156e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80156e4:	4770      	bx	lr

080156e6 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 80156e6:	b590      	push	{r4, r7, lr}
 80156e8:	b087      	sub	sp, #28
 80156ea:	af00      	add	r7, sp, #0
 80156ec:	60f8      	str	r0, [r7, #12]
 80156ee:	60b9      	str	r1, [r7, #8]
 80156f0:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 80156f2:	68f8      	ldr	r0, [r7, #12]
 80156f4:	f000 fbee 	bl	8015ed4 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 80156f8:	4604      	mov	r4, r0
 80156fa:	68f8      	ldr	r0, [r7, #12]
 80156fc:	f7f9 ff6b 	bl	800f5d6 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8015700:	4603      	mov	r3, r0
 8015702:	1ae2      	subs	r2, r4, r3
 8015704:	68bb      	ldr	r3, [r7, #8]
 8015706:	429a      	cmp	r2, r3
 8015708:	bf34      	ite	cc
 801570a:	2301      	movcc	r3, #1
 801570c:	2300      	movcs	r3, #0
 801570e:	b2db      	uxtb	r3, r3
 8015710:	2b00      	cmp	r3, #0
 8015712:	d002      	beq.n	801571a <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 8015714:	6878      	ldr	r0, [r7, #4]
 8015716:	f00d fb65 	bl	8022de4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801571a:	68f8      	ldr	r0, [r7, #12]
 801571c:	f7f9 ff5b 	bl	800f5d6 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8015720:	4604      	mov	r4, r0
 8015722:	68f8      	ldr	r0, [r7, #12]
 8015724:	f7f9 ff57 	bl	800f5d6 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8015728:	4603      	mov	r3, r0
 801572a:	613b      	str	r3, [r7, #16]
 801572c:	f107 0208 	add.w	r2, r7, #8
 8015730:	f107 0310 	add.w	r3, r7, #16
 8015734:	4611      	mov	r1, r2
 8015736:	4618      	mov	r0, r3
 8015738:	f000 fbdd 	bl	8015ef6 <_ZSt3maxIjERKT_S2_S2_>
 801573c:	4603      	mov	r3, r0
 801573e:	681b      	ldr	r3, [r3, #0]
 8015740:	4423      	add	r3, r4
 8015742:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8015744:	68f8      	ldr	r0, [r7, #12]
 8015746:	f7f9 ff46 	bl	800f5d6 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 801574a:	4602      	mov	r2, r0
 801574c:	697b      	ldr	r3, [r7, #20]
 801574e:	4293      	cmp	r3, r2
 8015750:	d306      	bcc.n	8015760 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 8015752:	68f8      	ldr	r0, [r7, #12]
 8015754:	f000 fbbe 	bl	8015ed4 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 8015758:	4602      	mov	r2, r0
 801575a:	697b      	ldr	r3, [r7, #20]
 801575c:	4293      	cmp	r3, r2
 801575e:	d904      	bls.n	801576a <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 8015760:	68f8      	ldr	r0, [r7, #12]
 8015762:	f000 fbb7 	bl	8015ed4 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 8015766:	4603      	mov	r3, r0
 8015768:	e000      	b.n	801576c <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801576a:	697b      	ldr	r3, [r7, #20]
      }
 801576c:	4618      	mov	r0, r3
 801576e:	371c      	adds	r7, #28
 8015770:	46bd      	mov	sp, r7
 8015772:	bd90      	pop	{r4, r7, pc}

08015774 <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8015774:	b580      	push	{r7, lr}
 8015776:	b084      	sub	sp, #16
 8015778:	af00      	add	r7, sp, #0
 801577a:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 801577c:	687a      	ldr	r2, [r7, #4]
 801577e:	f107 030c 	add.w	r3, r7, #12
 8015782:	4611      	mov	r1, r2
 8015784:	4618      	mov	r0, r3
 8015786:	f7ff ff9e 	bl	80156c6 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801578a:	68fb      	ldr	r3, [r7, #12]
 801578c:	4618      	mov	r0, r3
 801578e:	3710      	adds	r7, #16
 8015790:	46bd      	mov	sp, r7
 8015792:	bd80      	pop	{r7, pc}

08015794 <_ZN9__gnu_cxxmiIPP10ExpressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 8015794:	b590      	push	{r4, r7, lr}
 8015796:	b083      	sub	sp, #12
 8015798:	af00      	add	r7, sp, #0
 801579a:	6078      	str	r0, [r7, #4]
 801579c:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801579e:	6878      	ldr	r0, [r7, #4]
 80157a0:	f000 f821 	bl	80157e6 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 80157a4:	4603      	mov	r3, r0
 80157a6:	681c      	ldr	r4, [r3, #0]
 80157a8:	6838      	ldr	r0, [r7, #0]
 80157aa:	f000 f81c 	bl	80157e6 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 80157ae:	4603      	mov	r3, r0
 80157b0:	681b      	ldr	r3, [r3, #0]
 80157b2:	1ae3      	subs	r3, r4, r3
 80157b4:	109b      	asrs	r3, r3, #2
 80157b6:	4618      	mov	r0, r3
 80157b8:	370c      	adds	r7, #12
 80157ba:	46bd      	mov	sp, r7
 80157bc:	bd90      	pop	{r4, r7, pc}

080157be <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 80157be:	b590      	push	{r4, r7, lr}
 80157c0:	b089      	sub	sp, #36	; 0x24
 80157c2:	af02      	add	r7, sp, #8
 80157c4:	60f8      	str	r0, [r7, #12]
 80157c6:	60b9      	str	r1, [r7, #8]
 80157c8:	607a      	str	r2, [r7, #4]
 80157ca:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 80157cc:	f88d 4000 	strb.w	r4, [sp]
 80157d0:	683b      	ldr	r3, [r7, #0]
 80157d2:	687a      	ldr	r2, [r7, #4]
 80157d4:	68b9      	ldr	r1, [r7, #8]
 80157d6:	68f8      	ldr	r0, [r7, #12]
 80157d8:	f000 fba1 	bl	8015f1e <_ZNSt6vectorIP10ExpressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 80157dc:	4603      	mov	r3, r0
      }
 80157de:	4618      	mov	r0, r3
 80157e0:	371c      	adds	r7, #28
 80157e2:	46bd      	mov	sp, r7
 80157e4:	bd90      	pop	{r4, r7, pc}

080157e6 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 80157e6:	b480      	push	{r7}
 80157e8:	b083      	sub	sp, #12
 80157ea:	af00      	add	r7, sp, #0
 80157ec:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 80157ee:	687b      	ldr	r3, [r7, #4]
 80157f0:	4618      	mov	r0, r3
 80157f2:	370c      	adds	r7, #12
 80157f4:	46bd      	mov	sp, r7
 80157f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80157fa:	4770      	bx	lr

080157fc <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 80157fc:	b580      	push	{r7, lr}
 80157fe:	b084      	sub	sp, #16
 8015800:	af00      	add	r7, sp, #0
 8015802:	6078      	str	r0, [r7, #4]
 8015804:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 8015806:	687b      	ldr	r3, [r7, #4]
 8015808:	681a      	ldr	r2, [r3, #0]
 801580a:	683b      	ldr	r3, [r7, #0]
 801580c:	009b      	lsls	r3, r3, #2
 801580e:	425b      	negs	r3, r3
 8015810:	4413      	add	r3, r2
 8015812:	60fb      	str	r3, [r7, #12]
 8015814:	f107 020c 	add.w	r2, r7, #12
 8015818:	f107 0308 	add.w	r3, r7, #8
 801581c:	4611      	mov	r1, r2
 801581e:	4618      	mov	r0, r3
 8015820:	f7ff ff51 	bl	80156c6 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8015824:	68bb      	ldr	r3, [r7, #8]
 8015826:	4618      	mov	r0, r3
 8015828:	3710      	adds	r7, #16
 801582a:	46bd      	mov	sp, r7
 801582c:	bd80      	pop	{r7, pc}

0801582e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 801582e:	b480      	push	{r7}
 8015830:	b083      	sub	sp, #12
 8015832:	af00      	add	r7, sp, #0
 8015834:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8015836:	687b      	ldr	r3, [r7, #4]
 8015838:	681b      	ldr	r3, [r3, #0]
 801583a:	4618      	mov	r0, r3
 801583c:	370c      	adds	r7, #12
 801583e:	46bd      	mov	sp, r7
 8015840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015844:	4770      	bx	lr

08015846 <_ZN9__gnu_cxx13new_allocatorIP4BodyE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8015846:	b590      	push	{r4, r7, lr}
 8015848:	b085      	sub	sp, #20
 801584a:	af00      	add	r7, sp, #0
 801584c:	60f8      	str	r0, [r7, #12]
 801584e:	60b9      	str	r1, [r7, #8]
 8015850:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8015852:	6878      	ldr	r0, [r7, #4]
 8015854:	f7ff fbc7 	bl	8014fe6 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 8015858:	4603      	mov	r3, r0
 801585a:	681c      	ldr	r4, [r3, #0]
 801585c:	68bb      	ldr	r3, [r7, #8]
 801585e:	4619      	mov	r1, r3
 8015860:	2004      	movs	r0, #4
 8015862:	f7eb fbfa 	bl	800105a <_ZnwjPv>
 8015866:	4603      	mov	r3, r0
 8015868:	601c      	str	r4, [r3, #0]
 801586a:	bf00      	nop
 801586c:	3714      	adds	r7, #20
 801586e:	46bd      	mov	sp, r7
 8015870:	bd90      	pop	{r4, r7, pc}

08015872 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8015872:	b480      	push	{r7}
 8015874:	b083      	sub	sp, #12
 8015876:	af00      	add	r7, sp, #0
 8015878:	6078      	str	r0, [r7, #4]
 801587a:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801587c:	683b      	ldr	r3, [r7, #0]
 801587e:	681a      	ldr	r2, [r3, #0]
 8015880:	687b      	ldr	r3, [r7, #4]
 8015882:	601a      	str	r2, [r3, #0]
 8015884:	687b      	ldr	r3, [r7, #4]
 8015886:	4618      	mov	r0, r3
 8015888:	370c      	adds	r7, #12
 801588a:	46bd      	mov	sp, r7
 801588c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015890:	4770      	bx	lr

08015892 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 8015892:	b590      	push	{r4, r7, lr}
 8015894:	b087      	sub	sp, #28
 8015896:	af00      	add	r7, sp, #0
 8015898:	60f8      	str	r0, [r7, #12]
 801589a:	60b9      	str	r1, [r7, #8]
 801589c:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801589e:	68f8      	ldr	r0, [r7, #12]
 80158a0:	f000 fb4f 	bl	8015f42 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 80158a4:	4604      	mov	r4, r0
 80158a6:	68f8      	ldr	r0, [r7, #12]
 80158a8:	f000 fb5c 	bl	8015f64 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 80158ac:	4603      	mov	r3, r0
 80158ae:	1ae2      	subs	r2, r4, r3
 80158b0:	68bb      	ldr	r3, [r7, #8]
 80158b2:	429a      	cmp	r2, r3
 80158b4:	bf34      	ite	cc
 80158b6:	2301      	movcc	r3, #1
 80158b8:	2300      	movcs	r3, #0
 80158ba:	b2db      	uxtb	r3, r3
 80158bc:	2b00      	cmp	r3, #0
 80158be:	d002      	beq.n	80158c6 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 80158c0:	6878      	ldr	r0, [r7, #4]
 80158c2:	f00d fa8f 	bl	8022de4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 80158c6:	68f8      	ldr	r0, [r7, #12]
 80158c8:	f000 fb4c 	bl	8015f64 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 80158cc:	4604      	mov	r4, r0
 80158ce:	68f8      	ldr	r0, [r7, #12]
 80158d0:	f000 fb48 	bl	8015f64 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 80158d4:	4603      	mov	r3, r0
 80158d6:	613b      	str	r3, [r7, #16]
 80158d8:	f107 0208 	add.w	r2, r7, #8
 80158dc:	f107 0310 	add.w	r3, r7, #16
 80158e0:	4611      	mov	r1, r2
 80158e2:	4618      	mov	r0, r3
 80158e4:	f000 fb07 	bl	8015ef6 <_ZSt3maxIjERKT_S2_S2_>
 80158e8:	4603      	mov	r3, r0
 80158ea:	681b      	ldr	r3, [r3, #0]
 80158ec:	4423      	add	r3, r4
 80158ee:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 80158f0:	68f8      	ldr	r0, [r7, #12]
 80158f2:	f000 fb37 	bl	8015f64 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 80158f6:	4602      	mov	r2, r0
 80158f8:	697b      	ldr	r3, [r7, #20]
 80158fa:	4293      	cmp	r3, r2
 80158fc:	d306      	bcc.n	801590c <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x7a>
 80158fe:	68f8      	ldr	r0, [r7, #12]
 8015900:	f000 fb1f 	bl	8015f42 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 8015904:	4602      	mov	r2, r0
 8015906:	697b      	ldr	r3, [r7, #20]
 8015908:	4293      	cmp	r3, r2
 801590a:	d904      	bls.n	8015916 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x84>
 801590c:	68f8      	ldr	r0, [r7, #12]
 801590e:	f000 fb18 	bl	8015f42 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 8015912:	4603      	mov	r3, r0
 8015914:	e000      	b.n	8015918 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x86>
 8015916:	697b      	ldr	r3, [r7, #20]
      }
 8015918:	4618      	mov	r0, r3
 801591a:	371c      	adds	r7, #28
 801591c:	46bd      	mov	sp, r7
 801591e:	bd90      	pop	{r4, r7, pc}

08015920 <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8015920:	b580      	push	{r7, lr}
 8015922:	b084      	sub	sp, #16
 8015924:	af00      	add	r7, sp, #0
 8015926:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8015928:	687a      	ldr	r2, [r7, #4]
 801592a:	f107 030c 	add.w	r3, r7, #12
 801592e:	4611      	mov	r1, r2
 8015930:	4618      	mov	r0, r3
 8015932:	f7ff ff9e 	bl	8015872 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8015936:	68fb      	ldr	r3, [r7, #12]
 8015938:	4618      	mov	r0, r3
 801593a:	3710      	adds	r7, #16
 801593c:	46bd      	mov	sp, r7
 801593e:	bd80      	pop	{r7, pc}

08015940 <_ZN9__gnu_cxxmiIPP4BodySt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 8015940:	b590      	push	{r4, r7, lr}
 8015942:	b083      	sub	sp, #12
 8015944:	af00      	add	r7, sp, #0
 8015946:	6078      	str	r0, [r7, #4]
 8015948:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801594a:	6878      	ldr	r0, [r7, #4]
 801594c:	f000 f835 	bl	80159ba <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 8015950:	4603      	mov	r3, r0
 8015952:	681c      	ldr	r4, [r3, #0]
 8015954:	6838      	ldr	r0, [r7, #0]
 8015956:	f000 f830 	bl	80159ba <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 801595a:	4603      	mov	r3, r0
 801595c:	681b      	ldr	r3, [r3, #0]
 801595e:	1ae3      	subs	r3, r4, r3
 8015960:	109b      	asrs	r3, r3, #2
 8015962:	4618      	mov	r0, r3
 8015964:	370c      	adds	r7, #12
 8015966:	46bd      	mov	sp, r7
 8015968:	bd90      	pop	{r4, r7, pc}

0801596a <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801596a:	b580      	push	{r7, lr}
 801596c:	b082      	sub	sp, #8
 801596e:	af00      	add	r7, sp, #0
 8015970:	6078      	str	r0, [r7, #4]
 8015972:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8015974:	683b      	ldr	r3, [r7, #0]
 8015976:	2b00      	cmp	r3, #0
 8015978:	d006      	beq.n	8015988 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj+0x1e>
 801597a:	687b      	ldr	r3, [r7, #4]
 801597c:	6839      	ldr	r1, [r7, #0]
 801597e:	4618      	mov	r0, r3
 8015980:	f000 fb00 	bl	8015f84 <_ZNSt16allocator_traitsISaIP4BodyEE8allocateERS2_j>
 8015984:	4603      	mov	r3, r0
 8015986:	e000      	b.n	801598a <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj+0x20>
 8015988:	2300      	movs	r3, #0
      }
 801598a:	4618      	mov	r0, r3
 801598c:	3708      	adds	r7, #8
 801598e:	46bd      	mov	sp, r7
 8015990:	bd80      	pop	{r7, pc}

08015992 <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8015992:	b590      	push	{r4, r7, lr}
 8015994:	b089      	sub	sp, #36	; 0x24
 8015996:	af02      	add	r7, sp, #8
 8015998:	60f8      	str	r0, [r7, #12]
 801599a:	60b9      	str	r1, [r7, #8]
 801599c:	607a      	str	r2, [r7, #4]
 801599e:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 80159a0:	f88d 4000 	strb.w	r4, [sp]
 80159a4:	683b      	ldr	r3, [r7, #0]
 80159a6:	687a      	ldr	r2, [r7, #4]
 80159a8:	68b9      	ldr	r1, [r7, #8]
 80159aa:	68f8      	ldr	r0, [r7, #12]
 80159ac:	f000 faf9 	bl	8015fa2 <_ZNSt6vectorIP4BodySaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 80159b0:	4603      	mov	r3, r0
      }
 80159b2:	4618      	mov	r0, r3
 80159b4:	371c      	adds	r7, #28
 80159b6:	46bd      	mov	sp, r7
 80159b8:	bd90      	pop	{r4, r7, pc}

080159ba <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 80159ba:	b480      	push	{r7}
 80159bc:	b083      	sub	sp, #12
 80159be:	af00      	add	r7, sp, #0
 80159c0:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 80159c2:	687b      	ldr	r3, [r7, #4]
 80159c4:	4618      	mov	r0, r3
 80159c6:	370c      	adds	r7, #12
 80159c8:	46bd      	mov	sp, r7
 80159ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80159ce:	4770      	bx	lr

080159d0 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 80159d0:	b580      	push	{r7, lr}
 80159d2:	b084      	sub	sp, #16
 80159d4:	af00      	add	r7, sp, #0
 80159d6:	6078      	str	r0, [r7, #4]
 80159d8:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 80159da:	687b      	ldr	r3, [r7, #4]
 80159dc:	681a      	ldr	r2, [r3, #0]
 80159de:	683b      	ldr	r3, [r7, #0]
 80159e0:	009b      	lsls	r3, r3, #2
 80159e2:	425b      	negs	r3, r3
 80159e4:	4413      	add	r3, r2
 80159e6:	60fb      	str	r3, [r7, #12]
 80159e8:	f107 020c 	add.w	r2, r7, #12
 80159ec:	f107 0308 	add.w	r3, r7, #8
 80159f0:	4611      	mov	r1, r2
 80159f2:	4618      	mov	r0, r3
 80159f4:	f7ff ff3d 	bl	8015872 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80159f8:	68bb      	ldr	r3, [r7, #8]
 80159fa:	4618      	mov	r0, r3
 80159fc:	3710      	adds	r7, #16
 80159fe:	46bd      	mov	sp, r7
 8015a00:	bd80      	pop	{r7, pc}

08015a02 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8015a02:	b480      	push	{r7}
 8015a04:	b083      	sub	sp, #12
 8015a06:	af00      	add	r7, sp, #0
 8015a08:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8015a0a:	687b      	ldr	r3, [r7, #4]
 8015a0c:	681b      	ldr	r3, [r3, #0]
 8015a0e:	4618      	mov	r0, r3
 8015a10:	370c      	adds	r7, #12
 8015a12:	46bd      	mov	sp, r7
 8015a14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015a18:	4770      	bx	lr

08015a1a <_ZN9__gnu_cxx13new_allocatorIP4BodyE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8015a1a:	b580      	push	{r7, lr}
 8015a1c:	b084      	sub	sp, #16
 8015a1e:	af00      	add	r7, sp, #0
 8015a20:	60f8      	str	r0, [r7, #12]
 8015a22:	60b9      	str	r1, [r7, #8]
 8015a24:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8015a26:	68b8      	ldr	r0, [r7, #8]
 8015a28:	f00d f8fb 	bl	8022c22 <_ZdlPv>
      }
 8015a2c:	3710      	adds	r7, #16
 8015a2e:	46bd      	mov	sp, r7
 8015a30:	bd80      	pop	{r7, pc}

08015a32 <_ZSt9addressofIP13Function_callEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015a32:	b580      	push	{r7, lr}
 8015a34:	b082      	sub	sp, #8
 8015a36:	af00      	add	r7, sp, #0
 8015a38:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015a3a:	6878      	ldr	r0, [r7, #4]
 8015a3c:	f7f0 fcb6 	bl	80063ac <_ZSt11__addressofIP13Function_callEPT_RS2_>
 8015a40:	4603      	mov	r3, r0
 8015a42:	4618      	mov	r0, r3
 8015a44:	3708      	adds	r7, #8
 8015a46:	46bd      	mov	sp, r7
 8015a48:	bd80      	pop	{r7, pc}

08015a4a <_ZSt9addressofIP11Method_callEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015a4a:	b580      	push	{r7, lr}
 8015a4c:	b082      	sub	sp, #8
 8015a4e:	af00      	add	r7, sp, #0
 8015a50:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015a52:	6878      	ldr	r0, [r7, #4]
 8015a54:	f000 fab7 	bl	8015fc6 <_ZSt11__addressofIP11Method_callEPT_RS2_>
 8015a58:	4603      	mov	r3, r0
 8015a5a:	4618      	mov	r0, r3
 8015a5c:	3708      	adds	r7, #8
 8015a5e:	46bd      	mov	sp, r7
 8015a60:	bd80      	pop	{r7, pc}

08015a62 <_ZSt9addressofIP10AssignmentEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015a62:	b580      	push	{r7, lr}
 8015a64:	b082      	sub	sp, #8
 8015a66:	af00      	add	r7, sp, #0
 8015a68:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015a6a:	6878      	ldr	r0, [r7, #4]
 8015a6c:	f000 fab6 	bl	8015fdc <_ZSt11__addressofIP10AssignmentEPT_RS2_>
 8015a70:	4603      	mov	r3, r0
 8015a72:	4618      	mov	r0, r3
 8015a74:	3708      	adds	r7, #8
 8015a76:	46bd      	mov	sp, r7
 8015a78:	bd80      	pop	{r7, pc}

08015a7a <_ZSt9addressofIP15While_statementEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015a7a:	b580      	push	{r7, lr}
 8015a7c:	b082      	sub	sp, #8
 8015a7e:	af00      	add	r7, sp, #0
 8015a80:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015a82:	6878      	ldr	r0, [r7, #4]
 8015a84:	f000 fab5 	bl	8015ff2 <_ZSt11__addressofIP15While_statementEPT_RS2_>
 8015a88:	4603      	mov	r3, r0
 8015a8a:	4618      	mov	r0, r3
 8015a8c:	3708      	adds	r7, #8
 8015a8e:	46bd      	mov	sp, r7
 8015a90:	bd80      	pop	{r7, pc}

08015a92 <_ZSt9addressofIP12If_statementEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015a92:	b580      	push	{r7, lr}
 8015a94:	b082      	sub	sp, #8
 8015a96:	af00      	add	r7, sp, #0
 8015a98:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015a9a:	6878      	ldr	r0, [r7, #4]
 8015a9c:	f000 fab4 	bl	8016008 <_ZSt11__addressofIP12If_statementEPT_RS2_>
 8015aa0:	4603      	mov	r3, r0
 8015aa2:	4618      	mov	r0, r3
 8015aa4:	3708      	adds	r7, #8
 8015aa6:	46bd      	mov	sp, r7
 8015aa8:	bd80      	pop	{r7, pc}

08015aaa <_ZN9__gnu_cxx13new_allocatorIP9StatementE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8015aaa:	b580      	push	{r7, lr}
 8015aac:	b084      	sub	sp, #16
 8015aae:	af00      	add	r7, sp, #0
 8015ab0:	60f8      	str	r0, [r7, #12]
 8015ab2:	60b9      	str	r1, [r7, #8]
 8015ab4:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8015ab6:	68b8      	ldr	r0, [r7, #8]
 8015ab8:	f00d f8b3 	bl	8022c22 <_ZdlPv>
      }
 8015abc:	3710      	adds	r7, #16
 8015abe:	46bd      	mov	sp, r7
 8015ac0:	bd80      	pop	{r7, pc}

08015ac2 <_ZN9__gnu_cxx13new_allocatorIP9StatementE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8015ac2:	b590      	push	{r4, r7, lr}
 8015ac4:	b085      	sub	sp, #20
 8015ac6:	af00      	add	r7, sp, #0
 8015ac8:	60f8      	str	r0, [r7, #12]
 8015aca:	60b9      	str	r1, [r7, #8]
 8015acc:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8015ace:	6878      	ldr	r0, [r7, #4]
 8015ad0:	f7ff fca4 	bl	801541c <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8015ad4:	4603      	mov	r3, r0
 8015ad6:	681c      	ldr	r4, [r3, #0]
 8015ad8:	68bb      	ldr	r3, [r7, #8]
 8015ada:	4619      	mov	r1, r3
 8015adc:	2004      	movs	r0, #4
 8015ade:	f7eb fabc 	bl	800105a <_ZnwjPv>
 8015ae2:	4603      	mov	r3, r0
 8015ae4:	601c      	str	r4, [r3, #0]
 8015ae6:	bf00      	nop
 8015ae8:	3714      	adds	r7, #20
 8015aea:	46bd      	mov	sp, r7
 8015aec:	bd90      	pop	{r4, r7, pc}

08015aee <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8015aee:	b480      	push	{r7}
 8015af0:	b083      	sub	sp, #12
 8015af2:	af00      	add	r7, sp, #0
 8015af4:	6078      	str	r0, [r7, #4]
 8015af6:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8015af8:	683b      	ldr	r3, [r7, #0]
 8015afa:	681a      	ldr	r2, [r3, #0]
 8015afc:	687b      	ldr	r3, [r7, #4]
 8015afe:	601a      	str	r2, [r3, #0]
 8015b00:	687b      	ldr	r3, [r7, #4]
 8015b02:	4618      	mov	r0, r3
 8015b04:	370c      	adds	r7, #12
 8015b06:	46bd      	mov	sp, r7
 8015b08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b0c:	4770      	bx	lr

08015b0e <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 8015b0e:	b590      	push	{r4, r7, lr}
 8015b10:	b087      	sub	sp, #28
 8015b12:	af00      	add	r7, sp, #0
 8015b14:	60f8      	str	r0, [r7, #12]
 8015b16:	60b9      	str	r1, [r7, #8]
 8015b18:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 8015b1a:	68f8      	ldr	r0, [r7, #12]
 8015b1c:	f000 fa7f 	bl	801601e <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 8015b20:	4604      	mov	r4, r0
 8015b22:	68f8      	ldr	r0, [r7, #12]
 8015b24:	f000 fa8c 	bl	8016040 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015b28:	4603      	mov	r3, r0
 8015b2a:	1ae2      	subs	r2, r4, r3
 8015b2c:	68bb      	ldr	r3, [r7, #8]
 8015b2e:	429a      	cmp	r2, r3
 8015b30:	bf34      	ite	cc
 8015b32:	2301      	movcc	r3, #1
 8015b34:	2300      	movcs	r3, #0
 8015b36:	b2db      	uxtb	r3, r3
 8015b38:	2b00      	cmp	r3, #0
 8015b3a:	d002      	beq.n	8015b42 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 8015b3c:	6878      	ldr	r0, [r7, #4]
 8015b3e:	f00d f951 	bl	8022de4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 8015b42:	68f8      	ldr	r0, [r7, #12]
 8015b44:	f000 fa7c 	bl	8016040 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015b48:	4604      	mov	r4, r0
 8015b4a:	68f8      	ldr	r0, [r7, #12]
 8015b4c:	f000 fa78 	bl	8016040 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015b50:	4603      	mov	r3, r0
 8015b52:	613b      	str	r3, [r7, #16]
 8015b54:	f107 0208 	add.w	r2, r7, #8
 8015b58:	f107 0310 	add.w	r3, r7, #16
 8015b5c:	4611      	mov	r1, r2
 8015b5e:	4618      	mov	r0, r3
 8015b60:	f000 f9c9 	bl	8015ef6 <_ZSt3maxIjERKT_S2_S2_>
 8015b64:	4603      	mov	r3, r0
 8015b66:	681b      	ldr	r3, [r3, #0]
 8015b68:	4423      	add	r3, r4
 8015b6a:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8015b6c:	68f8      	ldr	r0, [r7, #12]
 8015b6e:	f000 fa67 	bl	8016040 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015b72:	4602      	mov	r2, r0
 8015b74:	697b      	ldr	r3, [r7, #20]
 8015b76:	4293      	cmp	r3, r2
 8015b78:	d306      	bcc.n	8015b88 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x7a>
 8015b7a:	68f8      	ldr	r0, [r7, #12]
 8015b7c:	f000 fa4f 	bl	801601e <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 8015b80:	4602      	mov	r2, r0
 8015b82:	697b      	ldr	r3, [r7, #20]
 8015b84:	4293      	cmp	r3, r2
 8015b86:	d904      	bls.n	8015b92 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x84>
 8015b88:	68f8      	ldr	r0, [r7, #12]
 8015b8a:	f000 fa48 	bl	801601e <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 8015b8e:	4603      	mov	r3, r0
 8015b90:	e000      	b.n	8015b94 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x86>
 8015b92:	697b      	ldr	r3, [r7, #20]
      }
 8015b94:	4618      	mov	r0, r3
 8015b96:	371c      	adds	r7, #28
 8015b98:	46bd      	mov	sp, r7
 8015b9a:	bd90      	pop	{r4, r7, pc}

08015b9c <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8015b9c:	b580      	push	{r7, lr}
 8015b9e:	b084      	sub	sp, #16
 8015ba0:	af00      	add	r7, sp, #0
 8015ba2:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8015ba4:	687a      	ldr	r2, [r7, #4]
 8015ba6:	f107 030c 	add.w	r3, r7, #12
 8015baa:	4611      	mov	r1, r2
 8015bac:	4618      	mov	r0, r3
 8015bae:	f7ff ff9e 	bl	8015aee <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8015bb2:	68fb      	ldr	r3, [r7, #12]
 8015bb4:	4618      	mov	r0, r3
 8015bb6:	3710      	adds	r7, #16
 8015bb8:	46bd      	mov	sp, r7
 8015bba:	bd80      	pop	{r7, pc}

08015bbc <_ZN9__gnu_cxxmiIPP9StatementSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 8015bbc:	b590      	push	{r4, r7, lr}
 8015bbe:	b083      	sub	sp, #12
 8015bc0:	af00      	add	r7, sp, #0
 8015bc2:	6078      	str	r0, [r7, #4]
 8015bc4:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8015bc6:	6878      	ldr	r0, [r7, #4]
 8015bc8:	f000 f835 	bl	8015c36 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8015bcc:	4603      	mov	r3, r0
 8015bce:	681c      	ldr	r4, [r3, #0]
 8015bd0:	6838      	ldr	r0, [r7, #0]
 8015bd2:	f000 f830 	bl	8015c36 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8015bd6:	4603      	mov	r3, r0
 8015bd8:	681b      	ldr	r3, [r3, #0]
 8015bda:	1ae3      	subs	r3, r4, r3
 8015bdc:	109b      	asrs	r3, r3, #2
 8015bde:	4618      	mov	r0, r3
 8015be0:	370c      	adds	r7, #12
 8015be2:	46bd      	mov	sp, r7
 8015be4:	bd90      	pop	{r4, r7, pc}

08015be6 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8015be6:	b580      	push	{r7, lr}
 8015be8:	b082      	sub	sp, #8
 8015bea:	af00      	add	r7, sp, #0
 8015bec:	6078      	str	r0, [r7, #4]
 8015bee:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8015bf0:	683b      	ldr	r3, [r7, #0]
 8015bf2:	2b00      	cmp	r3, #0
 8015bf4:	d006      	beq.n	8015c04 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj+0x1e>
 8015bf6:	687b      	ldr	r3, [r7, #4]
 8015bf8:	6839      	ldr	r1, [r7, #0]
 8015bfa:	4618      	mov	r0, r3
 8015bfc:	f000 fa30 	bl	8016060 <_ZNSt16allocator_traitsISaIP9StatementEE8allocateERS2_j>
 8015c00:	4603      	mov	r3, r0
 8015c02:	e000      	b.n	8015c06 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj+0x20>
 8015c04:	2300      	movs	r3, #0
      }
 8015c06:	4618      	mov	r0, r3
 8015c08:	3708      	adds	r7, #8
 8015c0a:	46bd      	mov	sp, r7
 8015c0c:	bd80      	pop	{r7, pc}

08015c0e <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8015c0e:	b590      	push	{r4, r7, lr}
 8015c10:	b089      	sub	sp, #36	; 0x24
 8015c12:	af02      	add	r7, sp, #8
 8015c14:	60f8      	str	r0, [r7, #12]
 8015c16:	60b9      	str	r1, [r7, #8]
 8015c18:	607a      	str	r2, [r7, #4]
 8015c1a:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8015c1c:	f88d 4000 	strb.w	r4, [sp]
 8015c20:	683b      	ldr	r3, [r7, #0]
 8015c22:	687a      	ldr	r2, [r7, #4]
 8015c24:	68b9      	ldr	r1, [r7, #8]
 8015c26:	68f8      	ldr	r0, [r7, #12]
 8015c28:	f000 fa29 	bl	801607e <_ZNSt6vectorIP9StatementSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 8015c2c:	4603      	mov	r3, r0
      }
 8015c2e:	4618      	mov	r0, r3
 8015c30:	371c      	adds	r7, #28
 8015c32:	46bd      	mov	sp, r7
 8015c34:	bd90      	pop	{r4, r7, pc}

08015c36 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8015c36:	b480      	push	{r7}
 8015c38:	b083      	sub	sp, #12
 8015c3a:	af00      	add	r7, sp, #0
 8015c3c:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8015c3e:	687b      	ldr	r3, [r7, #4]
 8015c40:	4618      	mov	r0, r3
 8015c42:	370c      	adds	r7, #12
 8015c44:	46bd      	mov	sp, r7
 8015c46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015c4a:	4770      	bx	lr

08015c4c <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 8015c4c:	b580      	push	{r7, lr}
 8015c4e:	b084      	sub	sp, #16
 8015c50:	af00      	add	r7, sp, #0
 8015c52:	6078      	str	r0, [r7, #4]
 8015c54:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 8015c56:	687b      	ldr	r3, [r7, #4]
 8015c58:	681a      	ldr	r2, [r3, #0]
 8015c5a:	683b      	ldr	r3, [r7, #0]
 8015c5c:	009b      	lsls	r3, r3, #2
 8015c5e:	425b      	negs	r3, r3
 8015c60:	4413      	add	r3, r2
 8015c62:	60fb      	str	r3, [r7, #12]
 8015c64:	f107 020c 	add.w	r2, r7, #12
 8015c68:	f107 0308 	add.w	r3, r7, #8
 8015c6c:	4611      	mov	r1, r2
 8015c6e:	4618      	mov	r0, r3
 8015c70:	f7ff ff3d 	bl	8015aee <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8015c74:	68bb      	ldr	r3, [r7, #8]
 8015c76:	4618      	mov	r0, r3
 8015c78:	3710      	adds	r7, #16
 8015c7a:	46bd      	mov	sp, r7
 8015c7c:	bd80      	pop	{r7, pc}

08015c7e <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8015c7e:	b480      	push	{r7}
 8015c80:	b083      	sub	sp, #12
 8015c82:	af00      	add	r7, sp, #0
 8015c84:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8015c86:	687b      	ldr	r3, [r7, #4]
 8015c88:	681b      	ldr	r3, [r3, #0]
 8015c8a:	4618      	mov	r0, r3
 8015c8c:	370c      	adds	r7, #12
 8015c8e:	46bd      	mov	sp, r7
 8015c90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015c94:	4770      	bx	lr

08015c96 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015c96:	b5b0      	push	{r4, r5, r7, lr}
 8015c98:	b084      	sub	sp, #16
 8015c9a:	af00      	add	r7, sp, #0
 8015c9c:	60f8      	str	r0, [r7, #12]
 8015c9e:	60b9      	str	r1, [r7, #8]
 8015ca0:	713a      	strb	r2, [r7, #4]
 8015ca2:	68fb      	ldr	r3, [r7, #12]
 8015ca4:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015ca6:	7e1b      	ldrb	r3, [r3, #24]
 8015ca8:	461c      	mov	r4, r3
 8015caa:	1d3b      	adds	r3, r7, #4
 8015cac:	4618      	mov	r0, r3
 8015cae:	f7f4 ffeb 	bl	800ac88 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8015cb2:	4603      	mov	r3, r0
 8015cb4:	429c      	cmp	r4, r3
 8015cb6:	bf0c      	ite	eq
 8015cb8:	2301      	moveq	r3, #1
 8015cba:	2300      	movne	r3, #0
 8015cbc:	b2db      	uxtb	r3, r3
 8015cbe:	2b00      	cmp	r3, #0
 8015cc0:	d00e      	beq.n	8015ce0 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015cc2:	68b8      	ldr	r0, [r7, #8]
 8015cc4:	f7f5 fa47 	bl	800b156 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8015cc8:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015cca:	68fb      	ldr	r3, [r7, #12]
 8015ccc:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015cce:	4618      	mov	r0, r3
 8015cd0:	f000 f819 	bl	8015d06 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015cd4:	4603      	mov	r3, r0
 8015cd6:	4621      	mov	r1, r4
 8015cd8:	4618      	mov	r0, r3
 8015cda:	f00d f998 	bl	802300e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
	    return {};
 8015cde:	e00d      	b.n	8015cfc <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015ce0:	68fb      	ldr	r3, [r7, #12]
 8015ce2:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015ce4:	4618      	mov	r0, r3
 8015ce6:	f7fe fa58 	bl	801419a <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015cea:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015cec:	68b8      	ldr	r0, [r7, #8]
 8015cee:	f7f5 fa32 	bl	800b156 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8015cf2:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015cf4:	4619      	mov	r1, r3
 8015cf6:	4620      	mov	r0, r4
 8015cf8:	f7fb fb86 	bl	8011408 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015cfc:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015cfe:	4618      	mov	r0, r3
 8015d00:	3710      	adds	r7, #16
 8015d02:	46bd      	mov	sp, r7
 8015d04:	bdb0      	pop	{r4, r5, r7, pc}

08015d06 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015d06:	b590      	push	{r4, r7, lr}
 8015d08:	b083      	sub	sp, #12
 8015d0a:	af00      	add	r7, sp, #0
 8015d0c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015d0e:	6878      	ldr	r0, [r7, #4]
 8015d10:	f000 f9c7 	bl	80160a2 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015d14:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015d16:	4619      	mov	r1, r3
 8015d18:	4620      	mov	r0, r4
 8015d1a:	f7fb fb37 	bl	801138c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8015d1e:	4603      	mov	r3, r0
    }
 8015d20:	4618      	mov	r0, r3
 8015d22:	370c      	adds	r7, #12
 8015d24:	46bd      	mov	sp, r7
 8015d26:	bd90      	pop	{r4, r7, pc}

08015d28 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015d28:	b5b0      	push	{r4, r5, r7, lr}
 8015d2a:	b084      	sub	sp, #16
 8015d2c:	af00      	add	r7, sp, #0
 8015d2e:	60f8      	str	r0, [r7, #12]
 8015d30:	60b9      	str	r1, [r7, #8]
 8015d32:	713a      	strb	r2, [r7, #4]
 8015d34:	68fb      	ldr	r3, [r7, #12]
 8015d36:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015d38:	7e1b      	ldrb	r3, [r3, #24]
 8015d3a:	461c      	mov	r4, r3
 8015d3c:	1d3b      	adds	r3, r7, #4
 8015d3e:	4618      	mov	r0, r3
 8015d40:	f7f4 fff4 	bl	800ad2c <_ZNKSt17integral_constantIjLj1EEcvjEv>
 8015d44:	4603      	mov	r3, r0
 8015d46:	429c      	cmp	r4, r3
 8015d48:	bf0c      	ite	eq
 8015d4a:	2301      	moveq	r3, #1
 8015d4c:	2300      	movne	r3, #0
 8015d4e:	b2db      	uxtb	r3, r3
 8015d50:	2b00      	cmp	r3, #0
 8015d52:	d00c      	beq.n	8015d6e <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015d54:	68b8      	ldr	r0, [r7, #8]
 8015d56:	f7f5 f977 	bl	800b048 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 8015d5a:	4603      	mov	r3, r0
 8015d5c:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015d5e:	68fb      	ldr	r3, [r7, #12]
 8015d60:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015d62:	4618      	mov	r0, r3
 8015d64:	f000 f816 	bl	8015d94 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015d68:	4603      	mov	r3, r0
 8015d6a:	601c      	str	r4, [r3, #0]
	    return {};
 8015d6c:	e00d      	b.n	8015d8a <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015d6e:	68fb      	ldr	r3, [r7, #12]
 8015d70:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015d72:	4618      	mov	r0, r3
 8015d74:	f7fe fa11 	bl	801419a <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015d78:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015d7a:	68b8      	ldr	r0, [r7, #8]
 8015d7c:	f7f5 f964 	bl	800b048 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 8015d80:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015d82:	4619      	mov	r1, r3
 8015d84:	4620      	mov	r0, r4
 8015d86:	f7fb fba9 	bl	80114dc <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015d8a:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015d8c:	4618      	mov	r0, r3
 8015d8e:	3710      	adds	r7, #16
 8015d90:	46bd      	mov	sp, r7
 8015d92:	bdb0      	pop	{r4, r5, r7, pc}

08015d94 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015d94:	b590      	push	{r4, r7, lr}
 8015d96:	b083      	sub	sp, #12
 8015d98:	af00      	add	r7, sp, #0
 8015d9a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015d9c:	6878      	ldr	r0, [r7, #4]
 8015d9e:	f000 f980 	bl	80160a2 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015da2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015da4:	4619      	mov	r1, r3
 8015da6:	4620      	mov	r0, r4
 8015da8:	f7fb fb58 	bl	801145c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8015dac:	4603      	mov	r3, r0
    }
 8015dae:	4618      	mov	r0, r3
 8015db0:	370c      	adds	r7, #12
 8015db2:	46bd      	mov	sp, r7
 8015db4:	bd90      	pop	{r4, r7, pc}

08015db6 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015db6:	b5b0      	push	{r4, r5, r7, lr}
 8015db8:	b084      	sub	sp, #16
 8015dba:	af00      	add	r7, sp, #0
 8015dbc:	60f8      	str	r0, [r7, #12]
 8015dbe:	60b9      	str	r1, [r7, #8]
 8015dc0:	713a      	strb	r2, [r7, #4]
 8015dc2:	68fb      	ldr	r3, [r7, #12]
 8015dc4:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015dc6:	7e1b      	ldrb	r3, [r3, #24]
 8015dc8:	461c      	mov	r4, r3
 8015dca:	1d3b      	adds	r3, r7, #4
 8015dcc:	4618      	mov	r0, r3
 8015dce:	f7f5 f800 	bl	800add2 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8015dd2:	4603      	mov	r3, r0
 8015dd4:	429c      	cmp	r4, r3
 8015dd6:	bf0c      	ite	eq
 8015dd8:	2301      	moveq	r3, #1
 8015dda:	2300      	movne	r3, #0
 8015ddc:	b2db      	uxtb	r3, r3
 8015dde:	2b00      	cmp	r3, #0
 8015de0:	d00c      	beq.n	8015dfc <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015de2:	68b8      	ldr	r0, [r7, #8]
 8015de4:	f7f5 f95d 	bl	800b0a2 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 8015de8:	4603      	mov	r3, r0
 8015dea:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015dec:	68fb      	ldr	r3, [r7, #12]
 8015dee:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015df0:	4618      	mov	r0, r3
 8015df2:	f000 f816 	bl	8015e22 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015df6:	4603      	mov	r3, r0
 8015df8:	601c      	str	r4, [r3, #0]
	    return {};
 8015dfa:	e00d      	b.n	8015e18 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015dfc:	68fb      	ldr	r3, [r7, #12]
 8015dfe:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015e00:	4618      	mov	r0, r3
 8015e02:	f7fe f9ca 	bl	801419a <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015e06:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015e08:	68b8      	ldr	r0, [r7, #8]
 8015e0a:	f7f5 f94a 	bl	800b0a2 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 8015e0e:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015e10:	4619      	mov	r1, r3
 8015e12:	4620      	mov	r0, r4
 8015e14:	f7fb fbde 	bl	80115d4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015e18:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015e1a:	4618      	mov	r0, r3
 8015e1c:	3710      	adds	r7, #16
 8015e1e:	46bd      	mov	sp, r7
 8015e20:	bdb0      	pop	{r4, r5, r7, pc}

08015e22 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015e22:	b590      	push	{r4, r7, lr}
 8015e24:	b083      	sub	sp, #12
 8015e26:	af00      	add	r7, sp, #0
 8015e28:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015e2a:	6878      	ldr	r0, [r7, #4]
 8015e2c:	f000 f939 	bl	80160a2 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015e30:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015e32:	4619      	mov	r1, r3
 8015e34:	4620      	mov	r0, r4
 8015e36:	f7fb fb8d 	bl	8011554 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8015e3a:	4603      	mov	r3, r0
    }
 8015e3c:	4618      	mov	r0, r3
 8015e3e:	370c      	adds	r7, #12
 8015e40:	46bd      	mov	sp, r7
 8015e42:	bd90      	pop	{r4, r7, pc}

08015e44 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015e44:	b5b0      	push	{r4, r5, r7, lr}
 8015e46:	b084      	sub	sp, #16
 8015e48:	af00      	add	r7, sp, #0
 8015e4a:	60f8      	str	r0, [r7, #12]
 8015e4c:	60b9      	str	r1, [r7, #8]
 8015e4e:	713a      	strb	r2, [r7, #4]
 8015e50:	68fb      	ldr	r3, [r7, #12]
 8015e52:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015e54:	7e1b      	ldrb	r3, [r3, #24]
 8015e56:	461c      	mov	r4, r3
 8015e58:	1d3b      	adds	r3, r7, #4
 8015e5a:	4618      	mov	r0, r3
 8015e5c:	f7f5 f80d 	bl	800ae7a <_ZNKSt17integral_constantIjLj3EEcvjEv>
 8015e60:	4603      	mov	r3, r0
 8015e62:	429c      	cmp	r4, r3
 8015e64:	bf0c      	ite	eq
 8015e66:	2301      	moveq	r3, #1
 8015e68:	2300      	movne	r3, #0
 8015e6a:	b2db      	uxtb	r3, r3
 8015e6c:	2b00      	cmp	r3, #0
 8015e6e:	d00d      	beq.n	8015e8c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_+0x48>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015e70:	68b8      	ldr	r0, [r7, #8]
 8015e72:	f7f5 f943 	bl	800b0fc <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8015e76:	4603      	mov	r3, r0
 8015e78:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015e7a:	68fb      	ldr	r3, [r7, #12]
 8015e7c:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015e7e:	4618      	mov	r0, r3
 8015e80:	f000 f817 	bl	8015eb2 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015e84:	4603      	mov	r3, r0
 8015e86:	4622      	mov	r2, r4
 8015e88:	701a      	strb	r2, [r3, #0]
	    return {};
 8015e8a:	e00d      	b.n	8015ea8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_+0x64>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015e8c:	68fb      	ldr	r3, [r7, #12]
 8015e8e:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015e90:	4618      	mov	r0, r3
 8015e92:	f7fe f982 	bl	801419a <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015e96:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015e98:	68b8      	ldr	r0, [r7, #8]
 8015e9a:	f7f5 f92f 	bl	800b0fc <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8015e9e:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015ea0:	4619      	mov	r1, r3
 8015ea2:	4620      	mov	r0, r4
 8015ea4:	f000 f908 	bl	80160b8 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj3EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015ea8:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015eaa:	4618      	mov	r0, r3
 8015eac:	3710      	adds	r7, #16
 8015eae:	46bd      	mov	sp, r7
 8015eb0:	bdb0      	pop	{r4, r5, r7, pc}

08015eb2 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015eb2:	b590      	push	{r4, r7, lr}
 8015eb4:	b083      	sub	sp, #12
 8015eb6:	af00      	add	r7, sp, #0
 8015eb8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015eba:	6878      	ldr	r0, [r7, #4]
 8015ebc:	f000 f8f1 	bl	80160a2 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015ec0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015ec2:	4619      	mov	r1, r3
 8015ec4:	4620      	mov	r0, r4
 8015ec6:	f7fb ffa8 	bl	8011e1a <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8015eca:	4603      	mov	r3, r0
    }
 8015ecc:	4618      	mov	r0, r3
 8015ece:	370c      	adds	r7, #12
 8015ed0:	46bd      	mov	sp, r7
 8015ed2:	bd90      	pop	{r4, r7, pc}

08015ed4 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015ed4:	b580      	push	{r7, lr}
 8015ed6:	b082      	sub	sp, #8
 8015ed8:	af00      	add	r7, sp, #0
 8015eda:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015edc:	687b      	ldr	r3, [r7, #4]
 8015ede:	4618      	mov	r0, r3
 8015ee0:	f7f9 fb97 	bl	800f612 <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8015ee4:	4603      	mov	r3, r0
 8015ee6:	4618      	mov	r0, r3
 8015ee8:	f000 f8ff 	bl	80160ea <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>
 8015eec:	4603      	mov	r3, r0
 8015eee:	4618      	mov	r0, r3
 8015ef0:	3708      	adds	r7, #8
 8015ef2:	46bd      	mov	sp, r7
 8015ef4:	bd80      	pop	{r7, pc}

08015ef6 <_ZSt3maxIjERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
 8015ef6:	b480      	push	{r7}
 8015ef8:	b083      	sub	sp, #12
 8015efa:	af00      	add	r7, sp, #0
 8015efc:	6078      	str	r0, [r7, #4]
 8015efe:	6039      	str	r1, [r7, #0]
      if (__a < __b)
 8015f00:	687b      	ldr	r3, [r7, #4]
 8015f02:	681a      	ldr	r2, [r3, #0]
 8015f04:	683b      	ldr	r3, [r7, #0]
 8015f06:	681b      	ldr	r3, [r3, #0]
 8015f08:	429a      	cmp	r2, r3
 8015f0a:	d201      	bcs.n	8015f10 <_ZSt3maxIjERKT_S2_S2_+0x1a>
	return __b;
 8015f0c:	683b      	ldr	r3, [r7, #0]
 8015f0e:	e000      	b.n	8015f12 <_ZSt3maxIjERKT_S2_S2_+0x1c>
      return __a;
 8015f10:	687b      	ldr	r3, [r7, #4]
    }
 8015f12:	4618      	mov	r0, r3
 8015f14:	370c      	adds	r7, #12
 8015f16:	46bd      	mov	sp, r7
 8015f18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f1c:	4770      	bx	lr

08015f1e <_ZNSt6vectorIP10ExpressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015f1e:	b580      	push	{r7, lr}
 8015f20:	b084      	sub	sp, #16
 8015f22:	af00      	add	r7, sp, #0
 8015f24:	60f8      	str	r0, [r7, #12]
 8015f26:	60b9      	str	r1, [r7, #8]
 8015f28:	607a      	str	r2, [r7, #4]
 8015f2a:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015f2c:	683b      	ldr	r3, [r7, #0]
 8015f2e:	687a      	ldr	r2, [r7, #4]
 8015f30:	68b9      	ldr	r1, [r7, #8]
 8015f32:	68f8      	ldr	r0, [r7, #12]
 8015f34:	f000 f8f3 	bl	801611e <_ZSt12__relocate_aIPP10ExpressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015f38:	4603      	mov	r3, r0
      }
 8015f3a:	4618      	mov	r0, r3
 8015f3c:	3710      	adds	r7, #16
 8015f3e:	46bd      	mov	sp, r7
 8015f40:	bd80      	pop	{r7, pc}

08015f42 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015f42:	b580      	push	{r7, lr}
 8015f44:	b082      	sub	sp, #8
 8015f46:	af00      	add	r7, sp, #0
 8015f48:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015f4a:	687b      	ldr	r3, [r7, #4]
 8015f4c:	4618      	mov	r0, r3
 8015f4e:	f000 f91d 	bl	801618c <_ZNKSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 8015f52:	4603      	mov	r3, r0
 8015f54:	4618      	mov	r0, r3
 8015f56:	f000 f8ff 	bl	8016158 <_ZNSt6vectorIP4BodySaIS1_EE11_S_max_sizeERKS2_>
 8015f5a:	4603      	mov	r3, r0
 8015f5c:	4618      	mov	r0, r3
 8015f5e:	3708      	adds	r7, #8
 8015f60:	46bd      	mov	sp, r7
 8015f62:	bd80      	pop	{r7, pc}

08015f64 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8015f64:	b480      	push	{r7}
 8015f66:	b083      	sub	sp, #12
 8015f68:	af00      	add	r7, sp, #0
 8015f6a:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8015f6c:	687b      	ldr	r3, [r7, #4]
 8015f6e:	685a      	ldr	r2, [r3, #4]
 8015f70:	687b      	ldr	r3, [r7, #4]
 8015f72:	681b      	ldr	r3, [r3, #0]
 8015f74:	1ad3      	subs	r3, r2, r3
 8015f76:	109b      	asrs	r3, r3, #2
 8015f78:	4618      	mov	r0, r3
 8015f7a:	370c      	adds	r7, #12
 8015f7c:	46bd      	mov	sp, r7
 8015f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f82:	4770      	bx	lr

08015f84 <_ZNSt16allocator_traitsISaIP4BodyEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 8015f84:	b580      	push	{r7, lr}
 8015f86:	b082      	sub	sp, #8
 8015f88:	af00      	add	r7, sp, #0
 8015f8a:	6078      	str	r0, [r7, #4]
 8015f8c:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8015f8e:	2200      	movs	r2, #0
 8015f90:	6839      	ldr	r1, [r7, #0]
 8015f92:	6878      	ldr	r0, [r7, #4]
 8015f94:	f000 f905 	bl	80161a2 <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv>
 8015f98:	4603      	mov	r3, r0
 8015f9a:	4618      	mov	r0, r3
 8015f9c:	3708      	adds	r7, #8
 8015f9e:	46bd      	mov	sp, r7
 8015fa0:	bd80      	pop	{r7, pc}

08015fa2 <_ZNSt6vectorIP4BodySaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015fa2:	b580      	push	{r7, lr}
 8015fa4:	b084      	sub	sp, #16
 8015fa6:	af00      	add	r7, sp, #0
 8015fa8:	60f8      	str	r0, [r7, #12]
 8015faa:	60b9      	str	r1, [r7, #8]
 8015fac:	607a      	str	r2, [r7, #4]
 8015fae:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015fb0:	683b      	ldr	r3, [r7, #0]
 8015fb2:	687a      	ldr	r2, [r7, #4]
 8015fb4:	68b9      	ldr	r1, [r7, #8]
 8015fb6:	68f8      	ldr	r0, [r7, #12]
 8015fb8:	f000 f912 	bl	80161e0 <_ZSt12__relocate_aIPP4BodyS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015fbc:	4603      	mov	r3, r0
      }
 8015fbe:	4618      	mov	r0, r3
 8015fc0:	3710      	adds	r7, #16
 8015fc2:	46bd      	mov	sp, r7
 8015fc4:	bd80      	pop	{r7, pc}

08015fc6 <_ZSt11__addressofIP11Method_callEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015fc6:	b480      	push	{r7}
 8015fc8:	b083      	sub	sp, #12
 8015fca:	af00      	add	r7, sp, #0
 8015fcc:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015fce:	687b      	ldr	r3, [r7, #4]
 8015fd0:	4618      	mov	r0, r3
 8015fd2:	370c      	adds	r7, #12
 8015fd4:	46bd      	mov	sp, r7
 8015fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015fda:	4770      	bx	lr

08015fdc <_ZSt11__addressofIP10AssignmentEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015fdc:	b480      	push	{r7}
 8015fde:	b083      	sub	sp, #12
 8015fe0:	af00      	add	r7, sp, #0
 8015fe2:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015fe4:	687b      	ldr	r3, [r7, #4]
 8015fe6:	4618      	mov	r0, r3
 8015fe8:	370c      	adds	r7, #12
 8015fea:	46bd      	mov	sp, r7
 8015fec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015ff0:	4770      	bx	lr

08015ff2 <_ZSt11__addressofIP15While_statementEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015ff2:	b480      	push	{r7}
 8015ff4:	b083      	sub	sp, #12
 8015ff6:	af00      	add	r7, sp, #0
 8015ff8:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015ffa:	687b      	ldr	r3, [r7, #4]
 8015ffc:	4618      	mov	r0, r3
 8015ffe:	370c      	adds	r7, #12
 8016000:	46bd      	mov	sp, r7
 8016002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016006:	4770      	bx	lr

08016008 <_ZSt11__addressofIP12If_statementEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8016008:	b480      	push	{r7}
 801600a:	b083      	sub	sp, #12
 801600c:	af00      	add	r7, sp, #0
 801600e:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8016010:	687b      	ldr	r3, [r7, #4]
 8016012:	4618      	mov	r0, r3
 8016014:	370c      	adds	r7, #12
 8016016:	46bd      	mov	sp, r7
 8016018:	f85d 7b04 	ldr.w	r7, [sp], #4
 801601c:	4770      	bx	lr

0801601e <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801601e:	b580      	push	{r7, lr}
 8016020:	b082      	sub	sp, #8
 8016022:	af00      	add	r7, sp, #0
 8016024:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8016026:	687b      	ldr	r3, [r7, #4]
 8016028:	4618      	mov	r0, r3
 801602a:	f000 f910 	bl	801624e <_ZNKSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 801602e:	4603      	mov	r3, r0
 8016030:	4618      	mov	r0, r3
 8016032:	f000 f8f2 	bl	801621a <_ZNSt6vectorIP9StatementSaIS1_EE11_S_max_sizeERKS2_>
 8016036:	4603      	mov	r3, r0
 8016038:	4618      	mov	r0, r3
 801603a:	3708      	adds	r7, #8
 801603c:	46bd      	mov	sp, r7
 801603e:	bd80      	pop	{r7, pc}

08016040 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8016040:	b480      	push	{r7}
 8016042:	b083      	sub	sp, #12
 8016044:	af00      	add	r7, sp, #0
 8016046:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8016048:	687b      	ldr	r3, [r7, #4]
 801604a:	685a      	ldr	r2, [r3, #4]
 801604c:	687b      	ldr	r3, [r7, #4]
 801604e:	681b      	ldr	r3, [r3, #0]
 8016050:	1ad3      	subs	r3, r2, r3
 8016052:	109b      	asrs	r3, r3, #2
 8016054:	4618      	mov	r0, r3
 8016056:	370c      	adds	r7, #12
 8016058:	46bd      	mov	sp, r7
 801605a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801605e:	4770      	bx	lr

08016060 <_ZNSt16allocator_traitsISaIP9StatementEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 8016060:	b580      	push	{r7, lr}
 8016062:	b082      	sub	sp, #8
 8016064:	af00      	add	r7, sp, #0
 8016066:	6078      	str	r0, [r7, #4]
 8016068:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801606a:	2200      	movs	r2, #0
 801606c:	6839      	ldr	r1, [r7, #0]
 801606e:	6878      	ldr	r0, [r7, #4]
 8016070:	f000 f8f8 	bl	8016264 <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv>
 8016074:	4603      	mov	r3, r0
 8016076:	4618      	mov	r0, r3
 8016078:	3708      	adds	r7, #8
 801607a:	46bd      	mov	sp, r7
 801607c:	bd80      	pop	{r7, pc}

0801607e <_ZNSt6vectorIP9StatementSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801607e:	b580      	push	{r7, lr}
 8016080:	b084      	sub	sp, #16
 8016082:	af00      	add	r7, sp, #0
 8016084:	60f8      	str	r0, [r7, #12]
 8016086:	60b9      	str	r1, [r7, #8]
 8016088:	607a      	str	r2, [r7, #4]
 801608a:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801608c:	683b      	ldr	r3, [r7, #0]
 801608e:	687a      	ldr	r2, [r7, #4]
 8016090:	68b9      	ldr	r1, [r7, #8]
 8016092:	68f8      	ldr	r0, [r7, #12]
 8016094:	f000 f905 	bl	80162a2 <_ZSt12__relocate_aIPP9StatementS2_SaIS1_EET0_T_S5_S4_RT1_>
 8016098:	4603      	mov	r3, r0
      }
 801609a:	4618      	mov	r0, r3
 801609c:	3710      	adds	r7, #16
 801609e:	46bd      	mov	sp, r7
 80160a0:	bd80      	pop	{r7, pc}

080160a2 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80160a2:	b480      	push	{r7}
 80160a4:	b083      	sub	sp, #12
 80160a6:	af00      	add	r7, sp, #0
 80160a8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80160aa:	687b      	ldr	r3, [r7, #4]
 80160ac:	4618      	mov	r0, r3
 80160ae:	370c      	adds	r7, #12
 80160b0:	46bd      	mov	sp, r7
 80160b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80160b6:	4770      	bx	lr

080160b8 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj3EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 80160b8:	b580      	push	{r7, lr}
 80160ba:	b082      	sub	sp, #8
 80160bc:	af00      	add	r7, sp, #0
 80160be:	6078      	str	r0, [r7, #4]
 80160c0:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80160c2:	687b      	ldr	r3, [r7, #4]
 80160c4:	4618      	mov	r0, r3
 80160c6:	f7fb f86c 	bl	80111a2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80160ca:	6838      	ldr	r0, [r7, #0]
 80160cc:	f7f5 f821 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 80160d0:	4603      	mov	r3, r0
 80160d2:	4619      	mov	r1, r3
 80160d4:	6878      	ldr	r0, [r7, #4]
 80160d6:	f000 f901 	bl	80162dc <_ZSt28__variant_construct_by_indexILj3ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80160da:	6878      	ldr	r0, [r7, #4]
 80160dc:	f000 f91e 	bl	801631c <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 80160e0:	4603      	mov	r3, r0
	}
 80160e2:	4618      	mov	r0, r3
 80160e4:	3708      	adds	r7, #8
 80160e6:	46bd      	mov	sp, r7
 80160e8:	bd80      	pop	{r7, pc}

080160ea <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 80160ea:	b580      	push	{r7, lr}
 80160ec:	b084      	sub	sp, #16
 80160ee:	af00      	add	r7, sp, #0
 80160f0:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 80160f2:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 80160f6:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 80160f8:	6878      	ldr	r0, [r7, #4]
 80160fa:	f000 f93f 	bl	801637c <_ZNSt16allocator_traitsISaIP10ExpressionEE8max_sizeERKS2_>
 80160fe:	4603      	mov	r3, r0
 8016100:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8016102:	f107 0208 	add.w	r2, r7, #8
 8016106:	f107 030c 	add.w	r3, r7, #12
 801610a:	4611      	mov	r1, r2
 801610c:	4618      	mov	r0, r3
 801610e:	f000 f921 	bl	8016354 <_ZSt3minIjERKT_S2_S2_>
 8016112:	4603      	mov	r3, r0
 8016114:	681b      	ldr	r3, [r3, #0]
      }
 8016116:	4618      	mov	r0, r3
 8016118:	3710      	adds	r7, #16
 801611a:	46bd      	mov	sp, r7
 801611c:	bd80      	pop	{r7, pc}

0801611e <_ZSt12__relocate_aIPP10ExpressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    }

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801611e:	b5b0      	push	{r4, r5, r7, lr}
 8016120:	b084      	sub	sp, #16
 8016122:	af00      	add	r7, sp, #0
 8016124:	60f8      	str	r0, [r7, #12]
 8016126:	60b9      	str	r1, [r7, #8]
 8016128:	607a      	str	r2, [r7, #4]
 801612a:	603b      	str	r3, [r7, #0]
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return __relocate_a_1(std::__niter_base(__first),
 801612c:	68f8      	ldr	r0, [r7, #12]
 801612e:	f7f9 fe0d 	bl	800fd4c <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 8016132:	4604      	mov	r4, r0
 8016134:	68b8      	ldr	r0, [r7, #8]
 8016136:	f7f9 fe09 	bl	800fd4c <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 801613a:	4605      	mov	r5, r0
 801613c:	6878      	ldr	r0, [r7, #4]
 801613e:	f7f9 fe05 	bl	800fd4c <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 8016142:	4602      	mov	r2, r0
 8016144:	683b      	ldr	r3, [r7, #0]
 8016146:	4629      	mov	r1, r5
 8016148:	4620      	mov	r0, r4
 801614a:	f000 f923 	bl	8016394 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801614e:	4603      	mov	r3, r0
			    std::__niter_base(__last),
			    std::__niter_base(__result), __alloc);
    }
 8016150:	4618      	mov	r0, r3
 8016152:	3710      	adds	r7, #16
 8016154:	46bd      	mov	sp, r7
 8016156:	bdb0      	pop	{r4, r5, r7, pc}

08016158 <_ZNSt6vectorIP4BodySaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8016158:	b580      	push	{r7, lr}
 801615a:	b084      	sub	sp, #16
 801615c:	af00      	add	r7, sp, #0
 801615e:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8016160:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8016164:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8016166:	6878      	ldr	r0, [r7, #4]
 8016168:	f000 f932 	bl	80163d0 <_ZNSt16allocator_traitsISaIP4BodyEE8max_sizeERKS2_>
 801616c:	4603      	mov	r3, r0
 801616e:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8016170:	f107 0208 	add.w	r2, r7, #8
 8016174:	f107 030c 	add.w	r3, r7, #12
 8016178:	4611      	mov	r1, r2
 801617a:	4618      	mov	r0, r3
 801617c:	f000 f8ea 	bl	8016354 <_ZSt3minIjERKT_S2_S2_>
 8016180:	4603      	mov	r3, r0
 8016182:	681b      	ldr	r3, [r3, #0]
      }
 8016184:	4618      	mov	r0, r3
 8016186:	3710      	adds	r7, #16
 8016188:	46bd      	mov	sp, r7
 801618a:	bd80      	pop	{r7, pc}

0801618c <_ZNKSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801618c:	b480      	push	{r7}
 801618e:	b083      	sub	sp, #12
 8016190:	af00      	add	r7, sp, #0
 8016192:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8016194:	687b      	ldr	r3, [r7, #4]
 8016196:	4618      	mov	r0, r3
 8016198:	370c      	adds	r7, #12
 801619a:	46bd      	mov	sp, r7
 801619c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80161a0:	4770      	bx	lr

080161a2 <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80161a2:	b580      	push	{r7, lr}
 80161a4:	b084      	sub	sp, #16
 80161a6:	af00      	add	r7, sp, #0
 80161a8:	60f8      	str	r0, [r7, #12]
 80161aa:	60b9      	str	r1, [r7, #8]
 80161ac:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 80161ae:	68f8      	ldr	r0, [r7, #12]
 80161b0:	f000 f91a 	bl	80163e8 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>
 80161b4:	4602      	mov	r2, r0
 80161b6:	68bb      	ldr	r3, [r7, #8]
 80161b8:	4293      	cmp	r3, r2
 80161ba:	bf8c      	ite	hi
 80161bc:	2301      	movhi	r3, #1
 80161be:	2300      	movls	r3, #0
 80161c0:	b2db      	uxtb	r3, r3
 80161c2:	2b00      	cmp	r3, #0
 80161c4:	d001      	beq.n	80161ca <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80161c6:	f00c fe04 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80161ca:	68bb      	ldr	r3, [r7, #8]
 80161cc:	009b      	lsls	r3, r3, #2
 80161ce:	4618      	mov	r0, r3
 80161d0:	f00c fd3a 	bl	8022c48 <_Znwj>
 80161d4:	4603      	mov	r3, r0
 80161d6:	bf00      	nop
      }
 80161d8:	4618      	mov	r0, r3
 80161da:	3710      	adds	r7, #16
 80161dc:	46bd      	mov	sp, r7
 80161de:	bd80      	pop	{r7, pc}

080161e0 <_ZSt12__relocate_aIPP4BodyS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 80161e0:	b5b0      	push	{r4, r5, r7, lr}
 80161e2:	b084      	sub	sp, #16
 80161e4:	af00      	add	r7, sp, #0
 80161e6:	60f8      	str	r0, [r7, #12]
 80161e8:	60b9      	str	r1, [r7, #8]
 80161ea:	607a      	str	r2, [r7, #4]
 80161ec:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 80161ee:	68f8      	ldr	r0, [r7, #12]
 80161f0:	f000 f906 	bl	8016400 <_ZSt12__niter_baseIPP4BodyET_S3_>
 80161f4:	4604      	mov	r4, r0
 80161f6:	68b8      	ldr	r0, [r7, #8]
 80161f8:	f000 f902 	bl	8016400 <_ZSt12__niter_baseIPP4BodyET_S3_>
 80161fc:	4605      	mov	r5, r0
 80161fe:	6878      	ldr	r0, [r7, #4]
 8016200:	f000 f8fe 	bl	8016400 <_ZSt12__niter_baseIPP4BodyET_S3_>
 8016204:	4602      	mov	r2, r0
 8016206:	683b      	ldr	r3, [r7, #0]
 8016208:	4629      	mov	r1, r5
 801620a:	4620      	mov	r0, r4
 801620c:	f000 f903 	bl	8016416 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8016210:	4603      	mov	r3, r0
    }
 8016212:	4618      	mov	r0, r3
 8016214:	3710      	adds	r7, #16
 8016216:	46bd      	mov	sp, r7
 8016218:	bdb0      	pop	{r4, r5, r7, pc}

0801621a <_ZNSt6vectorIP9StatementSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801621a:	b580      	push	{r7, lr}
 801621c:	b084      	sub	sp, #16
 801621e:	af00      	add	r7, sp, #0
 8016220:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8016222:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8016226:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8016228:	6878      	ldr	r0, [r7, #4]
 801622a:	f000 f912 	bl	8016452 <_ZNSt16allocator_traitsISaIP9StatementEE8max_sizeERKS2_>
 801622e:	4603      	mov	r3, r0
 8016230:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8016232:	f107 0208 	add.w	r2, r7, #8
 8016236:	f107 030c 	add.w	r3, r7, #12
 801623a:	4611      	mov	r1, r2
 801623c:	4618      	mov	r0, r3
 801623e:	f000 f889 	bl	8016354 <_ZSt3minIjERKT_S2_S2_>
 8016242:	4603      	mov	r3, r0
 8016244:	681b      	ldr	r3, [r3, #0]
      }
 8016246:	4618      	mov	r0, r3
 8016248:	3710      	adds	r7, #16
 801624a:	46bd      	mov	sp, r7
 801624c:	bd80      	pop	{r7, pc}

0801624e <_ZNKSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801624e:	b480      	push	{r7}
 8016250:	b083      	sub	sp, #12
 8016252:	af00      	add	r7, sp, #0
 8016254:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8016256:	687b      	ldr	r3, [r7, #4]
 8016258:	4618      	mov	r0, r3
 801625a:	370c      	adds	r7, #12
 801625c:	46bd      	mov	sp, r7
 801625e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016262:	4770      	bx	lr

08016264 <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8016264:	b580      	push	{r7, lr}
 8016266:	b084      	sub	sp, #16
 8016268:	af00      	add	r7, sp, #0
 801626a:	60f8      	str	r0, [r7, #12]
 801626c:	60b9      	str	r1, [r7, #8]
 801626e:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8016270:	68f8      	ldr	r0, [r7, #12]
 8016272:	f000 f8fa 	bl	801646a <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>
 8016276:	4602      	mov	r2, r0
 8016278:	68bb      	ldr	r3, [r7, #8]
 801627a:	4293      	cmp	r3, r2
 801627c:	bf8c      	ite	hi
 801627e:	2301      	movhi	r3, #1
 8016280:	2300      	movls	r3, #0
 8016282:	b2db      	uxtb	r3, r3
 8016284:	2b00      	cmp	r3, #0
 8016286:	d001      	beq.n	801628c <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8016288:	f00c fda3 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801628c:	68bb      	ldr	r3, [r7, #8]
 801628e:	009b      	lsls	r3, r3, #2
 8016290:	4618      	mov	r0, r3
 8016292:	f00c fcd9 	bl	8022c48 <_Znwj>
 8016296:	4603      	mov	r3, r0
 8016298:	bf00      	nop
      }
 801629a:	4618      	mov	r0, r3
 801629c:	3710      	adds	r7, #16
 801629e:	46bd      	mov	sp, r7
 80162a0:	bd80      	pop	{r7, pc}

080162a2 <_ZSt12__relocate_aIPP9StatementS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 80162a2:	b5b0      	push	{r4, r5, r7, lr}
 80162a4:	b084      	sub	sp, #16
 80162a6:	af00      	add	r7, sp, #0
 80162a8:	60f8      	str	r0, [r7, #12]
 80162aa:	60b9      	str	r1, [r7, #8]
 80162ac:	607a      	str	r2, [r7, #4]
 80162ae:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 80162b0:	68f8      	ldr	r0, [r7, #12]
 80162b2:	f000 f8e6 	bl	8016482 <_ZSt12__niter_baseIPP9StatementET_S3_>
 80162b6:	4604      	mov	r4, r0
 80162b8:	68b8      	ldr	r0, [r7, #8]
 80162ba:	f000 f8e2 	bl	8016482 <_ZSt12__niter_baseIPP9StatementET_S3_>
 80162be:	4605      	mov	r5, r0
 80162c0:	6878      	ldr	r0, [r7, #4]
 80162c2:	f000 f8de 	bl	8016482 <_ZSt12__niter_baseIPP9StatementET_S3_>
 80162c6:	4602      	mov	r2, r0
 80162c8:	683b      	ldr	r3, [r7, #0]
 80162ca:	4629      	mov	r1, r5
 80162cc:	4620      	mov	r0, r4
 80162ce:	f000 f8e3 	bl	8016498 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 80162d2:	4603      	mov	r3, r0
    }
 80162d4:	4618      	mov	r0, r3
 80162d6:	3710      	adds	r7, #16
 80162d8:	46bd      	mov	sp, r7
 80162da:	bdb0      	pop	{r4, r5, r7, pc}

080162dc <_ZSt28__variant_construct_by_indexILj3ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80162dc:	b590      	push	{r4, r7, lr}
 80162de:	b085      	sub	sp, #20
 80162e0:	af00      	add	r7, sp, #0
 80162e2:	6078      	str	r0, [r7, #4]
 80162e4:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80162e6:	687b      	ldr	r3, [r7, #4]
 80162e8:	2203      	movs	r2, #3
 80162ea:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80162ec:	6878      	ldr	r0, [r7, #4]
 80162ee:	f7fb fda6 	bl	8011e3e <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80162f2:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80162f4:	6838      	ldr	r0, [r7, #0]
 80162f6:	f7f4 ff0c 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 80162fa:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80162fc:	781c      	ldrb	r4, [r3, #0]
 80162fe:	68f8      	ldr	r0, [r7, #12]
 8016300:	f7f7 f809 	bl	800d316 <_ZSt9addressofIbEPT_RS0_>
 8016304:	4603      	mov	r3, r0
 8016306:	4619      	mov	r1, r3
 8016308:	2001      	movs	r0, #1
 801630a:	f7ea fea6 	bl	800105a <_ZnwjPv>
 801630e:	4603      	mov	r3, r0
 8016310:	4622      	mov	r2, r4
 8016312:	701a      	strb	r2, [r3, #0]
    }
 8016314:	bf00      	nop
 8016316:	3714      	adds	r7, #20
 8016318:	46bd      	mov	sp, r7
 801631a:	bd90      	pop	{r4, r7, pc}

0801631c <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 801631c:	b580      	push	{r7, lr}
 801631e:	b082      	sub	sp, #8
 8016320:	af00      	add	r7, sp, #0
 8016322:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8016324:	6878      	ldr	r0, [r7, #4]
 8016326:	f7fa fe5f 	bl	8010fe8 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 801632a:	4603      	mov	r3, r0
 801632c:	2b03      	cmp	r3, #3
 801632e:	bf14      	ite	ne
 8016330:	2301      	movne	r3, #1
 8016332:	2300      	moveq	r3, #0
 8016334:	b2db      	uxtb	r3, r3
 8016336:	2b00      	cmp	r3, #0
 8016338:	d002      	beq.n	8016340 <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 801633a:	4805      	ldr	r0, [pc, #20]	; (8016350 <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 801633c:	f7ed ff44 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8016340:	6878      	ldr	r0, [r7, #4]
 8016342:	f7fb fd7c 	bl	8011e3e <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8016346:	4603      	mov	r3, r0
    }
 8016348:	4618      	mov	r0, r3
 801634a:	3708      	adds	r7, #8
 801634c:	46bd      	mov	sp, r7
 801634e:	bd80      	pop	{r7, pc}
 8016350:	080277a4 	.word	0x080277a4

08016354 <_ZSt3minIjERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
 8016354:	b480      	push	{r7}
 8016356:	b083      	sub	sp, #12
 8016358:	af00      	add	r7, sp, #0
 801635a:	6078      	str	r0, [r7, #4]
 801635c:	6039      	str	r1, [r7, #0]
      if (__b < __a)
 801635e:	683b      	ldr	r3, [r7, #0]
 8016360:	681a      	ldr	r2, [r3, #0]
 8016362:	687b      	ldr	r3, [r7, #4]
 8016364:	681b      	ldr	r3, [r3, #0]
 8016366:	429a      	cmp	r2, r3
 8016368:	d201      	bcs.n	801636e <_ZSt3minIjERKT_S2_S2_+0x1a>
	return __b;
 801636a:	683b      	ldr	r3, [r7, #0]
 801636c:	e000      	b.n	8016370 <_ZSt3minIjERKT_S2_S2_+0x1c>
      return __a;
 801636e:	687b      	ldr	r3, [r7, #4]
    }
 8016370:	4618      	mov	r0, r3
 8016372:	370c      	adds	r7, #12
 8016374:	46bd      	mov	sp, r7
 8016376:	f85d 7b04 	ldr.w	r7, [sp], #4
 801637a:	4770      	bx	lr

0801637c <_ZNSt16allocator_traitsISaIP10ExpressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801637c:	b580      	push	{r7, lr}
 801637e:	b082      	sub	sp, #8
 8016380:	af00      	add	r7, sp, #0
 8016382:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8016384:	6878      	ldr	r0, [r7, #4]
 8016386:	f7f9 fcc7 	bl	800fd18 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>
 801638a:	4603      	mov	r3, r0
 801638c:	4618      	mov	r0, r3
 801638e:	3708      	adds	r7, #8
 8016390:	46bd      	mov	sp, r7
 8016392:	bd80      	pop	{r7, pc}

08016394 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8016394:	b580      	push	{r7, lr}
 8016396:	b086      	sub	sp, #24
 8016398:	af00      	add	r7, sp, #0
 801639a:	60f8      	str	r0, [r7, #12]
 801639c:	60b9      	str	r1, [r7, #8]
 801639e:	607a      	str	r2, [r7, #4]
 80163a0:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 80163a2:	68ba      	ldr	r2, [r7, #8]
 80163a4:	68fb      	ldr	r3, [r7, #12]
 80163a6:	1ad3      	subs	r3, r2, r3
 80163a8:	109b      	asrs	r3, r3, #2
 80163aa:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 80163ac:	697b      	ldr	r3, [r7, #20]
 80163ae:	2b00      	cmp	r3, #0
 80163b0:	dd06      	ble.n	80163c0 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 80163b2:	697b      	ldr	r3, [r7, #20]
 80163b4:	009b      	lsls	r3, r3, #2
 80163b6:	461a      	mov	r2, r3
 80163b8:	68f9      	ldr	r1, [r7, #12]
 80163ba:	6878      	ldr	r0, [r7, #4]
 80163bc:	f00d ffb0 	bl	8024320 <memmove>
      return __result + __count;
 80163c0:	697b      	ldr	r3, [r7, #20]
 80163c2:	009b      	lsls	r3, r3, #2
 80163c4:	687a      	ldr	r2, [r7, #4]
 80163c6:	4413      	add	r3, r2
    }
 80163c8:	4618      	mov	r0, r3
 80163ca:	3718      	adds	r7, #24
 80163cc:	46bd      	mov	sp, r7
 80163ce:	bd80      	pop	{r7, pc}

080163d0 <_ZNSt16allocator_traitsISaIP4BodyEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 80163d0:	b580      	push	{r7, lr}
 80163d2:	b082      	sub	sp, #8
 80163d4:	af00      	add	r7, sp, #0
 80163d6:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 80163d8:	6878      	ldr	r0, [r7, #4]
 80163da:	f000 f805 	bl	80163e8 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>
 80163de:	4603      	mov	r3, r0
 80163e0:	4618      	mov	r0, r3
 80163e2:	3708      	adds	r7, #8
 80163e4:	46bd      	mov	sp, r7
 80163e6:	bd80      	pop	{r7, pc}

080163e8 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 80163e8:	b480      	push	{r7}
 80163ea:	b083      	sub	sp, #12
 80163ec:	af00      	add	r7, sp, #0
 80163ee:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 80163f0:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 80163f4:	4618      	mov	r0, r3
 80163f6:	370c      	adds	r7, #12
 80163f8:	46bd      	mov	sp, r7
 80163fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80163fe:	4770      	bx	lr

08016400 <_ZSt12__niter_baseIPP4BodyET_S3_>:
    __niter_base(_Iterator __it)
 8016400:	b480      	push	{r7}
 8016402:	b083      	sub	sp, #12
 8016404:	af00      	add	r7, sp, #0
 8016406:	6078      	str	r0, [r7, #4]
    { return __it; }
 8016408:	687b      	ldr	r3, [r7, #4]
 801640a:	4618      	mov	r0, r3
 801640c:	370c      	adds	r7, #12
 801640e:	46bd      	mov	sp, r7
 8016410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016414:	4770      	bx	lr

08016416 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8016416:	b580      	push	{r7, lr}
 8016418:	b086      	sub	sp, #24
 801641a:	af00      	add	r7, sp, #0
 801641c:	60f8      	str	r0, [r7, #12]
 801641e:	60b9      	str	r1, [r7, #8]
 8016420:	607a      	str	r2, [r7, #4]
 8016422:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8016424:	68ba      	ldr	r2, [r7, #8]
 8016426:	68fb      	ldr	r3, [r7, #12]
 8016428:	1ad3      	subs	r3, r2, r3
 801642a:	109b      	asrs	r3, r3, #2
 801642c:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801642e:	697b      	ldr	r3, [r7, #20]
 8016430:	2b00      	cmp	r3, #0
 8016432:	dd06      	ble.n	8016442 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8016434:	697b      	ldr	r3, [r7, #20]
 8016436:	009b      	lsls	r3, r3, #2
 8016438:	461a      	mov	r2, r3
 801643a:	68f9      	ldr	r1, [r7, #12]
 801643c:	6878      	ldr	r0, [r7, #4]
 801643e:	f00d ff6f 	bl	8024320 <memmove>
      return __result + __count;
 8016442:	697b      	ldr	r3, [r7, #20]
 8016444:	009b      	lsls	r3, r3, #2
 8016446:	687a      	ldr	r2, [r7, #4]
 8016448:	4413      	add	r3, r2
    }
 801644a:	4618      	mov	r0, r3
 801644c:	3718      	adds	r7, #24
 801644e:	46bd      	mov	sp, r7
 8016450:	bd80      	pop	{r7, pc}

08016452 <_ZNSt16allocator_traitsISaIP9StatementEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8016452:	b580      	push	{r7, lr}
 8016454:	b082      	sub	sp, #8
 8016456:	af00      	add	r7, sp, #0
 8016458:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801645a:	6878      	ldr	r0, [r7, #4]
 801645c:	f000 f805 	bl	801646a <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>
 8016460:	4603      	mov	r3, r0
 8016462:	4618      	mov	r0, r3
 8016464:	3708      	adds	r7, #8
 8016466:	46bd      	mov	sp, r7
 8016468:	bd80      	pop	{r7, pc}

0801646a <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801646a:	b480      	push	{r7}
 801646c:	b083      	sub	sp, #12
 801646e:	af00      	add	r7, sp, #0
 8016470:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8016472:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8016476:	4618      	mov	r0, r3
 8016478:	370c      	adds	r7, #12
 801647a:	46bd      	mov	sp, r7
 801647c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016480:	4770      	bx	lr

08016482 <_ZSt12__niter_baseIPP9StatementET_S3_>:
    __niter_base(_Iterator __it)
 8016482:	b480      	push	{r7}
 8016484:	b083      	sub	sp, #12
 8016486:	af00      	add	r7, sp, #0
 8016488:	6078      	str	r0, [r7, #4]
    { return __it; }
 801648a:	687b      	ldr	r3, [r7, #4]
 801648c:	4618      	mov	r0, r3
 801648e:	370c      	adds	r7, #12
 8016490:	46bd      	mov	sp, r7
 8016492:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016496:	4770      	bx	lr

08016498 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8016498:	b580      	push	{r7, lr}
 801649a:	b086      	sub	sp, #24
 801649c:	af00      	add	r7, sp, #0
 801649e:	60f8      	str	r0, [r7, #12]
 80164a0:	60b9      	str	r1, [r7, #8]
 80164a2:	607a      	str	r2, [r7, #4]
 80164a4:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 80164a6:	68ba      	ldr	r2, [r7, #8]
 80164a8:	68fb      	ldr	r3, [r7, #12]
 80164aa:	1ad3      	subs	r3, r2, r3
 80164ac:	109b      	asrs	r3, r3, #2
 80164ae:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 80164b0:	697b      	ldr	r3, [r7, #20]
 80164b2:	2b00      	cmp	r3, #0
 80164b4:	dd06      	ble.n	80164c4 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 80164b6:	697b      	ldr	r3, [r7, #20]
 80164b8:	009b      	lsls	r3, r3, #2
 80164ba:	461a      	mov	r2, r3
 80164bc:	68f9      	ldr	r1, [r7, #12]
 80164be:	6878      	ldr	r0, [r7, #4]
 80164c0:	f00d ff2e 	bl	8024320 <memmove>
      return __result + __count;
 80164c4:	697b      	ldr	r3, [r7, #20]
 80164c6:	009b      	lsls	r3, r3, #2
 80164c8:	687a      	ldr	r2, [r7, #4]
 80164ca:	4413      	add	r3, r2
    }
 80164cc:	4618      	mov	r0, r3
 80164ce:	3718      	adds	r7, #24
 80164d0:	46bd      	mov	sp, r7
 80164d2:	bd80      	pop	{r7, pc}

080164d4 <_Z41__static_initialization_and_destruction_0ii>:
 80164d4:	b590      	push	{r4, r7, lr}
 80164d6:	b0e7      	sub	sp, #412	; 0x19c
 80164d8:	af02      	add	r7, sp, #8
 80164da:	1d3b      	adds	r3, r7, #4
 80164dc:	6018      	str	r0, [r3, #0]
 80164de:	463b      	mov	r3, r7
 80164e0:	6019      	str	r1, [r3, #0]
 80164e2:	1d3b      	adds	r3, r7, #4
 80164e4:	681b      	ldr	r3, [r3, #0]
 80164e6:	2b01      	cmp	r3, #1
 80164e8:	f040 819d 	bne.w	8016826 <_Z41__static_initialization_and_destruction_0ii+0x352>
 80164ec:	463b      	mov	r3, r7
 80164ee:	681b      	ldr	r3, [r3, #0]
 80164f0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80164f4:	4293      	cmp	r3, r2
 80164f6:	f040 8196 	bne.w	8016826 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 80164fa:	f107 0314 	add.w	r3, r7, #20
 80164fe:	4618      	mov	r0, r3
 8016500:	2322      	movs	r3, #34	; 0x22
 8016502:	461a      	mov	r2, r3
 8016504:	2100      	movs	r1, #0
 8016506:	f00d ff25 	bl	8024354 <memset>
 801650a:	f107 0314 	add.w	r3, r7, #20
 801650e:	223a      	movs	r2, #58	; 0x3a
 8016510:	701a      	strb	r2, [r3, #0]
 8016512:	f107 0314 	add.w	r3, r7, #20
 8016516:	2201      	movs	r2, #1
 8016518:	705a      	strb	r2, [r3, #1]
 801651a:	f107 0314 	add.w	r3, r7, #20
 801651e:	220a      	movs	r2, #10
 8016520:	709a      	strb	r2, [r3, #2]
 8016522:	f107 0314 	add.w	r3, r7, #20
 8016526:	220a      	movs	r2, #10
 8016528:	70da      	strb	r2, [r3, #3]
 801652a:	f107 0314 	add.w	r3, r7, #20
 801652e:	222c      	movs	r2, #44	; 0x2c
 8016530:	711a      	strb	r2, [r3, #4]
 8016532:	f107 0314 	add.w	r3, r7, #20
 8016536:	220c      	movs	r2, #12
 8016538:	715a      	strb	r2, [r3, #5]
 801653a:	f107 0314 	add.w	r3, r7, #20
 801653e:	222e      	movs	r2, #46	; 0x2e
 8016540:	719a      	strb	r2, [r3, #6]
 8016542:	f107 0314 	add.w	r3, r7, #20
 8016546:	220b      	movs	r2, #11
 8016548:	71da      	strb	r2, [r3, #7]
 801654a:	f107 0314 	add.w	r3, r7, #20
 801654e:	225b      	movs	r2, #91	; 0x5b
 8016550:	721a      	strb	r2, [r3, #8]
 8016552:	f107 0314 	add.w	r3, r7, #20
 8016556:	220d      	movs	r2, #13
 8016558:	725a      	strb	r2, [r3, #9]
 801655a:	f107 0314 	add.w	r3, r7, #20
 801655e:	225d      	movs	r2, #93	; 0x5d
 8016560:	729a      	strb	r2, [r3, #10]
 8016562:	f107 0314 	add.w	r3, r7, #20
 8016566:	220e      	movs	r2, #14
 8016568:	72da      	strb	r2, [r3, #11]
 801656a:	f107 0314 	add.w	r3, r7, #20
 801656e:	227c      	movs	r2, #124	; 0x7c
 8016570:	731a      	strb	r2, [r3, #12]
 8016572:	f107 0314 	add.w	r3, r7, #20
 8016576:	2215      	movs	r2, #21
 8016578:	735a      	strb	r2, [r3, #13]
 801657a:	f107 0314 	add.w	r3, r7, #20
 801657e:	2226      	movs	r2, #38	; 0x26
 8016580:	739a      	strb	r2, [r3, #14]
 8016582:	f107 0314 	add.w	r3, r7, #20
 8016586:	2216      	movs	r2, #22
 8016588:	73da      	strb	r2, [r3, #15]
 801658a:	f107 0314 	add.w	r3, r7, #20
 801658e:	222b      	movs	r2, #43	; 0x2b
 8016590:	741a      	strb	r2, [r3, #16]
 8016592:	f107 0314 	add.w	r3, r7, #20
 8016596:	221f      	movs	r2, #31
 8016598:	745a      	strb	r2, [r3, #17]
 801659a:	f107 0314 	add.w	r3, r7, #20
 801659e:	222d      	movs	r2, #45	; 0x2d
 80165a0:	749a      	strb	r2, [r3, #18]
 80165a2:	f107 0314 	add.w	r3, r7, #20
 80165a6:	2220      	movs	r2, #32
 80165a8:	74da      	strb	r2, [r3, #19]
 80165aa:	f107 0314 	add.w	r3, r7, #20
 80165ae:	222a      	movs	r2, #42	; 0x2a
 80165b0:	751a      	strb	r2, [r3, #20]
 80165b2:	f107 0314 	add.w	r3, r7, #20
 80165b6:	2221      	movs	r2, #33	; 0x21
 80165b8:	755a      	strb	r2, [r3, #21]
 80165ba:	f107 0314 	add.w	r3, r7, #20
 80165be:	222f      	movs	r2, #47	; 0x2f
 80165c0:	759a      	strb	r2, [r3, #22]
 80165c2:	f107 0314 	add.w	r3, r7, #20
 80165c6:	2222      	movs	r2, #34	; 0x22
 80165c8:	75da      	strb	r2, [r3, #23]
 80165ca:	f107 0314 	add.w	r3, r7, #20
 80165ce:	225e      	movs	r2, #94	; 0x5e
 80165d0:	761a      	strb	r2, [r3, #24]
 80165d2:	f107 0314 	add.w	r3, r7, #20
 80165d6:	2223      	movs	r2, #35	; 0x23
 80165d8:	765a      	strb	r2, [r3, #25]
 80165da:	f107 0314 	add.w	r3, r7, #20
 80165de:	2225      	movs	r2, #37	; 0x25
 80165e0:	769a      	strb	r2, [r3, #26]
 80165e2:	f107 0314 	add.w	r3, r7, #20
 80165e6:	2224      	movs	r2, #36	; 0x24
 80165e8:	76da      	strb	r2, [r3, #27]
 80165ea:	f107 0314 	add.w	r3, r7, #20
 80165ee:	2228      	movs	r2, #40	; 0x28
 80165f0:	771a      	strb	r2, [r3, #28]
 80165f2:	f107 0314 	add.w	r3, r7, #20
 80165f6:	2226      	movs	r2, #38	; 0x26
 80165f8:	775a      	strb	r2, [r3, #29]
 80165fa:	f107 0314 	add.w	r3, r7, #20
 80165fe:	2229      	movs	r2, #41	; 0x29
 8016600:	779a      	strb	r2, [r3, #30]
 8016602:	f107 0314 	add.w	r3, r7, #20
 8016606:	2227      	movs	r2, #39	; 0x27
 8016608:	77da      	strb	r2, [r3, #31]
 801660a:	f107 0314 	add.w	r3, r7, #20
 801660e:	2225      	movs	r2, #37	; 0x25
 8016610:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8016614:	f107 030c 	add.w	r3, r7, #12
 8016618:	f107 0214 	add.w	r2, r7, #20
 801661c:	601a      	str	r2, [r3, #0]
 801661e:	f107 030c 	add.w	r3, r7, #12
 8016622:	2211      	movs	r2, #17
 8016624:	605a      	str	r2, [r3, #4]
 8016626:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801662a:	4618      	mov	r0, r3
 801662c:	f7ea fe5a 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8016630:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8016634:	f107 020c 	add.w	r2, r7, #12
 8016638:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801663c:	9300      	str	r3, [sp, #0]
 801663e:	460b      	mov	r3, r1
 8016640:	ca06      	ldmia	r2, {r1, r2}
 8016642:	4885      	ldr	r0, [pc, #532]	; (8016858 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8016644:	f7ea fe66 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8016648:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801664c:	4618      	mov	r0, r3
 801664e:	f7ea fe55 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8016652:	2305      	movs	r3, #5
 8016654:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8016658:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801665c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016660:	497e      	ldr	r1, [pc, #504]	; (801685c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8016662:	4618      	mov	r0, r3
 8016664:	f7ea fd42 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8016668:	2306      	movs	r3, #6
 801666a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801666e:	f207 1263 	addw	r2, r7, #355	; 0x163
 8016672:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016676:	331c      	adds	r3, #28
 8016678:	4979      	ldr	r1, [pc, #484]	; (8016860 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801667a:	4618      	mov	r0, r3
 801667c:	f7ea fd5e 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8016680:	2307      	movs	r3, #7
 8016682:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8016686:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801668a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801668e:	3338      	adds	r3, #56	; 0x38
 8016690:	4974      	ldr	r1, [pc, #464]	; (8016864 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8016692:	4618      	mov	r0, r3
 8016694:	f7ea fd52 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8016698:	2308      	movs	r3, #8
 801669a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801669e:	f207 1265 	addw	r2, r7, #357	; 0x165
 80166a2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80166a6:	3354      	adds	r3, #84	; 0x54
 80166a8:	496f      	ldr	r1, [pc, #444]	; (8016868 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 80166aa:	4618      	mov	r0, r3
 80166ac:	f7ea fd1e 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 80166b0:	2309      	movs	r3, #9
 80166b2:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 80166b6:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 80166ba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80166be:	3370      	adds	r3, #112	; 0x70
 80166c0:	496a      	ldr	r1, [pc, #424]	; (801686c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 80166c2:	4618      	mov	r0, r3
 80166c4:	f7ea fd62 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 80166c8:	2310      	movs	r3, #16
 80166ca:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 80166ce:	f207 1267 	addw	r2, r7, #359	; 0x167
 80166d2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80166d6:	338c      	adds	r3, #140	; 0x8c
 80166d8:	4965      	ldr	r1, [pc, #404]	; (8016870 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 80166da:	4618      	mov	r0, r3
 80166dc:	f7ea fd7e 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 80166e0:	2311      	movs	r3, #17
 80166e2:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 80166e6:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 80166ea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80166ee:	33a8      	adds	r3, #168	; 0xa8
 80166f0:	4960      	ldr	r1, [pc, #384]	; (8016874 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 80166f2:	4618      	mov	r0, r3
 80166f4:	f7ea fd4a 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 80166f8:	2312      	movs	r3, #18
 80166fa:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 80166fe:	f207 1269 	addw	r2, r7, #361	; 0x169
 8016702:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016706:	33c4      	adds	r3, #196	; 0xc4
 8016708:	495b      	ldr	r1, [pc, #364]	; (8016878 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801670a:	4618      	mov	r0, r3
 801670c:	f7ea fcee 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8016710:	2313      	movs	r3, #19
 8016712:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8016716:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801671a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801671e:	33e0      	adds	r3, #224	; 0xe0
 8016720:	4956      	ldr	r1, [pc, #344]	; (801687c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8016722:	4618      	mov	r0, r3
 8016724:	f7ea fd0a 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8016728:	2314      	movs	r3, #20
 801672a:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801672e:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8016732:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016736:	33fc      	adds	r3, #252	; 0xfc
 8016738:	4951      	ldr	r1, [pc, #324]	; (8016880 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801673a:	4618      	mov	r0, r3
 801673c:	f7ea fd76 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8016740:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016744:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8016748:	601a      	str	r2, [r3, #0]
 801674a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801674e:	220a      	movs	r2, #10
 8016750:	605a      	str	r2, [r3, #4]
 8016752:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016756:	4618      	mov	r0, r3
 8016758:	f7ea fe69 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801675c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8016760:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8016764:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016768:	9300      	str	r3, [sp, #0]
 801676a:	460b      	mov	r3, r1
 801676c:	ca06      	ldmia	r2, {r1, r2}
 801676e:	4845      	ldr	r0, [pc, #276]	; (8016884 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8016770:	f7ea fe75 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8016774:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016778:	4618      	mov	r0, r3
 801677a:	f7ea fe64 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801677e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8016782:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8016786:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801678a:	429c      	cmp	r4, r3
 801678c:	d004      	beq.n	8016798 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801678e:	3c1c      	subs	r4, #28
 8016790:	4620      	mov	r0, r4
 8016792:	f7ea fc9e 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8016796:	e7f6      	b.n	8016786 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8016798:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801679c:	2200      	movs	r2, #0
 801679e:	601a      	str	r2, [r3, #0]
 80167a0:	605a      	str	r2, [r3, #4]
 80167a2:	609a      	str	r2, [r3, #8]
 80167a4:	233c      	movs	r3, #60	; 0x3c
 80167a6:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 80167aa:	231b      	movs	r3, #27
 80167ac:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 80167b0:	231c      	movs	r3, #28
 80167b2:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 80167b6:	233e      	movs	r3, #62	; 0x3e
 80167b8:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 80167bc:	2319      	movs	r3, #25
 80167be:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 80167c2:	231a      	movs	r3, #26
 80167c4:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 80167c8:	233d      	movs	r3, #61	; 0x3d
 80167ca:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 80167ce:	2318      	movs	r3, #24
 80167d0:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 80167d4:	231d      	movs	r3, #29
 80167d6:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 80167da:	2321      	movs	r3, #33	; 0x21
 80167dc:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 80167e0:	2317      	movs	r3, #23
 80167e2:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 80167e6:	231e      	movs	r3, #30
 80167e8:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 80167ec:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80167f0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 80167f4:	2304      	movs	r3, #4
 80167f6:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 80167fa:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80167fe:	4618      	mov	r0, r3
 8016800:	f7ea fe5d 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8016804:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8016808:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801680c:	9300      	str	r3, [sp, #0]
 801680e:	4613      	mov	r3, r2
 8016810:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8016814:	ca06      	ldmia	r2, {r1, r2}
 8016816:	481c      	ldr	r0, [pc, #112]	; (8016888 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8016818:	f7ea fe69 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801681c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016820:	4618      	mov	r0, r3
 8016822:	f7ea fe58 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8016826:	1d3b      	adds	r3, r7, #4
 8016828:	681b      	ldr	r3, [r3, #0]
 801682a:	2b00      	cmp	r3, #0
 801682c:	d10e      	bne.n	801684c <_Z41__static_initialization_and_destruction_0ii+0x378>
 801682e:	463b      	mov	r3, r7
 8016830:	681b      	ldr	r3, [r3, #0]
 8016832:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016836:	4293      	cmp	r3, r2
 8016838:	d108      	bne.n	801684c <_Z41__static_initialization_and_destruction_0ii+0x378>
 801683a:	4813      	ldr	r0, [pc, #76]	; (8016888 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801683c:	f7ed fab0 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8016840:	4810      	ldr	r0, [pc, #64]	; (8016884 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8016842:	f7ed faba 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8016846:	4804      	ldr	r0, [pc, #16]	; (8016858 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8016848:	f7ed fac4 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801684c:	bf00      	nop
 801684e:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8016852:	46bd      	mov	sp, r7
 8016854:	bd90      	pop	{r4, r7, pc}
 8016856:	bf00      	nop
 8016858:	200003b8 	.word	0x200003b8
 801685c:	08027800 	.word	0x08027800
 8016860:	08027808 	.word	0x08027808
 8016864:	08027810 	.word	0x08027810
 8016868:	08027818 	.word	0x08027818
 801686c:	08027820 	.word	0x08027820
 8016870:	08027828 	.word	0x08027828
 8016874:	0802782c 	.word	0x0802782c
 8016878:	08027834 	.word	0x08027834
 801687c:	0802783c 	.word	0x0802783c
 8016880:	08027844 	.word	0x08027844
 8016884:	200003d0 	.word	0x200003d0
 8016888:	200003e8 	.word	0x200003e8

0801688c <_GLOBAL__sub_I__ZN7ProgramD2Ev>:
 801688c:	b580      	push	{r7, lr}
 801688e:	af00      	add	r7, sp, #0
 8016890:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016894:	2001      	movs	r0, #1
 8016896:	f7ff fe1d 	bl	80164d4 <_Z41__static_initialization_and_destruction_0ii>
 801689a:	bd80      	pop	{r7, pc}

0801689c <_GLOBAL__sub_D__ZN7ProgramD2Ev>:
 801689c:	b580      	push	{r7, lr}
 801689e:	af00      	add	r7, sp, #0
 80168a0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80168a4:	2000      	movs	r0, #0
 80168a6:	f7ff fe15 	bl	80164d4 <_Z41__static_initialization_and_destruction_0ii>
 80168aa:	bd80      	pop	{r7, pc}

080168ac <_ZN16Position_counterC1Ev>:
#include <Position_counter.h>

Position_counter::Position_counter()
 80168ac:	b480      	push	{r7}
 80168ae:	b083      	sub	sp, #12
 80168b0:	af00      	add	r7, sp, #0
 80168b2:	6078      	str	r0, [r7, #4]
{
	line = 1;
 80168b4:	687b      	ldr	r3, [r7, #4]
 80168b6:	2201      	movs	r2, #1
 80168b8:	601a      	str	r2, [r3, #0]
	position = 0;
 80168ba:	687b      	ldr	r3, [r7, #4]
 80168bc:	2200      	movs	r2, #0
 80168be:	605a      	str	r2, [r3, #4]
}
 80168c0:	687b      	ldr	r3, [r7, #4]
 80168c2:	4618      	mov	r0, r3
 80168c4:	370c      	adds	r7, #12
 80168c6:	46bd      	mov	sp, r7
 80168c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80168cc:	4770      	bx	lr
	...

080168d0 <_ZN16Position_counter12get_instanceEv>:

Position_counter& Position_counter::get_instance()
{
 80168d0:	b580      	push	{r7, lr}
 80168d2:	af00      	add	r7, sp, #0
	static Position_counter instance;
 80168d4:	4b10      	ldr	r3, [pc, #64]	; (8016918 <_ZN16Position_counter12get_instanceEv+0x48>)
 80168d6:	781b      	ldrb	r3, [r3, #0]
 80168d8:	f3bf 8f5b 	dmb	ish
 80168dc:	b2db      	uxtb	r3, r3
 80168de:	f003 0301 	and.w	r3, r3, #1
 80168e2:	2b00      	cmp	r3, #0
 80168e4:	bf0c      	ite	eq
 80168e6:	2301      	moveq	r3, #1
 80168e8:	2300      	movne	r3, #0
 80168ea:	b2db      	uxtb	r3, r3
 80168ec:	2b00      	cmp	r3, #0
 80168ee:	d010      	beq.n	8016912 <_ZN16Position_counter12get_instanceEv+0x42>
 80168f0:	4809      	ldr	r0, [pc, #36]	; (8016918 <_ZN16Position_counter12get_instanceEv+0x48>)
 80168f2:	f00c f99a 	bl	8022c2a <__cxa_guard_acquire>
 80168f6:	4603      	mov	r3, r0
 80168f8:	2b00      	cmp	r3, #0
 80168fa:	bf14      	ite	ne
 80168fc:	2301      	movne	r3, #1
 80168fe:	2300      	moveq	r3, #0
 8016900:	b2db      	uxtb	r3, r3
 8016902:	2b00      	cmp	r3, #0
 8016904:	d005      	beq.n	8016912 <_ZN16Position_counter12get_instanceEv+0x42>
 8016906:	4805      	ldr	r0, [pc, #20]	; (801691c <_ZN16Position_counter12get_instanceEv+0x4c>)
 8016908:	f7ff ffd0 	bl	80168ac <_ZN16Position_counterC1Ev>
 801690c:	4802      	ldr	r0, [pc, #8]	; (8016918 <_ZN16Position_counter12get_instanceEv+0x48>)
 801690e:	f00c f998 	bl	8022c42 <__cxa_guard_release>
	return instance;
 8016912:	4b02      	ldr	r3, [pc, #8]	; (801691c <_ZN16Position_counter12get_instanceEv+0x4c>)
}
 8016914:	4618      	mov	r0, r3
 8016916:	bd80      	pop	{r7, pc}
 8016918:	20000408 	.word	0x20000408
 801691c:	20000400 	.word	0x20000400

08016920 <_ZN16Position_counter15update_positionEh>:

void Position_counter::update_position(uint8_t rx_buffer)
{
 8016920:	b480      	push	{r7}
 8016922:	b083      	sub	sp, #12
 8016924:	af00      	add	r7, sp, #0
 8016926:	6078      	str	r0, [r7, #4]
 8016928:	460b      	mov	r3, r1
 801692a:	70fb      	strb	r3, [r7, #3]
	if (rx_buffer == '\n')
 801692c:	78fb      	ldrb	r3, [r7, #3]
 801692e:	2b0a      	cmp	r3, #10
 8016930:	d108      	bne.n	8016944 <_ZN16Position_counter15update_positionEh+0x24>
	{
		++line;
 8016932:	687b      	ldr	r3, [r7, #4]
 8016934:	681b      	ldr	r3, [r3, #0]
 8016936:	1c5a      	adds	r2, r3, #1
 8016938:	687b      	ldr	r3, [r7, #4]
 801693a:	601a      	str	r2, [r3, #0]
		position = 0;
 801693c:	687b      	ldr	r3, [r7, #4]
 801693e:	2200      	movs	r2, #0
 8016940:	605a      	str	r2, [r3, #4]
	}
	else
	{
		++position;
	}
}
 8016942:	e004      	b.n	801694e <_ZN16Position_counter15update_positionEh+0x2e>
		++position;
 8016944:	687b      	ldr	r3, [r7, #4]
 8016946:	685b      	ldr	r3, [r3, #4]
 8016948:	1c5a      	adds	r2, r3, #1
 801694a:	687b      	ldr	r3, [r7, #4]
 801694c:	605a      	str	r2, [r3, #4]
}
 801694e:	bf00      	nop
 8016950:	370c      	adds	r7, #12
 8016952:	46bd      	mov	sp, r7
 8016954:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016958:	4770      	bx	lr

0801695a <_ZN4BodyD1Ev>:
#include <Statement.h>

Body::~Body()
 801695a:	b590      	push	{r4, r7, lr}
 801695c:	b087      	sub	sp, #28
 801695e:	af00      	add	r7, sp, #0
 8016960:	6078      	str	r0, [r7, #4]
{
	for (Statement *s : statements)
 8016962:	687b      	ldr	r3, [r7, #4]
 8016964:	617b      	str	r3, [r7, #20]
 8016966:	6978      	ldr	r0, [r7, #20]
 8016968:	f7ff f918 	bl	8015b9c <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>
 801696c:	4603      	mov	r3, r0
 801696e:	60fb      	str	r3, [r7, #12]
 8016970:	6978      	ldr	r0, [r7, #20]
 8016972:	f7fe fd71 	bl	8015458 <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 8016976:	4603      	mov	r3, r0
 8016978:	60bb      	str	r3, [r7, #8]
 801697a:	f107 0208 	add.w	r2, r7, #8
 801697e:	f107 030c 	add.w	r3, r7, #12
 8016982:	4611      	mov	r1, r2
 8016984:	4618      	mov	r0, r3
 8016986:	f000 f9dd 	bl	8016d44 <_ZN9__gnu_cxxneIPP9StatementSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 801698a:	4603      	mov	r3, r0
 801698c:	2b00      	cmp	r3, #0
 801698e:	d017      	beq.n	80169c0 <_ZN4BodyD1Ev+0x66>
 8016990:	f107 030c 	add.w	r3, r7, #12
 8016994:	4618      	mov	r0, r3
 8016996:	f7ff f972 	bl	8015c7e <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>
 801699a:	4603      	mov	r3, r0
 801699c:	681b      	ldr	r3, [r3, #0]
 801699e:	613b      	str	r3, [r7, #16]
	{
		delete s;
 80169a0:	693c      	ldr	r4, [r7, #16]
 80169a2:	2c00      	cmp	r4, #0
 80169a4:	d006      	beq.n	80169b4 <_ZN4BodyD1Ev+0x5a>
 80169a6:	4620      	mov	r0, r4
 80169a8:	f000 f814 	bl	80169d4 <_ZN9StatementD1Ev>
 80169ac:	210c      	movs	r1, #12
 80169ae:	4620      	mov	r0, r4
 80169b0:	f00c f939 	bl	8022c26 <_ZdlPvj>
	for (Statement *s : statements)
 80169b4:	f107 030c 	add.w	r3, r7, #12
 80169b8:	4618      	mov	r0, r3
 80169ba:	f000 f9db 	bl	8016d74 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEppEv>
 80169be:	e7dc      	b.n	801697a <_ZN4BodyD1Ev+0x20>
Body::~Body()
 80169c0:	687b      	ldr	r3, [r7, #4]
 80169c2:	4618      	mov	r0, r3
 80169c4:	f000 f9a3 	bl	8016d0e <_ZNSt6vectorIP9StatementSaIS1_EED1Ev>
	}
}
 80169c8:	687b      	ldr	r3, [r7, #4]
 80169ca:	4618      	mov	r0, r3
 80169cc:	371c      	adds	r7, #28
 80169ce:	46bd      	mov	sp, r7
 80169d0:	bd90      	pop	{r4, r7, pc}
	...

080169d4 <_ZN9StatementD1Ev>:

Statement::~Statement()
 80169d4:	b590      	push	{r4, r7, lr}
 80169d6:	b083      	sub	sp, #12
 80169d8:	af00      	add	r7, sp, #0
 80169da:	6078      	str	r0, [r7, #4]
{
	switch (type)
 80169dc:	687b      	ldr	r3, [r7, #4]
 80169de:	781b      	ldrb	r3, [r3, #0]
 80169e0:	2b04      	cmp	r3, #4
 80169e2:	d86b      	bhi.n	8016abc <_ZN9StatementD1Ev+0xe8>
 80169e4:	a201      	add	r2, pc, #4	; (adr r2, 80169ec <_ZN9StatementD1Ev+0x18>)
 80169e6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80169ea:	bf00      	nop
 80169ec:	08016a01 	.word	0x08016a01
 80169f0:	08016a23 	.word	0x08016a23
 80169f4:	08016a45 	.word	0x08016a45
 80169f8:	08016a67 	.word	0x08016a67
 80169fc:	08016a89 	.word	0x08016a89
	{
	case STATEMENT_ASSIGNMENT:
		delete std::get<Assignment*>(content);
 8016a00:	687b      	ldr	r3, [r7, #4]
 8016a02:	3304      	adds	r3, #4
 8016a04:	4618      	mov	r0, r3
 8016a06:	f000 f9c5 	bl	8016d94 <_ZSt3getIP10AssignmentJS1_P13Function_callP11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 8016a0a:	4603      	mov	r3, r0
 8016a0c:	681c      	ldr	r4, [r3, #0]
 8016a0e:	2c00      	cmp	r4, #0
 8016a10:	d04b      	beq.n	8016aaa <_ZN9StatementD1Ev+0xd6>
 8016a12:	4620      	mov	r0, r4
 8016a14:	f000 f943 	bl	8016c9e <_ZN10AssignmentD1Ev>
 8016a18:	2108      	movs	r1, #8
 8016a1a:	4620      	mov	r0, r4
 8016a1c:	f00c f903 	bl	8022c26 <_ZdlPvj>
		break;
 8016a20:	e043      	b.n	8016aaa <_ZN9StatementD1Ev+0xd6>
	case STATEMENT_FUNCTION_CALL:
		delete std::get<Function_call*>(content);
 8016a22:	687b      	ldr	r3, [r7, #4]
 8016a24:	3304      	adds	r3, #4
 8016a26:	4618      	mov	r0, r3
 8016a28:	f000 f9c0 	bl	8016dac <_ZSt3getIP13Function_callJP10AssignmentS1_P11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 8016a2c:	4603      	mov	r3, r0
 8016a2e:	681c      	ldr	r4, [r3, #0]
 8016a30:	2c00      	cmp	r4, #0
 8016a32:	d03c      	beq.n	8016aae <_ZN9StatementD1Ev+0xda>
 8016a34:	4620      	mov	r0, r4
 8016a36:	f000 f8d7 	bl	8016be8 <_ZN13Function_callD1Ev>
 8016a3a:	212c      	movs	r1, #44	; 0x2c
 8016a3c:	4620      	mov	r0, r4
 8016a3e:	f00c f8f2 	bl	8022c26 <_ZdlPvj>
		break;
 8016a42:	e034      	b.n	8016aae <_ZN9StatementD1Ev+0xda>
	case STATEMENT_METHOD_CALL:
		delete std::get<Method_call*>(content);
 8016a44:	687b      	ldr	r3, [r7, #4]
 8016a46:	3304      	adds	r3, #4
 8016a48:	4618      	mov	r0, r3
 8016a4a:	f000 f9bb 	bl	8016dc4 <_ZSt3getIP11Method_callJP10AssignmentP13Function_callS1_P15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 8016a4e:	4603      	mov	r3, r0
 8016a50:	681c      	ldr	r4, [r3, #0]
 8016a52:	2c00      	cmp	r4, #0
 8016a54:	d02d      	beq.n	8016ab2 <_ZN9StatementD1Ev+0xde>
 8016a56:	4620      	mov	r0, r4
 8016a58:	f000 f909 	bl	8016c6e <_ZN11Method_callD1Ev>
 8016a5c:	211c      	movs	r1, #28
 8016a5e:	4620      	mov	r0, r4
 8016a60:	f00c f8e1 	bl	8022c26 <_ZdlPvj>
		break;
 8016a64:	e025      	b.n	8016ab2 <_ZN9StatementD1Ev+0xde>
	case STATEMENT_WHILE:
		delete std::get<While_statement*>(content);
 8016a66:	687b      	ldr	r3, [r7, #4]
 8016a68:	3304      	adds	r3, #4
 8016a6a:	4618      	mov	r0, r3
 8016a6c:	f000 f9b6 	bl	8016ddc <_ZSt3getIP15While_statementJP10AssignmentP13Function_callP11Method_callS1_P12If_statementEERT_RSt7variantIJDpT0_EE>
 8016a70:	4603      	mov	r3, r0
 8016a72:	681c      	ldr	r4, [r3, #0]
 8016a74:	2c00      	cmp	r4, #0
 8016a76:	d01e      	beq.n	8016ab6 <_ZN9StatementD1Ev+0xe2>
 8016a78:	4620      	mov	r0, r4
 8016a7a:	f000 f825 	bl	8016ac8 <_ZN15While_statementD1Ev>
 8016a7e:	2108      	movs	r1, #8
 8016a80:	4620      	mov	r0, r4
 8016a82:	f00c f8d0 	bl	8022c26 <_ZdlPvj>
		break;
 8016a86:	e016      	b.n	8016ab6 <_ZN9StatementD1Ev+0xe2>
	case STATEMENT_IF:
		delete std::get<If_statement*>(content);
 8016a88:	687b      	ldr	r3, [r7, #4]
 8016a8a:	3304      	adds	r3, #4
 8016a8c:	4618      	mov	r0, r3
 8016a8e:	f000 f9b1 	bl	8016df4 <_ZSt3getIP12If_statementJP10AssignmentP13Function_callP11Method_callP15While_statementS1_EERT_RSt7variantIJDpT0_EE>
 8016a92:	4603      	mov	r3, r0
 8016a94:	681c      	ldr	r4, [r3, #0]
 8016a96:	2c00      	cmp	r4, #0
 8016a98:	d00f      	beq.n	8016aba <_ZN9StatementD1Ev+0xe6>
 8016a9a:	4620      	mov	r0, r4
 8016a9c:	f000 f833 	bl	8016b06 <_ZN12If_statementD1Ev>
 8016aa0:	2118      	movs	r1, #24
 8016aa2:	4620      	mov	r0, r4
 8016aa4:	f00c f8bf 	bl	8022c26 <_ZdlPvj>
		break;
 8016aa8:	e007      	b.n	8016aba <_ZN9StatementD1Ev+0xe6>
		break;
 8016aaa:	bf00      	nop
 8016aac:	e006      	b.n	8016abc <_ZN9StatementD1Ev+0xe8>
		break;
 8016aae:	bf00      	nop
 8016ab0:	e004      	b.n	8016abc <_ZN9StatementD1Ev+0xe8>
		break;
 8016ab2:	bf00      	nop
 8016ab4:	e002      	b.n	8016abc <_ZN9StatementD1Ev+0xe8>
		break;
 8016ab6:	bf00      	nop
 8016ab8:	e000      	b.n	8016abc <_ZN9StatementD1Ev+0xe8>
		break;
 8016aba:	bf00      	nop
	}
}
 8016abc:	687b      	ldr	r3, [r7, #4]
 8016abe:	4618      	mov	r0, r3
 8016ac0:	370c      	adds	r7, #12
 8016ac2:	46bd      	mov	sp, r7
 8016ac4:	bd90      	pop	{r4, r7, pc}
 8016ac6:	bf00      	nop

08016ac8 <_ZN15While_statementD1Ev>:

While_statement::~While_statement()
 8016ac8:	b590      	push	{r4, r7, lr}
 8016aca:	b083      	sub	sp, #12
 8016acc:	af00      	add	r7, sp, #0
 8016ace:	6078      	str	r0, [r7, #4]
{
	delete condition;
 8016ad0:	687b      	ldr	r3, [r7, #4]
 8016ad2:	681c      	ldr	r4, [r3, #0]
 8016ad4:	2c00      	cmp	r4, #0
 8016ad6:	d006      	beq.n	8016ae6 <_ZN15While_statementD1Ev+0x1e>
 8016ad8:	4620      	mov	r0, r4
 8016ada:	f7ed fd66 	bl	80045aa <_ZN10ExpressionD1Ev>
 8016ade:	2114      	movs	r1, #20
 8016ae0:	4620      	mov	r0, r4
 8016ae2:	f00c f8a0 	bl	8022c26 <_ZdlPvj>
	delete while_body;
 8016ae6:	687b      	ldr	r3, [r7, #4]
 8016ae8:	685c      	ldr	r4, [r3, #4]
 8016aea:	2c00      	cmp	r4, #0
 8016aec:	d006      	beq.n	8016afc <_ZN15While_statementD1Ev+0x34>
 8016aee:	4620      	mov	r0, r4
 8016af0:	f7ff ff33 	bl	801695a <_ZN4BodyD1Ev>
 8016af4:	210c      	movs	r1, #12
 8016af6:	4620      	mov	r0, r4
 8016af8:	f00c f895 	bl	8022c26 <_ZdlPvj>
}
 8016afc:	687b      	ldr	r3, [r7, #4]
 8016afe:	4618      	mov	r0, r3
 8016b00:	370c      	adds	r7, #12
 8016b02:	46bd      	mov	sp, r7
 8016b04:	bd90      	pop	{r4, r7, pc}

08016b06 <_ZN12If_statementD1Ev>:

If_statement::~If_statement()
 8016b06:	b590      	push	{r4, r7, lr}
 8016b08:	b08b      	sub	sp, #44	; 0x2c
 8016b0a:	af00      	add	r7, sp, #0
 8016b0c:	6078      	str	r0, [r7, #4]
{
	for (Expression *e : conditions)
 8016b0e:	687b      	ldr	r3, [r7, #4]
 8016b10:	627b      	str	r3, [r7, #36]	; 0x24
 8016b12:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8016b14:	f7fe fe2e 	bl	8015774 <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 8016b18:	4603      	mov	r3, r0
 8016b1a:	617b      	str	r3, [r7, #20]
 8016b1c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8016b1e:	f7fe f9b9 	bl	8014e94 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 8016b22:	4603      	mov	r3, r0
 8016b24:	613b      	str	r3, [r7, #16]
 8016b26:	f107 0210 	add.w	r2, r7, #16
 8016b2a:	f107 0314 	add.w	r3, r7, #20
 8016b2e:	4611      	mov	r1, r2
 8016b30:	4618      	mov	r0, r3
 8016b32:	f000 f986 	bl	8016e42 <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8016b36:	4603      	mov	r3, r0
 8016b38:	2b00      	cmp	r3, #0
 8016b3a:	d017      	beq.n	8016b6c <_ZN12If_statementD1Ev+0x66>
 8016b3c:	f107 0314 	add.w	r3, r7, #20
 8016b40:	4618      	mov	r0, r3
 8016b42:	f7fe fe74 	bl	801582e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 8016b46:	4603      	mov	r3, r0
 8016b48:	681b      	ldr	r3, [r3, #0]
 8016b4a:	61bb      	str	r3, [r7, #24]
	{
		delete e;
 8016b4c:	69bc      	ldr	r4, [r7, #24]
 8016b4e:	2c00      	cmp	r4, #0
 8016b50:	d006      	beq.n	8016b60 <_ZN12If_statementD1Ev+0x5a>
 8016b52:	4620      	mov	r0, r4
 8016b54:	f7ed fd29 	bl	80045aa <_ZN10ExpressionD1Ev>
 8016b58:	2114      	movs	r1, #20
 8016b5a:	4620      	mov	r0, r4
 8016b5c:	f00c f863 	bl	8022c26 <_ZdlPvj>
	for (Expression *e : conditions)
 8016b60:	f107 0314 	add.w	r3, r7, #20
 8016b64:	4618      	mov	r0, r3
 8016b66:	f000 f984 	bl	8016e72 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>
 8016b6a:	e7dc      	b.n	8016b26 <_ZN12If_statementD1Ev+0x20>
	}

	for (Body *b : if_bodies)
 8016b6c:	687b      	ldr	r3, [r7, #4]
 8016b6e:	330c      	adds	r3, #12
 8016b70:	623b      	str	r3, [r7, #32]
 8016b72:	6a38      	ldr	r0, [r7, #32]
 8016b74:	f7fe fed4 	bl	8015920 <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>
 8016b78:	4603      	mov	r3, r0
 8016b7a:	60fb      	str	r3, [r7, #12]
 8016b7c:	6a38      	ldr	r0, [r7, #32]
 8016b7e:	f7fe fa50 	bl	8015022 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 8016b82:	4603      	mov	r3, r0
 8016b84:	60bb      	str	r3, [r7, #8]
 8016b86:	f107 0208 	add.w	r2, r7, #8
 8016b8a:	f107 030c 	add.w	r3, r7, #12
 8016b8e:	4611      	mov	r1, r2
 8016b90:	4618      	mov	r0, r3
 8016b92:	f000 f97e 	bl	8016e92 <_ZN9__gnu_cxxneIPP4BodySt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8016b96:	4603      	mov	r3, r0
 8016b98:	2b00      	cmp	r3, #0
 8016b9a:	d017      	beq.n	8016bcc <_ZN12If_statementD1Ev+0xc6>
 8016b9c:	f107 030c 	add.w	r3, r7, #12
 8016ba0:	4618      	mov	r0, r3
 8016ba2:	f7fe ff2e 	bl	8015a02 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>
 8016ba6:	4603      	mov	r3, r0
 8016ba8:	681b      	ldr	r3, [r3, #0]
 8016baa:	61fb      	str	r3, [r7, #28]
	{
		delete b;
 8016bac:	69fc      	ldr	r4, [r7, #28]
 8016bae:	2c00      	cmp	r4, #0
 8016bb0:	d006      	beq.n	8016bc0 <_ZN12If_statementD1Ev+0xba>
 8016bb2:	4620      	mov	r0, r4
 8016bb4:	f7ff fed1 	bl	801695a <_ZN4BodyD1Ev>
 8016bb8:	210c      	movs	r1, #12
 8016bba:	4620      	mov	r0, r4
 8016bbc:	f00c f833 	bl	8022c26 <_ZdlPvj>
	for (Body *b : if_bodies)
 8016bc0:	f107 030c 	add.w	r3, r7, #12
 8016bc4:	4618      	mov	r0, r3
 8016bc6:	f000 f97c 	bl	8016ec2 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEppEv>
 8016bca:	e7dc      	b.n	8016b86 <_ZN12If_statementD1Ev+0x80>
If_statement::~If_statement()
 8016bcc:	687b      	ldr	r3, [r7, #4]
 8016bce:	330c      	adds	r3, #12
 8016bd0:	4618      	mov	r0, r3
 8016bd2:	f000 f91b 	bl	8016e0c <_ZNSt6vectorIP4BodySaIS1_EED1Ev>
 8016bd6:	687b      	ldr	r3, [r7, #4]
 8016bd8:	4618      	mov	r0, r3
 8016bda:	f7f8 fc13 	bl	800f404 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
	}
}
 8016bde:	687b      	ldr	r3, [r7, #4]
 8016be0:	4618      	mov	r0, r3
 8016be2:	372c      	adds	r7, #44	; 0x2c
 8016be4:	46bd      	mov	sp, r7
 8016be6:	bd90      	pop	{r4, r7, pc}

08016be8 <_ZN13Function_callD1Ev>:

Function_call::~Function_call()
 8016be8:	b590      	push	{r4, r7, lr}
 8016bea:	b087      	sub	sp, #28
 8016bec:	af00      	add	r7, sp, #0
 8016bee:	6078      	str	r0, [r7, #4]
{
	for (Expression *e : arguments)
 8016bf0:	687b      	ldr	r3, [r7, #4]
 8016bf2:	3320      	adds	r3, #32
 8016bf4:	617b      	str	r3, [r7, #20]
 8016bf6:	6978      	ldr	r0, [r7, #20]
 8016bf8:	f7fe fdbc 	bl	8015774 <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 8016bfc:	4603      	mov	r3, r0
 8016bfe:	60fb      	str	r3, [r7, #12]
 8016c00:	6978      	ldr	r0, [r7, #20]
 8016c02:	f7fe f947 	bl	8014e94 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 8016c06:	4603      	mov	r3, r0
 8016c08:	60bb      	str	r3, [r7, #8]
 8016c0a:	f107 0208 	add.w	r2, r7, #8
 8016c0e:	f107 030c 	add.w	r3, r7, #12
 8016c12:	4611      	mov	r1, r2
 8016c14:	4618      	mov	r0, r3
 8016c16:	f000 f914 	bl	8016e42 <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8016c1a:	4603      	mov	r3, r0
 8016c1c:	2b00      	cmp	r3, #0
 8016c1e:	d017      	beq.n	8016c50 <_ZN13Function_callD1Ev+0x68>
 8016c20:	f107 030c 	add.w	r3, r7, #12
 8016c24:	4618      	mov	r0, r3
 8016c26:	f7fe fe02 	bl	801582e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 8016c2a:	4603      	mov	r3, r0
 8016c2c:	681b      	ldr	r3, [r3, #0]
 8016c2e:	613b      	str	r3, [r7, #16]
	{
		delete e;
 8016c30:	693c      	ldr	r4, [r7, #16]
 8016c32:	2c00      	cmp	r4, #0
 8016c34:	d006      	beq.n	8016c44 <_ZN13Function_callD1Ev+0x5c>
 8016c36:	4620      	mov	r0, r4
 8016c38:	f7ed fcb7 	bl	80045aa <_ZN10ExpressionD1Ev>
 8016c3c:	2114      	movs	r1, #20
 8016c3e:	4620      	mov	r0, r4
 8016c40:	f00b fff1 	bl	8022c26 <_ZdlPvj>
	for (Expression *e : arguments)
 8016c44:	f107 030c 	add.w	r3, r7, #12
 8016c48:	4618      	mov	r0, r3
 8016c4a:	f000 f912 	bl	8016e72 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>
 8016c4e:	e7dc      	b.n	8016c0a <_ZN13Function_callD1Ev+0x22>
Function_call::~Function_call()
 8016c50:	687b      	ldr	r3, [r7, #4]
 8016c52:	3320      	adds	r3, #32
 8016c54:	4618      	mov	r0, r3
 8016c56:	f7f8 fbd5 	bl	800f404 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
 8016c5a:	687b      	ldr	r3, [r7, #4]
 8016c5c:	3308      	adds	r3, #8
 8016c5e:	4618      	mov	r0, r3
 8016c60:	f00c f9c9 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8016c64:	687b      	ldr	r3, [r7, #4]
 8016c66:	4618      	mov	r0, r3
 8016c68:	371c      	adds	r7, #28
 8016c6a:	46bd      	mov	sp, r7
 8016c6c:	bd90      	pop	{r4, r7, pc}

08016c6e <_ZN11Method_callD1Ev>:

Method_call::~Method_call()
 8016c6e:	b590      	push	{r4, r7, lr}
 8016c70:	b083      	sub	sp, #12
 8016c72:	af00      	add	r7, sp, #0
 8016c74:	6078      	str	r0, [r7, #4]
{
	delete call;
 8016c76:	687b      	ldr	r3, [r7, #4]
 8016c78:	699c      	ldr	r4, [r3, #24]
 8016c7a:	2c00      	cmp	r4, #0
 8016c7c:	d006      	beq.n	8016c8c <_ZN11Method_callD1Ev+0x1e>
 8016c7e:	4620      	mov	r0, r4
 8016c80:	f7ff ffb2 	bl	8016be8 <_ZN13Function_callD1Ev>
 8016c84:	212c      	movs	r1, #44	; 0x2c
 8016c86:	4620      	mov	r0, r4
 8016c88:	f00b ffcd 	bl	8022c26 <_ZdlPvj>
Method_call::~Method_call()
 8016c8c:	687b      	ldr	r3, [r7, #4]
 8016c8e:	4618      	mov	r0, r3
 8016c90:	f00c f9b1 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 8016c94:	687b      	ldr	r3, [r7, #4]
 8016c96:	4618      	mov	r0, r3
 8016c98:	370c      	adds	r7, #12
 8016c9a:	46bd      	mov	sp, r7
 8016c9c:	bd90      	pop	{r4, r7, pc}

08016c9e <_ZN10AssignmentD1Ev>:

Assignment::~Assignment()
 8016c9e:	b590      	push	{r4, r7, lr}
 8016ca0:	b083      	sub	sp, #12
 8016ca2:	af00      	add	r7, sp, #0
 8016ca4:	6078      	str	r0, [r7, #4]
{
	delete value;
 8016ca6:	687b      	ldr	r3, [r7, #4]
 8016ca8:	685c      	ldr	r4, [r3, #4]
 8016caa:	2c00      	cmp	r4, #0
 8016cac:	d006      	beq.n	8016cbc <_ZN10AssignmentD1Ev+0x1e>
 8016cae:	4620      	mov	r0, r4
 8016cb0:	f7ed fc7b 	bl	80045aa <_ZN10ExpressionD1Ev>
 8016cb4:	2114      	movs	r1, #20
 8016cb6:	4620      	mov	r0, r4
 8016cb8:	f00b ffb5 	bl	8022c26 <_ZdlPvj>
	delete var;
 8016cbc:	687b      	ldr	r3, [r7, #4]
 8016cbe:	681c      	ldr	r4, [r3, #0]
 8016cc0:	2c00      	cmp	r4, #0
 8016cc2:	d006      	beq.n	8016cd2 <_ZN10AssignmentD1Ev+0x34>
 8016cc4:	4620      	mov	r0, r4
 8016cc6:	f000 f809 	bl	8016cdc <_ZN8VariableD1Ev>
 8016cca:	2120      	movs	r1, #32
 8016ccc:	4620      	mov	r0, r4
 8016cce:	f00b ffaa 	bl	8022c26 <_ZdlPvj>
}
 8016cd2:	687b      	ldr	r3, [r7, #4]
 8016cd4:	4618      	mov	r0, r3
 8016cd6:	370c      	adds	r7, #12
 8016cd8:	46bd      	mov	sp, r7
 8016cda:	bd90      	pop	{r4, r7, pc}

08016cdc <_ZN8VariableD1Ev>:

Variable::~Variable()
 8016cdc:	b590      	push	{r4, r7, lr}
 8016cde:	b083      	sub	sp, #12
 8016ce0:	af00      	add	r7, sp, #0
 8016ce2:	6078      	str	r0, [r7, #4]
{
	delete index;
 8016ce4:	687b      	ldr	r3, [r7, #4]
 8016ce6:	69dc      	ldr	r4, [r3, #28]
 8016ce8:	2c00      	cmp	r4, #0
 8016cea:	d006      	beq.n	8016cfa <_ZN8VariableD1Ev+0x1e>
 8016cec:	4620      	mov	r0, r4
 8016cee:	f7ed fc5c 	bl	80045aa <_ZN10ExpressionD1Ev>
 8016cf2:	2114      	movs	r1, #20
 8016cf4:	4620      	mov	r0, r4
 8016cf6:	f00b ff96 	bl	8022c26 <_ZdlPvj>
Variable::~Variable()
 8016cfa:	687b      	ldr	r3, [r7, #4]
 8016cfc:	3304      	adds	r3, #4
 8016cfe:	4618      	mov	r0, r3
 8016d00:	f00c f979 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 8016d04:	687b      	ldr	r3, [r7, #4]
 8016d06:	4618      	mov	r0, r3
 8016d08:	370c      	adds	r7, #12
 8016d0a:	46bd      	mov	sp, r7
 8016d0c:	bd90      	pop	{r4, r7, pc}

08016d0e <_ZNSt6vectorIP9StatementSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8016d0e:	b5b0      	push	{r4, r5, r7, lr}
 8016d10:	b082      	sub	sp, #8
 8016d12:	af00      	add	r7, sp, #0
 8016d14:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8016d16:	687b      	ldr	r3, [r7, #4]
 8016d18:	681c      	ldr	r4, [r3, #0]
 8016d1a:	687b      	ldr	r3, [r7, #4]
 8016d1c:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8016d1e:	687b      	ldr	r3, [r7, #4]
 8016d20:	4618      	mov	r0, r3
 8016d22:	f7fd ffb8 	bl	8014c96 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 8016d26:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8016d28:	461a      	mov	r2, r3
 8016d2a:	4629      	mov	r1, r5
 8016d2c:	4620      	mov	r0, r4
 8016d2e:	f000 f8fd 	bl	8016f2c <_ZSt8_DestroyIPP9StatementS1_EvT_S3_RSaIT0_E>
      }
 8016d32:	687b      	ldr	r3, [r7, #4]
 8016d34:	4618      	mov	r0, r3
 8016d36:	f000 f8e0 	bl	8016efa <_ZNSt12_Vector_baseIP9StatementSaIS1_EED1Ev>
 8016d3a:	687b      	ldr	r3, [r7, #4]
 8016d3c:	4618      	mov	r0, r3
 8016d3e:	3708      	adds	r7, #8
 8016d40:	46bd      	mov	sp, r7
 8016d42:	bdb0      	pop	{r4, r5, r7, pc}

08016d44 <_ZN9__gnu_cxxneIPP9StatementSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8016d44:	b590      	push	{r4, r7, lr}
 8016d46:	b083      	sub	sp, #12
 8016d48:	af00      	add	r7, sp, #0
 8016d4a:	6078      	str	r0, [r7, #4]
 8016d4c:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 8016d4e:	6878      	ldr	r0, [r7, #4]
 8016d50:	f7fe ff71 	bl	8015c36 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8016d54:	4603      	mov	r3, r0
 8016d56:	681c      	ldr	r4, [r3, #0]
 8016d58:	6838      	ldr	r0, [r7, #0]
 8016d5a:	f7fe ff6c 	bl	8015c36 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8016d5e:	4603      	mov	r3, r0
 8016d60:	681b      	ldr	r3, [r3, #0]
 8016d62:	429c      	cmp	r4, r3
 8016d64:	bf14      	ite	ne
 8016d66:	2301      	movne	r3, #1
 8016d68:	2300      	moveq	r3, #0
 8016d6a:	b2db      	uxtb	r3, r3
 8016d6c:	4618      	mov	r0, r3
 8016d6e:	370c      	adds	r7, #12
 8016d70:	46bd      	mov	sp, r7
 8016d72:	bd90      	pop	{r4, r7, pc}

08016d74 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8016d74:	b480      	push	{r7}
 8016d76:	b083      	sub	sp, #12
 8016d78:	af00      	add	r7, sp, #0
 8016d7a:	6078      	str	r0, [r7, #4]
	++_M_current;
 8016d7c:	687b      	ldr	r3, [r7, #4]
 8016d7e:	681b      	ldr	r3, [r3, #0]
 8016d80:	1d1a      	adds	r2, r3, #4
 8016d82:	687b      	ldr	r3, [r7, #4]
 8016d84:	601a      	str	r2, [r3, #0]
	return *this;
 8016d86:	687b      	ldr	r3, [r7, #4]
      }
 8016d88:	4618      	mov	r0, r3
 8016d8a:	370c      	adds	r7, #12
 8016d8c:	46bd      	mov	sp, r7
 8016d8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016d92:	4770      	bx	lr

08016d94 <_ZSt3getIP10AssignmentJS1_P13Function_callP11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8016d94:	b580      	push	{r7, lr}
 8016d96:	b082      	sub	sp, #8
 8016d98:	af00      	add	r7, sp, #0
 8016d9a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8016d9c:	6878      	ldr	r0, [r7, #4]
 8016d9e:	f7fd fd95 	bl	80148cc <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8016da2:	4603      	mov	r3, r0
    }
 8016da4:	4618      	mov	r0, r3
 8016da6:	3708      	adds	r7, #8
 8016da8:	46bd      	mov	sp, r7
 8016daa:	bd80      	pop	{r7, pc}

08016dac <_ZSt3getIP13Function_callJP10AssignmentS1_P11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8016dac:	b580      	push	{r7, lr}
 8016dae:	b082      	sub	sp, #8
 8016db0:	af00      	add	r7, sp, #0
 8016db2:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8016db4:	6878      	ldr	r0, [r7, #4]
 8016db6:	f7fd fca1 	bl	80146fc <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8016dba:	4603      	mov	r3, r0
    }
 8016dbc:	4618      	mov	r0, r3
 8016dbe:	3708      	adds	r7, #8
 8016dc0:	46bd      	mov	sp, r7
 8016dc2:	bd80      	pop	{r7, pc}

08016dc4 <_ZSt3getIP11Method_callJP10AssignmentP13Function_callS1_P15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8016dc4:	b580      	push	{r7, lr}
 8016dc6:	b082      	sub	sp, #8
 8016dc8:	af00      	add	r7, sp, #0
 8016dca:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8016dcc:	6878      	ldr	r0, [r7, #4]
 8016dce:	f7fd fd1b 	bl	8014808 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8016dd2:	4603      	mov	r3, r0
    }
 8016dd4:	4618      	mov	r0, r3
 8016dd6:	3708      	adds	r7, #8
 8016dd8:	46bd      	mov	sp, r7
 8016dda:	bd80      	pop	{r7, pc}

08016ddc <_ZSt3getIP15While_statementJP10AssignmentP13Function_callP11Method_callS1_P12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8016ddc:	b580      	push	{r7, lr}
 8016dde:	b082      	sub	sp, #8
 8016de0:	af00      	add	r7, sp, #0
 8016de2:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8016de4:	6878      	ldr	r0, [r7, #4]
 8016de6:	f7fd fe39 	bl	8014a5c <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8016dea:	4603      	mov	r3, r0
    }
 8016dec:	4618      	mov	r0, r3
 8016dee:	3708      	adds	r7, #8
 8016df0:	46bd      	mov	sp, r7
 8016df2:	bd80      	pop	{r7, pc}

08016df4 <_ZSt3getIP12If_statementJP10AssignmentP13Function_callP11Method_callP15While_statementS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8016df4:	b580      	push	{r7, lr}
 8016df6:	b082      	sub	sp, #8
 8016df8:	af00      	add	r7, sp, #0
 8016dfa:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8016dfc:	6878      	ldr	r0, [r7, #4]
 8016dfe:	f7fd fed7 	bl	8014bb0 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8016e02:	4603      	mov	r3, r0
    }
 8016e04:	4618      	mov	r0, r3
 8016e06:	3708      	adds	r7, #8
 8016e08:	46bd      	mov	sp, r7
 8016e0a:	bd80      	pop	{r7, pc}

08016e0c <_ZNSt6vectorIP4BodySaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8016e0c:	b5b0      	push	{r4, r5, r7, lr}
 8016e0e:	b082      	sub	sp, #8
 8016e10:	af00      	add	r7, sp, #0
 8016e12:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8016e14:	687b      	ldr	r3, [r7, #4]
 8016e16:	681c      	ldr	r4, [r3, #0]
 8016e18:	687b      	ldr	r3, [r7, #4]
 8016e1a:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8016e1c:	687b      	ldr	r3, [r7, #4]
 8016e1e:	4618      	mov	r0, r3
 8016e20:	f7fd fc2d 	bl	801467e <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 8016e24:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8016e26:	461a      	mov	r2, r3
 8016e28:	4629      	mov	r1, r5
 8016e2a:	4620      	mov	r0, r4
 8016e2c:	f000 f8b1 	bl	8016f92 <_ZSt8_DestroyIPP4BodyS1_EvT_S3_RSaIT0_E>
      }
 8016e30:	687b      	ldr	r3, [r7, #4]
 8016e32:	4618      	mov	r0, r3
 8016e34:	f000 f894 	bl	8016f60 <_ZNSt12_Vector_baseIP4BodySaIS1_EED1Ev>
 8016e38:	687b      	ldr	r3, [r7, #4]
 8016e3a:	4618      	mov	r0, r3
 8016e3c:	3708      	adds	r7, #8
 8016e3e:	46bd      	mov	sp, r7
 8016e40:	bdb0      	pop	{r4, r5, r7, pc}

08016e42 <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8016e42:	b590      	push	{r4, r7, lr}
 8016e44:	b083      	sub	sp, #12
 8016e46:	af00      	add	r7, sp, #0
 8016e48:	6078      	str	r0, [r7, #4]
 8016e4a:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 8016e4c:	6878      	ldr	r0, [r7, #4]
 8016e4e:	f7fe fcca 	bl	80157e6 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8016e52:	4603      	mov	r3, r0
 8016e54:	681c      	ldr	r4, [r3, #0]
 8016e56:	6838      	ldr	r0, [r7, #0]
 8016e58:	f7fe fcc5 	bl	80157e6 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8016e5c:	4603      	mov	r3, r0
 8016e5e:	681b      	ldr	r3, [r3, #0]
 8016e60:	429c      	cmp	r4, r3
 8016e62:	bf14      	ite	ne
 8016e64:	2301      	movne	r3, #1
 8016e66:	2300      	moveq	r3, #0
 8016e68:	b2db      	uxtb	r3, r3
 8016e6a:	4618      	mov	r0, r3
 8016e6c:	370c      	adds	r7, #12
 8016e6e:	46bd      	mov	sp, r7
 8016e70:	bd90      	pop	{r4, r7, pc}

08016e72 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8016e72:	b480      	push	{r7}
 8016e74:	b083      	sub	sp, #12
 8016e76:	af00      	add	r7, sp, #0
 8016e78:	6078      	str	r0, [r7, #4]
	++_M_current;
 8016e7a:	687b      	ldr	r3, [r7, #4]
 8016e7c:	681b      	ldr	r3, [r3, #0]
 8016e7e:	1d1a      	adds	r2, r3, #4
 8016e80:	687b      	ldr	r3, [r7, #4]
 8016e82:	601a      	str	r2, [r3, #0]
	return *this;
 8016e84:	687b      	ldr	r3, [r7, #4]
      }
 8016e86:	4618      	mov	r0, r3
 8016e88:	370c      	adds	r7, #12
 8016e8a:	46bd      	mov	sp, r7
 8016e8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016e90:	4770      	bx	lr

08016e92 <_ZN9__gnu_cxxneIPP4BodySt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8016e92:	b590      	push	{r4, r7, lr}
 8016e94:	b083      	sub	sp, #12
 8016e96:	af00      	add	r7, sp, #0
 8016e98:	6078      	str	r0, [r7, #4]
 8016e9a:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 8016e9c:	6878      	ldr	r0, [r7, #4]
 8016e9e:	f7fe fd8c 	bl	80159ba <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 8016ea2:	4603      	mov	r3, r0
 8016ea4:	681c      	ldr	r4, [r3, #0]
 8016ea6:	6838      	ldr	r0, [r7, #0]
 8016ea8:	f7fe fd87 	bl	80159ba <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 8016eac:	4603      	mov	r3, r0
 8016eae:	681b      	ldr	r3, [r3, #0]
 8016eb0:	429c      	cmp	r4, r3
 8016eb2:	bf14      	ite	ne
 8016eb4:	2301      	movne	r3, #1
 8016eb6:	2300      	moveq	r3, #0
 8016eb8:	b2db      	uxtb	r3, r3
 8016eba:	4618      	mov	r0, r3
 8016ebc:	370c      	adds	r7, #12
 8016ebe:	46bd      	mov	sp, r7
 8016ec0:	bd90      	pop	{r4, r7, pc}

08016ec2 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8016ec2:	b480      	push	{r7}
 8016ec4:	b083      	sub	sp, #12
 8016ec6:	af00      	add	r7, sp, #0
 8016ec8:	6078      	str	r0, [r7, #4]
	++_M_current;
 8016eca:	687b      	ldr	r3, [r7, #4]
 8016ecc:	681b      	ldr	r3, [r3, #0]
 8016ece:	1d1a      	adds	r2, r3, #4
 8016ed0:	687b      	ldr	r3, [r7, #4]
 8016ed2:	601a      	str	r2, [r3, #0]
	return *this;
 8016ed4:	687b      	ldr	r3, [r7, #4]
      }
 8016ed6:	4618      	mov	r0, r3
 8016ed8:	370c      	adds	r7, #12
 8016eda:	46bd      	mov	sp, r7
 8016edc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016ee0:	4770      	bx	lr

08016ee2 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8016ee2:	b580      	push	{r7, lr}
 8016ee4:	b082      	sub	sp, #8
 8016ee6:	af00      	add	r7, sp, #0
 8016ee8:	6078      	str	r0, [r7, #4]
 8016eea:	6878      	ldr	r0, [r7, #4]
 8016eec:	f000 f85f 	bl	8016fae <_ZNSaIP9StatementED1Ev>
 8016ef0:	687b      	ldr	r3, [r7, #4]
 8016ef2:	4618      	mov	r0, r3
 8016ef4:	3708      	adds	r7, #8
 8016ef6:	46bd      	mov	sp, r7
 8016ef8:	bd80      	pop	{r7, pc}

08016efa <_ZNSt12_Vector_baseIP9StatementSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8016efa:	b580      	push	{r7, lr}
 8016efc:	b082      	sub	sp, #8
 8016efe:	af00      	add	r7, sp, #0
 8016f00:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8016f02:	687b      	ldr	r3, [r7, #4]
 8016f04:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8016f06:	687b      	ldr	r3, [r7, #4]
 8016f08:	689a      	ldr	r2, [r3, #8]
 8016f0a:	687b      	ldr	r3, [r7, #4]
 8016f0c:	681b      	ldr	r3, [r3, #0]
 8016f0e:	1ad3      	subs	r3, r2, r3
 8016f10:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 8016f12:	461a      	mov	r2, r3
 8016f14:	6878      	ldr	r0, [r7, #4]
 8016f16:	f7fd feab 	bl	8014c70 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>
      }
 8016f1a:	687b      	ldr	r3, [r7, #4]
 8016f1c:	4618      	mov	r0, r3
 8016f1e:	f7ff ffe0 	bl	8016ee2 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implD1Ev>
 8016f22:	687b      	ldr	r3, [r7, #4]
 8016f24:	4618      	mov	r0, r3
 8016f26:	3708      	adds	r7, #8
 8016f28:	46bd      	mov	sp, r7
 8016f2a:	bd80      	pop	{r7, pc}

08016f2c <_ZSt8_DestroyIPP9StatementS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8016f2c:	b580      	push	{r7, lr}
 8016f2e:	b084      	sub	sp, #16
 8016f30:	af00      	add	r7, sp, #0
 8016f32:	60f8      	str	r0, [r7, #12]
 8016f34:	60b9      	str	r1, [r7, #8]
 8016f36:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8016f38:	68b9      	ldr	r1, [r7, #8]
 8016f3a:	68f8      	ldr	r0, [r7, #12]
 8016f3c:	f000 f843 	bl	8016fc6 <_ZSt8_DestroyIPP9StatementEvT_S3_>
    }
 8016f40:	bf00      	nop
 8016f42:	3710      	adds	r7, #16
 8016f44:	46bd      	mov	sp, r7
 8016f46:	bd80      	pop	{r7, pc}

08016f48 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8016f48:	b580      	push	{r7, lr}
 8016f4a:	b082      	sub	sp, #8
 8016f4c:	af00      	add	r7, sp, #0
 8016f4e:	6078      	str	r0, [r7, #4]
 8016f50:	6878      	ldr	r0, [r7, #4]
 8016f52:	f000 f845 	bl	8016fe0 <_ZNSaIP4BodyED1Ev>
 8016f56:	687b      	ldr	r3, [r7, #4]
 8016f58:	4618      	mov	r0, r3
 8016f5a:	3708      	adds	r7, #8
 8016f5c:	46bd      	mov	sp, r7
 8016f5e:	bd80      	pop	{r7, pc}

08016f60 <_ZNSt12_Vector_baseIP4BodySaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8016f60:	b580      	push	{r7, lr}
 8016f62:	b082      	sub	sp, #8
 8016f64:	af00      	add	r7, sp, #0
 8016f66:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8016f68:	687b      	ldr	r3, [r7, #4]
 8016f6a:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8016f6c:	687b      	ldr	r3, [r7, #4]
 8016f6e:	689a      	ldr	r2, [r3, #8]
 8016f70:	687b      	ldr	r3, [r7, #4]
 8016f72:	681b      	ldr	r3, [r3, #0]
 8016f74:	1ad3      	subs	r3, r2, r3
 8016f76:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 8016f78:	461a      	mov	r2, r3
 8016f7a:	6878      	ldr	r0, [r7, #4]
 8016f7c:	f7fd fb6c 	bl	8014658 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>
      }
 8016f80:	687b      	ldr	r3, [r7, #4]
 8016f82:	4618      	mov	r0, r3
 8016f84:	f7ff ffe0 	bl	8016f48 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implD1Ev>
 8016f88:	687b      	ldr	r3, [r7, #4]
 8016f8a:	4618      	mov	r0, r3
 8016f8c:	3708      	adds	r7, #8
 8016f8e:	46bd      	mov	sp, r7
 8016f90:	bd80      	pop	{r7, pc}

08016f92 <_ZSt8_DestroyIPP4BodyS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8016f92:	b580      	push	{r7, lr}
 8016f94:	b084      	sub	sp, #16
 8016f96:	af00      	add	r7, sp, #0
 8016f98:	60f8      	str	r0, [r7, #12]
 8016f9a:	60b9      	str	r1, [r7, #8]
 8016f9c:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8016f9e:	68b9      	ldr	r1, [r7, #8]
 8016fa0:	68f8      	ldr	r0, [r7, #12]
 8016fa2:	f000 f829 	bl	8016ff8 <_ZSt8_DestroyIPP4BodyEvT_S3_>
    }
 8016fa6:	bf00      	nop
 8016fa8:	3710      	adds	r7, #16
 8016faa:	46bd      	mov	sp, r7
 8016fac:	bd80      	pop	{r7, pc}

08016fae <_ZNSaIP9StatementED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8016fae:	b580      	push	{r7, lr}
 8016fb0:	b082      	sub	sp, #8
 8016fb2:	af00      	add	r7, sp, #0
 8016fb4:	6078      	str	r0, [r7, #4]
 8016fb6:	6878      	ldr	r0, [r7, #4]
 8016fb8:	f000 f82b 	bl	8017012 <_ZN9__gnu_cxx13new_allocatorIP9StatementED1Ev>
 8016fbc:	687b      	ldr	r3, [r7, #4]
 8016fbe:	4618      	mov	r0, r3
 8016fc0:	3708      	adds	r7, #8
 8016fc2:	46bd      	mov	sp, r7
 8016fc4:	bd80      	pop	{r7, pc}

08016fc6 <_ZSt8_DestroyIPP9StatementEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8016fc6:	b580      	push	{r7, lr}
 8016fc8:	b082      	sub	sp, #8
 8016fca:	af00      	add	r7, sp, #0
 8016fcc:	6078      	str	r0, [r7, #4]
 8016fce:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8016fd0:	6839      	ldr	r1, [r7, #0]
 8016fd2:	6878      	ldr	r0, [r7, #4]
 8016fd4:	f000 f828 	bl	8017028 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9StatementEEvT_S5_>
    }
 8016fd8:	bf00      	nop
 8016fda:	3708      	adds	r7, #8
 8016fdc:	46bd      	mov	sp, r7
 8016fde:	bd80      	pop	{r7, pc}

08016fe0 <_ZNSaIP4BodyED1Ev>:
 8016fe0:	b580      	push	{r7, lr}
 8016fe2:	b082      	sub	sp, #8
 8016fe4:	af00      	add	r7, sp, #0
 8016fe6:	6078      	str	r0, [r7, #4]
 8016fe8:	6878      	ldr	r0, [r7, #4]
 8016fea:	f000 f828 	bl	801703e <_ZN9__gnu_cxx13new_allocatorIP4BodyED1Ev>
 8016fee:	687b      	ldr	r3, [r7, #4]
 8016ff0:	4618      	mov	r0, r3
 8016ff2:	3708      	adds	r7, #8
 8016ff4:	46bd      	mov	sp, r7
 8016ff6:	bd80      	pop	{r7, pc}

08016ff8 <_ZSt8_DestroyIPP4BodyEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8016ff8:	b580      	push	{r7, lr}
 8016ffa:	b082      	sub	sp, #8
 8016ffc:	af00      	add	r7, sp, #0
 8016ffe:	6078      	str	r0, [r7, #4]
 8017000:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8017002:	6839      	ldr	r1, [r7, #0]
 8017004:	6878      	ldr	r0, [r7, #4]
 8017006:	f000 f825 	bl	8017054 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP4BodyEEvT_S5_>
    }
 801700a:	bf00      	nop
 801700c:	3708      	adds	r7, #8
 801700e:	46bd      	mov	sp, r7
 8017010:	bd80      	pop	{r7, pc}

08017012 <_ZN9__gnu_cxx13new_allocatorIP9StatementED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8017012:	b480      	push	{r7}
 8017014:	b083      	sub	sp, #12
 8017016:	af00      	add	r7, sp, #0
 8017018:	6078      	str	r0, [r7, #4]
 801701a:	687b      	ldr	r3, [r7, #4]
 801701c:	4618      	mov	r0, r3
 801701e:	370c      	adds	r7, #12
 8017020:	46bd      	mov	sp, r7
 8017022:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017026:	4770      	bx	lr

08017028 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9StatementEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 8017028:	b480      	push	{r7}
 801702a:	b083      	sub	sp, #12
 801702c:	af00      	add	r7, sp, #0
 801702e:	6078      	str	r0, [r7, #4]
 8017030:	6039      	str	r1, [r7, #0]
 8017032:	bf00      	nop
 8017034:	370c      	adds	r7, #12
 8017036:	46bd      	mov	sp, r7
 8017038:	f85d 7b04 	ldr.w	r7, [sp], #4
 801703c:	4770      	bx	lr

0801703e <_ZN9__gnu_cxx13new_allocatorIP4BodyED1Ev>:
 801703e:	b480      	push	{r7}
 8017040:	b083      	sub	sp, #12
 8017042:	af00      	add	r7, sp, #0
 8017044:	6078      	str	r0, [r7, #4]
 8017046:	687b      	ldr	r3, [r7, #4]
 8017048:	4618      	mov	r0, r3
 801704a:	370c      	adds	r7, #12
 801704c:	46bd      	mov	sp, r7
 801704e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017052:	4770      	bx	lr

08017054 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP4BodyEEvT_S5_>:
 8017054:	b480      	push	{r7}
 8017056:	b083      	sub	sp, #12
 8017058:	af00      	add	r7, sp, #0
 801705a:	6078      	str	r0, [r7, #4]
 801705c:	6039      	str	r1, [r7, #0]
 801705e:	bf00      	nop
 8017060:	370c      	adds	r7, #12
 8017062:	46bd      	mov	sp, r7
 8017064:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017068:	4770      	bx	lr
	...

0801706c <_Z41__static_initialization_and_destruction_0ii>:
 801706c:	b590      	push	{r4, r7, lr}
 801706e:	b0e7      	sub	sp, #412	; 0x19c
 8017070:	af02      	add	r7, sp, #8
 8017072:	1d3b      	adds	r3, r7, #4
 8017074:	6018      	str	r0, [r3, #0]
 8017076:	463b      	mov	r3, r7
 8017078:	6019      	str	r1, [r3, #0]
 801707a:	1d3b      	adds	r3, r7, #4
 801707c:	681b      	ldr	r3, [r3, #0]
 801707e:	2b01      	cmp	r3, #1
 8017080:	f040 819d 	bne.w	80173be <_Z41__static_initialization_and_destruction_0ii+0x352>
 8017084:	463b      	mov	r3, r7
 8017086:	681b      	ldr	r3, [r3, #0]
 8017088:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801708c:	4293      	cmp	r3, r2
 801708e:	f040 8196 	bne.w	80173be <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8017092:	f107 0314 	add.w	r3, r7, #20
 8017096:	4618      	mov	r0, r3
 8017098:	2322      	movs	r3, #34	; 0x22
 801709a:	461a      	mov	r2, r3
 801709c:	2100      	movs	r1, #0
 801709e:	f00d f959 	bl	8024354 <memset>
 80170a2:	f107 0314 	add.w	r3, r7, #20
 80170a6:	223a      	movs	r2, #58	; 0x3a
 80170a8:	701a      	strb	r2, [r3, #0]
 80170aa:	f107 0314 	add.w	r3, r7, #20
 80170ae:	2201      	movs	r2, #1
 80170b0:	705a      	strb	r2, [r3, #1]
 80170b2:	f107 0314 	add.w	r3, r7, #20
 80170b6:	220a      	movs	r2, #10
 80170b8:	709a      	strb	r2, [r3, #2]
 80170ba:	f107 0314 	add.w	r3, r7, #20
 80170be:	220a      	movs	r2, #10
 80170c0:	70da      	strb	r2, [r3, #3]
 80170c2:	f107 0314 	add.w	r3, r7, #20
 80170c6:	222c      	movs	r2, #44	; 0x2c
 80170c8:	711a      	strb	r2, [r3, #4]
 80170ca:	f107 0314 	add.w	r3, r7, #20
 80170ce:	220c      	movs	r2, #12
 80170d0:	715a      	strb	r2, [r3, #5]
 80170d2:	f107 0314 	add.w	r3, r7, #20
 80170d6:	222e      	movs	r2, #46	; 0x2e
 80170d8:	719a      	strb	r2, [r3, #6]
 80170da:	f107 0314 	add.w	r3, r7, #20
 80170de:	220b      	movs	r2, #11
 80170e0:	71da      	strb	r2, [r3, #7]
 80170e2:	f107 0314 	add.w	r3, r7, #20
 80170e6:	225b      	movs	r2, #91	; 0x5b
 80170e8:	721a      	strb	r2, [r3, #8]
 80170ea:	f107 0314 	add.w	r3, r7, #20
 80170ee:	220d      	movs	r2, #13
 80170f0:	725a      	strb	r2, [r3, #9]
 80170f2:	f107 0314 	add.w	r3, r7, #20
 80170f6:	225d      	movs	r2, #93	; 0x5d
 80170f8:	729a      	strb	r2, [r3, #10]
 80170fa:	f107 0314 	add.w	r3, r7, #20
 80170fe:	220e      	movs	r2, #14
 8017100:	72da      	strb	r2, [r3, #11]
 8017102:	f107 0314 	add.w	r3, r7, #20
 8017106:	227c      	movs	r2, #124	; 0x7c
 8017108:	731a      	strb	r2, [r3, #12]
 801710a:	f107 0314 	add.w	r3, r7, #20
 801710e:	2215      	movs	r2, #21
 8017110:	735a      	strb	r2, [r3, #13]
 8017112:	f107 0314 	add.w	r3, r7, #20
 8017116:	2226      	movs	r2, #38	; 0x26
 8017118:	739a      	strb	r2, [r3, #14]
 801711a:	f107 0314 	add.w	r3, r7, #20
 801711e:	2216      	movs	r2, #22
 8017120:	73da      	strb	r2, [r3, #15]
 8017122:	f107 0314 	add.w	r3, r7, #20
 8017126:	222b      	movs	r2, #43	; 0x2b
 8017128:	741a      	strb	r2, [r3, #16]
 801712a:	f107 0314 	add.w	r3, r7, #20
 801712e:	221f      	movs	r2, #31
 8017130:	745a      	strb	r2, [r3, #17]
 8017132:	f107 0314 	add.w	r3, r7, #20
 8017136:	222d      	movs	r2, #45	; 0x2d
 8017138:	749a      	strb	r2, [r3, #18]
 801713a:	f107 0314 	add.w	r3, r7, #20
 801713e:	2220      	movs	r2, #32
 8017140:	74da      	strb	r2, [r3, #19]
 8017142:	f107 0314 	add.w	r3, r7, #20
 8017146:	222a      	movs	r2, #42	; 0x2a
 8017148:	751a      	strb	r2, [r3, #20]
 801714a:	f107 0314 	add.w	r3, r7, #20
 801714e:	2221      	movs	r2, #33	; 0x21
 8017150:	755a      	strb	r2, [r3, #21]
 8017152:	f107 0314 	add.w	r3, r7, #20
 8017156:	222f      	movs	r2, #47	; 0x2f
 8017158:	759a      	strb	r2, [r3, #22]
 801715a:	f107 0314 	add.w	r3, r7, #20
 801715e:	2222      	movs	r2, #34	; 0x22
 8017160:	75da      	strb	r2, [r3, #23]
 8017162:	f107 0314 	add.w	r3, r7, #20
 8017166:	225e      	movs	r2, #94	; 0x5e
 8017168:	761a      	strb	r2, [r3, #24]
 801716a:	f107 0314 	add.w	r3, r7, #20
 801716e:	2223      	movs	r2, #35	; 0x23
 8017170:	765a      	strb	r2, [r3, #25]
 8017172:	f107 0314 	add.w	r3, r7, #20
 8017176:	2225      	movs	r2, #37	; 0x25
 8017178:	769a      	strb	r2, [r3, #26]
 801717a:	f107 0314 	add.w	r3, r7, #20
 801717e:	2224      	movs	r2, #36	; 0x24
 8017180:	76da      	strb	r2, [r3, #27]
 8017182:	f107 0314 	add.w	r3, r7, #20
 8017186:	2228      	movs	r2, #40	; 0x28
 8017188:	771a      	strb	r2, [r3, #28]
 801718a:	f107 0314 	add.w	r3, r7, #20
 801718e:	2226      	movs	r2, #38	; 0x26
 8017190:	775a      	strb	r2, [r3, #29]
 8017192:	f107 0314 	add.w	r3, r7, #20
 8017196:	2229      	movs	r2, #41	; 0x29
 8017198:	779a      	strb	r2, [r3, #30]
 801719a:	f107 0314 	add.w	r3, r7, #20
 801719e:	2227      	movs	r2, #39	; 0x27
 80171a0:	77da      	strb	r2, [r3, #31]
 80171a2:	f107 0314 	add.w	r3, r7, #20
 80171a6:	2225      	movs	r2, #37	; 0x25
 80171a8:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80171ac:	f107 030c 	add.w	r3, r7, #12
 80171b0:	f107 0214 	add.w	r2, r7, #20
 80171b4:	601a      	str	r2, [r3, #0]
 80171b6:	f107 030c 	add.w	r3, r7, #12
 80171ba:	2211      	movs	r2, #17
 80171bc:	605a      	str	r2, [r3, #4]
 80171be:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80171c2:	4618      	mov	r0, r3
 80171c4:	f7ea f88e 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 80171c8:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80171cc:	f107 020c 	add.w	r2, r7, #12
 80171d0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80171d4:	9300      	str	r3, [sp, #0]
 80171d6:	460b      	mov	r3, r1
 80171d8:	ca06      	ldmia	r2, {r1, r2}
 80171da:	4885      	ldr	r0, [pc, #532]	; (80173f0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80171dc:	f7ea f89a 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80171e0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80171e4:	4618      	mov	r0, r3
 80171e6:	f7ea f889 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 80171ea:	2305      	movs	r3, #5
 80171ec:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 80171f0:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 80171f4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80171f8:	497e      	ldr	r1, [pc, #504]	; (80173f4 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 80171fa:	4618      	mov	r0, r3
 80171fc:	f7e9 ff76 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8017200:	2306      	movs	r3, #6
 8017202:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8017206:	f207 1263 	addw	r2, r7, #355	; 0x163
 801720a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801720e:	331c      	adds	r3, #28
 8017210:	4979      	ldr	r1, [pc, #484]	; (80173f8 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8017212:	4618      	mov	r0, r3
 8017214:	f7e9 ff92 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8017218:	2307      	movs	r3, #7
 801721a:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801721e:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8017222:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8017226:	3338      	adds	r3, #56	; 0x38
 8017228:	4974      	ldr	r1, [pc, #464]	; (80173fc <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801722a:	4618      	mov	r0, r3
 801722c:	f7e9 ff86 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8017230:	2308      	movs	r3, #8
 8017232:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8017236:	f207 1265 	addw	r2, r7, #357	; 0x165
 801723a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801723e:	3354      	adds	r3, #84	; 0x54
 8017240:	496f      	ldr	r1, [pc, #444]	; (8017400 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8017242:	4618      	mov	r0, r3
 8017244:	f7e9 ff52 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8017248:	2309      	movs	r3, #9
 801724a:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801724e:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8017252:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8017256:	3370      	adds	r3, #112	; 0x70
 8017258:	496a      	ldr	r1, [pc, #424]	; (8017404 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801725a:	4618      	mov	r0, r3
 801725c:	f7e9 ff96 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8017260:	2310      	movs	r3, #16
 8017262:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8017266:	f207 1267 	addw	r2, r7, #359	; 0x167
 801726a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801726e:	338c      	adds	r3, #140	; 0x8c
 8017270:	4965      	ldr	r1, [pc, #404]	; (8017408 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8017272:	4618      	mov	r0, r3
 8017274:	f7e9 ffb2 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8017278:	2311      	movs	r3, #17
 801727a:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801727e:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8017282:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8017286:	33a8      	adds	r3, #168	; 0xa8
 8017288:	4960      	ldr	r1, [pc, #384]	; (801740c <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801728a:	4618      	mov	r0, r3
 801728c:	f7e9 ff7e 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8017290:	2312      	movs	r3, #18
 8017292:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8017296:	f207 1269 	addw	r2, r7, #361	; 0x169
 801729a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801729e:	33c4      	adds	r3, #196	; 0xc4
 80172a0:	495b      	ldr	r1, [pc, #364]	; (8017410 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 80172a2:	4618      	mov	r0, r3
 80172a4:	f7e9 ff22 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 80172a8:	2313      	movs	r3, #19
 80172aa:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 80172ae:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 80172b2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80172b6:	33e0      	adds	r3, #224	; 0xe0
 80172b8:	4956      	ldr	r1, [pc, #344]	; (8017414 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 80172ba:	4618      	mov	r0, r3
 80172bc:	f7e9 ff3e 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 80172c0:	2314      	movs	r3, #20
 80172c2:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 80172c6:	f207 126b 	addw	r2, r7, #363	; 0x16b
 80172ca:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80172ce:	33fc      	adds	r3, #252	; 0xfc
 80172d0:	4951      	ldr	r1, [pc, #324]	; (8017418 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80172d2:	4618      	mov	r0, r3
 80172d4:	f7e9 ffaa 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80172d8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80172dc:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80172e0:	601a      	str	r2, [r3, #0]
 80172e2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80172e6:	220a      	movs	r2, #10
 80172e8:	605a      	str	r2, [r3, #4]
 80172ea:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80172ee:	4618      	mov	r0, r3
 80172f0:	f7ea f89d 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80172f4:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80172f8:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80172fc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8017300:	9300      	str	r3, [sp, #0]
 8017302:	460b      	mov	r3, r1
 8017304:	ca06      	ldmia	r2, {r1, r2}
 8017306:	4845      	ldr	r0, [pc, #276]	; (801741c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8017308:	f7ea f8a9 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801730c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8017310:	4618      	mov	r0, r3
 8017312:	f7ea f898 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8017316:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801731a:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801731e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8017322:	429c      	cmp	r4, r3
 8017324:	d004      	beq.n	8017330 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8017326:	3c1c      	subs	r4, #28
 8017328:	4620      	mov	r0, r4
 801732a:	f7e9 fed2 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801732e:	e7f6      	b.n	801731e <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8017330:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8017334:	2200      	movs	r2, #0
 8017336:	601a      	str	r2, [r3, #0]
 8017338:	605a      	str	r2, [r3, #4]
 801733a:	609a      	str	r2, [r3, #8]
 801733c:	233c      	movs	r3, #60	; 0x3c
 801733e:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8017342:	231b      	movs	r3, #27
 8017344:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8017348:	231c      	movs	r3, #28
 801734a:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801734e:	233e      	movs	r3, #62	; 0x3e
 8017350:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8017354:	2319      	movs	r3, #25
 8017356:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801735a:	231a      	movs	r3, #26
 801735c:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8017360:	233d      	movs	r3, #61	; 0x3d
 8017362:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8017366:	2318      	movs	r3, #24
 8017368:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801736c:	231d      	movs	r3, #29
 801736e:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8017372:	2321      	movs	r3, #33	; 0x21
 8017374:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8017378:	2317      	movs	r3, #23
 801737a:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801737e:	231e      	movs	r3, #30
 8017380:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8017384:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8017388:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801738c:	2304      	movs	r3, #4
 801738e:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8017392:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8017396:	4618      	mov	r0, r3
 8017398:	f7ea f891 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801739c:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 80173a0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80173a4:	9300      	str	r3, [sp, #0]
 80173a6:	4613      	mov	r3, r2
 80173a8:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 80173ac:	ca06      	ldmia	r2, {r1, r2}
 80173ae:	481c      	ldr	r0, [pc, #112]	; (8017420 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80173b0:	f7ea f89d 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80173b4:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80173b8:	4618      	mov	r0, r3
 80173ba:	f7ea f88c 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 80173be:	1d3b      	adds	r3, r7, #4
 80173c0:	681b      	ldr	r3, [r3, #0]
 80173c2:	2b00      	cmp	r3, #0
 80173c4:	d10e      	bne.n	80173e4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80173c6:	463b      	mov	r3, r7
 80173c8:	681b      	ldr	r3, [r3, #0]
 80173ca:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80173ce:	4293      	cmp	r3, r2
 80173d0:	d108      	bne.n	80173e4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80173d2:	4813      	ldr	r0, [pc, #76]	; (8017420 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80173d4:	f7ec fce4 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80173d8:	4810      	ldr	r0, [pc, #64]	; (801741c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80173da:	f7ec fcee 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80173de:	4804      	ldr	r0, [pc, #16]	; (80173f0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80173e0:	f7ec fcf8 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80173e4:	bf00      	nop
 80173e6:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80173ea:	46bd      	mov	sp, r7
 80173ec:	bd90      	pop	{r4, r7, pc}
 80173ee:	bf00      	nop
 80173f0:	2000040c 	.word	0x2000040c
 80173f4:	08027888 	.word	0x08027888
 80173f8:	08027890 	.word	0x08027890
 80173fc:	08027898 	.word	0x08027898
 8017400:	080278a0 	.word	0x080278a0
 8017404:	080278a8 	.word	0x080278a8
 8017408:	080278b0 	.word	0x080278b0
 801740c:	080278b4 	.word	0x080278b4
 8017410:	080278bc 	.word	0x080278bc
 8017414:	080278c4 	.word	0x080278c4
 8017418:	080278cc 	.word	0x080278cc
 801741c:	20000424 	.word	0x20000424
 8017420:	2000043c 	.word	0x2000043c

08017424 <_GLOBAL__sub_I__ZN4BodyD2Ev>:
 8017424:	b580      	push	{r7, lr}
 8017426:	af00      	add	r7, sp, #0
 8017428:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801742c:	2001      	movs	r0, #1
 801742e:	f7ff fe1d 	bl	801706c <_Z41__static_initialization_and_destruction_0ii>
 8017432:	bd80      	pop	{r7, pc}

08017434 <_GLOBAL__sub_D__ZN4BodyD2Ev>:
 8017434:	b580      	push	{r7, lr}
 8017436:	af00      	add	r7, sp, #0
 8017438:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801743c:	2000      	movs	r0, #0
 801743e:	f7ff fe15 	bl	801706c <_Z41__static_initialization_and_destruction_0ii>
 8017442:	bd80      	pop	{r7, pc}

08017444 <_ZN6SymbolC1Ei>:
#include "Symbol.h"
#include "Transmitter.h"

Symbol::Symbol(int value)
 8017444:	b580      	push	{r7, lr}
 8017446:	b082      	sub	sp, #8
 8017448:	af00      	add	r7, sp, #0
 801744a:	6078      	str	r0, [r7, #4]
 801744c:	6039      	str	r1, [r7, #0]
 801744e:	687b      	ldr	r3, [r7, #4]
 8017450:	3304      	adds	r3, #4
 8017452:	4618      	mov	r0, r3
 8017454:	f7ef ffa0 	bl	8007398 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1Ev>
{
	type = SYMBOL_INT;
 8017458:	687b      	ldr	r3, [r7, #4]
 801745a:	2200      	movs	r2, #0
 801745c:	701a      	strb	r2, [r3, #0]
	this->value = value;
 801745e:	687b      	ldr	r3, [r7, #4]
 8017460:	3304      	adds	r3, #4
 8017462:	463a      	mov	r2, r7
 8017464:	4611      	mov	r1, r2
 8017466:	4618      	mov	r0, r3
 8017468:	f001 f81c 	bl	80184a4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_>
}
 801746c:	687b      	ldr	r3, [r7, #4]
 801746e:	4618      	mov	r0, r3
 8017470:	3708      	adds	r7, #8
 8017472:	46bd      	mov	sp, r7
 8017474:	bd80      	pop	{r7, pc}

08017476 <_ZN6SymbolC1Ef>:

Symbol::Symbol(float value)
 8017476:	b580      	push	{r7, lr}
 8017478:	b082      	sub	sp, #8
 801747a:	af00      	add	r7, sp, #0
 801747c:	6078      	str	r0, [r7, #4]
 801747e:	ed87 0a00 	vstr	s0, [r7]
 8017482:	687b      	ldr	r3, [r7, #4]
 8017484:	3304      	adds	r3, #4
 8017486:	4618      	mov	r0, r3
 8017488:	f7ef ff86 	bl	8007398 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1Ev>
{
	type = SYMBOL_FLOAT;
 801748c:	687b      	ldr	r3, [r7, #4]
 801748e:	2201      	movs	r2, #1
 8017490:	701a      	strb	r2, [r3, #0]
	this->value = value;
 8017492:	687b      	ldr	r3, [r7, #4]
 8017494:	3304      	adds	r3, #4
 8017496:	463a      	mov	r2, r7
 8017498:	4611      	mov	r1, r2
 801749a:	4618      	mov	r0, r3
 801749c:	f001 f82c 	bl	80184f8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_>
}
 80174a0:	687b      	ldr	r3, [r7, #4]
 80174a2:	4618      	mov	r0, r3
 80174a4:	3708      	adds	r7, #8
 80174a6:	46bd      	mov	sp, r7
 80174a8:	bd80      	pop	{r7, pc}

080174aa <_ZN6SymbolC1Eb>:

Symbol::Symbol(bool value)
 80174aa:	b580      	push	{r7, lr}
 80174ac:	b082      	sub	sp, #8
 80174ae:	af00      	add	r7, sp, #0
 80174b0:	6078      	str	r0, [r7, #4]
 80174b2:	460b      	mov	r3, r1
 80174b4:	70fb      	strb	r3, [r7, #3]
 80174b6:	687b      	ldr	r3, [r7, #4]
 80174b8:	3304      	adds	r3, #4
 80174ba:	4618      	mov	r0, r3
 80174bc:	f7ef ff6c 	bl	8007398 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1Ev>
{
	type = SYMBOL_BOOL;
 80174c0:	687b      	ldr	r3, [r7, #4]
 80174c2:	2202      	movs	r2, #2
 80174c4:	701a      	strb	r2, [r3, #0]
	this->value = value;
 80174c6:	687b      	ldr	r3, [r7, #4]
 80174c8:	3304      	adds	r3, #4
 80174ca:	1cfa      	adds	r2, r7, #3
 80174cc:	4611      	mov	r1, r2
 80174ce:	4618      	mov	r0, r3
 80174d0:	f001 f83c 	bl	801854c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_>
}
 80174d4:	687b      	ldr	r3, [r7, #4]
 80174d6:	4618      	mov	r0, r3
 80174d8:	3708      	adds	r7, #8
 80174da:	46bd      	mov	sp, r7
 80174dc:	bd80      	pop	{r7, pc}

080174de <_ZN6SymbolC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol::Symbol(std::string value)
 80174de:	b580      	push	{r7, lr}
 80174e0:	b082      	sub	sp, #8
 80174e2:	af00      	add	r7, sp, #0
 80174e4:	6078      	str	r0, [r7, #4]
 80174e6:	6039      	str	r1, [r7, #0]
 80174e8:	687b      	ldr	r3, [r7, #4]
 80174ea:	3304      	adds	r3, #4
 80174ec:	4618      	mov	r0, r3
 80174ee:	f7ef ff53 	bl	8007398 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1Ev>
{
	type = SYMBOL_STRING;
 80174f2:	687b      	ldr	r3, [r7, #4]
 80174f4:	2203      	movs	r2, #3
 80174f6:	701a      	strb	r2, [r3, #0]
	this->value = value;
 80174f8:	687b      	ldr	r3, [r7, #4]
 80174fa:	3304      	adds	r3, #4
 80174fc:	6839      	ldr	r1, [r7, #0]
 80174fe:	4618      	mov	r0, r3
 8017500:	f001 f84f 	bl	80185a2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_>
}
 8017504:	687b      	ldr	r3, [r7, #4]
 8017506:	4618      	mov	r0, r3
 8017508:	3708      	adds	r7, #8
 801750a:	46bd      	mov	sp, r7
 801750c:	bd80      	pop	{r7, pc}

0801750e <_ZN6SymbolC1EPKc>:

Symbol::Symbol(const char *value)
 801750e:	b580      	push	{r7, lr}
 8017510:	b08a      	sub	sp, #40	; 0x28
 8017512:	af00      	add	r7, sp, #0
 8017514:	6078      	str	r0, [r7, #4]
 8017516:	6039      	str	r1, [r7, #0]
 8017518:	687b      	ldr	r3, [r7, #4]
 801751a:	3304      	adds	r3, #4
 801751c:	4618      	mov	r0, r3
 801751e:	f7ef ff3b 	bl	8007398 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1Ev>
{
	type = SYMBOL_STRING;
 8017522:	687b      	ldr	r3, [r7, #4]
 8017524:	2203      	movs	r2, #3
 8017526:	701a      	strb	r2, [r3, #0]
	this->value = std::string(value);
 8017528:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801752c:	4618      	mov	r0, r3
 801752e:	f00b fb9c 	bl	8022c6a <_ZNSaIcEC1Ev>
 8017532:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017536:	f107 030c 	add.w	r3, r7, #12
 801753a:	6839      	ldr	r1, [r7, #0]
 801753c:	4618      	mov	r0, r3
 801753e:	f7e9 ff24 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017542:	687b      	ldr	r3, [r7, #4]
 8017544:	3304      	adds	r3, #4
 8017546:	f107 020c 	add.w	r2, r7, #12
 801754a:	4611      	mov	r1, r2
 801754c:	4618      	mov	r0, r3
 801754e:	f001 f861 	bl	8018614 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
 8017552:	f107 030c 	add.w	r3, r7, #12
 8017556:	4618      	mov	r0, r3
 8017558:	f00b fd4d 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801755c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017560:	4618      	mov	r0, r3
 8017562:	f00b fb83 	bl	8022c6c <_ZNSaIcED1Ev>
}
 8017566:	687b      	ldr	r3, [r7, #4]
 8017568:	4618      	mov	r0, r3
 801756a:	3728      	adds	r7, #40	; 0x28
 801756c:	46bd      	mov	sp, r7
 801756e:	bd80      	pop	{r7, pc}

08017570 <_ZN6SymbolC1ESt16initializer_listIS_E>:

Symbol::Symbol(std::initializer_list<Symbol> value)
 8017570:	b580      	push	{r7, lr}
 8017572:	b088      	sub	sp, #32
 8017574:	af00      	add	r7, sp, #0
 8017576:	60f8      	str	r0, [r7, #12]
 8017578:	1d3b      	adds	r3, r7, #4
 801757a:	e883 0006 	stmia.w	r3, {r1, r2}
 801757e:	68fb      	ldr	r3, [r7, #12]
 8017580:	3304      	adds	r3, #4
 8017582:	4618      	mov	r0, r3
 8017584:	f7ef ff08 	bl	8007398 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1Ev>
{
	type = SYMBOL_CONTAINER;
 8017588:	68fb      	ldr	r3, [r7, #12]
 801758a:	2204      	movs	r2, #4
 801758c:	701a      	strb	r2, [r3, #0]
	this->value = std::vector<Symbol>(value);
 801758e:	f107 031c 	add.w	r3, r7, #28
 8017592:	4618      	mov	r0, r3
 8017594:	f001 f86a 	bl	801866c <_ZNSaI6SymbolEC1Ev>
 8017598:	f107 031c 	add.w	r3, r7, #28
 801759c:	f107 0010 	add.w	r0, r7, #16
 80175a0:	1d3a      	adds	r2, r7, #4
 80175a2:	ca06      	ldmia	r2, {r1, r2}
 80175a4:	f001 f86e 	bl	8018684 <_ZNSt6vectorI6SymbolSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
 80175a8:	68fb      	ldr	r3, [r7, #12]
 80175aa:	3304      	adds	r3, #4
 80175ac:	f107 0210 	add.w	r2, r7, #16
 80175b0:	4611      	mov	r1, r2
 80175b2:	4618      	mov	r0, r3
 80175b4:	f001 f887 	bl	80186c6 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSISB_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
 80175b8:	f107 0310 	add.w	r3, r7, #16
 80175bc:	4618      	mov	r0, r3
 80175be:	f7f5 ffa7 	bl	800d510 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
 80175c2:	f107 031c 	add.w	r3, r7, #28
 80175c6:	4618      	mov	r0, r3
 80175c8:	f7f5 ff87 	bl	800d4da <_ZNSaI6SymbolED1Ev>
}
 80175cc:	68fb      	ldr	r3, [r7, #12]
 80175ce:	4618      	mov	r0, r3
 80175d0:	3720      	adds	r7, #32
 80175d2:	46bd      	mov	sp, r7
 80175d4:	bd80      	pop	{r7, pc}

080175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 80175d6:	b580      	push	{r7, lr}
 80175d8:	b082      	sub	sp, #8
 80175da:	af00      	add	r7, sp, #0
 80175dc:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 80175de:	6878      	ldr	r0, [r7, #4]
 80175e0:	f7f4 fe98 	bl	800c314 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 80175e4:	4603      	mov	r3, r0
    }
 80175e6:	4618      	mov	r0, r3
 80175e8:	3708      	adds	r7, #8
 80175ea:	46bd      	mov	sp, r7
 80175ec:	bd80      	pop	{r7, pc}
	...

080175f0 <_ZN6SymbolixES_>:

Symbol& Symbol::operator[](Symbol idx)
{
 80175f0:	b580      	push	{r7, lr}
 80175f2:	b098      	sub	sp, #96	; 0x60
 80175f4:	af00      	add	r7, sp, #0
 80175f6:	6078      	str	r0, [r7, #4]
 80175f8:	6039      	str	r1, [r7, #0]
	if (idx.type != SYMBOL_INT)
 80175fa:	683b      	ldr	r3, [r7, #0]
 80175fc:	781b      	ldrb	r3, [r3, #0]
 80175fe:	2b00      	cmp	r3, #0
 8017600:	d01b      	beq.n	801763a <_ZN6SymbolixES_+0x4a>
	{
		Transmitter::report_error("index must be an integer");
 8017602:	f107 0320 	add.w	r3, r7, #32
 8017606:	4618      	mov	r0, r3
 8017608:	f00b fb2f 	bl	8022c6a <_ZNSaIcEC1Ev>
 801760c:	f107 0220 	add.w	r2, r7, #32
 8017610:	f107 0308 	add.w	r3, r7, #8
 8017614:	493a      	ldr	r1, [pc, #232]	; (8017700 <_ZN6SymbolixES_+0x110>)
 8017616:	4618      	mov	r0, r3
 8017618:	f7e9 feb7 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801761c:	f107 0308 	add.w	r3, r7, #8
 8017620:	4618      	mov	r0, r3
 8017622:	f001 fc13 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017626:	f107 0308 	add.w	r3, r7, #8
 801762a:	4618      	mov	r0, r3
 801762c:	f00b fce3 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017630:	f107 0320 	add.w	r3, r7, #32
 8017634:	4618      	mov	r0, r3
 8017636:	f00b fb19 	bl	8022c6c <_ZNSaIcED1Ev>
	}
	int i = std::get<int>(idx.value);
 801763a:	683b      	ldr	r3, [r7, #0]
 801763c:	3304      	adds	r3, #4
 801763e:	4618      	mov	r0, r3
 8017640:	f7ff ffc9 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017644:	4603      	mov	r3, r0
 8017646:	681b      	ldr	r3, [r3, #0]
 8017648:	65fb      	str	r3, [r7, #92]	; 0x5c

	if (i < 0)
 801764a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801764c:	2b00      	cmp	r3, #0
 801764e:	da1b      	bge.n	8017688 <_ZN6SymbolixES_+0x98>
	{
		Transmitter::report_error("index must be positive");
 8017650:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8017654:	4618      	mov	r0, r3
 8017656:	f00b fb08 	bl	8022c6a <_ZNSaIcEC1Ev>
 801765a:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 801765e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017662:	4928      	ldr	r1, [pc, #160]	; (8017704 <_ZN6SymbolixES_+0x114>)
 8017664:	4618      	mov	r0, r3
 8017666:	f7e9 fe90 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801766a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801766e:	4618      	mov	r0, r3
 8017670:	f001 fbec 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017674:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017678:	4618      	mov	r0, r3
 801767a:	f00b fcbc 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801767e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8017682:	4618      	mov	r0, r3
 8017684:	f00b faf2 	bl	8022c6c <_ZNSaIcED1Ev>
	}

	if (type == SYMBOL_CONTAINER)
 8017688:	687b      	ldr	r3, [r7, #4]
 801768a:	781b      	ldrb	r3, [r3, #0]
 801768c:	2b04      	cmp	r3, #4
 801768e:	d10c      	bne.n	80176aa <_ZN6SymbolixES_+0xba>
	{
		return std::get<std::vector<Symbol>>(value)[i];
 8017690:	687b      	ldr	r3, [r7, #4]
 8017692:	3304      	adds	r3, #4
 8017694:	4618      	mov	r0, r3
 8017696:	f001 f842 	bl	801871e <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IS9_SaIS9_EES3_EERT_RSt7variantIJDpT0_EE>
 801769a:	4602      	mov	r2, r0
 801769c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801769e:	4619      	mov	r1, r3
 80176a0:	4610      	mov	r0, r2
 80176a2:	f001 f848 	bl	8018736 <_ZNSt6vectorI6SymbolSaIS0_EEixEj>
 80176a6:	4603      	mov	r3, r0
 80176a8:	e026      	b.n	80176f8 <_ZN6SymbolixES_+0x108>
	}
	else
	{
		Transmitter::report_error(
 80176aa:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80176ae:	4618      	mov	r0, r3
 80176b0:	f00b fadb 	bl	8022c6a <_ZNSaIcEC1Ev>
 80176b4:	f107 0258 	add.w	r2, r7, #88	; 0x58
 80176b8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80176bc:	4912      	ldr	r1, [pc, #72]	; (8017708 <_ZN6SymbolixES_+0x118>)
 80176be:	4618      	mov	r0, r3
 80176c0:	f7e9 fe63 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80176c4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80176c8:	4618      	mov	r0, r3
 80176ca:	f001 fbbf 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
				"cannot perform [] operation on non container");
 80176ce:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80176d2:	4618      	mov	r0, r3
 80176d4:	f00b fc8f 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80176d8:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80176dc:	4618      	mov	r0, r3
 80176de:	f00b fac5 	bl	8022c6c <_ZNSaIcED1Ev>
		return std::get<std::vector<Symbol>>(value)[0];
 80176e2:	687b      	ldr	r3, [r7, #4]
 80176e4:	3304      	adds	r3, #4
 80176e6:	4618      	mov	r0, r3
 80176e8:	f001 f819 	bl	801871e <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IS9_SaIS9_EES3_EERT_RSt7variantIJDpT0_EE>
 80176ec:	4603      	mov	r3, r0
 80176ee:	2100      	movs	r1, #0
 80176f0:	4618      	mov	r0, r3
 80176f2:	f001 f820 	bl	8018736 <_ZNSt6vectorI6SymbolSaIS0_EEixEj>
 80176f6:	4603      	mov	r3, r0
	}
}
 80176f8:	4618      	mov	r0, r3
 80176fa:	3760      	adds	r7, #96	; 0x60
 80176fc:	46bd      	mov	sp, r7
 80176fe:	bd80      	pop	{r7, pc}
 8017700:	080278e4 	.word	0x080278e4
 8017704:	08027900 	.word	0x08027900
 8017708:	08027918 	.word	0x08027918

0801770c <_ZN6SymbolplES_>:

Symbol Symbol::operator+(Symbol other)
{
 801770c:	b590      	push	{r4, r7, lr}
 801770e:	ed2d 8b02 	vpush	{d8}
 8017712:	b08d      	sub	sp, #52	; 0x34
 8017714:	af00      	add	r7, sp, #0
 8017716:	60f8      	str	r0, [r7, #12]
 8017718:	60b9      	str	r1, [r7, #8]
 801771a:	607a      	str	r2, [r7, #4]
	assert_types(other);
 801771c:	6879      	ldr	r1, [r7, #4]
 801771e:	68b8      	ldr	r0, [r7, #8]
 8017720:	f000 fe92 	bl	8018448 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017724:	68bb      	ldr	r3, [r7, #8]
 8017726:	781b      	ldrb	r3, [r3, #0]
 8017728:	2b03      	cmp	r3, #3
 801772a:	d85a      	bhi.n	80177e2 <_ZN6SymbolplES_+0xd6>
 801772c:	a201      	add	r2, pc, #4	; (adr r2, 8017734 <_ZN6SymbolplES_+0x28>)
 801772e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8017732:	bf00      	nop
 8017734:	08017745 	.word	0x08017745
 8017738:	08017767 	.word	0x08017767
 801773c:	08017791 	.word	0x08017791
 8017740:	080177c1 	.word	0x080177c1
	{
	case SYMBOL_INT:
		std::get<int>(this->value) += std::get<int>(other.value);
 8017744:	687b      	ldr	r3, [r7, #4]
 8017746:	3304      	adds	r3, #4
 8017748:	4618      	mov	r0, r3
 801774a:	f7ff ff44 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 801774e:	4603      	mov	r3, r0
 8017750:	681c      	ldr	r4, [r3, #0]
 8017752:	68bb      	ldr	r3, [r7, #8]
 8017754:	3304      	adds	r3, #4
 8017756:	4618      	mov	r0, r3
 8017758:	f7ff ff3d 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 801775c:	4603      	mov	r3, r0
 801775e:	681a      	ldr	r2, [r3, #0]
 8017760:	4422      	add	r2, r4
 8017762:	601a      	str	r2, [r3, #0]
		break;
 8017764:	e05a      	b.n	801781c <_ZN6SymbolplES_+0x110>
	case SYMBOL_FLOAT:
		std::get<float>(this->value) += std::get<float>(other.value);
 8017766:	687b      	ldr	r3, [r7, #4]
 8017768:	3304      	adds	r3, #4
 801776a:	4618      	mov	r0, r3
 801776c:	f000 fdca 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017770:	4603      	mov	r3, r0
 8017772:	ed93 8a00 	vldr	s16, [r3]
 8017776:	68bb      	ldr	r3, [r7, #8]
 8017778:	3304      	adds	r3, #4
 801777a:	4618      	mov	r0, r3
 801777c:	f000 fdc2 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017780:	4603      	mov	r3, r0
 8017782:	edd3 7a00 	vldr	s15, [r3]
 8017786:	ee78 7a27 	vadd.f32	s15, s16, s15
 801778a:	edc3 7a00 	vstr	s15, [r3]
		break;
 801778e:	e045      	b.n	801781c <_ZN6SymbolplES_+0x110>
	case SYMBOL_BOOL:
		std::get<bool>(this->value) += std::get<bool>(other.value);
 8017790:	687b      	ldr	r3, [r7, #4]
 8017792:	3304      	adds	r3, #4
 8017794:	4618      	mov	r0, r3
 8017796:	f000 ffde 	bl	8018756 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 801779a:	4603      	mov	r3, r0
 801779c:	781c      	ldrb	r4, [r3, #0]
 801779e:	68bb      	ldr	r3, [r7, #8]
 80177a0:	3304      	adds	r3, #4
 80177a2:	4618      	mov	r0, r3
 80177a4:	f000 ffd7 	bl	8018756 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 80177a8:	4603      	mov	r3, r0
 80177aa:	781a      	ldrb	r2, [r3, #0]
 80177ac:	4611      	mov	r1, r2
 80177ae:	4622      	mov	r2, r4
 80177b0:	440a      	add	r2, r1
 80177b2:	2a00      	cmp	r2, #0
 80177b4:	bf14      	ite	ne
 80177b6:	2201      	movne	r2, #1
 80177b8:	2200      	moveq	r2, #0
 80177ba:	b2d2      	uxtb	r2, r2
 80177bc:	701a      	strb	r2, [r3, #0]
		break;
 80177be:	e02d      	b.n	801781c <_ZN6SymbolplES_+0x110>
	case SYMBOL_STRING:
		std::get<std::string>(this->value) += std::get<std::string>(
				other.value);
 80177c0:	687b      	ldr	r3, [r7, #4]
 80177c2:	3304      	adds	r3, #4
 80177c4:	4618      	mov	r0, r3
 80177c6:	f000 ffd2 	bl	801876e <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 80177ca:	4604      	mov	r4, r0
		std::get<std::string>(this->value) += std::get<std::string>(
 80177cc:	68bb      	ldr	r3, [r7, #8]
 80177ce:	3304      	adds	r3, #4
 80177d0:	4618      	mov	r0, r3
 80177d2:	f000 ffcc 	bl	801876e <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 80177d6:	4603      	mov	r3, r0
				other.value);
 80177d8:	4621      	mov	r1, r4
 80177da:	4618      	mov	r0, r3
 80177dc:	f00b fcc8 	bl	8023170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
		break;
 80177e0:	e01c      	b.n	801781c <_ZN6SymbolplES_+0x110>
	default:
		Transmitter::report_error("invalid type for addidion");
 80177e2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80177e6:	4618      	mov	r0, r3
 80177e8:	f00b fa3f 	bl	8022c6a <_ZNSaIcEC1Ev>
 80177ec:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80177f0:	f107 0314 	add.w	r3, r7, #20
 80177f4:	490e      	ldr	r1, [pc, #56]	; (8017830 <_ZN6SymbolplES_+0x124>)
 80177f6:	4618      	mov	r0, r3
 80177f8:	f7e9 fdc7 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80177fc:	f107 0314 	add.w	r3, r7, #20
 8017800:	4618      	mov	r0, r3
 8017802:	f001 fb23 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017806:	f107 0314 	add.w	r3, r7, #20
 801780a:	4618      	mov	r0, r3
 801780c:	f00b fbf3 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017810:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017814:	4618      	mov	r0, r3
 8017816:	f00b fa29 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 801781a:	bf00      	nop
	}

	return *this;
 801781c:	68b9      	ldr	r1, [r7, #8]
 801781e:	68f8      	ldr	r0, [r7, #12]
 8017820:	f7ef fc78 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 8017824:	68f8      	ldr	r0, [r7, #12]
 8017826:	3734      	adds	r7, #52	; 0x34
 8017828:	46bd      	mov	sp, r7
 801782a:	ecbd 8b02 	vpop	{d8}
 801782e:	bd90      	pop	{r4, r7, pc}
 8017830:	08027948 	.word	0x08027948

08017834 <_ZN6SymbolmiES_>:

Symbol Symbol::operator-(Symbol other)
{
 8017834:	b590      	push	{r4, r7, lr}
 8017836:	ed2d 8b02 	vpush	{d8}
 801783a:	b08d      	sub	sp, #52	; 0x34
 801783c:	af00      	add	r7, sp, #0
 801783e:	60f8      	str	r0, [r7, #12]
 8017840:	60b9      	str	r1, [r7, #8]
 8017842:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017844:	6879      	ldr	r1, [r7, #4]
 8017846:	68b8      	ldr	r0, [r7, #8]
 8017848:	f000 fdfe 	bl	8018448 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 801784c:	68bb      	ldr	r3, [r7, #8]
 801784e:	781b      	ldrb	r3, [r3, #0]
 8017850:	2b00      	cmp	r3, #0
 8017852:	d002      	beq.n	801785a <_ZN6SymbolmiES_+0x26>
 8017854:	2b01      	cmp	r3, #1
 8017856:	d011      	beq.n	801787c <_ZN6SymbolmiES_+0x48>
 8017858:	e025      	b.n	80178a6 <_ZN6SymbolmiES_+0x72>
	{
	case SYMBOL_INT:
		std::get<int>(this->value) -= std::get<int>(other.value);
 801785a:	687b      	ldr	r3, [r7, #4]
 801785c:	3304      	adds	r3, #4
 801785e:	4618      	mov	r0, r3
 8017860:	f7ff feb9 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017864:	4603      	mov	r3, r0
 8017866:	681c      	ldr	r4, [r3, #0]
 8017868:	68bb      	ldr	r3, [r7, #8]
 801786a:	3304      	adds	r3, #4
 801786c:	4618      	mov	r0, r3
 801786e:	f7ff feb2 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017872:	4603      	mov	r3, r0
 8017874:	681a      	ldr	r2, [r3, #0]
 8017876:	1b12      	subs	r2, r2, r4
 8017878:	601a      	str	r2, [r3, #0]
		break;
 801787a:	e031      	b.n	80178e0 <_ZN6SymbolmiES_+0xac>
	case SYMBOL_FLOAT:
		std::get<float>(this->value) -= std::get<float>(other.value);
 801787c:	687b      	ldr	r3, [r7, #4]
 801787e:	3304      	adds	r3, #4
 8017880:	4618      	mov	r0, r3
 8017882:	f000 fd3f 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017886:	4603      	mov	r3, r0
 8017888:	ed93 8a00 	vldr	s16, [r3]
 801788c:	68bb      	ldr	r3, [r7, #8]
 801788e:	3304      	adds	r3, #4
 8017890:	4618      	mov	r0, r3
 8017892:	f000 fd37 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017896:	4603      	mov	r3, r0
 8017898:	edd3 7a00 	vldr	s15, [r3]
 801789c:	ee77 7ac8 	vsub.f32	s15, s15, s16
 80178a0:	edc3 7a00 	vstr	s15, [r3]
		break;
 80178a4:	e01c      	b.n	80178e0 <_ZN6SymbolmiES_+0xac>
	default:
		Transmitter::report_error("invalid type for substraction");
 80178a6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80178aa:	4618      	mov	r0, r3
 80178ac:	f00b f9dd 	bl	8022c6a <_ZNSaIcEC1Ev>
 80178b0:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80178b4:	f107 0314 	add.w	r3, r7, #20
 80178b8:	490e      	ldr	r1, [pc, #56]	; (80178f4 <_ZN6SymbolmiES_+0xc0>)
 80178ba:	4618      	mov	r0, r3
 80178bc:	f7e9 fd65 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80178c0:	f107 0314 	add.w	r3, r7, #20
 80178c4:	4618      	mov	r0, r3
 80178c6:	f001 fac1 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80178ca:	f107 0314 	add.w	r3, r7, #20
 80178ce:	4618      	mov	r0, r3
 80178d0:	f00b fb91 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80178d4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80178d8:	4618      	mov	r0, r3
 80178da:	f00b f9c7 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 80178de:	bf00      	nop
	}

	return *this;
 80178e0:	68b9      	ldr	r1, [r7, #8]
 80178e2:	68f8      	ldr	r0, [r7, #12]
 80178e4:	f7ef fc16 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 80178e8:	68f8      	ldr	r0, [r7, #12]
 80178ea:	3734      	adds	r7, #52	; 0x34
 80178ec:	46bd      	mov	sp, r7
 80178ee:	ecbd 8b02 	vpop	{d8}
 80178f2:	bd90      	pop	{r4, r7, pc}
 80178f4:	08027964 	.word	0x08027964

080178f8 <_ZN6SymbolaaES_>:

Symbol Symbol::operator&&(Symbol other)
{
 80178f8:	b590      	push	{r4, r7, lr}
 80178fa:	b08d      	sub	sp, #52	; 0x34
 80178fc:	af00      	add	r7, sp, #0
 80178fe:	60f8      	str	r0, [r7, #12]
 8017900:	60b9      	str	r1, [r7, #8]
 8017902:	607a      	str	r2, [r7, #4]
	if (type != SYMBOL_BOOL || other.type != SYMBOL_BOOL)
 8017904:	68bb      	ldr	r3, [r7, #8]
 8017906:	781b      	ldrb	r3, [r3, #0]
 8017908:	2b02      	cmp	r3, #2
 801790a:	d103      	bne.n	8017914 <_ZN6SymbolaaES_+0x1c>
 801790c:	687b      	ldr	r3, [r7, #4]
 801790e:	781b      	ldrb	r3, [r3, #0]
 8017910:	2b02      	cmp	r3, #2
 8017912:	d01b      	beq.n	801794c <_ZN6SymbolaaES_+0x54>
	{
		Transmitter::report_error("operator and needs boolean expressions");
 8017914:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017918:	4618      	mov	r0, r3
 801791a:	f00b f9a6 	bl	8022c6a <_ZNSaIcEC1Ev>
 801791e:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017922:	f107 0314 	add.w	r3, r7, #20
 8017926:	491c      	ldr	r1, [pc, #112]	; (8017998 <_ZN6SymbolaaES_+0xa0>)
 8017928:	4618      	mov	r0, r3
 801792a:	f7e9 fd2e 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801792e:	f107 0314 	add.w	r3, r7, #20
 8017932:	4618      	mov	r0, r3
 8017934:	f001 fa8a 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017938:	f107 0314 	add.w	r3, r7, #20
 801793c:	4618      	mov	r0, r3
 801793e:	f00b fb5a 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017942:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017946:	4618      	mov	r0, r3
 8017948:	f00b f990 	bl	8022c6c <_ZNSaIcED1Ev>
	}

	std::get<bool>(this->value) = std::get<bool>(this->value)
 801794c:	68bb      	ldr	r3, [r7, #8]
 801794e:	3304      	adds	r3, #4
 8017950:	4618      	mov	r0, r3
 8017952:	f000 ff00 	bl	8018756 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017956:	4603      	mov	r3, r0
 8017958:	781b      	ldrb	r3, [r3, #0]
			&& std::get<bool>(other.value);
 801795a:	2b00      	cmp	r3, #0
 801795c:	d00a      	beq.n	8017974 <_ZN6SymbolaaES_+0x7c>
 801795e:	687b      	ldr	r3, [r7, #4]
 8017960:	3304      	adds	r3, #4
 8017962:	4618      	mov	r0, r3
 8017964:	f000 fef7 	bl	8018756 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017968:	4603      	mov	r3, r0
 801796a:	781b      	ldrb	r3, [r3, #0]
 801796c:	2b00      	cmp	r3, #0
 801796e:	d001      	beq.n	8017974 <_ZN6SymbolaaES_+0x7c>
 8017970:	2401      	movs	r4, #1
 8017972:	e000      	b.n	8017976 <_ZN6SymbolaaES_+0x7e>
 8017974:	2400      	movs	r4, #0
	std::get<bool>(this->value) = std::get<bool>(this->value)
 8017976:	68bb      	ldr	r3, [r7, #8]
 8017978:	3304      	adds	r3, #4
 801797a:	4618      	mov	r0, r3
 801797c:	f000 feeb 	bl	8018756 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017980:	4603      	mov	r3, r0
 8017982:	4622      	mov	r2, r4
 8017984:	701a      	strb	r2, [r3, #0]

	return *this;
 8017986:	68b9      	ldr	r1, [r7, #8]
 8017988:	68f8      	ldr	r0, [r7, #12]
 801798a:	f7ef fbc3 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 801798e:	68f8      	ldr	r0, [r7, #12]
 8017990:	3734      	adds	r7, #52	; 0x34
 8017992:	46bd      	mov	sp, r7
 8017994:	bd90      	pop	{r4, r7, pc}
 8017996:	bf00      	nop
 8017998:	08027984 	.word	0x08027984

0801799c <_ZN6SymbolooES_>:

Symbol Symbol::operator||(Symbol other)
{
 801799c:	b590      	push	{r4, r7, lr}
 801799e:	b08d      	sub	sp, #52	; 0x34
 80179a0:	af00      	add	r7, sp, #0
 80179a2:	60f8      	str	r0, [r7, #12]
 80179a4:	60b9      	str	r1, [r7, #8]
 80179a6:	607a      	str	r2, [r7, #4]
	if (type != SYMBOL_BOOL || other.type != SYMBOL_BOOL)
 80179a8:	68bb      	ldr	r3, [r7, #8]
 80179aa:	781b      	ldrb	r3, [r3, #0]
 80179ac:	2b02      	cmp	r3, #2
 80179ae:	d103      	bne.n	80179b8 <_ZN6SymbolooES_+0x1c>
 80179b0:	687b      	ldr	r3, [r7, #4]
 80179b2:	781b      	ldrb	r3, [r3, #0]
 80179b4:	2b02      	cmp	r3, #2
 80179b6:	d01b      	beq.n	80179f0 <_ZN6SymbolooES_+0x54>
	{
		Transmitter::report_error("operator or needs boolean expressions");
 80179b8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80179bc:	4618      	mov	r0, r3
 80179be:	f00b f954 	bl	8022c6a <_ZNSaIcEC1Ev>
 80179c2:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80179c6:	f107 0314 	add.w	r3, r7, #20
 80179ca:	491c      	ldr	r1, [pc, #112]	; (8017a3c <_ZN6SymbolooES_+0xa0>)
 80179cc:	4618      	mov	r0, r3
 80179ce:	f7e9 fcdc 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80179d2:	f107 0314 	add.w	r3, r7, #20
 80179d6:	4618      	mov	r0, r3
 80179d8:	f001 fa38 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80179dc:	f107 0314 	add.w	r3, r7, #20
 80179e0:	4618      	mov	r0, r3
 80179e2:	f00b fb08 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80179e6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80179ea:	4618      	mov	r0, r3
 80179ec:	f00b f93e 	bl	8022c6c <_ZNSaIcED1Ev>
	}

	std::get<bool>(this->value) = std::get<bool>(this->value)
 80179f0:	68bb      	ldr	r3, [r7, #8]
 80179f2:	3304      	adds	r3, #4
 80179f4:	4618      	mov	r0, r3
 80179f6:	f000 feae 	bl	8018756 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 80179fa:	4603      	mov	r3, r0
 80179fc:	781b      	ldrb	r3, [r3, #0]
			|| std::get<bool>(other.value);
 80179fe:	2b00      	cmp	r3, #0
 8017a00:	d108      	bne.n	8017a14 <_ZN6SymbolooES_+0x78>
 8017a02:	687b      	ldr	r3, [r7, #4]
 8017a04:	3304      	adds	r3, #4
 8017a06:	4618      	mov	r0, r3
 8017a08:	f000 fea5 	bl	8018756 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017a0c:	4603      	mov	r3, r0
 8017a0e:	781b      	ldrb	r3, [r3, #0]
 8017a10:	2b00      	cmp	r3, #0
 8017a12:	d001      	beq.n	8017a18 <_ZN6SymbolooES_+0x7c>
 8017a14:	2401      	movs	r4, #1
 8017a16:	e000      	b.n	8017a1a <_ZN6SymbolooES_+0x7e>
 8017a18:	2400      	movs	r4, #0
	std::get<bool>(this->value) = std::get<bool>(this->value)
 8017a1a:	68bb      	ldr	r3, [r7, #8]
 8017a1c:	3304      	adds	r3, #4
 8017a1e:	4618      	mov	r0, r3
 8017a20:	f000 fe99 	bl	8018756 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017a24:	4603      	mov	r3, r0
 8017a26:	4622      	mov	r2, r4
 8017a28:	701a      	strb	r2, [r3, #0]

	return *this;
 8017a2a:	68b9      	ldr	r1, [r7, #8]
 8017a2c:	68f8      	ldr	r0, [r7, #12]
 8017a2e:	f7ef fb71 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 8017a32:	68f8      	ldr	r0, [r7, #12]
 8017a34:	3734      	adds	r7, #52	; 0x34
 8017a36:	46bd      	mov	sp, r7
 8017a38:	bd90      	pop	{r4, r7, pc}
 8017a3a:	bf00      	nop
 8017a3c:	080279ac 	.word	0x080279ac

08017a40 <_ZN6SymbolntEv>:

Symbol Symbol::operator!()
{
 8017a40:	b590      	push	{r4, r7, lr}
 8017a42:	b08b      	sub	sp, #44	; 0x2c
 8017a44:	af00      	add	r7, sp, #0
 8017a46:	6078      	str	r0, [r7, #4]
 8017a48:	6039      	str	r1, [r7, #0]
	if (type != SYMBOL_BOOL)
 8017a4a:	683b      	ldr	r3, [r7, #0]
 8017a4c:	781b      	ldrb	r3, [r3, #0]
 8017a4e:	2b02      	cmp	r3, #2
 8017a50:	d01b      	beq.n	8017a8a <_ZN6SymbolntEv+0x4a>
	{
		Transmitter::report_error("operator ! needs boolean expressions");
 8017a52:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017a56:	4618      	mov	r0, r3
 8017a58:	f00b f907 	bl	8022c6a <_ZNSaIcEC1Ev>
 8017a5c:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017a60:	f107 030c 	add.w	r3, r7, #12
 8017a64:	4916      	ldr	r1, [pc, #88]	; (8017ac0 <_ZN6SymbolntEv+0x80>)
 8017a66:	4618      	mov	r0, r3
 8017a68:	f7e9 fc8f 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017a6c:	f107 030c 	add.w	r3, r7, #12
 8017a70:	4618      	mov	r0, r3
 8017a72:	f001 f9eb 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017a76:	f107 030c 	add.w	r3, r7, #12
 8017a7a:	4618      	mov	r0, r3
 8017a7c:	f00b fabb 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017a80:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017a84:	4618      	mov	r0, r3
 8017a86:	f00b f8f1 	bl	8022c6c <_ZNSaIcED1Ev>
	}

	std::get<bool>(this->value) = !(std::get<bool>(this->value));
 8017a8a:	683b      	ldr	r3, [r7, #0]
 8017a8c:	3304      	adds	r3, #4
 8017a8e:	4618      	mov	r0, r3
 8017a90:	f000 fe61 	bl	8018756 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017a94:	4603      	mov	r3, r0
 8017a96:	781b      	ldrb	r3, [r3, #0]
 8017a98:	f083 0301 	eor.w	r3, r3, #1
 8017a9c:	b2dc      	uxtb	r4, r3
 8017a9e:	683b      	ldr	r3, [r7, #0]
 8017aa0:	3304      	adds	r3, #4
 8017aa2:	4618      	mov	r0, r3
 8017aa4:	f000 fe57 	bl	8018756 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017aa8:	4603      	mov	r3, r0
 8017aaa:	4622      	mov	r2, r4
 8017aac:	701a      	strb	r2, [r3, #0]

	return *this;
 8017aae:	6839      	ldr	r1, [r7, #0]
 8017ab0:	6878      	ldr	r0, [r7, #4]
 8017ab2:	f7ef fb2f 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 8017ab6:	6878      	ldr	r0, [r7, #4]
 8017ab8:	372c      	adds	r7, #44	; 0x2c
 8017aba:	46bd      	mov	sp, r7
 8017abc:	bd90      	pop	{r4, r7, pc}
 8017abe:	bf00      	nop
 8017ac0:	080279d4 	.word	0x080279d4

08017ac4 <_ZN6SymbolgtES_>:

Symbol Symbol::operator>(Symbol other)
{
 8017ac4:	b590      	push	{r4, r7, lr}
 8017ac6:	ed2d 8b02 	vpush	{d8}
 8017aca:	b08d      	sub	sp, #52	; 0x34
 8017acc:	af00      	add	r7, sp, #0
 8017ace:	60f8      	str	r0, [r7, #12]
 8017ad0:	60b9      	str	r1, [r7, #8]
 8017ad2:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017ad4:	6879      	ldr	r1, [r7, #4]
 8017ad6:	68b8      	ldr	r0, [r7, #8]
 8017ad8:	f000 fcb6 	bl	8018448 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017adc:	68bb      	ldr	r3, [r7, #8]
 8017ade:	781b      	ldrb	r3, [r3, #0]
 8017ae0:	2b00      	cmp	r3, #0
 8017ae2:	d002      	beq.n	8017aea <_ZN6SymbolgtES_+0x26>
 8017ae4:	2b01      	cmp	r3, #1
 8017ae6:	d01d      	beq.n	8017b24 <_ZN6SymbolgtES_+0x60>
 8017ae8:	e03e      	b.n	8017b68 <_ZN6SymbolgtES_+0xa4>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) > std::get<int>(other.value));
 8017aea:	68bb      	ldr	r3, [r7, #8]
 8017aec:	3304      	adds	r3, #4
 8017aee:	4618      	mov	r0, r3
 8017af0:	f7ff fd71 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017af4:	4603      	mov	r3, r0
 8017af6:	681c      	ldr	r4, [r3, #0]
 8017af8:	687b      	ldr	r3, [r7, #4]
 8017afa:	3304      	adds	r3, #4
 8017afc:	4618      	mov	r0, r3
 8017afe:	f7ff fd6a 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017b02:	4603      	mov	r3, r0
 8017b04:	681b      	ldr	r3, [r3, #0]
 8017b06:	429c      	cmp	r4, r3
 8017b08:	bfcc      	ite	gt
 8017b0a:	2301      	movgt	r3, #1
 8017b0c:	2300      	movle	r3, #0
 8017b0e:	b2db      	uxtb	r3, r3
 8017b10:	74bb      	strb	r3, [r7, #18]
 8017b12:	68bb      	ldr	r3, [r7, #8]
 8017b14:	3304      	adds	r3, #4
 8017b16:	f107 0212 	add.w	r2, r7, #18
 8017b1a:	4611      	mov	r1, r2
 8017b1c:	4618      	mov	r0, r3
 8017b1e:	f000 fe32 	bl	8018786 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 8017b22:	e03e      	b.n	8017ba2 <_ZN6SymbolgtES_+0xde>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) > std::get<float>(other.value));
 8017b24:	68bb      	ldr	r3, [r7, #8]
 8017b26:	3304      	adds	r3, #4
 8017b28:	4618      	mov	r0, r3
 8017b2a:	f000 fbeb 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017b2e:	4603      	mov	r3, r0
 8017b30:	ed93 8a00 	vldr	s16, [r3]
 8017b34:	687b      	ldr	r3, [r7, #4]
 8017b36:	3304      	adds	r3, #4
 8017b38:	4618      	mov	r0, r3
 8017b3a:	f000 fbe3 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017b3e:	4603      	mov	r3, r0
 8017b40:	edd3 7a00 	vldr	s15, [r3]
 8017b44:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8017b48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b4c:	bfcc      	ite	gt
 8017b4e:	2301      	movgt	r3, #1
 8017b50:	2300      	movle	r3, #0
 8017b52:	b2db      	uxtb	r3, r3
 8017b54:	74fb      	strb	r3, [r7, #19]
 8017b56:	68bb      	ldr	r3, [r7, #8]
 8017b58:	3304      	adds	r3, #4
 8017b5a:	f107 0213 	add.w	r2, r7, #19
 8017b5e:	4611      	mov	r1, r2
 8017b60:	4618      	mov	r0, r3
 8017b62:	f000 fe10 	bl	8018786 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 8017b66:	e01c      	b.n	8017ba2 <_ZN6SymbolgtES_+0xde>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017b68:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017b6c:	4618      	mov	r0, r3
 8017b6e:	f00b f87c 	bl	8022c6a <_ZNSaIcEC1Ev>
 8017b72:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017b76:	f107 0314 	add.w	r3, r7, #20
 8017b7a:	490f      	ldr	r1, [pc, #60]	; (8017bb8 <_ZN6SymbolgtES_+0xf4>)
 8017b7c:	4618      	mov	r0, r3
 8017b7e:	f7e9 fc04 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017b82:	f107 0314 	add.w	r3, r7, #20
 8017b86:	4618      	mov	r0, r3
 8017b88:	f001 f960 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017b8c:	f107 0314 	add.w	r3, r7, #20
 8017b90:	4618      	mov	r0, r3
 8017b92:	f00b fa30 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017b96:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017b9a:	4618      	mov	r0, r3
 8017b9c:	f00b f866 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 8017ba0:	bf00      	nop
	}

	return *this;
 8017ba2:	68b9      	ldr	r1, [r7, #8]
 8017ba4:	68f8      	ldr	r0, [r7, #12]
 8017ba6:	f7ef fab5 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 8017baa:	68f8      	ldr	r0, [r7, #12]
 8017bac:	3734      	adds	r7, #52	; 0x34
 8017bae:	46bd      	mov	sp, r7
 8017bb0:	ecbd 8b02 	vpop	{d8}
 8017bb4:	bd90      	pop	{r4, r7, pc}
 8017bb6:	bf00      	nop
 8017bb8:	080279fc 	.word	0x080279fc

08017bbc <_ZN6SymbolgeES_>:

Symbol Symbol::operator>=(Symbol other)
{
 8017bbc:	b590      	push	{r4, r7, lr}
 8017bbe:	ed2d 8b02 	vpush	{d8}
 8017bc2:	b08d      	sub	sp, #52	; 0x34
 8017bc4:	af00      	add	r7, sp, #0
 8017bc6:	60f8      	str	r0, [r7, #12]
 8017bc8:	60b9      	str	r1, [r7, #8]
 8017bca:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017bcc:	6879      	ldr	r1, [r7, #4]
 8017bce:	68b8      	ldr	r0, [r7, #8]
 8017bd0:	f000 fc3a 	bl	8018448 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017bd4:	68bb      	ldr	r3, [r7, #8]
 8017bd6:	781b      	ldrb	r3, [r3, #0]
 8017bd8:	2b00      	cmp	r3, #0
 8017bda:	d002      	beq.n	8017be2 <_ZN6SymbolgeES_+0x26>
 8017bdc:	2b01      	cmp	r3, #1
 8017bde:	d01d      	beq.n	8017c1c <_ZN6SymbolgeES_+0x60>
 8017be0:	e03e      	b.n	8017c60 <_ZN6SymbolgeES_+0xa4>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) >= std::get<int>(other.value));
 8017be2:	68bb      	ldr	r3, [r7, #8]
 8017be4:	3304      	adds	r3, #4
 8017be6:	4618      	mov	r0, r3
 8017be8:	f7ff fcf5 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017bec:	4603      	mov	r3, r0
 8017bee:	681c      	ldr	r4, [r3, #0]
 8017bf0:	687b      	ldr	r3, [r7, #4]
 8017bf2:	3304      	adds	r3, #4
 8017bf4:	4618      	mov	r0, r3
 8017bf6:	f7ff fcee 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017bfa:	4603      	mov	r3, r0
 8017bfc:	681b      	ldr	r3, [r3, #0]
 8017bfe:	429c      	cmp	r4, r3
 8017c00:	bfac      	ite	ge
 8017c02:	2301      	movge	r3, #1
 8017c04:	2300      	movlt	r3, #0
 8017c06:	b2db      	uxtb	r3, r3
 8017c08:	74bb      	strb	r3, [r7, #18]
 8017c0a:	68bb      	ldr	r3, [r7, #8]
 8017c0c:	3304      	adds	r3, #4
 8017c0e:	f107 0212 	add.w	r2, r7, #18
 8017c12:	4611      	mov	r1, r2
 8017c14:	4618      	mov	r0, r3
 8017c16:	f000 fdb6 	bl	8018786 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 8017c1a:	e03e      	b.n	8017c9a <_ZN6SymbolgeES_+0xde>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) >= std::get<float>(other.value));
 8017c1c:	68bb      	ldr	r3, [r7, #8]
 8017c1e:	3304      	adds	r3, #4
 8017c20:	4618      	mov	r0, r3
 8017c22:	f000 fb6f 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017c26:	4603      	mov	r3, r0
 8017c28:	ed93 8a00 	vldr	s16, [r3]
 8017c2c:	687b      	ldr	r3, [r7, #4]
 8017c2e:	3304      	adds	r3, #4
 8017c30:	4618      	mov	r0, r3
 8017c32:	f000 fb67 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017c36:	4603      	mov	r3, r0
 8017c38:	edd3 7a00 	vldr	s15, [r3]
 8017c3c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8017c40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017c44:	bfac      	ite	ge
 8017c46:	2301      	movge	r3, #1
 8017c48:	2300      	movlt	r3, #0
 8017c4a:	b2db      	uxtb	r3, r3
 8017c4c:	74fb      	strb	r3, [r7, #19]
 8017c4e:	68bb      	ldr	r3, [r7, #8]
 8017c50:	3304      	adds	r3, #4
 8017c52:	f107 0213 	add.w	r2, r7, #19
 8017c56:	4611      	mov	r1, r2
 8017c58:	4618      	mov	r0, r3
 8017c5a:	f000 fd94 	bl	8018786 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 8017c5e:	e01c      	b.n	8017c9a <_ZN6SymbolgeES_+0xde>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017c60:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017c64:	4618      	mov	r0, r3
 8017c66:	f00b f800 	bl	8022c6a <_ZNSaIcEC1Ev>
 8017c6a:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017c6e:	f107 0314 	add.w	r3, r7, #20
 8017c72:	490f      	ldr	r1, [pc, #60]	; (8017cb0 <_ZN6SymbolgeES_+0xf4>)
 8017c74:	4618      	mov	r0, r3
 8017c76:	f7e9 fb88 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017c7a:	f107 0314 	add.w	r3, r7, #20
 8017c7e:	4618      	mov	r0, r3
 8017c80:	f001 f8e4 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017c84:	f107 0314 	add.w	r3, r7, #20
 8017c88:	4618      	mov	r0, r3
 8017c8a:	f00b f9b4 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017c8e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017c92:	4618      	mov	r0, r3
 8017c94:	f00a ffea 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 8017c98:	bf00      	nop
	}

	return *this;
 8017c9a:	68b9      	ldr	r1, [r7, #8]
 8017c9c:	68f8      	ldr	r0, [r7, #12]
 8017c9e:	f7ef fa39 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 8017ca2:	68f8      	ldr	r0, [r7, #12]
 8017ca4:	3734      	adds	r7, #52	; 0x34
 8017ca6:	46bd      	mov	sp, r7
 8017ca8:	ecbd 8b02 	vpop	{d8}
 8017cac:	bd90      	pop	{r4, r7, pc}
 8017cae:	bf00      	nop
 8017cb0:	080279fc 	.word	0x080279fc

08017cb4 <_ZN6SymbolltES_>:

Symbol Symbol::operator<(Symbol other)
{
 8017cb4:	b590      	push	{r4, r7, lr}
 8017cb6:	ed2d 8b02 	vpush	{d8}
 8017cba:	b08d      	sub	sp, #52	; 0x34
 8017cbc:	af00      	add	r7, sp, #0
 8017cbe:	60f8      	str	r0, [r7, #12]
 8017cc0:	60b9      	str	r1, [r7, #8]
 8017cc2:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017cc4:	6879      	ldr	r1, [r7, #4]
 8017cc6:	68b8      	ldr	r0, [r7, #8]
 8017cc8:	f000 fbbe 	bl	8018448 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017ccc:	68bb      	ldr	r3, [r7, #8]
 8017cce:	781b      	ldrb	r3, [r3, #0]
 8017cd0:	2b00      	cmp	r3, #0
 8017cd2:	d002      	beq.n	8017cda <_ZN6SymbolltES_+0x26>
 8017cd4:	2b01      	cmp	r3, #1
 8017cd6:	d01d      	beq.n	8017d14 <_ZN6SymbolltES_+0x60>
 8017cd8:	e03e      	b.n	8017d58 <_ZN6SymbolltES_+0xa4>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) < std::get<int>(other.value));
 8017cda:	68bb      	ldr	r3, [r7, #8]
 8017cdc:	3304      	adds	r3, #4
 8017cde:	4618      	mov	r0, r3
 8017ce0:	f7ff fc79 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017ce4:	4603      	mov	r3, r0
 8017ce6:	681c      	ldr	r4, [r3, #0]
 8017ce8:	687b      	ldr	r3, [r7, #4]
 8017cea:	3304      	adds	r3, #4
 8017cec:	4618      	mov	r0, r3
 8017cee:	f7ff fc72 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017cf2:	4603      	mov	r3, r0
 8017cf4:	681b      	ldr	r3, [r3, #0]
 8017cf6:	429c      	cmp	r4, r3
 8017cf8:	bfb4      	ite	lt
 8017cfa:	2301      	movlt	r3, #1
 8017cfc:	2300      	movge	r3, #0
 8017cfe:	b2db      	uxtb	r3, r3
 8017d00:	74bb      	strb	r3, [r7, #18]
 8017d02:	68bb      	ldr	r3, [r7, #8]
 8017d04:	3304      	adds	r3, #4
 8017d06:	f107 0212 	add.w	r2, r7, #18
 8017d0a:	4611      	mov	r1, r2
 8017d0c:	4618      	mov	r0, r3
 8017d0e:	f000 fd3a 	bl	8018786 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 8017d12:	e03e      	b.n	8017d92 <_ZN6SymbolltES_+0xde>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) < std::get<float>(other.value));
 8017d14:	68bb      	ldr	r3, [r7, #8]
 8017d16:	3304      	adds	r3, #4
 8017d18:	4618      	mov	r0, r3
 8017d1a:	f000 faf3 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017d1e:	4603      	mov	r3, r0
 8017d20:	ed93 8a00 	vldr	s16, [r3]
 8017d24:	687b      	ldr	r3, [r7, #4]
 8017d26:	3304      	adds	r3, #4
 8017d28:	4618      	mov	r0, r3
 8017d2a:	f000 faeb 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017d2e:	4603      	mov	r3, r0
 8017d30:	edd3 7a00 	vldr	s15, [r3]
 8017d34:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8017d38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d3c:	bf4c      	ite	mi
 8017d3e:	2301      	movmi	r3, #1
 8017d40:	2300      	movpl	r3, #0
 8017d42:	b2db      	uxtb	r3, r3
 8017d44:	74fb      	strb	r3, [r7, #19]
 8017d46:	68bb      	ldr	r3, [r7, #8]
 8017d48:	3304      	adds	r3, #4
 8017d4a:	f107 0213 	add.w	r2, r7, #19
 8017d4e:	4611      	mov	r1, r2
 8017d50:	4618      	mov	r0, r3
 8017d52:	f000 fd18 	bl	8018786 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 8017d56:	e01c      	b.n	8017d92 <_ZN6SymbolltES_+0xde>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017d58:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017d5c:	4618      	mov	r0, r3
 8017d5e:	f00a ff84 	bl	8022c6a <_ZNSaIcEC1Ev>
 8017d62:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017d66:	f107 0314 	add.w	r3, r7, #20
 8017d6a:	490f      	ldr	r1, [pc, #60]	; (8017da8 <_ZN6SymbolltES_+0xf4>)
 8017d6c:	4618      	mov	r0, r3
 8017d6e:	f7e9 fb0c 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017d72:	f107 0314 	add.w	r3, r7, #20
 8017d76:	4618      	mov	r0, r3
 8017d78:	f001 f868 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017d7c:	f107 0314 	add.w	r3, r7, #20
 8017d80:	4618      	mov	r0, r3
 8017d82:	f00b f938 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017d86:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017d8a:	4618      	mov	r0, r3
 8017d8c:	f00a ff6e 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 8017d90:	bf00      	nop
	}

	return *this;
 8017d92:	68b9      	ldr	r1, [r7, #8]
 8017d94:	68f8      	ldr	r0, [r7, #12]
 8017d96:	f7ef f9bd 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 8017d9a:	68f8      	ldr	r0, [r7, #12]
 8017d9c:	3734      	adds	r7, #52	; 0x34
 8017d9e:	46bd      	mov	sp, r7
 8017da0:	ecbd 8b02 	vpop	{d8}
 8017da4:	bd90      	pop	{r4, r7, pc}
 8017da6:	bf00      	nop
 8017da8:	080279fc 	.word	0x080279fc

08017dac <_ZN6SymbolleES_>:

Symbol Symbol::operator<=(Symbol other)
{
 8017dac:	b590      	push	{r4, r7, lr}
 8017dae:	ed2d 8b02 	vpush	{d8}
 8017db2:	b08d      	sub	sp, #52	; 0x34
 8017db4:	af00      	add	r7, sp, #0
 8017db6:	60f8      	str	r0, [r7, #12]
 8017db8:	60b9      	str	r1, [r7, #8]
 8017dba:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017dbc:	6879      	ldr	r1, [r7, #4]
 8017dbe:	68b8      	ldr	r0, [r7, #8]
 8017dc0:	f000 fb42 	bl	8018448 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017dc4:	68bb      	ldr	r3, [r7, #8]
 8017dc6:	781b      	ldrb	r3, [r3, #0]
 8017dc8:	2b00      	cmp	r3, #0
 8017dca:	d002      	beq.n	8017dd2 <_ZN6SymbolleES_+0x26>
 8017dcc:	2b01      	cmp	r3, #1
 8017dce:	d01d      	beq.n	8017e0c <_ZN6SymbolleES_+0x60>
 8017dd0:	e03e      	b.n	8017e50 <_ZN6SymbolleES_+0xa4>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) <= std::get<int>(other.value));
 8017dd2:	68bb      	ldr	r3, [r7, #8]
 8017dd4:	3304      	adds	r3, #4
 8017dd6:	4618      	mov	r0, r3
 8017dd8:	f7ff fbfd 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017ddc:	4603      	mov	r3, r0
 8017dde:	681c      	ldr	r4, [r3, #0]
 8017de0:	687b      	ldr	r3, [r7, #4]
 8017de2:	3304      	adds	r3, #4
 8017de4:	4618      	mov	r0, r3
 8017de6:	f7ff fbf6 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017dea:	4603      	mov	r3, r0
 8017dec:	681b      	ldr	r3, [r3, #0]
 8017dee:	429c      	cmp	r4, r3
 8017df0:	bfd4      	ite	le
 8017df2:	2301      	movle	r3, #1
 8017df4:	2300      	movgt	r3, #0
 8017df6:	b2db      	uxtb	r3, r3
 8017df8:	74bb      	strb	r3, [r7, #18]
 8017dfa:	68bb      	ldr	r3, [r7, #8]
 8017dfc:	3304      	adds	r3, #4
 8017dfe:	f107 0212 	add.w	r2, r7, #18
 8017e02:	4611      	mov	r1, r2
 8017e04:	4618      	mov	r0, r3
 8017e06:	f000 fcbe 	bl	8018786 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 8017e0a:	e03e      	b.n	8017e8a <_ZN6SymbolleES_+0xde>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) <= std::get<float>(other.value));
 8017e0c:	68bb      	ldr	r3, [r7, #8]
 8017e0e:	3304      	adds	r3, #4
 8017e10:	4618      	mov	r0, r3
 8017e12:	f000 fa77 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017e16:	4603      	mov	r3, r0
 8017e18:	ed93 8a00 	vldr	s16, [r3]
 8017e1c:	687b      	ldr	r3, [r7, #4]
 8017e1e:	3304      	adds	r3, #4
 8017e20:	4618      	mov	r0, r3
 8017e22:	f000 fa6f 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017e26:	4603      	mov	r3, r0
 8017e28:	edd3 7a00 	vldr	s15, [r3]
 8017e2c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8017e30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017e34:	bf94      	ite	ls
 8017e36:	2301      	movls	r3, #1
 8017e38:	2300      	movhi	r3, #0
 8017e3a:	b2db      	uxtb	r3, r3
 8017e3c:	74fb      	strb	r3, [r7, #19]
 8017e3e:	68bb      	ldr	r3, [r7, #8]
 8017e40:	3304      	adds	r3, #4
 8017e42:	f107 0213 	add.w	r2, r7, #19
 8017e46:	4611      	mov	r1, r2
 8017e48:	4618      	mov	r0, r3
 8017e4a:	f000 fc9c 	bl	8018786 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 8017e4e:	e01c      	b.n	8017e8a <_ZN6SymbolleES_+0xde>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017e50:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017e54:	4618      	mov	r0, r3
 8017e56:	f00a ff08 	bl	8022c6a <_ZNSaIcEC1Ev>
 8017e5a:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017e5e:	f107 0314 	add.w	r3, r7, #20
 8017e62:	490f      	ldr	r1, [pc, #60]	; (8017ea0 <_ZN6SymbolleES_+0xf4>)
 8017e64:	4618      	mov	r0, r3
 8017e66:	f7e9 fa90 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017e6a:	f107 0314 	add.w	r3, r7, #20
 8017e6e:	4618      	mov	r0, r3
 8017e70:	f000 ffec 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017e74:	f107 0314 	add.w	r3, r7, #20
 8017e78:	4618      	mov	r0, r3
 8017e7a:	f00b f8bc 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017e7e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017e82:	4618      	mov	r0, r3
 8017e84:	f00a fef2 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 8017e88:	bf00      	nop
	}

	return *this;
 8017e8a:	68b9      	ldr	r1, [r7, #8]
 8017e8c:	68f8      	ldr	r0, [r7, #12]
 8017e8e:	f7ef f941 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 8017e92:	68f8      	ldr	r0, [r7, #12]
 8017e94:	3734      	adds	r7, #52	; 0x34
 8017e96:	46bd      	mov	sp, r7
 8017e98:	ecbd 8b02 	vpop	{d8}
 8017e9c:	bd90      	pop	{r4, r7, pc}
 8017e9e:	bf00      	nop
 8017ea0:	080279fc 	.word	0x080279fc

08017ea4 <_ZN6SymboleqES_>:

Symbol Symbol::operator==(Symbol other)
{
 8017ea4:	b590      	push	{r4, r7, lr}
 8017ea6:	ed2d 8b02 	vpush	{d8}
 8017eaa:	b08d      	sub	sp, #52	; 0x34
 8017eac:	af00      	add	r7, sp, #0
 8017eae:	60f8      	str	r0, [r7, #12]
 8017eb0:	60b9      	str	r1, [r7, #8]
 8017eb2:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017eb4:	6879      	ldr	r1, [r7, #4]
 8017eb6:	68b8      	ldr	r0, [r7, #8]
 8017eb8:	f000 fac6 	bl	8018448 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017ebc:	68bb      	ldr	r3, [r7, #8]
 8017ebe:	781b      	ldrb	r3, [r3, #0]
 8017ec0:	2b02      	cmp	r3, #2
 8017ec2:	d045      	beq.n	8017f50 <_ZN6SymboleqES_+0xac>
 8017ec4:	2b02      	cmp	r3, #2
 8017ec6:	dc60      	bgt.n	8017f8a <_ZN6SymboleqES_+0xe6>
 8017ec8:	2b00      	cmp	r3, #0
 8017eca:	d002      	beq.n	8017ed2 <_ZN6SymboleqES_+0x2e>
 8017ecc:	2b01      	cmp	r3, #1
 8017ece:	d01d      	beq.n	8017f0c <_ZN6SymboleqES_+0x68>
 8017ed0:	e05b      	b.n	8017f8a <_ZN6SymboleqES_+0xe6>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) == std::get<int>(other.value));
 8017ed2:	68bb      	ldr	r3, [r7, #8]
 8017ed4:	3304      	adds	r3, #4
 8017ed6:	4618      	mov	r0, r3
 8017ed8:	f7ff fb7d 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017edc:	4603      	mov	r3, r0
 8017ede:	681c      	ldr	r4, [r3, #0]
 8017ee0:	687b      	ldr	r3, [r7, #4]
 8017ee2:	3304      	adds	r3, #4
 8017ee4:	4618      	mov	r0, r3
 8017ee6:	f7ff fb76 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017eea:	4603      	mov	r3, r0
 8017eec:	681b      	ldr	r3, [r3, #0]
 8017eee:	429c      	cmp	r4, r3
 8017ef0:	bf0c      	ite	eq
 8017ef2:	2301      	moveq	r3, #1
 8017ef4:	2300      	movne	r3, #0
 8017ef6:	b2db      	uxtb	r3, r3
 8017ef8:	747b      	strb	r3, [r7, #17]
 8017efa:	68bb      	ldr	r3, [r7, #8]
 8017efc:	3304      	adds	r3, #4
 8017efe:	f107 0211 	add.w	r2, r7, #17
 8017f02:	4611      	mov	r1, r2
 8017f04:	4618      	mov	r0, r3
 8017f06:	f000 fc3e 	bl	8018786 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 8017f0a:	e05b      	b.n	8017fc4 <_ZN6SymboleqES_+0x120>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) == std::get<float>(other.value));
 8017f0c:	68bb      	ldr	r3, [r7, #8]
 8017f0e:	3304      	adds	r3, #4
 8017f10:	4618      	mov	r0, r3
 8017f12:	f000 f9f7 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017f16:	4603      	mov	r3, r0
 8017f18:	ed93 8a00 	vldr	s16, [r3]
 8017f1c:	687b      	ldr	r3, [r7, #4]
 8017f1e:	3304      	adds	r3, #4
 8017f20:	4618      	mov	r0, r3
 8017f22:	f000 f9ef 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017f26:	4603      	mov	r3, r0
 8017f28:	edd3 7a00 	vldr	s15, [r3]
 8017f2c:	eeb4 8a67 	vcmp.f32	s16, s15
 8017f30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017f34:	bf0c      	ite	eq
 8017f36:	2301      	moveq	r3, #1
 8017f38:	2300      	movne	r3, #0
 8017f3a:	b2db      	uxtb	r3, r3
 8017f3c:	74bb      	strb	r3, [r7, #18]
 8017f3e:	68bb      	ldr	r3, [r7, #8]
 8017f40:	3304      	adds	r3, #4
 8017f42:	f107 0212 	add.w	r2, r7, #18
 8017f46:	4611      	mov	r1, r2
 8017f48:	4618      	mov	r0, r3
 8017f4a:	f000 fc1c 	bl	8018786 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 8017f4e:	e039      	b.n	8017fc4 <_ZN6SymboleqES_+0x120>
	case SYMBOL_BOOL:
		this->value = (std::get<bool>(this->value) == std::get<bool>(other.value));
 8017f50:	68bb      	ldr	r3, [r7, #8]
 8017f52:	3304      	adds	r3, #4
 8017f54:	4618      	mov	r0, r3
 8017f56:	f000 fbfe 	bl	8018756 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017f5a:	4603      	mov	r3, r0
 8017f5c:	781c      	ldrb	r4, [r3, #0]
 8017f5e:	687b      	ldr	r3, [r7, #4]
 8017f60:	3304      	adds	r3, #4
 8017f62:	4618      	mov	r0, r3
 8017f64:	f000 fbf7 	bl	8018756 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8017f68:	4603      	mov	r3, r0
 8017f6a:	781b      	ldrb	r3, [r3, #0]
 8017f6c:	429c      	cmp	r4, r3
 8017f6e:	bf0c      	ite	eq
 8017f70:	2301      	moveq	r3, #1
 8017f72:	2300      	movne	r3, #0
 8017f74:	b2db      	uxtb	r3, r3
 8017f76:	74fb      	strb	r3, [r7, #19]
 8017f78:	68bb      	ldr	r3, [r7, #8]
 8017f7a:	3304      	adds	r3, #4
 8017f7c:	f107 0213 	add.w	r2, r7, #19
 8017f80:	4611      	mov	r1, r2
 8017f82:	4618      	mov	r0, r3
 8017f84:	f000 fbff 	bl	8018786 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 8017f88:	e01c      	b.n	8017fc4 <_ZN6SymboleqES_+0x120>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017f8a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017f8e:	4618      	mov	r0, r3
 8017f90:	f00a fe6b 	bl	8022c6a <_ZNSaIcEC1Ev>
 8017f94:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017f98:	f107 0314 	add.w	r3, r7, #20
 8017f9c:	490e      	ldr	r1, [pc, #56]	; (8017fd8 <_ZN6SymboleqES_+0x134>)
 8017f9e:	4618      	mov	r0, r3
 8017fa0:	f7e9 f9f3 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017fa4:	f107 0314 	add.w	r3, r7, #20
 8017fa8:	4618      	mov	r0, r3
 8017faa:	f000 ff4f 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017fae:	f107 0314 	add.w	r3, r7, #20
 8017fb2:	4618      	mov	r0, r3
 8017fb4:	f00b f81f 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017fb8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017fbc:	4618      	mov	r0, r3
 8017fbe:	f00a fe55 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 8017fc2:	bf00      	nop
	}

	return *this;
 8017fc4:	68b9      	ldr	r1, [r7, #8]
 8017fc6:	68f8      	ldr	r0, [r7, #12]
 8017fc8:	f7ef f8a4 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 8017fcc:	68f8      	ldr	r0, [r7, #12]
 8017fce:	3734      	adds	r7, #52	; 0x34
 8017fd0:	46bd      	mov	sp, r7
 8017fd2:	ecbd 8b02 	vpop	{d8}
 8017fd6:	bd90      	pop	{r4, r7, pc}
 8017fd8:	080279fc 	.word	0x080279fc

08017fdc <_ZN6SymbolngEv>:

	return *this;
}

Symbol Symbol::operator-()
{
 8017fdc:	b590      	push	{r4, r7, lr}
 8017fde:	ed2d 8b02 	vpush	{d8}
 8017fe2:	b08b      	sub	sp, #44	; 0x2c
 8017fe4:	af00      	add	r7, sp, #0
 8017fe6:	6078      	str	r0, [r7, #4]
 8017fe8:	6039      	str	r1, [r7, #0]
	switch (type)
 8017fea:	683b      	ldr	r3, [r7, #0]
 8017fec:	781b      	ldrb	r3, [r3, #0]
 8017fee:	2b00      	cmp	r3, #0
 8017ff0:	d002      	beq.n	8017ff8 <_ZN6SymbolngEv+0x1c>
 8017ff2:	2b01      	cmp	r3, #1
 8017ff4:	d010      	beq.n	8018018 <_ZN6SymbolngEv+0x3c>
 8017ff6:	e022      	b.n	801803e <_ZN6SymbolngEv+0x62>
	{
	case SYMBOL_INT:
		std::get<int>(this->value) = (-std::get<int>(this->value));
 8017ff8:	683b      	ldr	r3, [r7, #0]
 8017ffa:	3304      	adds	r3, #4
 8017ffc:	4618      	mov	r0, r3
 8017ffe:	f7ff faea 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8018002:	4603      	mov	r3, r0
 8018004:	681b      	ldr	r3, [r3, #0]
 8018006:	425c      	negs	r4, r3
 8018008:	683b      	ldr	r3, [r7, #0]
 801800a:	3304      	adds	r3, #4
 801800c:	4618      	mov	r0, r3
 801800e:	f7ff fae2 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8018012:	4603      	mov	r3, r0
 8018014:	601c      	str	r4, [r3, #0]
		break;
 8018016:	e02f      	b.n	8018078 <_ZN6SymbolngEv+0x9c>
	case SYMBOL_FLOAT:
		std::get<float>(this->value) = (-std::get<float>(this->value));
 8018018:	683b      	ldr	r3, [r7, #0]
 801801a:	3304      	adds	r3, #4
 801801c:	4618      	mov	r0, r3
 801801e:	f000 f971 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8018022:	4603      	mov	r3, r0
 8018024:	edd3 7a00 	vldr	s15, [r3]
 8018028:	eeb1 8a67 	vneg.f32	s16, s15
 801802c:	683b      	ldr	r3, [r7, #0]
 801802e:	3304      	adds	r3, #4
 8018030:	4618      	mov	r0, r3
 8018032:	f000 f967 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8018036:	4603      	mov	r3, r0
 8018038:	ed83 8a00 	vstr	s16, [r3]
		break;
 801803c:	e01c      	b.n	8018078 <_ZN6SymbolngEv+0x9c>
	default:
		Transmitter::report_error("invalid type for minus unary operator");
 801803e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8018042:	4618      	mov	r0, r3
 8018044:	f00a fe11 	bl	8022c6a <_ZNSaIcEC1Ev>
 8018048:	f107 0224 	add.w	r2, r7, #36	; 0x24
 801804c:	f107 030c 	add.w	r3, r7, #12
 8018050:	490e      	ldr	r1, [pc, #56]	; (801808c <_ZN6SymbolngEv+0xb0>)
 8018052:	4618      	mov	r0, r3
 8018054:	f7e9 f999 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8018058:	f107 030c 	add.w	r3, r7, #12
 801805c:	4618      	mov	r0, r3
 801805e:	f000 fef5 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8018062:	f107 030c 	add.w	r3, r7, #12
 8018066:	4618      	mov	r0, r3
 8018068:	f00a ffc5 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801806c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8018070:	4618      	mov	r0, r3
 8018072:	f00a fdfb 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 8018076:	bf00      	nop
	}

	return *this;
 8018078:	6839      	ldr	r1, [r7, #0]
 801807a:	6878      	ldr	r0, [r7, #4]
 801807c:	f7ef f84a 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 8018080:	6878      	ldr	r0, [r7, #4]
 8018082:	372c      	adds	r7, #44	; 0x2c
 8018084:	46bd      	mov	sp, r7
 8018086:	ecbd 8b02 	vpop	{d8}
 801808a:	bd90      	pop	{r4, r7, pc}
 801808c:	08027a18 	.word	0x08027a18

08018090 <_ZN6SymbolmlES_>:

Symbol Symbol::operator*(Symbol other)
{
 8018090:	b590      	push	{r4, r7, lr}
 8018092:	ed2d 8b02 	vpush	{d8}
 8018096:	b08f      	sub	sp, #60	; 0x3c
 8018098:	af00      	add	r7, sp, #0
 801809a:	60f8      	str	r0, [r7, #12]
 801809c:	60b9      	str	r1, [r7, #8]
 801809e:	607a      	str	r2, [r7, #4]
	assert_types(other);
 80180a0:	6879      	ldr	r1, [r7, #4]
 80180a2:	68b8      	ldr	r0, [r7, #8]
 80180a4:	f000 f9d0 	bl	8018448 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 80180a8:	68bb      	ldr	r3, [r7, #8]
 80180aa:	781b      	ldrb	r3, [r3, #0]
 80180ac:	2b00      	cmp	r3, #0
 80180ae:	d002      	beq.n	80180b6 <_ZN6SymbolmlES_+0x26>
 80180b0:	2b01      	cmp	r3, #1
 80180b2:	d01a      	beq.n	80180ea <_ZN6SymbolmlES_+0x5a>
 80180b4:	e036      	b.n	8018124 <_ZN6SymbolmlES_+0x94>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) * std::get<int>(other.value));
 80180b6:	68bb      	ldr	r3, [r7, #8]
 80180b8:	3304      	adds	r3, #4
 80180ba:	4618      	mov	r0, r3
 80180bc:	f7ff fa8b 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 80180c0:	4603      	mov	r3, r0
 80180c2:	681c      	ldr	r4, [r3, #0]
 80180c4:	687b      	ldr	r3, [r7, #4]
 80180c6:	3304      	adds	r3, #4
 80180c8:	4618      	mov	r0, r3
 80180ca:	f7ff fa84 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 80180ce:	4603      	mov	r3, r0
 80180d0:	681b      	ldr	r3, [r3, #0]
 80180d2:	fb03 f304 	mul.w	r3, r3, r4
 80180d6:	617b      	str	r3, [r7, #20]
 80180d8:	68bb      	ldr	r3, [r7, #8]
 80180da:	3304      	adds	r3, #4
 80180dc:	f107 0214 	add.w	r2, r7, #20
 80180e0:	4611      	mov	r1, r2
 80180e2:	4618      	mov	r0, r3
 80180e4:	f000 fb7a 	bl	80187dc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 80180e8:	e039      	b.n	801815e <_ZN6SymbolmlES_+0xce>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) * std::get<float>(other.value));
 80180ea:	68bb      	ldr	r3, [r7, #8]
 80180ec:	3304      	adds	r3, #4
 80180ee:	4618      	mov	r0, r3
 80180f0:	f000 f908 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 80180f4:	4603      	mov	r3, r0
 80180f6:	ed93 8a00 	vldr	s16, [r3]
 80180fa:	687b      	ldr	r3, [r7, #4]
 80180fc:	3304      	adds	r3, #4
 80180fe:	4618      	mov	r0, r3
 8018100:	f000 f900 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8018104:	4603      	mov	r3, r0
 8018106:	edd3 7a00 	vldr	s15, [r3]
 801810a:	ee68 7a27 	vmul.f32	s15, s16, s15
 801810e:	edc7 7a06 	vstr	s15, [r7, #24]
 8018112:	68bb      	ldr	r3, [r7, #8]
 8018114:	3304      	adds	r3, #4
 8018116:	f107 0218 	add.w	r2, r7, #24
 801811a:	4611      	mov	r1, r2
 801811c:	4618      	mov	r0, r3
 801811e:	f000 fb87 	bl	8018830 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 8018122:	e01c      	b.n	801815e <_ZN6SymbolmlES_+0xce>
	default:
		Transmitter::report_error("invalid type for multiplication");
 8018124:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8018128:	4618      	mov	r0, r3
 801812a:	f00a fd9e 	bl	8022c6a <_ZNSaIcEC1Ev>
 801812e:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8018132:	f107 031c 	add.w	r3, r7, #28
 8018136:	490f      	ldr	r1, [pc, #60]	; (8018174 <_ZN6SymbolmlES_+0xe4>)
 8018138:	4618      	mov	r0, r3
 801813a:	f7e9 f926 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801813e:	f107 031c 	add.w	r3, r7, #28
 8018142:	4618      	mov	r0, r3
 8018144:	f000 fe82 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8018148:	f107 031c 	add.w	r3, r7, #28
 801814c:	4618      	mov	r0, r3
 801814e:	f00a ff52 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018152:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8018156:	4618      	mov	r0, r3
 8018158:	f00a fd88 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 801815c:	bf00      	nop
	}

	return *this;
 801815e:	68b9      	ldr	r1, [r7, #8]
 8018160:	68f8      	ldr	r0, [r7, #12]
 8018162:	f7ee ffd7 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 8018166:	68f8      	ldr	r0, [r7, #12]
 8018168:	373c      	adds	r7, #60	; 0x3c
 801816a:	46bd      	mov	sp, r7
 801816c:	ecbd 8b02 	vpop	{d8}
 8018170:	bd90      	pop	{r4, r7, pc}
 8018172:	bf00      	nop
 8018174:	08027a40 	.word	0x08027a40

08018178 <_ZN6SymboldvES_>:

Symbol Symbol::operator/(Symbol other)
{
 8018178:	b590      	push	{r4, r7, lr}
 801817a:	ed2d 8b02 	vpush	{d8}
 801817e:	b08f      	sub	sp, #60	; 0x3c
 8018180:	af00      	add	r7, sp, #0
 8018182:	60f8      	str	r0, [r7, #12]
 8018184:	60b9      	str	r1, [r7, #8]
 8018186:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8018188:	6879      	ldr	r1, [r7, #4]
 801818a:	68b8      	ldr	r0, [r7, #8]
 801818c:	f000 f95c 	bl	8018448 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8018190:	68bb      	ldr	r3, [r7, #8]
 8018192:	781b      	ldrb	r3, [r3, #0]
 8018194:	2b00      	cmp	r3, #0
 8018196:	d002      	beq.n	801819e <_ZN6SymboldvES_+0x26>
 8018198:	2b01      	cmp	r3, #1
 801819a:	d01a      	beq.n	80181d2 <_ZN6SymboldvES_+0x5a>
 801819c:	e036      	b.n	801820c <_ZN6SymboldvES_+0x94>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) / std::get<int>(other.value));
 801819e:	68bb      	ldr	r3, [r7, #8]
 80181a0:	3304      	adds	r3, #4
 80181a2:	4618      	mov	r0, r3
 80181a4:	f7ff fa17 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 80181a8:	4603      	mov	r3, r0
 80181aa:	681c      	ldr	r4, [r3, #0]
 80181ac:	687b      	ldr	r3, [r7, #4]
 80181ae:	3304      	adds	r3, #4
 80181b0:	4618      	mov	r0, r3
 80181b2:	f7ff fa10 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 80181b6:	4603      	mov	r3, r0
 80181b8:	681b      	ldr	r3, [r3, #0]
 80181ba:	fb94 f3f3 	sdiv	r3, r4, r3
 80181be:	617b      	str	r3, [r7, #20]
 80181c0:	68bb      	ldr	r3, [r7, #8]
 80181c2:	3304      	adds	r3, #4
 80181c4:	f107 0214 	add.w	r2, r7, #20
 80181c8:	4611      	mov	r1, r2
 80181ca:	4618      	mov	r0, r3
 80181cc:	f000 fb06 	bl	80187dc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 80181d0:	e039      	b.n	8018246 <_ZN6SymboldvES_+0xce>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) / std::get<float>(other.value));
 80181d2:	68bb      	ldr	r3, [r7, #8]
 80181d4:	3304      	adds	r3, #4
 80181d6:	4618      	mov	r0, r3
 80181d8:	f000 f894 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 80181dc:	4603      	mov	r3, r0
 80181de:	ed93 8a00 	vldr	s16, [r3]
 80181e2:	687b      	ldr	r3, [r7, #4]
 80181e4:	3304      	adds	r3, #4
 80181e6:	4618      	mov	r0, r3
 80181e8:	f000 f88c 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 80181ec:	4603      	mov	r3, r0
 80181ee:	ed93 7a00 	vldr	s14, [r3]
 80181f2:	eec8 7a07 	vdiv.f32	s15, s16, s14
 80181f6:	edc7 7a06 	vstr	s15, [r7, #24]
 80181fa:	68bb      	ldr	r3, [r7, #8]
 80181fc:	3304      	adds	r3, #4
 80181fe:	f107 0218 	add.w	r2, r7, #24
 8018202:	4611      	mov	r1, r2
 8018204:	4618      	mov	r0, r3
 8018206:	f000 fb13 	bl	8018830 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 801820a:	e01c      	b.n	8018246 <_ZN6SymboldvES_+0xce>
	default:
		Transmitter::report_error("invalid type for multiplication");
 801820c:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8018210:	4618      	mov	r0, r3
 8018212:	f00a fd2a 	bl	8022c6a <_ZNSaIcEC1Ev>
 8018216:	f107 0234 	add.w	r2, r7, #52	; 0x34
 801821a:	f107 031c 	add.w	r3, r7, #28
 801821e:	490f      	ldr	r1, [pc, #60]	; (801825c <_ZN6SymboldvES_+0xe4>)
 8018220:	4618      	mov	r0, r3
 8018222:	f7e9 f8b2 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8018226:	f107 031c 	add.w	r3, r7, #28
 801822a:	4618      	mov	r0, r3
 801822c:	f000 fe0e 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8018230:	f107 031c 	add.w	r3, r7, #28
 8018234:	4618      	mov	r0, r3
 8018236:	f00a fede 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801823a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 801823e:	4618      	mov	r0, r3
 8018240:	f00a fd14 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 8018244:	bf00      	nop
	}

	return *this;
 8018246:	68b9      	ldr	r1, [r7, #8]
 8018248:	68f8      	ldr	r0, [r7, #12]
 801824a:	f7ee ff63 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 801824e:	68f8      	ldr	r0, [r7, #12]
 8018250:	373c      	adds	r7, #60	; 0x3c
 8018252:	46bd      	mov	sp, r7
 8018254:	ecbd 8b02 	vpop	{d8}
 8018258:	bd90      	pop	{r4, r7, pc}
 801825a:	bf00      	nop
 801825c:	08027a40 	.word	0x08027a40

08018260 <_ZN6SymbolrmES_>:

Symbol Symbol::operator%(Symbol other)
{
 8018260:	b590      	push	{r4, r7, lr}
 8018262:	b08d      	sub	sp, #52	; 0x34
 8018264:	af00      	add	r7, sp, #0
 8018266:	60f8      	str	r0, [r7, #12]
 8018268:	60b9      	str	r1, [r7, #8]
 801826a:	607a      	str	r2, [r7, #4]
	assert_types(other);
 801826c:	6879      	ldr	r1, [r7, #4]
 801826e:	68b8      	ldr	r0, [r7, #8]
 8018270:	f000 f8ea 	bl	8018448 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8018274:	68bb      	ldr	r3, [r7, #8]
 8018276:	781b      	ldrb	r3, [r3, #0]
 8018278:	2b00      	cmp	r3, #0
 801827a:	d11c      	bne.n	80182b6 <_ZN6SymbolrmES_+0x56>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) % std::get<int>(other.value));
 801827c:	68bb      	ldr	r3, [r7, #8]
 801827e:	3304      	adds	r3, #4
 8018280:	4618      	mov	r0, r3
 8018282:	f7ff f9a8 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8018286:	4603      	mov	r3, r0
 8018288:	681c      	ldr	r4, [r3, #0]
 801828a:	687b      	ldr	r3, [r7, #4]
 801828c:	3304      	adds	r3, #4
 801828e:	4618      	mov	r0, r3
 8018290:	f7ff f9a1 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8018294:	4603      	mov	r3, r0
 8018296:	681b      	ldr	r3, [r3, #0]
 8018298:	fb94 f2f3 	sdiv	r2, r4, r3
 801829c:	fb03 f302 	mul.w	r3, r3, r2
 80182a0:	1ae3      	subs	r3, r4, r3
 80182a2:	613b      	str	r3, [r7, #16]
 80182a4:	68bb      	ldr	r3, [r7, #8]
 80182a6:	3304      	adds	r3, #4
 80182a8:	f107 0210 	add.w	r2, r7, #16
 80182ac:	4611      	mov	r1, r2
 80182ae:	4618      	mov	r0, r3
 80182b0:	f000 fa94 	bl	80187dc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 80182b4:	e01c      	b.n	80182f0 <_ZN6SymbolrmES_+0x90>
	default:
		Transmitter::report_error("invalid type for multiplication");
 80182b6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80182ba:	4618      	mov	r0, r3
 80182bc:	f00a fcd5 	bl	8022c6a <_ZNSaIcEC1Ev>
 80182c0:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80182c4:	f107 0314 	add.w	r3, r7, #20
 80182c8:	490d      	ldr	r1, [pc, #52]	; (8018300 <_ZN6SymbolrmES_+0xa0>)
 80182ca:	4618      	mov	r0, r3
 80182cc:	f7e9 f85d 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80182d0:	f107 0314 	add.w	r3, r7, #20
 80182d4:	4618      	mov	r0, r3
 80182d6:	f000 fdb9 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80182da:	f107 0314 	add.w	r3, r7, #20
 80182de:	4618      	mov	r0, r3
 80182e0:	f00a fe89 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80182e4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80182e8:	4618      	mov	r0, r3
 80182ea:	f00a fcbf 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 80182ee:	bf00      	nop
	}

	return *this;
 80182f0:	68b9      	ldr	r1, [r7, #8]
 80182f2:	68f8      	ldr	r0, [r7, #12]
 80182f4:	f7ee ff0e 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 80182f8:	68f8      	ldr	r0, [r7, #12]
 80182fa:	3734      	adds	r7, #52	; 0x34
 80182fc:	46bd      	mov	sp, r7
 80182fe:	bd90      	pop	{r4, r7, pc}
 8018300:	08027a40 	.word	0x08027a40

08018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8018304:	b580      	push	{r7, lr}
 8018306:	b082      	sub	sp, #8
 8018308:	af00      	add	r7, sp, #0
 801830a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801830c:	6878      	ldr	r0, [r7, #4]
 801830e:	f7f4 f83d 	bl	800c38c <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 8018312:	4603      	mov	r3, r0
    }
 8018314:	4618      	mov	r0, r3
 8018316:	3708      	adds	r7, #8
 8018318:	46bd      	mov	sp, r7
 801831a:	bd80      	pop	{r7, pc}

0801831c <_ZN6SymboleoES_>:

Symbol Symbol::operator^(Symbol other)
{
 801831c:	b5b0      	push	{r4, r5, r7, lr}
 801831e:	b08e      	sub	sp, #56	; 0x38
 8018320:	af00      	add	r7, sp, #0
 8018322:	60f8      	str	r0, [r7, #12]
 8018324:	60b9      	str	r1, [r7, #8]
 8018326:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8018328:	6879      	ldr	r1, [r7, #4]
 801832a:	68b8      	ldr	r0, [r7, #8]
 801832c:	f000 f88c 	bl	8018448 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8018330:	68bb      	ldr	r3, [r7, #8]
 8018332:	781b      	ldrb	r3, [r3, #0]
 8018334:	2b00      	cmp	r3, #0
 8018336:	d002      	beq.n	801833e <_ZN6SymboleoES_+0x22>
 8018338:	2b01      	cmp	r3, #1
 801833a:	d02f      	beq.n	801839c <_ZN6SymboleoES_+0x80>
 801833c:	e05d      	b.n	80183fa <_ZN6SymboleoES_+0xde>
	{
	case SYMBOL_INT:
		this->value = (int)pow(std::get<int>(this->value), std::get<int>(other.value));
 801833e:	68bb      	ldr	r3, [r7, #8]
 8018340:	3304      	adds	r3, #4
 8018342:	4618      	mov	r0, r3
 8018344:	f7ff f947 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8018348:	4603      	mov	r3, r0
 801834a:	681b      	ldr	r3, [r3, #0]
 801834c:	4618      	mov	r0, r3
 801834e:	f7e8 f909 	bl	8000564 <__aeabi_i2d>
 8018352:	4604      	mov	r4, r0
 8018354:	460d      	mov	r5, r1
 8018356:	687b      	ldr	r3, [r7, #4]
 8018358:	3304      	adds	r3, #4
 801835a:	4618      	mov	r0, r3
 801835c:	f7ff f93b 	bl	80175d6 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 8018360:	4603      	mov	r3, r0
 8018362:	681b      	ldr	r3, [r3, #0]
 8018364:	4618      	mov	r0, r3
 8018366:	f7e8 f8fd 	bl	8000564 <__aeabi_i2d>
 801836a:	4602      	mov	r2, r0
 801836c:	460b      	mov	r3, r1
 801836e:	ec43 2b11 	vmov	d1, r2, r3
 8018372:	ec45 4b10 	vmov	d0, r4, r5
 8018376:	f00a ff87 	bl	8023288 <pow>
 801837a:	ec53 2b10 	vmov	r2, r3, d0
 801837e:	4610      	mov	r0, r2
 8018380:	4619      	mov	r1, r3
 8018382:	f7e8 fc09 	bl	8000b98 <__aeabi_d2iz>
 8018386:	4603      	mov	r3, r0
 8018388:	617b      	str	r3, [r7, #20]
 801838a:	68bb      	ldr	r3, [r7, #8]
 801838c:	3304      	adds	r3, #4
 801838e:	f107 0214 	add.w	r2, r7, #20
 8018392:	4611      	mov	r1, r2
 8018394:	4618      	mov	r0, r3
 8018396:	f000 fa21 	bl	80187dc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 801839a:	e04b      	b.n	8018434 <_ZN6SymboleoES_+0x118>
	case SYMBOL_FLOAT:
		this->value = (float)pow(std::get<float>(this->value), std::get<float>(other.value));
 801839c:	68bb      	ldr	r3, [r7, #8]
 801839e:	3304      	adds	r3, #4
 80183a0:	4618      	mov	r0, r3
 80183a2:	f7ff ffaf 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 80183a6:	4603      	mov	r3, r0
 80183a8:	681b      	ldr	r3, [r3, #0]
 80183aa:	4618      	mov	r0, r3
 80183ac:	f7e8 f8ec 	bl	8000588 <__aeabi_f2d>
 80183b0:	4604      	mov	r4, r0
 80183b2:	460d      	mov	r5, r1
 80183b4:	687b      	ldr	r3, [r7, #4]
 80183b6:	3304      	adds	r3, #4
 80183b8:	4618      	mov	r0, r3
 80183ba:	f7ff ffa3 	bl	8018304 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>
 80183be:	4603      	mov	r3, r0
 80183c0:	681b      	ldr	r3, [r3, #0]
 80183c2:	4618      	mov	r0, r3
 80183c4:	f7e8 f8e0 	bl	8000588 <__aeabi_f2d>
 80183c8:	4602      	mov	r2, r0
 80183ca:	460b      	mov	r3, r1
 80183cc:	ec43 2b11 	vmov	d1, r2, r3
 80183d0:	ec45 4b10 	vmov	d0, r4, r5
 80183d4:	f00a ff58 	bl	8023288 <pow>
 80183d8:	ec53 2b10 	vmov	r2, r3, d0
 80183dc:	4610      	mov	r0, r2
 80183de:	4619      	mov	r1, r3
 80183e0:	f7e8 fc22 	bl	8000c28 <__aeabi_d2f>
 80183e4:	4603      	mov	r3, r0
 80183e6:	61bb      	str	r3, [r7, #24]
 80183e8:	68bb      	ldr	r3, [r7, #8]
 80183ea:	3304      	adds	r3, #4
 80183ec:	f107 0218 	add.w	r2, r7, #24
 80183f0:	4611      	mov	r1, r2
 80183f2:	4618      	mov	r0, r3
 80183f4:	f000 fa1c 	bl	8018830 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>
		break;
 80183f8:	e01c      	b.n	8018434 <_ZN6SymboleoES_+0x118>
	default:
		Transmitter::report_error("invalid type for multiplication");
 80183fa:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80183fe:	4618      	mov	r0, r3
 8018400:	f00a fc33 	bl	8022c6a <_ZNSaIcEC1Ev>
 8018404:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8018408:	f107 031c 	add.w	r3, r7, #28
 801840c:	490d      	ldr	r1, [pc, #52]	; (8018444 <_ZN6SymboleoES_+0x128>)
 801840e:	4618      	mov	r0, r3
 8018410:	f7e8 ffbb 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8018414:	f107 031c 	add.w	r3, r7, #28
 8018418:	4618      	mov	r0, r3
 801841a:	f000 fd17 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801841e:	f107 031c 	add.w	r3, r7, #28
 8018422:	4618      	mov	r0, r3
 8018424:	f00a fde7 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018428:	f107 0334 	add.w	r3, r7, #52	; 0x34
 801842c:	4618      	mov	r0, r3
 801842e:	f00a fc1d 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 8018432:	bf00      	nop
	}

	return *this;
 8018434:	68b9      	ldr	r1, [r7, #8]
 8018436:	68f8      	ldr	r0, [r7, #12]
 8018438:	f7ee fe6c 	bl	8007114 <_ZN6SymbolC1ERKS_>
}
 801843c:	68f8      	ldr	r0, [r7, #12]
 801843e:	3738      	adds	r7, #56	; 0x38
 8018440:	46bd      	mov	sp, r7
 8018442:	bdb0      	pop	{r4, r5, r7, pc}
 8018444:	08027a40 	.word	0x08027a40

08018448 <_ZN6Symbol12assert_typesERKS_>:

void Symbol::assert_types(const Symbol &other)
{
 8018448:	b580      	push	{r7, lr}
 801844a:	b08a      	sub	sp, #40	; 0x28
 801844c:	af00      	add	r7, sp, #0
 801844e:	6078      	str	r0, [r7, #4]
 8018450:	6039      	str	r1, [r7, #0]
	if (type != other.type)
 8018452:	687b      	ldr	r3, [r7, #4]
 8018454:	781a      	ldrb	r2, [r3, #0]
 8018456:	683b      	ldr	r3, [r7, #0]
 8018458:	781b      	ldrb	r3, [r3, #0]
 801845a:	429a      	cmp	r2, r3
 801845c:	d01b      	beq.n	8018496 <_ZN6Symbol12assert_typesERKS_+0x4e>
	{
		Transmitter::report_error("types mismatch");
 801845e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8018462:	4618      	mov	r0, r3
 8018464:	f00a fc01 	bl	8022c6a <_ZNSaIcEC1Ev>
 8018468:	f107 0224 	add.w	r2, r7, #36	; 0x24
 801846c:	f107 030c 	add.w	r3, r7, #12
 8018470:	490b      	ldr	r1, [pc, #44]	; (80184a0 <_ZN6Symbol12assert_typesERKS_+0x58>)
 8018472:	4618      	mov	r0, r3
 8018474:	f7e8 ff89 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8018478:	f107 030c 	add.w	r3, r7, #12
 801847c:	4618      	mov	r0, r3
 801847e:	f000 fce5 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8018482:	f107 030c 	add.w	r3, r7, #12
 8018486:	4618      	mov	r0, r3
 8018488:	f00a fdb5 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801848c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8018490:	4618      	mov	r0, r3
 8018492:	f00a fbeb 	bl	8022c6c <_ZNSaIcED1Ev>
	}
}
 8018496:	bf00      	nop
 8018498:	3728      	adds	r7, #40	; 0x28
 801849a:	46bd      	mov	sp, r7
 801849c:	bd80      	pop	{r7, pc}
 801849e:	bf00      	nop
 80184a0:	08027a60 	.word	0x08027a60

080184a4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_>:
	operator=(_Tp&& __rhs)
 80184a4:	b590      	push	{r4, r7, lr}
 80184a6:	b085      	sub	sp, #20
 80184a8:	af00      	add	r7, sp, #0
 80184aa:	6078      	str	r0, [r7, #4]
 80184ac:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80184ae:	2300      	movs	r3, #0
 80184b0:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80184b2:	6878      	ldr	r0, [r7, #4]
 80184b4:	f7ef fc7d 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 80184b8:	4603      	mov	r3, r0
 80184ba:	2b00      	cmp	r3, #0
 80184bc:	bf0c      	ite	eq
 80184be:	2301      	moveq	r3, #1
 80184c0:	2300      	movne	r3, #0
 80184c2:	b2db      	uxtb	r3, r3
 80184c4:	2b00      	cmp	r3, #0
 80184c6:	d00a      	beq.n	80184de <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80184c8:	6838      	ldr	r0, [r7, #0]
 80184ca:	f7ed fd96 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80184ce:	4603      	mov	r3, r0
 80184d0:	681c      	ldr	r4, [r3, #0]
 80184d2:	6878      	ldr	r0, [r7, #4]
 80184d4:	f7f3 ff1e 	bl	800c314 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 80184d8:	4603      	mov	r3, r0
 80184da:	601c      	str	r4, [r3, #0]
 80184dc:	e007      	b.n	80184ee <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80184de:	6838      	ldr	r0, [r7, #0]
 80184e0:	f7ed fd8b 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80184e4:	4603      	mov	r3, r0
 80184e6:	4619      	mov	r1, r3
 80184e8:	6878      	ldr	r0, [r7, #4]
 80184ea:	f000 f9cb 	bl	8018884 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj0EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSI_E4typeEDpOSJ_>
	  return *this;
 80184ee:	687b      	ldr	r3, [r7, #4]
	}
 80184f0:	4618      	mov	r0, r3
 80184f2:	3714      	adds	r7, #20
 80184f4:	46bd      	mov	sp, r7
 80184f6:	bd90      	pop	{r4, r7, pc}

080184f8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_>:
	operator=(_Tp&& __rhs)
 80184f8:	b590      	push	{r4, r7, lr}
 80184fa:	b085      	sub	sp, #20
 80184fc:	af00      	add	r7, sp, #0
 80184fe:	6078      	str	r0, [r7, #4]
 8018500:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8018502:	2301      	movs	r3, #1
 8018504:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8018506:	6878      	ldr	r0, [r7, #4]
 8018508:	f7ef fc53 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 801850c:	4603      	mov	r3, r0
 801850e:	2b01      	cmp	r3, #1
 8018510:	bf0c      	ite	eq
 8018512:	2301      	moveq	r3, #1
 8018514:	2300      	movne	r3, #0
 8018516:	b2db      	uxtb	r3, r3
 8018518:	2b00      	cmp	r3, #0
 801851a:	d00a      	beq.n	8018532 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801851c:	6838      	ldr	r0, [r7, #0]
 801851e:	f7ed fd8e 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8018522:	4603      	mov	r3, r0
 8018524:	681c      	ldr	r4, [r3, #0]
 8018526:	6878      	ldr	r0, [r7, #4]
 8018528:	f7f3 ff30 	bl	800c38c <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 801852c:	4603      	mov	r3, r0
 801852e:	601c      	str	r4, [r3, #0]
 8018530:	e007      	b.n	8018542 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8018532:	6838      	ldr	r0, [r7, #0]
 8018534:	f7ed fd83 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8018538:	4603      	mov	r3, r0
 801853a:	4619      	mov	r1, r3
 801853c:	6878      	ldr	r0, [r7, #4]
 801853e:	f000 f9ba 	bl	80188b6 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj1EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSI_E4typeEDpOSJ_>
	  return *this;
 8018542:	687b      	ldr	r3, [r7, #4]
	}
 8018544:	4618      	mov	r0, r3
 8018546:	3714      	adds	r7, #20
 8018548:	46bd      	mov	sp, r7
 801854a:	bd90      	pop	{r4, r7, pc}

0801854c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_>:
	operator=(_Tp&& __rhs)
 801854c:	b590      	push	{r4, r7, lr}
 801854e:	b085      	sub	sp, #20
 8018550:	af00      	add	r7, sp, #0
 8018552:	6078      	str	r0, [r7, #4]
 8018554:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8018556:	2302      	movs	r3, #2
 8018558:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801855a:	6878      	ldr	r0, [r7, #4]
 801855c:	f7ef fc29 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 8018560:	4603      	mov	r3, r0
 8018562:	2b02      	cmp	r3, #2
 8018564:	bf0c      	ite	eq
 8018566:	2301      	moveq	r3, #1
 8018568:	2300      	movne	r3, #0
 801856a:	b2db      	uxtb	r3, r3
 801856c:	2b00      	cmp	r3, #0
 801856e:	d00b      	beq.n	8018588 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_+0x3c>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8018570:	6838      	ldr	r0, [r7, #0]
 8018572:	f7ed fd20 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8018576:	4603      	mov	r3, r0
 8018578:	781c      	ldrb	r4, [r3, #0]
 801857a:	6878      	ldr	r0, [r7, #4]
 801857c:	f7f3 ff42 	bl	800c404 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 8018580:	4603      	mov	r3, r0
 8018582:	4622      	mov	r2, r4
 8018584:	701a      	strb	r2, [r3, #0]
 8018586:	e007      	b.n	8018598 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_+0x4c>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8018588:	6838      	ldr	r0, [r7, #0]
 801858a:	f7ed fd14 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 801858e:	4603      	mov	r3, r0
 8018590:	4619      	mov	r1, r3
 8018592:	6878      	ldr	r0, [r7, #4]
 8018594:	f000 f9a8 	bl	80188e8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj2EJRbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSI_E4typeEDpOSJ_>
	  return *this;
 8018598:	687b      	ldr	r3, [r7, #4]
	}
 801859a:	4618      	mov	r0, r3
 801859c:	3714      	adds	r7, #20
 801859e:	46bd      	mov	sp, r7
 80185a0:	bd90      	pop	{r4, r7, pc}

080185a2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_>:
	operator=(_Tp&& __rhs)
 80185a2:	b590      	push	{r4, r7, lr}
 80185a4:	b08b      	sub	sp, #44	; 0x2c
 80185a6:	af00      	add	r7, sp, #0
 80185a8:	6078      	str	r0, [r7, #4]
 80185aa:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80185ac:	2303      	movs	r3, #3
 80185ae:	627b      	str	r3, [r7, #36]	; 0x24
	  if (index() == __index)
 80185b0:	6878      	ldr	r0, [r7, #4]
 80185b2:	f7ef fbfe 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 80185b6:	4603      	mov	r3, r0
 80185b8:	2b03      	cmp	r3, #3
 80185ba:	bf0c      	ite	eq
 80185bc:	2301      	moveq	r3, #1
 80185be:	2300      	movne	r3, #0
 80185c0:	b2db      	uxtb	r3, r3
 80185c2:	2b00      	cmp	r3, #0
 80185c4:	d00c      	beq.n	80185e0 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80185c6:	6838      	ldr	r0, [r7, #0]
 80185c8:	f7ed fd67 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80185cc:	4604      	mov	r4, r0
 80185ce:	6878      	ldr	r0, [r7, #4]
 80185d0:	f7f3 ff56 	bl	800c480 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 80185d4:	4603      	mov	r3, r0
 80185d6:	4621      	mov	r1, r4
 80185d8:	4618      	mov	r0, r3
 80185da:	f00a fd12 	bl	8023002 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
 80185de:	e014      	b.n	801860a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISK_SH_E15is_assignable_vIRSK_SH_EERSC_E4typeESI_+0x68>
		operator=(variant(std::forward<_Tp>(__rhs)));
 80185e0:	6838      	ldr	r0, [r7, #0]
 80185e2:	f7ed fd5a 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80185e6:	4602      	mov	r2, r0
 80185e8:	f107 0308 	add.w	r3, r7, #8
 80185ec:	4611      	mov	r1, r2
 80185ee:	4618      	mov	r0, r3
 80185f0:	f000 f9ac 	bl	801894c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1IRS5_vvS5_vEEOT_>
 80185f4:	f107 0308 	add.w	r3, r7, #8
 80185f8:	4619      	mov	r1, r3
 80185fa:	6878      	ldr	r0, [r7, #4]
 80185fc:	f7ee f97a 	bl	80068f4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSEOSC_>
 8018600:	f107 0308 	add.w	r3, r7, #8
 8018604:	4618      	mov	r0, r3
 8018606:	f7ee f94a 	bl	800689e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEED1Ev>
	  return *this;
 801860a:	687b      	ldr	r3, [r7, #4]
	}
 801860c:	4618      	mov	r0, r3
 801860e:	372c      	adds	r7, #44	; 0x2c
 8018610:	46bd      	mov	sp, r7
 8018612:	bd90      	pop	{r4, r7, pc}

08018614 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>:
	operator=(_Tp&& __rhs)
 8018614:	b590      	push	{r4, r7, lr}
 8018616:	b085      	sub	sp, #20
 8018618:	af00      	add	r7, sp, #0
 801861a:	6078      	str	r0, [r7, #4]
 801861c:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801861e:	2303      	movs	r3, #3
 8018620:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8018622:	6878      	ldr	r0, [r7, #4]
 8018624:	f7ef fbc5 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 8018628:	4603      	mov	r3, r0
 801862a:	2b03      	cmp	r3, #3
 801862c:	bf0c      	ite	eq
 801862e:	2301      	moveq	r3, #1
 8018630:	2300      	movne	r3, #0
 8018632:	b2db      	uxtb	r3, r3
 8018634:	2b00      	cmp	r3, #0
 8018636:	d00c      	beq.n	8018652 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8018638:	6838      	ldr	r0, [r7, #0]
 801863a:	f7f2 fd97 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801863e:	4604      	mov	r4, r0
 8018640:	6878      	ldr	r0, [r7, #4]
 8018642:	f7f3 ff1d 	bl	800c480 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 8018646:	4603      	mov	r3, r0
 8018648:	4621      	mov	r1, r4
 801864a:	4618      	mov	r0, r3
 801864c:	f00a fcdf 	bl	802300e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8018650:	e007      	b.n	8018662 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8018652:	6838      	ldr	r0, [r7, #0]
 8018654:	f7f2 fd8a 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8018658:	4603      	mov	r3, r0
 801865a:	4619      	mov	r1, r3
 801865c:	6878      	ldr	r0, [r7, #4]
 801865e:	f7f3 f94e 	bl	800b8fe <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>
	  return *this;
 8018662:	687b      	ldr	r3, [r7, #4]
	}
 8018664:	4618      	mov	r0, r3
 8018666:	3714      	adds	r7, #20
 8018668:	46bd      	mov	sp, r7
 801866a:	bd90      	pop	{r4, r7, pc}

0801866c <_ZNSaI6SymbolEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 801866c:	b580      	push	{r7, lr}
 801866e:	b082      	sub	sp, #8
 8018670:	af00      	add	r7, sp, #0
 8018672:	6078      	str	r0, [r7, #4]
 8018674:	6878      	ldr	r0, [r7, #4]
 8018676:	f000 f97c 	bl	8018972 <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1Ev>
 801867a:	687b      	ldr	r3, [r7, #4]
 801867c:	4618      	mov	r0, r3
 801867e:	3708      	adds	r7, #8
 8018680:	46bd      	mov	sp, r7
 8018682:	bd80      	pop	{r7, pc}

08018684 <_ZNSt6vectorI6SymbolSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
 8018684:	b5b0      	push	{r4, r5, r7, lr}
 8018686:	b086      	sub	sp, #24
 8018688:	af00      	add	r7, sp, #0
 801868a:	60f8      	str	r0, [r7, #12]
 801868c:	1d38      	adds	r0, r7, #4
 801868e:	e880 0006 	stmia.w	r0, {r1, r2}
 8018692:	603b      	str	r3, [r7, #0]
      : _Base(__a)
 8018694:	68fb      	ldr	r3, [r7, #12]
 8018696:	6839      	ldr	r1, [r7, #0]
 8018698:	4618      	mov	r0, r3
 801869a:	f7f5 fcda 	bl	800e052 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
 801869e:	1d3b      	adds	r3, r7, #4
 80186a0:	4618      	mov	r0, r3
 80186a2:	f000 f971 	bl	8018988 <_ZNKSt16initializer_listI6SymbolE5beginEv>
 80186a6:	4604      	mov	r4, r0
 80186a8:	1d3b      	adds	r3, r7, #4
 80186aa:	4618      	mov	r0, r3
 80186ac:	f000 f978 	bl	80189a0 <_ZNKSt16initializer_listI6SymbolE3endEv>
 80186b0:	4602      	mov	r2, r0
 80186b2:	462b      	mov	r3, r5
 80186b4:	4621      	mov	r1, r4
 80186b6:	68f8      	ldr	r0, [r7, #12]
 80186b8:	f000 f998 	bl	80189ec <_ZNSt6vectorI6SymbolSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
 80186bc:	68fb      	ldr	r3, [r7, #12]
 80186be:	4618      	mov	r0, r3
 80186c0:	3718      	adds	r7, #24
 80186c2:	46bd      	mov	sp, r7
 80186c4:	bdb0      	pop	{r4, r5, r7, pc}

080186c6 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSISB_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>:
	operator=(_Tp&& __rhs)
 80186c6:	b590      	push	{r4, r7, lr}
 80186c8:	b085      	sub	sp, #20
 80186ca:	af00      	add	r7, sp, #0
 80186cc:	6078      	str	r0, [r7, #4]
 80186ce:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80186d0:	2305      	movs	r3, #5
 80186d2:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80186d4:	6878      	ldr	r0, [r7, #4]
 80186d6:	f7ef fb6c 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 80186da:	4603      	mov	r3, r0
 80186dc:	2b05      	cmp	r3, #5
 80186de:	bf0c      	ite	eq
 80186e0:	2301      	moveq	r3, #1
 80186e2:	2300      	movne	r3, #0
 80186e4:	b2db      	uxtb	r3, r3
 80186e6:	2b00      	cmp	r3, #0
 80186e8:	d00c      	beq.n	8018704 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSISB_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80186ea:	6838      	ldr	r0, [r7, #0]
 80186ec:	f7f2 fd98 	bl	800b220 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 80186f0:	4604      	mov	r4, r0
 80186f2:	6878      	ldr	r0, [r7, #4]
 80186f4:	f7f4 f814 	bl	800c720 <_ZSt3getILj5EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 80186f8:	4603      	mov	r3, r0
 80186fa:	4621      	mov	r1, r4
 80186fc:	4618      	mov	r0, r3
 80186fe:	f7f3 f945 	bl	800b98c <_ZNSt6vectorI6SymbolSaIS0_EEaSEOS2_>
 8018702:	e007      	b.n	8018714 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSISB_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8018704:	6838      	ldr	r0, [r7, #0]
 8018706:	f7f2 fd8b 	bl	800b220 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 801870a:	4603      	mov	r3, r0
 801870c:	4619      	mov	r1, r3
 801870e:	6878      	ldr	r0, [r7, #4]
 8018710:	f7f3 f951 	bl	800b9b6 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj5EJSB_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>
	  return *this;
 8018714:	687b      	ldr	r3, [r7, #4]
	}
 8018716:	4618      	mov	r0, r3
 8018718:	3714      	adds	r7, #20
 801871a:	46bd      	mov	sp, r7
 801871c:	bd90      	pop	{r4, r7, pc}

0801871e <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IS9_SaIS9_EES3_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801871e:	b580      	push	{r7, lr}
 8018720:	b082      	sub	sp, #8
 8018722:	af00      	add	r7, sp, #0
 8018724:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8018726:	6878      	ldr	r0, [r7, #4]
 8018728:	f7f3 fffa 	bl	800c720 <_ZSt3getILj5EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 801872c:	4603      	mov	r3, r0
    }
 801872e:	4618      	mov	r0, r3
 8018730:	3708      	adds	r7, #8
 8018732:	46bd      	mov	sp, r7
 8018734:	bd80      	pop	{r7, pc}

08018736 <_ZNSt6vectorI6SymbolSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8018736:	b480      	push	{r7}
 8018738:	b083      	sub	sp, #12
 801873a:	af00      	add	r7, sp, #0
 801873c:	6078      	str	r0, [r7, #4]
 801873e:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 8018740:	687b      	ldr	r3, [r7, #4]
 8018742:	681a      	ldr	r2, [r3, #0]
 8018744:	683b      	ldr	r3, [r7, #0]
 8018746:	015b      	lsls	r3, r3, #5
 8018748:	4413      	add	r3, r2
      }
 801874a:	4618      	mov	r0, r3
 801874c:	370c      	adds	r7, #12
 801874e:	46bd      	mov	sp, r7
 8018750:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018754:	4770      	bx	lr

08018756 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8018756:	b580      	push	{r7, lr}
 8018758:	b082      	sub	sp, #8
 801875a:	af00      	add	r7, sp, #0
 801875c:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801875e:	6878      	ldr	r0, [r7, #4]
 8018760:	f7f3 fe50 	bl	800c404 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 8018764:	4603      	mov	r3, r0
    }
 8018766:	4618      	mov	r0, r3
 8018768:	3708      	adds	r7, #8
 801876a:	46bd      	mov	sp, r7
 801876c:	bd80      	pop	{r7, pc}

0801876e <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801876e:	b580      	push	{r7, lr}
 8018770:	b082      	sub	sp, #8
 8018772:	af00      	add	r7, sp, #0
 8018774:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8018776:	6878      	ldr	r0, [r7, #4]
 8018778:	f7f3 fe82 	bl	800c480 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 801877c:	4603      	mov	r3, r0
    }
 801877e:	4618      	mov	r0, r3
 8018780:	3708      	adds	r7, #8
 8018782:	46bd      	mov	sp, r7
 8018784:	bd80      	pop	{r7, pc}

08018786 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>:
	operator=(_Tp&& __rhs)
 8018786:	b590      	push	{r4, r7, lr}
 8018788:	b085      	sub	sp, #20
 801878a:	af00      	add	r7, sp, #0
 801878c:	6078      	str	r0, [r7, #4]
 801878e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8018790:	2302      	movs	r3, #2
 8018792:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8018794:	6878      	ldr	r0, [r7, #4]
 8018796:	f7ef fb0c 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 801879a:	4603      	mov	r3, r0
 801879c:	2b02      	cmp	r3, #2
 801879e:	bf0c      	ite	eq
 80187a0:	2301      	moveq	r3, #1
 80187a2:	2300      	movne	r3, #0
 80187a4:	b2db      	uxtb	r3, r3
 80187a6:	2b00      	cmp	r3, #0
 80187a8:	d00b      	beq.n	80187c2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_+0x3c>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80187aa:	6838      	ldr	r0, [r7, #0]
 80187ac:	f7f2 fcb1 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 80187b0:	4603      	mov	r3, r0
 80187b2:	781c      	ldrb	r4, [r3, #0]
 80187b4:	6878      	ldr	r0, [r7, #4]
 80187b6:	f7f3 fe25 	bl	800c404 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 80187ba:	4603      	mov	r3, r0
 80187bc:	4622      	mov	r2, r4
 80187be:	701a      	strb	r2, [r3, #0]
 80187c0:	e007      	b.n	80187d2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_+0x4c>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80187c2:	6838      	ldr	r0, [r7, #0]
 80187c4:	f7f2 fca5 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 80187c8:	4603      	mov	r3, r0
 80187ca:	4619      	mov	r1, r3
 80187cc:	6878      	ldr	r0, [r7, #4]
 80187ce:	f7f3 f87d 	bl	800b8cc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj2EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>
	  return *this;
 80187d2:	687b      	ldr	r3, [r7, #4]
	}
 80187d4:	4618      	mov	r0, r3
 80187d6:	3714      	adds	r7, #20
 80187d8:	46bd      	mov	sp, r7
 80187da:	bd90      	pop	{r4, r7, pc}

080187dc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>:
	operator=(_Tp&& __rhs)
 80187dc:	b590      	push	{r4, r7, lr}
 80187de:	b085      	sub	sp, #20
 80187e0:	af00      	add	r7, sp, #0
 80187e2:	6078      	str	r0, [r7, #4]
 80187e4:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80187e6:	2300      	movs	r3, #0
 80187e8:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80187ea:	6878      	ldr	r0, [r7, #4]
 80187ec:	f7ef fae1 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 80187f0:	4603      	mov	r3, r0
 80187f2:	2b00      	cmp	r3, #0
 80187f4:	bf0c      	ite	eq
 80187f6:	2301      	moveq	r3, #1
 80187f8:	2300      	movne	r3, #0
 80187fa:	b2db      	uxtb	r3, r3
 80187fc:	2b00      	cmp	r3, #0
 80187fe:	d00a      	beq.n	8018816 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8018800:	6838      	ldr	r0, [r7, #0]
 8018802:	f7f2 fc2c 	bl	800b05e <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8018806:	4603      	mov	r3, r0
 8018808:	681c      	ldr	r4, [r3, #0]
 801880a:	6878      	ldr	r0, [r7, #4]
 801880c:	f7f3 fd82 	bl	800c314 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 8018810:	4603      	mov	r3, r0
 8018812:	601c      	str	r4, [r3, #0]
 8018814:	e007      	b.n	8018826 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8018816:	6838      	ldr	r0, [r7, #0]
 8018818:	f7f2 fc21 	bl	800b05e <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 801881c:	4603      	mov	r3, r0
 801881e:	4619      	mov	r1, r3
 8018820:	6878      	ldr	r0, [r7, #4]
 8018822:	f7f3 f821 	bl	800b868 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>
	  return *this;
 8018826:	687b      	ldr	r3, [r7, #4]
	}
 8018828:	4618      	mov	r0, r3
 801882a:	3714      	adds	r7, #20
 801882c:	46bd      	mov	sp, r7
 801882e:	bd90      	pop	{r4, r7, pc}

08018830 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_>:
	operator=(_Tp&& __rhs)
 8018830:	b590      	push	{r4, r7, lr}
 8018832:	b085      	sub	sp, #20
 8018834:	af00      	add	r7, sp, #0
 8018836:	6078      	str	r0, [r7, #4]
 8018838:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801883a:	2301      	movs	r3, #1
 801883c:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801883e:	6878      	ldr	r0, [r7, #4]
 8018840:	f7ef fab7 	bl	8007db2 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE5indexEv>
 8018844:	4603      	mov	r3, r0
 8018846:	2b01      	cmp	r3, #1
 8018848:	bf0c      	ite	eq
 801884a:	2301      	moveq	r3, #1
 801884c:	2300      	movne	r3, #0
 801884e:	b2db      	uxtb	r3, r3
 8018850:	2b00      	cmp	r3, #0
 8018852:	d00a      	beq.n	801886a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8018854:	6838      	ldr	r0, [r7, #0]
 8018856:	f7f2 fc2f 	bl	800b0b8 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 801885a:	4603      	mov	r3, r0
 801885c:	681c      	ldr	r4, [r3, #0]
 801885e:	6878      	ldr	r0, [r7, #4]
 8018860:	f7f3 fd94 	bl	800c38c <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 8018864:	4603      	mov	r3, r0
 8018866:	601c      	str	r4, [r3, #0]
 8018868:	e007      	b.n	801887a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESC_E4typeEE18is_constructible_vISJ_SG_E15is_assignable_vIRSJ_SG_EERSC_E4typeESH_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801886a:	6838      	ldr	r0, [r7, #0]
 801886c:	f7f2 fc24 	bl	800b0b8 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8018870:	4603      	mov	r3, r0
 8018872:	4619      	mov	r1, r3
 8018874:	6878      	ldr	r0, [r7, #4]
 8018876:	f7f3 f810 	bl	800b89a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSH_E4typeEDpOSI_>
	  return *this;
 801887a:	687b      	ldr	r3, [r7, #4]
	}
 801887c:	4618      	mov	r0, r3
 801887e:	3714      	adds	r7, #20
 8018880:	46bd      	mov	sp, r7
 8018882:	bd90      	pop	{r4, r7, pc}

08018884 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj0EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSI_E4typeEDpOSJ_>:
	emplace(_Args&&... __args)
 8018884:	b580      	push	{r7, lr}
 8018886:	b082      	sub	sp, #8
 8018888:	af00      	add	r7, sp, #0
 801888a:	6078      	str	r0, [r7, #4]
 801888c:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801888e:	687b      	ldr	r3, [r7, #4]
 8018890:	4618      	mov	r0, r3
 8018892:	f7f0 f839 	bl	8008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8018896:	6838      	ldr	r0, [r7, #0]
 8018898:	f7ed fbaf 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801889c:	4603      	mov	r3, r0
 801889e:	4619      	mov	r1, r3
 80188a0:	6878      	ldr	r0, [r7, #4]
 80188a2:	f000 f8dc 	bl	8018a5e <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJRiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80188a6:	6878      	ldr	r0, [r7, #4]
 80188a8:	f7f3 fd34 	bl	800c314 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 80188ac:	4603      	mov	r3, r0
	}
 80188ae:	4618      	mov	r0, r3
 80188b0:	3708      	adds	r7, #8
 80188b2:	46bd      	mov	sp, r7
 80188b4:	bd80      	pop	{r7, pc}

080188b6 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj1EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSI_E4typeEDpOSJ_>:
	emplace(_Args&&... __args)
 80188b6:	b580      	push	{r7, lr}
 80188b8:	b082      	sub	sp, #8
 80188ba:	af00      	add	r7, sp, #0
 80188bc:	6078      	str	r0, [r7, #4]
 80188be:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80188c0:	687b      	ldr	r3, [r7, #4]
 80188c2:	4618      	mov	r0, r3
 80188c4:	f7f0 f820 	bl	8008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80188c8:	6838      	ldr	r0, [r7, #0]
 80188ca:	f7ed fbb8 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80188ce:	4603      	mov	r3, r0
 80188d0:	4619      	mov	r1, r3
 80188d2:	6878      	ldr	r0, [r7, #4]
 80188d4:	f000 f8e2 	bl	8018a9c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJRfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80188d8:	6878      	ldr	r0, [r7, #4]
 80188da:	f7f3 fd57 	bl	800c38c <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 80188de:	4603      	mov	r3, r0
	}
 80188e0:	4618      	mov	r0, r3
 80188e2:	3708      	adds	r7, #8
 80188e4:	46bd      	mov	sp, r7
 80188e6:	bd80      	pop	{r7, pc}

080188e8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEE7emplaceILj2EJRbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESC_E4typeEDpT0_EERSI_E4typeEDpOSJ_>:
	emplace(_Args&&... __args)
 80188e8:	b580      	push	{r7, lr}
 80188ea:	b082      	sub	sp, #8
 80188ec:	af00      	add	r7, sp, #0
 80188ee:	6078      	str	r0, [r7, #4]
 80188f0:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80188f2:	687b      	ldr	r3, [r7, #4]
 80188f4:	4618      	mov	r0, r3
 80188f6:	f7f0 f807 	bl	8008908 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80188fa:	6838      	ldr	r0, [r7, #0]
 80188fc:	f7ed fb5b 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8018900:	4603      	mov	r3, r0
 8018902:	4619      	mov	r1, r3
 8018904:	6878      	ldr	r0, [r7, #4]
 8018906:	f000 f8e8 	bl	8018ada <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJRbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801890a:	6878      	ldr	r0, [r7, #4]
 801890c:	f7f3 fd7a 	bl	800c404 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSG_>
 8018910:	4603      	mov	r3, r0
	}
 8018912:	4618      	mov	r0, r3
 8018914:	3708      	adds	r7, #8
 8018916:	46bd      	mov	sp, r7
 8018918:	bd80      	pop	{r7, pc}

0801891a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1ILj3EJRS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 801891a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801891c:	b085      	sub	sp, #20
 801891e:	af00      	add	r7, sp, #0
 8018920:	60f8      	str	r0, [r7, #12]
 8018922:	7239      	strb	r1, [r7, #8]
 8018924:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 8018926:	68fc      	ldr	r4, [r7, #12]
 8018928:	6878      	ldr	r0, [r7, #4]
 801892a:	f7ed fbb6 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801892e:	4603      	mov	r3, r0
 8018930:	461a      	mov	r2, r3
 8018932:	4631      	mov	r1, r6
 8018934:	4620      	mov	r0, r4
 8018936:	f000 f934 	bl	8018ba2 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 801893a:	4629      	mov	r1, r5
 801893c:	68f8      	ldr	r0, [r7, #12]
 801893e:	f7f4 f975 	bl	800cc2c <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 8018942:	68fb      	ldr	r3, [r7, #12]
 8018944:	4618      	mov	r0, r3
 8018946:	3714      	adds	r7, #20
 8018948:	46bd      	mov	sp, r7
 801894a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801894c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1IRS5_vvS5_vEEOT_>:
	variant(_Tp&& __t)
 801894c:	b590      	push	{r4, r7, lr}
 801894e:	b083      	sub	sp, #12
 8018950:	af00      	add	r7, sp, #0
 8018952:	6078      	str	r0, [r7, #4]
 8018954:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 8018956:	6838      	ldr	r0, [r7, #0]
 8018958:	f7ed fb9f 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801895c:	4603      	mov	r3, r0
 801895e:	461a      	mov	r2, r3
 8018960:	4621      	mov	r1, r4
 8018962:	6878      	ldr	r0, [r7, #4]
 8018964:	f7ff ffd9 	bl	801891a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_I6SymbolSaIS9_EEEEC1ILj3EJRS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8018968:	687b      	ldr	r3, [r7, #4]
 801896a:	4618      	mov	r0, r3
 801896c:	370c      	adds	r7, #12
 801896e:	46bd      	mov	sp, r7
 8018970:	bd90      	pop	{r4, r7, pc}

08018972 <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8018972:	b480      	push	{r7}
 8018974:	b083      	sub	sp, #12
 8018976:	af00      	add	r7, sp, #0
 8018978:	6078      	str	r0, [r7, #4]
 801897a:	687b      	ldr	r3, [r7, #4]
 801897c:	4618      	mov	r0, r3
 801897e:	370c      	adds	r7, #12
 8018980:	46bd      	mov	sp, r7
 8018982:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018986:	4770      	bx	lr

08018988 <_ZNKSt16initializer_listI6SymbolE5beginEv>:
      begin() const noexcept { return _M_array; }
 8018988:	b480      	push	{r7}
 801898a:	b083      	sub	sp, #12
 801898c:	af00      	add	r7, sp, #0
 801898e:	6078      	str	r0, [r7, #4]
 8018990:	687b      	ldr	r3, [r7, #4]
 8018992:	681b      	ldr	r3, [r3, #0]
 8018994:	4618      	mov	r0, r3
 8018996:	370c      	adds	r7, #12
 8018998:	46bd      	mov	sp, r7
 801899a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801899e:	4770      	bx	lr

080189a0 <_ZNKSt16initializer_listI6SymbolE3endEv>:
      end() const noexcept { return begin() + size(); }
 80189a0:	b590      	push	{r4, r7, lr}
 80189a2:	b083      	sub	sp, #12
 80189a4:	af00      	add	r7, sp, #0
 80189a6:	6078      	str	r0, [r7, #4]
 80189a8:	6878      	ldr	r0, [r7, #4]
 80189aa:	f7ff ffed 	bl	8018988 <_ZNKSt16initializer_listI6SymbolE5beginEv>
 80189ae:	4604      	mov	r4, r0
 80189b0:	6878      	ldr	r0, [r7, #4]
 80189b2:	f000 f90b 	bl	8018bcc <_ZNKSt16initializer_listI6SymbolE4sizeEv>
 80189b6:	4603      	mov	r3, r0
 80189b8:	015b      	lsls	r3, r3, #5
 80189ba:	4423      	add	r3, r4
 80189bc:	4618      	mov	r0, r3
 80189be:	370c      	adds	r7, #12
 80189c0:	46bd      	mov	sp, r7
 80189c2:	bd90      	pop	{r4, r7, pc}

080189c4 <_ZSt8distanceIPK6SymbolENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
 80189c4:	b5b0      	push	{r4, r5, r7, lr}
 80189c6:	b082      	sub	sp, #8
 80189c8:	af00      	add	r7, sp, #0
 80189ca:	6078      	str	r0, [r7, #4]
 80189cc:	6039      	str	r1, [r7, #0]
      return std::__distance(__first, __last,
 80189ce:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 80189d0:	1d3b      	adds	r3, r7, #4
 80189d2:	4618      	mov	r0, r3
 80189d4:	f000 f906 	bl	8018be4 <_ZSt19__iterator_categoryIPK6SymbolENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
 80189d8:	462a      	mov	r2, r5
 80189da:	6839      	ldr	r1, [r7, #0]
 80189dc:	4620      	mov	r0, r4
 80189de:	f000 f90b 	bl	8018bf8 <_ZSt10__distanceIPK6SymbolENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
 80189e2:	4603      	mov	r3, r0
    }
 80189e4:	4618      	mov	r0, r3
 80189e6:	3708      	adds	r7, #8
 80189e8:	46bd      	mov	sp, r7
 80189ea:	bdb0      	pop	{r4, r5, r7, pc}

080189ec <_ZNSt6vectorI6SymbolSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
 80189ec:	b590      	push	{r4, r7, lr}
 80189ee:	b087      	sub	sp, #28
 80189f0:	af00      	add	r7, sp, #0
 80189f2:	60f8      	str	r0, [r7, #12]
 80189f4:	60b9      	str	r1, [r7, #8]
 80189f6:	607a      	str	r2, [r7, #4]
 80189f8:	703b      	strb	r3, [r7, #0]
	  const size_type __n = std::distance(__first, __last);
 80189fa:	6879      	ldr	r1, [r7, #4]
 80189fc:	68b8      	ldr	r0, [r7, #8]
 80189fe:	f7ff ffe1 	bl	80189c4 <_ZSt8distanceIPK6SymbolENSt15iterator_traitsIT_E15difference_typeES4_S4_>
 8018a02:	4603      	mov	r3, r0
 8018a04:	617b      	str	r3, [r7, #20]
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
 8018a06:	68fc      	ldr	r4, [r7, #12]
 8018a08:	68fb      	ldr	r3, [r7, #12]
 8018a0a:	4618      	mov	r0, r3
 8018a0c:	f7f4 fab3 	bl	800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8018a10:	4603      	mov	r3, r0
 8018a12:	4619      	mov	r1, r3
 8018a14:	6978      	ldr	r0, [r7, #20]
 8018a16:	f000 f8ff 	bl	8018c18 <_ZNSt6vectorI6SymbolSaIS0_EE17_S_check_init_lenEjRKS1_>
 8018a1a:	4603      	mov	r3, r0
 8018a1c:	4619      	mov	r1, r3
 8018a1e:	4620      	mov	r0, r4
 8018a20:	f7f5 f902 	bl	800dc28 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 8018a24:	4602      	mov	r2, r0
	  this->_M_impl._M_start
 8018a26:	68fb      	ldr	r3, [r7, #12]
 8018a28:	601a      	str	r2, [r3, #0]
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 8018a2a:	68fb      	ldr	r3, [r7, #12]
 8018a2c:	681a      	ldr	r2, [r3, #0]
 8018a2e:	697b      	ldr	r3, [r7, #20]
 8018a30:	015b      	lsls	r3, r3, #5
 8018a32:	441a      	add	r2, r3
 8018a34:	68fb      	ldr	r3, [r7, #12]
 8018a36:	609a      	str	r2, [r3, #8]
	    std::__uninitialized_copy_a(__first, __last,
 8018a38:	68fb      	ldr	r3, [r7, #12]
 8018a3a:	681c      	ldr	r4, [r3, #0]
					_M_get_Tp_allocator());
 8018a3c:	68fb      	ldr	r3, [r7, #12]
 8018a3e:	4618      	mov	r0, r3
 8018a40:	f7f4 fa99 	bl	800cf76 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8018a44:	4603      	mov	r3, r0
	    std::__uninitialized_copy_a(__first, __last,
 8018a46:	4622      	mov	r2, r4
 8018a48:	6879      	ldr	r1, [r7, #4]
 8018a4a:	68b8      	ldr	r0, [r7, #8]
 8018a4c:	f000 f90c 	bl	8018c68 <_ZSt22__uninitialized_copy_aIPK6SymbolPS0_S0_ET0_T_S5_S4_RSaIT1_E>
 8018a50:	4602      	mov	r2, r0
	  this->_M_impl._M_finish =
 8018a52:	68fb      	ldr	r3, [r7, #12]
 8018a54:	605a      	str	r2, [r3, #4]
	}
 8018a56:	bf00      	nop
 8018a58:	371c      	adds	r7, #28
 8018a5a:	46bd      	mov	sp, r7
 8018a5c:	bd90      	pop	{r4, r7, pc}

08018a5e <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJRiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8018a5e:	b590      	push	{r4, r7, lr}
 8018a60:	b085      	sub	sp, #20
 8018a62:	af00      	add	r7, sp, #0
 8018a64:	6078      	str	r0, [r7, #4]
 8018a66:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8018a68:	687b      	ldr	r3, [r7, #4]
 8018a6a:	2200      	movs	r2, #0
 8018a6c:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8018a6e:	6878      	ldr	r0, [r7, #4]
 8018a70:	f7ee fdb5 	bl	80075de <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8018a74:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8018a76:	6838      	ldr	r0, [r7, #0]
 8018a78:	f7ed fabf 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8018a7c:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8018a7e:	681c      	ldr	r4, [r3, #0]
 8018a80:	68f8      	ldr	r0, [r7, #12]
 8018a82:	f7f4 fc30 	bl	800d2e6 <_ZSt9addressofIiEPT_RS0_>
 8018a86:	4603      	mov	r3, r0
 8018a88:	4619      	mov	r1, r3
 8018a8a:	2004      	movs	r0, #4
 8018a8c:	f7e8 fae5 	bl	800105a <_ZnwjPv>
 8018a90:	4603      	mov	r3, r0
 8018a92:	601c      	str	r4, [r3, #0]
    }
 8018a94:	bf00      	nop
 8018a96:	3714      	adds	r7, #20
 8018a98:	46bd      	mov	sp, r7
 8018a9a:	bd90      	pop	{r4, r7, pc}

08018a9c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJRfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8018a9c:	b590      	push	{r4, r7, lr}
 8018a9e:	b085      	sub	sp, #20
 8018aa0:	af00      	add	r7, sp, #0
 8018aa2:	6078      	str	r0, [r7, #4]
 8018aa4:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8018aa6:	687b      	ldr	r3, [r7, #4]
 8018aa8:	2201      	movs	r2, #1
 8018aaa:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8018aac:	6878      	ldr	r0, [r7, #4]
 8018aae:	f7ee fe22 	bl	80076f6 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8018ab2:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8018ab4:	6838      	ldr	r0, [r7, #0]
 8018ab6:	f7ed fac2 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8018aba:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8018abc:	681c      	ldr	r4, [r3, #0]
 8018abe:	68f8      	ldr	r0, [r7, #12]
 8018ac0:	f7f4 fc1d 	bl	800d2fe <_ZSt9addressofIfEPT_RS0_>
 8018ac4:	4603      	mov	r3, r0
 8018ac6:	4619      	mov	r1, r3
 8018ac8:	2004      	movs	r0, #4
 8018aca:	f7e8 fac6 	bl	800105a <_ZnwjPv>
 8018ace:	4603      	mov	r3, r0
 8018ad0:	601c      	str	r4, [r3, #0]
    }
 8018ad2:	bf00      	nop
 8018ad4:	3714      	adds	r7, #20
 8018ad6:	46bd      	mov	sp, r7
 8018ad8:	bd90      	pop	{r4, r7, pc}

08018ada <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_I6SymbolSaISA_EEEEJRbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8018ada:	b590      	push	{r4, r7, lr}
 8018adc:	b085      	sub	sp, #20
 8018ade:	af00      	add	r7, sp, #0
 8018ae0:	6078      	str	r0, [r7, #4]
 8018ae2:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8018ae4:	687b      	ldr	r3, [r7, #4]
 8018ae6:	2202      	movs	r2, #2
 8018ae8:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8018aea:	6878      	ldr	r0, [r7, #4]
 8018aec:	f7ee fea1 	bl	8007832 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_I6SymbolSaISC_EEEEEEDcOT0_>
 8018af0:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8018af2:	6838      	ldr	r0, [r7, #0]
 8018af4:	f7ed fa5f 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8018af8:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8018afa:	781c      	ldrb	r4, [r3, #0]
 8018afc:	68f8      	ldr	r0, [r7, #12]
 8018afe:	f7f4 fc0a 	bl	800d316 <_ZSt9addressofIbEPT_RS0_>
 8018b02:	4603      	mov	r3, r0
 8018b04:	4619      	mov	r1, r3
 8018b06:	2001      	movs	r0, #1
 8018b08:	f7e8 faa7 	bl	800105a <_ZnwjPv>
 8018b0c:	4603      	mov	r3, r0
 8018b0e:	4622      	mov	r2, r4
 8018b10:	701a      	strb	r2, [r3, #0]
    }
 8018b12:	bf00      	nop
 8018b14:	3714      	adds	r7, #20
 8018b16:	46bd      	mov	sp, r7
 8018b18:	bd90      	pop	{r4, r7, pc}

08018b1a <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8018b1a:	b590      	push	{r4, r7, lr}
 8018b1c:	b085      	sub	sp, #20
 8018b1e:	af00      	add	r7, sp, #0
 8018b20:	60f8      	str	r0, [r7, #12]
 8018b22:	7239      	strb	r1, [r7, #8]
 8018b24:	607a      	str	r2, [r7, #4]
 8018b26:	68fb      	ldr	r3, [r7, #12]
 8018b28:	687a      	ldr	r2, [r7, #4]
 8018b2a:	4621      	mov	r1, r4
 8018b2c:	4618      	mov	r0, r3
 8018b2e:	f000 f91d 	bl	8018d6c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8018b32:	68fb      	ldr	r3, [r7, #12]
 8018b34:	4618      	mov	r0, r3
 8018b36:	3714      	adds	r7, #20
 8018b38:	46bd      	mov	sp, r7
 8018b3a:	bd90      	pop	{r4, r7, pc}

08018b3c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8018b3c:	b590      	push	{r4, r7, lr}
 8018b3e:	b085      	sub	sp, #20
 8018b40:	af00      	add	r7, sp, #0
 8018b42:	60f8      	str	r0, [r7, #12]
 8018b44:	7239      	strb	r1, [r7, #8]
 8018b46:	607a      	str	r2, [r7, #4]
 8018b48:	68fb      	ldr	r3, [r7, #12]
 8018b4a:	687a      	ldr	r2, [r7, #4]
 8018b4c:	4621      	mov	r1, r4
 8018b4e:	4618      	mov	r0, r3
 8018b50:	f7ff ffe3 	bl	8018b1a <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8018b54:	68fb      	ldr	r3, [r7, #12]
 8018b56:	4618      	mov	r0, r3
 8018b58:	3714      	adds	r7, #20
 8018b5a:	46bd      	mov	sp, r7
 8018b5c:	bd90      	pop	{r4, r7, pc}

08018b5e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8018b5e:	b590      	push	{r4, r7, lr}
 8018b60:	b085      	sub	sp, #20
 8018b62:	af00      	add	r7, sp, #0
 8018b64:	60f8      	str	r0, [r7, #12]
 8018b66:	7239      	strb	r1, [r7, #8]
 8018b68:	607a      	str	r2, [r7, #4]
 8018b6a:	68fb      	ldr	r3, [r7, #12]
 8018b6c:	687a      	ldr	r2, [r7, #4]
 8018b6e:	4621      	mov	r1, r4
 8018b70:	4618      	mov	r0, r3
 8018b72:	f7ff ffe3 	bl	8018b3c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8018b76:	68fb      	ldr	r3, [r7, #12]
 8018b78:	4618      	mov	r0, r3
 8018b7a:	3714      	adds	r7, #20
 8018b7c:	46bd      	mov	sp, r7
 8018b7e:	bd90      	pop	{r4, r7, pc}

08018b80 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8018b80:	b590      	push	{r4, r7, lr}
 8018b82:	b085      	sub	sp, #20
 8018b84:	af00      	add	r7, sp, #0
 8018b86:	60f8      	str	r0, [r7, #12]
 8018b88:	7239      	strb	r1, [r7, #8]
 8018b8a:	607a      	str	r2, [r7, #4]
 8018b8c:	68fb      	ldr	r3, [r7, #12]
 8018b8e:	687a      	ldr	r2, [r7, #4]
 8018b90:	4621      	mov	r1, r4
 8018b92:	4618      	mov	r0, r3
 8018b94:	f7ff ffe3 	bl	8018b5e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8018b98:	68fb      	ldr	r3, [r7, #12]
 8018b9a:	4618      	mov	r0, r3
 8018b9c:	3714      	adds	r7, #20
 8018b9e:	46bd      	mov	sp, r7
 8018ba0:	bd90      	pop	{r4, r7, pc}

08018ba2 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8018ba2:	b5b0      	push	{r4, r5, r7, lr}
 8018ba4:	b084      	sub	sp, #16
 8018ba6:	af00      	add	r7, sp, #0
 8018ba8:	60f8      	str	r0, [r7, #12]
 8018baa:	7239      	strb	r1, [r7, #8]
 8018bac:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 8018bae:	68fc      	ldr	r4, [r7, #12]
 8018bb0:	6878      	ldr	r0, [r7, #4]
 8018bb2:	f7ed fa72 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018bb6:	4603      	mov	r3, r0
 8018bb8:	461a      	mov	r2, r3
 8018bba:	4629      	mov	r1, r5
 8018bbc:	4620      	mov	r0, r4
 8018bbe:	f7ff ffdf 	bl	8018b80 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SD_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8018bc2:	68fb      	ldr	r3, [r7, #12]
 8018bc4:	4618      	mov	r0, r3
 8018bc6:	3710      	adds	r7, #16
 8018bc8:	46bd      	mov	sp, r7
 8018bca:	bdb0      	pop	{r4, r5, r7, pc}

08018bcc <_ZNKSt16initializer_listI6SymbolE4sizeEv>:
      size() const noexcept { return _M_len; }
 8018bcc:	b480      	push	{r7}
 8018bce:	b083      	sub	sp, #12
 8018bd0:	af00      	add	r7, sp, #0
 8018bd2:	6078      	str	r0, [r7, #4]
 8018bd4:	687b      	ldr	r3, [r7, #4]
 8018bd6:	685b      	ldr	r3, [r3, #4]
 8018bd8:	4618      	mov	r0, r3
 8018bda:	370c      	adds	r7, #12
 8018bdc:	46bd      	mov	sp, r7
 8018bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018be2:	4770      	bx	lr

08018be4 <_ZSt19__iterator_categoryIPK6SymbolENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
 8018be4:	b480      	push	{r7}
 8018be6:	b083      	sub	sp, #12
 8018be8:	af00      	add	r7, sp, #0
 8018bea:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 8018bec:	4618      	mov	r0, r3
 8018bee:	370c      	adds	r7, #12
 8018bf0:	46bd      	mov	sp, r7
 8018bf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018bf6:	4770      	bx	lr

08018bf8 <_ZSt10__distanceIPK6SymbolENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 8018bf8:	b480      	push	{r7}
 8018bfa:	b085      	sub	sp, #20
 8018bfc:	af00      	add	r7, sp, #0
 8018bfe:	60f8      	str	r0, [r7, #12]
 8018c00:	60b9      	str	r1, [r7, #8]
 8018c02:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 8018c04:	68ba      	ldr	r2, [r7, #8]
 8018c06:	68fb      	ldr	r3, [r7, #12]
 8018c08:	1ad3      	subs	r3, r2, r3
 8018c0a:	115b      	asrs	r3, r3, #5
    }
 8018c0c:	4618      	mov	r0, r3
 8018c0e:	3714      	adds	r7, #20
 8018c10:	46bd      	mov	sp, r7
 8018c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018c16:	4770      	bx	lr

08018c18 <_ZNSt6vectorI6SymbolSaIS0_EE17_S_check_init_lenEjRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
 8018c18:	b590      	push	{r4, r7, lr}
 8018c1a:	b085      	sub	sp, #20
 8018c1c:	af00      	add	r7, sp, #0
 8018c1e:	6078      	str	r0, [r7, #4]
 8018c20:	6039      	str	r1, [r7, #0]
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 8018c22:	f107 030c 	add.w	r3, r7, #12
 8018c26:	6839      	ldr	r1, [r7, #0]
 8018c28:	4618      	mov	r0, r3
 8018c2a:	f7f5 f9f9 	bl	800e020 <_ZNSaI6SymbolEC1ERKS0_>
 8018c2e:	f107 030c 	add.w	r3, r7, #12
 8018c32:	4618      	mov	r0, r3
 8018c34:	f000 f8b2 	bl	8018d9c <_ZNSt6vectorI6SymbolSaIS0_EE11_S_max_sizeERKS1_>
 8018c38:	4602      	mov	r2, r0
 8018c3a:	687b      	ldr	r3, [r7, #4]
 8018c3c:	4293      	cmp	r3, r2
 8018c3e:	bf8c      	ite	hi
 8018c40:	2301      	movhi	r3, #1
 8018c42:	2300      	movls	r3, #0
 8018c44:	b2dc      	uxtb	r4, r3
 8018c46:	f107 030c 	add.w	r3, r7, #12
 8018c4a:	4618      	mov	r0, r3
 8018c4c:	f7f4 fc45 	bl	800d4da <_ZNSaI6SymbolED1Ev>
 8018c50:	2c00      	cmp	r4, #0
 8018c52:	d002      	beq.n	8018c5a <_ZNSt6vectorI6SymbolSaIS0_EE17_S_check_init_lenEjRKS1_+0x42>
	  __throw_length_error(
 8018c54:	4803      	ldr	r0, [pc, #12]	; (8018c64 <_ZNSt6vectorI6SymbolSaIS0_EE17_S_check_init_lenEjRKS1_+0x4c>)
 8018c56:	f00a f8c5 	bl	8022de4 <_ZSt20__throw_length_errorPKc>
	return __n;
 8018c5a:	687b      	ldr	r3, [r7, #4]
      }
 8018c5c:	4618      	mov	r0, r3
 8018c5e:	3714      	adds	r7, #20
 8018c60:	46bd      	mov	sp, r7
 8018c62:	bd90      	pop	{r4, r7, pc}
 8018c64:	08027a70 	.word	0x08027a70

08018c68 <_ZSt22__uninitialized_copy_aIPK6SymbolPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 8018c68:	b580      	push	{r7, lr}
 8018c6a:	b084      	sub	sp, #16
 8018c6c:	af00      	add	r7, sp, #0
 8018c6e:	60f8      	str	r0, [r7, #12]
 8018c70:	60b9      	str	r1, [r7, #8]
 8018c72:	607a      	str	r2, [r7, #4]
 8018c74:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 8018c76:	687a      	ldr	r2, [r7, #4]
 8018c78:	68b9      	ldr	r1, [r7, #8]
 8018c7a:	68f8      	ldr	r0, [r7, #12]
 8018c7c:	f000 f8a8 	bl	8018dd0 <_ZSt18uninitialized_copyIPK6SymbolPS0_ET0_T_S5_S4_>
 8018c80:	4603      	mov	r3, r0
 8018c82:	4618      	mov	r0, r3
 8018c84:	3710      	adds	r7, #16
 8018c86:	46bd      	mov	sp, r7
 8018c88:	bd80      	pop	{r7, pc}

08018c8a <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8018c8a:	b590      	push	{r4, r7, lr}
 8018c8c:	b085      	sub	sp, #20
 8018c8e:	af00      	add	r7, sp, #0
 8018c90:	60f8      	str	r0, [r7, #12]
 8018c92:	7239      	strb	r1, [r7, #8]
 8018c94:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 8018c96:	6878      	ldr	r0, [r7, #4]
 8018c98:	f7ed f9ff 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018c9c:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 8018c9e:	68fb      	ldr	r3, [r7, #12]
 8018ca0:	4618      	mov	r0, r3
 8018ca2:	f7f5 fa8f 	bl	800e1c4 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 8018ca6:	4603      	mov	r3, r0
 8018ca8:	4619      	mov	r1, r3
 8018caa:	2018      	movs	r0, #24
 8018cac:	f7e8 f9d5 	bl	800105a <_ZnwjPv>
 8018cb0:	4603      	mov	r3, r0
 8018cb2:	4621      	mov	r1, r4
 8018cb4:	4618      	mov	r0, r3
 8018cb6:	f00a facf 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	}
 8018cba:	68fb      	ldr	r3, [r7, #12]
 8018cbc:	4618      	mov	r0, r3
 8018cbe:	3714      	adds	r7, #20
 8018cc0:	46bd      	mov	sp, r7
 8018cc2:	bd90      	pop	{r4, r7, pc}

08018cc4 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8018cc4:	b5b0      	push	{r4, r5, r7, lr}
 8018cc6:	b084      	sub	sp, #16
 8018cc8:	af00      	add	r7, sp, #0
 8018cca:	60f8      	str	r0, [r7, #12]
 8018ccc:	7239      	strb	r1, [r7, #8]
 8018cce:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8018cd0:	68fc      	ldr	r4, [r7, #12]
 8018cd2:	6878      	ldr	r0, [r7, #4]
 8018cd4:	f7ed f9e1 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018cd8:	4603      	mov	r3, r0
 8018cda:	461a      	mov	r2, r3
 8018cdc:	4629      	mov	r1, r5
 8018cde:	4620      	mov	r0, r4
 8018ce0:	f7ff ffd3 	bl	8018c8a <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8018ce4:	68fb      	ldr	r3, [r7, #12]
 8018ce6:	4618      	mov	r0, r3
 8018ce8:	3710      	adds	r7, #16
 8018cea:	46bd      	mov	sp, r7
 8018cec:	bdb0      	pop	{r4, r5, r7, pc}

08018cee <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj1EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8018cee:	b5b0      	push	{r4, r5, r7, lr}
 8018cf0:	b084      	sub	sp, #16
 8018cf2:	af00      	add	r7, sp, #0
 8018cf4:	60f8      	str	r0, [r7, #12]
 8018cf6:	7239      	strb	r1, [r7, #8]
 8018cf8:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8018cfa:	68fc      	ldr	r4, [r7, #12]
 8018cfc:	6878      	ldr	r0, [r7, #4]
 8018cfe:	f7ed f9cc 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018d02:	4603      	mov	r3, r0
 8018d04:	461a      	mov	r2, r3
 8018d06:	4629      	mov	r1, r5
 8018d08:	4620      	mov	r0, r4
 8018d0a:	f7ff ffdb 	bl	8018cc4 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8018d0e:	68fb      	ldr	r3, [r7, #12]
 8018d10:	4618      	mov	r0, r3
 8018d12:	3710      	adds	r7, #16
 8018d14:	46bd      	mov	sp, r7
 8018d16:	bdb0      	pop	{r4, r5, r7, pc}

08018d18 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj2EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8018d18:	b5b0      	push	{r4, r5, r7, lr}
 8018d1a:	b084      	sub	sp, #16
 8018d1c:	af00      	add	r7, sp, #0
 8018d1e:	60f8      	str	r0, [r7, #12]
 8018d20:	7239      	strb	r1, [r7, #8]
 8018d22:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8018d24:	68fc      	ldr	r4, [r7, #12]
 8018d26:	6878      	ldr	r0, [r7, #4]
 8018d28:	f7ed f9b7 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018d2c:	4603      	mov	r3, r0
 8018d2e:	461a      	mov	r2, r3
 8018d30:	4629      	mov	r1, r5
 8018d32:	4620      	mov	r0, r4
 8018d34:	f7ff ffdb 	bl	8018cee <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj1EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8018d38:	68fb      	ldr	r3, [r7, #12]
 8018d3a:	4618      	mov	r0, r3
 8018d3c:	3710      	adds	r7, #16
 8018d3e:	46bd      	mov	sp, r7
 8018d40:	bdb0      	pop	{r4, r5, r7, pc}

08018d42 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8018d42:	b5b0      	push	{r4, r5, r7, lr}
 8018d44:	b084      	sub	sp, #16
 8018d46:	af00      	add	r7, sp, #0
 8018d48:	60f8      	str	r0, [r7, #12]
 8018d4a:	7239      	strb	r1, [r7, #8]
 8018d4c:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8018d4e:	68fc      	ldr	r4, [r7, #12]
 8018d50:	6878      	ldr	r0, [r7, #4]
 8018d52:	f7ed f9a2 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018d56:	4603      	mov	r3, r0
 8018d58:	461a      	mov	r2, r3
 8018d5a:	4629      	mov	r1, r5
 8018d5c:	4620      	mov	r0, r4
 8018d5e:	f7ff ffdb 	bl	8018d18 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj2EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8018d62:	68fb      	ldr	r3, [r7, #12]
 8018d64:	4618      	mov	r0, r3
 8018d66:	3710      	adds	r7, #16
 8018d68:	46bd      	mov	sp, r7
 8018d6a:	bdb0      	pop	{r4, r5, r7, pc}

08018d6c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8018d6c:	b5b0      	push	{r4, r5, r7, lr}
 8018d6e:	b084      	sub	sp, #16
 8018d70:	af00      	add	r7, sp, #0
 8018d72:	60f8      	str	r0, [r7, #12]
 8018d74:	7239      	strb	r1, [r7, #8]
 8018d76:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 8018d78:	68fc      	ldr	r4, [r7, #12]
 8018d7a:	6878      	ldr	r0, [r7, #4]
 8018d7c:	f7ed f98d 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018d80:	4603      	mov	r3, r0
 8018d82:	461a      	mov	r2, r3
 8018d84:	4629      	mov	r1, r5
 8018d86:	4620      	mov	r0, r4
 8018d88:	f7ff ffdb 	bl	8018d42 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_I6SymbolSaISB_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8018d8c:	68fb      	ldr	r3, [r7, #12]
 8018d8e:	2203      	movs	r2, #3
 8018d90:	761a      	strb	r2, [r3, #24]
	{ }
 8018d92:	68fb      	ldr	r3, [r7, #12]
 8018d94:	4618      	mov	r0, r3
 8018d96:	3710      	adds	r7, #16
 8018d98:	46bd      	mov	sp, r7
 8018d9a:	bdb0      	pop	{r4, r5, r7, pc}

08018d9c <_ZNSt6vectorI6SymbolSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8018d9c:	b580      	push	{r7, lr}
 8018d9e:	b084      	sub	sp, #16
 8018da0:	af00      	add	r7, sp, #0
 8018da2:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8018da4:	f06f 437c 	mvn.w	r3, #4227858432	; 0xfc000000
 8018da8:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8018daa:	6878      	ldr	r0, [r7, #4]
 8018dac:	f000 f822 	bl	8018df4 <_ZNSt16allocator_traitsISaI6SymbolEE8max_sizeERKS1_>
 8018db0:	4603      	mov	r3, r0
 8018db2:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8018db4:	f107 0208 	add.w	r2, r7, #8
 8018db8:	f107 030c 	add.w	r3, r7, #12
 8018dbc:	4611      	mov	r1, r2
 8018dbe:	4618      	mov	r0, r3
 8018dc0:	f7fd fac8 	bl	8016354 <_ZSt3minIjERKT_S2_S2_>
 8018dc4:	4603      	mov	r3, r0
 8018dc6:	681b      	ldr	r3, [r3, #0]
      }
 8018dc8:	4618      	mov	r0, r3
 8018dca:	3710      	adds	r7, #16
 8018dcc:	46bd      	mov	sp, r7
 8018dce:	bd80      	pop	{r7, pc}

08018dd0 <_ZSt18uninitialized_copyIPK6SymbolPS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 8018dd0:	b580      	push	{r7, lr}
 8018dd2:	b086      	sub	sp, #24
 8018dd4:	af00      	add	r7, sp, #0
 8018dd6:	60f8      	str	r0, [r7, #12]
 8018dd8:	60b9      	str	r1, [r7, #8]
 8018dda:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 8018ddc:	2301      	movs	r3, #1
 8018dde:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 8018de0:	687a      	ldr	r2, [r7, #4]
 8018de2:	68b9      	ldr	r1, [r7, #8]
 8018de4:	68f8      	ldr	r0, [r7, #12]
 8018de6:	f000 f811 	bl	8018e0c <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK6SymbolPS2_EET0_T_S7_S6_>
 8018dea:	4603      	mov	r3, r0
    }
 8018dec:	4618      	mov	r0, r3
 8018dee:	3718      	adds	r7, #24
 8018df0:	46bd      	mov	sp, r7
 8018df2:	bd80      	pop	{r7, pc}

08018df4 <_ZNSt16allocator_traitsISaI6SymbolEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 8018df4:	b580      	push	{r7, lr}
 8018df6:	b082      	sub	sp, #8
 8018df8:	af00      	add	r7, sp, #0
 8018dfa:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8018dfc:	6878      	ldr	r0, [r7, #4]
 8018dfe:	f7f5 ff53 	bl	800eca8 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>
 8018e02:	4603      	mov	r3, r0
 8018e04:	4618      	mov	r0, r3
 8018e06:	3708      	adds	r7, #8
 8018e08:	46bd      	mov	sp, r7
 8018e0a:	bd80      	pop	{r7, pc}

08018e0c <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK6SymbolPS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 8018e0c:	b580      	push	{r7, lr}
 8018e0e:	b086      	sub	sp, #24
 8018e10:	af00      	add	r7, sp, #0
 8018e12:	60f8      	str	r0, [r7, #12]
 8018e14:	60b9      	str	r1, [r7, #8]
 8018e16:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 8018e18:	687b      	ldr	r3, [r7, #4]
 8018e1a:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 8018e1c:	68fa      	ldr	r2, [r7, #12]
 8018e1e:	68bb      	ldr	r3, [r7, #8]
 8018e20:	429a      	cmp	r2, r3
 8018e22:	d00e      	beq.n	8018e42 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK6SymbolPS2_EET0_T_S7_S6_+0x36>
		std::_Construct(std::__addressof(*__cur), *__first);
 8018e24:	6978      	ldr	r0, [r7, #20]
 8018e26:	f7f5 fe07 	bl	800ea38 <_ZSt11__addressofI6SymbolEPT_RS1_>
 8018e2a:	4603      	mov	r3, r0
 8018e2c:	68f9      	ldr	r1, [r7, #12]
 8018e2e:	4618      	mov	r0, r3
 8018e30:	f7f5 ff7b 	bl	800ed2a <_ZSt10_ConstructI6SymbolJRKS0_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 8018e34:	68fb      	ldr	r3, [r7, #12]
 8018e36:	3320      	adds	r3, #32
 8018e38:	60fb      	str	r3, [r7, #12]
 8018e3a:	697b      	ldr	r3, [r7, #20]
 8018e3c:	3320      	adds	r3, #32
 8018e3e:	617b      	str	r3, [r7, #20]
 8018e40:	e7ec      	b.n	8018e1c <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK6SymbolPS2_EET0_T_S7_S6_+0x10>
	      return __cur;
 8018e42:	697b      	ldr	r3, [r7, #20]
	}
 8018e44:	4618      	mov	r0, r3
 8018e46:	3718      	adds	r7, #24
 8018e48:	46bd      	mov	sp, r7
 8018e4a:	bd80      	pop	{r7, pc}

08018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
{
	return rx_buffer;
}

void Transmitter::report_error(std::string message)
{
 8018e4c:	b590      	push	{r4, r7, lr}
 8018e4e:	b0af      	sub	sp, #188	; 0xbc
 8018e50:	af00      	add	r7, sp, #0
 8018e52:	6078      	str	r0, [r7, #4]
	std::string line = itoa(Position_counter::get_instance().line, nullptr, 10);
 8018e54:	f7fd fd3c 	bl	80168d0 <_ZN16Position_counter12get_instanceEv>
 8018e58:	4603      	mov	r3, r0
 8018e5a:	681b      	ldr	r3, [r3, #0]
 8018e5c:	220a      	movs	r2, #10
 8018e5e:	2100      	movs	r1, #0
 8018e60:	4618      	mov	r0, r3
 8018e62:	f00b fa2f 	bl	80242c4 <itoa>
 8018e66:	4604      	mov	r4, r0
 8018e68:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8018e6c:	4618      	mov	r0, r3
 8018e6e:	f009 fefc 	bl	8022c6a <_ZNSaIcEC1Ev>
 8018e72:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8018e76:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8018e7a:	4621      	mov	r1, r4
 8018e7c:	4618      	mov	r0, r3
 8018e7e:	f7e8 fa84 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8018e82:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8018e86:	4618      	mov	r0, r3
 8018e88:	f009 fef0 	bl	8022c6c <_ZNSaIcED1Ev>
	std::string position = itoa(Position_counter::get_instance().position, nullptr, 10);
 8018e8c:	f7fd fd20 	bl	80168d0 <_ZN16Position_counter12get_instanceEv>
 8018e90:	4603      	mov	r3, r0
 8018e92:	685b      	ldr	r3, [r3, #4]
 8018e94:	220a      	movs	r2, #10
 8018e96:	2100      	movs	r1, #0
 8018e98:	4618      	mov	r0, r3
 8018e9a:	f00b fa13 	bl	80242c4 <itoa>
 8018e9e:	4604      	mov	r4, r0
 8018ea0:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8018ea4:	4618      	mov	r0, r3
 8018ea6:	f009 fee0 	bl	8022c6a <_ZNSaIcEC1Ev>
 8018eaa:	f107 0254 	add.w	r2, r7, #84	; 0x54
 8018eae:	f107 0320 	add.w	r3, r7, #32
 8018eb2:	4621      	mov	r1, r4
 8018eb4:	4618      	mov	r0, r3
 8018eb6:	f7e8 fa68 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8018eba:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8018ebe:	4618      	mov	r0, r3
 8018ec0:	f009 fed4 	bl	8022c6c <_ZNSaIcED1Ev>

	std::string full_message = message + "\nin line: " + line
 8018ec4:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8018ec8:	4a28      	ldr	r2, [pc, #160]	; (8018f6c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x120>)
 8018eca:	6879      	ldr	r1, [r7, #4]
 8018ecc:	4618      	mov	r0, r3
 8018ece:	f000 f877 	bl	8018fc0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_>
 8018ed2:	f107 0388 	add.w	r3, r7, #136	; 0x88
 8018ed6:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8018eda:	f107 01a0 	add.w	r1, r7, #160	; 0xa0
 8018ede:	4618      	mov	r0, r3
 8018ee0:	f000 f881 	bl	8018fe6 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>
			+ " in position: " + position + "\n";
 8018ee4:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8018ee8:	f107 0188 	add.w	r1, r7, #136	; 0x88
 8018eec:	4a20      	ldr	r2, [pc, #128]	; (8018f70 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x124>)
 8018eee:	4618      	mov	r0, r3
 8018ef0:	f7f6 fac8 	bl	800f484 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8018ef4:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8018ef8:	f107 0220 	add.w	r2, r7, #32
 8018efc:	f107 0170 	add.w	r1, r7, #112	; 0x70
 8018f00:	4618      	mov	r0, r3
 8018f02:	f000 f870 	bl	8018fe6 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>
 8018f06:	f107 0308 	add.w	r3, r7, #8
 8018f0a:	f107 0158 	add.w	r1, r7, #88	; 0x58
 8018f0e:	4a19      	ldr	r2, [pc, #100]	; (8018f74 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x128>)
 8018f10:	4618      	mov	r0, r3
 8018f12:	f7f6 fab7 	bl	800f484 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8018f16:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8018f1a:	4618      	mov	r0, r3
 8018f1c:	f00a f86b 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018f20:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8018f24:	4618      	mov	r0, r3
 8018f26:	f00a f866 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	std::string full_message = message + "\nin line: " + line
 8018f2a:	f107 0388 	add.w	r3, r7, #136	; 0x88
 8018f2e:	4618      	mov	r0, r3
 8018f30:	f00a f861 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018f34:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8018f38:	4618      	mov	r0, r3
 8018f3a:	f00a f85c 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>

	while (1)
	{
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 8018f3e:	f107 0308 	add.w	r3, r7, #8
 8018f42:	4618      	mov	r0, r3
 8018f44:	f00a f93e 	bl	80231c4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 8018f48:	4604      	mov	r4, r0
				full_message.length(), 100);
 8018f4a:	f107 0308 	add.w	r3, r7, #8
 8018f4e:	4618      	mov	r0, r3
 8018f50:	f00a f887 	bl	8023062 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
 8018f54:	4603      	mov	r3, r0
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 8018f56:	b29a      	uxth	r2, r3
 8018f58:	2364      	movs	r3, #100	; 0x64
 8018f5a:	4621      	mov	r1, r4
 8018f5c:	4806      	ldr	r0, [pc, #24]	; (8018f78 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x12c>)
 8018f5e:	f008 fedf 	bl	8021d20 <HAL_UART_Transmit>
		HAL_Delay(500);
 8018f62:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8018f66:	f007 fa5f 	bl	8020428 <HAL_Delay>
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 8018f6a:	e7e8      	b.n	8018f3e <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xf2>
 8018f6c:	08027ad0 	.word	0x08027ad0
 8018f70:	08027adc 	.word	0x08027adc
 8018f74:	08027aec 	.word	0x08027aec
 8018f78:	2000057c 	.word	0x2000057c

08018f7c <_ZN11Transmitter17receive_code_charEv>:
{
	HAL_UART_Receive_IT(&huart1, &rx_buffer, 1);
}

char Transmitter::receive_code_char()
{
 8018f7c:	b580      	push	{r7, lr}
 8018f7e:	af00      	add	r7, sp, #0
    static uint8_t tx_buffer = 'c';
	HAL_UART_Transmit(&huart1, &tx_buffer, 1, 100);
 8018f80:	2364      	movs	r3, #100	; 0x64
 8018f82:	2201      	movs	r2, #1
 8018f84:	490b      	ldr	r1, [pc, #44]	; (8018fb4 <_ZN11Transmitter17receive_code_charEv+0x38>)
 8018f86:	480c      	ldr	r0, [pc, #48]	; (8018fb8 <_ZN11Transmitter17receive_code_charEv+0x3c>)
 8018f88:	f008 feca 	bl	8021d20 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, &rx_buffer, 1, -1);
 8018f8c:	f04f 33ff 	mov.w	r3, #4294967295
 8018f90:	2201      	movs	r2, #1
 8018f92:	490a      	ldr	r1, [pc, #40]	; (8018fbc <_ZN11Transmitter17receive_code_charEv+0x40>)
 8018f94:	4808      	ldr	r0, [pc, #32]	; (8018fb8 <_ZN11Transmitter17receive_code_charEv+0x3c>)
 8018f96:	f008 ff56 	bl	8021e46 <HAL_UART_Receive>

	Position_counter::get_instance().update_position(rx_buffer);
 8018f9a:	f7fd fc99 	bl	80168d0 <_ZN16Position_counter12get_instanceEv>
 8018f9e:	4602      	mov	r2, r0
 8018fa0:	4b06      	ldr	r3, [pc, #24]	; (8018fbc <_ZN11Transmitter17receive_code_charEv+0x40>)
 8018fa2:	781b      	ldrb	r3, [r3, #0]
 8018fa4:	4619      	mov	r1, r3
 8018fa6:	4610      	mov	r0, r2
 8018fa8:	f7fd fcba 	bl	8016920 <_ZN16Position_counter15update_positionEh>

	return rx_buffer;
 8018fac:	4b03      	ldr	r3, [pc, #12]	; (8018fbc <_ZN11Transmitter17receive_code_charEv+0x40>)
 8018fae:	781b      	ldrb	r3, [r3, #0]
}
 8018fb0:	4618      	mov	r0, r3
 8018fb2:	bd80      	pop	{r7, pc}
 8018fb4:	20000000 	.word	0x20000000
 8018fb8:	2000057c 	.word	0x2000057c
 8018fbc:	20000454 	.word	0x20000454

08018fc0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_>:
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 8018fc0:	b580      	push	{r7, lr}
 8018fc2:	b084      	sub	sp, #16
 8018fc4:	af00      	add	r7, sp, #0
 8018fc6:	60f8      	str	r0, [r7, #12]
 8018fc8:	60b9      	str	r1, [r7, #8]
 8018fca:	607a      	str	r2, [r7, #4]
      basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
 8018fcc:	68b9      	ldr	r1, [r7, #8]
 8018fce:	68f8      	ldr	r0, [r7, #12]
 8018fd0:	f00a f942 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
      __str.append(__rhs);
 8018fd4:	6879      	ldr	r1, [r7, #4]
 8018fd6:	68f8      	ldr	r0, [r7, #12]
 8018fd8:	f00a f8de 	bl	8023198 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
      return __str;
 8018fdc:	bf00      	nop
    }
 8018fde:	68f8      	ldr	r0, [r7, #12]
 8018fe0:	3710      	adds	r7, #16
 8018fe2:	46bd      	mov	sp, r7
 8018fe4:	bd80      	pop	{r7, pc}

08018fe6 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 8018fe6:	b580      	push	{r7, lr}
 8018fe8:	b084      	sub	sp, #16
 8018fea:	af00      	add	r7, sp, #0
 8018fec:	60f8      	str	r0, [r7, #12]
 8018fee:	60b9      	str	r1, [r7, #8]
 8018ff0:	607a      	str	r2, [r7, #4]
    { return std::move(__lhs.append(__rhs)); }
 8018ff2:	6879      	ldr	r1, [r7, #4]
 8018ff4:	68b8      	ldr	r0, [r7, #8]
 8018ff6:	f00a f8b5 	bl	8023164 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 8018ffa:	4603      	mov	r3, r0
 8018ffc:	4618      	mov	r0, r3
 8018ffe:	f7f2 f8aa 	bl	800b156 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8019002:	4603      	mov	r3, r0
 8019004:	4619      	mov	r1, r3
 8019006:	68f8      	ldr	r0, [r7, #12]
 8019008:	f009 ffdb 	bl	8022fc2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 801900c:	68f8      	ldr	r0, [r7, #12]
 801900e:	3710      	adds	r7, #16
 8019010:	46bd      	mov	sp, r7
 8019012:	bd80      	pop	{r7, pc}

08019014 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>:
      ~map() = default;
 8019014:	b580      	push	{r7, lr}
 8019016:	b082      	sub	sp, #8
 8019018:	af00      	add	r7, sp, #0
 801901a:	6078      	str	r0, [r7, #4]
 801901c:	687b      	ldr	r3, [r7, #4]
 801901e:	4618      	mov	r0, r3
 8019020:	f000 f89f 	bl	8019162 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>
 8019024:	687b      	ldr	r3, [r7, #4]
 8019026:	4618      	mov	r0, r3
 8019028:	3708      	adds	r7, #8
 801902a:	46bd      	mov	sp, r7
 801902c:	bd80      	pop	{r7, pc}

0801902e <_ZN16Variable_handlerD1Ev>:

#define ADD_ARG(x) Arg.insert({#x, {}});
#define ARG(x) Variable_handler::get_instance().get_arg(#x)


class Variable_handler
 801902e:	b580      	push	{r7, lr}
 8019030:	b082      	sub	sp, #8
 8019032:	af00      	add	r7, sp, #0
 8019034:	6078      	str	r0, [r7, #4]
 8019036:	687b      	ldr	r3, [r7, #4]
 8019038:	3330      	adds	r3, #48	; 0x30
 801903a:	4618      	mov	r0, r3
 801903c:	f7ff ffea 	bl	8019014 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 8019040:	687b      	ldr	r3, [r7, #4]
 8019042:	3318      	adds	r3, #24
 8019044:	4618      	mov	r0, r3
 8019046:	f7ff ffe5 	bl	8019014 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 801904a:	687b      	ldr	r3, [r7, #4]
 801904c:	4618      	mov	r0, r3
 801904e:	f7ff ffe1 	bl	8019014 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 8019052:	687b      	ldr	r3, [r7, #4]
 8019054:	4618      	mov	r0, r3
 8019056:	3708      	adds	r7, #8
 8019058:	46bd      	mov	sp, r7
 801905a:	bd80      	pop	{r7, pc}

0801905c <__tcf_0>:
#include <Variable_handler.h>

Variable_handler& Variable_handler::get_instance()
{
	static Variable_handler instance;
 801905c:	b580      	push	{r7, lr}
 801905e:	af00      	add	r7, sp, #0
 8019060:	4801      	ldr	r0, [pc, #4]	; (8019068 <__tcf_0+0xc>)
 8019062:	f7ff ffe4 	bl	801902e <_ZN16Variable_handlerD1Ev>
 8019066:	bd80      	pop	{r7, pc}
 8019068:	200004a0 	.word	0x200004a0

0801906c <_ZN16Variable_handler12get_instanceEv>:
{
 801906c:	b580      	push	{r7, lr}
 801906e:	af00      	add	r7, sp, #0
	static Variable_handler instance;
 8019070:	4b12      	ldr	r3, [pc, #72]	; (80190bc <_ZN16Variable_handler12get_instanceEv+0x50>)
 8019072:	781b      	ldrb	r3, [r3, #0]
 8019074:	f3bf 8f5b 	dmb	ish
 8019078:	b2db      	uxtb	r3, r3
 801907a:	f003 0301 	and.w	r3, r3, #1
 801907e:	2b00      	cmp	r3, #0
 8019080:	bf0c      	ite	eq
 8019082:	2301      	moveq	r3, #1
 8019084:	2300      	movne	r3, #0
 8019086:	b2db      	uxtb	r3, r3
 8019088:	2b00      	cmp	r3, #0
 801908a:	d013      	beq.n	80190b4 <_ZN16Variable_handler12get_instanceEv+0x48>
 801908c:	480b      	ldr	r0, [pc, #44]	; (80190bc <_ZN16Variable_handler12get_instanceEv+0x50>)
 801908e:	f009 fdcc 	bl	8022c2a <__cxa_guard_acquire>
 8019092:	4603      	mov	r3, r0
 8019094:	2b00      	cmp	r3, #0
 8019096:	bf14      	ite	ne
 8019098:	2301      	movne	r3, #1
 801909a:	2300      	moveq	r3, #0
 801909c:	b2db      	uxtb	r3, r3
 801909e:	2b00      	cmp	r3, #0
 80190a0:	d008      	beq.n	80190b4 <_ZN16Variable_handler12get_instanceEv+0x48>
 80190a2:	4807      	ldr	r0, [pc, #28]	; (80190c0 <_ZN16Variable_handler12get_instanceEv+0x54>)
 80190a4:	f006 fb26 	bl	801f6f4 <_ZN16Variable_handlerC1Ev>
 80190a8:	4804      	ldr	r0, [pc, #16]	; (80190bc <_ZN16Variable_handler12get_instanceEv+0x50>)
 80190aa:	f009 fdca 	bl	8022c42 <__cxa_guard_release>
 80190ae:	4805      	ldr	r0, [pc, #20]	; (80190c4 <_ZN16Variable_handler12get_instanceEv+0x58>)
 80190b0:	f00b f8a7 	bl	8024202 <atexit>
	return instance;
 80190b4:	4b02      	ldr	r3, [pc, #8]	; (80190c0 <_ZN16Variable_handler12get_instanceEv+0x54>)
}
 80190b6:	4618      	mov	r0, r3
 80190b8:	bd80      	pop	{r7, pc}
 80190ba:	bf00      	nop
 80190bc:	200004e8 	.word	0x200004e8
 80190c0:	200004a0 	.word	0x200004a0
 80190c4:	0801905d 	.word	0x0801905d

080190c8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_arg(std::string name)
{
 80190c8:	b580      	push	{r7, lr}
 80190ca:	b082      	sub	sp, #8
 80190cc:	af00      	add	r7, sp, #0
 80190ce:	6078      	str	r0, [r7, #4]
 80190d0:	6039      	str	r1, [r7, #0]
	return Arg[name];
 80190d2:	687b      	ldr	r3, [r7, #4]
 80190d4:	3330      	adds	r3, #48	; 0x30
 80190d6:	6839      	ldr	r1, [r7, #0]
 80190d8:	4618      	mov	r0, r3
 80190da:	f000 f857 	bl	801918c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>
 80190de:	4603      	mov	r3, r0
}
 80190e0:	4618      	mov	r0, r3
 80190e2:	3708      	adds	r7, #8
 80190e4:	46bd      	mov	sp, r7
 80190e6:	bd80      	pop	{r7, pc}

080190e8 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_par(std::string name)
{
 80190e8:	b580      	push	{r7, lr}
 80190ea:	b082      	sub	sp, #8
 80190ec:	af00      	add	r7, sp, #0
 80190ee:	6078      	str	r0, [r7, #4]
 80190f0:	6039      	str	r1, [r7, #0]
	return Par[name];
 80190f2:	687b      	ldr	r3, [r7, #4]
 80190f4:	3318      	adds	r3, #24
 80190f6:	6839      	ldr	r1, [r7, #0]
 80190f8:	4618      	mov	r0, r3
 80190fa:	f000 f847 	bl	801918c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>
 80190fe:	4603      	mov	r3, r0
}
 8019100:	4618      	mov	r0, r3
 8019102:	3708      	adds	r7, #8
 8019104:	46bd      	mov	sp, r7
 8019106:	bd80      	pop	{r7, pc}

08019108 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_local(std::string name)
{
 8019108:	b580      	push	{r7, lr}
 801910a:	b082      	sub	sp, #8
 801910c:	af00      	add	r7, sp, #0
 801910e:	6078      	str	r0, [r7, #4]
 8019110:	6039      	str	r1, [r7, #0]
	return local[name];
 8019112:	687b      	ldr	r3, [r7, #4]
 8019114:	6839      	ldr	r1, [r7, #0]
 8019116:	4618      	mov	r0, r3
 8019118:	f000 f838 	bl	801918c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>
 801911c:	4603      	mov	r3, r0
}
 801911e:	4618      	mov	r0, r3
 8019120:	3708      	adds	r7, #8
 8019122:	46bd      	mov	sp, r7
 8019124:	bd80      	pop	{r7, pc}

08019126 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>:
 8019126:	b580      	push	{r7, lr}
 8019128:	b082      	sub	sp, #8
 801912a:	af00      	add	r7, sp, #0
 801912c:	6078      	str	r0, [r7, #4]
 801912e:	687b      	ldr	r3, [r7, #4]
 8019130:	3318      	adds	r3, #24
 8019132:	4618      	mov	r0, r3
 8019134:	f7ed fbc0 	bl	80068b8 <_ZN6SymbolD1Ev>
 8019138:	687b      	ldr	r3, [r7, #4]
 801913a:	4618      	mov	r0, r3
 801913c:	f009 ff5b 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8019140:	687b      	ldr	r3, [r7, #4]
 8019142:	4618      	mov	r0, r3
 8019144:	3708      	adds	r7, #8
 8019146:	46bd      	mov	sp, r7
 8019148:	bd80      	pop	{r7, pc}

0801914a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>:
	struct _Rb_tree_impl
 801914a:	b580      	push	{r7, lr}
 801914c:	b082      	sub	sp, #8
 801914e:	af00      	add	r7, sp, #0
 8019150:	6078      	str	r0, [r7, #4]
 8019152:	6878      	ldr	r0, [r7, #4]
 8019154:	f000 f88a 	bl	801926c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>
 8019158:	687b      	ldr	r3, [r7, #4]
 801915a:	4618      	mov	r0, r3
 801915c:	3708      	adds	r7, #8
 801915e:	46bd      	mov	sp, r7
 8019160:	bd80      	pop	{r7, pc}

08019162 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8019162:	b580      	push	{r7, lr}
 8019164:	b082      	sub	sp, #8
 8019166:	af00      	add	r7, sp, #0
 8019168:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 801916a:	6878      	ldr	r0, [r7, #4]
 801916c:	f000 f8a9 	bl	80192c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8019170:	4603      	mov	r3, r0
 8019172:	4619      	mov	r1, r3
 8019174:	6878      	ldr	r0, [r7, #4]
 8019176:	f000 f885 	bl	8019284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
 801917a:	687b      	ldr	r3, [r7, #4]
 801917c:	4618      	mov	r0, r3
 801917e:	f7ff ffe4 	bl	801914a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>
 8019182:	687b      	ldr	r3, [r7, #4]
 8019184:	4618      	mov	r0, r3
 8019186:	3708      	adds	r7, #8
 8019188:	46bd      	mov	sp, r7
 801918a:	bd80      	pop	{r7, pc}

0801918c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>:
      operator[](const key_type& __k)
 801918c:	b590      	push	{r4, r7, lr}
 801918e:	b08b      	sub	sp, #44	; 0x2c
 8019190:	af02      	add	r7, sp, #8
 8019192:	6078      	str	r0, [r7, #4]
 8019194:	6039      	str	r1, [r7, #0]
	iterator __i = lower_bound(__k);
 8019196:	6839      	ldr	r1, [r7, #0]
 8019198:	6878      	ldr	r0, [r7, #4]
 801919a:	f000 f89e 	bl	80192da <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE11lower_boundERSA_>
 801919e:	4603      	mov	r3, r0
 80191a0:	60bb      	str	r3, [r7, #8]
	if (__i == end() || key_comp()(__k, (*__i).first))
 80191a2:	6878      	ldr	r0, [r7, #4]
 80191a4:	f000 f8a8 	bl	80192f8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 80191a8:	4603      	mov	r3, r0
 80191aa:	60fb      	str	r3, [r7, #12]
 80191ac:	f107 020c 	add.w	r2, r7, #12
 80191b0:	f107 0308 	add.w	r3, r7, #8
 80191b4:	4611      	mov	r1, r2
 80191b6:	4618      	mov	r0, r3
 80191b8:	f000 f8ab 	bl	8019312 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 80191bc:	4603      	mov	r3, r0
 80191be:	2b00      	cmp	r3, #0
 80191c0:	d112      	bne.n	80191e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x5c>
 80191c2:	6878      	ldr	r0, [r7, #4]
 80191c4:	f000 f8b9 	bl	801933a <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE8key_compEv>
 80191c8:	f107 0308 	add.w	r3, r7, #8
 80191cc:	4618      	mov	r0, r3
 80191ce:	f000 f8c1 	bl	8019354 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 80191d2:	4603      	mov	r3, r0
 80191d4:	461a      	mov	r2, r3
 80191d6:	f107 0310 	add.w	r3, r7, #16
 80191da:	6839      	ldr	r1, [r7, #0]
 80191dc:	4618      	mov	r0, r3
 80191de:	f7e9 fedb 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80191e2:	4603      	mov	r3, r0
 80191e4:	2b00      	cmp	r3, #0
 80191e6:	d001      	beq.n	80191ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x60>
 80191e8:	2301      	movs	r3, #1
 80191ea:	e000      	b.n	80191ee <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x62>
 80191ec:	2300      	movs	r3, #0
 80191ee:	2b00      	cmp	r3, #0
 80191f0:	d01b      	beq.n	801922a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x9e>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 80191f2:	687c      	ldr	r4, [r7, #4]
 80191f4:	f107 0208 	add.w	r2, r7, #8
 80191f8:	f107 0314 	add.w	r3, r7, #20
 80191fc:	4611      	mov	r1, r2
 80191fe:	4618      	mov	r0, r3
 8019200:	f000 f8c5 	bl	801938e <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1ERKSt17_Rb_tree_iteratorIS9_E>
 8019204:	f107 0318 	add.w	r3, r7, #24
 8019208:	6839      	ldr	r1, [r7, #0]
 801920a:	4618      	mov	r0, r3
 801920c:	f000 f8b0 	bl	8019370 <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IvLb1EEES7_>
 8019210:	f107 0218 	add.w	r2, r7, #24
 8019214:	f107 031c 	add.w	r3, r7, #28
 8019218:	9300      	str	r3, [sp, #0]
 801921a:	4613      	mov	r3, r2
 801921c:	4a08      	ldr	r2, [pc, #32]	; (8019240 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0xb4>)
 801921e:	6979      	ldr	r1, [r7, #20]
 8019220:	4620      	mov	r0, r4
 8019222:	f000 f8c4 	bl	80193ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_>
 8019226:	4603      	mov	r3, r0
 8019228:	60bb      	str	r3, [r7, #8]
	return (*__i).second;
 801922a:	f107 0308 	add.w	r3, r7, #8
 801922e:	4618      	mov	r0, r3
 8019230:	f000 f890 	bl	8019354 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 8019234:	4603      	mov	r3, r0
 8019236:	3318      	adds	r3, #24
      }
 8019238:	4618      	mov	r0, r3
 801923a:	3724      	adds	r7, #36	; 0x24
 801923c:	46bd      	mov	sp, r7
 801923e:	bd90      	pop	{r4, r7, pc}
 8019240:	08027f14 	.word	0x08027f14

08019244 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>:
      insert(value_type&& __x)
 8019244:	b590      	push	{r4, r7, lr}
 8019246:	b085      	sub	sp, #20
 8019248:	af00      	add	r7, sp, #0
 801924a:	60f8      	str	r0, [r7, #12]
 801924c:	60b9      	str	r1, [r7, #8]
 801924e:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 8019250:	68bc      	ldr	r4, [r7, #8]
 8019252:	6878      	ldr	r0, [r7, #4]
 8019254:	f000 f8e9 	bl	801942a <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEONSt16remove_referenceIT_E4typeEOSC_>
 8019258:	4602      	mov	r2, r0
 801925a:	68fb      	ldr	r3, [r7, #12]
 801925c:	4621      	mov	r1, r4
 801925e:	4618      	mov	r0, r3
 8019260:	f000 f8ee 	bl	8019440 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_>
 8019264:	68f8      	ldr	r0, [r7, #12]
 8019266:	3714      	adds	r7, #20
 8019268:	46bd      	mov	sp, r7
 801926a:	bd90      	pop	{r4, r7, pc}

0801926c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 801926c:	b580      	push	{r7, lr}
 801926e:	b082      	sub	sp, #8
 8019270:	af00      	add	r7, sp, #0
 8019272:	6078      	str	r0, [r7, #4]
 8019274:	6878      	ldr	r0, [r7, #4]
 8019276:	f000 f932 	bl	80194de <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>
 801927a:	687b      	ldr	r3, [r7, #4]
 801927c:	4618      	mov	r0, r3
 801927e:	3708      	adds	r7, #8
 8019280:	46bd      	mov	sp, r7
 8019282:	bd80      	pop	{r7, pc}

08019284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8019284:	b580      	push	{r7, lr}
 8019286:	b084      	sub	sp, #16
 8019288:	af00      	add	r7, sp, #0
 801928a:	6078      	str	r0, [r7, #4]
 801928c:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 801928e:	683b      	ldr	r3, [r7, #0]
 8019290:	2b00      	cmp	r3, #0
 8019292:	d012      	beq.n	80192ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0x36>
	  _M_erase(_S_right(__x));
 8019294:	6838      	ldr	r0, [r7, #0]
 8019296:	f000 f92d 	bl	80194f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 801929a:	4603      	mov	r3, r0
 801929c:	4619      	mov	r1, r3
 801929e:	6878      	ldr	r0, [r7, #4]
 80192a0:	f7ff fff0 	bl	8019284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
	  _Link_type __y = _S_left(__x);
 80192a4:	6838      	ldr	r0, [r7, #0]
 80192a6:	f000 f931 	bl	801950c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 80192aa:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 80192ac:	6839      	ldr	r1, [r7, #0]
 80192ae:	6878      	ldr	r0, [r7, #4]
 80192b0:	f000 f938 	bl	8019524 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	  __x = __y;
 80192b4:	68fb      	ldr	r3, [r7, #12]
 80192b6:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80192b8:	e7e9      	b.n	801928e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0xa>
    }
 80192ba:	bf00      	nop
 80192bc:	3710      	adds	r7, #16
 80192be:	46bd      	mov	sp, r7
 80192c0:	bd80      	pop	{r7, pc}

080192c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 80192c2:	b480      	push	{r7}
 80192c4:	b083      	sub	sp, #12
 80192c6:	af00      	add	r7, sp, #0
 80192c8:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 80192ca:	687b      	ldr	r3, [r7, #4]
 80192cc:	689b      	ldr	r3, [r3, #8]
 80192ce:	4618      	mov	r0, r3
 80192d0:	370c      	adds	r7, #12
 80192d2:	46bd      	mov	sp, r7
 80192d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80192d8:	4770      	bx	lr

080192da <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE11lower_boundERSA_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
 80192da:	b580      	push	{r7, lr}
 80192dc:	b082      	sub	sp, #8
 80192de:	af00      	add	r7, sp, #0
 80192e0:	6078      	str	r0, [r7, #4]
 80192e2:	6039      	str	r1, [r7, #0]
      { return _M_t.lower_bound(__x); }
 80192e4:	687b      	ldr	r3, [r7, #4]
 80192e6:	6839      	ldr	r1, [r7, #0]
 80192e8:	4618      	mov	r0, r3
 80192ea:	f000 f92c 	bl	8019546 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11lower_boundERS7_>
 80192ee:	4603      	mov	r3, r0
 80192f0:	4618      	mov	r0, r3
 80192f2:	3708      	adds	r7, #8
 80192f4:	46bd      	mov	sp, r7
 80192f6:	bd80      	pop	{r7, pc}

080192f8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 80192f8:	b580      	push	{r7, lr}
 80192fa:	b082      	sub	sp, #8
 80192fc:	af00      	add	r7, sp, #0
 80192fe:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 8019300:	687b      	ldr	r3, [r7, #4]
 8019302:	4618      	mov	r0, r3
 8019304:	f000 f936 	bl	8019574 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8019308:	4603      	mov	r3, r0
 801930a:	4618      	mov	r0, r3
 801930c:	3708      	adds	r7, #8
 801930e:	46bd      	mov	sp, r7
 8019310:	bd80      	pop	{r7, pc}

08019312 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8019312:	b480      	push	{r7}
 8019314:	b083      	sub	sp, #12
 8019316:	af00      	add	r7, sp, #0
 8019318:	6078      	str	r0, [r7, #4]
 801931a:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 801931c:	687b      	ldr	r3, [r7, #4]
 801931e:	681a      	ldr	r2, [r3, #0]
 8019320:	683b      	ldr	r3, [r7, #0]
 8019322:	681b      	ldr	r3, [r3, #0]
 8019324:	429a      	cmp	r2, r3
 8019326:	bf0c      	ite	eq
 8019328:	2301      	moveq	r3, #1
 801932a:	2300      	movne	r3, #0
 801932c:	b2db      	uxtb	r3, r3
 801932e:	4618      	mov	r0, r3
 8019330:	370c      	adds	r7, #12
 8019332:	46bd      	mov	sp, r7
 8019334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019338:	4770      	bx	lr

0801933a <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE8key_compEv>:
      key_comp() const
 801933a:	b590      	push	{r4, r7, lr}
 801933c:	b083      	sub	sp, #12
 801933e:	af00      	add	r7, sp, #0
 8019340:	6078      	str	r0, [r7, #4]
      { return _M_t.key_comp(); }
 8019342:	687b      	ldr	r3, [r7, #4]
 8019344:	4618      	mov	r0, r3
 8019346:	f000 f926 	bl	8019596 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8key_compEv>
 801934a:	4623      	mov	r3, r4
 801934c:	4618      	mov	r0, r3
 801934e:	370c      	adds	r7, #12
 8019350:	46bd      	mov	sp, r7
 8019352:	bd90      	pop	{r4, r7, pc}

08019354 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8019354:	b580      	push	{r7, lr}
 8019356:	b082      	sub	sp, #8
 8019358:	af00      	add	r7, sp, #0
 801935a:	6078      	str	r0, [r7, #4]
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 801935c:	687b      	ldr	r3, [r7, #4]
 801935e:	681b      	ldr	r3, [r3, #0]
 8019360:	4618      	mov	r0, r3
 8019362:	f000 f922 	bl	80195aa <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8019366:	4603      	mov	r3, r0
 8019368:	4618      	mov	r0, r3
 801936a:	3708      	adds	r7, #8
 801936c:	46bd      	mov	sp, r7
 801936e:	bd80      	pop	{r7, pc}

08019370 <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IvLb1EEES7_>:
                   _ConstructibleTuple<_Elements...>()
                 && _TCC<_Dummy>::template
                   _ImplicitlyConvertibleTuple<_Elements...>()
                 && (sizeof...(_Elements) >= 1),
               bool>::type=true>
        constexpr tuple(const _Elements&... __elements)
 8019370:	b580      	push	{r7, lr}
 8019372:	b082      	sub	sp, #8
 8019374:	af00      	add	r7, sp, #0
 8019376:	6078      	str	r0, [r7, #4]
 8019378:	6039      	str	r1, [r7, #0]
      : _Inherited(__elements...) { }
 801937a:	687b      	ldr	r3, [r7, #4]
 801937c:	6839      	ldr	r1, [r7, #0]
 801937e:	4618      	mov	r0, r3
 8019380:	f000 f921 	bl	80195c6 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ES7_>
 8019384:	687b      	ldr	r3, [r7, #4]
 8019386:	4618      	mov	r0, r3
 8019388:	3708      	adds	r7, #8
 801938a:	46bd      	mov	sp, r7
 801938c:	bd80      	pop	{r7, pc}

0801938e <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1ERKSt17_Rb_tree_iteratorIS9_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 801938e:	b480      	push	{r7}
 8019390:	b083      	sub	sp, #12
 8019392:	af00      	add	r7, sp, #0
 8019394:	6078      	str	r0, [r7, #4]
 8019396:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8019398:	683b      	ldr	r3, [r7, #0]
 801939a:	681a      	ldr	r2, [r3, #0]
 801939c:	687b      	ldr	r3, [r7, #4]
 801939e:	601a      	str	r2, [r3, #0]
 80193a0:	687b      	ldr	r3, [r7, #4]
 80193a2:	4618      	mov	r0, r3
 80193a4:	370c      	adds	r7, #12
 80193a6:	46bd      	mov	sp, r7
 80193a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80193ac:	4770      	bx	lr

080193ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80193ae:	b5b0      	push	{r4, r5, r7, lr}
 80193b0:	b088      	sub	sp, #32
 80193b2:	af00      	add	r7, sp, #0
 80193b4:	60f8      	str	r0, [r7, #12]
 80193b6:	60b9      	str	r1, [r7, #8]
 80193b8:	607a      	str	r2, [r7, #4]
 80193ba:	603b      	str	r3, [r7, #0]
	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
 80193bc:	6878      	ldr	r0, [r7, #4]
 80193be:	f000 f911 	bl	80195e4 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 80193c2:	4604      	mov	r4, r0
 80193c4:	6838      	ldr	r0, [r7, #0]
 80193c6:	f000 f918 	bl	80195fa <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 80193ca:	4605      	mov	r5, r0
 80193cc:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80193ce:	f000 f91f 	bl	8019610 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 80193d2:	4603      	mov	r3, r0
 80193d4:	462a      	mov	r2, r5
 80193d6:	4621      	mov	r1, r4
 80193d8:	68f8      	ldr	r0, [r7, #12]
 80193da:	f000 f924 	bl	8019626 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 80193de:	61f8      	str	r0, [r7, #28]
	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
 80193e0:	69f8      	ldr	r0, [r7, #28]
 80193e2:	f000 fa66 	bl	80198b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 80193e6:	4603      	mov	r3, r0
 80193e8:	f107 0010 	add.w	r0, r7, #16
 80193ec:	68ba      	ldr	r2, [r7, #8]
 80193ee:	68f9      	ldr	r1, [r7, #12]
 80193f0:	f000 f93c 	bl	801966c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>
	    if (__res.second)
 80193f4:	697b      	ldr	r3, [r7, #20]
 80193f6:	2b00      	cmp	r3, #0
 80193f8:	d007      	beq.n	801940a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_+0x5c>
	      return _M_insert_node(__res.first, __res.second, __z);
 80193fa:	6939      	ldr	r1, [r7, #16]
 80193fc:	697a      	ldr	r2, [r7, #20]
 80193fe:	69fb      	ldr	r3, [r7, #28]
 8019400:	68f8      	ldr	r0, [r7, #12]
 8019402:	f000 fa69 	bl	80198d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E>
 8019406:	4603      	mov	r3, r0
 8019408:	e00b      	b.n	8019422 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_+0x74>
	    _M_drop_node(__z);
 801940a:	69f9      	ldr	r1, [r7, #28]
 801940c:	68f8      	ldr	r0, [r7, #12]
 801940e:	f000 f889 	bl	8019524 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	    return iterator(__res.first);
 8019412:	693a      	ldr	r2, [r7, #16]
 8019414:	f107 0318 	add.w	r3, r7, #24
 8019418:	4611      	mov	r1, r2
 801941a:	4618      	mov	r0, r3
 801941c:	f000 fa99 	bl	8019952 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019420:	69bb      	ldr	r3, [r7, #24]
      }
 8019422:	4618      	mov	r0, r3
 8019424:	3720      	adds	r7, #32
 8019426:	46bd      	mov	sp, r7
 8019428:	bdb0      	pop	{r4, r5, r7, pc}

0801942a <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEONSt16remove_referenceIT_E4typeEOSC_>:
    move(_Tp&& __t) noexcept
 801942a:	b480      	push	{r7}
 801942c:	b083      	sub	sp, #12
 801942e:	af00      	add	r7, sp, #0
 8019430:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8019432:	687b      	ldr	r3, [r7, #4]
 8019434:	4618      	mov	r0, r3
 8019436:	370c      	adds	r7, #12
 8019438:	46bd      	mov	sp, r7
 801943a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801943e:	4770      	bx	lr

08019440 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8019440:	b5b0      	push	{r4, r5, r7, lr}
 8019442:	b08e      	sub	sp, #56	; 0x38
 8019444:	af02      	add	r7, sp, #8
 8019446:	60f8      	str	r0, [r7, #12]
 8019448:	60b9      	str	r1, [r7, #8]
 801944a:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 801944c:	f107 031c 	add.w	r3, r7, #28
 8019450:	6879      	ldr	r1, [r7, #4]
 8019452:	4618      	mov	r0, r3
 8019454:	f000 fb11 	bl	8019a7a <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>
 8019458:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 801945a:	f107 0314 	add.w	r3, r7, #20
 801945e:	68b9      	ldr	r1, [r7, #8]
 8019460:	4618      	mov	r0, r3
 8019462:	f000 fa85 	bl	8019970 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 8019466:	69bb      	ldr	r3, [r7, #24]
 8019468:	2b00      	cmp	r3, #0
 801946a:	d022      	beq.n	80194b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 801946c:	f107 0310 	add.w	r3, r7, #16
 8019470:	68b9      	ldr	r1, [r7, #8]
 8019472:	4618      	mov	r0, r3
 8019474:	f000 fb0d 	bl	8019a92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>
	  return _Res(_M_insert_(__res.first, __res.second,
 8019478:	697c      	ldr	r4, [r7, #20]
 801947a:	69bd      	ldr	r5, [r7, #24]
 801947c:	6878      	ldr	r0, [r7, #4]
 801947e:	f000 fb17 	bl	8019ab0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 8019482:	4602      	mov	r2, r0
 8019484:	f107 0310 	add.w	r3, r7, #16
 8019488:	9300      	str	r3, [sp, #0]
 801948a:	4613      	mov	r3, r2
 801948c:	462a      	mov	r2, r5
 801948e:	4621      	mov	r1, r4
 8019490:	68b8      	ldr	r0, [r7, #8]
 8019492:	f000 fb18 	bl	8019ac6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_>
 8019496:	4603      	mov	r3, r0
 8019498:	623b      	str	r3, [r7, #32]
		      true);
 801949a:	2301      	movs	r3, #1
 801949c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80194a0:	f107 0227 	add.w	r2, r7, #39	; 0x27
 80194a4:	f107 0320 	add.w	r3, r7, #32
 80194a8:	4619      	mov	r1, r3
 80194aa:	68f8      	ldr	r0, [r7, #12]
 80194ac:	f000 fb54 	bl	8019b58 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>
 80194b0:	e011      	b.n	80194d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 80194b2:	697a      	ldr	r2, [r7, #20]
 80194b4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80194b8:	4611      	mov	r1, r2
 80194ba:	4618      	mov	r0, r3
 80194bc:	f000 fa49 	bl	8019952 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 80194c0:	2300      	movs	r3, #0
 80194c2:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 80194c6:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 80194ca:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80194ce:	4619      	mov	r1, r3
 80194d0:	68f8      	ldr	r0, [r7, #12]
 80194d2:	f000 fb41 	bl	8019b58 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>
    }
 80194d6:	68f8      	ldr	r0, [r7, #12]
 80194d8:	3730      	adds	r7, #48	; 0x30
 80194da:	46bd      	mov	sp, r7
 80194dc:	bdb0      	pop	{r4, r5, r7, pc}

080194de <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80194de:	b480      	push	{r7}
 80194e0:	b083      	sub	sp, #12
 80194e2:	af00      	add	r7, sp, #0
 80194e4:	6078      	str	r0, [r7, #4]
 80194e6:	687b      	ldr	r3, [r7, #4]
 80194e8:	4618      	mov	r0, r3
 80194ea:	370c      	adds	r7, #12
 80194ec:	46bd      	mov	sp, r7
 80194ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80194f2:	4770      	bx	lr

080194f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80194f4:	b480      	push	{r7}
 80194f6:	b083      	sub	sp, #12
 80194f8:	af00      	add	r7, sp, #0
 80194fa:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 80194fc:	687b      	ldr	r3, [r7, #4]
 80194fe:	68db      	ldr	r3, [r3, #12]
 8019500:	4618      	mov	r0, r3
 8019502:	370c      	adds	r7, #12
 8019504:	46bd      	mov	sp, r7
 8019506:	f85d 7b04 	ldr.w	r7, [sp], #4
 801950a:	4770      	bx	lr

0801950c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801950c:	b480      	push	{r7}
 801950e:	b083      	sub	sp, #12
 8019510:	af00      	add	r7, sp, #0
 8019512:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 8019514:	687b      	ldr	r3, [r7, #4]
 8019516:	689b      	ldr	r3, [r3, #8]
 8019518:	4618      	mov	r0, r3
 801951a:	370c      	adds	r7, #12
 801951c:	46bd      	mov	sp, r7
 801951e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019522:	4770      	bx	lr

08019524 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8019524:	b580      	push	{r7, lr}
 8019526:	b082      	sub	sp, #8
 8019528:	af00      	add	r7, sp, #0
 801952a:	6078      	str	r0, [r7, #4]
 801952c:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 801952e:	6839      	ldr	r1, [r7, #0]
 8019530:	6878      	ldr	r0, [r7, #4]
 8019532:	f000 fb2a 	bl	8019b8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>
	_M_put_node(__p);
 8019536:	6839      	ldr	r1, [r7, #0]
 8019538:	6878      	ldr	r0, [r7, #4]
 801953a:	f000 fb3b 	bl	8019bb4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>
      }
 801953e:	bf00      	nop
 8019540:	3708      	adds	r7, #8
 8019542:	46bd      	mov	sp, r7
 8019544:	bd80      	pop	{r7, pc}

08019546 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
 8019546:	b590      	push	{r4, r7, lr}
 8019548:	b083      	sub	sp, #12
 801954a:	af00      	add	r7, sp, #0
 801954c:	6078      	str	r0, [r7, #4]
 801954e:	6039      	str	r1, [r7, #0]
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
 8019550:	6878      	ldr	r0, [r7, #4]
 8019552:	f7ff feb6 	bl	80192c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8019556:	4604      	mov	r4, r0
 8019558:	6878      	ldr	r0, [r7, #4]
 801955a:	f000 fb3d 	bl	8019bd8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 801955e:	4602      	mov	r2, r0
 8019560:	683b      	ldr	r3, [r7, #0]
 8019562:	4621      	mov	r1, r4
 8019564:	6878      	ldr	r0, [r7, #4]
 8019566:	f000 fb43 	bl	8019bf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>
 801956a:	4603      	mov	r3, r0
 801956c:	4618      	mov	r0, r3
 801956e:	370c      	adds	r7, #12
 8019570:	46bd      	mov	sp, r7
 8019572:	bd90      	pop	{r4, r7, pc}

08019574 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8019574:	b580      	push	{r7, lr}
 8019576:	b084      	sub	sp, #16
 8019578:	af00      	add	r7, sp, #0
 801957a:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 801957c:	687b      	ldr	r3, [r7, #4]
 801957e:	1d1a      	adds	r2, r3, #4
 8019580:	f107 030c 	add.w	r3, r7, #12
 8019584:	4611      	mov	r1, r2
 8019586:	4618      	mov	r0, r3
 8019588:	f000 f9e3 	bl	8019952 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801958c:	68fb      	ldr	r3, [r7, #12]
 801958e:	4618      	mov	r0, r3
 8019590:	3710      	adds	r7, #16
 8019592:	46bd      	mov	sp, r7
 8019594:	bd80      	pop	{r7, pc}

08019596 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8key_compEv>:
      key_comp() const
 8019596:	b480      	push	{r7}
 8019598:	b083      	sub	sp, #12
 801959a:	af00      	add	r7, sp, #0
 801959c:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_key_compare; }
 801959e:	4618      	mov	r0, r3
 80195a0:	370c      	adds	r7, #12
 80195a2:	46bd      	mov	sp, r7
 80195a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80195a8:	4770      	bx	lr

080195aa <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>:
      _M_valptr()
 80195aa:	b580      	push	{r7, lr}
 80195ac:	b082      	sub	sp, #8
 80195ae:	af00      	add	r7, sp, #0
 80195b0:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80195b2:	687b      	ldr	r3, [r7, #4]
 80195b4:	3310      	adds	r3, #16
 80195b6:	4618      	mov	r0, r3
 80195b8:	f000 fb4b 	bl	8019c52 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>
 80195bc:	4603      	mov	r3, r0
 80195be:	4618      	mov	r0, r3
 80195c0:	3708      	adds	r7, #8
 80195c2:	46bd      	mov	sp, r7
 80195c4:	bd80      	pop	{r7, pc}

080195c6 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ES7_>:
      constexpr _Tuple_impl(const _Head& __head)
 80195c6:	b580      	push	{r7, lr}
 80195c8:	b082      	sub	sp, #8
 80195ca:	af00      	add	r7, sp, #0
 80195cc:	6078      	str	r0, [r7, #4]
 80195ce:	6039      	str	r1, [r7, #0]
      : _Base(__head) { }
 80195d0:	687b      	ldr	r3, [r7, #4]
 80195d2:	6839      	ldr	r1, [r7, #0]
 80195d4:	4618      	mov	r0, r3
 80195d6:	f000 fb48 	bl	8019c6a <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>
 80195da:	687b      	ldr	r3, [r7, #4]
 80195dc:	4618      	mov	r0, r3
 80195de:	3708      	adds	r7, #8
 80195e0:	46bd      	mov	sp, r7
 80195e2:	bd80      	pop	{r7, pc}

080195e4 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80195e4:	b480      	push	{r7}
 80195e6:	b083      	sub	sp, #12
 80195e8:	af00      	add	r7, sp, #0
 80195ea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80195ec:	687b      	ldr	r3, [r7, #4]
 80195ee:	4618      	mov	r0, r3
 80195f0:	370c      	adds	r7, #12
 80195f2:	46bd      	mov	sp, r7
 80195f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80195f8:	4770      	bx	lr

080195fa <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80195fa:	b480      	push	{r7}
 80195fc:	b083      	sub	sp, #12
 80195fe:	af00      	add	r7, sp, #0
 8019600:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019602:	687b      	ldr	r3, [r7, #4]
 8019604:	4618      	mov	r0, r3
 8019606:	370c      	adds	r7, #12
 8019608:	46bd      	mov	sp, r7
 801960a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801960e:	4770      	bx	lr

08019610 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019610:	b480      	push	{r7}
 8019612:	b083      	sub	sp, #12
 8019614:	af00      	add	r7, sp, #0
 8019616:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019618:	687b      	ldr	r3, [r7, #4]
 801961a:	4618      	mov	r0, r3
 801961c:	370c      	adds	r7, #12
 801961e:	46bd      	mov	sp, r7
 8019620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019624:	4770      	bx	lr

08019626 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8019626:	b5b0      	push	{r4, r5, r7, lr}
 8019628:	b088      	sub	sp, #32
 801962a:	af02      	add	r7, sp, #8
 801962c:	60f8      	str	r0, [r7, #12]
 801962e:	60b9      	str	r1, [r7, #8]
 8019630:	607a      	str	r2, [r7, #4]
 8019632:	603b      	str	r3, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8019634:	68f8      	ldr	r0, [r7, #12]
 8019636:	f000 fb27 	bl	8019c88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 801963a:	6178      	str	r0, [r7, #20]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 801963c:	68b8      	ldr	r0, [r7, #8]
 801963e:	f7ff ffd1 	bl	80195e4 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8019642:	4604      	mov	r4, r0
 8019644:	6878      	ldr	r0, [r7, #4]
 8019646:	f7ff ffd8 	bl	80195fa <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 801964a:	4605      	mov	r5, r0
 801964c:	6838      	ldr	r0, [r7, #0]
 801964e:	f7ff ffdf 	bl	8019610 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8019652:	4603      	mov	r3, r0
 8019654:	9300      	str	r3, [sp, #0]
 8019656:	462b      	mov	r3, r5
 8019658:	4622      	mov	r2, r4
 801965a:	6979      	ldr	r1, [r7, #20]
 801965c:	68f8      	ldr	r0, [r7, #12]
 801965e:	f000 fb24 	bl	8019caa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 8019662:	697b      	ldr	r3, [r7, #20]
	}
 8019664:	4618      	mov	r0, r3
 8019666:	3718      	adds	r7, #24
 8019668:	46bd      	mov	sp, r7
 801966a:	bdb0      	pop	{r4, r5, r7, pc}

0801966c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801966c:	b590      	push	{r4, r7, lr}
 801966e:	b08d      	sub	sp, #52	; 0x34
 8019670:	af00      	add	r7, sp, #0
 8019672:	60f8      	str	r0, [r7, #12]
 8019674:	60b9      	str	r1, [r7, #8]
 8019676:	607a      	str	r2, [r7, #4]
 8019678:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 801967a:	1d3b      	adds	r3, r7, #4
 801967c:	4618      	mov	r0, r3
 801967e:	f000 fb41 	bl	8019d04 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE13_M_const_castEv>
 8019682:	4603      	mov	r3, r0
 8019684:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8019686:	69bc      	ldr	r4, [r7, #24]
 8019688:	68b8      	ldr	r0, [r7, #8]
 801968a:	f000 faa5 	bl	8019bd8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 801968e:	4603      	mov	r3, r0
 8019690:	429c      	cmp	r4, r3
 8019692:	bf0c      	ite	eq
 8019694:	2301      	moveq	r3, #1
 8019696:	2300      	movne	r3, #0
 8019698:	b2db      	uxtb	r3, r3
 801969a:	2b00      	cmp	r3, #0
 801969c:	d030      	beq.n	8019700 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x94>
	  if (size() > 0
 801969e:	68b8      	ldr	r0, [r7, #8]
 80196a0:	f000 fb41 	bl	8019d26 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>
 80196a4:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 80196a6:	2b00      	cmp	r3, #0
 80196a8:	d013      	beq.n	80196d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 80196aa:	68bc      	ldr	r4, [r7, #8]
 80196ac:	68b8      	ldr	r0, [r7, #8]
 80196ae:	f000 fb46 	bl	8019d3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80196b2:	4603      	mov	r3, r0
 80196b4:	681b      	ldr	r3, [r3, #0]
 80196b6:	4618      	mov	r0, r3
 80196b8:	f000 fb4d 	bl	8019d56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80196bc:	4603      	mov	r3, r0
 80196be:	683a      	ldr	r2, [r7, #0]
 80196c0:	4619      	mov	r1, r3
 80196c2:	4620      	mov	r0, r4
 80196c4:	f7e9 fc68 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80196c8:	4603      	mov	r3, r0
 80196ca:	2b00      	cmp	r3, #0
 80196cc:	d001      	beq.n	80196d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 80196ce:	2301      	movs	r3, #1
 80196d0:	e000      	b.n	80196d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x68>
 80196d2:	2300      	movs	r3, #0
	  if (size() > 0
 80196d4:	2b00      	cmp	r3, #0
 80196d6:	d00c      	beq.n	80196f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x86>
	    return _Res(0, _M_rightmost());
 80196d8:	2300      	movs	r3, #0
 80196da:	61fb      	str	r3, [r7, #28]
 80196dc:	68b8      	ldr	r0, [r7, #8]
 80196de:	f000 fb2e 	bl	8019d3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80196e2:	4602      	mov	r2, r0
 80196e4:	f107 031c 	add.w	r3, r7, #28
 80196e8:	4619      	mov	r1, r3
 80196ea:	68f8      	ldr	r0, [r7, #12]
 80196ec:	f7e9 fad4 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80196f0:	e0db      	b.n	80198aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80196f2:	68fb      	ldr	r3, [r7, #12]
 80196f4:	683a      	ldr	r2, [r7, #0]
 80196f6:	68b9      	ldr	r1, [r7, #8]
 80196f8:	4618      	mov	r0, r3
 80196fa:	f000 f939 	bl	8019970 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80196fe:	e0d4      	b.n	80198aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8019700:	68bc      	ldr	r4, [r7, #8]
 8019702:	69bb      	ldr	r3, [r7, #24]
 8019704:	4618      	mov	r0, r3
 8019706:	f000 fb26 	bl	8019d56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801970a:	4603      	mov	r3, r0
 801970c:	461a      	mov	r2, r3
 801970e:	6839      	ldr	r1, [r7, #0]
 8019710:	4620      	mov	r0, r4
 8019712:	f7e9 fc41 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019716:	4603      	mov	r3, r0
 8019718:	2b00      	cmp	r3, #0
 801971a:	d057      	beq.n	80197cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x160>
	  iterator __before = __pos;
 801971c:	69bb      	ldr	r3, [r7, #24]
 801971e:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8019720:	69bc      	ldr	r4, [r7, #24]
 8019722:	68b8      	ldr	r0, [r7, #8]
 8019724:	f000 fb23 	bl	8019d6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8019728:	4603      	mov	r3, r0
 801972a:	681b      	ldr	r3, [r3, #0]
 801972c:	429c      	cmp	r4, r3
 801972e:	bf0c      	ite	eq
 8019730:	2301      	moveq	r3, #1
 8019732:	2300      	movne	r3, #0
 8019734:	b2db      	uxtb	r3, r3
 8019736:	2b00      	cmp	r3, #0
 8019738:	d00d      	beq.n	8019756 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 801973a:	68b8      	ldr	r0, [r7, #8]
 801973c:	f000 fb17 	bl	8019d6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8019740:	4604      	mov	r4, r0
 8019742:	68b8      	ldr	r0, [r7, #8]
 8019744:	f000 fb13 	bl	8019d6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8019748:	4603      	mov	r3, r0
 801974a:	461a      	mov	r2, r3
 801974c:	4621      	mov	r1, r4
 801974e:	68f8      	ldr	r0, [r7, #12]
 8019750:	f7e9 fb49 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8019754:	e0a9      	b.n	80198aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8019756:	68bc      	ldr	r4, [r7, #8]
 8019758:	f107 0314 	add.w	r3, r7, #20
 801975c:	4618      	mov	r0, r3
 801975e:	f000 fb12 	bl	8019d86 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>
 8019762:	4603      	mov	r3, r0
 8019764:	681b      	ldr	r3, [r3, #0]
 8019766:	4618      	mov	r0, r3
 8019768:	f000 faf5 	bl	8019d56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801976c:	4603      	mov	r3, r0
 801976e:	683a      	ldr	r2, [r7, #0]
 8019770:	4619      	mov	r1, r3
 8019772:	4620      	mov	r0, r4
 8019774:	f7e9 fc10 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019778:	4603      	mov	r3, r0
 801977a:	2b00      	cmp	r3, #0
 801977c:	d01f      	beq.n	80197be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x152>
	      if (_S_right(__before._M_node) == 0)
 801977e:	697b      	ldr	r3, [r7, #20]
 8019780:	4618      	mov	r0, r3
 8019782:	f7ff feb7 	bl	80194f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8019786:	4603      	mov	r3, r0
 8019788:	2b00      	cmp	r3, #0
 801978a:	bf0c      	ite	eq
 801978c:	2301      	moveq	r3, #1
 801978e:	2300      	movne	r3, #0
 8019790:	b2db      	uxtb	r3, r3
 8019792:	2b00      	cmp	r3, #0
 8019794:	d00a      	beq.n	80197ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x140>
		return _Res(0, __before._M_node);
 8019796:	2300      	movs	r3, #0
 8019798:	623b      	str	r3, [r7, #32]
 801979a:	f107 0214 	add.w	r2, r7, #20
 801979e:	f107 0320 	add.w	r3, r7, #32
 80197a2:	4619      	mov	r1, r3
 80197a4:	68f8      	ldr	r0, [r7, #12]
 80197a6:	f7e9 fa77 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80197aa:	e07e      	b.n	80198aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 80197ac:	f107 0218 	add.w	r2, r7, #24
 80197b0:	f107 0318 	add.w	r3, r7, #24
 80197b4:	4619      	mov	r1, r3
 80197b6:	68f8      	ldr	r0, [r7, #12]
 80197b8:	f7e9 fb15 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80197bc:	e075      	b.n	80198aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80197be:	68fb      	ldr	r3, [r7, #12]
 80197c0:	683a      	ldr	r2, [r7, #0]
 80197c2:	68b9      	ldr	r1, [r7, #8]
 80197c4:	4618      	mov	r0, r3
 80197c6:	f000 f8d3 	bl	8019970 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80197ca:	e06e      	b.n	80198aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 80197cc:	68bc      	ldr	r4, [r7, #8]
 80197ce:	69bb      	ldr	r3, [r7, #24]
 80197d0:	4618      	mov	r0, r3
 80197d2:	f000 fac0 	bl	8019d56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80197d6:	4603      	mov	r3, r0
 80197d8:	683a      	ldr	r2, [r7, #0]
 80197da:	4619      	mov	r1, r3
 80197dc:	4620      	mov	r0, r4
 80197de:	f7e9 fbdb 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80197e2:	4603      	mov	r3, r0
 80197e4:	2b00      	cmp	r3, #0
 80197e6:	d056      	beq.n	8019896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x22a>
	  iterator __after = __pos;
 80197e8:	69bb      	ldr	r3, [r7, #24]
 80197ea:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 80197ec:	69bc      	ldr	r4, [r7, #24]
 80197ee:	68b8      	ldr	r0, [r7, #8]
 80197f0:	f000 faa5 	bl	8019d3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80197f4:	4603      	mov	r3, r0
 80197f6:	681b      	ldr	r3, [r3, #0]
 80197f8:	429c      	cmp	r4, r3
 80197fa:	bf0c      	ite	eq
 80197fc:	2301      	moveq	r3, #1
 80197fe:	2300      	movne	r3, #0
 8019800:	b2db      	uxtb	r3, r3
 8019802:	2b00      	cmp	r3, #0
 8019804:	d00c      	beq.n	8019820 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x1b4>
	    return _Res(0, _M_rightmost());
 8019806:	2300      	movs	r3, #0
 8019808:	627b      	str	r3, [r7, #36]	; 0x24
 801980a:	68b8      	ldr	r0, [r7, #8]
 801980c:	f000 fa97 	bl	8019d3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019810:	4602      	mov	r2, r0
 8019812:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8019816:	4619      	mov	r1, r3
 8019818:	68f8      	ldr	r0, [r7, #12]
 801981a:	f7e9 fa3d 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 801981e:	e044      	b.n	80198aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8019820:	68bc      	ldr	r4, [r7, #8]
 8019822:	f107 0310 	add.w	r3, r7, #16
 8019826:	4618      	mov	r0, r3
 8019828:	f000 fabe 	bl	8019da8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>
 801982c:	4603      	mov	r3, r0
 801982e:	681b      	ldr	r3, [r3, #0]
 8019830:	4618      	mov	r0, r3
 8019832:	f000 fa90 	bl	8019d56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019836:	4603      	mov	r3, r0
 8019838:	461a      	mov	r2, r3
 801983a:	6839      	ldr	r1, [r7, #0]
 801983c:	4620      	mov	r0, r4
 801983e:	f7e9 fbab 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019842:	4603      	mov	r3, r0
 8019844:	2b00      	cmp	r3, #0
 8019846:	d01f      	beq.n	8019888 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 8019848:	69bb      	ldr	r3, [r7, #24]
 801984a:	4618      	mov	r0, r3
 801984c:	f7ff fe52 	bl	80194f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8019850:	4603      	mov	r3, r0
 8019852:	2b00      	cmp	r3, #0
 8019854:	bf0c      	ite	eq
 8019856:	2301      	moveq	r3, #1
 8019858:	2300      	movne	r3, #0
 801985a:	b2db      	uxtb	r3, r3
 801985c:	2b00      	cmp	r3, #0
 801985e:	d00a      	beq.n	8019876 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x20a>
		return _Res(0, __pos._M_node);
 8019860:	2300      	movs	r3, #0
 8019862:	62bb      	str	r3, [r7, #40]	; 0x28
 8019864:	f107 0218 	add.w	r2, r7, #24
 8019868:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801986c:	4619      	mov	r1, r3
 801986e:	68f8      	ldr	r0, [r7, #12]
 8019870:	f7e9 fa12 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8019874:	e019      	b.n	80198aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8019876:	f107 0210 	add.w	r2, r7, #16
 801987a:	f107 0310 	add.w	r3, r7, #16
 801987e:	4619      	mov	r1, r3
 8019880:	68f8      	ldr	r0, [r7, #12]
 8019882:	f7e9 fab0 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8019886:	e010      	b.n	80198aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8019888:	68fb      	ldr	r3, [r7, #12]
 801988a:	683a      	ldr	r2, [r7, #0]
 801988c:	68b9      	ldr	r1, [r7, #8]
 801988e:	4618      	mov	r0, r3
 8019890:	f000 f86e 	bl	8019970 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8019894:	e009      	b.n	80198aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	return _Res(__pos._M_node, 0);
 8019896:	2300      	movs	r3, #0
 8019898:	62fb      	str	r3, [r7, #44]	; 0x2c
 801989a:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801989e:	f107 0318 	add.w	r3, r7, #24
 80198a2:	4619      	mov	r1, r3
 80198a4:	68f8      	ldr	r0, [r7, #12]
 80198a6:	f7e9 fad9 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80198aa:	68f8      	ldr	r0, [r7, #12]
 80198ac:	3734      	adds	r7, #52	; 0x34
 80198ae:	46bd      	mov	sp, r7
 80198b0:	bd90      	pop	{r4, r7, pc}

080198b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>:
      _S_key(_Const_Link_type __x)
 80198b2:	b580      	push	{r7, lr}
 80198b4:	b084      	sub	sp, #16
 80198b6:	af00      	add	r7, sp, #0
 80198b8:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 80198ba:	6878      	ldr	r0, [r7, #4]
 80198bc:	f000 fa85 	bl	8019dca <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 80198c0:	4602      	mov	r2, r0
 80198c2:	f107 030c 	add.w	r3, r7, #12
 80198c6:	4611      	mov	r1, r2
 80198c8:	4618      	mov	r0, r3
 80198ca:	f000 fa8c 	bl	8019de6 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERKS9_>
 80198ce:	4603      	mov	r3, r0
      }
 80198d0:	4618      	mov	r0, r3
 80198d2:	3710      	adds	r7, #16
 80198d4:	46bd      	mov	sp, r7
 80198d6:	bd80      	pop	{r7, pc}

080198d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80198d8:	b5b0      	push	{r4, r5, r7, lr}
 80198da:	b086      	sub	sp, #24
 80198dc:	af00      	add	r7, sp, #0
 80198de:	60f8      	str	r0, [r7, #12]
 80198e0:	60b9      	str	r1, [r7, #8]
 80198e2:	607a      	str	r2, [r7, #4]
 80198e4:	603b      	str	r3, [r7, #0]
			    || _M_impl._M_key_compare(_S_key(__z),
 80198e6:	68bb      	ldr	r3, [r7, #8]
 80198e8:	2b00      	cmp	r3, #0
 80198ea:	d117      	bne.n	801991c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x44>
      bool __insert_left = (__x != 0 || __p == _M_end()
 80198ec:	68f8      	ldr	r0, [r7, #12]
 80198ee:	f000 f973 	bl	8019bd8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 80198f2:	4602      	mov	r2, r0
 80198f4:	687b      	ldr	r3, [r7, #4]
 80198f6:	4293      	cmp	r3, r2
 80198f8:	d010      	beq.n	801991c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x44>
			    || _M_impl._M_key_compare(_S_key(__z),
 80198fa:	68fc      	ldr	r4, [r7, #12]
 80198fc:	6838      	ldr	r0, [r7, #0]
 80198fe:	f7ff ffd8 	bl	80198b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8019902:	4605      	mov	r5, r0
 8019904:	6878      	ldr	r0, [r7, #4]
 8019906:	f000 fa26 	bl	8019d56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801990a:	4603      	mov	r3, r0
 801990c:	461a      	mov	r2, r3
 801990e:	4629      	mov	r1, r5
 8019910:	4620      	mov	r0, r4
 8019912:	f7e9 fb41 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019916:	4603      	mov	r3, r0
 8019918:	2b00      	cmp	r3, #0
 801991a:	d001      	beq.n	8019920 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x48>
 801991c:	2301      	movs	r3, #1
 801991e:	e000      	b.n	8019922 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x4a>
 8019920:	2300      	movs	r3, #0
      bool __insert_left = (__x != 0 || __p == _M_end()
 8019922:	75fb      	strb	r3, [r7, #23]
				    this->_M_impl._M_header);
 8019924:	68fb      	ldr	r3, [r7, #12]
 8019926:	3304      	adds	r3, #4
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8019928:	7df8      	ldrb	r0, [r7, #23]
 801992a:	687a      	ldr	r2, [r7, #4]
 801992c:	6839      	ldr	r1, [r7, #0]
 801992e:	f009 f9f4 	bl	8022d1a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
      ++_M_impl._M_node_count;
 8019932:	68fb      	ldr	r3, [r7, #12]
 8019934:	695b      	ldr	r3, [r3, #20]
 8019936:	1c5a      	adds	r2, r3, #1
 8019938:	68fb      	ldr	r3, [r7, #12]
 801993a:	615a      	str	r2, [r3, #20]
      return iterator(__z);
 801993c:	f107 0310 	add.w	r3, r7, #16
 8019940:	6839      	ldr	r1, [r7, #0]
 8019942:	4618      	mov	r0, r3
 8019944:	f000 f805 	bl	8019952 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019948:	693b      	ldr	r3, [r7, #16]
    }
 801994a:	4618      	mov	r0, r3
 801994c:	3718      	adds	r7, #24
 801994e:	46bd      	mov	sp, r7
 8019950:	bdb0      	pop	{r4, r5, r7, pc}

08019952 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8019952:	b480      	push	{r7}
 8019954:	b083      	sub	sp, #12
 8019956:	af00      	add	r7, sp, #0
 8019958:	6078      	str	r0, [r7, #4]
 801995a:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 801995c:	687b      	ldr	r3, [r7, #4]
 801995e:	683a      	ldr	r2, [r7, #0]
 8019960:	601a      	str	r2, [r3, #0]
 8019962:	687b      	ldr	r3, [r7, #4]
 8019964:	4618      	mov	r0, r3
 8019966:	370c      	adds	r7, #12
 8019968:	46bd      	mov	sp, r7
 801996a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801996e:	4770      	bx	lr

08019970 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8019970:	b590      	push	{r4, r7, lr}
 8019972:	b08b      	sub	sp, #44	; 0x2c
 8019974:	af00      	add	r7, sp, #0
 8019976:	60f8      	str	r0, [r7, #12]
 8019978:	60b9      	str	r1, [r7, #8]
 801997a:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 801997c:	68b8      	ldr	r0, [r7, #8]
 801997e:	f7ff fca0 	bl	80192c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8019982:	4603      	mov	r3, r0
 8019984:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8019986:	68b8      	ldr	r0, [r7, #8]
 8019988:	f000 f926 	bl	8019bd8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 801998c:	4603      	mov	r3, r0
 801998e:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8019990:	2301      	movs	r3, #1
 8019992:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8019996:	69bb      	ldr	r3, [r7, #24]
 8019998:	2b00      	cmp	r3, #0
 801999a:	d020      	beq.n	80199de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 801999c:	69bb      	ldr	r3, [r7, #24]
 801999e:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 80199a0:	68bc      	ldr	r4, [r7, #8]
 80199a2:	69bb      	ldr	r3, [r7, #24]
 80199a4:	4618      	mov	r0, r3
 80199a6:	f7ff ff84 	bl	80198b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 80199aa:	4603      	mov	r3, r0
 80199ac:	461a      	mov	r2, r3
 80199ae:	6879      	ldr	r1, [r7, #4]
 80199b0:	4620      	mov	r0, r4
 80199b2:	f7e9 faf1 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80199b6:	4603      	mov	r3, r0
 80199b8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 80199bc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80199c0:	2b00      	cmp	r3, #0
 80199c2:	d005      	beq.n	80199d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x60>
 80199c4:	69bb      	ldr	r3, [r7, #24]
 80199c6:	4618      	mov	r0, r3
 80199c8:	f7ff fda0 	bl	801950c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 80199cc:	4603      	mov	r3, r0
 80199ce:	e004      	b.n	80199da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6a>
 80199d0:	69bb      	ldr	r3, [r7, #24]
 80199d2:	4618      	mov	r0, r3
 80199d4:	f7ff fd8e 	bl	80194f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 80199d8:	4603      	mov	r3, r0
 80199da:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 80199dc:	e7db      	b.n	8019996 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 80199de:	697a      	ldr	r2, [r7, #20]
 80199e0:	f107 0310 	add.w	r3, r7, #16
 80199e4:	4611      	mov	r1, r2
 80199e6:	4618      	mov	r0, r3
 80199e8:	f7ff ffb3 	bl	8019952 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 80199ec:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80199f0:	2b00      	cmp	r3, #0
 80199f2:	d01d      	beq.n	8019a30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 80199f4:	68b8      	ldr	r0, [r7, #8]
 80199f6:	f000 fa02 	bl	8019dfe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 80199fa:	4603      	mov	r3, r0
 80199fc:	61fb      	str	r3, [r7, #28]
 80199fe:	f107 021c 	add.w	r2, r7, #28
 8019a02:	f107 0310 	add.w	r3, r7, #16
 8019a06:	4611      	mov	r1, r2
 8019a08:	4618      	mov	r0, r3
 8019a0a:	f7ff fc82 	bl	8019312 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8019a0e:	4603      	mov	r3, r0
 8019a10:	2b00      	cmp	r3, #0
 8019a12:	d008      	beq.n	8019a26 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 8019a14:	f107 0214 	add.w	r2, r7, #20
 8019a18:	f107 0318 	add.w	r3, r7, #24
 8019a1c:	4619      	mov	r1, r3
 8019a1e:	68f8      	ldr	r0, [r7, #12]
 8019a20:	f000 f9fe 	bl	8019e20 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>
 8019a24:	e025      	b.n	8019a72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 8019a26:	f107 0310 	add.w	r3, r7, #16
 8019a2a:	4618      	mov	r0, r3
 8019a2c:	f000 f9ab 	bl	8019d86 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8019a30:	68bc      	ldr	r4, [r7, #8]
 8019a32:	693b      	ldr	r3, [r7, #16]
 8019a34:	4618      	mov	r0, r3
 8019a36:	f000 f98e 	bl	8019d56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019a3a:	4603      	mov	r3, r0
 8019a3c:	687a      	ldr	r2, [r7, #4]
 8019a3e:	4619      	mov	r1, r3
 8019a40:	4620      	mov	r0, r4
 8019a42:	f7e9 faa9 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019a46:	4603      	mov	r3, r0
 8019a48:	2b00      	cmp	r3, #0
 8019a4a:	d008      	beq.n	8019a5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 8019a4c:	f107 0214 	add.w	r2, r7, #20
 8019a50:	f107 0318 	add.w	r3, r7, #24
 8019a54:	4619      	mov	r1, r3
 8019a56:	68f8      	ldr	r0, [r7, #12]
 8019a58:	f000 f9e2 	bl	8019e20 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>
 8019a5c:	e009      	b.n	8019a72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 8019a5e:	2300      	movs	r3, #0
 8019a60:	623b      	str	r3, [r7, #32]
 8019a62:	f107 0220 	add.w	r2, r7, #32
 8019a66:	f107 0310 	add.w	r3, r7, #16
 8019a6a:	4619      	mov	r1, r3
 8019a6c:	68f8      	ldr	r0, [r7, #12]
 8019a6e:	f7e9 f9f5 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8019a72:	68f8      	ldr	r0, [r7, #12]
 8019a74:	372c      	adds	r7, #44	; 0x2c
 8019a76:	46bd      	mov	sp, r7
 8019a78:	bd90      	pop	{r4, r7, pc}

08019a7a <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>:
      operator()(_Pair& __x) const
 8019a7a:	b480      	push	{r7}
 8019a7c:	b083      	sub	sp, #12
 8019a7e:	af00      	add	r7, sp, #0
 8019a80:	6078      	str	r0, [r7, #4]
 8019a82:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8019a84:	683b      	ldr	r3, [r7, #0]
 8019a86:	4618      	mov	r0, r3
 8019a88:	370c      	adds	r7, #12
 8019a8a:	46bd      	mov	sp, r7
 8019a8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019a90:	4770      	bx	lr

08019a92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>:
	_Alloc_node(_Rb_tree& __t)
 8019a92:	b480      	push	{r7}
 8019a94:	b083      	sub	sp, #12
 8019a96:	af00      	add	r7, sp, #0
 8019a98:	6078      	str	r0, [r7, #4]
 8019a9a:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 8019a9c:	687b      	ldr	r3, [r7, #4]
 8019a9e:	683a      	ldr	r2, [r7, #0]
 8019aa0:	601a      	str	r2, [r3, #0]
 8019aa2:	687b      	ldr	r3, [r7, #4]
 8019aa4:	4618      	mov	r0, r3
 8019aa6:	370c      	adds	r7, #12
 8019aa8:	46bd      	mov	sp, r7
 8019aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019aae:	4770      	bx	lr

08019ab0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019ab0:	b480      	push	{r7}
 8019ab2:	b083      	sub	sp, #12
 8019ab4:	af00      	add	r7, sp, #0
 8019ab6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019ab8:	687b      	ldr	r3, [r7, #4]
 8019aba:	4618      	mov	r0, r3
 8019abc:	370c      	adds	r7, #12
 8019abe:	46bd      	mov	sp, r7
 8019ac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019ac4:	4770      	bx	lr

08019ac6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8019ac6:	b5b0      	push	{r4, r5, r7, lr}
 8019ac8:	b088      	sub	sp, #32
 8019aca:	af00      	add	r7, sp, #0
 8019acc:	60f8      	str	r0, [r7, #12]
 8019ace:	60b9      	str	r1, [r7, #8]
 8019ad0:	607a      	str	r2, [r7, #4]
 8019ad2:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8019ad4:	68bb      	ldr	r3, [r7, #8]
 8019ad6:	2b00      	cmp	r3, #0
 8019ad8:	d11a      	bne.n	8019b10 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8019ada:	68f8      	ldr	r0, [r7, #12]
 8019adc:	f000 f87c 	bl	8019bd8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8019ae0:	4602      	mov	r2, r0
 8019ae2:	687b      	ldr	r3, [r7, #4]
 8019ae4:	4293      	cmp	r3, r2
 8019ae6:	d013      	beq.n	8019b10 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8019ae8:	68fc      	ldr	r4, [r7, #12]
 8019aea:	f107 0310 	add.w	r3, r7, #16
 8019aee:	6839      	ldr	r1, [r7, #0]
 8019af0:	4618      	mov	r0, r3
 8019af2:	f7ff ffc2 	bl	8019a7a <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>
 8019af6:	4605      	mov	r5, r0
 8019af8:	6878      	ldr	r0, [r7, #4]
 8019afa:	f000 f92c 	bl	8019d56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019afe:	4603      	mov	r3, r0
 8019b00:	461a      	mov	r2, r3
 8019b02:	4629      	mov	r1, r5
 8019b04:	4620      	mov	r0, r4
 8019b06:	f7e9 fa47 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019b0a:	4603      	mov	r3, r0
 8019b0c:	2b00      	cmp	r3, #0
 8019b0e:	d001      	beq.n	8019b14 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4e>
 8019b10:	2301      	movs	r3, #1
 8019b12:	e000      	b.n	8019b16 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x50>
 8019b14:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8019b16:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8019b18:	6838      	ldr	r0, [r7, #0]
 8019b1a:	f7ff ffc9 	bl	8019ab0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 8019b1e:	4603      	mov	r3, r0
 8019b20:	4619      	mov	r1, r3
 8019b22:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8019b24:	f000 f995 	bl	8019e52 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIS9_EEPSt13_Rb_tree_nodeIS9_EOT_>
 8019b28:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8019b2a:	68fb      	ldr	r3, [r7, #12]
 8019b2c:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8019b2e:	7ff8      	ldrb	r0, [r7, #31]
 8019b30:	687a      	ldr	r2, [r7, #4]
 8019b32:	69b9      	ldr	r1, [r7, #24]
 8019b34:	f009 f8f1 	bl	8022d1a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8019b38:	68fb      	ldr	r3, [r7, #12]
 8019b3a:	695b      	ldr	r3, [r3, #20]
 8019b3c:	1c5a      	adds	r2, r3, #1
 8019b3e:	68fb      	ldr	r3, [r7, #12]
 8019b40:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 8019b42:	f107 0314 	add.w	r3, r7, #20
 8019b46:	69b9      	ldr	r1, [r7, #24]
 8019b48:	4618      	mov	r0, r3
 8019b4a:	f7ff ff02 	bl	8019952 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019b4e:	697b      	ldr	r3, [r7, #20]
      }
 8019b50:	4618      	mov	r0, r3
 8019b52:	3720      	adds	r7, #32
 8019b54:	46bd      	mov	sp, r7
 8019b56:	bdb0      	pop	{r4, r5, r7, pc}

08019b58 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8019b58:	b580      	push	{r7, lr}
 8019b5a:	b084      	sub	sp, #16
 8019b5c:	af00      	add	r7, sp, #0
 8019b5e:	60f8      	str	r0, [r7, #12]
 8019b60:	60b9      	str	r1, [r7, #8]
 8019b62:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8019b64:	68b8      	ldr	r0, [r7, #8]
 8019b66:	f000 f988 	bl	8019e7a <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISC_E4typeE>
 8019b6a:	4602      	mov	r2, r0
 8019b6c:	68fb      	ldr	r3, [r7, #12]
 8019b6e:	6812      	ldr	r2, [r2, #0]
 8019b70:	601a      	str	r2, [r3, #0]
 8019b72:	6878      	ldr	r0, [r7, #4]
 8019b74:	f7f1 facd 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8019b78:	4603      	mov	r3, r0
 8019b7a:	781a      	ldrb	r2, [r3, #0]
 8019b7c:	68fb      	ldr	r3, [r7, #12]
 8019b7e:	711a      	strb	r2, [r3, #4]
 8019b80:	68fb      	ldr	r3, [r7, #12]
 8019b82:	4618      	mov	r0, r3
 8019b84:	3710      	adds	r7, #16
 8019b86:	46bd      	mov	sp, r7
 8019b88:	bd80      	pop	{r7, pc}

08019b8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8019b8a:	b590      	push	{r4, r7, lr}
 8019b8c:	b083      	sub	sp, #12
 8019b8e:	af00      	add	r7, sp, #0
 8019b90:	6078      	str	r0, [r7, #4]
 8019b92:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8019b94:	6878      	ldr	r0, [r7, #4]
 8019b96:	f000 f97b 	bl	8019e90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019b9a:	4604      	mov	r4, r0
 8019b9c:	6838      	ldr	r0, [r7, #0]
 8019b9e:	f7ff fd04 	bl	80195aa <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8019ba2:	4603      	mov	r3, r0
 8019ba4:	4619      	mov	r1, r3
 8019ba6:	4620      	mov	r0, r4
 8019ba8:	f000 f97d 	bl	8019ea6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE7destroyISA_EEvRSC_PT_>
      }
 8019bac:	bf00      	nop
 8019bae:	370c      	adds	r7, #12
 8019bb0:	46bd      	mov	sp, r7
 8019bb2:	bd90      	pop	{r4, r7, pc}

08019bb4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8019bb4:	b580      	push	{r7, lr}
 8019bb6:	b082      	sub	sp, #8
 8019bb8:	af00      	add	r7, sp, #0
 8019bba:	6078      	str	r0, [r7, #4]
 8019bbc:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8019bbe:	6878      	ldr	r0, [r7, #4]
 8019bc0:	f000 f966 	bl	8019e90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019bc4:	4603      	mov	r3, r0
 8019bc6:	2201      	movs	r2, #1
 8019bc8:	6839      	ldr	r1, [r7, #0]
 8019bca:	4618      	mov	r0, r3
 8019bcc:	f000 f978 	bl	8019ec0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE10deallocateERSC_PSB_j>
 8019bd0:	bf00      	nop
 8019bd2:	3708      	adds	r7, #8
 8019bd4:	46bd      	mov	sp, r7
 8019bd6:	bd80      	pop	{r7, pc}

08019bd8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8019bd8:	b480      	push	{r7}
 8019bda:	b083      	sub	sp, #12
 8019bdc:	af00      	add	r7, sp, #0
 8019bde:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8019be0:	687b      	ldr	r3, [r7, #4]
 8019be2:	3304      	adds	r3, #4
 8019be4:	4618      	mov	r0, r3
 8019be6:	370c      	adds	r7, #12
 8019be8:	46bd      	mov	sp, r7
 8019bea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019bee:	4770      	bx	lr

08019bf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8019bf0:	b590      	push	{r4, r7, lr}
 8019bf2:	b087      	sub	sp, #28
 8019bf4:	af00      	add	r7, sp, #0
 8019bf6:	60f8      	str	r0, [r7, #12]
 8019bf8:	60b9      	str	r1, [r7, #8]
 8019bfa:	607a      	str	r2, [r7, #4]
 8019bfc:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8019bfe:	68bb      	ldr	r3, [r7, #8]
 8019c00:	2b00      	cmp	r3, #0
 8019c02:	d01b      	beq.n	8019c3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8019c04:	68fc      	ldr	r4, [r7, #12]
 8019c06:	68b8      	ldr	r0, [r7, #8]
 8019c08:	f7ff fe53 	bl	80198b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8019c0c:	4603      	mov	r3, r0
 8019c0e:	683a      	ldr	r2, [r7, #0]
 8019c10:	4619      	mov	r1, r3
 8019c12:	4620      	mov	r0, r4
 8019c14:	f7e9 f9c0 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019c18:	4603      	mov	r3, r0
 8019c1a:	f083 0301 	eor.w	r3, r3, #1
 8019c1e:	b2db      	uxtb	r3, r3
 8019c20:	2b00      	cmp	r3, #0
 8019c22:	d006      	beq.n	8019c32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 8019c24:	68bb      	ldr	r3, [r7, #8]
 8019c26:	607b      	str	r3, [r7, #4]
 8019c28:	68b8      	ldr	r0, [r7, #8]
 8019c2a:	f7ff fc6f 	bl	801950c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8019c2e:	60b8      	str	r0, [r7, #8]
 8019c30:	e7e5      	b.n	8019bfe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 8019c32:	68b8      	ldr	r0, [r7, #8]
 8019c34:	f7ff fc5e 	bl	80194f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8019c38:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8019c3a:	e7e0      	b.n	8019bfe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 8019c3c:	f107 0314 	add.w	r3, r7, #20
 8019c40:	6879      	ldr	r1, [r7, #4]
 8019c42:	4618      	mov	r0, r3
 8019c44:	f7ff fe85 	bl	8019952 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019c48:	697b      	ldr	r3, [r7, #20]
    }
 8019c4a:	4618      	mov	r0, r3
 8019c4c:	371c      	adds	r7, #28
 8019c4e:	46bd      	mov	sp, r7
 8019c50:	bd90      	pop	{r4, r7, pc}

08019c52 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>:
      _M_ptr() noexcept
 8019c52:	b580      	push	{r7, lr}
 8019c54:	b082      	sub	sp, #8
 8019c56:	af00      	add	r7, sp, #0
 8019c58:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8019c5a:	6878      	ldr	r0, [r7, #4]
 8019c5c:	f000 f93f 	bl	8019ede <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>
 8019c60:	4603      	mov	r3, r0
 8019c62:	4618      	mov	r0, r3
 8019c64:	3708      	adds	r7, #8
 8019c66:	46bd      	mov	sp, r7
 8019c68:	bd80      	pop	{r7, pc}

08019c6a <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>:
      constexpr _Head_base(const _Head& __h)
 8019c6a:	b480      	push	{r7}
 8019c6c:	b083      	sub	sp, #12
 8019c6e:	af00      	add	r7, sp, #0
 8019c70:	6078      	str	r0, [r7, #4]
 8019c72:	6039      	str	r1, [r7, #0]
      : _M_head_impl(__h) { }
 8019c74:	687b      	ldr	r3, [r7, #4]
 8019c76:	683a      	ldr	r2, [r7, #0]
 8019c78:	601a      	str	r2, [r3, #0]
 8019c7a:	687b      	ldr	r3, [r7, #4]
 8019c7c:	4618      	mov	r0, r3
 8019c7e:	370c      	adds	r7, #12
 8019c80:	46bd      	mov	sp, r7
 8019c82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019c86:	4770      	bx	lr

08019c88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>:
      _M_get_node()
 8019c88:	b580      	push	{r7, lr}
 8019c8a:	b082      	sub	sp, #8
 8019c8c:	af00      	add	r7, sp, #0
 8019c8e:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 8019c90:	6878      	ldr	r0, [r7, #4]
 8019c92:	f000 f8fd 	bl	8019e90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019c96:	4603      	mov	r3, r0
 8019c98:	2101      	movs	r1, #1
 8019c9a:	4618      	mov	r0, r3
 8019c9c:	f000 f92a 	bl	8019ef4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE8allocateERSC_j>
 8019ca0:	4603      	mov	r3, r0
 8019ca2:	4618      	mov	r0, r3
 8019ca4:	3708      	adds	r7, #8
 8019ca6:	46bd      	mov	sp, r7
 8019ca8:	bd80      	pop	{r7, pc}

08019caa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8019caa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019cae:	b086      	sub	sp, #24
 8019cb0:	af02      	add	r7, sp, #8
 8019cb2:	60f8      	str	r0, [r7, #12]
 8019cb4:	60b9      	str	r1, [r7, #8]
 8019cb6:	607a      	str	r2, [r7, #4]
 8019cb8:	603b      	str	r3, [r7, #0]
	      ::new(__node) _Rb_tree_node<_Val>;
 8019cba:	68bb      	ldr	r3, [r7, #8]
 8019cbc:	4619      	mov	r1, r3
 8019cbe:	2048      	movs	r0, #72	; 0x48
 8019cc0:	f7e7 f9cb 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8019cc4:	68f8      	ldr	r0, [r7, #12]
 8019cc6:	f000 f8e3 	bl	8019e90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019cca:	4604      	mov	r4, r0
 8019ccc:	68b8      	ldr	r0, [r7, #8]
 8019cce:	f7ff fc6c 	bl	80195aa <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8019cd2:	4605      	mov	r5, r0
 8019cd4:	6878      	ldr	r0, [r7, #4]
 8019cd6:	f7ff fc85 	bl	80195e4 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8019cda:	4606      	mov	r6, r0
 8019cdc:	6838      	ldr	r0, [r7, #0]
 8019cde:	f7ff fc8c 	bl	80195fa <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8019ce2:	4680      	mov	r8, r0
 8019ce4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8019ce6:	f7ff fc93 	bl	8019610 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8019cea:	4603      	mov	r3, r0
 8019cec:	9300      	str	r3, [sp, #0]
 8019cee:	4643      	mov	r3, r8
 8019cf0:	4632      	mov	r2, r6
 8019cf2:	4629      	mov	r1, r5
 8019cf4:	4620      	mov	r0, r4
 8019cf6:	f000 f90c 	bl	8019f12 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESI_IJEEEEEvRSC_PT_DpOT0_>
	}
 8019cfa:	bf00      	nop
 8019cfc:	3710      	adds	r7, #16
 8019cfe:	46bd      	mov	sp, r7
 8019d00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019d04 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8019d04:	b580      	push	{r7, lr}
 8019d06:	b084      	sub	sp, #16
 8019d08:	af00      	add	r7, sp, #0
 8019d0a:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8019d0c:	687b      	ldr	r3, [r7, #4]
 8019d0e:	681a      	ldr	r2, [r3, #0]
 8019d10:	f107 030c 	add.w	r3, r7, #12
 8019d14:	4611      	mov	r1, r2
 8019d16:	4618      	mov	r0, r3
 8019d18:	f7ff fe1b 	bl	8019952 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019d1c:	68fb      	ldr	r3, [r7, #12]
 8019d1e:	4618      	mov	r0, r3
 8019d20:	3710      	adds	r7, #16
 8019d22:	46bd      	mov	sp, r7
 8019d24:	bd80      	pop	{r7, pc}

08019d26 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8019d26:	b480      	push	{r7}
 8019d28:	b083      	sub	sp, #12
 8019d2a:	af00      	add	r7, sp, #0
 8019d2c:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8019d2e:	687b      	ldr	r3, [r7, #4]
 8019d30:	695b      	ldr	r3, [r3, #20]
 8019d32:	4618      	mov	r0, r3
 8019d34:	370c      	adds	r7, #12
 8019d36:	46bd      	mov	sp, r7
 8019d38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019d3c:	4770      	bx	lr

08019d3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8019d3e:	b480      	push	{r7}
 8019d40:	b083      	sub	sp, #12
 8019d42:	af00      	add	r7, sp, #0
 8019d44:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8019d46:	687b      	ldr	r3, [r7, #4]
 8019d48:	3310      	adds	r3, #16
 8019d4a:	4618      	mov	r0, r3
 8019d4c:	370c      	adds	r7, #12
 8019d4e:	46bd      	mov	sp, r7
 8019d50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019d54:	4770      	bx	lr

08019d56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8019d56:	b580      	push	{r7, lr}
 8019d58:	b082      	sub	sp, #8
 8019d5a:	af00      	add	r7, sp, #0
 8019d5c:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8019d5e:	6878      	ldr	r0, [r7, #4]
 8019d60:	f7ff fda7 	bl	80198b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8019d64:	4603      	mov	r3, r0
 8019d66:	4618      	mov	r0, r3
 8019d68:	3708      	adds	r7, #8
 8019d6a:	46bd      	mov	sp, r7
 8019d6c:	bd80      	pop	{r7, pc}

08019d6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8019d6e:	b480      	push	{r7}
 8019d70:	b083      	sub	sp, #12
 8019d72:	af00      	add	r7, sp, #0
 8019d74:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 8019d76:	687b      	ldr	r3, [r7, #4]
 8019d78:	330c      	adds	r3, #12
 8019d7a:	4618      	mov	r0, r3
 8019d7c:	370c      	adds	r7, #12
 8019d7e:	46bd      	mov	sp, r7
 8019d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019d84:	4770      	bx	lr

08019d86 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8019d86:	b580      	push	{r7, lr}
 8019d88:	b082      	sub	sp, #8
 8019d8a:	af00      	add	r7, sp, #0
 8019d8c:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8019d8e:	687b      	ldr	r3, [r7, #4]
 8019d90:	681b      	ldr	r3, [r3, #0]
 8019d92:	4618      	mov	r0, r3
 8019d94:	f008 ffbf 	bl	8022d16 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8019d98:	4602      	mov	r2, r0
 8019d9a:	687b      	ldr	r3, [r7, #4]
 8019d9c:	601a      	str	r2, [r3, #0]
	return *this;
 8019d9e:	687b      	ldr	r3, [r7, #4]
      }
 8019da0:	4618      	mov	r0, r3
 8019da2:	3708      	adds	r7, #8
 8019da4:	46bd      	mov	sp, r7
 8019da6:	bd80      	pop	{r7, pc}

08019da8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8019da8:	b580      	push	{r7, lr}
 8019daa:	b082      	sub	sp, #8
 8019dac:	af00      	add	r7, sp, #0
 8019dae:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8019db0:	687b      	ldr	r3, [r7, #4]
 8019db2:	681b      	ldr	r3, [r3, #0]
 8019db4:	4618      	mov	r0, r3
 8019db6:	f008 ff9b 	bl	8022cf0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8019dba:	4602      	mov	r2, r0
 8019dbc:	687b      	ldr	r3, [r7, #4]
 8019dbe:	601a      	str	r2, [r3, #0]
	return *this;
 8019dc0:	687b      	ldr	r3, [r7, #4]
      }
 8019dc2:	4618      	mov	r0, r3
 8019dc4:	3708      	adds	r7, #8
 8019dc6:	46bd      	mov	sp, r7
 8019dc8:	bd80      	pop	{r7, pc}

08019dca <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>:
      _M_valptr() const
 8019dca:	b580      	push	{r7, lr}
 8019dcc:	b082      	sub	sp, #8
 8019dce:	af00      	add	r7, sp, #0
 8019dd0:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8019dd2:	687b      	ldr	r3, [r7, #4]
 8019dd4:	3310      	adds	r3, #16
 8019dd6:	4618      	mov	r0, r3
 8019dd8:	f000 f8b9 	bl	8019f4e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>
 8019ddc:	4603      	mov	r3, r0
 8019dde:	4618      	mov	r0, r3
 8019de0:	3708      	adds	r7, #8
 8019de2:	46bd      	mov	sp, r7
 8019de4:	bd80      	pop	{r7, pc}

08019de6 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERKS9_>:
      operator()(const _Pair& __x) const
 8019de6:	b480      	push	{r7}
 8019de8:	b083      	sub	sp, #12
 8019dea:	af00      	add	r7, sp, #0
 8019dec:	6078      	str	r0, [r7, #4]
 8019dee:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8019df0:	683b      	ldr	r3, [r7, #0]
 8019df2:	4618      	mov	r0, r3
 8019df4:	370c      	adds	r7, #12
 8019df6:	46bd      	mov	sp, r7
 8019df8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019dfc:	4770      	bx	lr

08019dfe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8019dfe:	b580      	push	{r7, lr}
 8019e00:	b084      	sub	sp, #16
 8019e02:	af00      	add	r7, sp, #0
 8019e04:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 8019e06:	687b      	ldr	r3, [r7, #4]
 8019e08:	68da      	ldr	r2, [r3, #12]
 8019e0a:	f107 030c 	add.w	r3, r7, #12
 8019e0e:	4611      	mov	r1, r2
 8019e10:	4618      	mov	r0, r3
 8019e12:	f7ff fd9e 	bl	8019952 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019e16:	68fb      	ldr	r3, [r7, #12]
 8019e18:	4618      	mov	r0, r3
 8019e1a:	3710      	adds	r7, #16
 8019e1c:	46bd      	mov	sp, r7
 8019e1e:	bd80      	pop	{r7, pc}

08019e20 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8019e20:	b580      	push	{r7, lr}
 8019e22:	b084      	sub	sp, #16
 8019e24:	af00      	add	r7, sp, #0
 8019e26:	60f8      	str	r0, [r7, #12]
 8019e28:	60b9      	str	r1, [r7, #8]
 8019e2a:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8019e2c:	68b8      	ldr	r0, [r7, #8]
 8019e2e:	f000 f89a 	bl	8019f66 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISE_E4typeE>
 8019e32:	4603      	mov	r3, r0
 8019e34:	681a      	ldr	r2, [r3, #0]
 8019e36:	68fb      	ldr	r3, [r7, #12]
 8019e38:	601a      	str	r2, [r3, #0]
 8019e3a:	6878      	ldr	r0, [r7, #4]
 8019e3c:	f7e9 fb05 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8019e40:	4603      	mov	r3, r0
 8019e42:	681a      	ldr	r2, [r3, #0]
 8019e44:	68fb      	ldr	r3, [r7, #12]
 8019e46:	605a      	str	r2, [r3, #4]
 8019e48:	68fb      	ldr	r3, [r7, #12]
 8019e4a:	4618      	mov	r0, r3
 8019e4c:	3710      	adds	r7, #16
 8019e4e:	46bd      	mov	sp, r7
 8019e50:	bd80      	pop	{r7, pc}

08019e52 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIS9_EEPSt13_Rb_tree_nodeIS9_EOT_>:
	  operator()(_Arg&& __arg) const
 8019e52:	b590      	push	{r4, r7, lr}
 8019e54:	b083      	sub	sp, #12
 8019e56:	af00      	add	r7, sp, #0
 8019e58:	6078      	str	r0, [r7, #4]
 8019e5a:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8019e5c:	687b      	ldr	r3, [r7, #4]
 8019e5e:	681c      	ldr	r4, [r3, #0]
 8019e60:	6838      	ldr	r0, [r7, #0]
 8019e62:	f7ff fe25 	bl	8019ab0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 8019e66:	4603      	mov	r3, r0
 8019e68:	4619      	mov	r1, r3
 8019e6a:	4620      	mov	r0, r4
 8019e6c:	f000 f886 	bl	8019f7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 8019e70:	4603      	mov	r3, r0
 8019e72:	4618      	mov	r0, r3
 8019e74:	370c      	adds	r7, #12
 8019e76:	46bd      	mov	sp, r7
 8019e78:	bd90      	pop	{r4, r7, pc}

08019e7a <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019e7a:	b480      	push	{r7}
 8019e7c:	b083      	sub	sp, #12
 8019e7e:	af00      	add	r7, sp, #0
 8019e80:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019e82:	687b      	ldr	r3, [r7, #4]
 8019e84:	4618      	mov	r0, r3
 8019e86:	370c      	adds	r7, #12
 8019e88:	46bd      	mov	sp, r7
 8019e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019e8e:	4770      	bx	lr

08019e90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 8019e90:	b480      	push	{r7}
 8019e92:	b083      	sub	sp, #12
 8019e94:	af00      	add	r7, sp, #0
 8019e96:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8019e98:	687b      	ldr	r3, [r7, #4]
 8019e9a:	4618      	mov	r0, r3
 8019e9c:	370c      	adds	r7, #12
 8019e9e:	46bd      	mov	sp, r7
 8019ea0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019ea4:	4770      	bx	lr

08019ea6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE7destroyISA_EEvRSC_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 8019ea6:	b580      	push	{r7, lr}
 8019ea8:	b082      	sub	sp, #8
 8019eaa:	af00      	add	r7, sp, #0
 8019eac:	6078      	str	r0, [r7, #4]
 8019eae:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 8019eb0:	6839      	ldr	r1, [r7, #0]
 8019eb2:	6878      	ldr	r0, [r7, #4]
 8019eb4:	f000 f879 	bl	8019faa <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE7destroyISB_EEvPT_>
 8019eb8:	bf00      	nop
 8019eba:	3708      	adds	r7, #8
 8019ebc:	46bd      	mov	sp, r7
 8019ebe:	bd80      	pop	{r7, pc}

08019ec0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE10deallocateERSC_PSB_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8019ec0:	b580      	push	{r7, lr}
 8019ec2:	b084      	sub	sp, #16
 8019ec4:	af00      	add	r7, sp, #0
 8019ec6:	60f8      	str	r0, [r7, #12]
 8019ec8:	60b9      	str	r1, [r7, #8]
 8019eca:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8019ecc:	687a      	ldr	r2, [r7, #4]
 8019ece:	68b9      	ldr	r1, [r7, #8]
 8019ed0:	68f8      	ldr	r0, [r7, #12]
 8019ed2:	f000 f876 	bl	8019fc2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE10deallocateEPSC_j>
 8019ed6:	bf00      	nop
 8019ed8:	3710      	adds	r7, #16
 8019eda:	46bd      	mov	sp, r7
 8019edc:	bd80      	pop	{r7, pc}

08019ede <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>:
      _M_addr() noexcept
 8019ede:	b480      	push	{r7}
 8019ee0:	b083      	sub	sp, #12
 8019ee2:	af00      	add	r7, sp, #0
 8019ee4:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8019ee6:	687b      	ldr	r3, [r7, #4]
 8019ee8:	4618      	mov	r0, r3
 8019eea:	370c      	adds	r7, #12
 8019eec:	46bd      	mov	sp, r7
 8019eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019ef2:	4770      	bx	lr

08019ef4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE8allocateERSC_j>:
      allocate(allocator_type& __a, size_type __n)
 8019ef4:	b580      	push	{r7, lr}
 8019ef6:	b082      	sub	sp, #8
 8019ef8:	af00      	add	r7, sp, #0
 8019efa:	6078      	str	r0, [r7, #4]
 8019efc:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8019efe:	2200      	movs	r2, #0
 8019f00:	6839      	ldr	r1, [r7, #0]
 8019f02:	6878      	ldr	r0, [r7, #4]
 8019f04:	f000 f869 	bl	8019fda <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv>
 8019f08:	4603      	mov	r3, r0
 8019f0a:	4618      	mov	r0, r3
 8019f0c:	3708      	adds	r7, #8
 8019f0e:	46bd      	mov	sp, r7
 8019f10:	bd80      	pop	{r7, pc}

08019f12 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESI_IJEEEEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8019f12:	b5b0      	push	{r4, r5, r7, lr}
 8019f14:	b086      	sub	sp, #24
 8019f16:	af02      	add	r7, sp, #8
 8019f18:	60f8      	str	r0, [r7, #12]
 8019f1a:	60b9      	str	r1, [r7, #8]
 8019f1c:	607a      	str	r2, [r7, #4]
 8019f1e:	603b      	str	r3, [r7, #0]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8019f20:	6878      	ldr	r0, [r7, #4]
 8019f22:	f7ff fb5f 	bl	80195e4 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8019f26:	4604      	mov	r4, r0
 8019f28:	6838      	ldr	r0, [r7, #0]
 8019f2a:	f7ff fb66 	bl	80195fa <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8019f2e:	4605      	mov	r5, r0
 8019f30:	6a38      	ldr	r0, [r7, #32]
 8019f32:	f7ff fb6d 	bl	8019610 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8019f36:	4603      	mov	r3, r0
 8019f38:	9300      	str	r3, [sp, #0]
 8019f3a:	462b      	mov	r3, r5
 8019f3c:	4622      	mov	r2, r4
 8019f3e:	68b9      	ldr	r1, [r7, #8]
 8019f40:	68f8      	ldr	r0, [r7, #12]
 8019f42:	f000 f87c 	bl	801a03e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvPT_DpOT0_>
 8019f46:	bf00      	nop
 8019f48:	3710      	adds	r7, #16
 8019f4a:	46bd      	mov	sp, r7
 8019f4c:	bdb0      	pop	{r4, r5, r7, pc}

08019f4e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8019f4e:	b580      	push	{r7, lr}
 8019f50:	b082      	sub	sp, #8
 8019f52:	af00      	add	r7, sp, #0
 8019f54:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8019f56:	6878      	ldr	r0, [r7, #4]
 8019f58:	f000 f898 	bl	801a08c <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>
 8019f5c:	4603      	mov	r3, r0
 8019f5e:	4618      	mov	r0, r3
 8019f60:	3708      	adds	r7, #8
 8019f62:	46bd      	mov	sp, r7
 8019f64:	bd80      	pop	{r7, pc}

08019f66 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019f66:	b480      	push	{r7}
 8019f68:	b083      	sub	sp, #12
 8019f6a:	af00      	add	r7, sp, #0
 8019f6c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019f6e:	687b      	ldr	r3, [r7, #4]
 8019f70:	4618      	mov	r0, r3
 8019f72:	370c      	adds	r7, #12
 8019f74:	46bd      	mov	sp, r7
 8019f76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019f7a:	4770      	bx	lr

08019f7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8019f7c:	b580      	push	{r7, lr}
 8019f7e:	b084      	sub	sp, #16
 8019f80:	af00      	add	r7, sp, #0
 8019f82:	6078      	str	r0, [r7, #4]
 8019f84:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8019f86:	6878      	ldr	r0, [r7, #4]
 8019f88:	f7ff fe7e 	bl	8019c88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 8019f8c:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8019f8e:	6838      	ldr	r0, [r7, #0]
 8019f90:	f7ff fd8e 	bl	8019ab0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 8019f94:	4603      	mov	r3, r0
 8019f96:	461a      	mov	r2, r3
 8019f98:	68f9      	ldr	r1, [r7, #12]
 8019f9a:	6878      	ldr	r0, [r7, #4]
 8019f9c:	f000 f881 	bl	801a0a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 8019fa0:	68fb      	ldr	r3, [r7, #12]
	}
 8019fa2:	4618      	mov	r0, r3
 8019fa4:	3710      	adds	r7, #16
 8019fa6:	46bd      	mov	sp, r7
 8019fa8:	bd80      	pop	{r7, pc}

08019faa <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE7destroyISB_EEvPT_>:
	destroy(_Up* __p)
 8019faa:	b580      	push	{r7, lr}
 8019fac:	b082      	sub	sp, #8
 8019fae:	af00      	add	r7, sp, #0
 8019fb0:	6078      	str	r0, [r7, #4]
 8019fb2:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8019fb4:	6838      	ldr	r0, [r7, #0]
 8019fb6:	f7ff f8b6 	bl	8019126 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 8019fba:	bf00      	nop
 8019fbc:	3708      	adds	r7, #8
 8019fbe:	46bd      	mov	sp, r7
 8019fc0:	bd80      	pop	{r7, pc}

08019fc2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE10deallocateEPSC_j>:
      deallocate(pointer __p, size_type)
 8019fc2:	b580      	push	{r7, lr}
 8019fc4:	b084      	sub	sp, #16
 8019fc6:	af00      	add	r7, sp, #0
 8019fc8:	60f8      	str	r0, [r7, #12]
 8019fca:	60b9      	str	r1, [r7, #8]
 8019fcc:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8019fce:	68b8      	ldr	r0, [r7, #8]
 8019fd0:	f008 fe27 	bl	8022c22 <_ZdlPv>
      }
 8019fd4:	3710      	adds	r7, #16
 8019fd6:	46bd      	mov	sp, r7
 8019fd8:	bd80      	pop	{r7, pc}

08019fda <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8019fda:	b580      	push	{r7, lr}
 8019fdc:	b084      	sub	sp, #16
 8019fde:	af00      	add	r7, sp, #0
 8019fe0:	60f8      	str	r0, [r7, #12]
 8019fe2:	60b9      	str	r1, [r7, #8]
 8019fe4:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8019fe6:	68f8      	ldr	r0, [r7, #12]
 8019fe8:	f000 f87c 	bl	801a0e4 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv>
 8019fec:	4602      	mov	r2, r0
 8019fee:	68bb      	ldr	r3, [r7, #8]
 8019ff0:	4293      	cmp	r3, r2
 8019ff2:	bf8c      	ite	hi
 8019ff4:	2301      	movhi	r3, #1
 8019ff6:	2300      	movls	r3, #0
 8019ff8:	b2db      	uxtb	r3, r3
 8019ffa:	2b00      	cmp	r3, #0
 8019ffc:	d001      	beq.n	801a002 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8019ffe:	f008 fee8 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801a002:	68ba      	ldr	r2, [r7, #8]
 801a004:	4613      	mov	r3, r2
 801a006:	00db      	lsls	r3, r3, #3
 801a008:	4413      	add	r3, r2
 801a00a:	00db      	lsls	r3, r3, #3
 801a00c:	4618      	mov	r0, r3
 801a00e:	f008 fe1b 	bl	8022c48 <_Znwj>
 801a012:	4603      	mov	r3, r0
 801a014:	bf00      	nop
      }
 801a016:	4618      	mov	r0, r3
 801a018:	3710      	adds	r7, #16
 801a01a:	46bd      	mov	sp, r7
 801a01c:	bd80      	pop	{r7, pc}

0801a01e <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>:
        explicit constexpr tuple(_UElements&&... __elements)
	: _Inherited(std::forward<_UElements>(__elements)...) {	}

      constexpr tuple(const tuple&) = default;

      constexpr tuple(tuple&&) = default;
 801a01e:	b580      	push	{r7, lr}
 801a020:	b082      	sub	sp, #8
 801a022:	af00      	add	r7, sp, #0
 801a024:	6078      	str	r0, [r7, #4]
 801a026:	6039      	str	r1, [r7, #0]
 801a028:	687b      	ldr	r3, [r7, #4]
 801a02a:	683a      	ldr	r2, [r7, #0]
 801a02c:	4611      	mov	r1, r2
 801a02e:	4618      	mov	r0, r3
 801a030:	f000 f866 	bl	801a100 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>
 801a034:	687b      	ldr	r3, [r7, #4]
 801a036:	4618      	mov	r0, r3
 801a038:	3708      	adds	r7, #8
 801a03a:	46bd      	mov	sp, r7
 801a03c:	bd80      	pop	{r7, pc}

0801a03e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801a03e:	b590      	push	{r4, r7, lr}
 801a040:	b089      	sub	sp, #36	; 0x24
 801a042:	af00      	add	r7, sp, #0
 801a044:	60f8      	str	r0, [r7, #12]
 801a046:	60b9      	str	r1, [r7, #8]
 801a048:	607a      	str	r2, [r7, #4]
 801a04a:	603b      	str	r3, [r7, #0]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801a04c:	6878      	ldr	r0, [r7, #4]
 801a04e:	f7ff fac9 	bl	80195e4 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 801a052:	6838      	ldr	r0, [r7, #0]
 801a054:	f7ff fad1 	bl	80195fa <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 801a058:	4602      	mov	r2, r0
 801a05a:	f107 0318 	add.w	r3, r7, #24
 801a05e:	4611      	mov	r1, r2
 801a060:	4618      	mov	r0, r3
 801a062:	f7ff ffdc 	bl	801a01e <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>
 801a066:	f107 0418 	add.w	r4, r7, #24
 801a06a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801a06c:	f7ff fad0 	bl	8019610 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 801a070:	68bb      	ldr	r3, [r7, #8]
 801a072:	4619      	mov	r1, r3
 801a074:	2038      	movs	r0, #56	; 0x38
 801a076:	f7e6 fff0 	bl	800105a <_ZnwjPv>
 801a07a:	7f3b      	ldrb	r3, [r7, #28]
 801a07c:	4622      	mov	r2, r4
 801a07e:	7d39      	ldrb	r1, [r7, #20]
 801a080:	f000 f855 	bl	801a12e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESC_IJDpT0_EE>
 801a084:	bf00      	nop
 801a086:	3724      	adds	r7, #36	; 0x24
 801a088:	46bd      	mov	sp, r7
 801a08a:	bd90      	pop	{r4, r7, pc}

0801a08c <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>:
      _M_addr() const noexcept
 801a08c:	b480      	push	{r7}
 801a08e:	b083      	sub	sp, #12
 801a090:	af00      	add	r7, sp, #0
 801a092:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 801a094:	687b      	ldr	r3, [r7, #4]
 801a096:	4618      	mov	r0, r3
 801a098:	370c      	adds	r7, #12
 801a09a:	46bd      	mov	sp, r7
 801a09c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a0a0:	4770      	bx	lr

0801a0a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 801a0a2:	b5b0      	push	{r4, r5, r7, lr}
 801a0a4:	b084      	sub	sp, #16
 801a0a6:	af00      	add	r7, sp, #0
 801a0a8:	60f8      	str	r0, [r7, #12]
 801a0aa:	60b9      	str	r1, [r7, #8]
 801a0ac:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 801a0ae:	68bb      	ldr	r3, [r7, #8]
 801a0b0:	4619      	mov	r1, r3
 801a0b2:	2048      	movs	r0, #72	; 0x48
 801a0b4:	f7e6 ffd1 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 801a0b8:	68f8      	ldr	r0, [r7, #12]
 801a0ba:	f7ff fee9 	bl	8019e90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 801a0be:	4604      	mov	r4, r0
 801a0c0:	68b8      	ldr	r0, [r7, #8]
 801a0c2:	f7ff fa72 	bl	80195aa <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 801a0c6:	4605      	mov	r5, r0
 801a0c8:	6878      	ldr	r0, [r7, #4]
 801a0ca:	f7ff fcf1 	bl	8019ab0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801a0ce:	4603      	mov	r3, r0
 801a0d0:	461a      	mov	r2, r3
 801a0d2:	4629      	mov	r1, r5
 801a0d4:	4620      	mov	r0, r4
 801a0d6:	f000 f83e 	bl	801a156 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JSA_EEEvRSC_PT_DpOT0_>
	}
 801a0da:	bf00      	nop
 801a0dc:	3710      	adds	r7, #16
 801a0de:	46bd      	mov	sp, r7
 801a0e0:	bdb0      	pop	{r4, r5, r7, pc}
	...

0801a0e4 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801a0e4:	b480      	push	{r7}
 801a0e6:	b083      	sub	sp, #12
 801a0e8:	af00      	add	r7, sp, #0
 801a0ea:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801a0ec:	4b03      	ldr	r3, [pc, #12]	; (801a0fc <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv+0x18>)
      }
 801a0ee:	4618      	mov	r0, r3
 801a0f0:	370c      	adds	r7, #12
 801a0f2:	46bd      	mov	sp, r7
 801a0f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a0f8:	4770      	bx	lr
 801a0fa:	bf00      	nop
 801a0fc:	01c71c71 	.word	0x01c71c71

0801a100 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>:
      _Tuple_impl(_Tuple_impl&& __in)
 801a100:	b590      	push	{r4, r7, lr}
 801a102:	b083      	sub	sp, #12
 801a104:	af00      	add	r7, sp, #0
 801a106:	6078      	str	r0, [r7, #4]
 801a108:	6039      	str	r1, [r7, #0]
      : _Base(std::forward<_Head>(_M_head(__in))) { }
 801a10a:	687c      	ldr	r4, [r7, #4]
 801a10c:	6838      	ldr	r0, [r7, #0]
 801a10e:	f000 f835 	bl	801a17c <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>
 801a112:	4603      	mov	r3, r0
 801a114:	4618      	mov	r0, r3
 801a116:	f7f0 fc43 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801a11a:	4603      	mov	r3, r0
 801a11c:	4619      	mov	r1, r3
 801a11e:	4620      	mov	r0, r4
 801a120:	f7ff fda3 	bl	8019c6a <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>
 801a124:	687b      	ldr	r3, [r7, #4]
 801a126:	4618      	mov	r0, r3
 801a128:	370c      	adds	r7, #12
 801a12a:	46bd      	mov	sp, r7
 801a12c:	bd90      	pop	{r4, r7, pc}

0801a12e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESC_IJDpT0_EE>:

  // See stl_pair.h...
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      inline
      pair<_T1, _T2>::
 801a12e:	b5b0      	push	{r4, r5, r7, lr}
 801a130:	b086      	sub	sp, #24
 801a132:	af02      	add	r7, sp, #8
 801a134:	60f8      	str	r0, [r7, #12]
 801a136:	7239      	strb	r1, [r7, #8]
 801a138:	607a      	str	r2, [r7, #4]
 801a13a:	703b      	strb	r3, [r7, #0]
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
 801a13c:	463a      	mov	r2, r7
 801a13e:	f88d 4000 	strb.w	r4, [sp]
 801a142:	462b      	mov	r3, r5
 801a144:	6879      	ldr	r1, [r7, #4]
 801a146:	68f8      	ldr	r0, [r7, #12]
 801a148:	f000 f825 	bl	801a196 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJLj0EEJEJEEERSt5tupleIJDpT_EERSB_IJDpT1_EESt12_Index_tupleIJXspT0_EEESK_IJXspT2_EEE>
      { }
 801a14c:	68fb      	ldr	r3, [r7, #12]
 801a14e:	4618      	mov	r0, r3
 801a150:	3710      	adds	r7, #16
 801a152:	46bd      	mov	sp, r7
 801a154:	bdb0      	pop	{r4, r5, r7, pc}

0801a156 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JSA_EEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801a156:	b580      	push	{r7, lr}
 801a158:	b084      	sub	sp, #16
 801a15a:	af00      	add	r7, sp, #0
 801a15c:	60f8      	str	r0, [r7, #12]
 801a15e:	60b9      	str	r1, [r7, #8]
 801a160:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801a162:	6878      	ldr	r0, [r7, #4]
 801a164:	f7ff fca4 	bl	8019ab0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801a168:	4603      	mov	r3, r0
 801a16a:	461a      	mov	r2, r3
 801a16c:	68b9      	ldr	r1, [r7, #8]
 801a16e:	68f8      	ldr	r0, [r7, #12]
 801a170:	f000 f84f 	bl	801a212 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JSB_EEEvPT_DpOT0_>
 801a174:	bf00      	nop
 801a176:	3710      	adds	r7, #16
 801a178:	46bd      	mov	sp, r7
 801a17a:	bd80      	pop	{r7, pc}

0801a17c <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 801a17c:	b580      	push	{r7, lr}
 801a17e:	b082      	sub	sp, #8
 801a180:	af00      	add	r7, sp, #0
 801a182:	6078      	str	r0, [r7, #4]
 801a184:	687b      	ldr	r3, [r7, #4]
 801a186:	4618      	mov	r0, r3
 801a188:	f000 f85b 	bl	801a242 <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS8_>
 801a18c:	4603      	mov	r3, r0
 801a18e:	4618      	mov	r0, r3
 801a190:	3708      	adds	r7, #8
 801a192:	46bd      	mov	sp, r7
 801a194:	bd80      	pop	{r7, pc}

0801a196 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJLj0EEJEJEEERSt5tupleIJDpT_EERSB_IJDpT1_EESt12_Index_tupleIJXspT0_EEESK_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, std::size_t... _Indexes1,
             typename... _Args2, std::size_t... _Indexes2>
      inline
      pair<_T1, _T2>::
 801a196:	b590      	push	{r4, r7, lr}
 801a198:	b085      	sub	sp, #20
 801a19a:	af00      	add	r7, sp, #0
 801a19c:	60f8      	str	r0, [r7, #12]
 801a19e:	60b9      	str	r1, [r7, #8]
 801a1a0:	607a      	str	r2, [r7, #4]
 801a1a2:	703b      	strb	r3, [r7, #0]
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
        second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 801a1a4:	68fc      	ldr	r4, [r7, #12]
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
 801a1a6:	68b8      	ldr	r0, [r7, #8]
 801a1a8:	f000 f857 	bl	801a25a <_ZSt3getILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_>
 801a1ac:	4603      	mov	r3, r0
        second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 801a1ae:	4618      	mov	r0, r3
 801a1b0:	f7f0 fbf6 	bl	800a9a0 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801a1b4:	4603      	mov	r3, r0
 801a1b6:	4619      	mov	r1, r3
 801a1b8:	4620      	mov	r0, r4
 801a1ba:	f009 f84d 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801a1be:	68fb      	ldr	r3, [r7, #12]
 801a1c0:	3318      	adds	r3, #24
 801a1c2:	2220      	movs	r2, #32
 801a1c4:	2100      	movs	r1, #0
 801a1c6:	4618      	mov	r0, r3
 801a1c8:	f00a f8c4 	bl	8024354 <memset>
 801a1cc:	68fb      	ldr	r3, [r7, #12]
 801a1ce:	3318      	adds	r3, #24
 801a1d0:	4618      	mov	r0, r3
 801a1d2:	f7ed f8ee 	bl	80073b2 <_ZN6SymbolC1Ev>
      { }
 801a1d6:	68fb      	ldr	r3, [r7, #12]
 801a1d8:	4618      	mov	r0, r3
 801a1da:	3714      	adds	r7, #20
 801a1dc:	46bd      	mov	sp, r7
 801a1de:	bd90      	pop	{r4, r7, pc}

0801a1e0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1EOS8_>:
      constexpr pair(pair&&) = default;
 801a1e0:	b580      	push	{r7, lr}
 801a1e2:	b082      	sub	sp, #8
 801a1e4:	af00      	add	r7, sp, #0
 801a1e6:	6078      	str	r0, [r7, #4]
 801a1e8:	6039      	str	r1, [r7, #0]
 801a1ea:	687b      	ldr	r3, [r7, #4]
 801a1ec:	683a      	ldr	r2, [r7, #0]
 801a1ee:	4611      	mov	r1, r2
 801a1f0:	4618      	mov	r0, r3
 801a1f2:	f009 f831 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801a1f6:	687b      	ldr	r3, [r7, #4]
 801a1f8:	f103 0218 	add.w	r2, r3, #24
 801a1fc:	683b      	ldr	r3, [r7, #0]
 801a1fe:	3318      	adds	r3, #24
 801a200:	4619      	mov	r1, r3
 801a202:	4610      	mov	r0, r2
 801a204:	f7ec fbdc 	bl	80069c0 <_ZN6SymbolC1EOS_>
 801a208:	687b      	ldr	r3, [r7, #4]
 801a20a:	4618      	mov	r0, r3
 801a20c:	3708      	adds	r7, #8
 801a20e:	46bd      	mov	sp, r7
 801a210:	bd80      	pop	{r7, pc}

0801a212 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JSB_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801a212:	b590      	push	{r4, r7, lr}
 801a214:	b085      	sub	sp, #20
 801a216:	af00      	add	r7, sp, #0
 801a218:	60f8      	str	r0, [r7, #12]
 801a21a:	60b9      	str	r1, [r7, #8]
 801a21c:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801a21e:	6878      	ldr	r0, [r7, #4]
 801a220:	f7ff fc46 	bl	8019ab0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801a224:	4604      	mov	r4, r0
 801a226:	68bb      	ldr	r3, [r7, #8]
 801a228:	4619      	mov	r1, r3
 801a22a:	2038      	movs	r0, #56	; 0x38
 801a22c:	f7e6 ff15 	bl	800105a <_ZnwjPv>
 801a230:	4603      	mov	r3, r0
 801a232:	4621      	mov	r1, r4
 801a234:	4618      	mov	r0, r3
 801a236:	f7ff ffd3 	bl	801a1e0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1EOS8_>
 801a23a:	bf00      	nop
 801a23c:	3714      	adds	r7, #20
 801a23e:	46bd      	mov	sp, r7
 801a240:	bd90      	pop	{r4, r7, pc}

0801a242 <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS8_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 801a242:	b480      	push	{r7}
 801a244:	b083      	sub	sp, #12
 801a246:	af00      	add	r7, sp, #0
 801a248:	6078      	str	r0, [r7, #4]
 801a24a:	687b      	ldr	r3, [r7, #4]
 801a24c:	681b      	ldr	r3, [r3, #0]
 801a24e:	4618      	mov	r0, r3
 801a250:	370c      	adds	r7, #12
 801a252:	46bd      	mov	sp, r7
 801a254:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a258:	4770      	bx	lr

0801a25a <_ZSt3getILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_>:
    get(tuple<_Elements...>& __t) noexcept
 801a25a:	b580      	push	{r7, lr}
 801a25c:	b082      	sub	sp, #8
 801a25e:	af00      	add	r7, sp, #0
 801a260:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 801a262:	687b      	ldr	r3, [r7, #4]
 801a264:	4618      	mov	r0, r3
 801a266:	f000 f805 	bl	801a274 <_ZSt12__get_helperILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE>
 801a26a:	4603      	mov	r3, r0
 801a26c:	4618      	mov	r0, r3
 801a26e:	3708      	adds	r7, #8
 801a270:	46bd      	mov	sp, r7
 801a272:	bd80      	pop	{r7, pc}

0801a274 <_ZSt12__get_helperILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 801a274:	b580      	push	{r7, lr}
 801a276:	b082      	sub	sp, #8
 801a278:	af00      	add	r7, sp, #0
 801a27a:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 801a27c:	6878      	ldr	r0, [r7, #4]
 801a27e:	f7ff ff7d 	bl	801a17c <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>
 801a282:	4603      	mov	r3, r0
 801a284:	4618      	mov	r0, r3
 801a286:	3708      	adds	r7, #8
 801a288:	46bd      	mov	sp, r7
 801a28a:	bd80      	pop	{r7, pc}

0801a28c <_Z41__static_initialization_and_destruction_0ii>:

void Variable_handler::add_local(std::string name, Symbol)
{
	local.insert({name, {}});
}
 801a28c:	b590      	push	{r4, r7, lr}
 801a28e:	b0e7      	sub	sp, #412	; 0x19c
 801a290:	af02      	add	r7, sp, #8
 801a292:	1d3b      	adds	r3, r7, #4
 801a294:	6018      	str	r0, [r3, #0]
 801a296:	463b      	mov	r3, r7
 801a298:	6019      	str	r1, [r3, #0]
 801a29a:	1d3b      	adds	r3, r7, #4
 801a29c:	681b      	ldr	r3, [r3, #0]
 801a29e:	2b01      	cmp	r3, #1
 801a2a0:	f040 819d 	bne.w	801a5de <_Z41__static_initialization_and_destruction_0ii+0x352>
 801a2a4:	463b      	mov	r3, r7
 801a2a6:	681b      	ldr	r3, [r3, #0]
 801a2a8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801a2ac:	4293      	cmp	r3, r2
 801a2ae:	f040 8196 	bne.w	801a5de <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801a2b2:	f107 0314 	add.w	r3, r7, #20
 801a2b6:	4618      	mov	r0, r3
 801a2b8:	2322      	movs	r3, #34	; 0x22
 801a2ba:	461a      	mov	r2, r3
 801a2bc:	2100      	movs	r1, #0
 801a2be:	f00a f849 	bl	8024354 <memset>
 801a2c2:	f107 0314 	add.w	r3, r7, #20
 801a2c6:	223a      	movs	r2, #58	; 0x3a
 801a2c8:	701a      	strb	r2, [r3, #0]
 801a2ca:	f107 0314 	add.w	r3, r7, #20
 801a2ce:	2201      	movs	r2, #1
 801a2d0:	705a      	strb	r2, [r3, #1]
 801a2d2:	f107 0314 	add.w	r3, r7, #20
 801a2d6:	220a      	movs	r2, #10
 801a2d8:	709a      	strb	r2, [r3, #2]
 801a2da:	f107 0314 	add.w	r3, r7, #20
 801a2de:	220a      	movs	r2, #10
 801a2e0:	70da      	strb	r2, [r3, #3]
 801a2e2:	f107 0314 	add.w	r3, r7, #20
 801a2e6:	222c      	movs	r2, #44	; 0x2c
 801a2e8:	711a      	strb	r2, [r3, #4]
 801a2ea:	f107 0314 	add.w	r3, r7, #20
 801a2ee:	220c      	movs	r2, #12
 801a2f0:	715a      	strb	r2, [r3, #5]
 801a2f2:	f107 0314 	add.w	r3, r7, #20
 801a2f6:	222e      	movs	r2, #46	; 0x2e
 801a2f8:	719a      	strb	r2, [r3, #6]
 801a2fa:	f107 0314 	add.w	r3, r7, #20
 801a2fe:	220b      	movs	r2, #11
 801a300:	71da      	strb	r2, [r3, #7]
 801a302:	f107 0314 	add.w	r3, r7, #20
 801a306:	225b      	movs	r2, #91	; 0x5b
 801a308:	721a      	strb	r2, [r3, #8]
 801a30a:	f107 0314 	add.w	r3, r7, #20
 801a30e:	220d      	movs	r2, #13
 801a310:	725a      	strb	r2, [r3, #9]
 801a312:	f107 0314 	add.w	r3, r7, #20
 801a316:	225d      	movs	r2, #93	; 0x5d
 801a318:	729a      	strb	r2, [r3, #10]
 801a31a:	f107 0314 	add.w	r3, r7, #20
 801a31e:	220e      	movs	r2, #14
 801a320:	72da      	strb	r2, [r3, #11]
 801a322:	f107 0314 	add.w	r3, r7, #20
 801a326:	227c      	movs	r2, #124	; 0x7c
 801a328:	731a      	strb	r2, [r3, #12]
 801a32a:	f107 0314 	add.w	r3, r7, #20
 801a32e:	2215      	movs	r2, #21
 801a330:	735a      	strb	r2, [r3, #13]
 801a332:	f107 0314 	add.w	r3, r7, #20
 801a336:	2226      	movs	r2, #38	; 0x26
 801a338:	739a      	strb	r2, [r3, #14]
 801a33a:	f107 0314 	add.w	r3, r7, #20
 801a33e:	2216      	movs	r2, #22
 801a340:	73da      	strb	r2, [r3, #15]
 801a342:	f107 0314 	add.w	r3, r7, #20
 801a346:	222b      	movs	r2, #43	; 0x2b
 801a348:	741a      	strb	r2, [r3, #16]
 801a34a:	f107 0314 	add.w	r3, r7, #20
 801a34e:	221f      	movs	r2, #31
 801a350:	745a      	strb	r2, [r3, #17]
 801a352:	f107 0314 	add.w	r3, r7, #20
 801a356:	222d      	movs	r2, #45	; 0x2d
 801a358:	749a      	strb	r2, [r3, #18]
 801a35a:	f107 0314 	add.w	r3, r7, #20
 801a35e:	2220      	movs	r2, #32
 801a360:	74da      	strb	r2, [r3, #19]
 801a362:	f107 0314 	add.w	r3, r7, #20
 801a366:	222a      	movs	r2, #42	; 0x2a
 801a368:	751a      	strb	r2, [r3, #20]
 801a36a:	f107 0314 	add.w	r3, r7, #20
 801a36e:	2221      	movs	r2, #33	; 0x21
 801a370:	755a      	strb	r2, [r3, #21]
 801a372:	f107 0314 	add.w	r3, r7, #20
 801a376:	222f      	movs	r2, #47	; 0x2f
 801a378:	759a      	strb	r2, [r3, #22]
 801a37a:	f107 0314 	add.w	r3, r7, #20
 801a37e:	2222      	movs	r2, #34	; 0x22
 801a380:	75da      	strb	r2, [r3, #23]
 801a382:	f107 0314 	add.w	r3, r7, #20
 801a386:	225e      	movs	r2, #94	; 0x5e
 801a388:	761a      	strb	r2, [r3, #24]
 801a38a:	f107 0314 	add.w	r3, r7, #20
 801a38e:	2223      	movs	r2, #35	; 0x23
 801a390:	765a      	strb	r2, [r3, #25]
 801a392:	f107 0314 	add.w	r3, r7, #20
 801a396:	2225      	movs	r2, #37	; 0x25
 801a398:	769a      	strb	r2, [r3, #26]
 801a39a:	f107 0314 	add.w	r3, r7, #20
 801a39e:	2224      	movs	r2, #36	; 0x24
 801a3a0:	76da      	strb	r2, [r3, #27]
 801a3a2:	f107 0314 	add.w	r3, r7, #20
 801a3a6:	2228      	movs	r2, #40	; 0x28
 801a3a8:	771a      	strb	r2, [r3, #28]
 801a3aa:	f107 0314 	add.w	r3, r7, #20
 801a3ae:	2226      	movs	r2, #38	; 0x26
 801a3b0:	775a      	strb	r2, [r3, #29]
 801a3b2:	f107 0314 	add.w	r3, r7, #20
 801a3b6:	2229      	movs	r2, #41	; 0x29
 801a3b8:	779a      	strb	r2, [r3, #30]
 801a3ba:	f107 0314 	add.w	r3, r7, #20
 801a3be:	2227      	movs	r2, #39	; 0x27
 801a3c0:	77da      	strb	r2, [r3, #31]
 801a3c2:	f107 0314 	add.w	r3, r7, #20
 801a3c6:	2225      	movs	r2, #37	; 0x25
 801a3c8:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801a3cc:	f107 030c 	add.w	r3, r7, #12
 801a3d0:	f107 0214 	add.w	r2, r7, #20
 801a3d4:	601a      	str	r2, [r3, #0]
 801a3d6:	f107 030c 	add.w	r3, r7, #12
 801a3da:	2211      	movs	r2, #17
 801a3dc:	605a      	str	r2, [r3, #4]
 801a3de:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801a3e2:	4618      	mov	r0, r3
 801a3e4:	f7e6 ff7e 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801a3e8:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801a3ec:	f107 020c 	add.w	r2, r7, #12
 801a3f0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801a3f4:	9300      	str	r3, [sp, #0]
 801a3f6:	460b      	mov	r3, r1
 801a3f8:	ca06      	ldmia	r2, {r1, r2}
 801a3fa:	4885      	ldr	r0, [pc, #532]	; (801a610 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801a3fc:	f7e6 ff8a 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801a400:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801a404:	4618      	mov	r0, r3
 801a406:	f7e6 ff79 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801a40a:	2305      	movs	r3, #5
 801a40c:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801a410:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801a414:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a418:	497e      	ldr	r1, [pc, #504]	; (801a614 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801a41a:	4618      	mov	r0, r3
 801a41c:	f7e6 fe66 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801a420:	2306      	movs	r3, #6
 801a422:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801a426:	f207 1263 	addw	r2, r7, #355	; 0x163
 801a42a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a42e:	331c      	adds	r3, #28
 801a430:	4979      	ldr	r1, [pc, #484]	; (801a618 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801a432:	4618      	mov	r0, r3
 801a434:	f7e6 fe82 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801a438:	2307      	movs	r3, #7
 801a43a:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801a43e:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801a442:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a446:	3338      	adds	r3, #56	; 0x38
 801a448:	4974      	ldr	r1, [pc, #464]	; (801a61c <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801a44a:	4618      	mov	r0, r3
 801a44c:	f7e6 fe76 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801a450:	2308      	movs	r3, #8
 801a452:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801a456:	f207 1265 	addw	r2, r7, #357	; 0x165
 801a45a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a45e:	3354      	adds	r3, #84	; 0x54
 801a460:	496f      	ldr	r1, [pc, #444]	; (801a620 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801a462:	4618      	mov	r0, r3
 801a464:	f7e6 fe42 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801a468:	2309      	movs	r3, #9
 801a46a:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801a46e:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801a472:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a476:	3370      	adds	r3, #112	; 0x70
 801a478:	496a      	ldr	r1, [pc, #424]	; (801a624 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801a47a:	4618      	mov	r0, r3
 801a47c:	f7e6 fe86 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801a480:	2310      	movs	r3, #16
 801a482:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801a486:	f207 1267 	addw	r2, r7, #359	; 0x167
 801a48a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a48e:	338c      	adds	r3, #140	; 0x8c
 801a490:	4965      	ldr	r1, [pc, #404]	; (801a628 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801a492:	4618      	mov	r0, r3
 801a494:	f7e6 fea2 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801a498:	2311      	movs	r3, #17
 801a49a:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801a49e:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801a4a2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a4a6:	33a8      	adds	r3, #168	; 0xa8
 801a4a8:	4960      	ldr	r1, [pc, #384]	; (801a62c <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801a4aa:	4618      	mov	r0, r3
 801a4ac:	f7e6 fe6e 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801a4b0:	2312      	movs	r3, #18
 801a4b2:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801a4b6:	f207 1269 	addw	r2, r7, #361	; 0x169
 801a4ba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a4be:	33c4      	adds	r3, #196	; 0xc4
 801a4c0:	495b      	ldr	r1, [pc, #364]	; (801a630 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801a4c2:	4618      	mov	r0, r3
 801a4c4:	f7e6 fe12 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801a4c8:	2313      	movs	r3, #19
 801a4ca:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801a4ce:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801a4d2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a4d6:	33e0      	adds	r3, #224	; 0xe0
 801a4d8:	4956      	ldr	r1, [pc, #344]	; (801a634 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801a4da:	4618      	mov	r0, r3
 801a4dc:	f7e6 fe2e 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801a4e0:	2314      	movs	r3, #20
 801a4e2:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801a4e6:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801a4ea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a4ee:	33fc      	adds	r3, #252	; 0xfc
 801a4f0:	4951      	ldr	r1, [pc, #324]	; (801a638 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801a4f2:	4618      	mov	r0, r3
 801a4f4:	f7e6 fe9a 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801a4f8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801a4fc:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801a500:	601a      	str	r2, [r3, #0]
 801a502:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801a506:	220a      	movs	r2, #10
 801a508:	605a      	str	r2, [r3, #4]
 801a50a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801a50e:	4618      	mov	r0, r3
 801a510:	f7e6 ff8d 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801a514:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801a518:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801a51c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801a520:	9300      	str	r3, [sp, #0]
 801a522:	460b      	mov	r3, r1
 801a524:	ca06      	ldmia	r2, {r1, r2}
 801a526:	4845      	ldr	r0, [pc, #276]	; (801a63c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801a528:	f7e6 ff99 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801a52c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801a530:	4618      	mov	r0, r3
 801a532:	f7e6 ff88 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801a536:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801a53a:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801a53e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a542:	429c      	cmp	r4, r3
 801a544:	d004      	beq.n	801a550 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801a546:	3c1c      	subs	r4, #28
 801a548:	4620      	mov	r0, r4
 801a54a:	f7e6 fdc2 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801a54e:	e7f6      	b.n	801a53e <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801a550:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801a554:	2200      	movs	r2, #0
 801a556:	601a      	str	r2, [r3, #0]
 801a558:	605a      	str	r2, [r3, #4]
 801a55a:	609a      	str	r2, [r3, #8]
 801a55c:	233c      	movs	r3, #60	; 0x3c
 801a55e:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801a562:	231b      	movs	r3, #27
 801a564:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801a568:	231c      	movs	r3, #28
 801a56a:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801a56e:	233e      	movs	r3, #62	; 0x3e
 801a570:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801a574:	2319      	movs	r3, #25
 801a576:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801a57a:	231a      	movs	r3, #26
 801a57c:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801a580:	233d      	movs	r3, #61	; 0x3d
 801a582:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801a586:	2318      	movs	r3, #24
 801a588:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801a58c:	231d      	movs	r3, #29
 801a58e:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801a592:	2321      	movs	r3, #33	; 0x21
 801a594:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801a598:	2317      	movs	r3, #23
 801a59a:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801a59e:	231e      	movs	r3, #30
 801a5a0:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801a5a4:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801a5a8:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801a5ac:	2304      	movs	r3, #4
 801a5ae:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801a5b2:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801a5b6:	4618      	mov	r0, r3
 801a5b8:	f7e6 ff81 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801a5bc:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801a5c0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801a5c4:	9300      	str	r3, [sp, #0]
 801a5c6:	4613      	mov	r3, r2
 801a5c8:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801a5cc:	ca06      	ldmia	r2, {r1, r2}
 801a5ce:	481c      	ldr	r0, [pc, #112]	; (801a640 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801a5d0:	f7e6 ff8d 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801a5d4:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801a5d8:	4618      	mov	r0, r3
 801a5da:	f7e6 ff7c 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801a5de:	1d3b      	adds	r3, r7, #4
 801a5e0:	681b      	ldr	r3, [r3, #0]
 801a5e2:	2b00      	cmp	r3, #0
 801a5e4:	d10e      	bne.n	801a604 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801a5e6:	463b      	mov	r3, r7
 801a5e8:	681b      	ldr	r3, [r3, #0]
 801a5ea:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801a5ee:	4293      	cmp	r3, r2
 801a5f0:	d108      	bne.n	801a604 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801a5f2:	4813      	ldr	r0, [pc, #76]	; (801a640 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801a5f4:	f7e9 fbd4 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801a5f8:	4810      	ldr	r0, [pc, #64]	; (801a63c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801a5fa:	f7e9 fbde 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801a5fe:	4804      	ldr	r0, [pc, #16]	; (801a610 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801a600:	f7e9 fbe8 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801a604:	bf00      	nop
 801a606:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801a60a:	46bd      	mov	sp, r7
 801a60c:	bd90      	pop	{r4, r7, pc}
 801a60e:	bf00      	nop
 801a610:	20000458 	.word	0x20000458
 801a614:	08027b48 	.word	0x08027b48
 801a618:	08027b50 	.word	0x08027b50
 801a61c:	08027b58 	.word	0x08027b58
 801a620:	08027b60 	.word	0x08027b60
 801a624:	08027b68 	.word	0x08027b68
 801a628:	08027b70 	.word	0x08027b70
 801a62c:	08027b74 	.word	0x08027b74
 801a630:	08027b7c 	.word	0x08027b7c
 801a634:	08027b84 	.word	0x08027b84
 801a638:	08027b8c 	.word	0x08027b8c
 801a63c:	20000470 	.word	0x20000470
 801a640:	20000488 	.word	0x20000488

0801a644 <_GLOBAL__sub_I__ZN16Variable_handler12get_instanceEv>:
 801a644:	b580      	push	{r7, lr}
 801a646:	af00      	add	r7, sp, #0
 801a648:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801a64c:	2001      	movs	r0, #1
 801a64e:	f7ff fe1d 	bl	801a28c <_Z41__static_initialization_and_destruction_0ii>
 801a652:	bd80      	pop	{r7, pc}

0801a654 <_GLOBAL__sub_D__ZN16Variable_handler12get_instanceEv>:
 801a654:	b580      	push	{r7, lr}
 801a656:	af00      	add	r7, sp, #0
 801a658:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801a65c:	2000      	movs	r0, #0
 801a65e:	f7ff fe15 	bl	801a28c <_Z41__static_initialization_and_destruction_0ii>
 801a662:	bd80      	pop	{r7, pc}

0801a664 <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
#include "Parser.h"

void Parser::parse_variable_or_function_call(Primal_expression *exp)
{
 801a664:	b580      	push	{r7, lr}
 801a666:	b08a      	sub	sp, #40	; 0x28
 801a668:	af00      	add	r7, sp, #0
 801a66a:	6078      	str	r0, [r7, #4]
 801a66c:	6039      	str	r1, [r7, #0]
	std::string id(std::get<std::string>(token_buffer.value));
 801a66e:	687b      	ldr	r3, [r7, #4]
 801a670:	3304      	adds	r3, #4
 801a672:	4618      	mov	r0, r3
 801a674:	f7f9 fc14 	bl	8013ea0 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 801a678:	4602      	mov	r2, r0
 801a67a:	f107 0308 	add.w	r3, r7, #8
 801a67e:	4611      	mov	r1, r2
 801a680:	4618      	mov	r0, r3
 801a682:	f008 fde9 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 801a686:	6878      	ldr	r0, [r7, #4]
 801a688:	f7f9 fa49 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	if (token_buffer.type == TOKEN_LEFT_BRACKET)
 801a68c:	687b      	ldr	r3, [r7, #4]
 801a68e:	781b      	ldrb	r3, [r3, #0]
 801a690:	2b26      	cmp	r3, #38	; 0x26
 801a692:	d113      	bne.n	801a6bc <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression+0x58>
	{
		exp->type = PRIMAL_FUNCTION_CALL;
 801a694:	683b      	ldr	r3, [r7, #0]
 801a696:	2205      	movs	r2, #5
 801a698:	701a      	strb	r2, [r3, #0]
		exp->content = parse_function_call(id);
 801a69a:	f107 0308 	add.w	r3, r7, #8
 801a69e:	4619      	mov	r1, r3
 801a6a0:	6878      	ldr	r0, [r7, #4]
 801a6a2:	f7f8 ffa7 	bl	80135f4 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801a6a6:	4603      	mov	r3, r0
 801a6a8:	623b      	str	r3, [r7, #32]
 801a6aa:	683b      	ldr	r3, [r7, #0]
 801a6ac:	3304      	adds	r3, #4
 801a6ae:	f107 0220 	add.w	r2, r7, #32
 801a6b2:	4611      	mov	r1, r2
 801a6b4:	4618      	mov	r0, r3
 801a6b6:	f000 fcc4 	bl	801b042 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 801a6ba:	e012      	b.n	801a6e2 <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression+0x7e>
	}
	else
	{
		exp->type = PRIMAL_VARIABLE;
 801a6bc:	683b      	ldr	r3, [r7, #0]
 801a6be:	2204      	movs	r2, #4
 801a6c0:	701a      	strb	r2, [r3, #0]
		exp->content = parse_variable(id);
 801a6c2:	f107 0308 	add.w	r3, r7, #8
 801a6c6:	4619      	mov	r1, r3
 801a6c8:	6878      	ldr	r0, [r7, #4]
 801a6ca:	f7f8 fea9 	bl	8013420 <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801a6ce:	4603      	mov	r3, r0
 801a6d0:	627b      	str	r3, [r7, #36]	; 0x24
 801a6d2:	683b      	ldr	r3, [r7, #0]
 801a6d4:	3304      	adds	r3, #4
 801a6d6:	f107 0224 	add.w	r2, r7, #36	; 0x24
 801a6da:	4611      	mov	r1, r2
 801a6dc:	4618      	mov	r0, r3
 801a6de:	f000 fcda 	bl	801b096 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
	std::string id(std::get<std::string>(token_buffer.value));
 801a6e2:	f107 0308 	add.w	r3, r7, #8
 801a6e6:	4618      	mov	r0, r3
 801a6e8:	f008 fc85 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 801a6ec:	bf00      	nop
 801a6ee:	3728      	adds	r7, #40	; 0x28
 801a6f0:	46bd      	mov	sp, r7
 801a6f2:	bd80      	pop	{r7, pc}

0801a6f4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>:
      variant() = default;
 801a6f4:	b580      	push	{r7, lr}
 801a6f6:	b082      	sub	sp, #8
 801a6f8:	af00      	add	r7, sp, #0
 801a6fa:	6078      	str	r0, [r7, #4]
 801a6fc:	687b      	ldr	r3, [r7, #4]
 801a6fe:	4618      	mov	r0, r3
 801a700:	f000 fd3e 	bl	801b180 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>
 801a704:	687b      	ldr	r3, [r7, #4]
 801a706:	4618      	mov	r0, r3
 801a708:	3708      	adds	r7, #8
 801a70a:	46bd      	mov	sp, r7
 801a70c:	bd80      	pop	{r7, pc}

0801a70e <_ZN17Primal_expressionC1Ev>:
	PRIMAL_STRING,
	PRIMAL_VARIABLE,
	PRIMAL_FUNCTION_CALL
}primal_type;

class Primal_expression
 801a70e:	b580      	push	{r7, lr}
 801a710:	b082      	sub	sp, #8
 801a712:	af00      	add	r7, sp, #0
 801a714:	6078      	str	r0, [r7, #4]
 801a716:	687b      	ldr	r3, [r7, #4]
 801a718:	3304      	adds	r3, #4
 801a71a:	4618      	mov	r0, r3
 801a71c:	f7ff ffea 	bl	801a6f4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>
 801a720:	687b      	ldr	r3, [r7, #4]
 801a722:	4618      	mov	r0, r3
 801a724:	3708      	adds	r7, #8
 801a726:	46bd      	mov	sp, r7
 801a728:	bd80      	pop	{r7, pc}
	...

0801a72c <_ZN6Parser23parse_primal_expressionEv>:

Primal_expression* Parser::parse_primal_expression()
{
 801a72c:	b590      	push	{r4, r7, lr}
 801a72e:	b093      	sub	sp, #76	; 0x4c
 801a730:	af00      	add	r7, sp, #0
 801a732:	6078      	str	r0, [r7, #4]
	auto exp = new Primal_expression();
 801a734:	2020      	movs	r0, #32
 801a736:	f008 fa87 	bl	8022c48 <_Znwj>
 801a73a:	4603      	mov	r3, r0
 801a73c:	461c      	mov	r4, r3
 801a73e:	4620      	mov	r0, r4
 801a740:	2320      	movs	r3, #32
 801a742:	461a      	mov	r2, r3
 801a744:	2100      	movs	r1, #0
 801a746:	f009 fe05 	bl	8024354 <memset>
 801a74a:	4620      	mov	r0, r4
 801a74c:	f7ff ffdf 	bl	801a70e <_ZN17Primal_expressionC1Ev>
 801a750:	647c      	str	r4, [r7, #68]	; 0x44
	switch(token_buffer.type)
 801a752:	687b      	ldr	r3, [r7, #4]
 801a754:	781b      	ldrb	r3, [r3, #0]
 801a756:	3b02      	subs	r3, #2
 801a758:	2b0d      	cmp	r3, #13
 801a75a:	f200 808b 	bhi.w	801a874 <_ZN6Parser23parse_primal_expressionEv+0x148>
 801a75e:	a201      	add	r2, pc, #4	; (adr r2, 801a764 <_ZN6Parser23parse_primal_expressionEv+0x38>)
 801a760:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801a764:	0801a86b 	.word	0x0801a86b
 801a768:	0801a7df 	.word	0x0801a7df
 801a76c:	0801a805 	.word	0x0801a805
 801a770:	0801a79d 	.word	0x0801a79d
 801a774:	0801a7bf 	.word	0x0801a7bf
 801a778:	0801a875 	.word	0x0801a875
 801a77c:	0801a875 	.word	0x0801a875
 801a780:	0801a875 	.word	0x0801a875
 801a784:	0801a875 	.word	0x0801a875
 801a788:	0801a875 	.word	0x0801a875
 801a78c:	0801a875 	.word	0x0801a875
 801a790:	0801a875 	.word	0x0801a875
 801a794:	0801a875 	.word	0x0801a875
 801a798:	0801a82b 	.word	0x0801a82b
	{
	case TOKEN_TRUE:
		exp->type = PRIMAL_BOOL;
 801a79c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a79e:	2200      	movs	r2, #0
 801a7a0:	701a      	strb	r2, [r3, #0]
		exp->content = true;
 801a7a2:	2301      	movs	r3, #1
 801a7a4:	73bb      	strb	r3, [r7, #14]
 801a7a6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a7a8:	3304      	adds	r3, #4
 801a7aa:	f107 020e 	add.w	r2, r7, #14
 801a7ae:	4611      	mov	r1, r2
 801a7b0:	4618      	mov	r0, r3
 801a7b2:	f000 fcf2 	bl	801b19a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		get_next_token();
 801a7b6:	6878      	ldr	r0, [r7, #4]
 801a7b8:	f7f9 f9b1 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		break;
 801a7bc:	e077      	b.n	801a8ae <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_FALSE:
		exp->type = PRIMAL_BOOL;
 801a7be:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a7c0:	2200      	movs	r2, #0
 801a7c2:	701a      	strb	r2, [r3, #0]
		exp->content = false;
 801a7c4:	2300      	movs	r3, #0
 801a7c6:	73fb      	strb	r3, [r7, #15]
 801a7c8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a7ca:	3304      	adds	r3, #4
 801a7cc:	f107 020f 	add.w	r2, r7, #15
 801a7d0:	4611      	mov	r1, r2
 801a7d2:	4618      	mov	r0, r3
 801a7d4:	f000 fce1 	bl	801b19a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		get_next_token();
 801a7d8:	6878      	ldr	r0, [r7, #4]
 801a7da:	f7f9 f9a0 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	case TOKEN_INT:
		exp->type = PRIMAL_INT;
 801a7de:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a7e0:	2201      	movs	r2, #1
 801a7e2:	701a      	strb	r2, [r3, #0]
		exp->content = std::get<int>(token_buffer.value);
 801a7e4:	687b      	ldr	r3, [r7, #4]
 801a7e6:	3304      	adds	r3, #4
 801a7e8:	4618      	mov	r0, r3
 801a7ea:	f000 fd01 	bl	801b1f0 <_ZSt3getIiJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>
 801a7ee:	4602      	mov	r2, r0
 801a7f0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a7f2:	3304      	adds	r3, #4
 801a7f4:	4611      	mov	r1, r2
 801a7f6:	4618      	mov	r0, r3
 801a7f8:	f000 fd06 	bl	801b208 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
		get_next_token();
 801a7fc:	6878      	ldr	r0, [r7, #4]
 801a7fe:	f7f9 f98e 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		break;
 801a802:	e054      	b.n	801a8ae <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_FLOAT:
		exp->type = PRIMAL_FLOAT;
 801a804:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a806:	2202      	movs	r2, #2
 801a808:	701a      	strb	r2, [r3, #0]
		exp->content = std::get<float>(token_buffer.value);
 801a80a:	687b      	ldr	r3, [r7, #4]
 801a80c:	3304      	adds	r3, #4
 801a80e:	4618      	mov	r0, r3
 801a810:	f000 fd24 	bl	801b25c <_ZSt3getIfJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>
 801a814:	4602      	mov	r2, r0
 801a816:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a818:	3304      	adds	r3, #4
 801a81a:	4611      	mov	r1, r2
 801a81c:	4618      	mov	r0, r3
 801a81e:	f000 fd29 	bl	801b274 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
		get_next_token();
 801a822:	6878      	ldr	r0, [r7, #4]
 801a824:	f7f9 f97b 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		break;
 801a828:	e041      	b.n	801a8ae <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_STRING:
		exp->type = PRIMAL_STRING;
 801a82a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a82c:	2203      	movs	r2, #3
 801a82e:	701a      	strb	r2, [r3, #0]
		exp->content = std::string(std::get<std::string>(token_buffer.value));
 801a830:	687b      	ldr	r3, [r7, #4]
 801a832:	3304      	adds	r3, #4
 801a834:	4618      	mov	r0, r3
 801a836:	f7f9 fb33 	bl	8013ea0 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 801a83a:	4602      	mov	r2, r0
 801a83c:	f107 0310 	add.w	r3, r7, #16
 801a840:	4611      	mov	r1, r2
 801a842:	4618      	mov	r0, r3
 801a844:	f008 fd08 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801a848:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a84a:	3304      	adds	r3, #4
 801a84c:	f107 0210 	add.w	r2, r7, #16
 801a850:	4611      	mov	r1, r2
 801a852:	4618      	mov	r0, r3
 801a854:	f000 fd38 	bl	801b2c8 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 801a858:	f107 0310 	add.w	r3, r7, #16
 801a85c:	4618      	mov	r0, r3
 801a85e:	f008 fbca 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		get_next_token();
 801a862:	6878      	ldr	r0, [r7, #4]
 801a864:	f7f9 f95b 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		break;
 801a868:	e021      	b.n	801a8ae <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_IDENTIFIER:
		parse_variable_or_function_call(exp);
 801a86a:	6c79      	ldr	r1, [r7, #68]	; 0x44
 801a86c:	6878      	ldr	r0, [r7, #4]
 801a86e:	f7ff fef9 	bl	801a664 <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression>
		break;
 801a872:	e01c      	b.n	801a8ae <_ZN6Parser23parse_primal_expressionEv+0x182>
	default:
		Transmitter::report_error("expression");
 801a874:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801a878:	4618      	mov	r0, r3
 801a87a:	f008 f9f6 	bl	8022c6a <_ZNSaIcEC1Ev>
 801a87e:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801a882:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801a886:	490c      	ldr	r1, [pc, #48]	; (801a8b8 <_ZN6Parser23parse_primal_expressionEv+0x18c>)
 801a888:	4618      	mov	r0, r3
 801a88a:	f7e6 fd7e 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801a88e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801a892:	4618      	mov	r0, r3
 801a894:	f7fe fada 	bl	8018e4c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801a898:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801a89c:	4618      	mov	r0, r3
 801a89e:	f008 fbaa 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801a8a2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801a8a6:	4618      	mov	r0, r3
 801a8a8:	f008 f9e0 	bl	8022c6c <_ZNSaIcED1Ev>
		break;
 801a8ac:	bf00      	nop
	}
	return exp;
 801a8ae:	6c7b      	ldr	r3, [r7, #68]	; 0x44
}
 801a8b0:	4618      	mov	r0, r3
 801a8b2:	374c      	adds	r7, #76	; 0x4c
 801a8b4:	46bd      	mov	sp, r7
 801a8b6:	bd90      	pop	{r4, r7, pc}
 801a8b8:	08027b90 	.word	0x08027b90

0801a8bc <_ZN6Parser23parse_nested_expressionEv>:

Expression* Parser::parse_nested_expression()
{
 801a8bc:	b580      	push	{r7, lr}
 801a8be:	b08a      	sub	sp, #40	; 0x28
 801a8c0:	af00      	add	r7, sp, #0
 801a8c2:	6078      	str	r0, [r7, #4]
	auto exp = parse_expression();
 801a8c4:	6878      	ldr	r0, [r7, #4]
 801a8c6:	f000 fb73 	bl	801afb0 <_ZN6Parser16parse_expressionEv>
 801a8ca:	6278      	str	r0, [r7, #36]	; 0x24
	assert_token(TOKEN_RIGHT_BRACKET, "closing bracket");
 801a8cc:	f107 0320 	add.w	r3, r7, #32
 801a8d0:	4618      	mov	r0, r3
 801a8d2:	f008 f9ca 	bl	8022c6a <_ZNSaIcEC1Ev>
 801a8d6:	f107 0220 	add.w	r2, r7, #32
 801a8da:	f107 0308 	add.w	r3, r7, #8
 801a8de:	490e      	ldr	r1, [pc, #56]	; (801a918 <_ZN6Parser23parse_nested_expressionEv+0x5c>)
 801a8e0:	4618      	mov	r0, r3
 801a8e2:	f7e6 fd52 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801a8e6:	f107 0308 	add.w	r3, r7, #8
 801a8ea:	461a      	mov	r2, r3
 801a8ec:	2127      	movs	r1, #39	; 0x27
 801a8ee:	6878      	ldr	r0, [r7, #4]
 801a8f0:	f7f8 fdfc 	bl	80134ec <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801a8f4:	f107 0308 	add.w	r3, r7, #8
 801a8f8:	4618      	mov	r0, r3
 801a8fa:	f008 fb7c 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801a8fe:	f107 0320 	add.w	r3, r7, #32
 801a902:	4618      	mov	r0, r3
 801a904:	f008 f9b2 	bl	8022c6c <_ZNSaIcED1Ev>
	get_next_token();
 801a908:	6878      	ldr	r0, [r7, #4]
 801a90a:	f7f9 f908 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	return exp;
 801a90e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 801a910:	4618      	mov	r0, r3
 801a912:	3728      	adds	r7, #40	; 0x28
 801a914:	46bd      	mov	sp, r7
 801a916:	bd80      	pop	{r7, pc}
 801a918:	08027b9c 	.word	0x08027b9c

0801a91c <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEC1Ev>:
 801a91c:	b580      	push	{r7, lr}
 801a91e:	b082      	sub	sp, #8
 801a920:	af00      	add	r7, sp, #0
 801a922:	6078      	str	r0, [r7, #4]
 801a924:	687b      	ldr	r3, [r7, #4]
 801a926:	4618      	mov	r0, r3
 801a928:	f000 fd45 	bl	801b3b6 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1Ev>
 801a92c:	687b      	ldr	r3, [r7, #4]
 801a92e:	4618      	mov	r0, r3
 801a930:	3708      	adds	r7, #8
 801a932:	46bd      	mov	sp, r7
 801a934:	bd80      	pop	{r7, pc}

0801a936 <_ZN19Priority_expressionC1Ev>:
	std::variant<bool, int, float, std::string, Variable*, Function_call*> content;
};

class Expression;

class Priority_expression
 801a936:	b580      	push	{r7, lr}
 801a938:	b082      	sub	sp, #8
 801a93a:	af00      	add	r7, sp, #0
 801a93c:	6078      	str	r0, [r7, #4]
 801a93e:	687b      	ldr	r3, [r7, #4]
 801a940:	4618      	mov	r0, r3
 801a942:	f7ff ffeb 	bl	801a91c <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEC1Ev>
 801a946:	687b      	ldr	r3, [r7, #4]
 801a948:	4618      	mov	r0, r3
 801a94a:	3708      	adds	r7, #8
 801a94c:	46bd      	mov	sp, r7
 801a94e:	bd80      	pop	{r7, pc}

0801a950 <_ZN6Parser25parse_priority_expressionEv>:

Priority_expression* Parser::parse_priority_expression()
{
 801a950:	b590      	push	{r4, r7, lr}
 801a952:	b087      	sub	sp, #28
 801a954:	af00      	add	r7, sp, #0
 801a956:	6078      	str	r0, [r7, #4]
	auto exp = new Priority_expression();
 801a958:	2008      	movs	r0, #8
 801a95a:	f008 f975 	bl	8022c48 <_Znwj>
 801a95e:	4603      	mov	r3, r0
 801a960:	461c      	mov	r4, r3
 801a962:	2300      	movs	r3, #0
 801a964:	6023      	str	r3, [r4, #0]
 801a966:	2300      	movs	r3, #0
 801a968:	7123      	strb	r3, [r4, #4]
 801a96a:	4620      	mov	r0, r4
 801a96c:	f7ff ffe3 	bl	801a936 <_ZN19Priority_expressionC1Ev>
 801a970:	617c      	str	r4, [r7, #20]
	if(token_buffer.type == TOKEN_LEFT_BRACKET)
 801a972:	687b      	ldr	r3, [r7, #4]
 801a974:	781b      	ldrb	r3, [r3, #0]
 801a976:	2b26      	cmp	r3, #38	; 0x26
 801a978:	d10f      	bne.n	801a99a <_ZN6Parser25parse_priority_expressionEv+0x4a>
	{
		get_next_token();
 801a97a:	6878      	ldr	r0, [r7, #4]
 801a97c:	f7f9 f8cf 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		exp->exp = parse_nested_expression();
 801a980:	6878      	ldr	r0, [r7, #4]
 801a982:	f7ff ff9b 	bl	801a8bc <_ZN6Parser23parse_nested_expressionEv>
 801a986:	4603      	mov	r3, r0
 801a988:	60fb      	str	r3, [r7, #12]
 801a98a:	697b      	ldr	r3, [r7, #20]
 801a98c:	f107 020c 	add.w	r2, r7, #12
 801a990:	4611      	mov	r1, r2
 801a992:	4618      	mov	r0, r3
 801a994:	f000 fd1c 	bl	801b3d0 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>
 801a998:	e00b      	b.n	801a9b2 <_ZN6Parser25parse_priority_expressionEv+0x62>
	}
	else
	{
		exp->exp = parse_primal_expression();
 801a99a:	6878      	ldr	r0, [r7, #4]
 801a99c:	f7ff fec6 	bl	801a72c <_ZN6Parser23parse_primal_expressionEv>
 801a9a0:	4603      	mov	r3, r0
 801a9a2:	613b      	str	r3, [r7, #16]
 801a9a4:	697b      	ldr	r3, [r7, #20]
 801a9a6:	f107 0210 	add.w	r2, r7, #16
 801a9aa:	4611      	mov	r1, r2
 801a9ac:	4618      	mov	r0, r3
 801a9ae:	f000 fd39 	bl	801b424 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>
	}
	return exp;
 801a9b2:	697b      	ldr	r3, [r7, #20]
}
 801a9b4:	4618      	mov	r0, r3
 801a9b6:	371c      	adds	r7, #28
 801a9b8:	46bd      	mov	sp, r7
 801a9ba:	bd90      	pop	{r4, r7, pc}

0801a9bc <_ZN6Parser20match_unary_operatorEP16Unary_expression>:

bool Parser::match_unary_operator(Unary_expression* exp)
{
 801a9bc:	b480      	push	{r7}
 801a9be:	b083      	sub	sp, #12
 801a9c0:	af00      	add	r7, sp, #0
 801a9c2:	6078      	str	r0, [r7, #4]
 801a9c4:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801a9c6:	687b      	ldr	r3, [r7, #4]
 801a9c8:	781b      	ldrb	r3, [r3, #0]
 801a9ca:	2b17      	cmp	r3, #23
 801a9cc:	d005      	beq.n	801a9da <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x1e>
 801a9ce:	2b20      	cmp	r3, #32
 801a9d0:	d107      	bne.n	801a9e2 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x26>
	{
	case TOKEN_MINUS:
		exp->op = UN_OP_MINUS;
 801a9d2:	683b      	ldr	r3, [r7, #0]
 801a9d4:	2201      	movs	r2, #1
 801a9d6:	711a      	strb	r2, [r3, #4]
		break;
 801a9d8:	e005      	b.n	801a9e6 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2a>
	case TOKEN_EXCLAMATION:
		exp->op = UN_OP_EXCLAMATION;
 801a9da:	683b      	ldr	r3, [r7, #0]
 801a9dc:	2202      	movs	r2, #2
 801a9de:	711a      	strb	r2, [r3, #4]
		break;
 801a9e0:	e001      	b.n	801a9e6 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2a>
	default:
		return false;
 801a9e2:	2300      	movs	r3, #0
 801a9e4:	e000      	b.n	801a9e8 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2c>
	}
	return true;
 801a9e6:	2301      	movs	r3, #1
}
 801a9e8:	4618      	mov	r0, r3
 801a9ea:	370c      	adds	r7, #12
 801a9ec:	46bd      	mov	sp, r7
 801a9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a9f2:	4770      	bx	lr

0801a9f4 <_ZN6Parser22parse_unary_expressionEv>:

Unary_expression* Parser::parse_unary_expression()
{
 801a9f4:	b580      	push	{r7, lr}
 801a9f6:	b084      	sub	sp, #16
 801a9f8:	af00      	add	r7, sp, #0
 801a9fa:	6078      	str	r0, [r7, #4]
	auto exp = new Unary_expression();
 801a9fc:	2008      	movs	r0, #8
 801a9fe:	f008 f923 	bl	8022c48 <_Znwj>
 801aa02:	4603      	mov	r3, r0
 801aa04:	2200      	movs	r2, #0
 801aa06:	601a      	str	r2, [r3, #0]
 801aa08:	2200      	movs	r2, #0
 801aa0a:	711a      	strb	r2, [r3, #4]
 801aa0c:	60fb      	str	r3, [r7, #12]
	if(match_unary_operator(exp))
 801aa0e:	68f9      	ldr	r1, [r7, #12]
 801aa10:	6878      	ldr	r0, [r7, #4]
 801aa12:	f7ff ffd3 	bl	801a9bc <_ZN6Parser20match_unary_operatorEP16Unary_expression>
 801aa16:	4603      	mov	r3, r0
 801aa18:	2b00      	cmp	r3, #0
 801aa1a:	d002      	beq.n	801aa22 <_ZN6Parser22parse_unary_expressionEv+0x2e>
	{
		get_next_token();
 801aa1c:	6878      	ldr	r0, [r7, #4]
 801aa1e:	f7f9 f87e 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
	}
	exp->prior_exp = parse_priority_expression();
 801aa22:	6878      	ldr	r0, [r7, #4]
 801aa24:	f7ff ff94 	bl	801a950 <_ZN6Parser25parse_priority_expressionEv>
 801aa28:	4602      	mov	r2, r0
 801aa2a:	68fb      	ldr	r3, [r7, #12]
 801aa2c:	601a      	str	r2, [r3, #0]
	return exp;
 801aa2e:	68fb      	ldr	r3, [r7, #12]
}
 801aa30:	4618      	mov	r0, r3
 801aa32:	3710      	adds	r7, #16
 801aa34:	46bd      	mov	sp, r7
 801aa36:	bd80      	pop	{r7, pc}

0801aa38 <_ZN6Parser22parse_power_expressionEv>:

Power_expression* Parser::parse_power_expression()
{
 801aa38:	b580      	push	{r7, lr}
 801aa3a:	b084      	sub	sp, #16
 801aa3c:	af00      	add	r7, sp, #0
 801aa3e:	6078      	str	r0, [r7, #4]
	auto exp = new Power_expression();
 801aa40:	2008      	movs	r0, #8
 801aa42:	f008 f901 	bl	8022c48 <_Znwj>
 801aa46:	4603      	mov	r3, r0
 801aa48:	2200      	movs	r2, #0
 801aa4a:	601a      	str	r2, [r3, #0]
 801aa4c:	2200      	movs	r2, #0
 801aa4e:	605a      	str	r2, [r3, #4]
 801aa50:	60fb      	str	r3, [r7, #12]
	exp->left_un_exp = parse_unary_expression();
 801aa52:	6878      	ldr	r0, [r7, #4]
 801aa54:	f7ff ffce 	bl	801a9f4 <_ZN6Parser22parse_unary_expressionEv>
 801aa58:	4602      	mov	r2, r0
 801aa5a:	68fb      	ldr	r3, [r7, #12]
 801aa5c:	601a      	str	r2, [r3, #0]
	if(token_buffer.type == TOKEN_POWER)
 801aa5e:	687b      	ldr	r3, [r7, #4]
 801aa60:	781b      	ldrb	r3, [r3, #0]
 801aa62:	2b23      	cmp	r3, #35	; 0x23
 801aa64:	d109      	bne.n	801aa7a <_ZN6Parser22parse_power_expressionEv+0x42>
	{
		get_next_token();
 801aa66:	6878      	ldr	r0, [r7, #4]
 801aa68:	f7f9 f859 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		exp->right_un_exp = parse_unary_expression();
 801aa6c:	6878      	ldr	r0, [r7, #4]
 801aa6e:	f7ff ffc1 	bl	801a9f4 <_ZN6Parser22parse_unary_expressionEv>
 801aa72:	4602      	mov	r2, r0
 801aa74:	68fb      	ldr	r3, [r7, #12]
 801aa76:	605a      	str	r2, [r3, #4]
 801aa78:	e002      	b.n	801aa80 <_ZN6Parser22parse_power_expressionEv+0x48>
	}
	else
	{
		exp->right_un_exp = nullptr;
 801aa7a:	68fb      	ldr	r3, [r7, #12]
 801aa7c:	2200      	movs	r2, #0
 801aa7e:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801aa80:	68fb      	ldr	r3, [r7, #12]
}
 801aa82:	4618      	mov	r0, r3
 801aa84:	3710      	adds	r7, #16
 801aa86:	46bd      	mov	sp, r7
 801aa88:	bd80      	pop	{r7, pc}

0801aa8a <_ZN6Parser23match_multiply_operatorEP19Multiply_expression>:

bool Parser::match_multiply_operator(Multiply_expression* exp)
{
 801aa8a:	b580      	push	{r7, lr}
 801aa8c:	b084      	sub	sp, #16
 801aa8e:	af00      	add	r7, sp, #0
 801aa90:	6078      	str	r0, [r7, #4]
 801aa92:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801aa94:	687b      	ldr	r3, [r7, #4]
 801aa96:	781b      	ldrb	r3, [r3, #0]
 801aa98:	2b24      	cmp	r3, #36	; 0x24
 801aa9a:	d01c      	beq.n	801aad6 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x4c>
 801aa9c:	2b24      	cmp	r3, #36	; 0x24
 801aa9e:	dc25      	bgt.n	801aaec <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x62>
 801aaa0:	2b21      	cmp	r3, #33	; 0x21
 801aaa2:	d002      	beq.n	801aaaa <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x20>
 801aaa4:	2b22      	cmp	r3, #34	; 0x22
 801aaa6:	d00b      	beq.n	801aac0 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x36>
 801aaa8:	e020      	b.n	801aaec <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x62>
	{
	case TOKEN_MULTIPLY:
		exp->ops.push_back(MULT_OP_MULTIPLY);
 801aaaa:	683b      	ldr	r3, [r7, #0]
 801aaac:	330c      	adds	r3, #12
 801aaae:	2201      	movs	r2, #1
 801aab0:	737a      	strb	r2, [r7, #13]
 801aab2:	f107 020d 	add.w	r2, r7, #13
 801aab6:	4611      	mov	r1, r2
 801aab8:	4618      	mov	r0, r3
 801aaba:	f000 fcdd 	bl	801b478 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801aabe:	e017      	b.n	801aaf0 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	case TOKEN_DIVIDE:
		exp->ops.push_back(MULT_OP_DIVIDE);
 801aac0:	683b      	ldr	r3, [r7, #0]
 801aac2:	330c      	adds	r3, #12
 801aac4:	2202      	movs	r2, #2
 801aac6:	73ba      	strb	r2, [r7, #14]
 801aac8:	f107 020e 	add.w	r2, r7, #14
 801aacc:	4611      	mov	r1, r2
 801aace:	4618      	mov	r0, r3
 801aad0:	f000 fcd2 	bl	801b478 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801aad4:	e00c      	b.n	801aaf0 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	case TOKEN_MODULO:
		exp->ops.push_back(MULT_OP_MODULO);
 801aad6:	683b      	ldr	r3, [r7, #0]
 801aad8:	330c      	adds	r3, #12
 801aada:	2203      	movs	r2, #3
 801aadc:	73fa      	strb	r2, [r7, #15]
 801aade:	f107 020f 	add.w	r2, r7, #15
 801aae2:	4611      	mov	r1, r2
 801aae4:	4618      	mov	r0, r3
 801aae6:	f000 fcc7 	bl	801b478 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801aaea:	e001      	b.n	801aaf0 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	default:
		return false;
 801aaec:	2300      	movs	r3, #0
 801aaee:	e000      	b.n	801aaf2 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x68>
	}
	return true;
 801aaf0:	2301      	movs	r3, #1
}
 801aaf2:	4618      	mov	r0, r3
 801aaf4:	3710      	adds	r7, #16
 801aaf6:	46bd      	mov	sp, r7
 801aaf8:	bd80      	pop	{r7, pc}

0801aafa <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801aafa:	b580      	push	{r7, lr}
 801aafc:	b082      	sub	sp, #8
 801aafe:	af00      	add	r7, sp, #0
 801ab00:	6078      	str	r0, [r7, #4]
 801ab02:	687b      	ldr	r3, [r7, #4]
 801ab04:	4618      	mov	r0, r3
 801ab06:	f000 fcc8 	bl	801b49a <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implC1Ev>
 801ab0a:	687b      	ldr	r3, [r7, #4]
 801ab0c:	4618      	mov	r0, r3
 801ab0e:	3708      	adds	r7, #8
 801ab10:	46bd      	mov	sp, r7
 801ab12:	bd80      	pop	{r7, pc}

0801ab14 <_ZNSt6vectorIP16Power_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801ab14:	b580      	push	{r7, lr}
 801ab16:	b082      	sub	sp, #8
 801ab18:	af00      	add	r7, sp, #0
 801ab1a:	6078      	str	r0, [r7, #4]
 801ab1c:	687b      	ldr	r3, [r7, #4]
 801ab1e:	4618      	mov	r0, r3
 801ab20:	f7ff ffeb 	bl	801aafa <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EEC1Ev>
 801ab24:	687b      	ldr	r3, [r7, #4]
 801ab26:	4618      	mov	r0, r3
 801ab28:	3708      	adds	r7, #8
 801ab2a:	46bd      	mov	sp, r7
 801ab2c:	bd80      	pop	{r7, pc}

0801ab2e <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EEC1Ev>:
      _Vector_base() = default;
 801ab2e:	b580      	push	{r7, lr}
 801ab30:	b082      	sub	sp, #8
 801ab32:	af00      	add	r7, sp, #0
 801ab34:	6078      	str	r0, [r7, #4]
 801ab36:	687b      	ldr	r3, [r7, #4]
 801ab38:	4618      	mov	r0, r3
 801ab3a:	f000 fcbe 	bl	801b4ba <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implC1Ev>
 801ab3e:	687b      	ldr	r3, [r7, #4]
 801ab40:	4618      	mov	r0, r3
 801ab42:	3708      	adds	r7, #8
 801ab44:	46bd      	mov	sp, r7
 801ab46:	bd80      	pop	{r7, pc}

0801ab48 <_ZNSt6vectorI13mult_operatorSaIS0_EEC1Ev>:
      vector() = default;
 801ab48:	b580      	push	{r7, lr}
 801ab4a:	b082      	sub	sp, #8
 801ab4c:	af00      	add	r7, sp, #0
 801ab4e:	6078      	str	r0, [r7, #4]
 801ab50:	687b      	ldr	r3, [r7, #4]
 801ab52:	4618      	mov	r0, r3
 801ab54:	f7ff ffeb 	bl	801ab2e <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EEC1Ev>
 801ab58:	687b      	ldr	r3, [r7, #4]
 801ab5a:	4618      	mov	r0, r3
 801ab5c:	3708      	adds	r7, #8
 801ab5e:	46bd      	mov	sp, r7
 801ab60:	bd80      	pop	{r7, pc}

0801ab62 <_ZN19Multiply_expressionC1Ev>:
	MULT_OP_MULTIPLY,
	MULT_OP_DIVIDE,
	MULT_OP_MODULO
}mult_operator;

class Multiply_expression
 801ab62:	b580      	push	{r7, lr}
 801ab64:	b082      	sub	sp, #8
 801ab66:	af00      	add	r7, sp, #0
 801ab68:	6078      	str	r0, [r7, #4]
 801ab6a:	687b      	ldr	r3, [r7, #4]
 801ab6c:	4618      	mov	r0, r3
 801ab6e:	f7ff ffd1 	bl	801ab14 <_ZNSt6vectorIP16Power_expressionSaIS1_EEC1Ev>
 801ab72:	687b      	ldr	r3, [r7, #4]
 801ab74:	330c      	adds	r3, #12
 801ab76:	4618      	mov	r0, r3
 801ab78:	f7ff ffe6 	bl	801ab48 <_ZNSt6vectorI13mult_operatorSaIS0_EEC1Ev>
 801ab7c:	687b      	ldr	r3, [r7, #4]
 801ab7e:	4618      	mov	r0, r3
 801ab80:	3708      	adds	r7, #8
 801ab82:	46bd      	mov	sp, r7
 801ab84:	bd80      	pop	{r7, pc}

0801ab86 <_ZN6Parser25parse_multiply_expressionEv>:

Multiply_expression* Parser::parse_multiply_expression()
{
 801ab86:	b590      	push	{r4, r7, lr}
 801ab88:	b087      	sub	sp, #28
 801ab8a:	af00      	add	r7, sp, #0
 801ab8c:	6078      	str	r0, [r7, #4]
	auto exp = new Multiply_expression();
 801ab8e:	2018      	movs	r0, #24
 801ab90:	f008 f85a 	bl	8022c48 <_Znwj>
 801ab94:	4603      	mov	r3, r0
 801ab96:	461c      	mov	r4, r3
 801ab98:	4622      	mov	r2, r4
 801ab9a:	2300      	movs	r3, #0
 801ab9c:	6013      	str	r3, [r2, #0]
 801ab9e:	6053      	str	r3, [r2, #4]
 801aba0:	6093      	str	r3, [r2, #8]
 801aba2:	60d3      	str	r3, [r2, #12]
 801aba4:	6113      	str	r3, [r2, #16]
 801aba6:	6153      	str	r3, [r2, #20]
 801aba8:	4620      	mov	r0, r4
 801abaa:	f7ff ffda 	bl	801ab62 <_ZN19Multiply_expressionC1Ev>
 801abae:	617c      	str	r4, [r7, #20]
	exp->pow_exps.push_back(parse_power_expression());
 801abb0:	697c      	ldr	r4, [r7, #20]
 801abb2:	6878      	ldr	r0, [r7, #4]
 801abb4:	f7ff ff40 	bl	801aa38 <_ZN6Parser22parse_power_expressionEv>
 801abb8:	4603      	mov	r3, r0
 801abba:	60fb      	str	r3, [r7, #12]
 801abbc:	f107 030c 	add.w	r3, r7, #12
 801abc0:	4619      	mov	r1, r3
 801abc2:	4620      	mov	r0, r4
 801abc4:	f000 fc89 	bl	801b4da <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>
	while(match_multiply_operator(exp))
 801abc8:	6979      	ldr	r1, [r7, #20]
 801abca:	6878      	ldr	r0, [r7, #4]
 801abcc:	f7ff ff5d 	bl	801aa8a <_ZN6Parser23match_multiply_operatorEP19Multiply_expression>
 801abd0:	4603      	mov	r3, r0
 801abd2:	2b00      	cmp	r3, #0
 801abd4:	d00f      	beq.n	801abf6 <_ZN6Parser25parse_multiply_expressionEv+0x70>
	{
		get_next_token();
 801abd6:	6878      	ldr	r0, [r7, #4]
 801abd8:	f7f8 ffa1 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		exp->pow_exps.push_back(parse_power_expression());
 801abdc:	697c      	ldr	r4, [r7, #20]
 801abde:	6878      	ldr	r0, [r7, #4]
 801abe0:	f7ff ff2a 	bl	801aa38 <_ZN6Parser22parse_power_expressionEv>
 801abe4:	4603      	mov	r3, r0
 801abe6:	613b      	str	r3, [r7, #16]
 801abe8:	f107 0310 	add.w	r3, r7, #16
 801abec:	4619      	mov	r1, r3
 801abee:	4620      	mov	r0, r4
 801abf0:	f000 fc73 	bl	801b4da <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>
	while(match_multiply_operator(exp))
 801abf4:	e7e8      	b.n	801abc8 <_ZN6Parser25parse_multiply_expressionEv+0x42>
	}
	return exp;
 801abf6:	697b      	ldr	r3, [r7, #20]
}
 801abf8:	4618      	mov	r0, r3
 801abfa:	371c      	adds	r7, #28
 801abfc:	46bd      	mov	sp, r7
 801abfe:	bd90      	pop	{r4, r7, pc}

0801ac00 <_ZN6Parser18match_sum_operatorEP14Sum_expression>:

bool Parser::match_sum_operator(Sum_expression* exp)
{
 801ac00:	b580      	push	{r7, lr}
 801ac02:	b084      	sub	sp, #16
 801ac04:	af00      	add	r7, sp, #0
 801ac06:	6078      	str	r0, [r7, #4]
 801ac08:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801ac0a:	687b      	ldr	r3, [r7, #4]
 801ac0c:	781b      	ldrb	r3, [r3, #0]
 801ac0e:	2b1f      	cmp	r3, #31
 801ac10:	d002      	beq.n	801ac18 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x18>
 801ac12:	2b20      	cmp	r3, #32
 801ac14:	d00b      	beq.n	801ac2e <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x2e>
 801ac16:	e015      	b.n	801ac44 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x44>
	{
	case TOKEN_PLUS:
		exp->ops.push_back(SUM_OP_PLUS);
 801ac18:	683b      	ldr	r3, [r7, #0]
 801ac1a:	330c      	adds	r3, #12
 801ac1c:	2200      	movs	r2, #0
 801ac1e:	73ba      	strb	r2, [r7, #14]
 801ac20:	f107 020e 	add.w	r2, r7, #14
 801ac24:	4611      	mov	r1, r2
 801ac26:	4618      	mov	r0, r3
 801ac28:	f000 fc68 	bl	801b4fc <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>
		break;
 801ac2c:	e00c      	b.n	801ac48 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x48>
	case TOKEN_MINUS:
		exp->ops.push_back(SUM_OP_MINUS);
 801ac2e:	683b      	ldr	r3, [r7, #0]
 801ac30:	330c      	adds	r3, #12
 801ac32:	2201      	movs	r2, #1
 801ac34:	73fa      	strb	r2, [r7, #15]
 801ac36:	f107 020f 	add.w	r2, r7, #15
 801ac3a:	4611      	mov	r1, r2
 801ac3c:	4618      	mov	r0, r3
 801ac3e:	f000 fc5d 	bl	801b4fc <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>
		break;
 801ac42:	e001      	b.n	801ac48 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x48>
	default:
		return false;
 801ac44:	2300      	movs	r3, #0
 801ac46:	e000      	b.n	801ac4a <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x4a>
	}
	return true;
 801ac48:	2301      	movs	r3, #1
}
 801ac4a:	4618      	mov	r0, r3
 801ac4c:	3710      	adds	r7, #16
 801ac4e:	46bd      	mov	sp, r7
 801ac50:	bd80      	pop	{r7, pc}

0801ac52 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801ac52:	b580      	push	{r7, lr}
 801ac54:	b082      	sub	sp, #8
 801ac56:	af00      	add	r7, sp, #0
 801ac58:	6078      	str	r0, [r7, #4]
 801ac5a:	687b      	ldr	r3, [r7, #4]
 801ac5c:	4618      	mov	r0, r3
 801ac5e:	f000 fc5e 	bl	801b51e <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implC1Ev>
 801ac62:	687b      	ldr	r3, [r7, #4]
 801ac64:	4618      	mov	r0, r3
 801ac66:	3708      	adds	r7, #8
 801ac68:	46bd      	mov	sp, r7
 801ac6a:	bd80      	pop	{r7, pc}

0801ac6c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801ac6c:	b580      	push	{r7, lr}
 801ac6e:	b082      	sub	sp, #8
 801ac70:	af00      	add	r7, sp, #0
 801ac72:	6078      	str	r0, [r7, #4]
 801ac74:	687b      	ldr	r3, [r7, #4]
 801ac76:	4618      	mov	r0, r3
 801ac78:	f7ff ffeb 	bl	801ac52 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EEC1Ev>
 801ac7c:	687b      	ldr	r3, [r7, #4]
 801ac7e:	4618      	mov	r0, r3
 801ac80:	3708      	adds	r7, #8
 801ac82:	46bd      	mov	sp, r7
 801ac84:	bd80      	pop	{r7, pc}

0801ac86 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EEC1Ev>:
      _Vector_base() = default;
 801ac86:	b580      	push	{r7, lr}
 801ac88:	b082      	sub	sp, #8
 801ac8a:	af00      	add	r7, sp, #0
 801ac8c:	6078      	str	r0, [r7, #4]
 801ac8e:	687b      	ldr	r3, [r7, #4]
 801ac90:	4618      	mov	r0, r3
 801ac92:	f000 fc54 	bl	801b53e <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implC1Ev>
 801ac96:	687b      	ldr	r3, [r7, #4]
 801ac98:	4618      	mov	r0, r3
 801ac9a:	3708      	adds	r7, #8
 801ac9c:	46bd      	mov	sp, r7
 801ac9e:	bd80      	pop	{r7, pc}

0801aca0 <_ZNSt6vectorI12sum_operatorSaIS0_EEC1Ev>:
      vector() = default;
 801aca0:	b580      	push	{r7, lr}
 801aca2:	b082      	sub	sp, #8
 801aca4:	af00      	add	r7, sp, #0
 801aca6:	6078      	str	r0, [r7, #4]
 801aca8:	687b      	ldr	r3, [r7, #4]
 801acaa:	4618      	mov	r0, r3
 801acac:	f7ff ffeb 	bl	801ac86 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EEC1Ev>
 801acb0:	687b      	ldr	r3, [r7, #4]
 801acb2:	4618      	mov	r0, r3
 801acb4:	3708      	adds	r7, #8
 801acb6:	46bd      	mov	sp, r7
 801acb8:	bd80      	pop	{r7, pc}

0801acba <_ZN14Sum_expressionC1Ev>:
{
	SUM_OP_PLUS,
	SUM_OP_MINUS
}sum_operator;

class Sum_expression
 801acba:	b580      	push	{r7, lr}
 801acbc:	b082      	sub	sp, #8
 801acbe:	af00      	add	r7, sp, #0
 801acc0:	6078      	str	r0, [r7, #4]
 801acc2:	687b      	ldr	r3, [r7, #4]
 801acc4:	4618      	mov	r0, r3
 801acc6:	f7ff ffd1 	bl	801ac6c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEC1Ev>
 801acca:	687b      	ldr	r3, [r7, #4]
 801accc:	330c      	adds	r3, #12
 801acce:	4618      	mov	r0, r3
 801acd0:	f7ff ffe6 	bl	801aca0 <_ZNSt6vectorI12sum_operatorSaIS0_EEC1Ev>
 801acd4:	687b      	ldr	r3, [r7, #4]
 801acd6:	4618      	mov	r0, r3
 801acd8:	3708      	adds	r7, #8
 801acda:	46bd      	mov	sp, r7
 801acdc:	bd80      	pop	{r7, pc}

0801acde <_ZN6Parser20parse_sum_expressionEv>:

Sum_expression* Parser::parse_sum_expression()
{
 801acde:	b590      	push	{r4, r7, lr}
 801ace0:	b087      	sub	sp, #28
 801ace2:	af00      	add	r7, sp, #0
 801ace4:	6078      	str	r0, [r7, #4]
	auto exp = new Sum_expression();
 801ace6:	2018      	movs	r0, #24
 801ace8:	f007 ffae 	bl	8022c48 <_Znwj>
 801acec:	4603      	mov	r3, r0
 801acee:	461c      	mov	r4, r3
 801acf0:	4622      	mov	r2, r4
 801acf2:	2300      	movs	r3, #0
 801acf4:	6013      	str	r3, [r2, #0]
 801acf6:	6053      	str	r3, [r2, #4]
 801acf8:	6093      	str	r3, [r2, #8]
 801acfa:	60d3      	str	r3, [r2, #12]
 801acfc:	6113      	str	r3, [r2, #16]
 801acfe:	6153      	str	r3, [r2, #20]
 801ad00:	4620      	mov	r0, r4
 801ad02:	f7ff ffda 	bl	801acba <_ZN14Sum_expressionC1Ev>
 801ad06:	617c      	str	r4, [r7, #20]
	exp->mult_exps.push_back(parse_multiply_expression());
 801ad08:	697c      	ldr	r4, [r7, #20]
 801ad0a:	6878      	ldr	r0, [r7, #4]
 801ad0c:	f7ff ff3b 	bl	801ab86 <_ZN6Parser25parse_multiply_expressionEv>
 801ad10:	4603      	mov	r3, r0
 801ad12:	60fb      	str	r3, [r7, #12]
 801ad14:	f107 030c 	add.w	r3, r7, #12
 801ad18:	4619      	mov	r1, r3
 801ad1a:	4620      	mov	r0, r4
 801ad1c:	f000 fc1f 	bl	801b55e <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>
	while(match_sum_operator(exp))
 801ad20:	6979      	ldr	r1, [r7, #20]
 801ad22:	6878      	ldr	r0, [r7, #4]
 801ad24:	f7ff ff6c 	bl	801ac00 <_ZN6Parser18match_sum_operatorEP14Sum_expression>
 801ad28:	4603      	mov	r3, r0
 801ad2a:	2b00      	cmp	r3, #0
 801ad2c:	d00f      	beq.n	801ad4e <_ZN6Parser20parse_sum_expressionEv+0x70>
	{
		get_next_token();
 801ad2e:	6878      	ldr	r0, [r7, #4]
 801ad30:	f7f8 fef5 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		exp->mult_exps.push_back(parse_multiply_expression());
 801ad34:	697c      	ldr	r4, [r7, #20]
 801ad36:	6878      	ldr	r0, [r7, #4]
 801ad38:	f7ff ff25 	bl	801ab86 <_ZN6Parser25parse_multiply_expressionEv>
 801ad3c:	4603      	mov	r3, r0
 801ad3e:	613b      	str	r3, [r7, #16]
 801ad40:	f107 0310 	add.w	r3, r7, #16
 801ad44:	4619      	mov	r1, r3
 801ad46:	4620      	mov	r0, r4
 801ad48:	f000 fc09 	bl	801b55e <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>
	while(match_sum_operator(exp))
 801ad4c:	e7e8      	b.n	801ad20 <_ZN6Parser20parse_sum_expressionEv+0x42>
	}
	return exp;
 801ad4e:	697b      	ldr	r3, [r7, #20]
}
 801ad50:	4618      	mov	r0, r3
 801ad52:	371c      	adds	r7, #28
 801ad54:	46bd      	mov	sp, r7
 801ad56:	bd90      	pop	{r4, r7, pc}

0801ad58 <_ZN6Parser23match_relation_operatorEP19Relation_expression>:

bool Parser::match_relation_operator(Relation_expression* exp)
{
 801ad58:	b480      	push	{r7}
 801ad5a:	b083      	sub	sp, #12
 801ad5c:	af00      	add	r7, sp, #0
 801ad5e:	6078      	str	r0, [r7, #4]
 801ad60:	6039      	str	r1, [r7, #0]
	switch (token_buffer.type)
 801ad62:	687b      	ldr	r3, [r7, #4]
 801ad64:	781b      	ldrb	r3, [r3, #0]
 801ad66:	3b19      	subs	r3, #25
 801ad68:	2b03      	cmp	r3, #3
 801ad6a:	d81b      	bhi.n	801ada4 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x4c>
 801ad6c:	a201      	add	r2, pc, #4	; (adr r2, 801ad74 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x1c>)
 801ad6e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801ad72:	bf00      	nop
 801ad74:	0801ad95 	.word	0x0801ad95
 801ad78:	0801ad9d 	.word	0x0801ad9d
 801ad7c:	0801ad85 	.word	0x0801ad85
 801ad80:	0801ad8d 	.word	0x0801ad8d
	{
	case TOKEN_SMALLER_THAN:
		exp->op = REL_OP_SMALLER;
 801ad84:	683b      	ldr	r3, [r7, #0]
 801ad86:	2201      	movs	r2, #1
 801ad88:	721a      	strb	r2, [r3, #8]
		break;
 801ad8a:	e010      	b.n	801adae <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_SMALLER_OR_EQUAL:
		exp->op = REL_OP_SMALLER_EQUAL;
 801ad8c:	683b      	ldr	r3, [r7, #0]
 801ad8e:	2202      	movs	r2, #2
 801ad90:	721a      	strb	r2, [r3, #8]
		break;
 801ad92:	e00c      	b.n	801adae <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_GREATER_THAN:
		exp->op = REL_OP_GREATER;
 801ad94:	683b      	ldr	r3, [r7, #0]
 801ad96:	2203      	movs	r2, #3
 801ad98:	721a      	strb	r2, [r3, #8]
		break;
 801ad9a:	e008      	b.n	801adae <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_GREATER_OR_EQUAL:
		exp->op = REL_OP_SMALLER_EQUAL;
 801ad9c:	683b      	ldr	r3, [r7, #0]
 801ad9e:	2202      	movs	r2, #2
 801ada0:	721a      	strb	r2, [r3, #8]
		break;
 801ada2:	e004      	b.n	801adae <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	default:
		exp->right_sum_exp = nullptr;
 801ada4:	683b      	ldr	r3, [r7, #0]
 801ada6:	2200      	movs	r2, #0
 801ada8:	605a      	str	r2, [r3, #4]
		return false;
 801adaa:	2300      	movs	r3, #0
 801adac:	e000      	b.n	801adb0 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x58>
	}
	return true;
 801adae:	2301      	movs	r3, #1
}
 801adb0:	4618      	mov	r0, r3
 801adb2:	370c      	adds	r7, #12
 801adb4:	46bd      	mov	sp, r7
 801adb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801adba:	4770      	bx	lr

0801adbc <_ZN6Parser25parse_relation_expressionEv>:

Relation_expression* Parser::parse_relation_expression()
{
 801adbc:	b580      	push	{r7, lr}
 801adbe:	b084      	sub	sp, #16
 801adc0:	af00      	add	r7, sp, #0
 801adc2:	6078      	str	r0, [r7, #4]
	auto exp = new Relation_expression();
 801adc4:	200c      	movs	r0, #12
 801adc6:	f007 ff3f 	bl	8022c48 <_Znwj>
 801adca:	4603      	mov	r3, r0
 801adcc:	2200      	movs	r2, #0
 801adce:	601a      	str	r2, [r3, #0]
 801add0:	2200      	movs	r2, #0
 801add2:	605a      	str	r2, [r3, #4]
 801add4:	2200      	movs	r2, #0
 801add6:	721a      	strb	r2, [r3, #8]
 801add8:	60fb      	str	r3, [r7, #12]
	exp->left_sum_exp = parse_sum_expression();
 801adda:	6878      	ldr	r0, [r7, #4]
 801addc:	f7ff ff7f 	bl	801acde <_ZN6Parser20parse_sum_expressionEv>
 801ade0:	4602      	mov	r2, r0
 801ade2:	68fb      	ldr	r3, [r7, #12]
 801ade4:	601a      	str	r2, [r3, #0]
	if(match_relation_operator(exp))
 801ade6:	68f9      	ldr	r1, [r7, #12]
 801ade8:	6878      	ldr	r0, [r7, #4]
 801adea:	f7ff ffb5 	bl	801ad58 <_ZN6Parser23match_relation_operatorEP19Relation_expression>
 801adee:	4603      	mov	r3, r0
 801adf0:	2b00      	cmp	r3, #0
 801adf2:	d008      	beq.n	801ae06 <_ZN6Parser25parse_relation_expressionEv+0x4a>
	{
		get_next_token();
 801adf4:	6878      	ldr	r0, [r7, #4]
 801adf6:	f7f8 fe92 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		exp->right_sum_exp = parse_sum_expression();
 801adfa:	6878      	ldr	r0, [r7, #4]
 801adfc:	f7ff ff6f 	bl	801acde <_ZN6Parser20parse_sum_expressionEv>
 801ae00:	4602      	mov	r2, r0
 801ae02:	68fb      	ldr	r3, [r7, #12]
 801ae04:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801ae06:	68fb      	ldr	r3, [r7, #12]
}
 801ae08:	4618      	mov	r0, r3
 801ae0a:	3710      	adds	r7, #16
 801ae0c:	46bd      	mov	sp, r7
 801ae0e:	bd80      	pop	{r7, pc}

0801ae10 <_ZN6Parser22match_compare_operatorEP18Compare_expression>:

bool Parser::match_compare_operator(Compare_expression *exp)
{
 801ae10:	b480      	push	{r7}
 801ae12:	b083      	sub	sp, #12
 801ae14:	af00      	add	r7, sp, #0
 801ae16:	6078      	str	r0, [r7, #4]
 801ae18:	6039      	str	r1, [r7, #0]
	switch (token_buffer.type)
 801ae1a:	687b      	ldr	r3, [r7, #4]
 801ae1c:	781b      	ldrb	r3, [r3, #0]
 801ae1e:	2b1d      	cmp	r3, #29
 801ae20:	d002      	beq.n	801ae28 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x18>
 801ae22:	2b1e      	cmp	r3, #30
 801ae24:	d004      	beq.n	801ae30 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x20>
 801ae26:	e007      	b.n	801ae38 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x28>
	{
	case TOKEN_EQUALS:
		exp->op = COMP_OP_EQUAL;
 801ae28:	683b      	ldr	r3, [r7, #0]
 801ae2a:	2201      	movs	r2, #1
 801ae2c:	721a      	strb	r2, [r3, #8]
		break;
 801ae2e:	e008      	b.n	801ae42 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x32>
	case TOKEN_NOT_EQUAL:
		exp->op = COMP_OP_NOT_EQUAL;
 801ae30:	683b      	ldr	r3, [r7, #0]
 801ae32:	2202      	movs	r2, #2
 801ae34:	721a      	strb	r2, [r3, #8]
		break;
 801ae36:	e004      	b.n	801ae42 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x32>
	default:
		exp->right_rel_exp = nullptr;
 801ae38:	683b      	ldr	r3, [r7, #0]
 801ae3a:	2200      	movs	r2, #0
 801ae3c:	605a      	str	r2, [r3, #4]
		return false;
 801ae3e:	2300      	movs	r3, #0
 801ae40:	e000      	b.n	801ae44 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x34>
	}
	return true;
 801ae42:	2301      	movs	r3, #1
}
 801ae44:	4618      	mov	r0, r3
 801ae46:	370c      	adds	r7, #12
 801ae48:	46bd      	mov	sp, r7
 801ae4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ae4e:	4770      	bx	lr

0801ae50 <_ZN6Parser24parse_compare_expressionEv>:

Compare_expression* Parser::parse_compare_expression()
{
 801ae50:	b580      	push	{r7, lr}
 801ae52:	b084      	sub	sp, #16
 801ae54:	af00      	add	r7, sp, #0
 801ae56:	6078      	str	r0, [r7, #4]
	auto exp = new Compare_expression();
 801ae58:	200c      	movs	r0, #12
 801ae5a:	f007 fef5 	bl	8022c48 <_Znwj>
 801ae5e:	4603      	mov	r3, r0
 801ae60:	2200      	movs	r2, #0
 801ae62:	601a      	str	r2, [r3, #0]
 801ae64:	2200      	movs	r2, #0
 801ae66:	605a      	str	r2, [r3, #4]
 801ae68:	2200      	movs	r2, #0
 801ae6a:	721a      	strb	r2, [r3, #8]
 801ae6c:	60fb      	str	r3, [r7, #12]
	exp->left_rel_exp = parse_relation_expression();
 801ae6e:	6878      	ldr	r0, [r7, #4]
 801ae70:	f7ff ffa4 	bl	801adbc <_ZN6Parser25parse_relation_expressionEv>
 801ae74:	4602      	mov	r2, r0
 801ae76:	68fb      	ldr	r3, [r7, #12]
 801ae78:	601a      	str	r2, [r3, #0]
	if(match_compare_operator(exp))
 801ae7a:	68f9      	ldr	r1, [r7, #12]
 801ae7c:	6878      	ldr	r0, [r7, #4]
 801ae7e:	f7ff ffc7 	bl	801ae10 <_ZN6Parser22match_compare_operatorEP18Compare_expression>
 801ae82:	4603      	mov	r3, r0
 801ae84:	2b00      	cmp	r3, #0
 801ae86:	d008      	beq.n	801ae9a <_ZN6Parser24parse_compare_expressionEv+0x4a>
	{
		get_next_token();
 801ae88:	6878      	ldr	r0, [r7, #4]
 801ae8a:	f7f8 fe48 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		exp->right_rel_exp = parse_relation_expression();
 801ae8e:	6878      	ldr	r0, [r7, #4]
 801ae90:	f7ff ff94 	bl	801adbc <_ZN6Parser25parse_relation_expressionEv>
 801ae94:	4602      	mov	r2, r0
 801ae96:	68fb      	ldr	r3, [r7, #12]
 801ae98:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801ae9a:	68fb      	ldr	r3, [r7, #12]
}
 801ae9c:	4618      	mov	r0, r3
 801ae9e:	3710      	adds	r7, #16
 801aea0:	46bd      	mov	sp, r7
 801aea2:	bd80      	pop	{r7, pc}

0801aea4 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801aea4:	b580      	push	{r7, lr}
 801aea6:	b082      	sub	sp, #8
 801aea8:	af00      	add	r7, sp, #0
 801aeaa:	6078      	str	r0, [r7, #4]
 801aeac:	687b      	ldr	r3, [r7, #4]
 801aeae:	4618      	mov	r0, r3
 801aeb0:	f000 fb66 	bl	801b580 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implC1Ev>
 801aeb4:	687b      	ldr	r3, [r7, #4]
 801aeb6:	4618      	mov	r0, r3
 801aeb8:	3708      	adds	r7, #8
 801aeba:	46bd      	mov	sp, r7
 801aebc:	bd80      	pop	{r7, pc}

0801aebe <_ZNSt6vectorIP18Compare_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801aebe:	b580      	push	{r7, lr}
 801aec0:	b082      	sub	sp, #8
 801aec2:	af00      	add	r7, sp, #0
 801aec4:	6078      	str	r0, [r7, #4]
 801aec6:	687b      	ldr	r3, [r7, #4]
 801aec8:	4618      	mov	r0, r3
 801aeca:	f7ff ffeb 	bl	801aea4 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EEC1Ev>
 801aece:	687b      	ldr	r3, [r7, #4]
 801aed0:	4618      	mov	r0, r3
 801aed2:	3708      	adds	r7, #8
 801aed4:	46bd      	mov	sp, r7
 801aed6:	bd80      	pop	{r7, pc}

0801aed8 <_ZN14And_expressionC1Ev>:
	Relation_expression* left_rel_exp;
	Relation_expression* right_rel_exp;
	comp_operator op;
};

class And_expression
 801aed8:	b580      	push	{r7, lr}
 801aeda:	b082      	sub	sp, #8
 801aedc:	af00      	add	r7, sp, #0
 801aede:	6078      	str	r0, [r7, #4]
 801aee0:	687b      	ldr	r3, [r7, #4]
 801aee2:	4618      	mov	r0, r3
 801aee4:	f7ff ffeb 	bl	801aebe <_ZNSt6vectorIP18Compare_expressionSaIS1_EEC1Ev>
 801aee8:	687b      	ldr	r3, [r7, #4]
 801aeea:	4618      	mov	r0, r3
 801aeec:	3708      	adds	r7, #8
 801aeee:	46bd      	mov	sp, r7
 801aef0:	bd80      	pop	{r7, pc}

0801aef2 <_ZN6Parser20parse_and_expressionEv>:

And_expression* Parser::parse_and_expression()
{
 801aef2:	b590      	push	{r4, r7, lr}
 801aef4:	b087      	sub	sp, #28
 801aef6:	af00      	add	r7, sp, #0
 801aef8:	6078      	str	r0, [r7, #4]
	auto exp = new And_expression();
 801aefa:	200c      	movs	r0, #12
 801aefc:	f007 fea4 	bl	8022c48 <_Znwj>
 801af00:	4603      	mov	r3, r0
 801af02:	461c      	mov	r4, r3
 801af04:	4622      	mov	r2, r4
 801af06:	2300      	movs	r3, #0
 801af08:	6013      	str	r3, [r2, #0]
 801af0a:	6053      	str	r3, [r2, #4]
 801af0c:	6093      	str	r3, [r2, #8]
 801af0e:	4620      	mov	r0, r4
 801af10:	f7ff ffe2 	bl	801aed8 <_ZN14And_expressionC1Ev>
 801af14:	617c      	str	r4, [r7, #20]
	exp->comp_exps.push_back(parse_compare_expression());
 801af16:	697c      	ldr	r4, [r7, #20]
 801af18:	6878      	ldr	r0, [r7, #4]
 801af1a:	f7ff ff99 	bl	801ae50 <_ZN6Parser24parse_compare_expressionEv>
 801af1e:	4603      	mov	r3, r0
 801af20:	60fb      	str	r3, [r7, #12]
 801af22:	f107 030c 	add.w	r3, r7, #12
 801af26:	4619      	mov	r1, r3
 801af28:	4620      	mov	r0, r4
 801af2a:	f000 fb39 	bl	801b5a0 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_AND)
 801af2e:	687b      	ldr	r3, [r7, #4]
 801af30:	781b      	ldrb	r3, [r3, #0]
 801af32:	2b16      	cmp	r3, #22
 801af34:	d10f      	bne.n	801af56 <_ZN6Parser20parse_and_expressionEv+0x64>
	{
		get_next_token();
 801af36:	6878      	ldr	r0, [r7, #4]
 801af38:	f7f8 fdf1 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		exp->comp_exps.push_back(parse_compare_expression());
 801af3c:	697c      	ldr	r4, [r7, #20]
 801af3e:	6878      	ldr	r0, [r7, #4]
 801af40:	f7ff ff86 	bl	801ae50 <_ZN6Parser24parse_compare_expressionEv>
 801af44:	4603      	mov	r3, r0
 801af46:	613b      	str	r3, [r7, #16]
 801af48:	f107 0310 	add.w	r3, r7, #16
 801af4c:	4619      	mov	r1, r3
 801af4e:	4620      	mov	r0, r4
 801af50:	f000 fb26 	bl	801b5a0 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_AND)
 801af54:	e7eb      	b.n	801af2e <_ZN6Parser20parse_and_expressionEv+0x3c>
	}
	return exp;
 801af56:	697b      	ldr	r3, [r7, #20]
}
 801af58:	4618      	mov	r0, r3
 801af5a:	371c      	adds	r7, #28
 801af5c:	46bd      	mov	sp, r7
 801af5e:	bd90      	pop	{r4, r7, pc}

0801af60 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801af60:	b580      	push	{r7, lr}
 801af62:	b082      	sub	sp, #8
 801af64:	af00      	add	r7, sp, #0
 801af66:	6078      	str	r0, [r7, #4]
 801af68:	687b      	ldr	r3, [r7, #4]
 801af6a:	4618      	mov	r0, r3
 801af6c:	f000 fb29 	bl	801b5c2 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implC1Ev>
 801af70:	687b      	ldr	r3, [r7, #4]
 801af72:	4618      	mov	r0, r3
 801af74:	3708      	adds	r7, #8
 801af76:	46bd      	mov	sp, r7
 801af78:	bd80      	pop	{r7, pc}

0801af7a <_ZNSt6vectorIP14And_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801af7a:	b580      	push	{r7, lr}
 801af7c:	b082      	sub	sp, #8
 801af7e:	af00      	add	r7, sp, #0
 801af80:	6078      	str	r0, [r7, #4]
 801af82:	687b      	ldr	r3, [r7, #4]
 801af84:	4618      	mov	r0, r3
 801af86:	f7ff ffeb 	bl	801af60 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EEC1Ev>
 801af8a:	687b      	ldr	r3, [r7, #4]
 801af8c:	4618      	mov	r0, r3
 801af8e:	3708      	adds	r7, #8
 801af90:	46bd      	mov	sp, r7
 801af92:	bd80      	pop	{r7, pc}

0801af94 <_ZN10ExpressionC1Ev>:
public:
	~And_expression();
	std::vector<Compare_expression*> comp_exps;
};

class Expression
 801af94:	b580      	push	{r7, lr}
 801af96:	b082      	sub	sp, #8
 801af98:	af00      	add	r7, sp, #0
 801af9a:	6078      	str	r0, [r7, #4]
 801af9c:	687b      	ldr	r3, [r7, #4]
 801af9e:	3308      	adds	r3, #8
 801afa0:	4618      	mov	r0, r3
 801afa2:	f7ff ffea 	bl	801af7a <_ZNSt6vectorIP14And_expressionSaIS1_EEC1Ev>
 801afa6:	687b      	ldr	r3, [r7, #4]
 801afa8:	4618      	mov	r0, r3
 801afaa:	3708      	adds	r7, #8
 801afac:	46bd      	mov	sp, r7
 801afae:	bd80      	pop	{r7, pc}

0801afb0 <_ZN6Parser16parse_expressionEv>:

Expression* Parser::parse_expression()
{
 801afb0:	b590      	push	{r4, r7, lr}
 801afb2:	b087      	sub	sp, #28
 801afb4:	af00      	add	r7, sp, #0
 801afb6:	6078      	str	r0, [r7, #4]
	auto exp = new Expression();
 801afb8:	2014      	movs	r0, #20
 801afba:	f007 fe45 	bl	8022c48 <_Znwj>
 801afbe:	4603      	mov	r3, r0
 801afc0:	461c      	mov	r4, r3
 801afc2:	4622      	mov	r2, r4
 801afc4:	2300      	movs	r3, #0
 801afc6:	6013      	str	r3, [r2, #0]
 801afc8:	6053      	str	r3, [r2, #4]
 801afca:	6093      	str	r3, [r2, #8]
 801afcc:	60d3      	str	r3, [r2, #12]
 801afce:	6113      	str	r3, [r2, #16]
 801afd0:	4620      	mov	r0, r4
 801afd2:	f7ff ffdf 	bl	801af94 <_ZN10ExpressionC1Ev>
 801afd6:	617c      	str	r4, [r7, #20]
	exp->line = Position_counter::get_instance().line;
 801afd8:	f7fb fc7a 	bl	80168d0 <_ZN16Position_counter12get_instanceEv>
 801afdc:	4603      	mov	r3, r0
 801afde:	681a      	ldr	r2, [r3, #0]
 801afe0:	697b      	ldr	r3, [r7, #20]
 801afe2:	601a      	str	r2, [r3, #0]
	exp->position = Position_counter::get_instance().position;
 801afe4:	f7fb fc74 	bl	80168d0 <_ZN16Position_counter12get_instanceEv>
 801afe8:	4603      	mov	r3, r0
 801afea:	685a      	ldr	r2, [r3, #4]
 801afec:	697b      	ldr	r3, [r7, #20]
 801afee:	605a      	str	r2, [r3, #4]
	exp->and_exps.push_back(parse_and_expression());
 801aff0:	697b      	ldr	r3, [r7, #20]
 801aff2:	f103 0408 	add.w	r4, r3, #8
 801aff6:	6878      	ldr	r0, [r7, #4]
 801aff8:	f7ff ff7b 	bl	801aef2 <_ZN6Parser20parse_and_expressionEv>
 801affc:	4603      	mov	r3, r0
 801affe:	60fb      	str	r3, [r7, #12]
 801b000:	f107 030c 	add.w	r3, r7, #12
 801b004:	4619      	mov	r1, r3
 801b006:	4620      	mov	r0, r4
 801b008:	f000 faeb 	bl	801b5e2 <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_OR)
 801b00c:	687b      	ldr	r3, [r7, #4]
 801b00e:	781b      	ldrb	r3, [r3, #0]
 801b010:	2b15      	cmp	r3, #21
 801b012:	d111      	bne.n	801b038 <_ZN6Parser16parse_expressionEv+0x88>
	{
		get_next_token();
 801b014:	6878      	ldr	r0, [r7, #4]
 801b016:	f7f8 fd82 	bl	8013b1e <_ZN6Parser14get_next_tokenEv>
		exp->and_exps.push_back(parse_and_expression());
 801b01a:	697b      	ldr	r3, [r7, #20]
 801b01c:	f103 0408 	add.w	r4, r3, #8
 801b020:	6878      	ldr	r0, [r7, #4]
 801b022:	f7ff ff66 	bl	801aef2 <_ZN6Parser20parse_and_expressionEv>
 801b026:	4603      	mov	r3, r0
 801b028:	613b      	str	r3, [r7, #16]
 801b02a:	f107 0310 	add.w	r3, r7, #16
 801b02e:	4619      	mov	r1, r3
 801b030:	4620      	mov	r0, r4
 801b032:	f000 fad6 	bl	801b5e2 <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_OR)
 801b036:	e7e9      	b.n	801b00c <_ZN6Parser16parse_expressionEv+0x5c>
	}
	return exp;
 801b038:	697b      	ldr	r3, [r7, #20]
}
 801b03a:	4618      	mov	r0, r3
 801b03c:	371c      	adds	r7, #28
 801b03e:	46bd      	mov	sp, r7
 801b040:	bd90      	pop	{r4, r7, pc}

0801b042 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801b042:	b590      	push	{r4, r7, lr}
 801b044:	b085      	sub	sp, #20
 801b046:	af00      	add	r7, sp, #0
 801b048:	6078      	str	r0, [r7, #4]
 801b04a:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b04c:	2305      	movs	r3, #5
 801b04e:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b050:	6878      	ldr	r0, [r7, #4]
 801b052:	f7e9 faf4 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b056:	4603      	mov	r3, r0
 801b058:	2b05      	cmp	r3, #5
 801b05a:	bf0c      	ite	eq
 801b05c:	2301      	moveq	r3, #1
 801b05e:	2300      	movne	r3, #0
 801b060:	b2db      	uxtb	r3, r3
 801b062:	2b00      	cmp	r3, #0
 801b064:	d00a      	beq.n	801b07c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b066:	6838      	ldr	r0, [r7, #0]
 801b068:	f7f9 fb64 	bl	8014734 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801b06c:	4603      	mov	r3, r0
 801b06e:	681c      	ldr	r4, [r3, #0]
 801b070:	6878      	ldr	r0, [r7, #4]
 801b072:	f7e9 fe73 	bl	8004d5c <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b076:	4603      	mov	r3, r0
 801b078:	601c      	str	r4, [r3, #0]
 801b07a:	e007      	b.n	801b08c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b07c:	6838      	ldr	r0, [r7, #0]
 801b07e:	f7f9 fb59 	bl	8014734 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801b082:	4603      	mov	r3, r0
 801b084:	4619      	mov	r1, r3
 801b086:	6878      	ldr	r0, [r7, #4]
 801b088:	f000 fabc 	bl	801b604 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj5EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801b08c:	687b      	ldr	r3, [r7, #4]
	}
 801b08e:	4618      	mov	r0, r3
 801b090:	3714      	adds	r7, #20
 801b092:	46bd      	mov	sp, r7
 801b094:	bd90      	pop	{r4, r7, pc}

0801b096 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801b096:	b590      	push	{r4, r7, lr}
 801b098:	b085      	sub	sp, #20
 801b09a:	af00      	add	r7, sp, #0
 801b09c:	6078      	str	r0, [r7, #4]
 801b09e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b0a0:	2304      	movs	r3, #4
 801b0a2:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b0a4:	6878      	ldr	r0, [r7, #4]
 801b0a6:	f7e9 faca 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b0aa:	4603      	mov	r3, r0
 801b0ac:	2b04      	cmp	r3, #4
 801b0ae:	bf0c      	ite	eq
 801b0b0:	2301      	moveq	r3, #1
 801b0b2:	2300      	movne	r3, #0
 801b0b4:	b2db      	uxtb	r3, r3
 801b0b6:	2b00      	cmp	r3, #0
 801b0b8:	d00a      	beq.n	801b0d0 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b0ba:	6838      	ldr	r0, [r7, #0]
 801b0bc:	f000 fabb 	bl	801b636 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801b0c0:	4603      	mov	r3, r0
 801b0c2:	681c      	ldr	r4, [r3, #0]
 801b0c4:	6878      	ldr	r0, [r7, #4]
 801b0c6:	f7e9 fdb1 	bl	8004c2c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b0ca:	4603      	mov	r3, r0
 801b0cc:	601c      	str	r4, [r3, #0]
 801b0ce:	e007      	b.n	801b0e0 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b0d0:	6838      	ldr	r0, [r7, #0]
 801b0d2:	f000 fab0 	bl	801b636 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801b0d6:	4603      	mov	r3, r0
 801b0d8:	4619      	mov	r1, r3
 801b0da:	6878      	ldr	r0, [r7, #4]
 801b0dc:	f000 fab6 	bl	801b64c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj4EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801b0e0:	687b      	ldr	r3, [r7, #4]
	}
 801b0e2:	4618      	mov	r0, r3
 801b0e4:	3714      	adds	r7, #20
 801b0e6:	46bd      	mov	sp, r7
 801b0e8:	bd90      	pop	{r4, r7, pc}

0801b0ea <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b0ea:	b580      	push	{r7, lr}
 801b0ec:	b082      	sub	sp, #8
 801b0ee:	af00      	add	r7, sp, #0
 801b0f0:	6078      	str	r0, [r7, #4]
 801b0f2:	7039      	strb	r1, [r7, #0]
 801b0f4:	687b      	ldr	r3, [r7, #4]
 801b0f6:	4611      	mov	r1, r2
 801b0f8:	4618      	mov	r0, r3
 801b0fa:	f000 fade 	bl	801b6ba <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b0fe:	687b      	ldr	r3, [r7, #4]
 801b100:	4618      	mov	r0, r3
 801b102:	3708      	adds	r7, #8
 801b104:	46bd      	mov	sp, r7
 801b106:	bd80      	pop	{r7, pc}

0801b108 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b108:	b580      	push	{r7, lr}
 801b10a:	b082      	sub	sp, #8
 801b10c:	af00      	add	r7, sp, #0
 801b10e:	6078      	str	r0, [r7, #4]
 801b110:	7039      	strb	r1, [r7, #0]
 801b112:	687b      	ldr	r3, [r7, #4]
 801b114:	4611      	mov	r1, r2
 801b116:	4618      	mov	r0, r3
 801b118:	f7ff ffe7 	bl	801b0ea <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b11c:	687b      	ldr	r3, [r7, #4]
 801b11e:	4618      	mov	r0, r3
 801b120:	3708      	adds	r7, #8
 801b122:	46bd      	mov	sp, r7
 801b124:	bd80      	pop	{r7, pc}

0801b126 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b126:	b580      	push	{r7, lr}
 801b128:	b082      	sub	sp, #8
 801b12a:	af00      	add	r7, sp, #0
 801b12c:	6078      	str	r0, [r7, #4]
 801b12e:	7039      	strb	r1, [r7, #0]
 801b130:	687b      	ldr	r3, [r7, #4]
 801b132:	4611      	mov	r1, r2
 801b134:	4618      	mov	r0, r3
 801b136:	f7ff ffe7 	bl	801b108 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b13a:	687b      	ldr	r3, [r7, #4]
 801b13c:	4618      	mov	r0, r3
 801b13e:	3708      	adds	r7, #8
 801b140:	46bd      	mov	sp, r7
 801b142:	bd80      	pop	{r7, pc}

0801b144 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b144:	b580      	push	{r7, lr}
 801b146:	b082      	sub	sp, #8
 801b148:	af00      	add	r7, sp, #0
 801b14a:	6078      	str	r0, [r7, #4]
 801b14c:	7039      	strb	r1, [r7, #0]
 801b14e:	687b      	ldr	r3, [r7, #4]
 801b150:	4611      	mov	r1, r2
 801b152:	4618      	mov	r0, r3
 801b154:	f7ff ffe7 	bl	801b126 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b158:	687b      	ldr	r3, [r7, #4]
 801b15a:	4618      	mov	r0, r3
 801b15c:	3708      	adds	r7, #8
 801b15e:	46bd      	mov	sp, r7
 801b160:	bd80      	pop	{r7, pc}

0801b162 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 801b162:	b580      	push	{r7, lr}
 801b164:	b082      	sub	sp, #8
 801b166:	af00      	add	r7, sp, #0
 801b168:	6078      	str	r0, [r7, #4]
 801b16a:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 801b16c:	687b      	ldr	r3, [r7, #4]
 801b16e:	4611      	mov	r1, r2
 801b170:	4618      	mov	r0, r3
 801b172:	f7ff ffe7 	bl	801b144 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801b176:	687b      	ldr	r3, [r7, #4]
 801b178:	4618      	mov	r0, r3
 801b17a:	3708      	adds	r7, #8
 801b17c:	46bd      	mov	sp, r7
 801b17e:	bd80      	pop	{r7, pc}

0801b180 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>:
      _Variant_base()
 801b180:	b580      	push	{r7, lr}
 801b182:	b082      	sub	sp, #8
 801b184:	af00      	add	r7, sp, #0
 801b186:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 801b188:	4619      	mov	r1, r3
 801b18a:	6878      	ldr	r0, [r7, #4]
 801b18c:	f7ff ffe9 	bl	801b162 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b190:	687b      	ldr	r3, [r7, #4]
 801b192:	4618      	mov	r0, r3
 801b194:	3708      	adds	r7, #8
 801b196:	46bd      	mov	sp, r7
 801b198:	bd80      	pop	{r7, pc}

0801b19a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801b19a:	b590      	push	{r4, r7, lr}
 801b19c:	b085      	sub	sp, #20
 801b19e:	af00      	add	r7, sp, #0
 801b1a0:	6078      	str	r0, [r7, #4]
 801b1a2:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b1a4:	2300      	movs	r3, #0
 801b1a6:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b1a8:	6878      	ldr	r0, [r7, #4]
 801b1aa:	f7e9 fa48 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b1ae:	4603      	mov	r3, r0
 801b1b0:	2b00      	cmp	r3, #0
 801b1b2:	bf0c      	ite	eq
 801b1b4:	2301      	moveq	r3, #1
 801b1b6:	2300      	movne	r3, #0
 801b1b8:	b2db      	uxtb	r3, r3
 801b1ba:	2b00      	cmp	r3, #0
 801b1bc:	d00b      	beq.n	801b1d6 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3c>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b1be:	6838      	ldr	r0, [r7, #0]
 801b1c0:	f7ef ffa7 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801b1c4:	4603      	mov	r3, r0
 801b1c6:	781c      	ldrb	r4, [r3, #0]
 801b1c8:	6878      	ldr	r0, [r7, #4]
 801b1ca:	f7ee fc05 	bl	80099d8 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b1ce:	4603      	mov	r3, r0
 801b1d0:	4622      	mov	r2, r4
 801b1d2:	701a      	strb	r2, [r3, #0]
 801b1d4:	e007      	b.n	801b1e6 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4c>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b1d6:	6838      	ldr	r0, [r7, #0]
 801b1d8:	f7ef ff9b 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801b1dc:	4603      	mov	r3, r0
 801b1de:	4619      	mov	r1, r3
 801b1e0:	6878      	ldr	r0, [r7, #4]
 801b1e2:	f000 fa7c 	bl	801b6de <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj0EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801b1e6:	687b      	ldr	r3, [r7, #4]
	}
 801b1e8:	4618      	mov	r0, r3
 801b1ea:	3714      	adds	r7, #20
 801b1ec:	46bd      	mov	sp, r7
 801b1ee:	bd90      	pop	{r4, r7, pc}

0801b1f0 <_ZSt3getIiJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801b1f0:	b580      	push	{r7, lr}
 801b1f2:	b082      	sub	sp, #8
 801b1f4:	af00      	add	r7, sp, #0
 801b1f6:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801b1f8:	6878      	ldr	r0, [r7, #4]
 801b1fa:	f7f6 f953 	bl	80114a4 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801b1fe:	4603      	mov	r3, r0
    }
 801b200:	4618      	mov	r0, r3
 801b202:	3708      	adds	r7, #8
 801b204:	46bd      	mov	sp, r7
 801b206:	bd80      	pop	{r7, pc}

0801b208 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 801b208:	b590      	push	{r4, r7, lr}
 801b20a:	b085      	sub	sp, #20
 801b20c:	af00      	add	r7, sp, #0
 801b20e:	6078      	str	r0, [r7, #4]
 801b210:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b212:	2301      	movs	r3, #1
 801b214:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b216:	6878      	ldr	r0, [r7, #4]
 801b218:	f7e9 fa11 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b21c:	4603      	mov	r3, r0
 801b21e:	2b01      	cmp	r3, #1
 801b220:	bf0c      	ite	eq
 801b222:	2301      	moveq	r3, #1
 801b224:	2300      	movne	r3, #0
 801b226:	b2db      	uxtb	r3, r3
 801b228:	2b00      	cmp	r3, #0
 801b22a:	d00a      	beq.n	801b242 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b22c:	6838      	ldr	r0, [r7, #0]
 801b22e:	f7ea fee4 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801b232:	4603      	mov	r3, r0
 801b234:	681c      	ldr	r4, [r3, #0]
 801b236:	6878      	ldr	r0, [r7, #4]
 801b238:	f7ee fb7a 	bl	8009930 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b23c:	4603      	mov	r3, r0
 801b23e:	601c      	str	r4, [r3, #0]
 801b240:	e007      	b.n	801b252 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b242:	6838      	ldr	r0, [r7, #0]
 801b244:	f7ea fed9 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801b248:	4603      	mov	r3, r0
 801b24a:	4619      	mov	r1, r3
 801b24c:	6878      	ldr	r0, [r7, #4]
 801b24e:	f000 fa5f 	bl	801b710 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj1EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 801b252:	687b      	ldr	r3, [r7, #4]
	}
 801b254:	4618      	mov	r0, r3
 801b256:	3714      	adds	r7, #20
 801b258:	46bd      	mov	sp, r7
 801b25a:	bd90      	pop	{r4, r7, pc}

0801b25c <_ZSt3getIfJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801b25c:	b580      	push	{r7, lr}
 801b25e:	b082      	sub	sp, #8
 801b260:	af00      	add	r7, sp, #0
 801b262:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801b264:	6878      	ldr	r0, [r7, #4]
 801b266:	f7f6 f999 	bl	801159c <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801b26a:	4603      	mov	r3, r0
    }
 801b26c:	4618      	mov	r0, r3
 801b26e:	3708      	adds	r7, #8
 801b270:	46bd      	mov	sp, r7
 801b272:	bd80      	pop	{r7, pc}

0801b274 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 801b274:	b590      	push	{r4, r7, lr}
 801b276:	b085      	sub	sp, #20
 801b278:	af00      	add	r7, sp, #0
 801b27a:	6078      	str	r0, [r7, #4]
 801b27c:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b27e:	2302      	movs	r3, #2
 801b280:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b282:	6878      	ldr	r0, [r7, #4]
 801b284:	f7e9 f9db 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b288:	4603      	mov	r3, r0
 801b28a:	2b02      	cmp	r3, #2
 801b28c:	bf0c      	ite	eq
 801b28e:	2301      	moveq	r3, #1
 801b290:	2300      	movne	r3, #0
 801b292:	b2db      	uxtb	r3, r3
 801b294:	2b00      	cmp	r3, #0
 801b296:	d00a      	beq.n	801b2ae <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b298:	6838      	ldr	r0, [r7, #0]
 801b29a:	f7ea fed0 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801b29e:	4603      	mov	r3, r0
 801b2a0:	681c      	ldr	r4, [r3, #0]
 801b2a2:	6878      	ldr	r0, [r7, #4]
 801b2a4:	f7ee fb60 	bl	8009968 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b2a8:	4603      	mov	r3, r0
 801b2aa:	601c      	str	r4, [r3, #0]
 801b2ac:	e007      	b.n	801b2be <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b2ae:	6838      	ldr	r0, [r7, #0]
 801b2b0:	f7ea fec5 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801b2b4:	4603      	mov	r3, r0
 801b2b6:	4619      	mov	r1, r3
 801b2b8:	6878      	ldr	r0, [r7, #4]
 801b2ba:	f000 fa42 	bl	801b742 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj2EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 801b2be:	687b      	ldr	r3, [r7, #4]
	}
 801b2c0:	4618      	mov	r0, r3
 801b2c2:	3714      	adds	r7, #20
 801b2c4:	46bd      	mov	sp, r7
 801b2c6:	bd90      	pop	{r4, r7, pc}

0801b2c8 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801b2c8:	b590      	push	{r4, r7, lr}
 801b2ca:	b085      	sub	sp, #20
 801b2cc:	af00      	add	r7, sp, #0
 801b2ce:	6078      	str	r0, [r7, #4]
 801b2d0:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b2d2:	2303      	movs	r3, #3
 801b2d4:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b2d6:	6878      	ldr	r0, [r7, #4]
 801b2d8:	f7e9 f9b1 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b2dc:	4603      	mov	r3, r0
 801b2de:	2b03      	cmp	r3, #3
 801b2e0:	bf0c      	ite	eq
 801b2e2:	2301      	moveq	r3, #1
 801b2e4:	2300      	movne	r3, #0
 801b2e6:	b2db      	uxtb	r3, r3
 801b2e8:	2b00      	cmp	r3, #0
 801b2ea:	d00c      	beq.n	801b306 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b2ec:	6838      	ldr	r0, [r7, #0]
 801b2ee:	f7ef ff3d 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801b2f2:	4604      	mov	r4, r0
 801b2f4:	6878      	ldr	r0, [r7, #4]
 801b2f6:	f7ee fb53 	bl	80099a0 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b2fa:	4603      	mov	r3, r0
 801b2fc:	4621      	mov	r1, r4
 801b2fe:	4618      	mov	r0, r3
 801b300:	f007 fe85 	bl	802300e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 801b304:	e007      	b.n	801b316 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b306:	6838      	ldr	r0, [r7, #0]
 801b308:	f7ef ff30 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801b30c:	4603      	mov	r3, r0
 801b30e:	4619      	mov	r1, r3
 801b310:	6878      	ldr	r0, [r7, #4]
 801b312:	f000 fa2f 	bl	801b774 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801b316:	687b      	ldr	r3, [r7, #4]
	}
 801b318:	4618      	mov	r0, r3
 801b31a:	3714      	adds	r7, #20
 801b31c:	46bd      	mov	sp, r7
 801b31e:	bd90      	pop	{r4, r7, pc}

0801b320 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b320:	b580      	push	{r7, lr}
 801b322:	b082      	sub	sp, #8
 801b324:	af00      	add	r7, sp, #0
 801b326:	6078      	str	r0, [r7, #4]
 801b328:	7039      	strb	r1, [r7, #0]
 801b32a:	687b      	ldr	r3, [r7, #4]
 801b32c:	4611      	mov	r1, r2
 801b32e:	4618      	mov	r0, r3
 801b330:	f000 fa57 	bl	801b7e2 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b334:	687b      	ldr	r3, [r7, #4]
 801b336:	4618      	mov	r0, r3
 801b338:	3708      	adds	r7, #8
 801b33a:	46bd      	mov	sp, r7
 801b33c:	bd80      	pop	{r7, pc}

0801b33e <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b33e:	b580      	push	{r7, lr}
 801b340:	b082      	sub	sp, #8
 801b342:	af00      	add	r7, sp, #0
 801b344:	6078      	str	r0, [r7, #4]
 801b346:	7039      	strb	r1, [r7, #0]
 801b348:	687b      	ldr	r3, [r7, #4]
 801b34a:	4611      	mov	r1, r2
 801b34c:	4618      	mov	r0, r3
 801b34e:	f7ff ffe7 	bl	801b320 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b352:	687b      	ldr	r3, [r7, #4]
 801b354:	4618      	mov	r0, r3
 801b356:	3708      	adds	r7, #8
 801b358:	46bd      	mov	sp, r7
 801b35a:	bd80      	pop	{r7, pc}

0801b35c <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b35c:	b580      	push	{r7, lr}
 801b35e:	b082      	sub	sp, #8
 801b360:	af00      	add	r7, sp, #0
 801b362:	6078      	str	r0, [r7, #4]
 801b364:	7039      	strb	r1, [r7, #0]
 801b366:	687b      	ldr	r3, [r7, #4]
 801b368:	4611      	mov	r1, r2
 801b36a:	4618      	mov	r0, r3
 801b36c:	f7ff ffe7 	bl	801b33e <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b370:	687b      	ldr	r3, [r7, #4]
 801b372:	4618      	mov	r0, r3
 801b374:	3708      	adds	r7, #8
 801b376:	46bd      	mov	sp, r7
 801b378:	bd80      	pop	{r7, pc}

0801b37a <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b37a:	b580      	push	{r7, lr}
 801b37c:	b082      	sub	sp, #8
 801b37e:	af00      	add	r7, sp, #0
 801b380:	6078      	str	r0, [r7, #4]
 801b382:	7039      	strb	r1, [r7, #0]
 801b384:	687b      	ldr	r3, [r7, #4]
 801b386:	4611      	mov	r1, r2
 801b388:	4618      	mov	r0, r3
 801b38a:	f7ff ffe7 	bl	801b35c <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b38e:	687b      	ldr	r3, [r7, #4]
 801b390:	4618      	mov	r0, r3
 801b392:	3708      	adds	r7, #8
 801b394:	46bd      	mov	sp, r7
 801b396:	bd80      	pop	{r7, pc}

0801b398 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 801b398:	b580      	push	{r7, lr}
 801b39a:	b082      	sub	sp, #8
 801b39c:	af00      	add	r7, sp, #0
 801b39e:	6078      	str	r0, [r7, #4]
 801b3a0:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 801b3a2:	687b      	ldr	r3, [r7, #4]
 801b3a4:	4611      	mov	r1, r2
 801b3a6:	4618      	mov	r0, r3
 801b3a8:	f7ff ffe7 	bl	801b37a <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801b3ac:	687b      	ldr	r3, [r7, #4]
 801b3ae:	4618      	mov	r0, r3
 801b3b0:	3708      	adds	r7, #8
 801b3b2:	46bd      	mov	sp, r7
 801b3b4:	bd80      	pop	{r7, pc}

0801b3b6 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1Ev>:
      _Variant_base()
 801b3b6:	b580      	push	{r7, lr}
 801b3b8:	b082      	sub	sp, #8
 801b3ba:	af00      	add	r7, sp, #0
 801b3bc:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 801b3be:	4619      	mov	r1, r3
 801b3c0:	6878      	ldr	r0, [r7, #4]
 801b3c2:	f7ff ffe9 	bl	801b398 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b3c6:	687b      	ldr	r3, [r7, #4]
 801b3c8:	4618      	mov	r0, r3
 801b3ca:	3708      	adds	r7, #8
 801b3cc:	46bd      	mov	sp, r7
 801b3ce:	bd80      	pop	{r7, pc}

0801b3d0 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>:
	operator=(_Tp&& __rhs)
 801b3d0:	b590      	push	{r4, r7, lr}
 801b3d2:	b085      	sub	sp, #20
 801b3d4:	af00      	add	r7, sp, #0
 801b3d6:	6078      	str	r0, [r7, #4]
 801b3d8:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b3da:	2301      	movs	r3, #1
 801b3dc:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b3de:	6878      	ldr	r0, [r7, #4]
 801b3e0:	f7e9 f97a 	bl	80046d8 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 801b3e4:	4603      	mov	r3, r0
 801b3e6:	2b01      	cmp	r3, #1
 801b3e8:	bf0c      	ite	eq
 801b3ea:	2301      	moveq	r3, #1
 801b3ec:	2300      	movne	r3, #0
 801b3ee:	b2db      	uxtb	r3, r3
 801b3f0:	2b00      	cmp	r3, #0
 801b3f2:	d00a      	beq.n	801b40a <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b3f4:	6838      	ldr	r0, [r7, #0]
 801b3f6:	f7f9 fd2f 	bl	8014e58 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b3fa:	4603      	mov	r3, r0
 801b3fc:	681c      	ldr	r4, [r3, #0]
 801b3fe:	6878      	ldr	r0, [r7, #4]
 801b400:	f7e9 fcfc 	bl	8004dfc <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801b404:	4603      	mov	r3, r0
 801b406:	601c      	str	r4, [r3, #0]
 801b408:	e007      	b.n	801b41a <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b40a:	6838      	ldr	r0, [r7, #0]
 801b40c:	f7f9 fd24 	bl	8014e58 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b410:	4603      	mov	r3, r0
 801b412:	4619      	mov	r1, r3
 801b414:	6878      	ldr	r0, [r7, #4]
 801b416:	f000 f9f6 	bl	801b806 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>
	  return *this;
 801b41a:	687b      	ldr	r3, [r7, #4]
	}
 801b41c:	4618      	mov	r0, r3
 801b41e:	3714      	adds	r7, #20
 801b420:	46bd      	mov	sp, r7
 801b422:	bd90      	pop	{r4, r7, pc}

0801b424 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>:
	operator=(_Tp&& __rhs)
 801b424:	b590      	push	{r4, r7, lr}
 801b426:	b085      	sub	sp, #20
 801b428:	af00      	add	r7, sp, #0
 801b42a:	6078      	str	r0, [r7, #4]
 801b42c:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b42e:	2300      	movs	r3, #0
 801b430:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b432:	6878      	ldr	r0, [r7, #4]
 801b434:	f7e9 f950 	bl	80046d8 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 801b438:	4603      	mov	r3, r0
 801b43a:	2b00      	cmp	r3, #0
 801b43c:	bf0c      	ite	eq
 801b43e:	2301      	moveq	r3, #1
 801b440:	2300      	movne	r3, #0
 801b442:	b2db      	uxtb	r3, r3
 801b444:	2b00      	cmp	r3, #0
 801b446:	d00a      	beq.n	801b45e <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b448:	6838      	ldr	r0, [r7, #0]
 801b44a:	f000 f9f5 	bl	801b838 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b44e:	4603      	mov	r3, r0
 801b450:	681c      	ldr	r4, [r3, #0]
 801b452:	6878      	ldr	r0, [r7, #4]
 801b454:	f7e9 fd10 	bl	8004e78 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801b458:	4603      	mov	r3, r0
 801b45a:	601c      	str	r4, [r3, #0]
 801b45c:	e007      	b.n	801b46e <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b45e:	6838      	ldr	r0, [r7, #0]
 801b460:	f000 f9ea 	bl	801b838 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b464:	4603      	mov	r3, r0
 801b466:	4619      	mov	r1, r3
 801b468:	6878      	ldr	r0, [r7, #4]
 801b46a:	f000 f9f0 	bl	801b84e <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>
	  return *this;
 801b46e:	687b      	ldr	r3, [r7, #4]
	}
 801b470:	4618      	mov	r0, r3
 801b472:	3714      	adds	r7, #20
 801b474:	46bd      	mov	sp, r7
 801b476:	bd90      	pop	{r4, r7, pc}

0801b478 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>:
      push_back(value_type&& __x)
 801b478:	b580      	push	{r7, lr}
 801b47a:	b082      	sub	sp, #8
 801b47c:	af00      	add	r7, sp, #0
 801b47e:	6078      	str	r0, [r7, #4]
 801b480:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b482:	6838      	ldr	r0, [r7, #0]
 801b484:	f000 f9fc 	bl	801b880 <_ZSt4moveIR13mult_operatorEONSt16remove_referenceIT_E4typeEOS3_>
 801b488:	4603      	mov	r3, r0
 801b48a:	4619      	mov	r1, r3
 801b48c:	6878      	ldr	r0, [r7, #4]
 801b48e:	f000 fa02 	bl	801b896 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>
 801b492:	bf00      	nop
 801b494:	3708      	adds	r7, #8
 801b496:	46bd      	mov	sp, r7
 801b498:	bd80      	pop	{r7, pc}

0801b49a <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b49a:	b580      	push	{r7, lr}
 801b49c:	b082      	sub	sp, #8
 801b49e:	af00      	add	r7, sp, #0
 801b4a0:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b4a2:	6878      	ldr	r0, [r7, #4]
 801b4a4:	f000 fa29 	bl	801b8fa <_ZNSaIP16Power_expressionEC1Ev>
 801b4a8:	687b      	ldr	r3, [r7, #4]
 801b4aa:	4618      	mov	r0, r3
 801b4ac:	f000 fa31 	bl	801b912 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801b4b0:	687b      	ldr	r3, [r7, #4]
 801b4b2:	4618      	mov	r0, r3
 801b4b4:	3708      	adds	r7, #8
 801b4b6:	46bd      	mov	sp, r7
 801b4b8:	bd80      	pop	{r7, pc}

0801b4ba <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b4ba:	b580      	push	{r7, lr}
 801b4bc:	b082      	sub	sp, #8
 801b4be:	af00      	add	r7, sp, #0
 801b4c0:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b4c2:	6878      	ldr	r0, [r7, #4]
 801b4c4:	f000 fa39 	bl	801b93a <_ZNSaI13mult_operatorEC1Ev>
 801b4c8:	687b      	ldr	r3, [r7, #4]
 801b4ca:	4618      	mov	r0, r3
 801b4cc:	f000 fa41 	bl	801b952 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 801b4d0:	687b      	ldr	r3, [r7, #4]
 801b4d2:	4618      	mov	r0, r3
 801b4d4:	3708      	adds	r7, #8
 801b4d6:	46bd      	mov	sp, r7
 801b4d8:	bd80      	pop	{r7, pc}

0801b4da <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801b4da:	b580      	push	{r7, lr}
 801b4dc:	b082      	sub	sp, #8
 801b4de:	af00      	add	r7, sp, #0
 801b4e0:	6078      	str	r0, [r7, #4]
 801b4e2:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b4e4:	6838      	ldr	r0, [r7, #0]
 801b4e6:	f000 fa48 	bl	801b97a <_ZSt4moveIRP16Power_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801b4ea:	4603      	mov	r3, r0
 801b4ec:	4619      	mov	r1, r3
 801b4ee:	6878      	ldr	r0, [r7, #4]
 801b4f0:	f000 fa4e 	bl	801b990 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801b4f4:	bf00      	nop
 801b4f6:	3708      	adds	r7, #8
 801b4f8:	46bd      	mov	sp, r7
 801b4fa:	bd80      	pop	{r7, pc}

0801b4fc <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>:
      push_back(value_type&& __x)
 801b4fc:	b580      	push	{r7, lr}
 801b4fe:	b082      	sub	sp, #8
 801b500:	af00      	add	r7, sp, #0
 801b502:	6078      	str	r0, [r7, #4]
 801b504:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b506:	6838      	ldr	r0, [r7, #0]
 801b508:	f000 fa74 	bl	801b9f4 <_ZSt4moveIR12sum_operatorEONSt16remove_referenceIT_E4typeEOS3_>
 801b50c:	4603      	mov	r3, r0
 801b50e:	4619      	mov	r1, r3
 801b510:	6878      	ldr	r0, [r7, #4]
 801b512:	f000 fa7a 	bl	801ba0a <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>
 801b516:	bf00      	nop
 801b518:	3708      	adds	r7, #8
 801b51a:	46bd      	mov	sp, r7
 801b51c:	bd80      	pop	{r7, pc}

0801b51e <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b51e:	b580      	push	{r7, lr}
 801b520:	b082      	sub	sp, #8
 801b522:	af00      	add	r7, sp, #0
 801b524:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b526:	6878      	ldr	r0, [r7, #4]
 801b528:	f000 faa1 	bl	801ba6e <_ZNSaIP19Multiply_expressionEC1Ev>
 801b52c:	687b      	ldr	r3, [r7, #4]
 801b52e:	4618      	mov	r0, r3
 801b530:	f000 faa9 	bl	801ba86 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801b534:	687b      	ldr	r3, [r7, #4]
 801b536:	4618      	mov	r0, r3
 801b538:	3708      	adds	r7, #8
 801b53a:	46bd      	mov	sp, r7
 801b53c:	bd80      	pop	{r7, pc}

0801b53e <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b53e:	b580      	push	{r7, lr}
 801b540:	b082      	sub	sp, #8
 801b542:	af00      	add	r7, sp, #0
 801b544:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b546:	6878      	ldr	r0, [r7, #4]
 801b548:	f000 fab1 	bl	801baae <_ZNSaI12sum_operatorEC1Ev>
 801b54c:	687b      	ldr	r3, [r7, #4]
 801b54e:	4618      	mov	r0, r3
 801b550:	f000 fab9 	bl	801bac6 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 801b554:	687b      	ldr	r3, [r7, #4]
 801b556:	4618      	mov	r0, r3
 801b558:	3708      	adds	r7, #8
 801b55a:	46bd      	mov	sp, r7
 801b55c:	bd80      	pop	{r7, pc}

0801b55e <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801b55e:	b580      	push	{r7, lr}
 801b560:	b082      	sub	sp, #8
 801b562:	af00      	add	r7, sp, #0
 801b564:	6078      	str	r0, [r7, #4]
 801b566:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b568:	6838      	ldr	r0, [r7, #0]
 801b56a:	f000 fac0 	bl	801baee <_ZSt4moveIRP19Multiply_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801b56e:	4603      	mov	r3, r0
 801b570:	4619      	mov	r1, r3
 801b572:	6878      	ldr	r0, [r7, #4]
 801b574:	f000 fac6 	bl	801bb04 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801b578:	bf00      	nop
 801b57a:	3708      	adds	r7, #8
 801b57c:	46bd      	mov	sp, r7
 801b57e:	bd80      	pop	{r7, pc}

0801b580 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b580:	b580      	push	{r7, lr}
 801b582:	b082      	sub	sp, #8
 801b584:	af00      	add	r7, sp, #0
 801b586:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b588:	6878      	ldr	r0, [r7, #4]
 801b58a:	f000 faed 	bl	801bb68 <_ZNSaIP18Compare_expressionEC1Ev>
 801b58e:	687b      	ldr	r3, [r7, #4]
 801b590:	4618      	mov	r0, r3
 801b592:	f000 faf5 	bl	801bb80 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801b596:	687b      	ldr	r3, [r7, #4]
 801b598:	4618      	mov	r0, r3
 801b59a:	3708      	adds	r7, #8
 801b59c:	46bd      	mov	sp, r7
 801b59e:	bd80      	pop	{r7, pc}

0801b5a0 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801b5a0:	b580      	push	{r7, lr}
 801b5a2:	b082      	sub	sp, #8
 801b5a4:	af00      	add	r7, sp, #0
 801b5a6:	6078      	str	r0, [r7, #4]
 801b5a8:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b5aa:	6838      	ldr	r0, [r7, #0]
 801b5ac:	f000 fafc 	bl	801bba8 <_ZSt4moveIRP18Compare_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801b5b0:	4603      	mov	r3, r0
 801b5b2:	4619      	mov	r1, r3
 801b5b4:	6878      	ldr	r0, [r7, #4]
 801b5b6:	f000 fb02 	bl	801bbbe <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801b5ba:	bf00      	nop
 801b5bc:	3708      	adds	r7, #8
 801b5be:	46bd      	mov	sp, r7
 801b5c0:	bd80      	pop	{r7, pc}

0801b5c2 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b5c2:	b580      	push	{r7, lr}
 801b5c4:	b082      	sub	sp, #8
 801b5c6:	af00      	add	r7, sp, #0
 801b5c8:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b5ca:	6878      	ldr	r0, [r7, #4]
 801b5cc:	f000 fb29 	bl	801bc22 <_ZNSaIP14And_expressionEC1Ev>
 801b5d0:	687b      	ldr	r3, [r7, #4]
 801b5d2:	4618      	mov	r0, r3
 801b5d4:	f000 fb31 	bl	801bc3a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801b5d8:	687b      	ldr	r3, [r7, #4]
 801b5da:	4618      	mov	r0, r3
 801b5dc:	3708      	adds	r7, #8
 801b5de:	46bd      	mov	sp, r7
 801b5e0:	bd80      	pop	{r7, pc}

0801b5e2 <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801b5e2:	b580      	push	{r7, lr}
 801b5e4:	b082      	sub	sp, #8
 801b5e6:	af00      	add	r7, sp, #0
 801b5e8:	6078      	str	r0, [r7, #4]
 801b5ea:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b5ec:	6838      	ldr	r0, [r7, #0]
 801b5ee:	f000 fb38 	bl	801bc62 <_ZSt4moveIRP14And_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801b5f2:	4603      	mov	r3, r0
 801b5f4:	4619      	mov	r1, r3
 801b5f6:	6878      	ldr	r0, [r7, #4]
 801b5f8:	f000 fb3e 	bl	801bc78 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801b5fc:	bf00      	nop
 801b5fe:	3708      	adds	r7, #8
 801b600:	46bd      	mov	sp, r7
 801b602:	bd80      	pop	{r7, pc}

0801b604 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj5EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801b604:	b580      	push	{r7, lr}
 801b606:	b082      	sub	sp, #8
 801b608:	af00      	add	r7, sp, #0
 801b60a:	6078      	str	r0, [r7, #4]
 801b60c:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b60e:	687b      	ldr	r3, [r7, #4]
 801b610:	4618      	mov	r0, r3
 801b612:	f7e9 fa93 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b616:	6838      	ldr	r0, [r7, #0]
 801b618:	f7f9 f88c 	bl	8014734 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801b61c:	4603      	mov	r3, r0
 801b61e:	4619      	mov	r1, r3
 801b620:	6878      	ldr	r0, [r7, #4]
 801b622:	f000 fb5b 	bl	801bcdc <_ZSt28__variant_construct_by_indexILj5ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b626:	6878      	ldr	r0, [r7, #4]
 801b628:	f7e9 fb98 	bl	8004d5c <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b62c:	4603      	mov	r3, r0
	}
 801b62e:	4618      	mov	r0, r3
 801b630:	3708      	adds	r7, #8
 801b632:	46bd      	mov	sp, r7
 801b634:	bd80      	pop	{r7, pc}

0801b636 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801b636:	b480      	push	{r7}
 801b638:	b083      	sub	sp, #12
 801b63a:	af00      	add	r7, sp, #0
 801b63c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801b63e:	687b      	ldr	r3, [r7, #4]
 801b640:	4618      	mov	r0, r3
 801b642:	370c      	adds	r7, #12
 801b644:	46bd      	mov	sp, r7
 801b646:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b64a:	4770      	bx	lr

0801b64c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj4EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801b64c:	b580      	push	{r7, lr}
 801b64e:	b082      	sub	sp, #8
 801b650:	af00      	add	r7, sp, #0
 801b652:	6078      	str	r0, [r7, #4]
 801b654:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b656:	687b      	ldr	r3, [r7, #4]
 801b658:	4618      	mov	r0, r3
 801b65a:	f7e9 fa6f 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b65e:	6838      	ldr	r0, [r7, #0]
 801b660:	f7ff ffe9 	bl	801b636 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801b664:	4603      	mov	r3, r0
 801b666:	4619      	mov	r1, r3
 801b668:	6878      	ldr	r0, [r7, #4]
 801b66a:	f000 fb56 	bl	801bd1a <_ZSt28__variant_construct_by_indexILj4ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS8_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b66e:	6878      	ldr	r0, [r7, #4]
 801b670:	f7e9 fadc 	bl	8004c2c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b674:	4603      	mov	r3, r0
	}
 801b676:	4618      	mov	r0, r3
 801b678:	3708      	adds	r7, #8
 801b67a:	46bd      	mov	sp, r7
 801b67c:	bd80      	pop	{r7, pc}

0801b67e <_ZNSt8__detail9__variant14_UninitializedIbLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 801b67e:	b480      	push	{r7}
 801b680:	b083      	sub	sp, #12
 801b682:	af00      	add	r7, sp, #0
 801b684:	6078      	str	r0, [r7, #4]
 801b686:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 801b688:	687b      	ldr	r3, [r7, #4]
 801b68a:	2200      	movs	r2, #0
 801b68c:	701a      	strb	r2, [r3, #0]
	{ }
 801b68e:	687b      	ldr	r3, [r7, #4]
 801b690:	4618      	mov	r0, r3
 801b692:	370c      	adds	r7, #12
 801b694:	46bd      	mov	sp, r7
 801b696:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b69a:	4770      	bx	lr

0801b69c <_ZNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801b69c:	b580      	push	{r7, lr}
 801b69e:	b082      	sub	sp, #8
 801b6a0:	af00      	add	r7, sp, #0
 801b6a2:	6078      	str	r0, [r7, #4]
 801b6a4:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 801b6a6:	687b      	ldr	r3, [r7, #4]
 801b6a8:	4611      	mov	r1, r2
 801b6aa:	4618      	mov	r0, r3
 801b6ac:	f7ff ffe7 	bl	801b67e <_ZNSt8__detail9__variant14_UninitializedIbLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801b6b0:	687b      	ldr	r3, [r7, #4]
 801b6b2:	4618      	mov	r0, r3
 801b6b4:	3708      	adds	r7, #8
 801b6b6:	46bd      	mov	sp, r7
 801b6b8:	bd80      	pop	{r7, pc}

0801b6ba <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 801b6ba:	b580      	push	{r7, lr}
 801b6bc:	b082      	sub	sp, #8
 801b6be:	af00      	add	r7, sp, #0
 801b6c0:	6078      	str	r0, [r7, #4]
 801b6c2:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 801b6c4:	687b      	ldr	r3, [r7, #4]
 801b6c6:	4611      	mov	r1, r2
 801b6c8:	4618      	mov	r0, r3
 801b6ca:	f7ff ffe7 	bl	801b69c <_ZNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 801b6ce:	687b      	ldr	r3, [r7, #4]
 801b6d0:	2200      	movs	r2, #0
 801b6d2:	761a      	strb	r2, [r3, #24]
	{ }
 801b6d4:	687b      	ldr	r3, [r7, #4]
 801b6d6:	4618      	mov	r0, r3
 801b6d8:	3708      	adds	r7, #8
 801b6da:	46bd      	mov	sp, r7
 801b6dc:	bd80      	pop	{r7, pc}

0801b6de <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj0EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801b6de:	b580      	push	{r7, lr}
 801b6e0:	b082      	sub	sp, #8
 801b6e2:	af00      	add	r7, sp, #0
 801b6e4:	6078      	str	r0, [r7, #4]
 801b6e6:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b6e8:	687b      	ldr	r3, [r7, #4]
 801b6ea:	4618      	mov	r0, r3
 801b6ec:	f7e9 fa26 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b6f0:	6838      	ldr	r0, [r7, #0]
 801b6f2:	f7ef fd0e 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801b6f6:	4603      	mov	r3, r0
 801b6f8:	4619      	mov	r1, r3
 801b6fa:	6878      	ldr	r0, [r7, #4]
 801b6fc:	f000 fb2c 	bl	801bd58 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b700:	6878      	ldr	r0, [r7, #4]
 801b702:	f7ee f969 	bl	80099d8 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b706:	4603      	mov	r3, r0
	}
 801b708:	4618      	mov	r0, r3
 801b70a:	3708      	adds	r7, #8
 801b70c:	46bd      	mov	sp, r7
 801b70e:	bd80      	pop	{r7, pc}

0801b710 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj1EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 801b710:	b580      	push	{r7, lr}
 801b712:	b082      	sub	sp, #8
 801b714:	af00      	add	r7, sp, #0
 801b716:	6078      	str	r0, [r7, #4]
 801b718:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b71a:	687b      	ldr	r3, [r7, #4]
 801b71c:	4618      	mov	r0, r3
 801b71e:	f7e9 fa0d 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b722:	6838      	ldr	r0, [r7, #0]
 801b724:	f7ea fc69 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801b728:	4603      	mov	r3, r0
 801b72a:	4619      	mov	r1, r3
 801b72c:	6878      	ldr	r0, [r7, #4]
 801b72e:	f000 fb33 	bl	801bd98 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b732:	6878      	ldr	r0, [r7, #4]
 801b734:	f7ee f8fc 	bl	8009930 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b738:	4603      	mov	r3, r0
	}
 801b73a:	4618      	mov	r0, r3
 801b73c:	3708      	adds	r7, #8
 801b73e:	46bd      	mov	sp, r7
 801b740:	bd80      	pop	{r7, pc}

0801b742 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj2EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 801b742:	b580      	push	{r7, lr}
 801b744:	b082      	sub	sp, #8
 801b746:	af00      	add	r7, sp, #0
 801b748:	6078      	str	r0, [r7, #4]
 801b74a:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b74c:	687b      	ldr	r3, [r7, #4]
 801b74e:	4618      	mov	r0, r3
 801b750:	f7e9 f9f4 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b754:	6838      	ldr	r0, [r7, #0]
 801b756:	f7ea fc72 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801b75a:	4603      	mov	r3, r0
 801b75c:	4619      	mov	r1, r3
 801b75e:	6878      	ldr	r0, [r7, #4]
 801b760:	f000 fb39 	bl	801bdd6 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b764:	6878      	ldr	r0, [r7, #4]
 801b766:	f7ee f8ff 	bl	8009968 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b76a:	4603      	mov	r3, r0
	}
 801b76c:	4618      	mov	r0, r3
 801b76e:	3708      	adds	r7, #8
 801b770:	46bd      	mov	sp, r7
 801b772:	bd80      	pop	{r7, pc}

0801b774 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801b774:	b580      	push	{r7, lr}
 801b776:	b082      	sub	sp, #8
 801b778:	af00      	add	r7, sp, #0
 801b77a:	6078      	str	r0, [r7, #4]
 801b77c:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b77e:	687b      	ldr	r3, [r7, #4]
 801b780:	4618      	mov	r0, r3
 801b782:	f7e9 f9db 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b786:	6838      	ldr	r0, [r7, #0]
 801b788:	f7ef fcf0 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801b78c:	4603      	mov	r3, r0
 801b78e:	4619      	mov	r1, r3
 801b790:	6878      	ldr	r0, [r7, #4]
 801b792:	f000 fb3f 	bl	801be14 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b796:	6878      	ldr	r0, [r7, #4]
 801b798:	f7ee f902 	bl	80099a0 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b79c:	4603      	mov	r3, r0
	}
 801b79e:	4618      	mov	r0, r3
 801b7a0:	3708      	adds	r7, #8
 801b7a2:	46bd      	mov	sp, r7
 801b7a4:	bd80      	pop	{r7, pc}

0801b7a6 <_ZNSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 801b7a6:	b480      	push	{r7}
 801b7a8:	b083      	sub	sp, #12
 801b7aa:	af00      	add	r7, sp, #0
 801b7ac:	6078      	str	r0, [r7, #4]
 801b7ae:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 801b7b0:	687b      	ldr	r3, [r7, #4]
 801b7b2:	2200      	movs	r2, #0
 801b7b4:	601a      	str	r2, [r3, #0]
	{ }
 801b7b6:	687b      	ldr	r3, [r7, #4]
 801b7b8:	4618      	mov	r0, r3
 801b7ba:	370c      	adds	r7, #12
 801b7bc:	46bd      	mov	sp, r7
 801b7be:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b7c2:	4770      	bx	lr

0801b7c4 <_ZNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801b7c4:	b580      	push	{r7, lr}
 801b7c6:	b082      	sub	sp, #8
 801b7c8:	af00      	add	r7, sp, #0
 801b7ca:	6078      	str	r0, [r7, #4]
 801b7cc:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 801b7ce:	687b      	ldr	r3, [r7, #4]
 801b7d0:	4611      	mov	r1, r2
 801b7d2:	4618      	mov	r0, r3
 801b7d4:	f7ff ffe7 	bl	801b7a6 <_ZNSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801b7d8:	687b      	ldr	r3, [r7, #4]
 801b7da:	4618      	mov	r0, r3
 801b7dc:	3708      	adds	r7, #8
 801b7de:	46bd      	mov	sp, r7
 801b7e0:	bd80      	pop	{r7, pc}

0801b7e2 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 801b7e2:	b580      	push	{r7, lr}
 801b7e4:	b082      	sub	sp, #8
 801b7e6:	af00      	add	r7, sp, #0
 801b7e8:	6078      	str	r0, [r7, #4]
 801b7ea:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 801b7ec:	687b      	ldr	r3, [r7, #4]
 801b7ee:	4611      	mov	r1, r2
 801b7f0:	4618      	mov	r0, r3
 801b7f2:	f7ff ffe7 	bl	801b7c4 <_ZNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 801b7f6:	687b      	ldr	r3, [r7, #4]
 801b7f8:	2200      	movs	r2, #0
 801b7fa:	711a      	strb	r2, [r3, #4]
	{ }
 801b7fc:	687b      	ldr	r3, [r7, #4]
 801b7fe:	4618      	mov	r0, r3
 801b800:	3708      	adds	r7, #8
 801b802:	46bd      	mov	sp, r7
 801b804:	bd80      	pop	{r7, pc}

0801b806 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>:
	emplace(_Args&&... __args)
 801b806:	b580      	push	{r7, lr}
 801b808:	b082      	sub	sp, #8
 801b80a:	af00      	add	r7, sp, #0
 801b80c:	6078      	str	r0, [r7, #4]
 801b80e:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b810:	687b      	ldr	r3, [r7, #4]
 801b812:	4618      	mov	r0, r3
 801b814:	f000 fb1f 	bl	801be56 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b818:	6838      	ldr	r0, [r7, #0]
 801b81a:	f7f9 fb1d 	bl	8014e58 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b81e:	4603      	mov	r3, r0
 801b820:	4619      	mov	r1, r3
 801b822:	6878      	ldr	r0, [r7, #4]
 801b824:	f000 fb24 	bl	801be70 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP17Primal_expressionP10ExpressionEEJS4_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b828:	6878      	ldr	r0, [r7, #4]
 801b82a:	f7e9 fae7 	bl	8004dfc <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801b82e:	4603      	mov	r3, r0
	}
 801b830:	4618      	mov	r0, r3
 801b832:	3708      	adds	r7, #8
 801b834:	46bd      	mov	sp, r7
 801b836:	bd80      	pop	{r7, pc}

0801b838 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801b838:	b480      	push	{r7}
 801b83a:	b083      	sub	sp, #12
 801b83c:	af00      	add	r7, sp, #0
 801b83e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801b840:	687b      	ldr	r3, [r7, #4]
 801b842:	4618      	mov	r0, r3
 801b844:	370c      	adds	r7, #12
 801b846:	46bd      	mov	sp, r7
 801b848:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b84c:	4770      	bx	lr

0801b84e <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>:
	emplace(_Args&&... __args)
 801b84e:	b580      	push	{r7, lr}
 801b850:	b082      	sub	sp, #8
 801b852:	af00      	add	r7, sp, #0
 801b854:	6078      	str	r0, [r7, #4]
 801b856:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b858:	687b      	ldr	r3, [r7, #4]
 801b85a:	4618      	mov	r0, r3
 801b85c:	f000 fafb 	bl	801be56 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b860:	6838      	ldr	r0, [r7, #0]
 801b862:	f7ff ffe9 	bl	801b838 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b866:	4603      	mov	r3, r0
 801b868:	4619      	mov	r1, r3
 801b86a:	6878      	ldr	r0, [r7, #4]
 801b86c:	f000 fb1f 	bl	801beae <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP17Primal_expressionP10ExpressionEEJS2_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b870:	6878      	ldr	r0, [r7, #4]
 801b872:	f7e9 fb01 	bl	8004e78 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801b876:	4603      	mov	r3, r0
	}
 801b878:	4618      	mov	r0, r3
 801b87a:	3708      	adds	r7, #8
 801b87c:	46bd      	mov	sp, r7
 801b87e:	bd80      	pop	{r7, pc}

0801b880 <_ZSt4moveIR13mult_operatorEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 801b880:	b480      	push	{r7}
 801b882:	b083      	sub	sp, #12
 801b884:	af00      	add	r7, sp, #0
 801b886:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b888:	687b      	ldr	r3, [r7, #4]
 801b88a:	4618      	mov	r0, r3
 801b88c:	370c      	adds	r7, #12
 801b88e:	46bd      	mov	sp, r7
 801b890:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b894:	4770      	bx	lr

0801b896 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>:
      vector<_Tp, _Alloc>::
 801b896:	b5b0      	push	{r4, r5, r7, lr}
 801b898:	b082      	sub	sp, #8
 801b89a:	af00      	add	r7, sp, #0
 801b89c:	6078      	str	r0, [r7, #4]
 801b89e:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801b8a0:	687b      	ldr	r3, [r7, #4]
 801b8a2:	685a      	ldr	r2, [r3, #4]
 801b8a4:	687b      	ldr	r3, [r7, #4]
 801b8a6:	689b      	ldr	r3, [r3, #8]
 801b8a8:	429a      	cmp	r2, r3
 801b8aa:	d011      	beq.n	801b8d0 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801b8ac:	687c      	ldr	r4, [r7, #4]
 801b8ae:	687b      	ldr	r3, [r7, #4]
 801b8b0:	685d      	ldr	r5, [r3, #4]
 801b8b2:	6838      	ldr	r0, [r7, #0]
 801b8b4:	f000 fb1a 	bl	801beec <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b8b8:	4603      	mov	r3, r0
 801b8ba:	461a      	mov	r2, r3
 801b8bc:	4629      	mov	r1, r5
 801b8be:	4620      	mov	r0, r4
 801b8c0:	f000 fb1f 	bl	801bf02 <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801b8c4:	687b      	ldr	r3, [r7, #4]
 801b8c6:	685b      	ldr	r3, [r3, #4]
 801b8c8:	1c5a      	adds	r2, r3, #1
 801b8ca:	687b      	ldr	r3, [r7, #4]
 801b8cc:	605a      	str	r2, [r3, #4]
 801b8ce:	e00c      	b.n	801b8ea <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801b8d0:	6878      	ldr	r0, [r7, #4]
 801b8d2:	f000 fb29 	bl	801bf28 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>
 801b8d6:	4604      	mov	r4, r0
 801b8d8:	6838      	ldr	r0, [r7, #0]
 801b8da:	f000 fb07 	bl	801beec <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b8de:	4603      	mov	r3, r0
 801b8e0:	461a      	mov	r2, r3
 801b8e2:	4621      	mov	r1, r4
 801b8e4:	6878      	ldr	r0, [r7, #4]
 801b8e6:	f000 fb31 	bl	801bf4c <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
	return back();
 801b8ea:	6878      	ldr	r0, [r7, #4]
 801b8ec:	f000 fba8 	bl	801c040 <_ZNSt6vectorI13mult_operatorSaIS0_EE4backEv>
 801b8f0:	4603      	mov	r3, r0
      }
 801b8f2:	4618      	mov	r0, r3
 801b8f4:	3708      	adds	r7, #8
 801b8f6:	46bd      	mov	sp, r7
 801b8f8:	bdb0      	pop	{r4, r5, r7, pc}

0801b8fa <_ZNSaIP16Power_expressionEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 801b8fa:	b580      	push	{r7, lr}
 801b8fc:	b082      	sub	sp, #8
 801b8fe:	af00      	add	r7, sp, #0
 801b900:	6078      	str	r0, [r7, #4]
 801b902:	6878      	ldr	r0, [r7, #4]
 801b904:	f000 fbb7 	bl	801c076 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionEC1Ev>
 801b908:	687b      	ldr	r3, [r7, #4]
 801b90a:	4618      	mov	r0, r3
 801b90c:	3708      	adds	r7, #8
 801b90e:	46bd      	mov	sp, r7
 801b910:	bd80      	pop	{r7, pc}

0801b912 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801b912:	b480      	push	{r7}
 801b914:	b083      	sub	sp, #12
 801b916:	af00      	add	r7, sp, #0
 801b918:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801b91a:	687b      	ldr	r3, [r7, #4]
 801b91c:	2200      	movs	r2, #0
 801b91e:	601a      	str	r2, [r3, #0]
 801b920:	687b      	ldr	r3, [r7, #4]
 801b922:	2200      	movs	r2, #0
 801b924:	605a      	str	r2, [r3, #4]
 801b926:	687b      	ldr	r3, [r7, #4]
 801b928:	2200      	movs	r2, #0
 801b92a:	609a      	str	r2, [r3, #8]
	{ }
 801b92c:	687b      	ldr	r3, [r7, #4]
 801b92e:	4618      	mov	r0, r3
 801b930:	370c      	adds	r7, #12
 801b932:	46bd      	mov	sp, r7
 801b934:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b938:	4770      	bx	lr

0801b93a <_ZNSaI13mult_operatorEC1Ev>:
 801b93a:	b580      	push	{r7, lr}
 801b93c:	b082      	sub	sp, #8
 801b93e:	af00      	add	r7, sp, #0
 801b940:	6078      	str	r0, [r7, #4]
 801b942:	6878      	ldr	r0, [r7, #4]
 801b944:	f000 fba2 	bl	801c08c <_ZN9__gnu_cxx13new_allocatorI13mult_operatorEC1Ev>
 801b948:	687b      	ldr	r3, [r7, #4]
 801b94a:	4618      	mov	r0, r3
 801b94c:	3708      	adds	r7, #8
 801b94e:	46bd      	mov	sp, r7
 801b950:	bd80      	pop	{r7, pc}

0801b952 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801b952:	b480      	push	{r7}
 801b954:	b083      	sub	sp, #12
 801b956:	af00      	add	r7, sp, #0
 801b958:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801b95a:	687b      	ldr	r3, [r7, #4]
 801b95c:	2200      	movs	r2, #0
 801b95e:	601a      	str	r2, [r3, #0]
 801b960:	687b      	ldr	r3, [r7, #4]
 801b962:	2200      	movs	r2, #0
 801b964:	605a      	str	r2, [r3, #4]
 801b966:	687b      	ldr	r3, [r7, #4]
 801b968:	2200      	movs	r2, #0
 801b96a:	609a      	str	r2, [r3, #8]
	{ }
 801b96c:	687b      	ldr	r3, [r7, #4]
 801b96e:	4618      	mov	r0, r3
 801b970:	370c      	adds	r7, #12
 801b972:	46bd      	mov	sp, r7
 801b974:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b978:	4770      	bx	lr

0801b97a <_ZSt4moveIRP16Power_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801b97a:	b480      	push	{r7}
 801b97c:	b083      	sub	sp, #12
 801b97e:	af00      	add	r7, sp, #0
 801b980:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b982:	687b      	ldr	r3, [r7, #4]
 801b984:	4618      	mov	r0, r3
 801b986:	370c      	adds	r7, #12
 801b988:	46bd      	mov	sp, r7
 801b98a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b98e:	4770      	bx	lr

0801b990 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801b990:	b5b0      	push	{r4, r5, r7, lr}
 801b992:	b082      	sub	sp, #8
 801b994:	af00      	add	r7, sp, #0
 801b996:	6078      	str	r0, [r7, #4]
 801b998:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801b99a:	687b      	ldr	r3, [r7, #4]
 801b99c:	685a      	ldr	r2, [r3, #4]
 801b99e:	687b      	ldr	r3, [r7, #4]
 801b9a0:	689b      	ldr	r3, [r3, #8]
 801b9a2:	429a      	cmp	r2, r3
 801b9a4:	d011      	beq.n	801b9ca <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801b9a6:	687c      	ldr	r4, [r7, #4]
 801b9a8:	687b      	ldr	r3, [r7, #4]
 801b9aa:	685d      	ldr	r5, [r3, #4]
 801b9ac:	6838      	ldr	r0, [r7, #0]
 801b9ae:	f000 fb78 	bl	801c0a2 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b9b2:	4603      	mov	r3, r0
 801b9b4:	461a      	mov	r2, r3
 801b9b6:	4629      	mov	r1, r5
 801b9b8:	4620      	mov	r0, r4
 801b9ba:	f000 fb7d 	bl	801c0b8 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801b9be:	687b      	ldr	r3, [r7, #4]
 801b9c0:	685b      	ldr	r3, [r3, #4]
 801b9c2:	1d1a      	adds	r2, r3, #4
 801b9c4:	687b      	ldr	r3, [r7, #4]
 801b9c6:	605a      	str	r2, [r3, #4]
 801b9c8:	e00c      	b.n	801b9e4 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801b9ca:	6878      	ldr	r0, [r7, #4]
 801b9cc:	f7e8 ff06 	bl	80047dc <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 801b9d0:	4604      	mov	r4, r0
 801b9d2:	6838      	ldr	r0, [r7, #0]
 801b9d4:	f000 fb65 	bl	801c0a2 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b9d8:	4603      	mov	r3, r0
 801b9da:	461a      	mov	r2, r3
 801b9dc:	4621      	mov	r1, r4
 801b9de:	6878      	ldr	r0, [r7, #4]
 801b9e0:	f000 fb7e 	bl	801c0e0 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801b9e4:	6878      	ldr	r0, [r7, #4]
 801b9e6:	f000 fbf7 	bl	801c1d8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE4backEv>
 801b9ea:	4603      	mov	r3, r0
      }
 801b9ec:	4618      	mov	r0, r3
 801b9ee:	3708      	adds	r7, #8
 801b9f0:	46bd      	mov	sp, r7
 801b9f2:	bdb0      	pop	{r4, r5, r7, pc}

0801b9f4 <_ZSt4moveIR12sum_operatorEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 801b9f4:	b480      	push	{r7}
 801b9f6:	b083      	sub	sp, #12
 801b9f8:	af00      	add	r7, sp, #0
 801b9fa:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b9fc:	687b      	ldr	r3, [r7, #4]
 801b9fe:	4618      	mov	r0, r3
 801ba00:	370c      	adds	r7, #12
 801ba02:	46bd      	mov	sp, r7
 801ba04:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ba08:	4770      	bx	lr

0801ba0a <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>:
      vector<_Tp, _Alloc>::
 801ba0a:	b5b0      	push	{r4, r5, r7, lr}
 801ba0c:	b082      	sub	sp, #8
 801ba0e:	af00      	add	r7, sp, #0
 801ba10:	6078      	str	r0, [r7, #4]
 801ba12:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801ba14:	687b      	ldr	r3, [r7, #4]
 801ba16:	685a      	ldr	r2, [r3, #4]
 801ba18:	687b      	ldr	r3, [r7, #4]
 801ba1a:	689b      	ldr	r3, [r3, #8]
 801ba1c:	429a      	cmp	r2, r3
 801ba1e:	d011      	beq.n	801ba44 <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801ba20:	687c      	ldr	r4, [r7, #4]
 801ba22:	687b      	ldr	r3, [r7, #4]
 801ba24:	685d      	ldr	r5, [r3, #4]
 801ba26:	6838      	ldr	r0, [r7, #0]
 801ba28:	f000 fbf1 	bl	801c20e <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801ba2c:	4603      	mov	r3, r0
 801ba2e:	461a      	mov	r2, r3
 801ba30:	4629      	mov	r1, r5
 801ba32:	4620      	mov	r0, r4
 801ba34:	f000 fbf6 	bl	801c224 <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801ba38:	687b      	ldr	r3, [r7, #4]
 801ba3a:	685b      	ldr	r3, [r3, #4]
 801ba3c:	1c5a      	adds	r2, r3, #1
 801ba3e:	687b      	ldr	r3, [r7, #4]
 801ba40:	605a      	str	r2, [r3, #4]
 801ba42:	e00c      	b.n	801ba5e <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801ba44:	6878      	ldr	r0, [r7, #4]
 801ba46:	f000 fc00 	bl	801c24a <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>
 801ba4a:	4604      	mov	r4, r0
 801ba4c:	6838      	ldr	r0, [r7, #0]
 801ba4e:	f000 fbde 	bl	801c20e <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801ba52:	4603      	mov	r3, r0
 801ba54:	461a      	mov	r2, r3
 801ba56:	4621      	mov	r1, r4
 801ba58:	6878      	ldr	r0, [r7, #4]
 801ba5a:	f000 fc07 	bl	801c26c <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
	return back();
 801ba5e:	6878      	ldr	r0, [r7, #4]
 801ba60:	f000 fc7e 	bl	801c360 <_ZNSt6vectorI12sum_operatorSaIS0_EE4backEv>
 801ba64:	4603      	mov	r3, r0
      }
 801ba66:	4618      	mov	r0, r3
 801ba68:	3708      	adds	r7, #8
 801ba6a:	46bd      	mov	sp, r7
 801ba6c:	bdb0      	pop	{r4, r5, r7, pc}

0801ba6e <_ZNSaIP19Multiply_expressionEC1Ev>:
 801ba6e:	b580      	push	{r7, lr}
 801ba70:	b082      	sub	sp, #8
 801ba72:	af00      	add	r7, sp, #0
 801ba74:	6078      	str	r0, [r7, #4]
 801ba76:	6878      	ldr	r0, [r7, #4]
 801ba78:	f000 fc8d 	bl	801c396 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionEC1Ev>
 801ba7c:	687b      	ldr	r3, [r7, #4]
 801ba7e:	4618      	mov	r0, r3
 801ba80:	3708      	adds	r7, #8
 801ba82:	46bd      	mov	sp, r7
 801ba84:	bd80      	pop	{r7, pc}

0801ba86 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801ba86:	b480      	push	{r7}
 801ba88:	b083      	sub	sp, #12
 801ba8a:	af00      	add	r7, sp, #0
 801ba8c:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801ba8e:	687b      	ldr	r3, [r7, #4]
 801ba90:	2200      	movs	r2, #0
 801ba92:	601a      	str	r2, [r3, #0]
 801ba94:	687b      	ldr	r3, [r7, #4]
 801ba96:	2200      	movs	r2, #0
 801ba98:	605a      	str	r2, [r3, #4]
 801ba9a:	687b      	ldr	r3, [r7, #4]
 801ba9c:	2200      	movs	r2, #0
 801ba9e:	609a      	str	r2, [r3, #8]
	{ }
 801baa0:	687b      	ldr	r3, [r7, #4]
 801baa2:	4618      	mov	r0, r3
 801baa4:	370c      	adds	r7, #12
 801baa6:	46bd      	mov	sp, r7
 801baa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801baac:	4770      	bx	lr

0801baae <_ZNSaI12sum_operatorEC1Ev>:
 801baae:	b580      	push	{r7, lr}
 801bab0:	b082      	sub	sp, #8
 801bab2:	af00      	add	r7, sp, #0
 801bab4:	6078      	str	r0, [r7, #4]
 801bab6:	6878      	ldr	r0, [r7, #4]
 801bab8:	f000 fc78 	bl	801c3ac <_ZN9__gnu_cxx13new_allocatorI12sum_operatorEC1Ev>
 801babc:	687b      	ldr	r3, [r7, #4]
 801babe:	4618      	mov	r0, r3
 801bac0:	3708      	adds	r7, #8
 801bac2:	46bd      	mov	sp, r7
 801bac4:	bd80      	pop	{r7, pc}

0801bac6 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801bac6:	b480      	push	{r7}
 801bac8:	b083      	sub	sp, #12
 801baca:	af00      	add	r7, sp, #0
 801bacc:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801bace:	687b      	ldr	r3, [r7, #4]
 801bad0:	2200      	movs	r2, #0
 801bad2:	601a      	str	r2, [r3, #0]
 801bad4:	687b      	ldr	r3, [r7, #4]
 801bad6:	2200      	movs	r2, #0
 801bad8:	605a      	str	r2, [r3, #4]
 801bada:	687b      	ldr	r3, [r7, #4]
 801badc:	2200      	movs	r2, #0
 801bade:	609a      	str	r2, [r3, #8]
	{ }
 801bae0:	687b      	ldr	r3, [r7, #4]
 801bae2:	4618      	mov	r0, r3
 801bae4:	370c      	adds	r7, #12
 801bae6:	46bd      	mov	sp, r7
 801bae8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801baec:	4770      	bx	lr

0801baee <_ZSt4moveIRP19Multiply_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801baee:	b480      	push	{r7}
 801baf0:	b083      	sub	sp, #12
 801baf2:	af00      	add	r7, sp, #0
 801baf4:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801baf6:	687b      	ldr	r3, [r7, #4]
 801baf8:	4618      	mov	r0, r3
 801bafa:	370c      	adds	r7, #12
 801bafc:	46bd      	mov	sp, r7
 801bafe:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bb02:	4770      	bx	lr

0801bb04 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801bb04:	b5b0      	push	{r4, r5, r7, lr}
 801bb06:	b082      	sub	sp, #8
 801bb08:	af00      	add	r7, sp, #0
 801bb0a:	6078      	str	r0, [r7, #4]
 801bb0c:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801bb0e:	687b      	ldr	r3, [r7, #4]
 801bb10:	685a      	ldr	r2, [r3, #4]
 801bb12:	687b      	ldr	r3, [r7, #4]
 801bb14:	689b      	ldr	r3, [r3, #8]
 801bb16:	429a      	cmp	r2, r3
 801bb18:	d011      	beq.n	801bb3e <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801bb1a:	687c      	ldr	r4, [r7, #4]
 801bb1c:	687b      	ldr	r3, [r7, #4]
 801bb1e:	685d      	ldr	r5, [r3, #4]
 801bb20:	6838      	ldr	r0, [r7, #0]
 801bb22:	f000 fc4e 	bl	801c3c2 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bb26:	4603      	mov	r3, r0
 801bb28:	461a      	mov	r2, r3
 801bb2a:	4629      	mov	r1, r5
 801bb2c:	4620      	mov	r0, r4
 801bb2e:	f000 fc53 	bl	801c3d8 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801bb32:	687b      	ldr	r3, [r7, #4]
 801bb34:	685b      	ldr	r3, [r3, #4]
 801bb36:	1d1a      	adds	r2, r3, #4
 801bb38:	687b      	ldr	r3, [r7, #4]
 801bb3a:	605a      	str	r2, [r3, #4]
 801bb3c:	e00c      	b.n	801bb58 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801bb3e:	6878      	ldr	r0, [r7, #4]
 801bb40:	f7e8 fed7 	bl	80048f2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 801bb44:	4604      	mov	r4, r0
 801bb46:	6838      	ldr	r0, [r7, #0]
 801bb48:	f000 fc3b 	bl	801c3c2 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bb4c:	4603      	mov	r3, r0
 801bb4e:	461a      	mov	r2, r3
 801bb50:	4621      	mov	r1, r4
 801bb52:	6878      	ldr	r0, [r7, #4]
 801bb54:	f000 fc54 	bl	801c400 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801bb58:	6878      	ldr	r0, [r7, #4]
 801bb5a:	f000 fccd 	bl	801c4f8 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE4backEv>
 801bb5e:	4603      	mov	r3, r0
      }
 801bb60:	4618      	mov	r0, r3
 801bb62:	3708      	adds	r7, #8
 801bb64:	46bd      	mov	sp, r7
 801bb66:	bdb0      	pop	{r4, r5, r7, pc}

0801bb68 <_ZNSaIP18Compare_expressionEC1Ev>:
 801bb68:	b580      	push	{r7, lr}
 801bb6a:	b082      	sub	sp, #8
 801bb6c:	af00      	add	r7, sp, #0
 801bb6e:	6078      	str	r0, [r7, #4]
 801bb70:	6878      	ldr	r0, [r7, #4]
 801bb72:	f000 fcdc 	bl	801c52e <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionEC1Ev>
 801bb76:	687b      	ldr	r3, [r7, #4]
 801bb78:	4618      	mov	r0, r3
 801bb7a:	3708      	adds	r7, #8
 801bb7c:	46bd      	mov	sp, r7
 801bb7e:	bd80      	pop	{r7, pc}

0801bb80 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801bb80:	b480      	push	{r7}
 801bb82:	b083      	sub	sp, #12
 801bb84:	af00      	add	r7, sp, #0
 801bb86:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801bb88:	687b      	ldr	r3, [r7, #4]
 801bb8a:	2200      	movs	r2, #0
 801bb8c:	601a      	str	r2, [r3, #0]
 801bb8e:	687b      	ldr	r3, [r7, #4]
 801bb90:	2200      	movs	r2, #0
 801bb92:	605a      	str	r2, [r3, #4]
 801bb94:	687b      	ldr	r3, [r7, #4]
 801bb96:	2200      	movs	r2, #0
 801bb98:	609a      	str	r2, [r3, #8]
	{ }
 801bb9a:	687b      	ldr	r3, [r7, #4]
 801bb9c:	4618      	mov	r0, r3
 801bb9e:	370c      	adds	r7, #12
 801bba0:	46bd      	mov	sp, r7
 801bba2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bba6:	4770      	bx	lr

0801bba8 <_ZSt4moveIRP18Compare_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801bba8:	b480      	push	{r7}
 801bbaa:	b083      	sub	sp, #12
 801bbac:	af00      	add	r7, sp, #0
 801bbae:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801bbb0:	687b      	ldr	r3, [r7, #4]
 801bbb2:	4618      	mov	r0, r3
 801bbb4:	370c      	adds	r7, #12
 801bbb6:	46bd      	mov	sp, r7
 801bbb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bbbc:	4770      	bx	lr

0801bbbe <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801bbbe:	b5b0      	push	{r4, r5, r7, lr}
 801bbc0:	b082      	sub	sp, #8
 801bbc2:	af00      	add	r7, sp, #0
 801bbc4:	6078      	str	r0, [r7, #4]
 801bbc6:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801bbc8:	687b      	ldr	r3, [r7, #4]
 801bbca:	685a      	ldr	r2, [r3, #4]
 801bbcc:	687b      	ldr	r3, [r7, #4]
 801bbce:	689b      	ldr	r3, [r3, #8]
 801bbd0:	429a      	cmp	r2, r3
 801bbd2:	d011      	beq.n	801bbf8 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801bbd4:	687c      	ldr	r4, [r7, #4]
 801bbd6:	687b      	ldr	r3, [r7, #4]
 801bbd8:	685d      	ldr	r5, [r3, #4]
 801bbda:	6838      	ldr	r0, [r7, #0]
 801bbdc:	f000 fcb2 	bl	801c544 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bbe0:	4603      	mov	r3, r0
 801bbe2:	461a      	mov	r2, r3
 801bbe4:	4629      	mov	r1, r5
 801bbe6:	4620      	mov	r0, r4
 801bbe8:	f000 fcb7 	bl	801c55a <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801bbec:	687b      	ldr	r3, [r7, #4]
 801bbee:	685b      	ldr	r3, [r3, #4]
 801bbf0:	1d1a      	adds	r2, r3, #4
 801bbf2:	687b      	ldr	r3, [r7, #4]
 801bbf4:	605a      	str	r2, [r3, #4]
 801bbf6:	e00c      	b.n	801bc12 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801bbf8:	6878      	ldr	r0, [r7, #4]
 801bbfa:	f7e8 feea 	bl	80049d2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 801bbfe:	4604      	mov	r4, r0
 801bc00:	6838      	ldr	r0, [r7, #0]
 801bc02:	f000 fc9f 	bl	801c544 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bc06:	4603      	mov	r3, r0
 801bc08:	461a      	mov	r2, r3
 801bc0a:	4621      	mov	r1, r4
 801bc0c:	6878      	ldr	r0, [r7, #4]
 801bc0e:	f000 fcb7 	bl	801c580 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801bc12:	6878      	ldr	r0, [r7, #4]
 801bc14:	f000 fd30 	bl	801c678 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE4backEv>
 801bc18:	4603      	mov	r3, r0
      }
 801bc1a:	4618      	mov	r0, r3
 801bc1c:	3708      	adds	r7, #8
 801bc1e:	46bd      	mov	sp, r7
 801bc20:	bdb0      	pop	{r4, r5, r7, pc}

0801bc22 <_ZNSaIP14And_expressionEC1Ev>:
 801bc22:	b580      	push	{r7, lr}
 801bc24:	b082      	sub	sp, #8
 801bc26:	af00      	add	r7, sp, #0
 801bc28:	6078      	str	r0, [r7, #4]
 801bc2a:	6878      	ldr	r0, [r7, #4]
 801bc2c:	f000 fd3f 	bl	801c6ae <_ZN9__gnu_cxx13new_allocatorIP14And_expressionEC1Ev>
 801bc30:	687b      	ldr	r3, [r7, #4]
 801bc32:	4618      	mov	r0, r3
 801bc34:	3708      	adds	r7, #8
 801bc36:	46bd      	mov	sp, r7
 801bc38:	bd80      	pop	{r7, pc}

0801bc3a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801bc3a:	b480      	push	{r7}
 801bc3c:	b083      	sub	sp, #12
 801bc3e:	af00      	add	r7, sp, #0
 801bc40:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801bc42:	687b      	ldr	r3, [r7, #4]
 801bc44:	2200      	movs	r2, #0
 801bc46:	601a      	str	r2, [r3, #0]
 801bc48:	687b      	ldr	r3, [r7, #4]
 801bc4a:	2200      	movs	r2, #0
 801bc4c:	605a      	str	r2, [r3, #4]
 801bc4e:	687b      	ldr	r3, [r7, #4]
 801bc50:	2200      	movs	r2, #0
 801bc52:	609a      	str	r2, [r3, #8]
	{ }
 801bc54:	687b      	ldr	r3, [r7, #4]
 801bc56:	4618      	mov	r0, r3
 801bc58:	370c      	adds	r7, #12
 801bc5a:	46bd      	mov	sp, r7
 801bc5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bc60:	4770      	bx	lr

0801bc62 <_ZSt4moveIRP14And_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801bc62:	b480      	push	{r7}
 801bc64:	b083      	sub	sp, #12
 801bc66:	af00      	add	r7, sp, #0
 801bc68:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801bc6a:	687b      	ldr	r3, [r7, #4]
 801bc6c:	4618      	mov	r0, r3
 801bc6e:	370c      	adds	r7, #12
 801bc70:	46bd      	mov	sp, r7
 801bc72:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bc76:	4770      	bx	lr

0801bc78 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801bc78:	b5b0      	push	{r4, r5, r7, lr}
 801bc7a:	b082      	sub	sp, #8
 801bc7c:	af00      	add	r7, sp, #0
 801bc7e:	6078      	str	r0, [r7, #4]
 801bc80:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801bc82:	687b      	ldr	r3, [r7, #4]
 801bc84:	685a      	ldr	r2, [r3, #4]
 801bc86:	687b      	ldr	r3, [r7, #4]
 801bc88:	689b      	ldr	r3, [r3, #8]
 801bc8a:	429a      	cmp	r2, r3
 801bc8c:	d011      	beq.n	801bcb2 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801bc8e:	687c      	ldr	r4, [r7, #4]
 801bc90:	687b      	ldr	r3, [r7, #4]
 801bc92:	685d      	ldr	r5, [r3, #4]
 801bc94:	6838      	ldr	r0, [r7, #0]
 801bc96:	f000 fd15 	bl	801c6c4 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bc9a:	4603      	mov	r3, r0
 801bc9c:	461a      	mov	r2, r3
 801bc9e:	4629      	mov	r1, r5
 801bca0:	4620      	mov	r0, r4
 801bca2:	f000 fd1a 	bl	801c6da <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801bca6:	687b      	ldr	r3, [r7, #4]
 801bca8:	685b      	ldr	r3, [r3, #4]
 801bcaa:	1d1a      	adds	r2, r3, #4
 801bcac:	687b      	ldr	r3, [r7, #4]
 801bcae:	605a      	str	r2, [r3, #4]
 801bcb0:	e00c      	b.n	801bccc <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801bcb2:	6878      	ldr	r0, [r7, #4]
 801bcb4:	f7e8 fefd 	bl	8004ab2 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 801bcb8:	4604      	mov	r4, r0
 801bcba:	6838      	ldr	r0, [r7, #0]
 801bcbc:	f000 fd02 	bl	801c6c4 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bcc0:	4603      	mov	r3, r0
 801bcc2:	461a      	mov	r2, r3
 801bcc4:	4621      	mov	r1, r4
 801bcc6:	6878      	ldr	r0, [r7, #4]
 801bcc8:	f000 fd1a 	bl	801c700 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801bccc:	6878      	ldr	r0, [r7, #4]
 801bcce:	f000 fd93 	bl	801c7f8 <_ZNSt6vectorIP14And_expressionSaIS1_EE4backEv>
 801bcd2:	4603      	mov	r3, r0
      }
 801bcd4:	4618      	mov	r0, r3
 801bcd6:	3708      	adds	r7, #8
 801bcd8:	46bd      	mov	sp, r7
 801bcda:	bdb0      	pop	{r4, r5, r7, pc}

0801bcdc <_ZSt28__variant_construct_by_indexILj5ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801bcdc:	b590      	push	{r4, r7, lr}
 801bcde:	b085      	sub	sp, #20
 801bce0:	af00      	add	r7, sp, #0
 801bce2:	6078      	str	r0, [r7, #4]
 801bce4:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801bce6:	687b      	ldr	r3, [r7, #4]
 801bce8:	2205      	movs	r2, #5
 801bcea:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801bcec:	6878      	ldr	r0, [r7, #4]
 801bcee:	f7e9 f824 	bl	8004d3a <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801bcf2:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801bcf4:	6838      	ldr	r0, [r7, #0]
 801bcf6:	f7f8 fd1d 	bl	8014734 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801bcfa:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801bcfc:	681c      	ldr	r4, [r3, #0]
 801bcfe:	68f8      	ldr	r0, [r7, #12]
 801bd00:	f7f9 fe97 	bl	8015a32 <_ZSt9addressofIP13Function_callEPT_RS2_>
 801bd04:	4603      	mov	r3, r0
 801bd06:	4619      	mov	r1, r3
 801bd08:	2004      	movs	r0, #4
 801bd0a:	f7e5 f9a6 	bl	800105a <_ZnwjPv>
 801bd0e:	4603      	mov	r3, r0
 801bd10:	601c      	str	r4, [r3, #0]
    }
 801bd12:	bf00      	nop
 801bd14:	3714      	adds	r7, #20
 801bd16:	46bd      	mov	sp, r7
 801bd18:	bd90      	pop	{r4, r7, pc}

0801bd1a <_ZSt28__variant_construct_by_indexILj4ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS8_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801bd1a:	b590      	push	{r4, r7, lr}
 801bd1c:	b085      	sub	sp, #20
 801bd1e:	af00      	add	r7, sp, #0
 801bd20:	6078      	str	r0, [r7, #4]
 801bd22:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801bd24:	687b      	ldr	r3, [r7, #4]
 801bd26:	2204      	movs	r2, #4
 801bd28:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801bd2a:	6878      	ldr	r0, [r7, #4]
 801bd2c:	f7e8 ff6d 	bl	8004c0a <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801bd30:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801bd32:	6838      	ldr	r0, [r7, #0]
 801bd34:	f7ff fc7f 	bl	801b636 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801bd38:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801bd3a:	681c      	ldr	r4, [r3, #0]
 801bd3c:	68f8      	ldr	r0, [r7, #12]
 801bd3e:	f000 fd76 	bl	801c82e <_ZSt9addressofIP8VariableEPT_RS2_>
 801bd42:	4603      	mov	r3, r0
 801bd44:	4619      	mov	r1, r3
 801bd46:	2004      	movs	r0, #4
 801bd48:	f7e5 f987 	bl	800105a <_ZnwjPv>
 801bd4c:	4603      	mov	r3, r0
 801bd4e:	601c      	str	r4, [r3, #0]
    }
 801bd50:	bf00      	nop
 801bd52:	3714      	adds	r7, #20
 801bd54:	46bd      	mov	sp, r7
 801bd56:	bd90      	pop	{r4, r7, pc}

0801bd58 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801bd58:	b590      	push	{r4, r7, lr}
 801bd5a:	b085      	sub	sp, #20
 801bd5c:	af00      	add	r7, sp, #0
 801bd5e:	6078      	str	r0, [r7, #4]
 801bd60:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801bd62:	687b      	ldr	r3, [r7, #4]
 801bd64:	2200      	movs	r2, #0
 801bd66:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801bd68:	6878      	ldr	r0, [r7, #4]
 801bd6a:	f7e9 fa9b 	bl	80052a4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801bd6e:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801bd70:	6838      	ldr	r0, [r7, #0]
 801bd72:	f7ef f9ce 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801bd76:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801bd78:	781c      	ldrb	r4, [r3, #0]
 801bd7a:	68f8      	ldr	r0, [r7, #12]
 801bd7c:	f7f1 facb 	bl	800d316 <_ZSt9addressofIbEPT_RS0_>
 801bd80:	4603      	mov	r3, r0
 801bd82:	4619      	mov	r1, r3
 801bd84:	2001      	movs	r0, #1
 801bd86:	f7e5 f968 	bl	800105a <_ZnwjPv>
 801bd8a:	4603      	mov	r3, r0
 801bd8c:	4622      	mov	r2, r4
 801bd8e:	701a      	strb	r2, [r3, #0]
    }
 801bd90:	bf00      	nop
 801bd92:	3714      	adds	r7, #20
 801bd94:	46bd      	mov	sp, r7
 801bd96:	bd90      	pop	{r4, r7, pc}

0801bd98 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801bd98:	b590      	push	{r4, r7, lr}
 801bd9a:	b085      	sub	sp, #20
 801bd9c:	af00      	add	r7, sp, #0
 801bd9e:	6078      	str	r0, [r7, #4]
 801bda0:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801bda2:	687b      	ldr	r3, [r7, #4]
 801bda4:	2201      	movs	r2, #1
 801bda6:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801bda8:	6878      	ldr	r0, [r7, #4]
 801bdaa:	f7e9 fb05 	bl	80053b8 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801bdae:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801bdb0:	6838      	ldr	r0, [r7, #0]
 801bdb2:	f7ea f922 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801bdb6:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801bdb8:	681c      	ldr	r4, [r3, #0]
 801bdba:	68f8      	ldr	r0, [r7, #12]
 801bdbc:	f7f1 fa93 	bl	800d2e6 <_ZSt9addressofIiEPT_RS0_>
 801bdc0:	4603      	mov	r3, r0
 801bdc2:	4619      	mov	r1, r3
 801bdc4:	2004      	movs	r0, #4
 801bdc6:	f7e5 f948 	bl	800105a <_ZnwjPv>
 801bdca:	4603      	mov	r3, r0
 801bdcc:	601c      	str	r4, [r3, #0]
    }
 801bdce:	bf00      	nop
 801bdd0:	3714      	adds	r7, #20
 801bdd2:	46bd      	mov	sp, r7
 801bdd4:	bd90      	pop	{r4, r7, pc}

0801bdd6 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801bdd6:	b590      	push	{r4, r7, lr}
 801bdd8:	b085      	sub	sp, #20
 801bdda:	af00      	add	r7, sp, #0
 801bddc:	6078      	str	r0, [r7, #4]
 801bdde:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801bde0:	687b      	ldr	r3, [r7, #4]
 801bde2:	2202      	movs	r2, #2
 801bde4:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801bde6:	6878      	ldr	r0, [r7, #4]
 801bde8:	f7e9 fb82 	bl	80054f0 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801bdec:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801bdee:	6838      	ldr	r0, [r7, #0]
 801bdf0:	f7ea f925 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801bdf4:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801bdf6:	681c      	ldr	r4, [r3, #0]
 801bdf8:	68f8      	ldr	r0, [r7, #12]
 801bdfa:	f7f1 fa80 	bl	800d2fe <_ZSt9addressofIfEPT_RS0_>
 801bdfe:	4603      	mov	r3, r0
 801be00:	4619      	mov	r1, r3
 801be02:	2004      	movs	r0, #4
 801be04:	f7e5 f929 	bl	800105a <_ZnwjPv>
 801be08:	4603      	mov	r3, r0
 801be0a:	601c      	str	r4, [r3, #0]
    }
 801be0c:	bf00      	nop
 801be0e:	3714      	adds	r7, #20
 801be10:	46bd      	mov	sp, r7
 801be12:	bd90      	pop	{r4, r7, pc}

0801be14 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801be14:	b590      	push	{r4, r7, lr}
 801be16:	b085      	sub	sp, #20
 801be18:	af00      	add	r7, sp, #0
 801be1a:	6078      	str	r0, [r7, #4]
 801be1c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801be1e:	687b      	ldr	r3, [r7, #4]
 801be20:	2203      	movs	r2, #3
 801be22:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801be24:	6878      	ldr	r0, [r7, #4]
 801be26:	f7e9 fc11 	bl	800564c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801be2a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801be2c:	6838      	ldr	r0, [r7, #0]
 801be2e:	f7ef f99d 	bl	800b16c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801be32:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 801be34:	68f8      	ldr	r0, [r7, #12]
 801be36:	f7f1 fa7a 	bl	800d32e <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 801be3a:	4603      	mov	r3, r0
 801be3c:	4619      	mov	r1, r3
 801be3e:	2018      	movs	r0, #24
 801be40:	f7e5 f90b 	bl	800105a <_ZnwjPv>
 801be44:	4603      	mov	r3, r0
 801be46:	4621      	mov	r1, r4
 801be48:	4618      	mov	r0, r3
 801be4a:	f007 f8ba 	bl	8022fc2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 801be4e:	bf00      	nop
 801be50:	3714      	adds	r7, #20
 801be52:	46bd      	mov	sp, r7
 801be54:	bd90      	pop	{r4, r7, pc}

0801be56 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>:
      void _M_reset()
 801be56:	b480      	push	{r7}
 801be58:	b083      	sub	sp, #12
 801be5a:	af00      	add	r7, sp, #0
 801be5c:	6078      	str	r0, [r7, #4]
      { _M_index = variant_npos; }
 801be5e:	687b      	ldr	r3, [r7, #4]
 801be60:	22ff      	movs	r2, #255	; 0xff
 801be62:	711a      	strb	r2, [r3, #4]
 801be64:	bf00      	nop
 801be66:	370c      	adds	r7, #12
 801be68:	46bd      	mov	sp, r7
 801be6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801be6e:	4770      	bx	lr

0801be70 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP17Primal_expressionP10ExpressionEEJS4_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801be70:	b590      	push	{r4, r7, lr}
 801be72:	b085      	sub	sp, #20
 801be74:	af00      	add	r7, sp, #0
 801be76:	6078      	str	r0, [r7, #4]
 801be78:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801be7a:	687b      	ldr	r3, [r7, #4]
 801be7c:	2201      	movs	r2, #1
 801be7e:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801be80:	6878      	ldr	r0, [r7, #4]
 801be82:	f7e8 ffaa 	bl	8004dda <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 801be86:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801be88:	6838      	ldr	r0, [r7, #0]
 801be8a:	f7f8 ffe5 	bl	8014e58 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801be8e:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801be90:	681c      	ldr	r4, [r3, #0]
 801be92:	68f8      	ldr	r0, [r7, #12]
 801be94:	f000 fcd7 	bl	801c846 <_ZSt9addressofIP10ExpressionEPT_RS2_>
 801be98:	4603      	mov	r3, r0
 801be9a:	4619      	mov	r1, r3
 801be9c:	2004      	movs	r0, #4
 801be9e:	f7e5 f8dc 	bl	800105a <_ZnwjPv>
 801bea2:	4603      	mov	r3, r0
 801bea4:	601c      	str	r4, [r3, #0]
    }
 801bea6:	bf00      	nop
 801bea8:	3714      	adds	r7, #20
 801beaa:	46bd      	mov	sp, r7
 801beac:	bd90      	pop	{r4, r7, pc}

0801beae <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP17Primal_expressionP10ExpressionEEJS2_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801beae:	b590      	push	{r4, r7, lr}
 801beb0:	b085      	sub	sp, #20
 801beb2:	af00      	add	r7, sp, #0
 801beb4:	6078      	str	r0, [r7, #4]
 801beb6:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801beb8:	687b      	ldr	r3, [r7, #4]
 801beba:	2200      	movs	r2, #0
 801bebc:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801bebe:	6878      	ldr	r0, [r7, #4]
 801bec0:	f7e8 ffc9 	bl	8004e56 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 801bec4:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801bec6:	6838      	ldr	r0, [r7, #0]
 801bec8:	f7ff fcb6 	bl	801b838 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801becc:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801bece:	681c      	ldr	r4, [r3, #0]
 801bed0:	68f8      	ldr	r0, [r7, #12]
 801bed2:	f000 fcc4 	bl	801c85e <_ZSt9addressofIP17Primal_expressionEPT_RS2_>
 801bed6:	4603      	mov	r3, r0
 801bed8:	4619      	mov	r1, r3
 801beda:	2004      	movs	r0, #4
 801bedc:	f7e5 f8bd 	bl	800105a <_ZnwjPv>
 801bee0:	4603      	mov	r3, r0
 801bee2:	601c      	str	r4, [r3, #0]
    }
 801bee4:	bf00      	nop
 801bee6:	3714      	adds	r7, #20
 801bee8:	46bd      	mov	sp, r7
 801beea:	bd90      	pop	{r4, r7, pc}

0801beec <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801beec:	b480      	push	{r7}
 801beee:	b083      	sub	sp, #12
 801bef0:	af00      	add	r7, sp, #0
 801bef2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801bef4:	687b      	ldr	r3, [r7, #4]
 801bef6:	4618      	mov	r0, r3
 801bef8:	370c      	adds	r7, #12
 801befa:	46bd      	mov	sp, r7
 801befc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bf00:	4770      	bx	lr

0801bf02 <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801bf02:	b580      	push	{r7, lr}
 801bf04:	b084      	sub	sp, #16
 801bf06:	af00      	add	r7, sp, #0
 801bf08:	60f8      	str	r0, [r7, #12]
 801bf0a:	60b9      	str	r1, [r7, #8]
 801bf0c:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801bf0e:	6878      	ldr	r0, [r7, #4]
 801bf10:	f7ff ffec 	bl	801beec <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801bf14:	4603      	mov	r3, r0
 801bf16:	461a      	mov	r2, r3
 801bf18:	68b9      	ldr	r1, [r7, #8]
 801bf1a:	68f8      	ldr	r0, [r7, #12]
 801bf1c:	f000 fcab 	bl	801c876 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>
 801bf20:	bf00      	nop
 801bf22:	3710      	adds	r7, #16
 801bf24:	46bd      	mov	sp, r7
 801bf26:	bd80      	pop	{r7, pc}

0801bf28 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801bf28:	b580      	push	{r7, lr}
 801bf2a:	b084      	sub	sp, #16
 801bf2c:	af00      	add	r7, sp, #0
 801bf2e:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 801bf30:	687b      	ldr	r3, [r7, #4]
 801bf32:	1d1a      	adds	r2, r3, #4
 801bf34:	f107 030c 	add.w	r3, r7, #12
 801bf38:	4611      	mov	r1, r2
 801bf3a:	4618      	mov	r0, r3
 801bf3c:	f000 fcb2 	bl	801c8a4 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801bf40:	68fb      	ldr	r3, [r7, #12]
 801bf42:	4618      	mov	r0, r3
 801bf44:	3710      	adds	r7, #16
 801bf46:	46bd      	mov	sp, r7
 801bf48:	bd80      	pop	{r7, pc}
	...

0801bf4c <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801bf4c:	b5b0      	push	{r4, r5, r7, lr}
 801bf4e:	b08c      	sub	sp, #48	; 0x30
 801bf50:	af00      	add	r7, sp, #0
 801bf52:	60f8      	str	r0, [r7, #12]
 801bf54:	60b9      	str	r1, [r7, #8]
 801bf56:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801bf58:	4a38      	ldr	r2, [pc, #224]	; (801c03c <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xf0>)
 801bf5a:	2101      	movs	r1, #1
 801bf5c:	68f8      	ldr	r0, [r7, #12]
 801bf5e:	f000 fcb1 	bl	801c8c4 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc>
 801bf62:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801bf64:	68fb      	ldr	r3, [r7, #12]
 801bf66:	681b      	ldr	r3, [r3, #0]
 801bf68:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801bf6a:	68fb      	ldr	r3, [r7, #12]
 801bf6c:	685b      	ldr	r3, [r3, #4]
 801bf6e:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801bf70:	68f8      	ldr	r0, [r7, #12]
 801bf72:	f000 fcee 	bl	801c952 <_ZNSt6vectorI13mult_operatorSaIS0_EE5beginEv>
 801bf76:	4603      	mov	r3, r0
 801bf78:	617b      	str	r3, [r7, #20]
 801bf7a:	f107 0214 	add.w	r2, r7, #20
 801bf7e:	f107 0308 	add.w	r3, r7, #8
 801bf82:	4611      	mov	r1, r2
 801bf84:	4618      	mov	r0, r3
 801bf86:	f000 fcf4 	bl	801c972 <_ZN9__gnu_cxxmiIP13mult_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
 801bf8a:	4603      	mov	r3, r0
 801bf8c:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801bf8e:	68fb      	ldr	r3, [r7, #12]
 801bf90:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801bf92:	4618      	mov	r0, r3
 801bf94:	f000 fd01 	bl	801c99a <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj>
 801bf98:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801bf9a:	69fb      	ldr	r3, [r7, #28]
 801bf9c:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801bf9e:	68fc      	ldr	r4, [r7, #12]
 801bfa0:	69fa      	ldr	r2, [r7, #28]
 801bfa2:	6a3b      	ldr	r3, [r7, #32]
 801bfa4:	18d5      	adds	r5, r2, r3
 801bfa6:	6878      	ldr	r0, [r7, #4]
 801bfa8:	f7ff ffa0 	bl	801beec <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801bfac:	4603      	mov	r3, r0
 801bfae:	461a      	mov	r2, r3
 801bfb0:	4629      	mov	r1, r5
 801bfb2:	4620      	mov	r0, r4
 801bfb4:	f7ff ffa5 	bl	801bf02 <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
 801bfb8:	2300      	movs	r3, #0
 801bfba:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801bfbc:	f107 0308 	add.w	r3, r7, #8
 801bfc0:	4618      	mov	r0, r3
 801bfc2:	f000 fd12 	bl	801c9ea <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801bfc6:	4603      	mov	r3, r0
 801bfc8:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801bfca:	68fb      	ldr	r3, [r7, #12]
 801bfcc:	4618      	mov	r0, r3
 801bfce:	f7e8 ffd1 	bl	8004f74 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801bfd2:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801bfd4:	69fa      	ldr	r2, [r7, #28]
 801bfd6:	4621      	mov	r1, r4
 801bfd8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801bfda:	f000 fcf2 	bl	801c9c2 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801bfde:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801bfe0:	69bb      	ldr	r3, [r7, #24]
 801bfe2:	3301      	adds	r3, #1
 801bfe4:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bfe6:	f107 0308 	add.w	r3, r7, #8
 801bfea:	4618      	mov	r0, r3
 801bfec:	f000 fcfd 	bl	801c9ea <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801bff0:	4603      	mov	r3, r0
 801bff2:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801bff4:	68fb      	ldr	r3, [r7, #12]
 801bff6:	4618      	mov	r0, r3
 801bff8:	f7e8 ffbc 	bl	8004f74 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801bffc:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bffe:	69ba      	ldr	r2, [r7, #24]
 801c000:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c002:	4620      	mov	r0, r4
 801c004:	f000 fcdd 	bl	801c9c2 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801c008:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c00a:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c00c:	68fb      	ldr	r3, [r7, #12]
 801c00e:	689a      	ldr	r2, [r3, #8]
 801c010:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c012:	1ad3      	subs	r3, r2, r3
      _M_deallocate(__old_start,
 801c014:	461a      	mov	r2, r3
 801c016:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c018:	f7e9 fd46 	bl	8005aa8 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>
      this->_M_impl._M_start = __new_start;
 801c01c:	68fb      	ldr	r3, [r7, #12]
 801c01e:	69fa      	ldr	r2, [r7, #28]
 801c020:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c022:	68fb      	ldr	r3, [r7, #12]
 801c024:	69ba      	ldr	r2, [r7, #24]
 801c026:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c028:	69fa      	ldr	r2, [r7, #28]
 801c02a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c02c:	441a      	add	r2, r3
 801c02e:	68fb      	ldr	r3, [r7, #12]
 801c030:	609a      	str	r2, [r3, #8]
    }
 801c032:	bf00      	nop
 801c034:	3730      	adds	r7, #48	; 0x30
 801c036:	46bd      	mov	sp, r7
 801c038:	bdb0      	pop	{r4, r5, r7, pc}
 801c03a:	bf00      	nop
 801c03c:	08027bc0 	.word	0x08027bc0

0801c040 <_ZNSt6vectorI13mult_operatorSaIS0_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c040:	b580      	push	{r7, lr}
 801c042:	b084      	sub	sp, #16
 801c044:	af00      	add	r7, sp, #0
 801c046:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c048:	6878      	ldr	r0, [r7, #4]
 801c04a:	f7ff ff6d 	bl	801bf28 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>
 801c04e:	4603      	mov	r3, r0
 801c050:	60fb      	str	r3, [r7, #12]
 801c052:	f107 030c 	add.w	r3, r7, #12
 801c056:	2101      	movs	r1, #1
 801c058:	4618      	mov	r0, r3
 801c05a:	f000 fcd1 	bl	801ca00 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEmiEi>
 801c05e:	4603      	mov	r3, r0
 801c060:	60bb      	str	r3, [r7, #8]
 801c062:	f107 0308 	add.w	r3, r7, #8
 801c066:	4618      	mov	r0, r3
 801c068:	f000 fce2 	bl	801ca30 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEdeEv>
 801c06c:	4603      	mov	r3, r0
      }
 801c06e:	4618      	mov	r0, r3
 801c070:	3710      	adds	r7, #16
 801c072:	46bd      	mov	sp, r7
 801c074:	bd80      	pop	{r7, pc}

0801c076 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801c076:	b480      	push	{r7}
 801c078:	b083      	sub	sp, #12
 801c07a:	af00      	add	r7, sp, #0
 801c07c:	6078      	str	r0, [r7, #4]
 801c07e:	687b      	ldr	r3, [r7, #4]
 801c080:	4618      	mov	r0, r3
 801c082:	370c      	adds	r7, #12
 801c084:	46bd      	mov	sp, r7
 801c086:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c08a:	4770      	bx	lr

0801c08c <_ZN9__gnu_cxx13new_allocatorI13mult_operatorEC1Ev>:
 801c08c:	b480      	push	{r7}
 801c08e:	b083      	sub	sp, #12
 801c090:	af00      	add	r7, sp, #0
 801c092:	6078      	str	r0, [r7, #4]
 801c094:	687b      	ldr	r3, [r7, #4]
 801c096:	4618      	mov	r0, r3
 801c098:	370c      	adds	r7, #12
 801c09a:	46bd      	mov	sp, r7
 801c09c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c0a0:	4770      	bx	lr

0801c0a2 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c0a2:	b480      	push	{r7}
 801c0a4:	b083      	sub	sp, #12
 801c0a6:	af00      	add	r7, sp, #0
 801c0a8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c0aa:	687b      	ldr	r3, [r7, #4]
 801c0ac:	4618      	mov	r0, r3
 801c0ae:	370c      	adds	r7, #12
 801c0b0:	46bd      	mov	sp, r7
 801c0b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c0b6:	4770      	bx	lr

0801c0b8 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c0b8:	b580      	push	{r7, lr}
 801c0ba:	b084      	sub	sp, #16
 801c0bc:	af00      	add	r7, sp, #0
 801c0be:	60f8      	str	r0, [r7, #12]
 801c0c0:	60b9      	str	r1, [r7, #8]
 801c0c2:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c0c4:	6878      	ldr	r0, [r7, #4]
 801c0c6:	f7ff ffec 	bl	801c0a2 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c0ca:	4603      	mov	r3, r0
 801c0cc:	461a      	mov	r2, r3
 801c0ce:	68b9      	ldr	r1, [r7, #8]
 801c0d0:	68f8      	ldr	r0, [r7, #12]
 801c0d2:	f000 fcb9 	bl	801ca48 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801c0d6:	bf00      	nop
 801c0d8:	3710      	adds	r7, #16
 801c0da:	46bd      	mov	sp, r7
 801c0dc:	bd80      	pop	{r7, pc}
	...

0801c0e0 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c0e0:	b5b0      	push	{r4, r5, r7, lr}
 801c0e2:	b08c      	sub	sp, #48	; 0x30
 801c0e4:	af00      	add	r7, sp, #0
 801c0e6:	60f8      	str	r0, [r7, #12]
 801c0e8:	60b9      	str	r1, [r7, #8]
 801c0ea:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c0ec:	4a39      	ldr	r2, [pc, #228]	; (801c1d4 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801c0ee:	2101      	movs	r1, #1
 801c0f0:	68f8      	ldr	r0, [r7, #12]
 801c0f2:	f000 fcbf 	bl	801ca74 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc>
 801c0f6:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c0f8:	68fb      	ldr	r3, [r7, #12]
 801c0fa:	681b      	ldr	r3, [r3, #0]
 801c0fc:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c0fe:	68fb      	ldr	r3, [r7, #12]
 801c100:	685b      	ldr	r3, [r3, #4]
 801c102:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c104:	68f8      	ldr	r0, [r7, #12]
 801c106:	f7e8 fb59 	bl	80047bc <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>
 801c10a:	4603      	mov	r3, r0
 801c10c:	617b      	str	r3, [r7, #20]
 801c10e:	f107 0214 	add.w	r2, r7, #20
 801c112:	f107 0308 	add.w	r3, r7, #8
 801c116:	4611      	mov	r1, r2
 801c118:	4618      	mov	r0, r3
 801c11a:	f000 fcf2 	bl	801cb02 <_ZN9__gnu_cxxmiIPP16Power_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801c11e:	4603      	mov	r3, r0
 801c120:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c122:	68fb      	ldr	r3, [r7, #12]
 801c124:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c126:	4618      	mov	r0, r3
 801c128:	f000 fd00 	bl	801cb2c <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj>
 801c12c:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c12e:	69fb      	ldr	r3, [r7, #28]
 801c130:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c132:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801c134:	6a3b      	ldr	r3, [r7, #32]
 801c136:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801c138:	69fa      	ldr	r2, [r7, #28]
 801c13a:	18d5      	adds	r5, r2, r3
 801c13c:	6878      	ldr	r0, [r7, #4]
 801c13e:	f7ff ffb0 	bl	801c0a2 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c142:	4603      	mov	r3, r0
 801c144:	461a      	mov	r2, r3
 801c146:	4629      	mov	r1, r5
 801c148:	4620      	mov	r0, r4
 801c14a:	f7ff ffb5 	bl	801c0b8 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801c14e:	2300      	movs	r3, #0
 801c150:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c152:	f107 0308 	add.w	r3, r7, #8
 801c156:	4618      	mov	r0, r3
 801c158:	f7e8 ff35 	bl	8004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c15c:	4603      	mov	r3, r0
 801c15e:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c160:	68fb      	ldr	r3, [r7, #12]
 801c162:	4618      	mov	r0, r3
 801c164:	f7e8 fec9 	bl	8004efa <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c168:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c16a:	69fa      	ldr	r2, [r7, #28]
 801c16c:	4621      	mov	r1, r4
 801c16e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c170:	f000 fcf0 	bl	801cb54 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c174:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c176:	69bb      	ldr	r3, [r7, #24]
 801c178:	3304      	adds	r3, #4
 801c17a:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c17c:	f107 0308 	add.w	r3, r7, #8
 801c180:	4618      	mov	r0, r3
 801c182:	f7e8 ff20 	bl	8004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c186:	4603      	mov	r3, r0
 801c188:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c18a:	68fb      	ldr	r3, [r7, #12]
 801c18c:	4618      	mov	r0, r3
 801c18e:	f7e8 feb4 	bl	8004efa <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c192:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c194:	69ba      	ldr	r2, [r7, #24]
 801c196:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c198:	4620      	mov	r0, r4
 801c19a:	f000 fcdb 	bl	801cb54 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c19e:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c1a0:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c1a2:	68fb      	ldr	r3, [r7, #12]
 801c1a4:	689a      	ldr	r2, [r3, #8]
 801c1a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c1a8:	1ad3      	subs	r3, r2, r3
 801c1aa:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801c1ac:	461a      	mov	r2, r3
 801c1ae:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c1b0:	f7e9 fc4e 	bl	8005a50 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801c1b4:	68fb      	ldr	r3, [r7, #12]
 801c1b6:	69fa      	ldr	r2, [r7, #28]
 801c1b8:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c1ba:	68fb      	ldr	r3, [r7, #12]
 801c1bc:	69ba      	ldr	r2, [r7, #24]
 801c1be:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c1c0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c1c2:	009b      	lsls	r3, r3, #2
 801c1c4:	69fa      	ldr	r2, [r7, #28]
 801c1c6:	441a      	add	r2, r3
 801c1c8:	68fb      	ldr	r3, [r7, #12]
 801c1ca:	609a      	str	r2, [r3, #8]
    }
 801c1cc:	bf00      	nop
 801c1ce:	3730      	adds	r7, #48	; 0x30
 801c1d0:	46bd      	mov	sp, r7
 801c1d2:	bdb0      	pop	{r4, r5, r7, pc}
 801c1d4:	08027bc0 	.word	0x08027bc0

0801c1d8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c1d8:	b580      	push	{r7, lr}
 801c1da:	b084      	sub	sp, #16
 801c1dc:	af00      	add	r7, sp, #0
 801c1de:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c1e0:	6878      	ldr	r0, [r7, #4]
 801c1e2:	f7e8 fafb 	bl	80047dc <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 801c1e6:	4603      	mov	r3, r0
 801c1e8:	60fb      	str	r3, [r7, #12]
 801c1ea:	f107 030c 	add.w	r3, r7, #12
 801c1ee:	2101      	movs	r1, #1
 801c1f0:	4618      	mov	r0, r3
 801c1f2:	f000 fcc3 	bl	801cb7c <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801c1f6:	4603      	mov	r3, r0
 801c1f8:	60bb      	str	r3, [r7, #8]
 801c1fa:	f107 0308 	add.w	r3, r7, #8
 801c1fe:	4618      	mov	r0, r3
 801c200:	f7e8 fb25 	bl	800484e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801c204:	4603      	mov	r3, r0
      }
 801c206:	4618      	mov	r0, r3
 801c208:	3710      	adds	r7, #16
 801c20a:	46bd      	mov	sp, r7
 801c20c:	bd80      	pop	{r7, pc}

0801c20e <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c20e:	b480      	push	{r7}
 801c210:	b083      	sub	sp, #12
 801c212:	af00      	add	r7, sp, #0
 801c214:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c216:	687b      	ldr	r3, [r7, #4]
 801c218:	4618      	mov	r0, r3
 801c21a:	370c      	adds	r7, #12
 801c21c:	46bd      	mov	sp, r7
 801c21e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c222:	4770      	bx	lr

0801c224 <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c224:	b580      	push	{r7, lr}
 801c226:	b084      	sub	sp, #16
 801c228:	af00      	add	r7, sp, #0
 801c22a:	60f8      	str	r0, [r7, #12]
 801c22c:	60b9      	str	r1, [r7, #8]
 801c22e:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c230:	6878      	ldr	r0, [r7, #4]
 801c232:	f7ff ffec 	bl	801c20e <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801c236:	4603      	mov	r3, r0
 801c238:	461a      	mov	r2, r3
 801c23a:	68b9      	ldr	r1, [r7, #8]
 801c23c:	68f8      	ldr	r0, [r7, #12]
 801c23e:	f000 fcb6 	bl	801cbae <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>
 801c242:	bf00      	nop
 801c244:	3710      	adds	r7, #16
 801c246:	46bd      	mov	sp, r7
 801c248:	bd80      	pop	{r7, pc}

0801c24a <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801c24a:	b580      	push	{r7, lr}
 801c24c:	b084      	sub	sp, #16
 801c24e:	af00      	add	r7, sp, #0
 801c250:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 801c252:	687b      	ldr	r3, [r7, #4]
 801c254:	1d1a      	adds	r2, r3, #4
 801c256:	f107 030c 	add.w	r3, r7, #12
 801c25a:	4611      	mov	r1, r2
 801c25c:	4618      	mov	r0, r3
 801c25e:	f000 fcbd 	bl	801cbdc <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801c262:	68fb      	ldr	r3, [r7, #12]
 801c264:	4618      	mov	r0, r3
 801c266:	3710      	adds	r7, #16
 801c268:	46bd      	mov	sp, r7
 801c26a:	bd80      	pop	{r7, pc}

0801c26c <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c26c:	b5b0      	push	{r4, r5, r7, lr}
 801c26e:	b08c      	sub	sp, #48	; 0x30
 801c270:	af00      	add	r7, sp, #0
 801c272:	60f8      	str	r0, [r7, #12]
 801c274:	60b9      	str	r1, [r7, #8]
 801c276:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c278:	4a38      	ldr	r2, [pc, #224]	; (801c35c <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xf0>)
 801c27a:	2101      	movs	r1, #1
 801c27c:	68f8      	ldr	r0, [r7, #12]
 801c27e:	f000 fcbd 	bl	801cbfc <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc>
 801c282:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c284:	68fb      	ldr	r3, [r7, #12]
 801c286:	681b      	ldr	r3, [r3, #0]
 801c288:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c28a:	68fb      	ldr	r3, [r7, #12]
 801c28c:	685b      	ldr	r3, [r3, #4]
 801c28e:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c290:	68f8      	ldr	r0, [r7, #12]
 801c292:	f000 fcfa 	bl	801cc8a <_ZNSt6vectorI12sum_operatorSaIS0_EE5beginEv>
 801c296:	4603      	mov	r3, r0
 801c298:	617b      	str	r3, [r7, #20]
 801c29a:	f107 0214 	add.w	r2, r7, #20
 801c29e:	f107 0308 	add.w	r3, r7, #8
 801c2a2:	4611      	mov	r1, r2
 801c2a4:	4618      	mov	r0, r3
 801c2a6:	f000 fd00 	bl	801ccaa <_ZN9__gnu_cxxmiIP12sum_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
 801c2aa:	4603      	mov	r3, r0
 801c2ac:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c2ae:	68fb      	ldr	r3, [r7, #12]
 801c2b0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c2b2:	4618      	mov	r0, r3
 801c2b4:	f000 fd0d 	bl	801ccd2 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj>
 801c2b8:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c2ba:	69fb      	ldr	r3, [r7, #28]
 801c2bc:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c2be:	68fc      	ldr	r4, [r7, #12]
 801c2c0:	69fa      	ldr	r2, [r7, #28]
 801c2c2:	6a3b      	ldr	r3, [r7, #32]
 801c2c4:	18d5      	adds	r5, r2, r3
 801c2c6:	6878      	ldr	r0, [r7, #4]
 801c2c8:	f7ff ffa1 	bl	801c20e <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801c2cc:	4603      	mov	r3, r0
 801c2ce:	461a      	mov	r2, r3
 801c2d0:	4629      	mov	r1, r5
 801c2d2:	4620      	mov	r0, r4
 801c2d4:	f7ff ffa6 	bl	801c224 <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
 801c2d8:	2300      	movs	r3, #0
 801c2da:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c2dc:	f107 0308 	add.w	r3, r7, #8
 801c2e0:	4618      	mov	r0, r3
 801c2e2:	f000 fd1e 	bl	801cd22 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c2e6:	4603      	mov	r3, r0
 801c2e8:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c2ea:	68fb      	ldr	r3, [r7, #12]
 801c2ec:	4618      	mov	r0, r3
 801c2ee:	f7e8 fed7 	bl	80050a0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801c2f2:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c2f4:	69fa      	ldr	r2, [r7, #28]
 801c2f6:	4621      	mov	r1, r4
 801c2f8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c2fa:	f000 fcfe 	bl	801ccfa <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801c2fe:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c300:	69bb      	ldr	r3, [r7, #24]
 801c302:	3301      	adds	r3, #1
 801c304:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c306:	f107 0308 	add.w	r3, r7, #8
 801c30a:	4618      	mov	r0, r3
 801c30c:	f000 fd09 	bl	801cd22 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c310:	4603      	mov	r3, r0
 801c312:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c314:	68fb      	ldr	r3, [r7, #12]
 801c316:	4618      	mov	r0, r3
 801c318:	f7e8 fec2 	bl	80050a0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801c31c:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c31e:	69ba      	ldr	r2, [r7, #24]
 801c320:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c322:	4620      	mov	r0, r4
 801c324:	f000 fce9 	bl	801ccfa <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801c328:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c32a:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c32c:	68fb      	ldr	r3, [r7, #12]
 801c32e:	689a      	ldr	r2, [r3, #8]
 801c330:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c332:	1ad3      	subs	r3, r2, r3
      _M_deallocate(__old_start,
 801c334:	461a      	mov	r2, r3
 801c336:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c338:	f7e9 fc0e 	bl	8005b58 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>
      this->_M_impl._M_start = __new_start;
 801c33c:	68fb      	ldr	r3, [r7, #12]
 801c33e:	69fa      	ldr	r2, [r7, #28]
 801c340:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c342:	68fb      	ldr	r3, [r7, #12]
 801c344:	69ba      	ldr	r2, [r7, #24]
 801c346:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c348:	69fa      	ldr	r2, [r7, #28]
 801c34a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c34c:	441a      	add	r2, r3
 801c34e:	68fb      	ldr	r3, [r7, #12]
 801c350:	609a      	str	r2, [r3, #8]
    }
 801c352:	bf00      	nop
 801c354:	3730      	adds	r7, #48	; 0x30
 801c356:	46bd      	mov	sp, r7
 801c358:	bdb0      	pop	{r4, r5, r7, pc}
 801c35a:	bf00      	nop
 801c35c:	08027bc0 	.word	0x08027bc0

0801c360 <_ZNSt6vectorI12sum_operatorSaIS0_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c360:	b580      	push	{r7, lr}
 801c362:	b084      	sub	sp, #16
 801c364:	af00      	add	r7, sp, #0
 801c366:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c368:	6878      	ldr	r0, [r7, #4]
 801c36a:	f7ff ff6e 	bl	801c24a <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>
 801c36e:	4603      	mov	r3, r0
 801c370:	60fb      	str	r3, [r7, #12]
 801c372:	f107 030c 	add.w	r3, r7, #12
 801c376:	2101      	movs	r1, #1
 801c378:	4618      	mov	r0, r3
 801c37a:	f000 fcdd 	bl	801cd38 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEmiEi>
 801c37e:	4603      	mov	r3, r0
 801c380:	60bb      	str	r3, [r7, #8]
 801c382:	f107 0308 	add.w	r3, r7, #8
 801c386:	4618      	mov	r0, r3
 801c388:	f000 fcee 	bl	801cd68 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEdeEv>
 801c38c:	4603      	mov	r3, r0
      }
 801c38e:	4618      	mov	r0, r3
 801c390:	3710      	adds	r7, #16
 801c392:	46bd      	mov	sp, r7
 801c394:	bd80      	pop	{r7, pc}

0801c396 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionEC1Ev>:
 801c396:	b480      	push	{r7}
 801c398:	b083      	sub	sp, #12
 801c39a:	af00      	add	r7, sp, #0
 801c39c:	6078      	str	r0, [r7, #4]
 801c39e:	687b      	ldr	r3, [r7, #4]
 801c3a0:	4618      	mov	r0, r3
 801c3a2:	370c      	adds	r7, #12
 801c3a4:	46bd      	mov	sp, r7
 801c3a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c3aa:	4770      	bx	lr

0801c3ac <_ZN9__gnu_cxx13new_allocatorI12sum_operatorEC1Ev>:
 801c3ac:	b480      	push	{r7}
 801c3ae:	b083      	sub	sp, #12
 801c3b0:	af00      	add	r7, sp, #0
 801c3b2:	6078      	str	r0, [r7, #4]
 801c3b4:	687b      	ldr	r3, [r7, #4]
 801c3b6:	4618      	mov	r0, r3
 801c3b8:	370c      	adds	r7, #12
 801c3ba:	46bd      	mov	sp, r7
 801c3bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c3c0:	4770      	bx	lr

0801c3c2 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c3c2:	b480      	push	{r7}
 801c3c4:	b083      	sub	sp, #12
 801c3c6:	af00      	add	r7, sp, #0
 801c3c8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c3ca:	687b      	ldr	r3, [r7, #4]
 801c3cc:	4618      	mov	r0, r3
 801c3ce:	370c      	adds	r7, #12
 801c3d0:	46bd      	mov	sp, r7
 801c3d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c3d6:	4770      	bx	lr

0801c3d8 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c3d8:	b580      	push	{r7, lr}
 801c3da:	b084      	sub	sp, #16
 801c3dc:	af00      	add	r7, sp, #0
 801c3de:	60f8      	str	r0, [r7, #12]
 801c3e0:	60b9      	str	r1, [r7, #8]
 801c3e2:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c3e4:	6878      	ldr	r0, [r7, #4]
 801c3e6:	f7ff ffec 	bl	801c3c2 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c3ea:	4603      	mov	r3, r0
 801c3ec:	461a      	mov	r2, r3
 801c3ee:	68b9      	ldr	r1, [r7, #8]
 801c3f0:	68f8      	ldr	r0, [r7, #12]
 801c3f2:	f000 fcc5 	bl	801cd80 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801c3f6:	bf00      	nop
 801c3f8:	3710      	adds	r7, #16
 801c3fa:	46bd      	mov	sp, r7
 801c3fc:	bd80      	pop	{r7, pc}
	...

0801c400 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c400:	b5b0      	push	{r4, r5, r7, lr}
 801c402:	b08c      	sub	sp, #48	; 0x30
 801c404:	af00      	add	r7, sp, #0
 801c406:	60f8      	str	r0, [r7, #12]
 801c408:	60b9      	str	r1, [r7, #8]
 801c40a:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c40c:	4a39      	ldr	r2, [pc, #228]	; (801c4f4 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801c40e:	2101      	movs	r1, #1
 801c410:	68f8      	ldr	r0, [r7, #12]
 801c412:	f000 fccb 	bl	801cdac <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc>
 801c416:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c418:	68fb      	ldr	r3, [r7, #12]
 801c41a:	681b      	ldr	r3, [r3, #0]
 801c41c:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c41e:	68fb      	ldr	r3, [r7, #12]
 801c420:	685b      	ldr	r3, [r3, #4]
 801c422:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c424:	68f8      	ldr	r0, [r7, #12]
 801c426:	f7e8 fa54 	bl	80048d2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>
 801c42a:	4603      	mov	r3, r0
 801c42c:	617b      	str	r3, [r7, #20]
 801c42e:	f107 0214 	add.w	r2, r7, #20
 801c432:	f107 0308 	add.w	r3, r7, #8
 801c436:	4611      	mov	r1, r2
 801c438:	4618      	mov	r0, r3
 801c43a:	f000 fcfe 	bl	801ce3a <_ZN9__gnu_cxxmiIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801c43e:	4603      	mov	r3, r0
 801c440:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c442:	68fb      	ldr	r3, [r7, #12]
 801c444:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c446:	4618      	mov	r0, r3
 801c448:	f000 fd0c 	bl	801ce64 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj>
 801c44c:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c44e:	69fb      	ldr	r3, [r7, #28]
 801c450:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c452:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801c454:	6a3b      	ldr	r3, [r7, #32]
 801c456:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801c458:	69fa      	ldr	r2, [r7, #28]
 801c45a:	18d5      	adds	r5, r2, r3
 801c45c:	6878      	ldr	r0, [r7, #4]
 801c45e:	f7ff ffb0 	bl	801c3c2 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c462:	4603      	mov	r3, r0
 801c464:	461a      	mov	r2, r3
 801c466:	4629      	mov	r1, r5
 801c468:	4620      	mov	r0, r4
 801c46a:	f7ff ffb5 	bl	801c3d8 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801c46e:	2300      	movs	r3, #0
 801c470:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c472:	f107 0308 	add.w	r3, r7, #8
 801c476:	4618      	mov	r0, r3
 801c478:	f7e8 fe3b 	bl	80050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c47c:	4603      	mov	r3, r0
 801c47e:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c480:	68fb      	ldr	r3, [r7, #12]
 801c482:	4618      	mov	r0, r3
 801c484:	f7e8 fdcf 	bl	8005026 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c488:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c48a:	69fa      	ldr	r2, [r7, #28]
 801c48c:	4621      	mov	r1, r4
 801c48e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c490:	f000 fcfc 	bl	801ce8c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c494:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c496:	69bb      	ldr	r3, [r7, #24]
 801c498:	3304      	adds	r3, #4
 801c49a:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c49c:	f107 0308 	add.w	r3, r7, #8
 801c4a0:	4618      	mov	r0, r3
 801c4a2:	f7e8 fe26 	bl	80050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c4a6:	4603      	mov	r3, r0
 801c4a8:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c4aa:	68fb      	ldr	r3, [r7, #12]
 801c4ac:	4618      	mov	r0, r3
 801c4ae:	f7e8 fdba 	bl	8005026 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c4b2:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c4b4:	69ba      	ldr	r2, [r7, #24]
 801c4b6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c4b8:	4620      	mov	r0, r4
 801c4ba:	f000 fce7 	bl	801ce8c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c4be:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c4c0:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c4c2:	68fb      	ldr	r3, [r7, #12]
 801c4c4:	689a      	ldr	r2, [r3, #8]
 801c4c6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c4c8:	1ad3      	subs	r3, r2, r3
 801c4ca:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801c4cc:	461a      	mov	r2, r3
 801c4ce:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c4d0:	f7e9 fb16 	bl	8005b00 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801c4d4:	68fb      	ldr	r3, [r7, #12]
 801c4d6:	69fa      	ldr	r2, [r7, #28]
 801c4d8:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c4da:	68fb      	ldr	r3, [r7, #12]
 801c4dc:	69ba      	ldr	r2, [r7, #24]
 801c4de:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c4e0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c4e2:	009b      	lsls	r3, r3, #2
 801c4e4:	69fa      	ldr	r2, [r7, #28]
 801c4e6:	441a      	add	r2, r3
 801c4e8:	68fb      	ldr	r3, [r7, #12]
 801c4ea:	609a      	str	r2, [r3, #8]
    }
 801c4ec:	bf00      	nop
 801c4ee:	3730      	adds	r7, #48	; 0x30
 801c4f0:	46bd      	mov	sp, r7
 801c4f2:	bdb0      	pop	{r4, r5, r7, pc}
 801c4f4:	08027bc0 	.word	0x08027bc0

0801c4f8 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c4f8:	b580      	push	{r7, lr}
 801c4fa:	b084      	sub	sp, #16
 801c4fc:	af00      	add	r7, sp, #0
 801c4fe:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c500:	6878      	ldr	r0, [r7, #4]
 801c502:	f7e8 f9f6 	bl	80048f2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 801c506:	4603      	mov	r3, r0
 801c508:	60fb      	str	r3, [r7, #12]
 801c50a:	f107 030c 	add.w	r3, r7, #12
 801c50e:	2101      	movs	r1, #1
 801c510:	4618      	mov	r0, r3
 801c512:	f000 fccf 	bl	801ceb4 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801c516:	4603      	mov	r3, r0
 801c518:	60bb      	str	r3, [r7, #8]
 801c51a:	f107 0308 	add.w	r3, r7, #8
 801c51e:	4618      	mov	r0, r3
 801c520:	f7e8 fa20 	bl	8004964 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801c524:	4603      	mov	r3, r0
      }
 801c526:	4618      	mov	r0, r3
 801c528:	3710      	adds	r7, #16
 801c52a:	46bd      	mov	sp, r7
 801c52c:	bd80      	pop	{r7, pc}

0801c52e <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionEC1Ev>:
 801c52e:	b480      	push	{r7}
 801c530:	b083      	sub	sp, #12
 801c532:	af00      	add	r7, sp, #0
 801c534:	6078      	str	r0, [r7, #4]
 801c536:	687b      	ldr	r3, [r7, #4]
 801c538:	4618      	mov	r0, r3
 801c53a:	370c      	adds	r7, #12
 801c53c:	46bd      	mov	sp, r7
 801c53e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c542:	4770      	bx	lr

0801c544 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c544:	b480      	push	{r7}
 801c546:	b083      	sub	sp, #12
 801c548:	af00      	add	r7, sp, #0
 801c54a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c54c:	687b      	ldr	r3, [r7, #4]
 801c54e:	4618      	mov	r0, r3
 801c550:	370c      	adds	r7, #12
 801c552:	46bd      	mov	sp, r7
 801c554:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c558:	4770      	bx	lr

0801c55a <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c55a:	b580      	push	{r7, lr}
 801c55c:	b084      	sub	sp, #16
 801c55e:	af00      	add	r7, sp, #0
 801c560:	60f8      	str	r0, [r7, #12]
 801c562:	60b9      	str	r1, [r7, #8]
 801c564:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c566:	6878      	ldr	r0, [r7, #4]
 801c568:	f7ff ffec 	bl	801c544 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c56c:	4603      	mov	r3, r0
 801c56e:	461a      	mov	r2, r3
 801c570:	68b9      	ldr	r1, [r7, #8]
 801c572:	68f8      	ldr	r0, [r7, #12]
 801c574:	f000 fcb7 	bl	801cee6 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801c578:	bf00      	nop
 801c57a:	3710      	adds	r7, #16
 801c57c:	46bd      	mov	sp, r7
 801c57e:	bd80      	pop	{r7, pc}

0801c580 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c580:	b5b0      	push	{r4, r5, r7, lr}
 801c582:	b08c      	sub	sp, #48	; 0x30
 801c584:	af00      	add	r7, sp, #0
 801c586:	60f8      	str	r0, [r7, #12]
 801c588:	60b9      	str	r1, [r7, #8]
 801c58a:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c58c:	4a39      	ldr	r2, [pc, #228]	; (801c674 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801c58e:	2101      	movs	r1, #1
 801c590:	68f8      	ldr	r0, [r7, #12]
 801c592:	f000 fcbe 	bl	801cf12 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc>
 801c596:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c598:	68fb      	ldr	r3, [r7, #12]
 801c59a:	681b      	ldr	r3, [r3, #0]
 801c59c:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c59e:	68fb      	ldr	r3, [r7, #12]
 801c5a0:	685b      	ldr	r3, [r3, #4]
 801c5a2:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c5a4:	68f8      	ldr	r0, [r7, #12]
 801c5a6:	f7e8 fa04 	bl	80049b2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 801c5aa:	4603      	mov	r3, r0
 801c5ac:	617b      	str	r3, [r7, #20]
 801c5ae:	f107 0214 	add.w	r2, r7, #20
 801c5b2:	f107 0308 	add.w	r3, r7, #8
 801c5b6:	4611      	mov	r1, r2
 801c5b8:	4618      	mov	r0, r3
 801c5ba:	f000 fcf1 	bl	801cfa0 <_ZN9__gnu_cxxmiIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801c5be:	4603      	mov	r3, r0
 801c5c0:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c5c2:	68fb      	ldr	r3, [r7, #12]
 801c5c4:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c5c6:	4618      	mov	r0, r3
 801c5c8:	f000 fcff 	bl	801cfca <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj>
 801c5cc:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c5ce:	69fb      	ldr	r3, [r7, #28]
 801c5d0:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c5d2:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801c5d4:	6a3b      	ldr	r3, [r7, #32]
 801c5d6:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801c5d8:	69fa      	ldr	r2, [r7, #28]
 801c5da:	18d5      	adds	r5, r2, r3
 801c5dc:	6878      	ldr	r0, [r7, #4]
 801c5de:	f7ff ffb1 	bl	801c544 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c5e2:	4603      	mov	r3, r0
 801c5e4:	461a      	mov	r2, r3
 801c5e6:	4629      	mov	r1, r5
 801c5e8:	4620      	mov	r0, r4
 801c5ea:	f7ff ffb6 	bl	801c55a <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801c5ee:	2300      	movs	r3, #0
 801c5f0:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c5f2:	f107 0308 	add.w	r3, r7, #8
 801c5f6:	4618      	mov	r0, r3
 801c5f8:	f7e8 fdd4 	bl	80051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c5fc:	4603      	mov	r3, r0
 801c5fe:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c600:	68fb      	ldr	r3, [r7, #12]
 801c602:	4618      	mov	r0, r3
 801c604:	f7e8 fda5 	bl	8005152 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c608:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c60a:	69fa      	ldr	r2, [r7, #28]
 801c60c:	4621      	mov	r1, r4
 801c60e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c610:	f000 fcef 	bl	801cff2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c614:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c616:	69bb      	ldr	r3, [r7, #24]
 801c618:	3304      	adds	r3, #4
 801c61a:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c61c:	f107 0308 	add.w	r3, r7, #8
 801c620:	4618      	mov	r0, r3
 801c622:	f7e8 fdbf 	bl	80051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c626:	4603      	mov	r3, r0
 801c628:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c62a:	68fb      	ldr	r3, [r7, #12]
 801c62c:	4618      	mov	r0, r3
 801c62e:	f7e8 fd90 	bl	8005152 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c632:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c634:	69ba      	ldr	r2, [r7, #24]
 801c636:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c638:	4620      	mov	r0, r4
 801c63a:	f000 fcda 	bl	801cff2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c63e:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c640:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c642:	68fb      	ldr	r3, [r7, #12]
 801c644:	689a      	ldr	r2, [r3, #8]
 801c646:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c648:	1ad3      	subs	r3, r2, r3
 801c64a:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801c64c:	461a      	mov	r2, r3
 801c64e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c650:	f7e9 faae 	bl	8005bb0 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801c654:	68fb      	ldr	r3, [r7, #12]
 801c656:	69fa      	ldr	r2, [r7, #28]
 801c658:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c65a:	68fb      	ldr	r3, [r7, #12]
 801c65c:	69ba      	ldr	r2, [r7, #24]
 801c65e:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c660:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c662:	009b      	lsls	r3, r3, #2
 801c664:	69fa      	ldr	r2, [r7, #28]
 801c666:	441a      	add	r2, r3
 801c668:	68fb      	ldr	r3, [r7, #12]
 801c66a:	609a      	str	r2, [r3, #8]
    }
 801c66c:	bf00      	nop
 801c66e:	3730      	adds	r7, #48	; 0x30
 801c670:	46bd      	mov	sp, r7
 801c672:	bdb0      	pop	{r4, r5, r7, pc}
 801c674:	08027bc0 	.word	0x08027bc0

0801c678 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c678:	b580      	push	{r7, lr}
 801c67a:	b084      	sub	sp, #16
 801c67c:	af00      	add	r7, sp, #0
 801c67e:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c680:	6878      	ldr	r0, [r7, #4]
 801c682:	f7e8 f9a6 	bl	80049d2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 801c686:	4603      	mov	r3, r0
 801c688:	60fb      	str	r3, [r7, #12]
 801c68a:	f107 030c 	add.w	r3, r7, #12
 801c68e:	2101      	movs	r1, #1
 801c690:	4618      	mov	r0, r3
 801c692:	f000 fcc2 	bl	801d01a <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801c696:	4603      	mov	r3, r0
 801c698:	60bb      	str	r3, [r7, #8]
 801c69a:	f107 0308 	add.w	r3, r7, #8
 801c69e:	4618      	mov	r0, r3
 801c6a0:	f7e8 f9d0 	bl	8004a44 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801c6a4:	4603      	mov	r3, r0
      }
 801c6a6:	4618      	mov	r0, r3
 801c6a8:	3710      	adds	r7, #16
 801c6aa:	46bd      	mov	sp, r7
 801c6ac:	bd80      	pop	{r7, pc}

0801c6ae <_ZN9__gnu_cxx13new_allocatorIP14And_expressionEC1Ev>:
 801c6ae:	b480      	push	{r7}
 801c6b0:	b083      	sub	sp, #12
 801c6b2:	af00      	add	r7, sp, #0
 801c6b4:	6078      	str	r0, [r7, #4]
 801c6b6:	687b      	ldr	r3, [r7, #4]
 801c6b8:	4618      	mov	r0, r3
 801c6ba:	370c      	adds	r7, #12
 801c6bc:	46bd      	mov	sp, r7
 801c6be:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c6c2:	4770      	bx	lr

0801c6c4 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c6c4:	b480      	push	{r7}
 801c6c6:	b083      	sub	sp, #12
 801c6c8:	af00      	add	r7, sp, #0
 801c6ca:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c6cc:	687b      	ldr	r3, [r7, #4]
 801c6ce:	4618      	mov	r0, r3
 801c6d0:	370c      	adds	r7, #12
 801c6d2:	46bd      	mov	sp, r7
 801c6d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c6d8:	4770      	bx	lr

0801c6da <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c6da:	b580      	push	{r7, lr}
 801c6dc:	b084      	sub	sp, #16
 801c6de:	af00      	add	r7, sp, #0
 801c6e0:	60f8      	str	r0, [r7, #12]
 801c6e2:	60b9      	str	r1, [r7, #8]
 801c6e4:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c6e6:	6878      	ldr	r0, [r7, #4]
 801c6e8:	f7ff ffec 	bl	801c6c4 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c6ec:	4603      	mov	r3, r0
 801c6ee:	461a      	mov	r2, r3
 801c6f0:	68b9      	ldr	r1, [r7, #8]
 801c6f2:	68f8      	ldr	r0, [r7, #12]
 801c6f4:	f000 fcaa 	bl	801d04c <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801c6f8:	bf00      	nop
 801c6fa:	3710      	adds	r7, #16
 801c6fc:	46bd      	mov	sp, r7
 801c6fe:	bd80      	pop	{r7, pc}

0801c700 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c700:	b5b0      	push	{r4, r5, r7, lr}
 801c702:	b08c      	sub	sp, #48	; 0x30
 801c704:	af00      	add	r7, sp, #0
 801c706:	60f8      	str	r0, [r7, #12]
 801c708:	60b9      	str	r1, [r7, #8]
 801c70a:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c70c:	4a39      	ldr	r2, [pc, #228]	; (801c7f4 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801c70e:	2101      	movs	r1, #1
 801c710:	68f8      	ldr	r0, [r7, #12]
 801c712:	f000 fcb1 	bl	801d078 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc>
 801c716:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c718:	68fb      	ldr	r3, [r7, #12]
 801c71a:	681b      	ldr	r3, [r3, #0]
 801c71c:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c71e:	68fb      	ldr	r3, [r7, #12]
 801c720:	685b      	ldr	r3, [r3, #4]
 801c722:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c724:	68f8      	ldr	r0, [r7, #12]
 801c726:	f7e8 f9b4 	bl	8004a92 <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 801c72a:	4603      	mov	r3, r0
 801c72c:	617b      	str	r3, [r7, #20]
 801c72e:	f107 0214 	add.w	r2, r7, #20
 801c732:	f107 0308 	add.w	r3, r7, #8
 801c736:	4611      	mov	r1, r2
 801c738:	4618      	mov	r0, r3
 801c73a:	f000 fce4 	bl	801d106 <_ZN9__gnu_cxxmiIPP14And_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801c73e:	4603      	mov	r3, r0
 801c740:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c742:	68fb      	ldr	r3, [r7, #12]
 801c744:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c746:	4618      	mov	r0, r3
 801c748:	f000 fcf2 	bl	801d130 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj>
 801c74c:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c74e:	69fb      	ldr	r3, [r7, #28]
 801c750:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c752:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801c754:	6a3b      	ldr	r3, [r7, #32]
 801c756:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801c758:	69fa      	ldr	r2, [r7, #28]
 801c75a:	18d5      	adds	r5, r2, r3
 801c75c:	6878      	ldr	r0, [r7, #4]
 801c75e:	f7ff ffb1 	bl	801c6c4 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c762:	4603      	mov	r3, r0
 801c764:	461a      	mov	r2, r3
 801c766:	4629      	mov	r1, r5
 801c768:	4620      	mov	r0, r4
 801c76a:	f7ff ffb6 	bl	801c6da <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801c76e:	2300      	movs	r3, #0
 801c770:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c772:	f107 0308 	add.w	r3, r7, #8
 801c776:	4618      	mov	r0, r3
 801c778:	f7e8 fd6d 	bl	8005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c77c:	4603      	mov	r3, r0
 801c77e:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c780:	68fb      	ldr	r3, [r7, #12]
 801c782:	4618      	mov	r0, r3
 801c784:	f7e8 fd3e 	bl	8005204 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c788:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c78a:	69fa      	ldr	r2, [r7, #28]
 801c78c:	4621      	mov	r1, r4
 801c78e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c790:	f000 fce2 	bl	801d158 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c794:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c796:	69bb      	ldr	r3, [r7, #24]
 801c798:	3304      	adds	r3, #4
 801c79a:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c79c:	f107 0308 	add.w	r3, r7, #8
 801c7a0:	4618      	mov	r0, r3
 801c7a2:	f7e8 fd58 	bl	8005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c7a6:	4603      	mov	r3, r0
 801c7a8:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c7aa:	68fb      	ldr	r3, [r7, #12]
 801c7ac:	4618      	mov	r0, r3
 801c7ae:	f7e8 fd29 	bl	8005204 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c7b2:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c7b4:	69ba      	ldr	r2, [r7, #24]
 801c7b6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c7b8:	4620      	mov	r0, r4
 801c7ba:	f000 fccd 	bl	801d158 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c7be:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c7c0:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c7c2:	68fb      	ldr	r3, [r7, #12]
 801c7c4:	689a      	ldr	r2, [r3, #8]
 801c7c6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c7c8:	1ad3      	subs	r3, r2, r3
 801c7ca:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801c7cc:	461a      	mov	r2, r3
 801c7ce:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c7d0:	f7e9 fa1a 	bl	8005c08 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801c7d4:	68fb      	ldr	r3, [r7, #12]
 801c7d6:	69fa      	ldr	r2, [r7, #28]
 801c7d8:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c7da:	68fb      	ldr	r3, [r7, #12]
 801c7dc:	69ba      	ldr	r2, [r7, #24]
 801c7de:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c7e0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c7e2:	009b      	lsls	r3, r3, #2
 801c7e4:	69fa      	ldr	r2, [r7, #28]
 801c7e6:	441a      	add	r2, r3
 801c7e8:	68fb      	ldr	r3, [r7, #12]
 801c7ea:	609a      	str	r2, [r3, #8]
    }
 801c7ec:	bf00      	nop
 801c7ee:	3730      	adds	r7, #48	; 0x30
 801c7f0:	46bd      	mov	sp, r7
 801c7f2:	bdb0      	pop	{r4, r5, r7, pc}
 801c7f4:	08027bc0 	.word	0x08027bc0

0801c7f8 <_ZNSt6vectorIP14And_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c7f8:	b580      	push	{r7, lr}
 801c7fa:	b084      	sub	sp, #16
 801c7fc:	af00      	add	r7, sp, #0
 801c7fe:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c800:	6878      	ldr	r0, [r7, #4]
 801c802:	f7e8 f956 	bl	8004ab2 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 801c806:	4603      	mov	r3, r0
 801c808:	60fb      	str	r3, [r7, #12]
 801c80a:	f107 030c 	add.w	r3, r7, #12
 801c80e:	2101      	movs	r1, #1
 801c810:	4618      	mov	r0, r3
 801c812:	f000 fcb5 	bl	801d180 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801c816:	4603      	mov	r3, r0
 801c818:	60bb      	str	r3, [r7, #8]
 801c81a:	f107 0308 	add.w	r3, r7, #8
 801c81e:	4618      	mov	r0, r3
 801c820:	f7e8 f980 	bl	8004b24 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801c824:	4603      	mov	r3, r0
      }
 801c826:	4618      	mov	r0, r3
 801c828:	3710      	adds	r7, #16
 801c82a:	46bd      	mov	sp, r7
 801c82c:	bd80      	pop	{r7, pc}

0801c82e <_ZSt9addressofIP8VariableEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801c82e:	b580      	push	{r7, lr}
 801c830:	b082      	sub	sp, #8
 801c832:	af00      	add	r7, sp, #0
 801c834:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801c836:	6878      	ldr	r0, [r7, #4]
 801c838:	f7e9 fda3 	bl	8006382 <_ZSt11__addressofIP8VariableEPT_RS2_>
 801c83c:	4603      	mov	r3, r0
 801c83e:	4618      	mov	r0, r3
 801c840:	3708      	adds	r7, #8
 801c842:	46bd      	mov	sp, r7
 801c844:	bd80      	pop	{r7, pc}

0801c846 <_ZSt9addressofIP10ExpressionEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801c846:	b580      	push	{r7, lr}
 801c848:	b082      	sub	sp, #8
 801c84a:	af00      	add	r7, sp, #0
 801c84c:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801c84e:	6878      	ldr	r0, [r7, #4]
 801c850:	f000 fcaf 	bl	801d1b2 <_ZSt11__addressofIP10ExpressionEPT_RS2_>
 801c854:	4603      	mov	r3, r0
 801c856:	4618      	mov	r0, r3
 801c858:	3708      	adds	r7, #8
 801c85a:	46bd      	mov	sp, r7
 801c85c:	bd80      	pop	{r7, pc}

0801c85e <_ZSt9addressofIP17Primal_expressionEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801c85e:	b580      	push	{r7, lr}
 801c860:	b082      	sub	sp, #8
 801c862:	af00      	add	r7, sp, #0
 801c864:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801c866:	6878      	ldr	r0, [r7, #4]
 801c868:	f000 fcae 	bl	801d1c8 <_ZSt11__addressofIP17Primal_expressionEPT_RS2_>
 801c86c:	4603      	mov	r3, r0
 801c86e:	4618      	mov	r0, r3
 801c870:	3708      	adds	r7, #8
 801c872:	46bd      	mov	sp, r7
 801c874:	bd80      	pop	{r7, pc}

0801c876 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801c876:	b590      	push	{r4, r7, lr}
 801c878:	b085      	sub	sp, #20
 801c87a:	af00      	add	r7, sp, #0
 801c87c:	60f8      	str	r0, [r7, #12]
 801c87e:	60b9      	str	r1, [r7, #8]
 801c880:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801c882:	6878      	ldr	r0, [r7, #4]
 801c884:	f7ff fb32 	bl	801beec <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801c888:	4603      	mov	r3, r0
 801c88a:	781c      	ldrb	r4, [r3, #0]
 801c88c:	68bb      	ldr	r3, [r7, #8]
 801c88e:	4619      	mov	r1, r3
 801c890:	2001      	movs	r0, #1
 801c892:	f7e4 fbe2 	bl	800105a <_ZnwjPv>
 801c896:	4603      	mov	r3, r0
 801c898:	4622      	mov	r2, r4
 801c89a:	701a      	strb	r2, [r3, #0]
 801c89c:	bf00      	nop
 801c89e:	3714      	adds	r7, #20
 801c8a0:	46bd      	mov	sp, r7
 801c8a2:	bd90      	pop	{r4, r7, pc}

0801c8a4 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801c8a4:	b480      	push	{r7}
 801c8a6:	b083      	sub	sp, #12
 801c8a8:	af00      	add	r7, sp, #0
 801c8aa:	6078      	str	r0, [r7, #4]
 801c8ac:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801c8ae:	683b      	ldr	r3, [r7, #0]
 801c8b0:	681a      	ldr	r2, [r3, #0]
 801c8b2:	687b      	ldr	r3, [r7, #4]
 801c8b4:	601a      	str	r2, [r3, #0]
 801c8b6:	687b      	ldr	r3, [r7, #4]
 801c8b8:	4618      	mov	r0, r3
 801c8ba:	370c      	adds	r7, #12
 801c8bc:	46bd      	mov	sp, r7
 801c8be:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c8c2:	4770      	bx	lr

0801c8c4 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801c8c4:	b590      	push	{r4, r7, lr}
 801c8c6:	b087      	sub	sp, #28
 801c8c8:	af00      	add	r7, sp, #0
 801c8ca:	60f8      	str	r0, [r7, #12]
 801c8cc:	60b9      	str	r1, [r7, #8]
 801c8ce:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801c8d0:	68f8      	ldr	r0, [r7, #12]
 801c8d2:	f000 fc84 	bl	801d1de <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801c8d6:	4604      	mov	r4, r0
 801c8d8:	68f8      	ldr	r0, [r7, #12]
 801c8da:	f7eb fb1a 	bl	8007f12 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801c8de:	4603      	mov	r3, r0
 801c8e0:	1ae2      	subs	r2, r4, r3
 801c8e2:	68bb      	ldr	r3, [r7, #8]
 801c8e4:	429a      	cmp	r2, r3
 801c8e6:	bf34      	ite	cc
 801c8e8:	2301      	movcc	r3, #1
 801c8ea:	2300      	movcs	r3, #0
 801c8ec:	b2db      	uxtb	r3, r3
 801c8ee:	2b00      	cmp	r3, #0
 801c8f0:	d002      	beq.n	801c8f8 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801c8f2:	6878      	ldr	r0, [r7, #4]
 801c8f4:	f006 fa76 	bl	8022de4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801c8f8:	68f8      	ldr	r0, [r7, #12]
 801c8fa:	f7eb fb0a 	bl	8007f12 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801c8fe:	4604      	mov	r4, r0
 801c900:	68f8      	ldr	r0, [r7, #12]
 801c902:	f7eb fb06 	bl	8007f12 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801c906:	4603      	mov	r3, r0
 801c908:	613b      	str	r3, [r7, #16]
 801c90a:	f107 0208 	add.w	r2, r7, #8
 801c90e:	f107 0310 	add.w	r3, r7, #16
 801c912:	4611      	mov	r1, r2
 801c914:	4618      	mov	r0, r3
 801c916:	f7f9 faee 	bl	8015ef6 <_ZSt3maxIjERKT_S2_S2_>
 801c91a:	4603      	mov	r3, r0
 801c91c:	681b      	ldr	r3, [r3, #0]
 801c91e:	4423      	add	r3, r4
 801c920:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801c922:	68f8      	ldr	r0, [r7, #12]
 801c924:	f7eb faf5 	bl	8007f12 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801c928:	4602      	mov	r2, r0
 801c92a:	697b      	ldr	r3, [r7, #20]
 801c92c:	4293      	cmp	r3, r2
 801c92e:	d306      	bcc.n	801c93e <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x7a>
 801c930:	68f8      	ldr	r0, [r7, #12]
 801c932:	f000 fc54 	bl	801d1de <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801c936:	4602      	mov	r2, r0
 801c938:	697b      	ldr	r3, [r7, #20]
 801c93a:	4293      	cmp	r3, r2
 801c93c:	d904      	bls.n	801c948 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x84>
 801c93e:	68f8      	ldr	r0, [r7, #12]
 801c940:	f000 fc4d 	bl	801d1de <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801c944:	4603      	mov	r3, r0
 801c946:	e000      	b.n	801c94a <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x86>
 801c948:	697b      	ldr	r3, [r7, #20]
      }
 801c94a:	4618      	mov	r0, r3
 801c94c:	371c      	adds	r7, #28
 801c94e:	46bd      	mov	sp, r7
 801c950:	bd90      	pop	{r4, r7, pc}

0801c952 <_ZNSt6vectorI13mult_operatorSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801c952:	b580      	push	{r7, lr}
 801c954:	b084      	sub	sp, #16
 801c956:	af00      	add	r7, sp, #0
 801c958:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 801c95a:	687a      	ldr	r2, [r7, #4]
 801c95c:	f107 030c 	add.w	r3, r7, #12
 801c960:	4611      	mov	r1, r2
 801c962:	4618      	mov	r0, r3
 801c964:	f7ff ff9e 	bl	801c8a4 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801c968:	68fb      	ldr	r3, [r7, #12]
 801c96a:	4618      	mov	r0, r3
 801c96c:	3710      	adds	r7, #16
 801c96e:	46bd      	mov	sp, r7
 801c970:	bd80      	pop	{r7, pc}

0801c972 <_ZN9__gnu_cxxmiIP13mult_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801c972:	b590      	push	{r4, r7, lr}
 801c974:	b083      	sub	sp, #12
 801c976:	af00      	add	r7, sp, #0
 801c978:	6078      	str	r0, [r7, #4]
 801c97a:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801c97c:	6878      	ldr	r0, [r7, #4]
 801c97e:	f000 f834 	bl	801c9ea <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c982:	4603      	mov	r3, r0
 801c984:	681c      	ldr	r4, [r3, #0]
 801c986:	6838      	ldr	r0, [r7, #0]
 801c988:	f000 f82f 	bl	801c9ea <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c98c:	4603      	mov	r3, r0
 801c98e:	681b      	ldr	r3, [r3, #0]
 801c990:	1ae3      	subs	r3, r4, r3
 801c992:	4618      	mov	r0, r3
 801c994:	370c      	adds	r7, #12
 801c996:	46bd      	mov	sp, r7
 801c998:	bd90      	pop	{r4, r7, pc}

0801c99a <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c99a:	b580      	push	{r7, lr}
 801c99c:	b082      	sub	sp, #8
 801c99e:	af00      	add	r7, sp, #0
 801c9a0:	6078      	str	r0, [r7, #4]
 801c9a2:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c9a4:	683b      	ldr	r3, [r7, #0]
 801c9a6:	2b00      	cmp	r3, #0
 801c9a8:	d006      	beq.n	801c9b8 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj+0x1e>
 801c9aa:	687b      	ldr	r3, [r7, #4]
 801c9ac:	6839      	ldr	r1, [r7, #0]
 801c9ae:	4618      	mov	r0, r3
 801c9b0:	f000 fc26 	bl	801d200 <_ZNSt16allocator_traitsISaI13mult_operatorEE8allocateERS1_j>
 801c9b4:	4603      	mov	r3, r0
 801c9b6:	e000      	b.n	801c9ba <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj+0x20>
 801c9b8:	2300      	movs	r3, #0
      }
 801c9ba:	4618      	mov	r0, r3
 801c9bc:	3708      	adds	r7, #8
 801c9be:	46bd      	mov	sp, r7
 801c9c0:	bd80      	pop	{r7, pc}

0801c9c2 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801c9c2:	b590      	push	{r4, r7, lr}
 801c9c4:	b089      	sub	sp, #36	; 0x24
 801c9c6:	af02      	add	r7, sp, #8
 801c9c8:	60f8      	str	r0, [r7, #12]
 801c9ca:	60b9      	str	r1, [r7, #8]
 801c9cc:	607a      	str	r2, [r7, #4]
 801c9ce:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801c9d0:	f88d 4000 	strb.w	r4, [sp]
 801c9d4:	683b      	ldr	r3, [r7, #0]
 801c9d6:	687a      	ldr	r2, [r7, #4]
 801c9d8:	68b9      	ldr	r1, [r7, #8]
 801c9da:	68f8      	ldr	r0, [r7, #12]
 801c9dc:	f000 fc1f 	bl	801d21e <_ZNSt6vectorI13mult_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 801c9e0:	4603      	mov	r3, r0
      }
 801c9e2:	4618      	mov	r0, r3
 801c9e4:	371c      	adds	r7, #28
 801c9e6:	46bd      	mov	sp, r7
 801c9e8:	bd90      	pop	{r4, r7, pc}

0801c9ea <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801c9ea:	b480      	push	{r7}
 801c9ec:	b083      	sub	sp, #12
 801c9ee:	af00      	add	r7, sp, #0
 801c9f0:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801c9f2:	687b      	ldr	r3, [r7, #4]
 801c9f4:	4618      	mov	r0, r3
 801c9f6:	370c      	adds	r7, #12
 801c9f8:	46bd      	mov	sp, r7
 801c9fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c9fe:	4770      	bx	lr

0801ca00 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801ca00:	b580      	push	{r7, lr}
 801ca02:	b084      	sub	sp, #16
 801ca04:	af00      	add	r7, sp, #0
 801ca06:	6078      	str	r0, [r7, #4]
 801ca08:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801ca0a:	687b      	ldr	r3, [r7, #4]
 801ca0c:	681a      	ldr	r2, [r3, #0]
 801ca0e:	683b      	ldr	r3, [r7, #0]
 801ca10:	425b      	negs	r3, r3
 801ca12:	4413      	add	r3, r2
 801ca14:	60fb      	str	r3, [r7, #12]
 801ca16:	f107 020c 	add.w	r2, r7, #12
 801ca1a:	f107 0308 	add.w	r3, r7, #8
 801ca1e:	4611      	mov	r1, r2
 801ca20:	4618      	mov	r0, r3
 801ca22:	f7ff ff3f 	bl	801c8a4 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801ca26:	68bb      	ldr	r3, [r7, #8]
 801ca28:	4618      	mov	r0, r3
 801ca2a:	3710      	adds	r7, #16
 801ca2c:	46bd      	mov	sp, r7
 801ca2e:	bd80      	pop	{r7, pc}

0801ca30 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 801ca30:	b480      	push	{r7}
 801ca32:	b083      	sub	sp, #12
 801ca34:	af00      	add	r7, sp, #0
 801ca36:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801ca38:	687b      	ldr	r3, [r7, #4]
 801ca3a:	681b      	ldr	r3, [r3, #0]
 801ca3c:	4618      	mov	r0, r3
 801ca3e:	370c      	adds	r7, #12
 801ca40:	46bd      	mov	sp, r7
 801ca42:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ca46:	4770      	bx	lr

0801ca48 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801ca48:	b590      	push	{r4, r7, lr}
 801ca4a:	b085      	sub	sp, #20
 801ca4c:	af00      	add	r7, sp, #0
 801ca4e:	60f8      	str	r0, [r7, #12]
 801ca50:	60b9      	str	r1, [r7, #8]
 801ca52:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801ca54:	6878      	ldr	r0, [r7, #4]
 801ca56:	f7ff fb24 	bl	801c0a2 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801ca5a:	4603      	mov	r3, r0
 801ca5c:	681c      	ldr	r4, [r3, #0]
 801ca5e:	68bb      	ldr	r3, [r7, #8]
 801ca60:	4619      	mov	r1, r3
 801ca62:	2004      	movs	r0, #4
 801ca64:	f7e4 faf9 	bl	800105a <_ZnwjPv>
 801ca68:	4603      	mov	r3, r0
 801ca6a:	601c      	str	r4, [r3, #0]
 801ca6c:	bf00      	nop
 801ca6e:	3714      	adds	r7, #20
 801ca70:	46bd      	mov	sp, r7
 801ca72:	bd90      	pop	{r4, r7, pc}

0801ca74 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801ca74:	b590      	push	{r4, r7, lr}
 801ca76:	b087      	sub	sp, #28
 801ca78:	af00      	add	r7, sp, #0
 801ca7a:	60f8      	str	r0, [r7, #12]
 801ca7c:	60b9      	str	r1, [r7, #8]
 801ca7e:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801ca80:	68f8      	ldr	r0, [r7, #12]
 801ca82:	f000 fbde 	bl	801d242 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801ca86:	4604      	mov	r4, r0
 801ca88:	68f8      	ldr	r0, [r7, #12]
 801ca8a:	f000 fbeb 	bl	801d264 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801ca8e:	4603      	mov	r3, r0
 801ca90:	1ae2      	subs	r2, r4, r3
 801ca92:	68bb      	ldr	r3, [r7, #8]
 801ca94:	429a      	cmp	r2, r3
 801ca96:	bf34      	ite	cc
 801ca98:	2301      	movcc	r3, #1
 801ca9a:	2300      	movcs	r3, #0
 801ca9c:	b2db      	uxtb	r3, r3
 801ca9e:	2b00      	cmp	r3, #0
 801caa0:	d002      	beq.n	801caa8 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801caa2:	6878      	ldr	r0, [r7, #4]
 801caa4:	f006 f99e 	bl	8022de4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801caa8:	68f8      	ldr	r0, [r7, #12]
 801caaa:	f000 fbdb 	bl	801d264 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801caae:	4604      	mov	r4, r0
 801cab0:	68f8      	ldr	r0, [r7, #12]
 801cab2:	f000 fbd7 	bl	801d264 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801cab6:	4603      	mov	r3, r0
 801cab8:	613b      	str	r3, [r7, #16]
 801caba:	f107 0208 	add.w	r2, r7, #8
 801cabe:	f107 0310 	add.w	r3, r7, #16
 801cac2:	4611      	mov	r1, r2
 801cac4:	4618      	mov	r0, r3
 801cac6:	f7f9 fa16 	bl	8015ef6 <_ZSt3maxIjERKT_S2_S2_>
 801caca:	4603      	mov	r3, r0
 801cacc:	681b      	ldr	r3, [r3, #0]
 801cace:	4423      	add	r3, r4
 801cad0:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801cad2:	68f8      	ldr	r0, [r7, #12]
 801cad4:	f000 fbc6 	bl	801d264 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801cad8:	4602      	mov	r2, r0
 801cada:	697b      	ldr	r3, [r7, #20]
 801cadc:	4293      	cmp	r3, r2
 801cade:	d306      	bcc.n	801caee <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801cae0:	68f8      	ldr	r0, [r7, #12]
 801cae2:	f000 fbae 	bl	801d242 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801cae6:	4602      	mov	r2, r0
 801cae8:	697b      	ldr	r3, [r7, #20]
 801caea:	4293      	cmp	r3, r2
 801caec:	d904      	bls.n	801caf8 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801caee:	68f8      	ldr	r0, [r7, #12]
 801caf0:	f000 fba7 	bl	801d242 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801caf4:	4603      	mov	r3, r0
 801caf6:	e000      	b.n	801cafa <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801caf8:	697b      	ldr	r3, [r7, #20]
      }
 801cafa:	4618      	mov	r0, r3
 801cafc:	371c      	adds	r7, #28
 801cafe:	46bd      	mov	sp, r7
 801cb00:	bd90      	pop	{r4, r7, pc}

0801cb02 <_ZN9__gnu_cxxmiIPP16Power_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801cb02:	b590      	push	{r4, r7, lr}
 801cb04:	b083      	sub	sp, #12
 801cb06:	af00      	add	r7, sp, #0
 801cb08:	6078      	str	r0, [r7, #4]
 801cb0a:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801cb0c:	6878      	ldr	r0, [r7, #4]
 801cb0e:	f7e8 fa5a 	bl	8004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801cb12:	4603      	mov	r3, r0
 801cb14:	681c      	ldr	r4, [r3, #0]
 801cb16:	6838      	ldr	r0, [r7, #0]
 801cb18:	f7e8 fa55 	bl	8004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801cb1c:	4603      	mov	r3, r0
 801cb1e:	681b      	ldr	r3, [r3, #0]
 801cb20:	1ae3      	subs	r3, r4, r3
 801cb22:	109b      	asrs	r3, r3, #2
 801cb24:	4618      	mov	r0, r3
 801cb26:	370c      	adds	r7, #12
 801cb28:	46bd      	mov	sp, r7
 801cb2a:	bd90      	pop	{r4, r7, pc}

0801cb2c <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801cb2c:	b580      	push	{r7, lr}
 801cb2e:	b082      	sub	sp, #8
 801cb30:	af00      	add	r7, sp, #0
 801cb32:	6078      	str	r0, [r7, #4]
 801cb34:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801cb36:	683b      	ldr	r3, [r7, #0]
 801cb38:	2b00      	cmp	r3, #0
 801cb3a:	d006      	beq.n	801cb4a <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801cb3c:	687b      	ldr	r3, [r7, #4]
 801cb3e:	6839      	ldr	r1, [r7, #0]
 801cb40:	4618      	mov	r0, r3
 801cb42:	f000 fb9f 	bl	801d284 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8allocateERS2_j>
 801cb46:	4603      	mov	r3, r0
 801cb48:	e000      	b.n	801cb4c <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj+0x20>
 801cb4a:	2300      	movs	r3, #0
      }
 801cb4c:	4618      	mov	r0, r3
 801cb4e:	3708      	adds	r7, #8
 801cb50:	46bd      	mov	sp, r7
 801cb52:	bd80      	pop	{r7, pc}

0801cb54 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801cb54:	b590      	push	{r4, r7, lr}
 801cb56:	b089      	sub	sp, #36	; 0x24
 801cb58:	af02      	add	r7, sp, #8
 801cb5a:	60f8      	str	r0, [r7, #12]
 801cb5c:	60b9      	str	r1, [r7, #8]
 801cb5e:	607a      	str	r2, [r7, #4]
 801cb60:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801cb62:	f88d 4000 	strb.w	r4, [sp]
 801cb66:	683b      	ldr	r3, [r7, #0]
 801cb68:	687a      	ldr	r2, [r7, #4]
 801cb6a:	68b9      	ldr	r1, [r7, #8]
 801cb6c:	68f8      	ldr	r0, [r7, #12]
 801cb6e:	f000 fb98 	bl	801d2a2 <_ZNSt6vectorIP16Power_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801cb72:	4603      	mov	r3, r0
      }
 801cb74:	4618      	mov	r0, r3
 801cb76:	371c      	adds	r7, #28
 801cb78:	46bd      	mov	sp, r7
 801cb7a:	bd90      	pop	{r4, r7, pc}

0801cb7c <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801cb7c:	b580      	push	{r7, lr}
 801cb7e:	b084      	sub	sp, #16
 801cb80:	af00      	add	r7, sp, #0
 801cb82:	6078      	str	r0, [r7, #4]
 801cb84:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801cb86:	687b      	ldr	r3, [r7, #4]
 801cb88:	681a      	ldr	r2, [r3, #0]
 801cb8a:	683b      	ldr	r3, [r7, #0]
 801cb8c:	009b      	lsls	r3, r3, #2
 801cb8e:	425b      	negs	r3, r3
 801cb90:	4413      	add	r3, r2
 801cb92:	60fb      	str	r3, [r7, #12]
 801cb94:	f107 020c 	add.w	r2, r7, #12
 801cb98:	f107 0308 	add.w	r3, r7, #8
 801cb9c:	4611      	mov	r1, r2
 801cb9e:	4618      	mov	r0, r3
 801cba0:	f7e8 fa01 	bl	8004fa6 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801cba4:	68bb      	ldr	r3, [r7, #8]
 801cba6:	4618      	mov	r0, r3
 801cba8:	3710      	adds	r7, #16
 801cbaa:	46bd      	mov	sp, r7
 801cbac:	bd80      	pop	{r7, pc}

0801cbae <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801cbae:	b590      	push	{r4, r7, lr}
 801cbb0:	b085      	sub	sp, #20
 801cbb2:	af00      	add	r7, sp, #0
 801cbb4:	60f8      	str	r0, [r7, #12]
 801cbb6:	60b9      	str	r1, [r7, #8]
 801cbb8:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801cbba:	6878      	ldr	r0, [r7, #4]
 801cbbc:	f7ff fb27 	bl	801c20e <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801cbc0:	4603      	mov	r3, r0
 801cbc2:	781c      	ldrb	r4, [r3, #0]
 801cbc4:	68bb      	ldr	r3, [r7, #8]
 801cbc6:	4619      	mov	r1, r3
 801cbc8:	2001      	movs	r0, #1
 801cbca:	f7e4 fa46 	bl	800105a <_ZnwjPv>
 801cbce:	4603      	mov	r3, r0
 801cbd0:	4622      	mov	r2, r4
 801cbd2:	701a      	strb	r2, [r3, #0]
 801cbd4:	bf00      	nop
 801cbd6:	3714      	adds	r7, #20
 801cbd8:	46bd      	mov	sp, r7
 801cbda:	bd90      	pop	{r4, r7, pc}

0801cbdc <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801cbdc:	b480      	push	{r7}
 801cbde:	b083      	sub	sp, #12
 801cbe0:	af00      	add	r7, sp, #0
 801cbe2:	6078      	str	r0, [r7, #4]
 801cbe4:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801cbe6:	683b      	ldr	r3, [r7, #0]
 801cbe8:	681a      	ldr	r2, [r3, #0]
 801cbea:	687b      	ldr	r3, [r7, #4]
 801cbec:	601a      	str	r2, [r3, #0]
 801cbee:	687b      	ldr	r3, [r7, #4]
 801cbf0:	4618      	mov	r0, r3
 801cbf2:	370c      	adds	r7, #12
 801cbf4:	46bd      	mov	sp, r7
 801cbf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cbfa:	4770      	bx	lr

0801cbfc <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801cbfc:	b590      	push	{r4, r7, lr}
 801cbfe:	b087      	sub	sp, #28
 801cc00:	af00      	add	r7, sp, #0
 801cc02:	60f8      	str	r0, [r7, #12]
 801cc04:	60b9      	str	r1, [r7, #8]
 801cc06:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801cc08:	68f8      	ldr	r0, [r7, #12]
 801cc0a:	f000 fb5c 	bl	801d2c6 <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801cc0e:	4604      	mov	r4, r0
 801cc10:	68f8      	ldr	r0, [r7, #12]
 801cc12:	f7eb f950 	bl	8007eb6 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801cc16:	4603      	mov	r3, r0
 801cc18:	1ae2      	subs	r2, r4, r3
 801cc1a:	68bb      	ldr	r3, [r7, #8]
 801cc1c:	429a      	cmp	r2, r3
 801cc1e:	bf34      	ite	cc
 801cc20:	2301      	movcc	r3, #1
 801cc22:	2300      	movcs	r3, #0
 801cc24:	b2db      	uxtb	r3, r3
 801cc26:	2b00      	cmp	r3, #0
 801cc28:	d002      	beq.n	801cc30 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801cc2a:	6878      	ldr	r0, [r7, #4]
 801cc2c:	f006 f8da 	bl	8022de4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801cc30:	68f8      	ldr	r0, [r7, #12]
 801cc32:	f7eb f940 	bl	8007eb6 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801cc36:	4604      	mov	r4, r0
 801cc38:	68f8      	ldr	r0, [r7, #12]
 801cc3a:	f7eb f93c 	bl	8007eb6 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801cc3e:	4603      	mov	r3, r0
 801cc40:	613b      	str	r3, [r7, #16]
 801cc42:	f107 0208 	add.w	r2, r7, #8
 801cc46:	f107 0310 	add.w	r3, r7, #16
 801cc4a:	4611      	mov	r1, r2
 801cc4c:	4618      	mov	r0, r3
 801cc4e:	f7f9 f952 	bl	8015ef6 <_ZSt3maxIjERKT_S2_S2_>
 801cc52:	4603      	mov	r3, r0
 801cc54:	681b      	ldr	r3, [r3, #0]
 801cc56:	4423      	add	r3, r4
 801cc58:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801cc5a:	68f8      	ldr	r0, [r7, #12]
 801cc5c:	f7eb f92b 	bl	8007eb6 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801cc60:	4602      	mov	r2, r0
 801cc62:	697b      	ldr	r3, [r7, #20]
 801cc64:	4293      	cmp	r3, r2
 801cc66:	d306      	bcc.n	801cc76 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x7a>
 801cc68:	68f8      	ldr	r0, [r7, #12]
 801cc6a:	f000 fb2c 	bl	801d2c6 <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801cc6e:	4602      	mov	r2, r0
 801cc70:	697b      	ldr	r3, [r7, #20]
 801cc72:	4293      	cmp	r3, r2
 801cc74:	d904      	bls.n	801cc80 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x84>
 801cc76:	68f8      	ldr	r0, [r7, #12]
 801cc78:	f000 fb25 	bl	801d2c6 <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801cc7c:	4603      	mov	r3, r0
 801cc7e:	e000      	b.n	801cc82 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x86>
 801cc80:	697b      	ldr	r3, [r7, #20]
      }
 801cc82:	4618      	mov	r0, r3
 801cc84:	371c      	adds	r7, #28
 801cc86:	46bd      	mov	sp, r7
 801cc88:	bd90      	pop	{r4, r7, pc}

0801cc8a <_ZNSt6vectorI12sum_operatorSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801cc8a:	b580      	push	{r7, lr}
 801cc8c:	b084      	sub	sp, #16
 801cc8e:	af00      	add	r7, sp, #0
 801cc90:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 801cc92:	687a      	ldr	r2, [r7, #4]
 801cc94:	f107 030c 	add.w	r3, r7, #12
 801cc98:	4611      	mov	r1, r2
 801cc9a:	4618      	mov	r0, r3
 801cc9c:	f7ff ff9e 	bl	801cbdc <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801cca0:	68fb      	ldr	r3, [r7, #12]
 801cca2:	4618      	mov	r0, r3
 801cca4:	3710      	adds	r7, #16
 801cca6:	46bd      	mov	sp, r7
 801cca8:	bd80      	pop	{r7, pc}

0801ccaa <_ZN9__gnu_cxxmiIP12sum_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801ccaa:	b590      	push	{r4, r7, lr}
 801ccac:	b083      	sub	sp, #12
 801ccae:	af00      	add	r7, sp, #0
 801ccb0:	6078      	str	r0, [r7, #4]
 801ccb2:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801ccb4:	6878      	ldr	r0, [r7, #4]
 801ccb6:	f000 f834 	bl	801cd22 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801ccba:	4603      	mov	r3, r0
 801ccbc:	681c      	ldr	r4, [r3, #0]
 801ccbe:	6838      	ldr	r0, [r7, #0]
 801ccc0:	f000 f82f 	bl	801cd22 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801ccc4:	4603      	mov	r3, r0
 801ccc6:	681b      	ldr	r3, [r3, #0]
 801ccc8:	1ae3      	subs	r3, r4, r3
 801ccca:	4618      	mov	r0, r3
 801cccc:	370c      	adds	r7, #12
 801ccce:	46bd      	mov	sp, r7
 801ccd0:	bd90      	pop	{r4, r7, pc}

0801ccd2 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801ccd2:	b580      	push	{r7, lr}
 801ccd4:	b082      	sub	sp, #8
 801ccd6:	af00      	add	r7, sp, #0
 801ccd8:	6078      	str	r0, [r7, #4]
 801ccda:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801ccdc:	683b      	ldr	r3, [r7, #0]
 801ccde:	2b00      	cmp	r3, #0
 801cce0:	d006      	beq.n	801ccf0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj+0x1e>
 801cce2:	687b      	ldr	r3, [r7, #4]
 801cce4:	6839      	ldr	r1, [r7, #0]
 801cce6:	4618      	mov	r0, r3
 801cce8:	f000 fafe 	bl	801d2e8 <_ZNSt16allocator_traitsISaI12sum_operatorEE8allocateERS1_j>
 801ccec:	4603      	mov	r3, r0
 801ccee:	e000      	b.n	801ccf2 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj+0x20>
 801ccf0:	2300      	movs	r3, #0
      }
 801ccf2:	4618      	mov	r0, r3
 801ccf4:	3708      	adds	r7, #8
 801ccf6:	46bd      	mov	sp, r7
 801ccf8:	bd80      	pop	{r7, pc}

0801ccfa <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801ccfa:	b590      	push	{r4, r7, lr}
 801ccfc:	b089      	sub	sp, #36	; 0x24
 801ccfe:	af02      	add	r7, sp, #8
 801cd00:	60f8      	str	r0, [r7, #12]
 801cd02:	60b9      	str	r1, [r7, #8]
 801cd04:	607a      	str	r2, [r7, #4]
 801cd06:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801cd08:	f88d 4000 	strb.w	r4, [sp]
 801cd0c:	683b      	ldr	r3, [r7, #0]
 801cd0e:	687a      	ldr	r2, [r7, #4]
 801cd10:	68b9      	ldr	r1, [r7, #8]
 801cd12:	68f8      	ldr	r0, [r7, #12]
 801cd14:	f000 faf7 	bl	801d306 <_ZNSt6vectorI12sum_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 801cd18:	4603      	mov	r3, r0
      }
 801cd1a:	4618      	mov	r0, r3
 801cd1c:	371c      	adds	r7, #28
 801cd1e:	46bd      	mov	sp, r7
 801cd20:	bd90      	pop	{r4, r7, pc}

0801cd22 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801cd22:	b480      	push	{r7}
 801cd24:	b083      	sub	sp, #12
 801cd26:	af00      	add	r7, sp, #0
 801cd28:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801cd2a:	687b      	ldr	r3, [r7, #4]
 801cd2c:	4618      	mov	r0, r3
 801cd2e:	370c      	adds	r7, #12
 801cd30:	46bd      	mov	sp, r7
 801cd32:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cd36:	4770      	bx	lr

0801cd38 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801cd38:	b580      	push	{r7, lr}
 801cd3a:	b084      	sub	sp, #16
 801cd3c:	af00      	add	r7, sp, #0
 801cd3e:	6078      	str	r0, [r7, #4]
 801cd40:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801cd42:	687b      	ldr	r3, [r7, #4]
 801cd44:	681a      	ldr	r2, [r3, #0]
 801cd46:	683b      	ldr	r3, [r7, #0]
 801cd48:	425b      	negs	r3, r3
 801cd4a:	4413      	add	r3, r2
 801cd4c:	60fb      	str	r3, [r7, #12]
 801cd4e:	f107 020c 	add.w	r2, r7, #12
 801cd52:	f107 0308 	add.w	r3, r7, #8
 801cd56:	4611      	mov	r1, r2
 801cd58:	4618      	mov	r0, r3
 801cd5a:	f7ff ff3f 	bl	801cbdc <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801cd5e:	68bb      	ldr	r3, [r7, #8]
 801cd60:	4618      	mov	r0, r3
 801cd62:	3710      	adds	r7, #16
 801cd64:	46bd      	mov	sp, r7
 801cd66:	bd80      	pop	{r7, pc}

0801cd68 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 801cd68:	b480      	push	{r7}
 801cd6a:	b083      	sub	sp, #12
 801cd6c:	af00      	add	r7, sp, #0
 801cd6e:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801cd70:	687b      	ldr	r3, [r7, #4]
 801cd72:	681b      	ldr	r3, [r3, #0]
 801cd74:	4618      	mov	r0, r3
 801cd76:	370c      	adds	r7, #12
 801cd78:	46bd      	mov	sp, r7
 801cd7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cd7e:	4770      	bx	lr

0801cd80 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801cd80:	b590      	push	{r4, r7, lr}
 801cd82:	b085      	sub	sp, #20
 801cd84:	af00      	add	r7, sp, #0
 801cd86:	60f8      	str	r0, [r7, #12]
 801cd88:	60b9      	str	r1, [r7, #8]
 801cd8a:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801cd8c:	6878      	ldr	r0, [r7, #4]
 801cd8e:	f7ff fb18 	bl	801c3c2 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801cd92:	4603      	mov	r3, r0
 801cd94:	681c      	ldr	r4, [r3, #0]
 801cd96:	68bb      	ldr	r3, [r7, #8]
 801cd98:	4619      	mov	r1, r3
 801cd9a:	2004      	movs	r0, #4
 801cd9c:	f7e4 f95d 	bl	800105a <_ZnwjPv>
 801cda0:	4603      	mov	r3, r0
 801cda2:	601c      	str	r4, [r3, #0]
 801cda4:	bf00      	nop
 801cda6:	3714      	adds	r7, #20
 801cda8:	46bd      	mov	sp, r7
 801cdaa:	bd90      	pop	{r4, r7, pc}

0801cdac <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801cdac:	b590      	push	{r4, r7, lr}
 801cdae:	b087      	sub	sp, #28
 801cdb0:	af00      	add	r7, sp, #0
 801cdb2:	60f8      	str	r0, [r7, #12]
 801cdb4:	60b9      	str	r1, [r7, #8]
 801cdb6:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801cdb8:	68f8      	ldr	r0, [r7, #12]
 801cdba:	f000 fab6 	bl	801d32a <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801cdbe:	4604      	mov	r4, r0
 801cdc0:	68f8      	ldr	r0, [r7, #12]
 801cdc2:	f000 fac3 	bl	801d34c <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801cdc6:	4603      	mov	r3, r0
 801cdc8:	1ae2      	subs	r2, r4, r3
 801cdca:	68bb      	ldr	r3, [r7, #8]
 801cdcc:	429a      	cmp	r2, r3
 801cdce:	bf34      	ite	cc
 801cdd0:	2301      	movcc	r3, #1
 801cdd2:	2300      	movcs	r3, #0
 801cdd4:	b2db      	uxtb	r3, r3
 801cdd6:	2b00      	cmp	r3, #0
 801cdd8:	d002      	beq.n	801cde0 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801cdda:	6878      	ldr	r0, [r7, #4]
 801cddc:	f006 f802 	bl	8022de4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801cde0:	68f8      	ldr	r0, [r7, #12]
 801cde2:	f000 fab3 	bl	801d34c <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801cde6:	4604      	mov	r4, r0
 801cde8:	68f8      	ldr	r0, [r7, #12]
 801cdea:	f000 faaf 	bl	801d34c <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801cdee:	4603      	mov	r3, r0
 801cdf0:	613b      	str	r3, [r7, #16]
 801cdf2:	f107 0208 	add.w	r2, r7, #8
 801cdf6:	f107 0310 	add.w	r3, r7, #16
 801cdfa:	4611      	mov	r1, r2
 801cdfc:	4618      	mov	r0, r3
 801cdfe:	f7f9 f87a 	bl	8015ef6 <_ZSt3maxIjERKT_S2_S2_>
 801ce02:	4603      	mov	r3, r0
 801ce04:	681b      	ldr	r3, [r3, #0]
 801ce06:	4423      	add	r3, r4
 801ce08:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801ce0a:	68f8      	ldr	r0, [r7, #12]
 801ce0c:	f000 fa9e 	bl	801d34c <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801ce10:	4602      	mov	r2, r0
 801ce12:	697b      	ldr	r3, [r7, #20]
 801ce14:	4293      	cmp	r3, r2
 801ce16:	d306      	bcc.n	801ce26 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801ce18:	68f8      	ldr	r0, [r7, #12]
 801ce1a:	f000 fa86 	bl	801d32a <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801ce1e:	4602      	mov	r2, r0
 801ce20:	697b      	ldr	r3, [r7, #20]
 801ce22:	4293      	cmp	r3, r2
 801ce24:	d904      	bls.n	801ce30 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801ce26:	68f8      	ldr	r0, [r7, #12]
 801ce28:	f000 fa7f 	bl	801d32a <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801ce2c:	4603      	mov	r3, r0
 801ce2e:	e000      	b.n	801ce32 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801ce30:	697b      	ldr	r3, [r7, #20]
      }
 801ce32:	4618      	mov	r0, r3
 801ce34:	371c      	adds	r7, #28
 801ce36:	46bd      	mov	sp, r7
 801ce38:	bd90      	pop	{r4, r7, pc}

0801ce3a <_ZN9__gnu_cxxmiIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801ce3a:	b590      	push	{r4, r7, lr}
 801ce3c:	b083      	sub	sp, #12
 801ce3e:	af00      	add	r7, sp, #0
 801ce40:	6078      	str	r0, [r7, #4]
 801ce42:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801ce44:	6878      	ldr	r0, [r7, #4]
 801ce46:	f7e8 f954 	bl	80050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801ce4a:	4603      	mov	r3, r0
 801ce4c:	681c      	ldr	r4, [r3, #0]
 801ce4e:	6838      	ldr	r0, [r7, #0]
 801ce50:	f7e8 f94f 	bl	80050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801ce54:	4603      	mov	r3, r0
 801ce56:	681b      	ldr	r3, [r3, #0]
 801ce58:	1ae3      	subs	r3, r4, r3
 801ce5a:	109b      	asrs	r3, r3, #2
 801ce5c:	4618      	mov	r0, r3
 801ce5e:	370c      	adds	r7, #12
 801ce60:	46bd      	mov	sp, r7
 801ce62:	bd90      	pop	{r4, r7, pc}

0801ce64 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801ce64:	b580      	push	{r7, lr}
 801ce66:	b082      	sub	sp, #8
 801ce68:	af00      	add	r7, sp, #0
 801ce6a:	6078      	str	r0, [r7, #4]
 801ce6c:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801ce6e:	683b      	ldr	r3, [r7, #0]
 801ce70:	2b00      	cmp	r3, #0
 801ce72:	d006      	beq.n	801ce82 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801ce74:	687b      	ldr	r3, [r7, #4]
 801ce76:	6839      	ldr	r1, [r7, #0]
 801ce78:	4618      	mov	r0, r3
 801ce7a:	f000 fa77 	bl	801d36c <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8allocateERS2_j>
 801ce7e:	4603      	mov	r3, r0
 801ce80:	e000      	b.n	801ce84 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj+0x20>
 801ce82:	2300      	movs	r3, #0
      }
 801ce84:	4618      	mov	r0, r3
 801ce86:	3708      	adds	r7, #8
 801ce88:	46bd      	mov	sp, r7
 801ce8a:	bd80      	pop	{r7, pc}

0801ce8c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801ce8c:	b590      	push	{r4, r7, lr}
 801ce8e:	b089      	sub	sp, #36	; 0x24
 801ce90:	af02      	add	r7, sp, #8
 801ce92:	60f8      	str	r0, [r7, #12]
 801ce94:	60b9      	str	r1, [r7, #8]
 801ce96:	607a      	str	r2, [r7, #4]
 801ce98:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801ce9a:	f88d 4000 	strb.w	r4, [sp]
 801ce9e:	683b      	ldr	r3, [r7, #0]
 801cea0:	687a      	ldr	r2, [r7, #4]
 801cea2:	68b9      	ldr	r1, [r7, #8]
 801cea4:	68f8      	ldr	r0, [r7, #12]
 801cea6:	f000 fa70 	bl	801d38a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801ceaa:	4603      	mov	r3, r0
      }
 801ceac:	4618      	mov	r0, r3
 801ceae:	371c      	adds	r7, #28
 801ceb0:	46bd      	mov	sp, r7
 801ceb2:	bd90      	pop	{r4, r7, pc}

0801ceb4 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801ceb4:	b580      	push	{r7, lr}
 801ceb6:	b084      	sub	sp, #16
 801ceb8:	af00      	add	r7, sp, #0
 801ceba:	6078      	str	r0, [r7, #4]
 801cebc:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801cebe:	687b      	ldr	r3, [r7, #4]
 801cec0:	681a      	ldr	r2, [r3, #0]
 801cec2:	683b      	ldr	r3, [r7, #0]
 801cec4:	009b      	lsls	r3, r3, #2
 801cec6:	425b      	negs	r3, r3
 801cec8:	4413      	add	r3, r2
 801ceca:	60fb      	str	r3, [r7, #12]
 801cecc:	f107 020c 	add.w	r2, r7, #12
 801ced0:	f107 0308 	add.w	r3, r7, #8
 801ced4:	4611      	mov	r1, r2
 801ced6:	4618      	mov	r0, r3
 801ced8:	f7e8 f8fb 	bl	80050d2 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801cedc:	68bb      	ldr	r3, [r7, #8]
 801cede:	4618      	mov	r0, r3
 801cee0:	3710      	adds	r7, #16
 801cee2:	46bd      	mov	sp, r7
 801cee4:	bd80      	pop	{r7, pc}

0801cee6 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801cee6:	b590      	push	{r4, r7, lr}
 801cee8:	b085      	sub	sp, #20
 801ceea:	af00      	add	r7, sp, #0
 801ceec:	60f8      	str	r0, [r7, #12]
 801ceee:	60b9      	str	r1, [r7, #8]
 801cef0:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801cef2:	6878      	ldr	r0, [r7, #4]
 801cef4:	f7ff fb26 	bl	801c544 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801cef8:	4603      	mov	r3, r0
 801cefa:	681c      	ldr	r4, [r3, #0]
 801cefc:	68bb      	ldr	r3, [r7, #8]
 801cefe:	4619      	mov	r1, r3
 801cf00:	2004      	movs	r0, #4
 801cf02:	f7e4 f8aa 	bl	800105a <_ZnwjPv>
 801cf06:	4603      	mov	r3, r0
 801cf08:	601c      	str	r4, [r3, #0]
 801cf0a:	bf00      	nop
 801cf0c:	3714      	adds	r7, #20
 801cf0e:	46bd      	mov	sp, r7
 801cf10:	bd90      	pop	{r4, r7, pc}

0801cf12 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801cf12:	b590      	push	{r4, r7, lr}
 801cf14:	b087      	sub	sp, #28
 801cf16:	af00      	add	r7, sp, #0
 801cf18:	60f8      	str	r0, [r7, #12]
 801cf1a:	60b9      	str	r1, [r7, #8]
 801cf1c:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801cf1e:	68f8      	ldr	r0, [r7, #12]
 801cf20:	f000 fa45 	bl	801d3ae <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801cf24:	4604      	mov	r4, r0
 801cf26:	68f8      	ldr	r0, [r7, #12]
 801cf28:	f000 fa52 	bl	801d3d0 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801cf2c:	4603      	mov	r3, r0
 801cf2e:	1ae2      	subs	r2, r4, r3
 801cf30:	68bb      	ldr	r3, [r7, #8]
 801cf32:	429a      	cmp	r2, r3
 801cf34:	bf34      	ite	cc
 801cf36:	2301      	movcc	r3, #1
 801cf38:	2300      	movcs	r3, #0
 801cf3a:	b2db      	uxtb	r3, r3
 801cf3c:	2b00      	cmp	r3, #0
 801cf3e:	d002      	beq.n	801cf46 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801cf40:	6878      	ldr	r0, [r7, #4]
 801cf42:	f005 ff4f 	bl	8022de4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801cf46:	68f8      	ldr	r0, [r7, #12]
 801cf48:	f000 fa42 	bl	801d3d0 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801cf4c:	4604      	mov	r4, r0
 801cf4e:	68f8      	ldr	r0, [r7, #12]
 801cf50:	f000 fa3e 	bl	801d3d0 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801cf54:	4603      	mov	r3, r0
 801cf56:	613b      	str	r3, [r7, #16]
 801cf58:	f107 0208 	add.w	r2, r7, #8
 801cf5c:	f107 0310 	add.w	r3, r7, #16
 801cf60:	4611      	mov	r1, r2
 801cf62:	4618      	mov	r0, r3
 801cf64:	f7f8 ffc7 	bl	8015ef6 <_ZSt3maxIjERKT_S2_S2_>
 801cf68:	4603      	mov	r3, r0
 801cf6a:	681b      	ldr	r3, [r3, #0]
 801cf6c:	4423      	add	r3, r4
 801cf6e:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801cf70:	68f8      	ldr	r0, [r7, #12]
 801cf72:	f000 fa2d 	bl	801d3d0 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801cf76:	4602      	mov	r2, r0
 801cf78:	697b      	ldr	r3, [r7, #20]
 801cf7a:	4293      	cmp	r3, r2
 801cf7c:	d306      	bcc.n	801cf8c <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801cf7e:	68f8      	ldr	r0, [r7, #12]
 801cf80:	f000 fa15 	bl	801d3ae <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801cf84:	4602      	mov	r2, r0
 801cf86:	697b      	ldr	r3, [r7, #20]
 801cf88:	4293      	cmp	r3, r2
 801cf8a:	d904      	bls.n	801cf96 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801cf8c:	68f8      	ldr	r0, [r7, #12]
 801cf8e:	f000 fa0e 	bl	801d3ae <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801cf92:	4603      	mov	r3, r0
 801cf94:	e000      	b.n	801cf98 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801cf96:	697b      	ldr	r3, [r7, #20]
      }
 801cf98:	4618      	mov	r0, r3
 801cf9a:	371c      	adds	r7, #28
 801cf9c:	46bd      	mov	sp, r7
 801cf9e:	bd90      	pop	{r4, r7, pc}

0801cfa0 <_ZN9__gnu_cxxmiIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801cfa0:	b590      	push	{r4, r7, lr}
 801cfa2:	b083      	sub	sp, #12
 801cfa4:	af00      	add	r7, sp, #0
 801cfa6:	6078      	str	r0, [r7, #4]
 801cfa8:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801cfaa:	6878      	ldr	r0, [r7, #4]
 801cfac:	f7e8 f8fa 	bl	80051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801cfb0:	4603      	mov	r3, r0
 801cfb2:	681c      	ldr	r4, [r3, #0]
 801cfb4:	6838      	ldr	r0, [r7, #0]
 801cfb6:	f7e8 f8f5 	bl	80051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801cfba:	4603      	mov	r3, r0
 801cfbc:	681b      	ldr	r3, [r3, #0]
 801cfbe:	1ae3      	subs	r3, r4, r3
 801cfc0:	109b      	asrs	r3, r3, #2
 801cfc2:	4618      	mov	r0, r3
 801cfc4:	370c      	adds	r7, #12
 801cfc6:	46bd      	mov	sp, r7
 801cfc8:	bd90      	pop	{r4, r7, pc}

0801cfca <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801cfca:	b580      	push	{r7, lr}
 801cfcc:	b082      	sub	sp, #8
 801cfce:	af00      	add	r7, sp, #0
 801cfd0:	6078      	str	r0, [r7, #4]
 801cfd2:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801cfd4:	683b      	ldr	r3, [r7, #0]
 801cfd6:	2b00      	cmp	r3, #0
 801cfd8:	d006      	beq.n	801cfe8 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801cfda:	687b      	ldr	r3, [r7, #4]
 801cfdc:	6839      	ldr	r1, [r7, #0]
 801cfde:	4618      	mov	r0, r3
 801cfe0:	f000 fa06 	bl	801d3f0 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8allocateERS2_j>
 801cfe4:	4603      	mov	r3, r0
 801cfe6:	e000      	b.n	801cfea <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj+0x20>
 801cfe8:	2300      	movs	r3, #0
      }
 801cfea:	4618      	mov	r0, r3
 801cfec:	3708      	adds	r7, #8
 801cfee:	46bd      	mov	sp, r7
 801cff0:	bd80      	pop	{r7, pc}

0801cff2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801cff2:	b590      	push	{r4, r7, lr}
 801cff4:	b089      	sub	sp, #36	; 0x24
 801cff6:	af02      	add	r7, sp, #8
 801cff8:	60f8      	str	r0, [r7, #12]
 801cffa:	60b9      	str	r1, [r7, #8]
 801cffc:	607a      	str	r2, [r7, #4]
 801cffe:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801d000:	f88d 4000 	strb.w	r4, [sp]
 801d004:	683b      	ldr	r3, [r7, #0]
 801d006:	687a      	ldr	r2, [r7, #4]
 801d008:	68b9      	ldr	r1, [r7, #8]
 801d00a:	68f8      	ldr	r0, [r7, #12]
 801d00c:	f000 f9ff 	bl	801d40e <_ZNSt6vectorIP18Compare_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801d010:	4603      	mov	r3, r0
      }
 801d012:	4618      	mov	r0, r3
 801d014:	371c      	adds	r7, #28
 801d016:	46bd      	mov	sp, r7
 801d018:	bd90      	pop	{r4, r7, pc}

0801d01a <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801d01a:	b580      	push	{r7, lr}
 801d01c:	b084      	sub	sp, #16
 801d01e:	af00      	add	r7, sp, #0
 801d020:	6078      	str	r0, [r7, #4]
 801d022:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801d024:	687b      	ldr	r3, [r7, #4]
 801d026:	681a      	ldr	r2, [r3, #0]
 801d028:	683b      	ldr	r3, [r7, #0]
 801d02a:	009b      	lsls	r3, r3, #2
 801d02c:	425b      	negs	r3, r3
 801d02e:	4413      	add	r3, r2
 801d030:	60fb      	str	r3, [r7, #12]
 801d032:	f107 020c 	add.w	r2, r7, #12
 801d036:	f107 0308 	add.w	r3, r7, #8
 801d03a:	4611      	mov	r1, r2
 801d03c:	4618      	mov	r0, r3
 801d03e:	f7e8 f8a1 	bl	8005184 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801d042:	68bb      	ldr	r3, [r7, #8]
 801d044:	4618      	mov	r0, r3
 801d046:	3710      	adds	r7, #16
 801d048:	46bd      	mov	sp, r7
 801d04a:	bd80      	pop	{r7, pc}

0801d04c <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801d04c:	b590      	push	{r4, r7, lr}
 801d04e:	b085      	sub	sp, #20
 801d050:	af00      	add	r7, sp, #0
 801d052:	60f8      	str	r0, [r7, #12]
 801d054:	60b9      	str	r1, [r7, #8]
 801d056:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801d058:	6878      	ldr	r0, [r7, #4]
 801d05a:	f7ff fb33 	bl	801c6c4 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801d05e:	4603      	mov	r3, r0
 801d060:	681c      	ldr	r4, [r3, #0]
 801d062:	68bb      	ldr	r3, [r7, #8]
 801d064:	4619      	mov	r1, r3
 801d066:	2004      	movs	r0, #4
 801d068:	f7e3 fff7 	bl	800105a <_ZnwjPv>
 801d06c:	4603      	mov	r3, r0
 801d06e:	601c      	str	r4, [r3, #0]
 801d070:	bf00      	nop
 801d072:	3714      	adds	r7, #20
 801d074:	46bd      	mov	sp, r7
 801d076:	bd90      	pop	{r4, r7, pc}

0801d078 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801d078:	b590      	push	{r4, r7, lr}
 801d07a:	b087      	sub	sp, #28
 801d07c:	af00      	add	r7, sp, #0
 801d07e:	60f8      	str	r0, [r7, #12]
 801d080:	60b9      	str	r1, [r7, #8]
 801d082:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801d084:	68f8      	ldr	r0, [r7, #12]
 801d086:	f000 f9d4 	bl	801d432 <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801d08a:	4604      	mov	r4, r0
 801d08c:	68f8      	ldr	r0, [r7, #12]
 801d08e:	f000 f9e1 	bl	801d454 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801d092:	4603      	mov	r3, r0
 801d094:	1ae2      	subs	r2, r4, r3
 801d096:	68bb      	ldr	r3, [r7, #8]
 801d098:	429a      	cmp	r2, r3
 801d09a:	bf34      	ite	cc
 801d09c:	2301      	movcc	r3, #1
 801d09e:	2300      	movcs	r3, #0
 801d0a0:	b2db      	uxtb	r3, r3
 801d0a2:	2b00      	cmp	r3, #0
 801d0a4:	d002      	beq.n	801d0ac <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801d0a6:	6878      	ldr	r0, [r7, #4]
 801d0a8:	f005 fe9c 	bl	8022de4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801d0ac:	68f8      	ldr	r0, [r7, #12]
 801d0ae:	f000 f9d1 	bl	801d454 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801d0b2:	4604      	mov	r4, r0
 801d0b4:	68f8      	ldr	r0, [r7, #12]
 801d0b6:	f000 f9cd 	bl	801d454 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801d0ba:	4603      	mov	r3, r0
 801d0bc:	613b      	str	r3, [r7, #16]
 801d0be:	f107 0208 	add.w	r2, r7, #8
 801d0c2:	f107 0310 	add.w	r3, r7, #16
 801d0c6:	4611      	mov	r1, r2
 801d0c8:	4618      	mov	r0, r3
 801d0ca:	f7f8 ff14 	bl	8015ef6 <_ZSt3maxIjERKT_S2_S2_>
 801d0ce:	4603      	mov	r3, r0
 801d0d0:	681b      	ldr	r3, [r3, #0]
 801d0d2:	4423      	add	r3, r4
 801d0d4:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801d0d6:	68f8      	ldr	r0, [r7, #12]
 801d0d8:	f000 f9bc 	bl	801d454 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801d0dc:	4602      	mov	r2, r0
 801d0de:	697b      	ldr	r3, [r7, #20]
 801d0e0:	4293      	cmp	r3, r2
 801d0e2:	d306      	bcc.n	801d0f2 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801d0e4:	68f8      	ldr	r0, [r7, #12]
 801d0e6:	f000 f9a4 	bl	801d432 <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801d0ea:	4602      	mov	r2, r0
 801d0ec:	697b      	ldr	r3, [r7, #20]
 801d0ee:	4293      	cmp	r3, r2
 801d0f0:	d904      	bls.n	801d0fc <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801d0f2:	68f8      	ldr	r0, [r7, #12]
 801d0f4:	f000 f99d 	bl	801d432 <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801d0f8:	4603      	mov	r3, r0
 801d0fa:	e000      	b.n	801d0fe <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801d0fc:	697b      	ldr	r3, [r7, #20]
      }
 801d0fe:	4618      	mov	r0, r3
 801d100:	371c      	adds	r7, #28
 801d102:	46bd      	mov	sp, r7
 801d104:	bd90      	pop	{r4, r7, pc}

0801d106 <_ZN9__gnu_cxxmiIPP14And_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801d106:	b590      	push	{r4, r7, lr}
 801d108:	b083      	sub	sp, #12
 801d10a:	af00      	add	r7, sp, #0
 801d10c:	6078      	str	r0, [r7, #4]
 801d10e:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801d110:	6878      	ldr	r0, [r7, #4]
 801d112:	f7e8 f8a0 	bl	8005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801d116:	4603      	mov	r3, r0
 801d118:	681c      	ldr	r4, [r3, #0]
 801d11a:	6838      	ldr	r0, [r7, #0]
 801d11c:	f7e8 f89b 	bl	8005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801d120:	4603      	mov	r3, r0
 801d122:	681b      	ldr	r3, [r3, #0]
 801d124:	1ae3      	subs	r3, r4, r3
 801d126:	109b      	asrs	r3, r3, #2
 801d128:	4618      	mov	r0, r3
 801d12a:	370c      	adds	r7, #12
 801d12c:	46bd      	mov	sp, r7
 801d12e:	bd90      	pop	{r4, r7, pc}

0801d130 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801d130:	b580      	push	{r7, lr}
 801d132:	b082      	sub	sp, #8
 801d134:	af00      	add	r7, sp, #0
 801d136:	6078      	str	r0, [r7, #4]
 801d138:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801d13a:	683b      	ldr	r3, [r7, #0]
 801d13c:	2b00      	cmp	r3, #0
 801d13e:	d006      	beq.n	801d14e <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801d140:	687b      	ldr	r3, [r7, #4]
 801d142:	6839      	ldr	r1, [r7, #0]
 801d144:	4618      	mov	r0, r3
 801d146:	f000 f995 	bl	801d474 <_ZNSt16allocator_traitsISaIP14And_expressionEE8allocateERS2_j>
 801d14a:	4603      	mov	r3, r0
 801d14c:	e000      	b.n	801d150 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj+0x20>
 801d14e:	2300      	movs	r3, #0
      }
 801d150:	4618      	mov	r0, r3
 801d152:	3708      	adds	r7, #8
 801d154:	46bd      	mov	sp, r7
 801d156:	bd80      	pop	{r7, pc}

0801d158 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801d158:	b590      	push	{r4, r7, lr}
 801d15a:	b089      	sub	sp, #36	; 0x24
 801d15c:	af02      	add	r7, sp, #8
 801d15e:	60f8      	str	r0, [r7, #12]
 801d160:	60b9      	str	r1, [r7, #8]
 801d162:	607a      	str	r2, [r7, #4]
 801d164:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801d166:	f88d 4000 	strb.w	r4, [sp]
 801d16a:	683b      	ldr	r3, [r7, #0]
 801d16c:	687a      	ldr	r2, [r7, #4]
 801d16e:	68b9      	ldr	r1, [r7, #8]
 801d170:	68f8      	ldr	r0, [r7, #12]
 801d172:	f000 f98e 	bl	801d492 <_ZNSt6vectorIP14And_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801d176:	4603      	mov	r3, r0
      }
 801d178:	4618      	mov	r0, r3
 801d17a:	371c      	adds	r7, #28
 801d17c:	46bd      	mov	sp, r7
 801d17e:	bd90      	pop	{r4, r7, pc}

0801d180 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801d180:	b580      	push	{r7, lr}
 801d182:	b084      	sub	sp, #16
 801d184:	af00      	add	r7, sp, #0
 801d186:	6078      	str	r0, [r7, #4]
 801d188:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801d18a:	687b      	ldr	r3, [r7, #4]
 801d18c:	681a      	ldr	r2, [r3, #0]
 801d18e:	683b      	ldr	r3, [r7, #0]
 801d190:	009b      	lsls	r3, r3, #2
 801d192:	425b      	negs	r3, r3
 801d194:	4413      	add	r3, r2
 801d196:	60fb      	str	r3, [r7, #12]
 801d198:	f107 020c 	add.w	r2, r7, #12
 801d19c:	f107 0308 	add.w	r3, r7, #8
 801d1a0:	4611      	mov	r1, r2
 801d1a2:	4618      	mov	r0, r3
 801d1a4:	f7e8 f847 	bl	8005236 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801d1a8:	68bb      	ldr	r3, [r7, #8]
 801d1aa:	4618      	mov	r0, r3
 801d1ac:	3710      	adds	r7, #16
 801d1ae:	46bd      	mov	sp, r7
 801d1b0:	bd80      	pop	{r7, pc}

0801d1b2 <_ZSt11__addressofIP10ExpressionEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801d1b2:	b480      	push	{r7}
 801d1b4:	b083      	sub	sp, #12
 801d1b6:	af00      	add	r7, sp, #0
 801d1b8:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 801d1ba:	687b      	ldr	r3, [r7, #4]
 801d1bc:	4618      	mov	r0, r3
 801d1be:	370c      	adds	r7, #12
 801d1c0:	46bd      	mov	sp, r7
 801d1c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d1c6:	4770      	bx	lr

0801d1c8 <_ZSt11__addressofIP17Primal_expressionEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801d1c8:	b480      	push	{r7}
 801d1ca:	b083      	sub	sp, #12
 801d1cc:	af00      	add	r7, sp, #0
 801d1ce:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 801d1d0:	687b      	ldr	r3, [r7, #4]
 801d1d2:	4618      	mov	r0, r3
 801d1d4:	370c      	adds	r7, #12
 801d1d6:	46bd      	mov	sp, r7
 801d1d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d1dc:	4770      	bx	lr

0801d1de <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d1de:	b580      	push	{r7, lr}
 801d1e0:	b082      	sub	sp, #8
 801d1e2:	af00      	add	r7, sp, #0
 801d1e4:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d1e6:	687b      	ldr	r3, [r7, #4]
 801d1e8:	4618      	mov	r0, r3
 801d1ea:	f000 f97e 	bl	801d4ea <_ZNKSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801d1ee:	4603      	mov	r3, r0
 801d1f0:	4618      	mov	r0, r3
 801d1f2:	f000 f960 	bl	801d4b6 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_max_sizeERKS1_>
 801d1f6:	4603      	mov	r3, r0
 801d1f8:	4618      	mov	r0, r3
 801d1fa:	3708      	adds	r7, #8
 801d1fc:	46bd      	mov	sp, r7
 801d1fe:	bd80      	pop	{r7, pc}

0801d200 <_ZNSt16allocator_traitsISaI13mult_operatorEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 801d200:	b580      	push	{r7, lr}
 801d202:	b082      	sub	sp, #8
 801d204:	af00      	add	r7, sp, #0
 801d206:	6078      	str	r0, [r7, #4]
 801d208:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d20a:	2200      	movs	r2, #0
 801d20c:	6839      	ldr	r1, [r7, #0]
 801d20e:	6878      	ldr	r0, [r7, #4]
 801d210:	f000 f976 	bl	801d500 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv>
 801d214:	4603      	mov	r3, r0
 801d216:	4618      	mov	r0, r3
 801d218:	3708      	adds	r7, #8
 801d21a:	46bd      	mov	sp, r7
 801d21c:	bd80      	pop	{r7, pc}

0801d21e <_ZNSt6vectorI13mult_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d21e:	b580      	push	{r7, lr}
 801d220:	b084      	sub	sp, #16
 801d222:	af00      	add	r7, sp, #0
 801d224:	60f8      	str	r0, [r7, #12]
 801d226:	60b9      	str	r1, [r7, #8]
 801d228:	607a      	str	r2, [r7, #4]
 801d22a:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d22c:	683b      	ldr	r3, [r7, #0]
 801d22e:	687a      	ldr	r2, [r7, #4]
 801d230:	68b9      	ldr	r1, [r7, #8]
 801d232:	68f8      	ldr	r0, [r7, #12]
 801d234:	f000 f981 	bl	801d53a <_ZSt12__relocate_aIP13mult_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>
 801d238:	4603      	mov	r3, r0
      }
 801d23a:	4618      	mov	r0, r3
 801d23c:	3710      	adds	r7, #16
 801d23e:	46bd      	mov	sp, r7
 801d240:	bd80      	pop	{r7, pc}

0801d242 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d242:	b580      	push	{r7, lr}
 801d244:	b082      	sub	sp, #8
 801d246:	af00      	add	r7, sp, #0
 801d248:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d24a:	687b      	ldr	r3, [r7, #4]
 801d24c:	4618      	mov	r0, r3
 801d24e:	f000 f9ab 	bl	801d5a8 <_ZNKSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801d252:	4603      	mov	r3, r0
 801d254:	4618      	mov	r0, r3
 801d256:	f000 f98d 	bl	801d574 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801d25a:	4603      	mov	r3, r0
 801d25c:	4618      	mov	r0, r3
 801d25e:	3708      	adds	r7, #8
 801d260:	46bd      	mov	sp, r7
 801d262:	bd80      	pop	{r7, pc}

0801d264 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801d264:	b480      	push	{r7}
 801d266:	b083      	sub	sp, #12
 801d268:	af00      	add	r7, sp, #0
 801d26a:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801d26c:	687b      	ldr	r3, [r7, #4]
 801d26e:	685a      	ldr	r2, [r3, #4]
 801d270:	687b      	ldr	r3, [r7, #4]
 801d272:	681b      	ldr	r3, [r3, #0]
 801d274:	1ad3      	subs	r3, r2, r3
 801d276:	109b      	asrs	r3, r3, #2
 801d278:	4618      	mov	r0, r3
 801d27a:	370c      	adds	r7, #12
 801d27c:	46bd      	mov	sp, r7
 801d27e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d282:	4770      	bx	lr

0801d284 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801d284:	b580      	push	{r7, lr}
 801d286:	b082      	sub	sp, #8
 801d288:	af00      	add	r7, sp, #0
 801d28a:	6078      	str	r0, [r7, #4]
 801d28c:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d28e:	2200      	movs	r2, #0
 801d290:	6839      	ldr	r1, [r7, #0]
 801d292:	6878      	ldr	r0, [r7, #4]
 801d294:	f000 f993 	bl	801d5be <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv>
 801d298:	4603      	mov	r3, r0
 801d29a:	4618      	mov	r0, r3
 801d29c:	3708      	adds	r7, #8
 801d29e:	46bd      	mov	sp, r7
 801d2a0:	bd80      	pop	{r7, pc}

0801d2a2 <_ZNSt6vectorIP16Power_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d2a2:	b580      	push	{r7, lr}
 801d2a4:	b084      	sub	sp, #16
 801d2a6:	af00      	add	r7, sp, #0
 801d2a8:	60f8      	str	r0, [r7, #12]
 801d2aa:	60b9      	str	r1, [r7, #8]
 801d2ac:	607a      	str	r2, [r7, #4]
 801d2ae:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d2b0:	683b      	ldr	r3, [r7, #0]
 801d2b2:	687a      	ldr	r2, [r7, #4]
 801d2b4:	68b9      	ldr	r1, [r7, #8]
 801d2b6:	68f8      	ldr	r0, [r7, #12]
 801d2b8:	f000 f9a0 	bl	801d5fc <_ZSt12__relocate_aIPP16Power_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801d2bc:	4603      	mov	r3, r0
      }
 801d2be:	4618      	mov	r0, r3
 801d2c0:	3710      	adds	r7, #16
 801d2c2:	46bd      	mov	sp, r7
 801d2c4:	bd80      	pop	{r7, pc}

0801d2c6 <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d2c6:	b580      	push	{r7, lr}
 801d2c8:	b082      	sub	sp, #8
 801d2ca:	af00      	add	r7, sp, #0
 801d2cc:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d2ce:	687b      	ldr	r3, [r7, #4]
 801d2d0:	4618      	mov	r0, r3
 801d2d2:	f000 f9ca 	bl	801d66a <_ZNKSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801d2d6:	4603      	mov	r3, r0
 801d2d8:	4618      	mov	r0, r3
 801d2da:	f000 f9ac 	bl	801d636 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_max_sizeERKS1_>
 801d2de:	4603      	mov	r3, r0
 801d2e0:	4618      	mov	r0, r3
 801d2e2:	3708      	adds	r7, #8
 801d2e4:	46bd      	mov	sp, r7
 801d2e6:	bd80      	pop	{r7, pc}

0801d2e8 <_ZNSt16allocator_traitsISaI12sum_operatorEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 801d2e8:	b580      	push	{r7, lr}
 801d2ea:	b082      	sub	sp, #8
 801d2ec:	af00      	add	r7, sp, #0
 801d2ee:	6078      	str	r0, [r7, #4]
 801d2f0:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d2f2:	2200      	movs	r2, #0
 801d2f4:	6839      	ldr	r1, [r7, #0]
 801d2f6:	6878      	ldr	r0, [r7, #4]
 801d2f8:	f000 f9c2 	bl	801d680 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv>
 801d2fc:	4603      	mov	r3, r0
 801d2fe:	4618      	mov	r0, r3
 801d300:	3708      	adds	r7, #8
 801d302:	46bd      	mov	sp, r7
 801d304:	bd80      	pop	{r7, pc}

0801d306 <_ZNSt6vectorI12sum_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d306:	b580      	push	{r7, lr}
 801d308:	b084      	sub	sp, #16
 801d30a:	af00      	add	r7, sp, #0
 801d30c:	60f8      	str	r0, [r7, #12]
 801d30e:	60b9      	str	r1, [r7, #8]
 801d310:	607a      	str	r2, [r7, #4]
 801d312:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d314:	683b      	ldr	r3, [r7, #0]
 801d316:	687a      	ldr	r2, [r7, #4]
 801d318:	68b9      	ldr	r1, [r7, #8]
 801d31a:	68f8      	ldr	r0, [r7, #12]
 801d31c:	f000 f9cd 	bl	801d6ba <_ZSt12__relocate_aIP12sum_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>
 801d320:	4603      	mov	r3, r0
      }
 801d322:	4618      	mov	r0, r3
 801d324:	3710      	adds	r7, #16
 801d326:	46bd      	mov	sp, r7
 801d328:	bd80      	pop	{r7, pc}

0801d32a <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d32a:	b580      	push	{r7, lr}
 801d32c:	b082      	sub	sp, #8
 801d32e:	af00      	add	r7, sp, #0
 801d330:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d332:	687b      	ldr	r3, [r7, #4]
 801d334:	4618      	mov	r0, r3
 801d336:	f000 f9f7 	bl	801d728 <_ZNKSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801d33a:	4603      	mov	r3, r0
 801d33c:	4618      	mov	r0, r3
 801d33e:	f000 f9d9 	bl	801d6f4 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801d342:	4603      	mov	r3, r0
 801d344:	4618      	mov	r0, r3
 801d346:	3708      	adds	r7, #8
 801d348:	46bd      	mov	sp, r7
 801d34a:	bd80      	pop	{r7, pc}

0801d34c <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801d34c:	b480      	push	{r7}
 801d34e:	b083      	sub	sp, #12
 801d350:	af00      	add	r7, sp, #0
 801d352:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801d354:	687b      	ldr	r3, [r7, #4]
 801d356:	685a      	ldr	r2, [r3, #4]
 801d358:	687b      	ldr	r3, [r7, #4]
 801d35a:	681b      	ldr	r3, [r3, #0]
 801d35c:	1ad3      	subs	r3, r2, r3
 801d35e:	109b      	asrs	r3, r3, #2
 801d360:	4618      	mov	r0, r3
 801d362:	370c      	adds	r7, #12
 801d364:	46bd      	mov	sp, r7
 801d366:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d36a:	4770      	bx	lr

0801d36c <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801d36c:	b580      	push	{r7, lr}
 801d36e:	b082      	sub	sp, #8
 801d370:	af00      	add	r7, sp, #0
 801d372:	6078      	str	r0, [r7, #4]
 801d374:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d376:	2200      	movs	r2, #0
 801d378:	6839      	ldr	r1, [r7, #0]
 801d37a:	6878      	ldr	r0, [r7, #4]
 801d37c:	f000 f9df 	bl	801d73e <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv>
 801d380:	4603      	mov	r3, r0
 801d382:	4618      	mov	r0, r3
 801d384:	3708      	adds	r7, #8
 801d386:	46bd      	mov	sp, r7
 801d388:	bd80      	pop	{r7, pc}

0801d38a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d38a:	b580      	push	{r7, lr}
 801d38c:	b084      	sub	sp, #16
 801d38e:	af00      	add	r7, sp, #0
 801d390:	60f8      	str	r0, [r7, #12]
 801d392:	60b9      	str	r1, [r7, #8]
 801d394:	607a      	str	r2, [r7, #4]
 801d396:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d398:	683b      	ldr	r3, [r7, #0]
 801d39a:	687a      	ldr	r2, [r7, #4]
 801d39c:	68b9      	ldr	r1, [r7, #8]
 801d39e:	68f8      	ldr	r0, [r7, #12]
 801d3a0:	f000 f9ec 	bl	801d77c <_ZSt12__relocate_aIPP19Multiply_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801d3a4:	4603      	mov	r3, r0
      }
 801d3a6:	4618      	mov	r0, r3
 801d3a8:	3710      	adds	r7, #16
 801d3aa:	46bd      	mov	sp, r7
 801d3ac:	bd80      	pop	{r7, pc}

0801d3ae <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d3ae:	b580      	push	{r7, lr}
 801d3b0:	b082      	sub	sp, #8
 801d3b2:	af00      	add	r7, sp, #0
 801d3b4:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d3b6:	687b      	ldr	r3, [r7, #4]
 801d3b8:	4618      	mov	r0, r3
 801d3ba:	f000 fa16 	bl	801d7ea <_ZNKSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801d3be:	4603      	mov	r3, r0
 801d3c0:	4618      	mov	r0, r3
 801d3c2:	f000 f9f8 	bl	801d7b6 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801d3c6:	4603      	mov	r3, r0
 801d3c8:	4618      	mov	r0, r3
 801d3ca:	3708      	adds	r7, #8
 801d3cc:	46bd      	mov	sp, r7
 801d3ce:	bd80      	pop	{r7, pc}

0801d3d0 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801d3d0:	b480      	push	{r7}
 801d3d2:	b083      	sub	sp, #12
 801d3d4:	af00      	add	r7, sp, #0
 801d3d6:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801d3d8:	687b      	ldr	r3, [r7, #4]
 801d3da:	685a      	ldr	r2, [r3, #4]
 801d3dc:	687b      	ldr	r3, [r7, #4]
 801d3de:	681b      	ldr	r3, [r3, #0]
 801d3e0:	1ad3      	subs	r3, r2, r3
 801d3e2:	109b      	asrs	r3, r3, #2
 801d3e4:	4618      	mov	r0, r3
 801d3e6:	370c      	adds	r7, #12
 801d3e8:	46bd      	mov	sp, r7
 801d3ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d3ee:	4770      	bx	lr

0801d3f0 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801d3f0:	b580      	push	{r7, lr}
 801d3f2:	b082      	sub	sp, #8
 801d3f4:	af00      	add	r7, sp, #0
 801d3f6:	6078      	str	r0, [r7, #4]
 801d3f8:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d3fa:	2200      	movs	r2, #0
 801d3fc:	6839      	ldr	r1, [r7, #0]
 801d3fe:	6878      	ldr	r0, [r7, #4]
 801d400:	f000 f9fe 	bl	801d800 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv>
 801d404:	4603      	mov	r3, r0
 801d406:	4618      	mov	r0, r3
 801d408:	3708      	adds	r7, #8
 801d40a:	46bd      	mov	sp, r7
 801d40c:	bd80      	pop	{r7, pc}

0801d40e <_ZNSt6vectorIP18Compare_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d40e:	b580      	push	{r7, lr}
 801d410:	b084      	sub	sp, #16
 801d412:	af00      	add	r7, sp, #0
 801d414:	60f8      	str	r0, [r7, #12]
 801d416:	60b9      	str	r1, [r7, #8]
 801d418:	607a      	str	r2, [r7, #4]
 801d41a:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d41c:	683b      	ldr	r3, [r7, #0]
 801d41e:	687a      	ldr	r2, [r7, #4]
 801d420:	68b9      	ldr	r1, [r7, #8]
 801d422:	68f8      	ldr	r0, [r7, #12]
 801d424:	f000 fa0b 	bl	801d83e <_ZSt12__relocate_aIPP18Compare_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801d428:	4603      	mov	r3, r0
      }
 801d42a:	4618      	mov	r0, r3
 801d42c:	3710      	adds	r7, #16
 801d42e:	46bd      	mov	sp, r7
 801d430:	bd80      	pop	{r7, pc}

0801d432 <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d432:	b580      	push	{r7, lr}
 801d434:	b082      	sub	sp, #8
 801d436:	af00      	add	r7, sp, #0
 801d438:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d43a:	687b      	ldr	r3, [r7, #4]
 801d43c:	4618      	mov	r0, r3
 801d43e:	f000 fa35 	bl	801d8ac <_ZNKSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801d442:	4603      	mov	r3, r0
 801d444:	4618      	mov	r0, r3
 801d446:	f000 fa17 	bl	801d878 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801d44a:	4603      	mov	r3, r0
 801d44c:	4618      	mov	r0, r3
 801d44e:	3708      	adds	r7, #8
 801d450:	46bd      	mov	sp, r7
 801d452:	bd80      	pop	{r7, pc}

0801d454 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801d454:	b480      	push	{r7}
 801d456:	b083      	sub	sp, #12
 801d458:	af00      	add	r7, sp, #0
 801d45a:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801d45c:	687b      	ldr	r3, [r7, #4]
 801d45e:	685a      	ldr	r2, [r3, #4]
 801d460:	687b      	ldr	r3, [r7, #4]
 801d462:	681b      	ldr	r3, [r3, #0]
 801d464:	1ad3      	subs	r3, r2, r3
 801d466:	109b      	asrs	r3, r3, #2
 801d468:	4618      	mov	r0, r3
 801d46a:	370c      	adds	r7, #12
 801d46c:	46bd      	mov	sp, r7
 801d46e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d472:	4770      	bx	lr

0801d474 <_ZNSt16allocator_traitsISaIP14And_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801d474:	b580      	push	{r7, lr}
 801d476:	b082      	sub	sp, #8
 801d478:	af00      	add	r7, sp, #0
 801d47a:	6078      	str	r0, [r7, #4]
 801d47c:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d47e:	2200      	movs	r2, #0
 801d480:	6839      	ldr	r1, [r7, #0]
 801d482:	6878      	ldr	r0, [r7, #4]
 801d484:	f000 fa1d 	bl	801d8c2 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv>
 801d488:	4603      	mov	r3, r0
 801d48a:	4618      	mov	r0, r3
 801d48c:	3708      	adds	r7, #8
 801d48e:	46bd      	mov	sp, r7
 801d490:	bd80      	pop	{r7, pc}

0801d492 <_ZNSt6vectorIP14And_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d492:	b580      	push	{r7, lr}
 801d494:	b084      	sub	sp, #16
 801d496:	af00      	add	r7, sp, #0
 801d498:	60f8      	str	r0, [r7, #12]
 801d49a:	60b9      	str	r1, [r7, #8]
 801d49c:	607a      	str	r2, [r7, #4]
 801d49e:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d4a0:	683b      	ldr	r3, [r7, #0]
 801d4a2:	687a      	ldr	r2, [r7, #4]
 801d4a4:	68b9      	ldr	r1, [r7, #8]
 801d4a6:	68f8      	ldr	r0, [r7, #12]
 801d4a8:	f000 fa2a 	bl	801d900 <_ZSt12__relocate_aIPP14And_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801d4ac:	4603      	mov	r3, r0
      }
 801d4ae:	4618      	mov	r0, r3
 801d4b0:	3710      	adds	r7, #16
 801d4b2:	46bd      	mov	sp, r7
 801d4b4:	bd80      	pop	{r7, pc}

0801d4b6 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d4b6:	b580      	push	{r7, lr}
 801d4b8:	b084      	sub	sp, #16
 801d4ba:	af00      	add	r7, sp, #0
 801d4bc:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d4be:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801d4c2:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d4c4:	6878      	ldr	r0, [r7, #4]
 801d4c6:	f000 fa38 	bl	801d93a <_ZNSt16allocator_traitsISaI13mult_operatorEE8max_sizeERKS1_>
 801d4ca:	4603      	mov	r3, r0
 801d4cc:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d4ce:	f107 0208 	add.w	r2, r7, #8
 801d4d2:	f107 030c 	add.w	r3, r7, #12
 801d4d6:	4611      	mov	r1, r2
 801d4d8:	4618      	mov	r0, r3
 801d4da:	f7f8 ff3b 	bl	8016354 <_ZSt3minIjERKT_S2_S2_>
 801d4de:	4603      	mov	r3, r0
 801d4e0:	681b      	ldr	r3, [r3, #0]
      }
 801d4e2:	4618      	mov	r0, r3
 801d4e4:	3710      	adds	r7, #16
 801d4e6:	46bd      	mov	sp, r7
 801d4e8:	bd80      	pop	{r7, pc}

0801d4ea <_ZNKSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d4ea:	b480      	push	{r7}
 801d4ec:	b083      	sub	sp, #12
 801d4ee:	af00      	add	r7, sp, #0
 801d4f0:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d4f2:	687b      	ldr	r3, [r7, #4]
 801d4f4:	4618      	mov	r0, r3
 801d4f6:	370c      	adds	r7, #12
 801d4f8:	46bd      	mov	sp, r7
 801d4fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d4fe:	4770      	bx	lr

0801d500 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d500:	b580      	push	{r7, lr}
 801d502:	b084      	sub	sp, #16
 801d504:	af00      	add	r7, sp, #0
 801d506:	60f8      	str	r0, [r7, #12]
 801d508:	60b9      	str	r1, [r7, #8]
 801d50a:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d50c:	68f8      	ldr	r0, [r7, #12]
 801d50e:	f000 fa20 	bl	801d952 <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>
 801d512:	4602      	mov	r2, r0
 801d514:	68bb      	ldr	r3, [r7, #8]
 801d516:	4293      	cmp	r3, r2
 801d518:	bf8c      	ite	hi
 801d51a:	2301      	movhi	r3, #1
 801d51c:	2300      	movls	r3, #0
 801d51e:	b2db      	uxtb	r3, r3
 801d520:	2b00      	cmp	r3, #0
 801d522:	d001      	beq.n	801d528 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d524:	f005 fc55 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d528:	68b8      	ldr	r0, [r7, #8]
 801d52a:	f005 fb8d 	bl	8022c48 <_Znwj>
 801d52e:	4603      	mov	r3, r0
 801d530:	bf00      	nop
      }
 801d532:	4618      	mov	r0, r3
 801d534:	3710      	adds	r7, #16
 801d536:	46bd      	mov	sp, r7
 801d538:	bd80      	pop	{r7, pc}

0801d53a <_ZSt12__relocate_aIP13mult_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d53a:	b5b0      	push	{r4, r5, r7, lr}
 801d53c:	b084      	sub	sp, #16
 801d53e:	af00      	add	r7, sp, #0
 801d540:	60f8      	str	r0, [r7, #12]
 801d542:	60b9      	str	r1, [r7, #8]
 801d544:	607a      	str	r2, [r7, #4]
 801d546:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d548:	68f8      	ldr	r0, [r7, #12]
 801d54a:	f000 fa0e 	bl	801d96a <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801d54e:	4604      	mov	r4, r0
 801d550:	68b8      	ldr	r0, [r7, #8]
 801d552:	f000 fa0a 	bl	801d96a <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801d556:	4605      	mov	r5, r0
 801d558:	6878      	ldr	r0, [r7, #4]
 801d55a:	f000 fa06 	bl	801d96a <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801d55e:	4602      	mov	r2, r0
 801d560:	683b      	ldr	r3, [r7, #0]
 801d562:	4629      	mov	r1, r5
 801d564:	4620      	mov	r0, r4
 801d566:	f000 fa0b 	bl	801d980 <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
 801d56a:	4603      	mov	r3, r0
    }
 801d56c:	4618      	mov	r0, r3
 801d56e:	3710      	adds	r7, #16
 801d570:	46bd      	mov	sp, r7
 801d572:	bdb0      	pop	{r4, r5, r7, pc}

0801d574 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d574:	b580      	push	{r7, lr}
 801d576:	b084      	sub	sp, #16
 801d578:	af00      	add	r7, sp, #0
 801d57a:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d57c:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801d580:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d582:	6878      	ldr	r0, [r7, #4]
 801d584:	f000 fa17 	bl	801d9b6 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8max_sizeERKS2_>
 801d588:	4603      	mov	r3, r0
 801d58a:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d58c:	f107 0208 	add.w	r2, r7, #8
 801d590:	f107 030c 	add.w	r3, r7, #12
 801d594:	4611      	mov	r1, r2
 801d596:	4618      	mov	r0, r3
 801d598:	f7f8 fedc 	bl	8016354 <_ZSt3minIjERKT_S2_S2_>
 801d59c:	4603      	mov	r3, r0
 801d59e:	681b      	ldr	r3, [r3, #0]
      }
 801d5a0:	4618      	mov	r0, r3
 801d5a2:	3710      	adds	r7, #16
 801d5a4:	46bd      	mov	sp, r7
 801d5a6:	bd80      	pop	{r7, pc}

0801d5a8 <_ZNKSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d5a8:	b480      	push	{r7}
 801d5aa:	b083      	sub	sp, #12
 801d5ac:	af00      	add	r7, sp, #0
 801d5ae:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d5b0:	687b      	ldr	r3, [r7, #4]
 801d5b2:	4618      	mov	r0, r3
 801d5b4:	370c      	adds	r7, #12
 801d5b6:	46bd      	mov	sp, r7
 801d5b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d5bc:	4770      	bx	lr

0801d5be <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d5be:	b580      	push	{r7, lr}
 801d5c0:	b084      	sub	sp, #16
 801d5c2:	af00      	add	r7, sp, #0
 801d5c4:	60f8      	str	r0, [r7, #12]
 801d5c6:	60b9      	str	r1, [r7, #8]
 801d5c8:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d5ca:	68f8      	ldr	r0, [r7, #12]
 801d5cc:	f000 f9ff 	bl	801d9ce <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>
 801d5d0:	4602      	mov	r2, r0
 801d5d2:	68bb      	ldr	r3, [r7, #8]
 801d5d4:	4293      	cmp	r3, r2
 801d5d6:	bf8c      	ite	hi
 801d5d8:	2301      	movhi	r3, #1
 801d5da:	2300      	movls	r3, #0
 801d5dc:	b2db      	uxtb	r3, r3
 801d5de:	2b00      	cmp	r3, #0
 801d5e0:	d001      	beq.n	801d5e6 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d5e2:	f005 fbf6 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d5e6:	68bb      	ldr	r3, [r7, #8]
 801d5e8:	009b      	lsls	r3, r3, #2
 801d5ea:	4618      	mov	r0, r3
 801d5ec:	f005 fb2c 	bl	8022c48 <_Znwj>
 801d5f0:	4603      	mov	r3, r0
 801d5f2:	bf00      	nop
      }
 801d5f4:	4618      	mov	r0, r3
 801d5f6:	3710      	adds	r7, #16
 801d5f8:	46bd      	mov	sp, r7
 801d5fa:	bd80      	pop	{r7, pc}

0801d5fc <_ZSt12__relocate_aIPP16Power_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d5fc:	b5b0      	push	{r4, r5, r7, lr}
 801d5fe:	b084      	sub	sp, #16
 801d600:	af00      	add	r7, sp, #0
 801d602:	60f8      	str	r0, [r7, #12]
 801d604:	60b9      	str	r1, [r7, #8]
 801d606:	607a      	str	r2, [r7, #4]
 801d608:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d60a:	68f8      	ldr	r0, [r7, #12]
 801d60c:	f000 f9eb 	bl	801d9e6 <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801d610:	4604      	mov	r4, r0
 801d612:	68b8      	ldr	r0, [r7, #8]
 801d614:	f000 f9e7 	bl	801d9e6 <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801d618:	4605      	mov	r5, r0
 801d61a:	6878      	ldr	r0, [r7, #4]
 801d61c:	f000 f9e3 	bl	801d9e6 <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801d620:	4602      	mov	r2, r0
 801d622:	683b      	ldr	r3, [r7, #0]
 801d624:	4629      	mov	r1, r5
 801d626:	4620      	mov	r0, r4
 801d628:	f000 f9e8 	bl	801d9fc <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801d62c:	4603      	mov	r3, r0
    }
 801d62e:	4618      	mov	r0, r3
 801d630:	3710      	adds	r7, #16
 801d632:	46bd      	mov	sp, r7
 801d634:	bdb0      	pop	{r4, r5, r7, pc}

0801d636 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d636:	b580      	push	{r7, lr}
 801d638:	b084      	sub	sp, #16
 801d63a:	af00      	add	r7, sp, #0
 801d63c:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d63e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801d642:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d644:	6878      	ldr	r0, [r7, #4]
 801d646:	f000 f9f7 	bl	801da38 <_ZNSt16allocator_traitsISaI12sum_operatorEE8max_sizeERKS1_>
 801d64a:	4603      	mov	r3, r0
 801d64c:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d64e:	f107 0208 	add.w	r2, r7, #8
 801d652:	f107 030c 	add.w	r3, r7, #12
 801d656:	4611      	mov	r1, r2
 801d658:	4618      	mov	r0, r3
 801d65a:	f7f8 fe7b 	bl	8016354 <_ZSt3minIjERKT_S2_S2_>
 801d65e:	4603      	mov	r3, r0
 801d660:	681b      	ldr	r3, [r3, #0]
      }
 801d662:	4618      	mov	r0, r3
 801d664:	3710      	adds	r7, #16
 801d666:	46bd      	mov	sp, r7
 801d668:	bd80      	pop	{r7, pc}

0801d66a <_ZNKSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d66a:	b480      	push	{r7}
 801d66c:	b083      	sub	sp, #12
 801d66e:	af00      	add	r7, sp, #0
 801d670:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d672:	687b      	ldr	r3, [r7, #4]
 801d674:	4618      	mov	r0, r3
 801d676:	370c      	adds	r7, #12
 801d678:	46bd      	mov	sp, r7
 801d67a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d67e:	4770      	bx	lr

0801d680 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d680:	b580      	push	{r7, lr}
 801d682:	b084      	sub	sp, #16
 801d684:	af00      	add	r7, sp, #0
 801d686:	60f8      	str	r0, [r7, #12]
 801d688:	60b9      	str	r1, [r7, #8]
 801d68a:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d68c:	68f8      	ldr	r0, [r7, #12]
 801d68e:	f000 f9df 	bl	801da50 <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>
 801d692:	4602      	mov	r2, r0
 801d694:	68bb      	ldr	r3, [r7, #8]
 801d696:	4293      	cmp	r3, r2
 801d698:	bf8c      	ite	hi
 801d69a:	2301      	movhi	r3, #1
 801d69c:	2300      	movls	r3, #0
 801d69e:	b2db      	uxtb	r3, r3
 801d6a0:	2b00      	cmp	r3, #0
 801d6a2:	d001      	beq.n	801d6a8 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d6a4:	f005 fb95 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d6a8:	68b8      	ldr	r0, [r7, #8]
 801d6aa:	f005 facd 	bl	8022c48 <_Znwj>
 801d6ae:	4603      	mov	r3, r0
 801d6b0:	bf00      	nop
      }
 801d6b2:	4618      	mov	r0, r3
 801d6b4:	3710      	adds	r7, #16
 801d6b6:	46bd      	mov	sp, r7
 801d6b8:	bd80      	pop	{r7, pc}

0801d6ba <_ZSt12__relocate_aIP12sum_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d6ba:	b5b0      	push	{r4, r5, r7, lr}
 801d6bc:	b084      	sub	sp, #16
 801d6be:	af00      	add	r7, sp, #0
 801d6c0:	60f8      	str	r0, [r7, #12]
 801d6c2:	60b9      	str	r1, [r7, #8]
 801d6c4:	607a      	str	r2, [r7, #4]
 801d6c6:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d6c8:	68f8      	ldr	r0, [r7, #12]
 801d6ca:	f000 f9cd 	bl	801da68 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801d6ce:	4604      	mov	r4, r0
 801d6d0:	68b8      	ldr	r0, [r7, #8]
 801d6d2:	f000 f9c9 	bl	801da68 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801d6d6:	4605      	mov	r5, r0
 801d6d8:	6878      	ldr	r0, [r7, #4]
 801d6da:	f000 f9c5 	bl	801da68 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801d6de:	4602      	mov	r2, r0
 801d6e0:	683b      	ldr	r3, [r7, #0]
 801d6e2:	4629      	mov	r1, r5
 801d6e4:	4620      	mov	r0, r4
 801d6e6:	f000 f9ca 	bl	801da7e <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
 801d6ea:	4603      	mov	r3, r0
    }
 801d6ec:	4618      	mov	r0, r3
 801d6ee:	3710      	adds	r7, #16
 801d6f0:	46bd      	mov	sp, r7
 801d6f2:	bdb0      	pop	{r4, r5, r7, pc}

0801d6f4 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d6f4:	b580      	push	{r7, lr}
 801d6f6:	b084      	sub	sp, #16
 801d6f8:	af00      	add	r7, sp, #0
 801d6fa:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d6fc:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801d700:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d702:	6878      	ldr	r0, [r7, #4]
 801d704:	f000 f9d6 	bl	801dab4 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8max_sizeERKS2_>
 801d708:	4603      	mov	r3, r0
 801d70a:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d70c:	f107 0208 	add.w	r2, r7, #8
 801d710:	f107 030c 	add.w	r3, r7, #12
 801d714:	4611      	mov	r1, r2
 801d716:	4618      	mov	r0, r3
 801d718:	f7f8 fe1c 	bl	8016354 <_ZSt3minIjERKT_S2_S2_>
 801d71c:	4603      	mov	r3, r0
 801d71e:	681b      	ldr	r3, [r3, #0]
      }
 801d720:	4618      	mov	r0, r3
 801d722:	3710      	adds	r7, #16
 801d724:	46bd      	mov	sp, r7
 801d726:	bd80      	pop	{r7, pc}

0801d728 <_ZNKSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d728:	b480      	push	{r7}
 801d72a:	b083      	sub	sp, #12
 801d72c:	af00      	add	r7, sp, #0
 801d72e:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d730:	687b      	ldr	r3, [r7, #4]
 801d732:	4618      	mov	r0, r3
 801d734:	370c      	adds	r7, #12
 801d736:	46bd      	mov	sp, r7
 801d738:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d73c:	4770      	bx	lr

0801d73e <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d73e:	b580      	push	{r7, lr}
 801d740:	b084      	sub	sp, #16
 801d742:	af00      	add	r7, sp, #0
 801d744:	60f8      	str	r0, [r7, #12]
 801d746:	60b9      	str	r1, [r7, #8]
 801d748:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d74a:	68f8      	ldr	r0, [r7, #12]
 801d74c:	f000 f9be 	bl	801dacc <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>
 801d750:	4602      	mov	r2, r0
 801d752:	68bb      	ldr	r3, [r7, #8]
 801d754:	4293      	cmp	r3, r2
 801d756:	bf8c      	ite	hi
 801d758:	2301      	movhi	r3, #1
 801d75a:	2300      	movls	r3, #0
 801d75c:	b2db      	uxtb	r3, r3
 801d75e:	2b00      	cmp	r3, #0
 801d760:	d001      	beq.n	801d766 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d762:	f005 fb36 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d766:	68bb      	ldr	r3, [r7, #8]
 801d768:	009b      	lsls	r3, r3, #2
 801d76a:	4618      	mov	r0, r3
 801d76c:	f005 fa6c 	bl	8022c48 <_Znwj>
 801d770:	4603      	mov	r3, r0
 801d772:	bf00      	nop
      }
 801d774:	4618      	mov	r0, r3
 801d776:	3710      	adds	r7, #16
 801d778:	46bd      	mov	sp, r7
 801d77a:	bd80      	pop	{r7, pc}

0801d77c <_ZSt12__relocate_aIPP19Multiply_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d77c:	b5b0      	push	{r4, r5, r7, lr}
 801d77e:	b084      	sub	sp, #16
 801d780:	af00      	add	r7, sp, #0
 801d782:	60f8      	str	r0, [r7, #12]
 801d784:	60b9      	str	r1, [r7, #8]
 801d786:	607a      	str	r2, [r7, #4]
 801d788:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d78a:	68f8      	ldr	r0, [r7, #12]
 801d78c:	f000 f9aa 	bl	801dae4 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801d790:	4604      	mov	r4, r0
 801d792:	68b8      	ldr	r0, [r7, #8]
 801d794:	f000 f9a6 	bl	801dae4 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801d798:	4605      	mov	r5, r0
 801d79a:	6878      	ldr	r0, [r7, #4]
 801d79c:	f000 f9a2 	bl	801dae4 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801d7a0:	4602      	mov	r2, r0
 801d7a2:	683b      	ldr	r3, [r7, #0]
 801d7a4:	4629      	mov	r1, r5
 801d7a6:	4620      	mov	r0, r4
 801d7a8:	f000 f9a7 	bl	801dafa <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801d7ac:	4603      	mov	r3, r0
    }
 801d7ae:	4618      	mov	r0, r3
 801d7b0:	3710      	adds	r7, #16
 801d7b2:	46bd      	mov	sp, r7
 801d7b4:	bdb0      	pop	{r4, r5, r7, pc}

0801d7b6 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d7b6:	b580      	push	{r7, lr}
 801d7b8:	b084      	sub	sp, #16
 801d7ba:	af00      	add	r7, sp, #0
 801d7bc:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d7be:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801d7c2:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d7c4:	6878      	ldr	r0, [r7, #4]
 801d7c6:	f000 f9b6 	bl	801db36 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8max_sizeERKS2_>
 801d7ca:	4603      	mov	r3, r0
 801d7cc:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d7ce:	f107 0208 	add.w	r2, r7, #8
 801d7d2:	f107 030c 	add.w	r3, r7, #12
 801d7d6:	4611      	mov	r1, r2
 801d7d8:	4618      	mov	r0, r3
 801d7da:	f7f8 fdbb 	bl	8016354 <_ZSt3minIjERKT_S2_S2_>
 801d7de:	4603      	mov	r3, r0
 801d7e0:	681b      	ldr	r3, [r3, #0]
      }
 801d7e2:	4618      	mov	r0, r3
 801d7e4:	3710      	adds	r7, #16
 801d7e6:	46bd      	mov	sp, r7
 801d7e8:	bd80      	pop	{r7, pc}

0801d7ea <_ZNKSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d7ea:	b480      	push	{r7}
 801d7ec:	b083      	sub	sp, #12
 801d7ee:	af00      	add	r7, sp, #0
 801d7f0:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d7f2:	687b      	ldr	r3, [r7, #4]
 801d7f4:	4618      	mov	r0, r3
 801d7f6:	370c      	adds	r7, #12
 801d7f8:	46bd      	mov	sp, r7
 801d7fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d7fe:	4770      	bx	lr

0801d800 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d800:	b580      	push	{r7, lr}
 801d802:	b084      	sub	sp, #16
 801d804:	af00      	add	r7, sp, #0
 801d806:	60f8      	str	r0, [r7, #12]
 801d808:	60b9      	str	r1, [r7, #8]
 801d80a:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d80c:	68f8      	ldr	r0, [r7, #12]
 801d80e:	f000 f99e 	bl	801db4e <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>
 801d812:	4602      	mov	r2, r0
 801d814:	68bb      	ldr	r3, [r7, #8]
 801d816:	4293      	cmp	r3, r2
 801d818:	bf8c      	ite	hi
 801d81a:	2301      	movhi	r3, #1
 801d81c:	2300      	movls	r3, #0
 801d81e:	b2db      	uxtb	r3, r3
 801d820:	2b00      	cmp	r3, #0
 801d822:	d001      	beq.n	801d828 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d824:	f005 fad5 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d828:	68bb      	ldr	r3, [r7, #8]
 801d82a:	009b      	lsls	r3, r3, #2
 801d82c:	4618      	mov	r0, r3
 801d82e:	f005 fa0b 	bl	8022c48 <_Znwj>
 801d832:	4603      	mov	r3, r0
 801d834:	bf00      	nop
      }
 801d836:	4618      	mov	r0, r3
 801d838:	3710      	adds	r7, #16
 801d83a:	46bd      	mov	sp, r7
 801d83c:	bd80      	pop	{r7, pc}

0801d83e <_ZSt12__relocate_aIPP18Compare_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d83e:	b5b0      	push	{r4, r5, r7, lr}
 801d840:	b084      	sub	sp, #16
 801d842:	af00      	add	r7, sp, #0
 801d844:	60f8      	str	r0, [r7, #12]
 801d846:	60b9      	str	r1, [r7, #8]
 801d848:	607a      	str	r2, [r7, #4]
 801d84a:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d84c:	68f8      	ldr	r0, [r7, #12]
 801d84e:	f000 f98a 	bl	801db66 <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801d852:	4604      	mov	r4, r0
 801d854:	68b8      	ldr	r0, [r7, #8]
 801d856:	f000 f986 	bl	801db66 <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801d85a:	4605      	mov	r5, r0
 801d85c:	6878      	ldr	r0, [r7, #4]
 801d85e:	f000 f982 	bl	801db66 <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801d862:	4602      	mov	r2, r0
 801d864:	683b      	ldr	r3, [r7, #0]
 801d866:	4629      	mov	r1, r5
 801d868:	4620      	mov	r0, r4
 801d86a:	f000 f987 	bl	801db7c <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801d86e:	4603      	mov	r3, r0
    }
 801d870:	4618      	mov	r0, r3
 801d872:	3710      	adds	r7, #16
 801d874:	46bd      	mov	sp, r7
 801d876:	bdb0      	pop	{r4, r5, r7, pc}

0801d878 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d878:	b580      	push	{r7, lr}
 801d87a:	b084      	sub	sp, #16
 801d87c:	af00      	add	r7, sp, #0
 801d87e:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d880:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801d884:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d886:	6878      	ldr	r0, [r7, #4]
 801d888:	f000 f996 	bl	801dbb8 <_ZNSt16allocator_traitsISaIP14And_expressionEE8max_sizeERKS2_>
 801d88c:	4603      	mov	r3, r0
 801d88e:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d890:	f107 0208 	add.w	r2, r7, #8
 801d894:	f107 030c 	add.w	r3, r7, #12
 801d898:	4611      	mov	r1, r2
 801d89a:	4618      	mov	r0, r3
 801d89c:	f7f8 fd5a 	bl	8016354 <_ZSt3minIjERKT_S2_S2_>
 801d8a0:	4603      	mov	r3, r0
 801d8a2:	681b      	ldr	r3, [r3, #0]
      }
 801d8a4:	4618      	mov	r0, r3
 801d8a6:	3710      	adds	r7, #16
 801d8a8:	46bd      	mov	sp, r7
 801d8aa:	bd80      	pop	{r7, pc}

0801d8ac <_ZNKSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d8ac:	b480      	push	{r7}
 801d8ae:	b083      	sub	sp, #12
 801d8b0:	af00      	add	r7, sp, #0
 801d8b2:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d8b4:	687b      	ldr	r3, [r7, #4]
 801d8b6:	4618      	mov	r0, r3
 801d8b8:	370c      	adds	r7, #12
 801d8ba:	46bd      	mov	sp, r7
 801d8bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d8c0:	4770      	bx	lr

0801d8c2 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d8c2:	b580      	push	{r7, lr}
 801d8c4:	b084      	sub	sp, #16
 801d8c6:	af00      	add	r7, sp, #0
 801d8c8:	60f8      	str	r0, [r7, #12]
 801d8ca:	60b9      	str	r1, [r7, #8]
 801d8cc:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d8ce:	68f8      	ldr	r0, [r7, #12]
 801d8d0:	f000 f97e 	bl	801dbd0 <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>
 801d8d4:	4602      	mov	r2, r0
 801d8d6:	68bb      	ldr	r3, [r7, #8]
 801d8d8:	4293      	cmp	r3, r2
 801d8da:	bf8c      	ite	hi
 801d8dc:	2301      	movhi	r3, #1
 801d8de:	2300      	movls	r3, #0
 801d8e0:	b2db      	uxtb	r3, r3
 801d8e2:	2b00      	cmp	r3, #0
 801d8e4:	d001      	beq.n	801d8ea <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d8e6:	f005 fa74 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d8ea:	68bb      	ldr	r3, [r7, #8]
 801d8ec:	009b      	lsls	r3, r3, #2
 801d8ee:	4618      	mov	r0, r3
 801d8f0:	f005 f9aa 	bl	8022c48 <_Znwj>
 801d8f4:	4603      	mov	r3, r0
 801d8f6:	bf00      	nop
      }
 801d8f8:	4618      	mov	r0, r3
 801d8fa:	3710      	adds	r7, #16
 801d8fc:	46bd      	mov	sp, r7
 801d8fe:	bd80      	pop	{r7, pc}

0801d900 <_ZSt12__relocate_aIPP14And_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d900:	b5b0      	push	{r4, r5, r7, lr}
 801d902:	b084      	sub	sp, #16
 801d904:	af00      	add	r7, sp, #0
 801d906:	60f8      	str	r0, [r7, #12]
 801d908:	60b9      	str	r1, [r7, #8]
 801d90a:	607a      	str	r2, [r7, #4]
 801d90c:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d90e:	68f8      	ldr	r0, [r7, #12]
 801d910:	f000 f96a 	bl	801dbe8 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801d914:	4604      	mov	r4, r0
 801d916:	68b8      	ldr	r0, [r7, #8]
 801d918:	f000 f966 	bl	801dbe8 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801d91c:	4605      	mov	r5, r0
 801d91e:	6878      	ldr	r0, [r7, #4]
 801d920:	f000 f962 	bl	801dbe8 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801d924:	4602      	mov	r2, r0
 801d926:	683b      	ldr	r3, [r7, #0]
 801d928:	4629      	mov	r1, r5
 801d92a:	4620      	mov	r0, r4
 801d92c:	f000 f967 	bl	801dbfe <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801d930:	4603      	mov	r3, r0
    }
 801d932:	4618      	mov	r0, r3
 801d934:	3710      	adds	r7, #16
 801d936:	46bd      	mov	sp, r7
 801d938:	bdb0      	pop	{r4, r5, r7, pc}

0801d93a <_ZNSt16allocator_traitsISaI13mult_operatorEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 801d93a:	b580      	push	{r7, lr}
 801d93c:	b082      	sub	sp, #8
 801d93e:	af00      	add	r7, sp, #0
 801d940:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801d942:	6878      	ldr	r0, [r7, #4]
 801d944:	f000 f805 	bl	801d952 <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>
 801d948:	4603      	mov	r3, r0
 801d94a:	4618      	mov	r0, r3
 801d94c:	3708      	adds	r7, #8
 801d94e:	46bd      	mov	sp, r7
 801d950:	bd80      	pop	{r7, pc}

0801d952 <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801d952:	b480      	push	{r7}
 801d954:	b083      	sub	sp, #12
 801d956:	af00      	add	r7, sp, #0
 801d958:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801d95a:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
      }
 801d95e:	4618      	mov	r0, r3
 801d960:	370c      	adds	r7, #12
 801d962:	46bd      	mov	sp, r7
 801d964:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d968:	4770      	bx	lr

0801d96a <_ZSt12__niter_baseIP13mult_operatorET_S2_>:
    __niter_base(_Iterator __it)
 801d96a:	b480      	push	{r7}
 801d96c:	b083      	sub	sp, #12
 801d96e:	af00      	add	r7, sp, #0
 801d970:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d972:	687b      	ldr	r3, [r7, #4]
 801d974:	4618      	mov	r0, r3
 801d976:	370c      	adds	r7, #12
 801d978:	46bd      	mov	sp, r7
 801d97a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d97e:	4770      	bx	lr

0801d980 <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d980:	b580      	push	{r7, lr}
 801d982:	b086      	sub	sp, #24
 801d984:	af00      	add	r7, sp, #0
 801d986:	60f8      	str	r0, [r7, #12]
 801d988:	60b9      	str	r1, [r7, #8]
 801d98a:	607a      	str	r2, [r7, #4]
 801d98c:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801d98e:	68ba      	ldr	r2, [r7, #8]
 801d990:	68fb      	ldr	r3, [r7, #12]
 801d992:	1ad3      	subs	r3, r2, r3
 801d994:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801d996:	697b      	ldr	r3, [r7, #20]
 801d998:	2b00      	cmp	r3, #0
 801d99a:	dd05      	ble.n	801d9a8 <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x28>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801d99c:	697b      	ldr	r3, [r7, #20]
 801d99e:	461a      	mov	r2, r3
 801d9a0:	68f9      	ldr	r1, [r7, #12]
 801d9a2:	6878      	ldr	r0, [r7, #4]
 801d9a4:	f006 fcbc 	bl	8024320 <memmove>
      return __result + __count;
 801d9a8:	697b      	ldr	r3, [r7, #20]
 801d9aa:	687a      	ldr	r2, [r7, #4]
 801d9ac:	4413      	add	r3, r2
    }
 801d9ae:	4618      	mov	r0, r3
 801d9b0:	3718      	adds	r7, #24
 801d9b2:	46bd      	mov	sp, r7
 801d9b4:	bd80      	pop	{r7, pc}

0801d9b6 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801d9b6:	b580      	push	{r7, lr}
 801d9b8:	b082      	sub	sp, #8
 801d9ba:	af00      	add	r7, sp, #0
 801d9bc:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801d9be:	6878      	ldr	r0, [r7, #4]
 801d9c0:	f000 f805 	bl	801d9ce <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>
 801d9c4:	4603      	mov	r3, r0
 801d9c6:	4618      	mov	r0, r3
 801d9c8:	3708      	adds	r7, #8
 801d9ca:	46bd      	mov	sp, r7
 801d9cc:	bd80      	pop	{r7, pc}

0801d9ce <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801d9ce:	b480      	push	{r7}
 801d9d0:	b083      	sub	sp, #12
 801d9d2:	af00      	add	r7, sp, #0
 801d9d4:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801d9d6:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801d9da:	4618      	mov	r0, r3
 801d9dc:	370c      	adds	r7, #12
 801d9de:	46bd      	mov	sp, r7
 801d9e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d9e4:	4770      	bx	lr

0801d9e6 <_ZSt12__niter_baseIPP16Power_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801d9e6:	b480      	push	{r7}
 801d9e8:	b083      	sub	sp, #12
 801d9ea:	af00      	add	r7, sp, #0
 801d9ec:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d9ee:	687b      	ldr	r3, [r7, #4]
 801d9f0:	4618      	mov	r0, r3
 801d9f2:	370c      	adds	r7, #12
 801d9f4:	46bd      	mov	sp, r7
 801d9f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d9fa:	4770      	bx	lr

0801d9fc <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d9fc:	b580      	push	{r7, lr}
 801d9fe:	b086      	sub	sp, #24
 801da00:	af00      	add	r7, sp, #0
 801da02:	60f8      	str	r0, [r7, #12]
 801da04:	60b9      	str	r1, [r7, #8]
 801da06:	607a      	str	r2, [r7, #4]
 801da08:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801da0a:	68ba      	ldr	r2, [r7, #8]
 801da0c:	68fb      	ldr	r3, [r7, #12]
 801da0e:	1ad3      	subs	r3, r2, r3
 801da10:	109b      	asrs	r3, r3, #2
 801da12:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801da14:	697b      	ldr	r3, [r7, #20]
 801da16:	2b00      	cmp	r3, #0
 801da18:	dd06      	ble.n	801da28 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801da1a:	697b      	ldr	r3, [r7, #20]
 801da1c:	009b      	lsls	r3, r3, #2
 801da1e:	461a      	mov	r2, r3
 801da20:	68f9      	ldr	r1, [r7, #12]
 801da22:	6878      	ldr	r0, [r7, #4]
 801da24:	f006 fc7c 	bl	8024320 <memmove>
      return __result + __count;
 801da28:	697b      	ldr	r3, [r7, #20]
 801da2a:	009b      	lsls	r3, r3, #2
 801da2c:	687a      	ldr	r2, [r7, #4]
 801da2e:	4413      	add	r3, r2
    }
 801da30:	4618      	mov	r0, r3
 801da32:	3718      	adds	r7, #24
 801da34:	46bd      	mov	sp, r7
 801da36:	bd80      	pop	{r7, pc}

0801da38 <_ZNSt16allocator_traitsISaI12sum_operatorEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 801da38:	b580      	push	{r7, lr}
 801da3a:	b082      	sub	sp, #8
 801da3c:	af00      	add	r7, sp, #0
 801da3e:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801da40:	6878      	ldr	r0, [r7, #4]
 801da42:	f000 f805 	bl	801da50 <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>
 801da46:	4603      	mov	r3, r0
 801da48:	4618      	mov	r0, r3
 801da4a:	3708      	adds	r7, #8
 801da4c:	46bd      	mov	sp, r7
 801da4e:	bd80      	pop	{r7, pc}

0801da50 <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801da50:	b480      	push	{r7}
 801da52:	b083      	sub	sp, #12
 801da54:	af00      	add	r7, sp, #0
 801da56:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801da58:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
      }
 801da5c:	4618      	mov	r0, r3
 801da5e:	370c      	adds	r7, #12
 801da60:	46bd      	mov	sp, r7
 801da62:	f85d 7b04 	ldr.w	r7, [sp], #4
 801da66:	4770      	bx	lr

0801da68 <_ZSt12__niter_baseIP12sum_operatorET_S2_>:
    __niter_base(_Iterator __it)
 801da68:	b480      	push	{r7}
 801da6a:	b083      	sub	sp, #12
 801da6c:	af00      	add	r7, sp, #0
 801da6e:	6078      	str	r0, [r7, #4]
    { return __it; }
 801da70:	687b      	ldr	r3, [r7, #4]
 801da72:	4618      	mov	r0, r3
 801da74:	370c      	adds	r7, #12
 801da76:	46bd      	mov	sp, r7
 801da78:	f85d 7b04 	ldr.w	r7, [sp], #4
 801da7c:	4770      	bx	lr

0801da7e <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801da7e:	b580      	push	{r7, lr}
 801da80:	b086      	sub	sp, #24
 801da82:	af00      	add	r7, sp, #0
 801da84:	60f8      	str	r0, [r7, #12]
 801da86:	60b9      	str	r1, [r7, #8]
 801da88:	607a      	str	r2, [r7, #4]
 801da8a:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801da8c:	68ba      	ldr	r2, [r7, #8]
 801da8e:	68fb      	ldr	r3, [r7, #12]
 801da90:	1ad3      	subs	r3, r2, r3
 801da92:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801da94:	697b      	ldr	r3, [r7, #20]
 801da96:	2b00      	cmp	r3, #0
 801da98:	dd05      	ble.n	801daa6 <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x28>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801da9a:	697b      	ldr	r3, [r7, #20]
 801da9c:	461a      	mov	r2, r3
 801da9e:	68f9      	ldr	r1, [r7, #12]
 801daa0:	6878      	ldr	r0, [r7, #4]
 801daa2:	f006 fc3d 	bl	8024320 <memmove>
      return __result + __count;
 801daa6:	697b      	ldr	r3, [r7, #20]
 801daa8:	687a      	ldr	r2, [r7, #4]
 801daaa:	4413      	add	r3, r2
    }
 801daac:	4618      	mov	r0, r3
 801daae:	3718      	adds	r7, #24
 801dab0:	46bd      	mov	sp, r7
 801dab2:	bd80      	pop	{r7, pc}

0801dab4 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801dab4:	b580      	push	{r7, lr}
 801dab6:	b082      	sub	sp, #8
 801dab8:	af00      	add	r7, sp, #0
 801daba:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801dabc:	6878      	ldr	r0, [r7, #4]
 801dabe:	f000 f805 	bl	801dacc <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>
 801dac2:	4603      	mov	r3, r0
 801dac4:	4618      	mov	r0, r3
 801dac6:	3708      	adds	r7, #8
 801dac8:	46bd      	mov	sp, r7
 801daca:	bd80      	pop	{r7, pc}

0801dacc <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801dacc:	b480      	push	{r7}
 801dace:	b083      	sub	sp, #12
 801dad0:	af00      	add	r7, sp, #0
 801dad2:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801dad4:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801dad8:	4618      	mov	r0, r3
 801dada:	370c      	adds	r7, #12
 801dadc:	46bd      	mov	sp, r7
 801dade:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dae2:	4770      	bx	lr

0801dae4 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801dae4:	b480      	push	{r7}
 801dae6:	b083      	sub	sp, #12
 801dae8:	af00      	add	r7, sp, #0
 801daea:	6078      	str	r0, [r7, #4]
    { return __it; }
 801daec:	687b      	ldr	r3, [r7, #4]
 801daee:	4618      	mov	r0, r3
 801daf0:	370c      	adds	r7, #12
 801daf2:	46bd      	mov	sp, r7
 801daf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801daf8:	4770      	bx	lr

0801dafa <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801dafa:	b580      	push	{r7, lr}
 801dafc:	b086      	sub	sp, #24
 801dafe:	af00      	add	r7, sp, #0
 801db00:	60f8      	str	r0, [r7, #12]
 801db02:	60b9      	str	r1, [r7, #8]
 801db04:	607a      	str	r2, [r7, #4]
 801db06:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801db08:	68ba      	ldr	r2, [r7, #8]
 801db0a:	68fb      	ldr	r3, [r7, #12]
 801db0c:	1ad3      	subs	r3, r2, r3
 801db0e:	109b      	asrs	r3, r3, #2
 801db10:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801db12:	697b      	ldr	r3, [r7, #20]
 801db14:	2b00      	cmp	r3, #0
 801db16:	dd06      	ble.n	801db26 <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801db18:	697b      	ldr	r3, [r7, #20]
 801db1a:	009b      	lsls	r3, r3, #2
 801db1c:	461a      	mov	r2, r3
 801db1e:	68f9      	ldr	r1, [r7, #12]
 801db20:	6878      	ldr	r0, [r7, #4]
 801db22:	f006 fbfd 	bl	8024320 <memmove>
      return __result + __count;
 801db26:	697b      	ldr	r3, [r7, #20]
 801db28:	009b      	lsls	r3, r3, #2
 801db2a:	687a      	ldr	r2, [r7, #4]
 801db2c:	4413      	add	r3, r2
    }
 801db2e:	4618      	mov	r0, r3
 801db30:	3718      	adds	r7, #24
 801db32:	46bd      	mov	sp, r7
 801db34:	bd80      	pop	{r7, pc}

0801db36 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801db36:	b580      	push	{r7, lr}
 801db38:	b082      	sub	sp, #8
 801db3a:	af00      	add	r7, sp, #0
 801db3c:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801db3e:	6878      	ldr	r0, [r7, #4]
 801db40:	f000 f805 	bl	801db4e <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>
 801db44:	4603      	mov	r3, r0
 801db46:	4618      	mov	r0, r3
 801db48:	3708      	adds	r7, #8
 801db4a:	46bd      	mov	sp, r7
 801db4c:	bd80      	pop	{r7, pc}

0801db4e <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801db4e:	b480      	push	{r7}
 801db50:	b083      	sub	sp, #12
 801db52:	af00      	add	r7, sp, #0
 801db54:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801db56:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801db5a:	4618      	mov	r0, r3
 801db5c:	370c      	adds	r7, #12
 801db5e:	46bd      	mov	sp, r7
 801db60:	f85d 7b04 	ldr.w	r7, [sp], #4
 801db64:	4770      	bx	lr

0801db66 <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801db66:	b480      	push	{r7}
 801db68:	b083      	sub	sp, #12
 801db6a:	af00      	add	r7, sp, #0
 801db6c:	6078      	str	r0, [r7, #4]
    { return __it; }
 801db6e:	687b      	ldr	r3, [r7, #4]
 801db70:	4618      	mov	r0, r3
 801db72:	370c      	adds	r7, #12
 801db74:	46bd      	mov	sp, r7
 801db76:	f85d 7b04 	ldr.w	r7, [sp], #4
 801db7a:	4770      	bx	lr

0801db7c <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801db7c:	b580      	push	{r7, lr}
 801db7e:	b086      	sub	sp, #24
 801db80:	af00      	add	r7, sp, #0
 801db82:	60f8      	str	r0, [r7, #12]
 801db84:	60b9      	str	r1, [r7, #8]
 801db86:	607a      	str	r2, [r7, #4]
 801db88:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801db8a:	68ba      	ldr	r2, [r7, #8]
 801db8c:	68fb      	ldr	r3, [r7, #12]
 801db8e:	1ad3      	subs	r3, r2, r3
 801db90:	109b      	asrs	r3, r3, #2
 801db92:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801db94:	697b      	ldr	r3, [r7, #20]
 801db96:	2b00      	cmp	r3, #0
 801db98:	dd06      	ble.n	801dba8 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801db9a:	697b      	ldr	r3, [r7, #20]
 801db9c:	009b      	lsls	r3, r3, #2
 801db9e:	461a      	mov	r2, r3
 801dba0:	68f9      	ldr	r1, [r7, #12]
 801dba2:	6878      	ldr	r0, [r7, #4]
 801dba4:	f006 fbbc 	bl	8024320 <memmove>
      return __result + __count;
 801dba8:	697b      	ldr	r3, [r7, #20]
 801dbaa:	009b      	lsls	r3, r3, #2
 801dbac:	687a      	ldr	r2, [r7, #4]
 801dbae:	4413      	add	r3, r2
    }
 801dbb0:	4618      	mov	r0, r3
 801dbb2:	3718      	adds	r7, #24
 801dbb4:	46bd      	mov	sp, r7
 801dbb6:	bd80      	pop	{r7, pc}

0801dbb8 <_ZNSt16allocator_traitsISaIP14And_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801dbb8:	b580      	push	{r7, lr}
 801dbba:	b082      	sub	sp, #8
 801dbbc:	af00      	add	r7, sp, #0
 801dbbe:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801dbc0:	6878      	ldr	r0, [r7, #4]
 801dbc2:	f000 f805 	bl	801dbd0 <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>
 801dbc6:	4603      	mov	r3, r0
 801dbc8:	4618      	mov	r0, r3
 801dbca:	3708      	adds	r7, #8
 801dbcc:	46bd      	mov	sp, r7
 801dbce:	bd80      	pop	{r7, pc}

0801dbd0 <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801dbd0:	b480      	push	{r7}
 801dbd2:	b083      	sub	sp, #12
 801dbd4:	af00      	add	r7, sp, #0
 801dbd6:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801dbd8:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801dbdc:	4618      	mov	r0, r3
 801dbde:	370c      	adds	r7, #12
 801dbe0:	46bd      	mov	sp, r7
 801dbe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dbe6:	4770      	bx	lr

0801dbe8 <_ZSt12__niter_baseIPP14And_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801dbe8:	b480      	push	{r7}
 801dbea:	b083      	sub	sp, #12
 801dbec:	af00      	add	r7, sp, #0
 801dbee:	6078      	str	r0, [r7, #4]
    { return __it; }
 801dbf0:	687b      	ldr	r3, [r7, #4]
 801dbf2:	4618      	mov	r0, r3
 801dbf4:	370c      	adds	r7, #12
 801dbf6:	46bd      	mov	sp, r7
 801dbf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dbfc:	4770      	bx	lr

0801dbfe <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801dbfe:	b580      	push	{r7, lr}
 801dc00:	b086      	sub	sp, #24
 801dc02:	af00      	add	r7, sp, #0
 801dc04:	60f8      	str	r0, [r7, #12]
 801dc06:	60b9      	str	r1, [r7, #8]
 801dc08:	607a      	str	r2, [r7, #4]
 801dc0a:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801dc0c:	68ba      	ldr	r2, [r7, #8]
 801dc0e:	68fb      	ldr	r3, [r7, #12]
 801dc10:	1ad3      	subs	r3, r2, r3
 801dc12:	109b      	asrs	r3, r3, #2
 801dc14:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801dc16:	697b      	ldr	r3, [r7, #20]
 801dc18:	2b00      	cmp	r3, #0
 801dc1a:	dd06      	ble.n	801dc2a <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801dc1c:	697b      	ldr	r3, [r7, #20]
 801dc1e:	009b      	lsls	r3, r3, #2
 801dc20:	461a      	mov	r2, r3
 801dc22:	68f9      	ldr	r1, [r7, #12]
 801dc24:	6878      	ldr	r0, [r7, #4]
 801dc26:	f006 fb7b 	bl	8024320 <memmove>
      return __result + __count;
 801dc2a:	697b      	ldr	r3, [r7, #20]
 801dc2c:	009b      	lsls	r3, r3, #2
 801dc2e:	687a      	ldr	r2, [r7, #4]
 801dc30:	4413      	add	r3, r2
    }
 801dc32:	4618      	mov	r0, r3
 801dc34:	3718      	adds	r7, #24
 801dc36:	46bd      	mov	sp, r7
 801dc38:	bd80      	pop	{r7, pc}
	...

0801dc3c <_Z41__static_initialization_and_destruction_0ii>:
 801dc3c:	b590      	push	{r4, r7, lr}
 801dc3e:	b0e7      	sub	sp, #412	; 0x19c
 801dc40:	af02      	add	r7, sp, #8
 801dc42:	1d3b      	adds	r3, r7, #4
 801dc44:	6018      	str	r0, [r3, #0]
 801dc46:	463b      	mov	r3, r7
 801dc48:	6019      	str	r1, [r3, #0]
 801dc4a:	1d3b      	adds	r3, r7, #4
 801dc4c:	681b      	ldr	r3, [r3, #0]
 801dc4e:	2b01      	cmp	r3, #1
 801dc50:	f040 819d 	bne.w	801df8e <_Z41__static_initialization_and_destruction_0ii+0x352>
 801dc54:	463b      	mov	r3, r7
 801dc56:	681b      	ldr	r3, [r3, #0]
 801dc58:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801dc5c:	4293      	cmp	r3, r2
 801dc5e:	f040 8196 	bne.w	801df8e <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801dc62:	f107 0314 	add.w	r3, r7, #20
 801dc66:	4618      	mov	r0, r3
 801dc68:	2322      	movs	r3, #34	; 0x22
 801dc6a:	461a      	mov	r2, r3
 801dc6c:	2100      	movs	r1, #0
 801dc6e:	f006 fb71 	bl	8024354 <memset>
 801dc72:	f107 0314 	add.w	r3, r7, #20
 801dc76:	223a      	movs	r2, #58	; 0x3a
 801dc78:	701a      	strb	r2, [r3, #0]
 801dc7a:	f107 0314 	add.w	r3, r7, #20
 801dc7e:	2201      	movs	r2, #1
 801dc80:	705a      	strb	r2, [r3, #1]
 801dc82:	f107 0314 	add.w	r3, r7, #20
 801dc86:	220a      	movs	r2, #10
 801dc88:	709a      	strb	r2, [r3, #2]
 801dc8a:	f107 0314 	add.w	r3, r7, #20
 801dc8e:	220a      	movs	r2, #10
 801dc90:	70da      	strb	r2, [r3, #3]
 801dc92:	f107 0314 	add.w	r3, r7, #20
 801dc96:	222c      	movs	r2, #44	; 0x2c
 801dc98:	711a      	strb	r2, [r3, #4]
 801dc9a:	f107 0314 	add.w	r3, r7, #20
 801dc9e:	220c      	movs	r2, #12
 801dca0:	715a      	strb	r2, [r3, #5]
 801dca2:	f107 0314 	add.w	r3, r7, #20
 801dca6:	222e      	movs	r2, #46	; 0x2e
 801dca8:	719a      	strb	r2, [r3, #6]
 801dcaa:	f107 0314 	add.w	r3, r7, #20
 801dcae:	220b      	movs	r2, #11
 801dcb0:	71da      	strb	r2, [r3, #7]
 801dcb2:	f107 0314 	add.w	r3, r7, #20
 801dcb6:	225b      	movs	r2, #91	; 0x5b
 801dcb8:	721a      	strb	r2, [r3, #8]
 801dcba:	f107 0314 	add.w	r3, r7, #20
 801dcbe:	220d      	movs	r2, #13
 801dcc0:	725a      	strb	r2, [r3, #9]
 801dcc2:	f107 0314 	add.w	r3, r7, #20
 801dcc6:	225d      	movs	r2, #93	; 0x5d
 801dcc8:	729a      	strb	r2, [r3, #10]
 801dcca:	f107 0314 	add.w	r3, r7, #20
 801dcce:	220e      	movs	r2, #14
 801dcd0:	72da      	strb	r2, [r3, #11]
 801dcd2:	f107 0314 	add.w	r3, r7, #20
 801dcd6:	227c      	movs	r2, #124	; 0x7c
 801dcd8:	731a      	strb	r2, [r3, #12]
 801dcda:	f107 0314 	add.w	r3, r7, #20
 801dcde:	2215      	movs	r2, #21
 801dce0:	735a      	strb	r2, [r3, #13]
 801dce2:	f107 0314 	add.w	r3, r7, #20
 801dce6:	2226      	movs	r2, #38	; 0x26
 801dce8:	739a      	strb	r2, [r3, #14]
 801dcea:	f107 0314 	add.w	r3, r7, #20
 801dcee:	2216      	movs	r2, #22
 801dcf0:	73da      	strb	r2, [r3, #15]
 801dcf2:	f107 0314 	add.w	r3, r7, #20
 801dcf6:	222b      	movs	r2, #43	; 0x2b
 801dcf8:	741a      	strb	r2, [r3, #16]
 801dcfa:	f107 0314 	add.w	r3, r7, #20
 801dcfe:	221f      	movs	r2, #31
 801dd00:	745a      	strb	r2, [r3, #17]
 801dd02:	f107 0314 	add.w	r3, r7, #20
 801dd06:	222d      	movs	r2, #45	; 0x2d
 801dd08:	749a      	strb	r2, [r3, #18]
 801dd0a:	f107 0314 	add.w	r3, r7, #20
 801dd0e:	2220      	movs	r2, #32
 801dd10:	74da      	strb	r2, [r3, #19]
 801dd12:	f107 0314 	add.w	r3, r7, #20
 801dd16:	222a      	movs	r2, #42	; 0x2a
 801dd18:	751a      	strb	r2, [r3, #20]
 801dd1a:	f107 0314 	add.w	r3, r7, #20
 801dd1e:	2221      	movs	r2, #33	; 0x21
 801dd20:	755a      	strb	r2, [r3, #21]
 801dd22:	f107 0314 	add.w	r3, r7, #20
 801dd26:	222f      	movs	r2, #47	; 0x2f
 801dd28:	759a      	strb	r2, [r3, #22]
 801dd2a:	f107 0314 	add.w	r3, r7, #20
 801dd2e:	2222      	movs	r2, #34	; 0x22
 801dd30:	75da      	strb	r2, [r3, #23]
 801dd32:	f107 0314 	add.w	r3, r7, #20
 801dd36:	225e      	movs	r2, #94	; 0x5e
 801dd38:	761a      	strb	r2, [r3, #24]
 801dd3a:	f107 0314 	add.w	r3, r7, #20
 801dd3e:	2223      	movs	r2, #35	; 0x23
 801dd40:	765a      	strb	r2, [r3, #25]
 801dd42:	f107 0314 	add.w	r3, r7, #20
 801dd46:	2225      	movs	r2, #37	; 0x25
 801dd48:	769a      	strb	r2, [r3, #26]
 801dd4a:	f107 0314 	add.w	r3, r7, #20
 801dd4e:	2224      	movs	r2, #36	; 0x24
 801dd50:	76da      	strb	r2, [r3, #27]
 801dd52:	f107 0314 	add.w	r3, r7, #20
 801dd56:	2228      	movs	r2, #40	; 0x28
 801dd58:	771a      	strb	r2, [r3, #28]
 801dd5a:	f107 0314 	add.w	r3, r7, #20
 801dd5e:	2226      	movs	r2, #38	; 0x26
 801dd60:	775a      	strb	r2, [r3, #29]
 801dd62:	f107 0314 	add.w	r3, r7, #20
 801dd66:	2229      	movs	r2, #41	; 0x29
 801dd68:	779a      	strb	r2, [r3, #30]
 801dd6a:	f107 0314 	add.w	r3, r7, #20
 801dd6e:	2227      	movs	r2, #39	; 0x27
 801dd70:	77da      	strb	r2, [r3, #31]
 801dd72:	f107 0314 	add.w	r3, r7, #20
 801dd76:	2225      	movs	r2, #37	; 0x25
 801dd78:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801dd7c:	f107 030c 	add.w	r3, r7, #12
 801dd80:	f107 0214 	add.w	r2, r7, #20
 801dd84:	601a      	str	r2, [r3, #0]
 801dd86:	f107 030c 	add.w	r3, r7, #12
 801dd8a:	2211      	movs	r2, #17
 801dd8c:	605a      	str	r2, [r3, #4]
 801dd8e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801dd92:	4618      	mov	r0, r3
 801dd94:	f7e3 faa6 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801dd98:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801dd9c:	f107 020c 	add.w	r2, r7, #12
 801dda0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801dda4:	9300      	str	r3, [sp, #0]
 801dda6:	460b      	mov	r3, r1
 801dda8:	ca06      	ldmia	r2, {r1, r2}
 801ddaa:	4885      	ldr	r0, [pc, #532]	; (801dfc0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801ddac:	f7e3 fab2 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801ddb0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801ddb4:	4618      	mov	r0, r3
 801ddb6:	f7e3 faa1 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801ddba:	2305      	movs	r3, #5
 801ddbc:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801ddc0:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801ddc4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ddc8:	497e      	ldr	r1, [pc, #504]	; (801dfc4 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801ddca:	4618      	mov	r0, r3
 801ddcc:	f7e3 f98e 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801ddd0:	2306      	movs	r3, #6
 801ddd2:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801ddd6:	f207 1263 	addw	r2, r7, #355	; 0x163
 801ddda:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ddde:	331c      	adds	r3, #28
 801dde0:	4979      	ldr	r1, [pc, #484]	; (801dfc8 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801dde2:	4618      	mov	r0, r3
 801dde4:	f7e3 f9aa 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801dde8:	2307      	movs	r3, #7
 801ddea:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801ddee:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801ddf2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ddf6:	3338      	adds	r3, #56	; 0x38
 801ddf8:	4974      	ldr	r1, [pc, #464]	; (801dfcc <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801ddfa:	4618      	mov	r0, r3
 801ddfc:	f7e3 f99e 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801de00:	2308      	movs	r3, #8
 801de02:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801de06:	f207 1265 	addw	r2, r7, #357	; 0x165
 801de0a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de0e:	3354      	adds	r3, #84	; 0x54
 801de10:	496f      	ldr	r1, [pc, #444]	; (801dfd0 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801de12:	4618      	mov	r0, r3
 801de14:	f7e3 f96a 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801de18:	2309      	movs	r3, #9
 801de1a:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801de1e:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801de22:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de26:	3370      	adds	r3, #112	; 0x70
 801de28:	496a      	ldr	r1, [pc, #424]	; (801dfd4 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801de2a:	4618      	mov	r0, r3
 801de2c:	f7e3 f9ae 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801de30:	2310      	movs	r3, #16
 801de32:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801de36:	f207 1267 	addw	r2, r7, #359	; 0x167
 801de3a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de3e:	338c      	adds	r3, #140	; 0x8c
 801de40:	4965      	ldr	r1, [pc, #404]	; (801dfd8 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801de42:	4618      	mov	r0, r3
 801de44:	f7e3 f9ca 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801de48:	2311      	movs	r3, #17
 801de4a:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801de4e:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801de52:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de56:	33a8      	adds	r3, #168	; 0xa8
 801de58:	4960      	ldr	r1, [pc, #384]	; (801dfdc <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801de5a:	4618      	mov	r0, r3
 801de5c:	f7e3 f996 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801de60:	2312      	movs	r3, #18
 801de62:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801de66:	f207 1269 	addw	r2, r7, #361	; 0x169
 801de6a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de6e:	33c4      	adds	r3, #196	; 0xc4
 801de70:	495b      	ldr	r1, [pc, #364]	; (801dfe0 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801de72:	4618      	mov	r0, r3
 801de74:	f7e3 f93a 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801de78:	2313      	movs	r3, #19
 801de7a:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801de7e:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801de82:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de86:	33e0      	adds	r3, #224	; 0xe0
 801de88:	4956      	ldr	r1, [pc, #344]	; (801dfe4 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801de8a:	4618      	mov	r0, r3
 801de8c:	f7e3 f956 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801de90:	2314      	movs	r3, #20
 801de92:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801de96:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801de9a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de9e:	33fc      	adds	r3, #252	; 0xfc
 801dea0:	4951      	ldr	r1, [pc, #324]	; (801dfe8 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801dea2:	4618      	mov	r0, r3
 801dea4:	f7e3 f9c2 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801dea8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801deac:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801deb0:	601a      	str	r2, [r3, #0]
 801deb2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801deb6:	220a      	movs	r2, #10
 801deb8:	605a      	str	r2, [r3, #4]
 801deba:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801debe:	4618      	mov	r0, r3
 801dec0:	f7e3 fab5 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801dec4:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801dec8:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801decc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801ded0:	9300      	str	r3, [sp, #0]
 801ded2:	460b      	mov	r3, r1
 801ded4:	ca06      	ldmia	r2, {r1, r2}
 801ded6:	4845      	ldr	r0, [pc, #276]	; (801dfec <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801ded8:	f7e3 fac1 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801dedc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801dee0:	4618      	mov	r0, r3
 801dee2:	f7e3 fab0 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801dee6:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801deea:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801deee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801def2:	429c      	cmp	r4, r3
 801def4:	d004      	beq.n	801df00 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801def6:	3c1c      	subs	r4, #28
 801def8:	4620      	mov	r0, r4
 801defa:	f7e3 f8ea 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801defe:	e7f6      	b.n	801deee <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801df00:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801df04:	2200      	movs	r2, #0
 801df06:	601a      	str	r2, [r3, #0]
 801df08:	605a      	str	r2, [r3, #4]
 801df0a:	609a      	str	r2, [r3, #8]
 801df0c:	233c      	movs	r3, #60	; 0x3c
 801df0e:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801df12:	231b      	movs	r3, #27
 801df14:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801df18:	231c      	movs	r3, #28
 801df1a:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801df1e:	233e      	movs	r3, #62	; 0x3e
 801df20:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801df24:	2319      	movs	r3, #25
 801df26:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801df2a:	231a      	movs	r3, #26
 801df2c:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801df30:	233d      	movs	r3, #61	; 0x3d
 801df32:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801df36:	2318      	movs	r3, #24
 801df38:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801df3c:	231d      	movs	r3, #29
 801df3e:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801df42:	2321      	movs	r3, #33	; 0x21
 801df44:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801df48:	2317      	movs	r3, #23
 801df4a:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801df4e:	231e      	movs	r3, #30
 801df50:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801df54:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801df58:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801df5c:	2304      	movs	r3, #4
 801df5e:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801df62:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801df66:	4618      	mov	r0, r3
 801df68:	f7e3 faa9 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801df6c:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801df70:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801df74:	9300      	str	r3, [sp, #0]
 801df76:	4613      	mov	r3, r2
 801df78:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801df7c:	ca06      	ldmia	r2, {r1, r2}
 801df7e:	481c      	ldr	r0, [pc, #112]	; (801dff0 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801df80:	f7e3 fab5 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801df84:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801df88:	4618      	mov	r0, r3
 801df8a:	f7e3 faa4 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801df8e:	1d3b      	adds	r3, r7, #4
 801df90:	681b      	ldr	r3, [r3, #0]
 801df92:	2b00      	cmp	r3, #0
 801df94:	d10e      	bne.n	801dfb4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801df96:	463b      	mov	r3, r7
 801df98:	681b      	ldr	r3, [r3, #0]
 801df9a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801df9e:	4293      	cmp	r3, r2
 801dfa0:	d108      	bne.n	801dfb4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801dfa2:	4813      	ldr	r0, [pc, #76]	; (801dff0 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801dfa4:	f7e5 fefc 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801dfa8:	4810      	ldr	r0, [pc, #64]	; (801dfec <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801dfaa:	f7e5 ff06 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801dfae:	4804      	ldr	r0, [pc, #16]	; (801dfc0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801dfb0:	f7e5 ff10 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801dfb4:	bf00      	nop
 801dfb6:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801dfba:	46bd      	mov	sp, r7
 801dfbc:	bd90      	pop	{r4, r7, pc}
 801dfbe:	bf00      	nop
 801dfc0:	200004ec 	.word	0x200004ec
 801dfc4:	08027c08 	.word	0x08027c08
 801dfc8:	08027c10 	.word	0x08027c10
 801dfcc:	08027c18 	.word	0x08027c18
 801dfd0:	08027c20 	.word	0x08027c20
 801dfd4:	08027c28 	.word	0x08027c28
 801dfd8:	08027c30 	.word	0x08027c30
 801dfdc:	08027c34 	.word	0x08027c34
 801dfe0:	08027c3c 	.word	0x08027c3c
 801dfe4:	08027c44 	.word	0x08027c44
 801dfe8:	08027c4c 	.word	0x08027c4c
 801dfec:	20000504 	.word	0x20000504
 801dff0:	2000051c 	.word	0x2000051c

0801dff4 <_GLOBAL__sub_I__ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
 801dff4:	b580      	push	{r7, lr}
 801dff6:	af00      	add	r7, sp, #0
 801dff8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801dffc:	2001      	movs	r0, #1
 801dffe:	f7ff fe1d 	bl	801dc3c <_Z41__static_initialization_and_destruction_0ii>
 801e002:	bd80      	pop	{r7, pc}

0801e004 <_GLOBAL__sub_D__ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
 801e004:	b580      	push	{r7, lr}
 801e006:	af00      	add	r7, sp, #0
 801e008:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e00c:	2000      	movs	r0, #0
 801e00e:	f7ff fe15 	bl	801dc3c <_Z41__static_initialization_and_destruction_0ii>
 801e012:	bd80      	pop	{r7, pc}

0801e014 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 801e014:	b580      	push	{r7, lr}
 801e016:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 801e018:	f002 f9a9 	bl	802036e <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 801e01c:	f000 f80a 	bl	801e034 <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 801e020:	f000 f8e0 	bl	801e1e4 <_ZL12MX_GPIO_Initv>
  MX_USART1_UART_Init();
 801e024:	f000 f8aa 	bl	801e17c <_ZL19MX_USART1_UART_Initv>
  /* USER CODE BEGIN 2 */
  my_main_run(&huart1);
 801e028:	4801      	ldr	r0, [pc, #4]	; (801e030 <main+0x1c>)
 801e02a:	f000 faf3 	bl	801e614 <_Z11my_main_runP20__UART_HandleTypeDef>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 801e02e:	e7fe      	b.n	801e02e <main+0x1a>
 801e030:	2000057c 	.word	0x2000057c

0801e034 <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 801e034:	b580      	push	{r7, lr}
 801e036:	b0b4      	sub	sp, #208	; 0xd0
 801e038:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 801e03a:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801e03e:	2230      	movs	r2, #48	; 0x30
 801e040:	2100      	movs	r1, #0
 801e042:	4618      	mov	r0, r3
 801e044:	f006 f986 	bl	8024354 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 801e048:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 801e04c:	2200      	movs	r2, #0
 801e04e:	601a      	str	r2, [r3, #0]
 801e050:	605a      	str	r2, [r3, #4]
 801e052:	609a      	str	r2, [r3, #8]
 801e054:	60da      	str	r2, [r3, #12]
 801e056:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 801e058:	f107 0308 	add.w	r3, r7, #8
 801e05c:	2284      	movs	r2, #132	; 0x84
 801e05e:	2100      	movs	r1, #0
 801e060:	4618      	mov	r0, r3
 801e062:	f006 f977 	bl	8024354 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 801e066:	4b43      	ldr	r3, [pc, #268]	; (801e174 <_Z18SystemClock_Configv+0x140>)
 801e068:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e06a:	4a42      	ldr	r2, [pc, #264]	; (801e174 <_Z18SystemClock_Configv+0x140>)
 801e06c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801e070:	6413      	str	r3, [r2, #64]	; 0x40
 801e072:	4b40      	ldr	r3, [pc, #256]	; (801e174 <_Z18SystemClock_Configv+0x140>)
 801e074:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e076:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801e07a:	607b      	str	r3, [r7, #4]
 801e07c:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 801e07e:	4b3e      	ldr	r3, [pc, #248]	; (801e178 <_Z18SystemClock_Configv+0x144>)
 801e080:	681b      	ldr	r3, [r3, #0]
 801e082:	4a3d      	ldr	r2, [pc, #244]	; (801e178 <_Z18SystemClock_Configv+0x144>)
 801e084:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 801e088:	6013      	str	r3, [r2, #0]
 801e08a:	4b3b      	ldr	r3, [pc, #236]	; (801e178 <_Z18SystemClock_Configv+0x144>)
 801e08c:	681b      	ldr	r3, [r3, #0]
 801e08e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 801e092:	603b      	str	r3, [r7, #0]
 801e094:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 801e096:	2302      	movs	r3, #2
 801e098:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 801e09c:	2301      	movs	r3, #1
 801e09e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 801e0a2:	2310      	movs	r3, #16
 801e0a4:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 801e0a8:	2302      	movs	r3, #2
 801e0aa:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 801e0ae:	2300      	movs	r3, #0
 801e0b0:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  RCC_OscInitStruct.PLL.PLLM = 8;
 801e0b4:	2308      	movs	r3, #8
 801e0b6:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
  RCC_OscInitStruct.PLL.PLLN = 216;
 801e0ba:	23d8      	movs	r3, #216	; 0xd8
 801e0bc:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 801e0c0:	2302      	movs	r3, #2
 801e0c2:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
  RCC_OscInitStruct.PLL.PLLQ = 2;
 801e0c6:	2302      	movs	r3, #2
 801e0c8:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 801e0cc:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801e0d0:	4618      	mov	r0, r3
 801e0d2:	f002 fd6d 	bl	8020bb0 <HAL_RCC_OscConfig>
 801e0d6:	4603      	mov	r3, r0
 801e0d8:	2b00      	cmp	r3, #0
 801e0da:	bf14      	ite	ne
 801e0dc:	2301      	movne	r3, #1
 801e0de:	2300      	moveq	r3, #0
 801e0e0:	b2db      	uxtb	r3, r3
 801e0e2:	2b00      	cmp	r3, #0
 801e0e4:	d001      	beq.n	801e0ea <_Z18SystemClock_Configv+0xb6>
  {
    Error_Handler();
 801e0e6:	f000 f895 	bl	801e214 <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 801e0ea:	f002 fd11 	bl	8020b10 <HAL_PWREx_EnableOverDrive>
 801e0ee:	4603      	mov	r3, r0
 801e0f0:	2b00      	cmp	r3, #0
 801e0f2:	bf14      	ite	ne
 801e0f4:	2301      	movne	r3, #1
 801e0f6:	2300      	moveq	r3, #0
 801e0f8:	b2db      	uxtb	r3, r3
 801e0fa:	2b00      	cmp	r3, #0
 801e0fc:	d001      	beq.n	801e102 <_Z18SystemClock_Configv+0xce>
  {
    Error_Handler();
 801e0fe:	f000 f889 	bl	801e214 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 801e102:	230f      	movs	r3, #15
 801e104:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 801e108:	2302      	movs	r3, #2
 801e10a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 801e10e:	2300      	movs	r3, #0
 801e110:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 801e114:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 801e118:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 801e11c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801e120:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 801e124:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 801e128:	2107      	movs	r1, #7
 801e12a:	4618      	mov	r0, r3
 801e12c:	f002 ffe4 	bl	80210f8 <HAL_RCC_ClockConfig>
 801e130:	4603      	mov	r3, r0
 801e132:	2b00      	cmp	r3, #0
 801e134:	bf14      	ite	ne
 801e136:	2301      	movne	r3, #1
 801e138:	2300      	moveq	r3, #0
 801e13a:	b2db      	uxtb	r3, r3
 801e13c:	2b00      	cmp	r3, #0
 801e13e:	d001      	beq.n	801e144 <_Z18SystemClock_Configv+0x110>
  {
    Error_Handler();
 801e140:	f000 f868 	bl	801e214 <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 801e144:	2340      	movs	r3, #64	; 0x40
 801e146:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 801e148:	2300      	movs	r3, #0
 801e14a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 801e14c:	f107 0308 	add.w	r3, r7, #8
 801e150:	4618      	mov	r0, r3
 801e152:	f003 f9a7 	bl	80214a4 <HAL_RCCEx_PeriphCLKConfig>
 801e156:	4603      	mov	r3, r0
 801e158:	2b00      	cmp	r3, #0
 801e15a:	bf14      	ite	ne
 801e15c:	2301      	movne	r3, #1
 801e15e:	2300      	moveq	r3, #0
 801e160:	b2db      	uxtb	r3, r3
 801e162:	2b00      	cmp	r3, #0
 801e164:	d001      	beq.n	801e16a <_Z18SystemClock_Configv+0x136>
  {
    Error_Handler();
 801e166:	f000 f855 	bl	801e214 <Error_Handler>
  }
}
 801e16a:	bf00      	nop
 801e16c:	37d0      	adds	r7, #208	; 0xd0
 801e16e:	46bd      	mov	sp, r7
 801e170:	bd80      	pop	{r7, pc}
 801e172:	bf00      	nop
 801e174:	40023800 	.word	0x40023800
 801e178:	40007000 	.word	0x40007000

0801e17c <_ZL19MX_USART1_UART_Initv>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 801e17c:	b580      	push	{r7, lr}
 801e17e:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 801e180:	4b16      	ldr	r3, [pc, #88]	; (801e1dc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e182:	4a17      	ldr	r2, [pc, #92]	; (801e1e0 <_ZL19MX_USART1_UART_Initv+0x64>)
 801e184:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 801e186:	4b15      	ldr	r3, [pc, #84]	; (801e1dc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e188:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 801e18c:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 801e18e:	4b13      	ldr	r3, [pc, #76]	; (801e1dc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e190:	2200      	movs	r2, #0
 801e192:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 801e194:	4b11      	ldr	r3, [pc, #68]	; (801e1dc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e196:	2200      	movs	r2, #0
 801e198:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 801e19a:	4b10      	ldr	r3, [pc, #64]	; (801e1dc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e19c:	2200      	movs	r2, #0
 801e19e:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 801e1a0:	4b0e      	ldr	r3, [pc, #56]	; (801e1dc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e1a2:	220c      	movs	r2, #12
 801e1a4:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 801e1a6:	4b0d      	ldr	r3, [pc, #52]	; (801e1dc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e1a8:	2200      	movs	r2, #0
 801e1aa:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 801e1ac:	4b0b      	ldr	r3, [pc, #44]	; (801e1dc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e1ae:	2200      	movs	r2, #0
 801e1b0:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 801e1b2:	4b0a      	ldr	r3, [pc, #40]	; (801e1dc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e1b4:	2200      	movs	r2, #0
 801e1b6:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 801e1b8:	4b08      	ldr	r3, [pc, #32]	; (801e1dc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e1ba:	2200      	movs	r2, #0
 801e1bc:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 801e1be:	4807      	ldr	r0, [pc, #28]	; (801e1dc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e1c0:	f003 fd60 	bl	8021c84 <HAL_UART_Init>
 801e1c4:	4603      	mov	r3, r0
 801e1c6:	2b00      	cmp	r3, #0
 801e1c8:	bf14      	ite	ne
 801e1ca:	2301      	movne	r3, #1
 801e1cc:	2300      	moveq	r3, #0
 801e1ce:	b2db      	uxtb	r3, r3
 801e1d0:	2b00      	cmp	r3, #0
 801e1d2:	d001      	beq.n	801e1d8 <_ZL19MX_USART1_UART_Initv+0x5c>
  {
    Error_Handler();
 801e1d4:	f000 f81e 	bl	801e214 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 801e1d8:	bf00      	nop
 801e1da:	bd80      	pop	{r7, pc}
 801e1dc:	2000057c 	.word	0x2000057c
 801e1e0:	40011000 	.word	0x40011000

0801e1e4 <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 801e1e4:	b480      	push	{r7}
 801e1e6:	b083      	sub	sp, #12
 801e1e8:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 801e1ea:	4b09      	ldr	r3, [pc, #36]	; (801e210 <_ZL12MX_GPIO_Initv+0x2c>)
 801e1ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e1ee:	4a08      	ldr	r2, [pc, #32]	; (801e210 <_ZL12MX_GPIO_Initv+0x2c>)
 801e1f0:	f043 0301 	orr.w	r3, r3, #1
 801e1f4:	6313      	str	r3, [r2, #48]	; 0x30
 801e1f6:	4b06      	ldr	r3, [pc, #24]	; (801e210 <_ZL12MX_GPIO_Initv+0x2c>)
 801e1f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e1fa:	f003 0301 	and.w	r3, r3, #1
 801e1fe:	607b      	str	r3, [r7, #4]
 801e200:	687b      	ldr	r3, [r7, #4]

}
 801e202:	bf00      	nop
 801e204:	370c      	adds	r7, #12
 801e206:	46bd      	mov	sp, r7
 801e208:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e20c:	4770      	bx	lr
 801e20e:	bf00      	nop
 801e210:	40023800 	.word	0x40023800

0801e214 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 801e214:	b480      	push	{r7}
 801e216:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 801e218:	b672      	cpsid	i
}
 801e21a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 801e21c:	e7fe      	b.n	801e21c <Error_Handler+0x8>
	...

0801e220 <_Z41__static_initialization_and_destruction_0ii>:
  {
  }
  /* USER CODE END Error_Handler_Debug */
}
 801e220:	b590      	push	{r4, r7, lr}
 801e222:	b0e7      	sub	sp, #412	; 0x19c
 801e224:	af02      	add	r7, sp, #8
 801e226:	1d3b      	adds	r3, r7, #4
 801e228:	6018      	str	r0, [r3, #0]
 801e22a:	463b      	mov	r3, r7
 801e22c:	6019      	str	r1, [r3, #0]
 801e22e:	1d3b      	adds	r3, r7, #4
 801e230:	681b      	ldr	r3, [r3, #0]
 801e232:	2b01      	cmp	r3, #1
 801e234:	f040 819d 	bne.w	801e572 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801e238:	463b      	mov	r3, r7
 801e23a:	681b      	ldr	r3, [r3, #0]
 801e23c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e240:	4293      	cmp	r3, r2
 801e242:	f040 8196 	bne.w	801e572 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801e246:	f107 0314 	add.w	r3, r7, #20
 801e24a:	4618      	mov	r0, r3
 801e24c:	2322      	movs	r3, #34	; 0x22
 801e24e:	461a      	mov	r2, r3
 801e250:	2100      	movs	r1, #0
 801e252:	f006 f87f 	bl	8024354 <memset>
 801e256:	f107 0314 	add.w	r3, r7, #20
 801e25a:	223a      	movs	r2, #58	; 0x3a
 801e25c:	701a      	strb	r2, [r3, #0]
 801e25e:	f107 0314 	add.w	r3, r7, #20
 801e262:	2201      	movs	r2, #1
 801e264:	705a      	strb	r2, [r3, #1]
 801e266:	f107 0314 	add.w	r3, r7, #20
 801e26a:	220a      	movs	r2, #10
 801e26c:	709a      	strb	r2, [r3, #2]
 801e26e:	f107 0314 	add.w	r3, r7, #20
 801e272:	220a      	movs	r2, #10
 801e274:	70da      	strb	r2, [r3, #3]
 801e276:	f107 0314 	add.w	r3, r7, #20
 801e27a:	222c      	movs	r2, #44	; 0x2c
 801e27c:	711a      	strb	r2, [r3, #4]
 801e27e:	f107 0314 	add.w	r3, r7, #20
 801e282:	220c      	movs	r2, #12
 801e284:	715a      	strb	r2, [r3, #5]
 801e286:	f107 0314 	add.w	r3, r7, #20
 801e28a:	222e      	movs	r2, #46	; 0x2e
 801e28c:	719a      	strb	r2, [r3, #6]
 801e28e:	f107 0314 	add.w	r3, r7, #20
 801e292:	220b      	movs	r2, #11
 801e294:	71da      	strb	r2, [r3, #7]
 801e296:	f107 0314 	add.w	r3, r7, #20
 801e29a:	225b      	movs	r2, #91	; 0x5b
 801e29c:	721a      	strb	r2, [r3, #8]
 801e29e:	f107 0314 	add.w	r3, r7, #20
 801e2a2:	220d      	movs	r2, #13
 801e2a4:	725a      	strb	r2, [r3, #9]
 801e2a6:	f107 0314 	add.w	r3, r7, #20
 801e2aa:	225d      	movs	r2, #93	; 0x5d
 801e2ac:	729a      	strb	r2, [r3, #10]
 801e2ae:	f107 0314 	add.w	r3, r7, #20
 801e2b2:	220e      	movs	r2, #14
 801e2b4:	72da      	strb	r2, [r3, #11]
 801e2b6:	f107 0314 	add.w	r3, r7, #20
 801e2ba:	227c      	movs	r2, #124	; 0x7c
 801e2bc:	731a      	strb	r2, [r3, #12]
 801e2be:	f107 0314 	add.w	r3, r7, #20
 801e2c2:	2215      	movs	r2, #21
 801e2c4:	735a      	strb	r2, [r3, #13]
 801e2c6:	f107 0314 	add.w	r3, r7, #20
 801e2ca:	2226      	movs	r2, #38	; 0x26
 801e2cc:	739a      	strb	r2, [r3, #14]
 801e2ce:	f107 0314 	add.w	r3, r7, #20
 801e2d2:	2216      	movs	r2, #22
 801e2d4:	73da      	strb	r2, [r3, #15]
 801e2d6:	f107 0314 	add.w	r3, r7, #20
 801e2da:	222b      	movs	r2, #43	; 0x2b
 801e2dc:	741a      	strb	r2, [r3, #16]
 801e2de:	f107 0314 	add.w	r3, r7, #20
 801e2e2:	221f      	movs	r2, #31
 801e2e4:	745a      	strb	r2, [r3, #17]
 801e2e6:	f107 0314 	add.w	r3, r7, #20
 801e2ea:	222d      	movs	r2, #45	; 0x2d
 801e2ec:	749a      	strb	r2, [r3, #18]
 801e2ee:	f107 0314 	add.w	r3, r7, #20
 801e2f2:	2220      	movs	r2, #32
 801e2f4:	74da      	strb	r2, [r3, #19]
 801e2f6:	f107 0314 	add.w	r3, r7, #20
 801e2fa:	222a      	movs	r2, #42	; 0x2a
 801e2fc:	751a      	strb	r2, [r3, #20]
 801e2fe:	f107 0314 	add.w	r3, r7, #20
 801e302:	2221      	movs	r2, #33	; 0x21
 801e304:	755a      	strb	r2, [r3, #21]
 801e306:	f107 0314 	add.w	r3, r7, #20
 801e30a:	222f      	movs	r2, #47	; 0x2f
 801e30c:	759a      	strb	r2, [r3, #22]
 801e30e:	f107 0314 	add.w	r3, r7, #20
 801e312:	2222      	movs	r2, #34	; 0x22
 801e314:	75da      	strb	r2, [r3, #23]
 801e316:	f107 0314 	add.w	r3, r7, #20
 801e31a:	225e      	movs	r2, #94	; 0x5e
 801e31c:	761a      	strb	r2, [r3, #24]
 801e31e:	f107 0314 	add.w	r3, r7, #20
 801e322:	2223      	movs	r2, #35	; 0x23
 801e324:	765a      	strb	r2, [r3, #25]
 801e326:	f107 0314 	add.w	r3, r7, #20
 801e32a:	2225      	movs	r2, #37	; 0x25
 801e32c:	769a      	strb	r2, [r3, #26]
 801e32e:	f107 0314 	add.w	r3, r7, #20
 801e332:	2224      	movs	r2, #36	; 0x24
 801e334:	76da      	strb	r2, [r3, #27]
 801e336:	f107 0314 	add.w	r3, r7, #20
 801e33a:	2228      	movs	r2, #40	; 0x28
 801e33c:	771a      	strb	r2, [r3, #28]
 801e33e:	f107 0314 	add.w	r3, r7, #20
 801e342:	2226      	movs	r2, #38	; 0x26
 801e344:	775a      	strb	r2, [r3, #29]
 801e346:	f107 0314 	add.w	r3, r7, #20
 801e34a:	2229      	movs	r2, #41	; 0x29
 801e34c:	779a      	strb	r2, [r3, #30]
 801e34e:	f107 0314 	add.w	r3, r7, #20
 801e352:	2227      	movs	r2, #39	; 0x27
 801e354:	77da      	strb	r2, [r3, #31]
 801e356:	f107 0314 	add.w	r3, r7, #20
 801e35a:	2225      	movs	r2, #37	; 0x25
 801e35c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801e360:	f107 030c 	add.w	r3, r7, #12
 801e364:	f107 0214 	add.w	r2, r7, #20
 801e368:	601a      	str	r2, [r3, #0]
 801e36a:	f107 030c 	add.w	r3, r7, #12
 801e36e:	2211      	movs	r2, #17
 801e370:	605a      	str	r2, [r3, #4]
 801e372:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e376:	4618      	mov	r0, r3
 801e378:	f7e2 ffb4 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801e37c:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801e380:	f107 020c 	add.w	r2, r7, #12
 801e384:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e388:	9300      	str	r3, [sp, #0]
 801e38a:	460b      	mov	r3, r1
 801e38c:	ca06      	ldmia	r2, {r1, r2}
 801e38e:	4885      	ldr	r0, [pc, #532]	; (801e5a4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801e390:	f7e2 ffc0 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801e394:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e398:	4618      	mov	r0, r3
 801e39a:	f7e2 ffaf 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801e39e:	2305      	movs	r3, #5
 801e3a0:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801e3a4:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801e3a8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e3ac:	497e      	ldr	r1, [pc, #504]	; (801e5a8 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801e3ae:	4618      	mov	r0, r3
 801e3b0:	f7e2 fe9c 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801e3b4:	2306      	movs	r3, #6
 801e3b6:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801e3ba:	f207 1263 	addw	r2, r7, #355	; 0x163
 801e3be:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e3c2:	331c      	adds	r3, #28
 801e3c4:	4979      	ldr	r1, [pc, #484]	; (801e5ac <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801e3c6:	4618      	mov	r0, r3
 801e3c8:	f7e2 feb8 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801e3cc:	2307      	movs	r3, #7
 801e3ce:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801e3d2:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801e3d6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e3da:	3338      	adds	r3, #56	; 0x38
 801e3dc:	4974      	ldr	r1, [pc, #464]	; (801e5b0 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801e3de:	4618      	mov	r0, r3
 801e3e0:	f7e2 feac 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801e3e4:	2308      	movs	r3, #8
 801e3e6:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801e3ea:	f207 1265 	addw	r2, r7, #357	; 0x165
 801e3ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e3f2:	3354      	adds	r3, #84	; 0x54
 801e3f4:	496f      	ldr	r1, [pc, #444]	; (801e5b4 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801e3f6:	4618      	mov	r0, r3
 801e3f8:	f7e2 fe78 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801e3fc:	2309      	movs	r3, #9
 801e3fe:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801e402:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801e406:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e40a:	3370      	adds	r3, #112	; 0x70
 801e40c:	496a      	ldr	r1, [pc, #424]	; (801e5b8 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801e40e:	4618      	mov	r0, r3
 801e410:	f7e2 febc 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801e414:	2310      	movs	r3, #16
 801e416:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801e41a:	f207 1267 	addw	r2, r7, #359	; 0x167
 801e41e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e422:	338c      	adds	r3, #140	; 0x8c
 801e424:	4965      	ldr	r1, [pc, #404]	; (801e5bc <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801e426:	4618      	mov	r0, r3
 801e428:	f7e2 fed8 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801e42c:	2311      	movs	r3, #17
 801e42e:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801e432:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801e436:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e43a:	33a8      	adds	r3, #168	; 0xa8
 801e43c:	4960      	ldr	r1, [pc, #384]	; (801e5c0 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801e43e:	4618      	mov	r0, r3
 801e440:	f7e2 fea4 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801e444:	2312      	movs	r3, #18
 801e446:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801e44a:	f207 1269 	addw	r2, r7, #361	; 0x169
 801e44e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e452:	33c4      	adds	r3, #196	; 0xc4
 801e454:	495b      	ldr	r1, [pc, #364]	; (801e5c4 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801e456:	4618      	mov	r0, r3
 801e458:	f7e2 fe48 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801e45c:	2313      	movs	r3, #19
 801e45e:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801e462:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801e466:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e46a:	33e0      	adds	r3, #224	; 0xe0
 801e46c:	4956      	ldr	r1, [pc, #344]	; (801e5c8 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801e46e:	4618      	mov	r0, r3
 801e470:	f7e2 fe64 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801e474:	2314      	movs	r3, #20
 801e476:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801e47a:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801e47e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e482:	33fc      	adds	r3, #252	; 0xfc
 801e484:	4951      	ldr	r1, [pc, #324]	; (801e5cc <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801e486:	4618      	mov	r0, r3
 801e488:	f7e2 fed0 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801e48c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801e490:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801e494:	601a      	str	r2, [r3, #0]
 801e496:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801e49a:	220a      	movs	r2, #10
 801e49c:	605a      	str	r2, [r3, #4]
 801e49e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e4a2:	4618      	mov	r0, r3
 801e4a4:	f7e2 ffc3 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801e4a8:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801e4ac:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801e4b0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e4b4:	9300      	str	r3, [sp, #0]
 801e4b6:	460b      	mov	r3, r1
 801e4b8:	ca06      	ldmia	r2, {r1, r2}
 801e4ba:	4845      	ldr	r0, [pc, #276]	; (801e5d0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801e4bc:	f7e2 ffcf 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801e4c0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e4c4:	4618      	mov	r0, r3
 801e4c6:	f7e2 ffbe 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801e4ca:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801e4ce:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801e4d2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e4d6:	429c      	cmp	r4, r3
 801e4d8:	d004      	beq.n	801e4e4 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801e4da:	3c1c      	subs	r4, #28
 801e4dc:	4620      	mov	r0, r4
 801e4de:	f7e2 fdf8 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801e4e2:	e7f6      	b.n	801e4d2 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801e4e4:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801e4e8:	2200      	movs	r2, #0
 801e4ea:	601a      	str	r2, [r3, #0]
 801e4ec:	605a      	str	r2, [r3, #4]
 801e4ee:	609a      	str	r2, [r3, #8]
 801e4f0:	233c      	movs	r3, #60	; 0x3c
 801e4f2:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801e4f6:	231b      	movs	r3, #27
 801e4f8:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801e4fc:	231c      	movs	r3, #28
 801e4fe:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801e502:	233e      	movs	r3, #62	; 0x3e
 801e504:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801e508:	2319      	movs	r3, #25
 801e50a:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801e50e:	231a      	movs	r3, #26
 801e510:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801e514:	233d      	movs	r3, #61	; 0x3d
 801e516:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801e51a:	2318      	movs	r3, #24
 801e51c:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801e520:	231d      	movs	r3, #29
 801e522:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801e526:	2321      	movs	r3, #33	; 0x21
 801e528:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801e52c:	2317      	movs	r3, #23
 801e52e:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801e532:	231e      	movs	r3, #30
 801e534:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801e538:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801e53c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801e540:	2304      	movs	r3, #4
 801e542:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801e546:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e54a:	4618      	mov	r0, r3
 801e54c:	f7e2 ffb7 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801e550:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801e554:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e558:	9300      	str	r3, [sp, #0]
 801e55a:	4613      	mov	r3, r2
 801e55c:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801e560:	ca06      	ldmia	r2, {r1, r2}
 801e562:	481c      	ldr	r0, [pc, #112]	; (801e5d4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801e564:	f7e2 ffc3 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801e568:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e56c:	4618      	mov	r0, r3
 801e56e:	f7e2 ffb2 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801e572:	1d3b      	adds	r3, r7, #4
 801e574:	681b      	ldr	r3, [r3, #0]
 801e576:	2b00      	cmp	r3, #0
 801e578:	d10e      	bne.n	801e598 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e57a:	463b      	mov	r3, r7
 801e57c:	681b      	ldr	r3, [r3, #0]
 801e57e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e582:	4293      	cmp	r3, r2
 801e584:	d108      	bne.n	801e598 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e586:	4813      	ldr	r0, [pc, #76]	; (801e5d4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801e588:	f7e5 fc0a 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801e58c:	4810      	ldr	r0, [pc, #64]	; (801e5d0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801e58e:	f7e5 fc14 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801e592:	4804      	ldr	r0, [pc, #16]	; (801e5a4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801e594:	f7e5 fc1e 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801e598:	bf00      	nop
 801e59a:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801e59e:	46bd      	mov	sp, r7
 801e5a0:	bd90      	pop	{r4, r7, pc}
 801e5a2:	bf00      	nop
 801e5a4:	20000534 	.word	0x20000534
 801e5a8:	08027c7c 	.word	0x08027c7c
 801e5ac:	08027c84 	.word	0x08027c84
 801e5b0:	08027c8c 	.word	0x08027c8c
 801e5b4:	08027c94 	.word	0x08027c94
 801e5b8:	08027c9c 	.word	0x08027c9c
 801e5bc:	08027ca4 	.word	0x08027ca4
 801e5c0:	08027ca8 	.word	0x08027ca8
 801e5c4:	08027cb0 	.word	0x08027cb0
 801e5c8:	08027cb8 	.word	0x08027cb8
 801e5cc:	08027cc0 	.word	0x08027cc0
 801e5d0:	2000054c 	.word	0x2000054c
 801e5d4:	20000564 	.word	0x20000564

0801e5d8 <_GLOBAL__sub_I_huart1>:
 801e5d8:	b580      	push	{r7, lr}
 801e5da:	af00      	add	r7, sp, #0
 801e5dc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e5e0:	2001      	movs	r0, #1
 801e5e2:	f7ff fe1d 	bl	801e220 <_Z41__static_initialization_and_destruction_0ii>
 801e5e6:	bd80      	pop	{r7, pc}

0801e5e8 <_GLOBAL__sub_D_huart1>:
 801e5e8:	b580      	push	{r7, lr}
 801e5ea:	af00      	add	r7, sp, #0
 801e5ec:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e5f0:	2000      	movs	r0, #0
 801e5f2:	f7ff fe15 	bl	801e220 <_Z41__static_initialization_and_destruction_0ii>
 801e5f6:	bd80      	pop	{r7, pc}

0801e5f8 <_ZN6ParserC1Ev>:
	Body *setup;
	Body *loop;
	Body *finish;
};

class Parser
 801e5f8:	b580      	push	{r7, lr}
 801e5fa:	b082      	sub	sp, #8
 801e5fc:	af00      	add	r7, sp, #0
 801e5fe:	6078      	str	r0, [r7, #4]
 801e600:	687b      	ldr	r3, [r7, #4]
 801e602:	4618      	mov	r0, r3
 801e604:	f7f1 fe6f 	bl	80102e6 <_ZN5TokenC1Ev>
 801e608:	687b      	ldr	r3, [r7, #4]
 801e60a:	4618      	mov	r0, r3
 801e60c:	3708      	adds	r7, #8
 801e60e:	46bd      	mov	sp, r7
 801e610:	bd80      	pop	{r7, pc}
	...

0801e614 <_Z11my_main_runP20__UART_HandleTypeDef>:
#include "my_main.h"

// main function called after setup from CUBEMX
void my_main_run(UART_HandleTypeDef* huart)
{
 801e614:	b590      	push	{r4, r7, lr}
 801e616:	b09f      	sub	sp, #124	; 0x7c
 801e618:	af00      	add	r7, sp, #0
 801e61a:	6078      	str	r0, [r7, #4]
	Parser Par;
 801e61c:	f107 030c 	add.w	r3, r7, #12
 801e620:	4618      	mov	r0, r3
 801e622:	f7ff ffe9 	bl	801e5f8 <_ZN6ParserC1Ev>

	Program* P = Par.parse_program();
 801e626:	f107 030c 	add.w	r3, r7, #12
 801e62a:	4618      	mov	r0, r3
 801e62c:	f7f5 fbb6 	bl	8013d9c <_ZN6Parser13parse_programEv>
 801e630:	6778      	str	r0, [r7, #116]	; 0x74
	delete P;
 801e632:	6f7c      	ldr	r4, [r7, #116]	; 0x74
 801e634:	2c00      	cmp	r4, #0
 801e636:	d006      	beq.n	801e646 <_Z11my_main_runP20__UART_HandleTypeDef+0x32>
 801e638:	4620      	mov	r0, r4
 801e63a:	f7f4 fc09 	bl	8012e50 <_ZN7ProgramD1Ev>
 801e63e:	210c      	movs	r1, #12
 801e640:	4620      	mov	r0, r4
 801e642:	f004 faf0 	bl	8022c26 <_ZdlPvj>

	//Executor Exec;
	auto fc = new Function_call();
 801e646:	202c      	movs	r0, #44	; 0x2c
 801e648:	f004 fafe 	bl	8022c48 <_Znwj>
 801e64c:	4603      	mov	r3, r0
 801e64e:	461c      	mov	r4, r3
 801e650:	4620      	mov	r0, r4
 801e652:	232c      	movs	r3, #44	; 0x2c
 801e654:	461a      	mov	r2, r3
 801e656:	2100      	movs	r1, #0
 801e658:	f005 fe7c 	bl	8024354 <memset>
 801e65c:	4620      	mov	r0, r4
 801e65e:	f7f4 ffb6 	bl	80135ce <_ZN13Function_callC1Ev>
 801e662:	673c      	str	r4, [r7, #112]	; 0x70
	fc->id = std::string("run_single_experiment_iteration");
 801e664:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801e668:	4618      	mov	r0, r3
 801e66a:	f004 fafe 	bl	8022c6a <_ZNSaIcEC1Ev>
 801e66e:	f107 0244 	add.w	r2, r7, #68	; 0x44
 801e672:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801e676:	491c      	ldr	r1, [pc, #112]	; (801e6e8 <_Z11my_main_runP20__UART_HandleTypeDef+0xd4>)
 801e678:	4618      	mov	r0, r3
 801e67a:	f7e2 fe86 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e67e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801e680:	3308      	adds	r3, #8
 801e682:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801e686:	4611      	mov	r1, r2
 801e688:	4618      	mov	r0, r3
 801e68a:	f004 fcc0 	bl	802300e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 801e68e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801e692:	4618      	mov	r0, r3
 801e694:	f004 fcaf 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e698:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801e69c:	4618      	mov	r0, r3
 801e69e:	f004 fae5 	bl	8022c6c <_ZNSaIcED1Ev>
	fc->arguments = {};
 801e6a2:	2300      	movs	r3, #0
 801e6a4:	64bb      	str	r3, [r7, #72]	; 0x48
 801e6a6:	2300      	movs	r3, #0
 801e6a8:	64fb      	str	r3, [r7, #76]	; 0x4c
 801e6aa:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801e6ac:	f103 0020 	add.w	r0, r3, #32
 801e6b0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e6b4:	e893 0006 	ldmia.w	r3, {r1, r2}
 801e6b8:	f000 f818 	bl	801e6ec <_ZNSt6vectorIP10ExpressionSaIS1_EEaSESt16initializer_listIS1_E>

	Function_handler::run_function(fc);
 801e6bc:	f107 0350 	add.w	r3, r7, #80	; 0x50
 801e6c0:	6f39      	ldr	r1, [r7, #112]	; 0x70
 801e6c2:	4618      	mov	r0, r3
 801e6c4:	f7f0 fd6c 	bl	800f1a0 <_ZN16Function_handler12run_functionEP13Function_call>
 801e6c8:	f107 0350 	add.w	r3, r7, #80	; 0x50
 801e6cc:	4618      	mov	r0, r3
 801e6ce:	f7e8 f8f3 	bl	80068b8 <_ZN6SymbolD1Ev>

	delete fc;
 801e6d2:	6f3c      	ldr	r4, [r7, #112]	; 0x70
 801e6d4:	2c00      	cmp	r4, #0
 801e6d6:	d006      	beq.n	801e6e6 <_Z11my_main_runP20__UART_HandleTypeDef+0xd2>
 801e6d8:	4620      	mov	r0, r4
 801e6da:	f7f8 fa85 	bl	8016be8 <_ZN13Function_callD1Ev>
 801e6de:	212c      	movs	r1, #44	; 0x2c
 801e6e0:	4620      	mov	r0, r4
 801e6e2:	f004 faa0 	bl	8022c26 <_ZdlPvj>

	for(;;)
 801e6e6:	e7fe      	b.n	801e6e6 <_Z11my_main_runP20__UART_HandleTypeDef+0xd2>
 801e6e8:	08027cc4 	.word	0x08027cc4

0801e6ec <_ZNSt6vectorIP10ExpressionSaIS1_EEaSESt16initializer_listIS1_E>:
      operator=(initializer_list<value_type> __l)
 801e6ec:	b5b0      	push	{r4, r5, r7, lr}
 801e6ee:	b086      	sub	sp, #24
 801e6f0:	af00      	add	r7, sp, #0
 801e6f2:	60f8      	str	r0, [r7, #12]
 801e6f4:	1d3b      	adds	r3, r7, #4
 801e6f6:	e883 0006 	stmia.w	r3, {r1, r2}
	this->_M_assign_aux(__l.begin(), __l.end(),
 801e6fa:	1d3b      	adds	r3, r7, #4
 801e6fc:	4618      	mov	r0, r3
 801e6fe:	f000 f810 	bl	801e722 <_ZNKSt16initializer_listIP10ExpressionE5beginEv>
 801e702:	4604      	mov	r4, r0
 801e704:	1d3b      	adds	r3, r7, #4
 801e706:	4618      	mov	r0, r3
 801e708:	f000 f817 	bl	801e73a <_ZNKSt16initializer_listIP10ExpressionE3endEv>
 801e70c:	4602      	mov	r2, r0
 801e70e:	462b      	mov	r3, r5
 801e710:	4621      	mov	r1, r4
 801e712:	68f8      	ldr	r0, [r7, #12]
 801e714:	f000 f837 	bl	801e786 <_ZNSt6vectorIP10ExpressionSaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
	return *this;
 801e718:	68fb      	ldr	r3, [r7, #12]
      }
 801e71a:	4618      	mov	r0, r3
 801e71c:	3718      	adds	r7, #24
 801e71e:	46bd      	mov	sp, r7
 801e720:	bdb0      	pop	{r4, r5, r7, pc}

0801e722 <_ZNKSt16initializer_listIP10ExpressionE5beginEv>:
      begin() const noexcept { return _M_array; }
 801e722:	b480      	push	{r7}
 801e724:	b083      	sub	sp, #12
 801e726:	af00      	add	r7, sp, #0
 801e728:	6078      	str	r0, [r7, #4]
 801e72a:	687b      	ldr	r3, [r7, #4]
 801e72c:	681b      	ldr	r3, [r3, #0]
 801e72e:	4618      	mov	r0, r3
 801e730:	370c      	adds	r7, #12
 801e732:	46bd      	mov	sp, r7
 801e734:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e738:	4770      	bx	lr

0801e73a <_ZNKSt16initializer_listIP10ExpressionE3endEv>:
      end() const noexcept { return begin() + size(); }
 801e73a:	b590      	push	{r4, r7, lr}
 801e73c:	b083      	sub	sp, #12
 801e73e:	af00      	add	r7, sp, #0
 801e740:	6078      	str	r0, [r7, #4]
 801e742:	6878      	ldr	r0, [r7, #4]
 801e744:	f7ff ffed 	bl	801e722 <_ZNKSt16initializer_listIP10ExpressionE5beginEv>
 801e748:	4604      	mov	r4, r0
 801e74a:	6878      	ldr	r0, [r7, #4]
 801e74c:	f000 f8b4 	bl	801e8b8 <_ZNKSt16initializer_listIP10ExpressionE4sizeEv>
 801e750:	4603      	mov	r3, r0
 801e752:	009b      	lsls	r3, r3, #2
 801e754:	4423      	add	r3, r4
 801e756:	4618      	mov	r0, r3
 801e758:	370c      	adds	r7, #12
 801e75a:	46bd      	mov	sp, r7
 801e75c:	bd90      	pop	{r4, r7, pc}

0801e75e <_ZSt8distanceIPKP10ExpressionENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
 801e75e:	b5b0      	push	{r4, r5, r7, lr}
 801e760:	b082      	sub	sp, #8
 801e762:	af00      	add	r7, sp, #0
 801e764:	6078      	str	r0, [r7, #4]
 801e766:	6039      	str	r1, [r7, #0]
      return std::__distance(__first, __last,
 801e768:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 801e76a:	1d3b      	adds	r3, r7, #4
 801e76c:	4618      	mov	r0, r3
 801e76e:	f000 f8af 	bl	801e8d0 <_ZSt19__iterator_categoryIPKP10ExpressionENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
 801e772:	462a      	mov	r2, r5
 801e774:	6839      	ldr	r1, [r7, #0]
 801e776:	4620      	mov	r0, r4
 801e778:	f000 f8b4 	bl	801e8e4 <_ZSt10__distanceIPKP10ExpressionENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
 801e77c:	4603      	mov	r3, r0
    }
 801e77e:	4618      	mov	r0, r3
 801e780:	3708      	adds	r7, #8
 801e782:	46bd      	mov	sp, r7
 801e784:	bdb0      	pop	{r4, r5, r7, pc}

0801e786 <_ZNSt6vectorIP10ExpressionSaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>:
      vector<_Tp, _Alloc>::
 801e786:	b5b0      	push	{r4, r5, r7, lr}
 801e788:	b088      	sub	sp, #32
 801e78a:	af00      	add	r7, sp, #0
 801e78c:	60f8      	str	r0, [r7, #12]
 801e78e:	60b9      	str	r1, [r7, #8]
 801e790:	607a      	str	r2, [r7, #4]
 801e792:	703b      	strb	r3, [r7, #0]
	const size_type __len = std::distance(__first, __last);
 801e794:	6879      	ldr	r1, [r7, #4]
 801e796:	68b8      	ldr	r0, [r7, #8]
 801e798:	f7ff ffe1 	bl	801e75e <_ZSt8distanceIPKP10ExpressionENSt15iterator_traitsIT_E15difference_typeES5_S5_>
 801e79c:	4603      	mov	r3, r0
 801e79e:	61fb      	str	r3, [r7, #28]
	if (__len > capacity())
 801e7a0:	68f8      	ldr	r0, [r7, #12]
 801e7a2:	f000 f8af 	bl	801e904 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8capacityEv>
 801e7a6:	4602      	mov	r2, r0
 801e7a8:	69fb      	ldr	r3, [r7, #28]
 801e7aa:	4293      	cmp	r3, r2
 801e7ac:	bf8c      	ite	hi
 801e7ae:	2301      	movhi	r3, #1
 801e7b0:	2300      	movls	r3, #0
 801e7b2:	b2db      	uxtb	r3, r3
 801e7b4:	2b00      	cmp	r3, #0
 801e7b6:	d038      	beq.n	801e82a <_ZNSt6vectorIP10ExpressionSaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xa4>
	    _S_check_init_len(__len, _M_get_Tp_allocator());
 801e7b8:	68fb      	ldr	r3, [r7, #12]
 801e7ba:	4618      	mov	r0, r3
 801e7bc:	f7f0 ffa1 	bl	800f702 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801e7c0:	4603      	mov	r3, r0
 801e7c2:	4619      	mov	r1, r3
 801e7c4:	69f8      	ldr	r0, [r7, #28]
 801e7c6:	f000 f8ad 	bl	801e924 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_S_check_init_lenEjRKS2_>
	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 801e7ca:	687b      	ldr	r3, [r7, #4]
 801e7cc:	68ba      	ldr	r2, [r7, #8]
 801e7ce:	69f9      	ldr	r1, [r7, #28]
 801e7d0:	68f8      	ldr	r0, [r7, #12]
 801e7d2:	f000 f8cf 	bl	801e974 <_ZNSt6vectorIP10ExpressionSaIS1_EE20_M_allocate_and_copyIPKS1_EEPS1_jT_S8_>
 801e7d6:	6178      	str	r0, [r7, #20]
	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 801e7d8:	68fb      	ldr	r3, [r7, #12]
 801e7da:	681c      	ldr	r4, [r3, #0]
 801e7dc:	68fb      	ldr	r3, [r7, #12]
 801e7de:	685d      	ldr	r5, [r3, #4]
			  _M_get_Tp_allocator());
 801e7e0:	68fb      	ldr	r3, [r7, #12]
 801e7e2:	4618      	mov	r0, r3
 801e7e4:	f7f0 ff8d 	bl	800f702 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801e7e8:	4603      	mov	r3, r0
	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 801e7ea:	461a      	mov	r2, r3
 801e7ec:	4629      	mov	r1, r5
 801e7ee:	4620      	mov	r0, r4
 801e7f0:	f7f0 ffa3 	bl	800f73a <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>
	    _M_deallocate(this->_M_impl._M_start,
 801e7f4:	68f8      	ldr	r0, [r7, #12]
 801e7f6:	68fb      	ldr	r3, [r7, #12]
 801e7f8:	6819      	ldr	r1, [r3, #0]
			  this->_M_impl._M_end_of_storage
 801e7fa:	68fb      	ldr	r3, [r7, #12]
 801e7fc:	689a      	ldr	r2, [r3, #8]
			  - this->_M_impl._M_start);
 801e7fe:	68fb      	ldr	r3, [r7, #12]
 801e800:	681b      	ldr	r3, [r3, #0]
 801e802:	1ad3      	subs	r3, r2, r3
 801e804:	109b      	asrs	r3, r3, #2
	    _M_deallocate(this->_M_impl._M_start,
 801e806:	461a      	mov	r2, r3
 801e808:	f7f1 f896 	bl	800f938 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
	    this->_M_impl._M_start = __tmp;
 801e80c:	68fb      	ldr	r3, [r7, #12]
 801e80e:	697a      	ldr	r2, [r7, #20]
 801e810:	601a      	str	r2, [r3, #0]
	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 801e812:	68fb      	ldr	r3, [r7, #12]
 801e814:	681a      	ldr	r2, [r3, #0]
 801e816:	69fb      	ldr	r3, [r7, #28]
 801e818:	009b      	lsls	r3, r3, #2
 801e81a:	441a      	add	r2, r3
 801e81c:	68fb      	ldr	r3, [r7, #12]
 801e81e:	605a      	str	r2, [r3, #4]
	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 801e820:	68fb      	ldr	r3, [r7, #12]
 801e822:	685a      	ldr	r2, [r3, #4]
 801e824:	68fb      	ldr	r3, [r7, #12]
 801e826:	609a      	str	r2, [r3, #8]
      }
 801e828:	e042      	b.n	801e8b0 <_ZNSt6vectorIP10ExpressionSaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x12a>
	else if (size() >= __len)
 801e82a:	68f8      	ldr	r0, [r7, #12]
 801e82c:	f7f0 fed3 	bl	800f5d6 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 801e830:	4602      	mov	r2, r0
 801e832:	69fb      	ldr	r3, [r7, #28]
 801e834:	4293      	cmp	r3, r2
 801e836:	bf94      	ite	ls
 801e838:	2301      	movls	r3, #1
 801e83a:	2300      	movhi	r3, #0
 801e83c:	b2db      	uxtb	r3, r3
 801e83e:	2b00      	cmp	r3, #0
 801e840:	d00c      	beq.n	801e85c <_ZNSt6vectorIP10ExpressionSaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xd6>
	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 801e842:	68fb      	ldr	r3, [r7, #12]
 801e844:	681b      	ldr	r3, [r3, #0]
 801e846:	461a      	mov	r2, r3
 801e848:	6879      	ldr	r1, [r7, #4]
 801e84a:	68b8      	ldr	r0, [r7, #8]
 801e84c:	f000 f8cf 	bl	801e9ee <_ZSt4copyIPKP10ExpressionPS1_ET0_T_S6_S5_>
 801e850:	4603      	mov	r3, r0
 801e852:	4619      	mov	r1, r3
 801e854:	68f8      	ldr	r0, [r7, #12]
 801e856:	f000 f8a9 	bl	801e9ac <_ZNSt6vectorIP10ExpressionSaIS1_EE15_M_erase_at_endEPS1_>
      }
 801e85a:	e029      	b.n	801e8b0 <_ZNSt6vectorIP10ExpressionSaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x12a>
	    _ForwardIterator __mid = __first;
 801e85c:	68bb      	ldr	r3, [r7, #8]
 801e85e:	613b      	str	r3, [r7, #16]
	    std::advance(__mid, size());
 801e860:	68f8      	ldr	r0, [r7, #12]
 801e862:	f7f0 feb8 	bl	800f5d6 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 801e866:	4602      	mov	r2, r0
 801e868:	f107 0310 	add.w	r3, r7, #16
 801e86c:	4611      	mov	r1, r2
 801e86e:	4618      	mov	r0, r3
 801e870:	f000 f8d5 	bl	801ea1e <_ZSt7advanceIPKP10ExpressionjEvRT_T0_>
	    std::copy(__first, __mid, this->_M_impl._M_start);
 801e874:	6939      	ldr	r1, [r7, #16]
 801e876:	68fb      	ldr	r3, [r7, #12]
 801e878:	681b      	ldr	r3, [r3, #0]
 801e87a:	461a      	mov	r2, r3
 801e87c:	68b8      	ldr	r0, [r7, #8]
 801e87e:	f000 f8b6 	bl	801e9ee <_ZSt4copyIPKP10ExpressionPS1_ET0_T_S6_S5_>
	    const size_type __attribute__((__unused__)) __n = __len - size();
 801e882:	68f8      	ldr	r0, [r7, #12]
 801e884:	f7f0 fea7 	bl	800f5d6 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 801e888:	4602      	mov	r2, r0
 801e88a:	69fb      	ldr	r3, [r7, #28]
 801e88c:	1a9b      	subs	r3, r3, r2
 801e88e:	61bb      	str	r3, [r7, #24]
	      std::__uninitialized_copy_a(__mid, __last,
 801e890:	693c      	ldr	r4, [r7, #16]
 801e892:	68fb      	ldr	r3, [r7, #12]
 801e894:	685d      	ldr	r5, [r3, #4]
					  _M_get_Tp_allocator());
 801e896:	68fb      	ldr	r3, [r7, #12]
 801e898:	4618      	mov	r0, r3
 801e89a:	f7f0 ff32 	bl	800f702 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801e89e:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__mid, __last,
 801e8a0:	462a      	mov	r2, r5
 801e8a2:	6879      	ldr	r1, [r7, #4]
 801e8a4:	4620      	mov	r0, r4
 801e8a6:	f000 f8cd 	bl	801ea44 <_ZSt22__uninitialized_copy_aIPKP10ExpressionPS1_S1_ET0_T_S6_S5_RSaIT1_E>
 801e8aa:	4602      	mov	r2, r0
	    this->_M_impl._M_finish =
 801e8ac:	68fb      	ldr	r3, [r7, #12]
 801e8ae:	605a      	str	r2, [r3, #4]
      }
 801e8b0:	bf00      	nop
 801e8b2:	3720      	adds	r7, #32
 801e8b4:	46bd      	mov	sp, r7
 801e8b6:	bdb0      	pop	{r4, r5, r7, pc}

0801e8b8 <_ZNKSt16initializer_listIP10ExpressionE4sizeEv>:
      size() const noexcept { return _M_len; }
 801e8b8:	b480      	push	{r7}
 801e8ba:	b083      	sub	sp, #12
 801e8bc:	af00      	add	r7, sp, #0
 801e8be:	6078      	str	r0, [r7, #4]
 801e8c0:	687b      	ldr	r3, [r7, #4]
 801e8c2:	685b      	ldr	r3, [r3, #4]
 801e8c4:	4618      	mov	r0, r3
 801e8c6:	370c      	adds	r7, #12
 801e8c8:	46bd      	mov	sp, r7
 801e8ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e8ce:	4770      	bx	lr

0801e8d0 <_ZSt19__iterator_categoryIPKP10ExpressionENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
 801e8d0:	b480      	push	{r7}
 801e8d2:	b083      	sub	sp, #12
 801e8d4:	af00      	add	r7, sp, #0
 801e8d6:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 801e8d8:	4618      	mov	r0, r3
 801e8da:	370c      	adds	r7, #12
 801e8dc:	46bd      	mov	sp, r7
 801e8de:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e8e2:	4770      	bx	lr

0801e8e4 <_ZSt10__distanceIPKP10ExpressionENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 801e8e4:	b480      	push	{r7}
 801e8e6:	b085      	sub	sp, #20
 801e8e8:	af00      	add	r7, sp, #0
 801e8ea:	60f8      	str	r0, [r7, #12]
 801e8ec:	60b9      	str	r1, [r7, #8]
 801e8ee:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 801e8f0:	68ba      	ldr	r2, [r7, #8]
 801e8f2:	68fb      	ldr	r3, [r7, #12]
 801e8f4:	1ad3      	subs	r3, r2, r3
 801e8f6:	109b      	asrs	r3, r3, #2
    }
 801e8f8:	4618      	mov	r0, r3
 801e8fa:	3714      	adds	r7, #20
 801e8fc:	46bd      	mov	sp, r7
 801e8fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e902:	4770      	bx	lr

0801e904 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
 801e904:	b480      	push	{r7}
 801e906:	b083      	sub	sp, #12
 801e908:	af00      	add	r7, sp, #0
 801e90a:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_end_of_storage
 801e90c:	687b      	ldr	r3, [r7, #4]
 801e90e:	689a      	ldr	r2, [r3, #8]
			 - this->_M_impl._M_start); }
 801e910:	687b      	ldr	r3, [r7, #4]
 801e912:	681b      	ldr	r3, [r3, #0]
 801e914:	1ad3      	subs	r3, r2, r3
 801e916:	109b      	asrs	r3, r3, #2
 801e918:	4618      	mov	r0, r3
 801e91a:	370c      	adds	r7, #12
 801e91c:	46bd      	mov	sp, r7
 801e91e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e922:	4770      	bx	lr

0801e924 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_S_check_init_lenEjRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
 801e924:	b590      	push	{r4, r7, lr}
 801e926:	b085      	sub	sp, #20
 801e928:	af00      	add	r7, sp, #0
 801e92a:	6078      	str	r0, [r7, #4]
 801e92c:	6039      	str	r1, [r7, #0]
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 801e92e:	f107 030c 	add.w	r3, r7, #12
 801e932:	6839      	ldr	r1, [r7, #0]
 801e934:	4618      	mov	r0, r3
 801e936:	f7f1 f886 	bl	800fa46 <_ZNSaIP10ExpressionEC1ERKS1_>
 801e93a:	f107 030c 	add.w	r3, r7, #12
 801e93e:	4618      	mov	r0, r3
 801e940:	f7f7 fbd3 	bl	80160ea <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>
 801e944:	4602      	mov	r2, r0
 801e946:	687b      	ldr	r3, [r7, #4]
 801e948:	4293      	cmp	r3, r2
 801e94a:	bf8c      	ite	hi
 801e94c:	2301      	movhi	r3, #1
 801e94e:	2300      	movls	r3, #0
 801e950:	b2dc      	uxtb	r4, r3
 801e952:	f107 030c 	add.w	r3, r7, #12
 801e956:	4618      	mov	r0, r3
 801e958:	f7f0 fe66 	bl	800f628 <_ZNSaIP10ExpressionED1Ev>
 801e95c:	2c00      	cmp	r4, #0
 801e95e:	d002      	beq.n	801e966 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_S_check_init_lenEjRKS2_+0x42>
	  __throw_length_error(
 801e960:	4803      	ldr	r0, [pc, #12]	; (801e970 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_S_check_init_lenEjRKS2_+0x4c>)
 801e962:	f004 fa3f 	bl	8022de4 <_ZSt20__throw_length_errorPKc>
	return __n;
 801e966:	687b      	ldr	r3, [r7, #4]
      }
 801e968:	4618      	mov	r0, r3
 801e96a:	3714      	adds	r7, #20
 801e96c:	46bd      	mov	sp, r7
 801e96e:	bd90      	pop	{r4, r7, pc}
 801e970:	08027ce4 	.word	0x08027ce4

0801e974 <_ZNSt6vectorIP10ExpressionSaIS1_EE20_M_allocate_and_copyIPKS1_EEPS1_jT_S8_>:
	_M_allocate_and_copy(size_type __n,
 801e974:	b580      	push	{r7, lr}
 801e976:	b086      	sub	sp, #24
 801e978:	af00      	add	r7, sp, #0
 801e97a:	60f8      	str	r0, [r7, #12]
 801e97c:	60b9      	str	r1, [r7, #8]
 801e97e:	607a      	str	r2, [r7, #4]
 801e980:	603b      	str	r3, [r7, #0]
	  pointer __result = this->_M_allocate(__n);
 801e982:	68fb      	ldr	r3, [r7, #12]
 801e984:	68b9      	ldr	r1, [r7, #8]
 801e986:	4618      	mov	r0, r3
 801e988:	f7f1 f87f 	bl	800fa8a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 801e98c:	6178      	str	r0, [r7, #20]
					  _M_get_Tp_allocator());
 801e98e:	68fb      	ldr	r3, [r7, #12]
 801e990:	4618      	mov	r0, r3
 801e992:	f7f0 feb6 	bl	800f702 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801e996:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__first, __last, __result,
 801e998:	697a      	ldr	r2, [r7, #20]
 801e99a:	6839      	ldr	r1, [r7, #0]
 801e99c:	6878      	ldr	r0, [r7, #4]
 801e99e:	f000 f851 	bl	801ea44 <_ZSt22__uninitialized_copy_aIPKP10ExpressionPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	      return __result;
 801e9a2:	697b      	ldr	r3, [r7, #20]
	}
 801e9a4:	4618      	mov	r0, r3
 801e9a6:	3718      	adds	r7, #24
 801e9a8:	46bd      	mov	sp, r7
 801e9aa:	bd80      	pop	{r7, pc}

0801e9ac <_ZNSt6vectorIP10ExpressionSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
 801e9ac:	b590      	push	{r4, r7, lr}
 801e9ae:	b085      	sub	sp, #20
 801e9b0:	af00      	add	r7, sp, #0
 801e9b2:	6078      	str	r0, [r7, #4]
 801e9b4:	6039      	str	r1, [r7, #0]
	if (size_type __n = this->_M_impl._M_finish - __pos)
 801e9b6:	687b      	ldr	r3, [r7, #4]
 801e9b8:	685a      	ldr	r2, [r3, #4]
 801e9ba:	683b      	ldr	r3, [r7, #0]
 801e9bc:	1ad3      	subs	r3, r2, r3
 801e9be:	109b      	asrs	r3, r3, #2
 801e9c0:	60fb      	str	r3, [r7, #12]
 801e9c2:	68fb      	ldr	r3, [r7, #12]
 801e9c4:	2b00      	cmp	r3, #0
 801e9c6:	d00e      	beq.n	801e9e6 <_ZNSt6vectorIP10ExpressionSaIS1_EE15_M_erase_at_endEPS1_+0x3a>
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 801e9c8:	687b      	ldr	r3, [r7, #4]
 801e9ca:	685c      	ldr	r4, [r3, #4]
			  _M_get_Tp_allocator());
 801e9cc:	687b      	ldr	r3, [r7, #4]
 801e9ce:	4618      	mov	r0, r3
 801e9d0:	f7f0 fe97 	bl	800f702 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801e9d4:	4603      	mov	r3, r0
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 801e9d6:	461a      	mov	r2, r3
 801e9d8:	4621      	mov	r1, r4
 801e9da:	6838      	ldr	r0, [r7, #0]
 801e9dc:	f7f0 fead 	bl	800f73a <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
 801e9e0:	687b      	ldr	r3, [r7, #4]
 801e9e2:	683a      	ldr	r2, [r7, #0]
 801e9e4:	605a      	str	r2, [r3, #4]
      }
 801e9e6:	bf00      	nop
 801e9e8:	3714      	adds	r7, #20
 801e9ea:	46bd      	mov	sp, r7
 801e9ec:	bd90      	pop	{r4, r7, pc}

0801e9ee <_ZSt4copyIPKP10ExpressionPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
 801e9ee:	b590      	push	{r4, r7, lr}
 801e9f0:	b085      	sub	sp, #20
 801e9f2:	af00      	add	r7, sp, #0
 801e9f4:	60f8      	str	r0, [r7, #12]
 801e9f6:	60b9      	str	r1, [r7, #8]
 801e9f8:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 801e9fa:	68f8      	ldr	r0, [r7, #12]
 801e9fc:	f000 f833 	bl	801ea66 <_ZSt12__miter_baseIPKP10ExpressionET_S4_>
 801ea00:	4604      	mov	r4, r0
 801ea02:	68b8      	ldr	r0, [r7, #8]
 801ea04:	f000 f82f 	bl	801ea66 <_ZSt12__miter_baseIPKP10ExpressionET_S4_>
 801ea08:	4603      	mov	r3, r0
 801ea0a:	687a      	ldr	r2, [r7, #4]
 801ea0c:	4619      	mov	r1, r3
 801ea0e:	4620      	mov	r0, r4
 801ea10:	f000 f834 	bl	801ea7c <_ZSt14__copy_move_a2ILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>
 801ea14:	4603      	mov	r3, r0
    }
 801ea16:	4618      	mov	r0, r3
 801ea18:	3714      	adds	r7, #20
 801ea1a:	46bd      	mov	sp, r7
 801ea1c:	bd90      	pop	{r4, r7, pc}

0801ea1e <_ZSt7advanceIPKP10ExpressionjEvRT_T0_>:
   *  For random access iterators, this uses their @c + and @c - operations
   *  and are constant time.  For other %iterator classes they are linear time.
  */
  template<typename _InputIterator, typename _Distance>
    inline _GLIBCXX17_CONSTEXPR void
    advance(_InputIterator& __i, _Distance __n)
 801ea1e:	b590      	push	{r4, r7, lr}
 801ea20:	b085      	sub	sp, #20
 801ea22:	af00      	add	r7, sp, #0
 801ea24:	6078      	str	r0, [r7, #4]
 801ea26:	6039      	str	r1, [r7, #0]
    {
      // concept requirements -- taken care of in __advance
      typename iterator_traits<_InputIterator>::difference_type __d = __n;
 801ea28:	683b      	ldr	r3, [r7, #0]
 801ea2a:	60fb      	str	r3, [r7, #12]
      std::__advance(__i, __d, std::__iterator_category(__i));
 801ea2c:	6878      	ldr	r0, [r7, #4]
 801ea2e:	f7ff ff4f 	bl	801e8d0 <_ZSt19__iterator_categoryIPKP10ExpressionENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
 801ea32:	4622      	mov	r2, r4
 801ea34:	68f9      	ldr	r1, [r7, #12]
 801ea36:	6878      	ldr	r0, [r7, #4]
 801ea38:	f000 f843 	bl	801eac2 <_ZSt9__advanceIPKP10ExpressioniEvRT_T0_St26random_access_iterator_tag>
    }
 801ea3c:	bf00      	nop
 801ea3e:	3714      	adds	r7, #20
 801ea40:	46bd      	mov	sp, r7
 801ea42:	bd90      	pop	{r4, r7, pc}

0801ea44 <_ZSt22__uninitialized_copy_aIPKP10ExpressionPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 801ea44:	b580      	push	{r7, lr}
 801ea46:	b084      	sub	sp, #16
 801ea48:	af00      	add	r7, sp, #0
 801ea4a:	60f8      	str	r0, [r7, #12]
 801ea4c:	60b9      	str	r1, [r7, #8]
 801ea4e:	607a      	str	r2, [r7, #4]
 801ea50:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 801ea52:	687a      	ldr	r2, [r7, #4]
 801ea54:	68b9      	ldr	r1, [r7, #8]
 801ea56:	68f8      	ldr	r0, [r7, #12]
 801ea58:	f000 f846 	bl	801eae8 <_ZSt18uninitialized_copyIPKP10ExpressionPS1_ET0_T_S6_S5_>
 801ea5c:	4603      	mov	r3, r0
 801ea5e:	4618      	mov	r0, r3
 801ea60:	3710      	adds	r7, #16
 801ea62:	46bd      	mov	sp, r7
 801ea64:	bd80      	pop	{r7, pc}

0801ea66 <_ZSt12__miter_baseIPKP10ExpressionET_S4_>:
    __miter_base(_Iterator __it)
 801ea66:	b480      	push	{r7}
 801ea68:	b083      	sub	sp, #12
 801ea6a:	af00      	add	r7, sp, #0
 801ea6c:	6078      	str	r0, [r7, #4]
    { return __it; }
 801ea6e:	687b      	ldr	r3, [r7, #4]
 801ea70:	4618      	mov	r0, r3
 801ea72:	370c      	adds	r7, #12
 801ea74:	46bd      	mov	sp, r7
 801ea76:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ea7a:	4770      	bx	lr

0801ea7c <_ZSt14__copy_move_a2ILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 801ea7c:	b5b0      	push	{r4, r5, r7, lr}
 801ea7e:	b084      	sub	sp, #16
 801ea80:	af00      	add	r7, sp, #0
 801ea82:	60f8      	str	r0, [r7, #12]
 801ea84:	60b9      	str	r1, [r7, #8]
 801ea86:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 801ea88:	68f8      	ldr	r0, [r7, #12]
 801ea8a:	f000 f83f 	bl	801eb0c <_ZSt12__niter_baseIPKP10ExpressionET_S4_>
 801ea8e:	4604      	mov	r4, r0
 801ea90:	68b8      	ldr	r0, [r7, #8]
 801ea92:	f000 f83b 	bl	801eb0c <_ZSt12__niter_baseIPKP10ExpressionET_S4_>
 801ea96:	4605      	mov	r5, r0
 801ea98:	687b      	ldr	r3, [r7, #4]
 801ea9a:	4618      	mov	r0, r3
 801ea9c:	f7f1 f956 	bl	800fd4c <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 801eaa0:	4603      	mov	r3, r0
 801eaa2:	461a      	mov	r2, r3
 801eaa4:	4629      	mov	r1, r5
 801eaa6:	4620      	mov	r0, r4
 801eaa8:	f7f1 f95b 	bl	800fd62 <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>
 801eaac:	4602      	mov	r2, r0
 801eaae:	1d3b      	adds	r3, r7, #4
 801eab0:	4611      	mov	r1, r2
 801eab2:	4618      	mov	r0, r3
 801eab4:	f7f1 f967 	bl	800fd86 <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>
 801eab8:	4603      	mov	r3, r0
    }
 801eaba:	4618      	mov	r0, r3
 801eabc:	3710      	adds	r7, #16
 801eabe:	46bd      	mov	sp, r7
 801eac0:	bdb0      	pop	{r4, r5, r7, pc}

0801eac2 <_ZSt9__advanceIPKP10ExpressioniEvRT_T0_St26random_access_iterator_tag>:
    __advance(_RandomAccessIterator& __i, _Distance __n,
 801eac2:	b480      	push	{r7}
 801eac4:	b085      	sub	sp, #20
 801eac6:	af00      	add	r7, sp, #0
 801eac8:	60f8      	str	r0, [r7, #12]
 801eaca:	60b9      	str	r1, [r7, #8]
 801eacc:	713a      	strb	r2, [r7, #4]
	__i += __n;
 801eace:	68fb      	ldr	r3, [r7, #12]
 801ead0:	681a      	ldr	r2, [r3, #0]
 801ead2:	68bb      	ldr	r3, [r7, #8]
 801ead4:	009b      	lsls	r3, r3, #2
 801ead6:	441a      	add	r2, r3
 801ead8:	68fb      	ldr	r3, [r7, #12]
 801eada:	601a      	str	r2, [r3, #0]
    }
 801eadc:	bf00      	nop
 801eade:	3714      	adds	r7, #20
 801eae0:	46bd      	mov	sp, r7
 801eae2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eae6:	4770      	bx	lr

0801eae8 <_ZSt18uninitialized_copyIPKP10ExpressionPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 801eae8:	b580      	push	{r7, lr}
 801eaea:	b086      	sub	sp, #24
 801eaec:	af00      	add	r7, sp, #0
 801eaee:	60f8      	str	r0, [r7, #12]
 801eaf0:	60b9      	str	r1, [r7, #8]
 801eaf2:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 801eaf4:	2301      	movs	r3, #1
 801eaf6:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 801eaf8:	687a      	ldr	r2, [r7, #4]
 801eafa:	68b9      	ldr	r1, [r7, #8]
 801eafc:	68f8      	ldr	r0, [r7, #12]
 801eafe:	f000 f810 	bl	801eb22 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP10ExpressionPS3_EET0_T_S8_S7_>
 801eb02:	4603      	mov	r3, r0
    }
 801eb04:	4618      	mov	r0, r3
 801eb06:	3718      	adds	r7, #24
 801eb08:	46bd      	mov	sp, r7
 801eb0a:	bd80      	pop	{r7, pc}

0801eb0c <_ZSt12__niter_baseIPKP10ExpressionET_S4_>:
    __niter_base(_Iterator __it)
 801eb0c:	b480      	push	{r7}
 801eb0e:	b083      	sub	sp, #12
 801eb10:	af00      	add	r7, sp, #0
 801eb12:	6078      	str	r0, [r7, #4]
    { return __it; }
 801eb14:	687b      	ldr	r3, [r7, #4]
 801eb16:	4618      	mov	r0, r3
 801eb18:	370c      	adds	r7, #12
 801eb1a:	46bd      	mov	sp, r7
 801eb1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eb20:	4770      	bx	lr

0801eb22 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP10ExpressionPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 801eb22:	b580      	push	{r7, lr}
 801eb24:	b084      	sub	sp, #16
 801eb26:	af00      	add	r7, sp, #0
 801eb28:	60f8      	str	r0, [r7, #12]
 801eb2a:	60b9      	str	r1, [r7, #8]
 801eb2c:	607a      	str	r2, [r7, #4]
        { return std::copy(__first, __last, __result); }
 801eb2e:	687a      	ldr	r2, [r7, #4]
 801eb30:	68b9      	ldr	r1, [r7, #8]
 801eb32:	68f8      	ldr	r0, [r7, #12]
 801eb34:	f7ff ff5b 	bl	801e9ee <_ZSt4copyIPKP10ExpressionPS1_ET0_T_S6_S5_>
 801eb38:	4603      	mov	r3, r0
 801eb3a:	4618      	mov	r0, r3
 801eb3c:	3710      	adds	r7, #16
 801eb3e:	46bd      	mov	sp, r7
 801eb40:	bd80      	pop	{r7, pc}
	...

0801eb44 <_Z41__static_initialization_and_destruction_0ii>:
	{

	}
}
 801eb44:	b590      	push	{r4, r7, lr}
 801eb46:	b0e7      	sub	sp, #412	; 0x19c
 801eb48:	af02      	add	r7, sp, #8
 801eb4a:	1d3b      	adds	r3, r7, #4
 801eb4c:	6018      	str	r0, [r3, #0]
 801eb4e:	463b      	mov	r3, r7
 801eb50:	6019      	str	r1, [r3, #0]
 801eb52:	1d3b      	adds	r3, r7, #4
 801eb54:	681b      	ldr	r3, [r3, #0]
 801eb56:	2b01      	cmp	r3, #1
 801eb58:	f040 819d 	bne.w	801ee96 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801eb5c:	463b      	mov	r3, r7
 801eb5e:	681b      	ldr	r3, [r3, #0]
 801eb60:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801eb64:	4293      	cmp	r3, r2
 801eb66:	f040 8196 	bne.w	801ee96 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801eb6a:	f107 0314 	add.w	r3, r7, #20
 801eb6e:	4618      	mov	r0, r3
 801eb70:	2322      	movs	r3, #34	; 0x22
 801eb72:	461a      	mov	r2, r3
 801eb74:	2100      	movs	r1, #0
 801eb76:	f005 fbed 	bl	8024354 <memset>
 801eb7a:	f107 0314 	add.w	r3, r7, #20
 801eb7e:	223a      	movs	r2, #58	; 0x3a
 801eb80:	701a      	strb	r2, [r3, #0]
 801eb82:	f107 0314 	add.w	r3, r7, #20
 801eb86:	2201      	movs	r2, #1
 801eb88:	705a      	strb	r2, [r3, #1]
 801eb8a:	f107 0314 	add.w	r3, r7, #20
 801eb8e:	220a      	movs	r2, #10
 801eb90:	709a      	strb	r2, [r3, #2]
 801eb92:	f107 0314 	add.w	r3, r7, #20
 801eb96:	220a      	movs	r2, #10
 801eb98:	70da      	strb	r2, [r3, #3]
 801eb9a:	f107 0314 	add.w	r3, r7, #20
 801eb9e:	222c      	movs	r2, #44	; 0x2c
 801eba0:	711a      	strb	r2, [r3, #4]
 801eba2:	f107 0314 	add.w	r3, r7, #20
 801eba6:	220c      	movs	r2, #12
 801eba8:	715a      	strb	r2, [r3, #5]
 801ebaa:	f107 0314 	add.w	r3, r7, #20
 801ebae:	222e      	movs	r2, #46	; 0x2e
 801ebb0:	719a      	strb	r2, [r3, #6]
 801ebb2:	f107 0314 	add.w	r3, r7, #20
 801ebb6:	220b      	movs	r2, #11
 801ebb8:	71da      	strb	r2, [r3, #7]
 801ebba:	f107 0314 	add.w	r3, r7, #20
 801ebbe:	225b      	movs	r2, #91	; 0x5b
 801ebc0:	721a      	strb	r2, [r3, #8]
 801ebc2:	f107 0314 	add.w	r3, r7, #20
 801ebc6:	220d      	movs	r2, #13
 801ebc8:	725a      	strb	r2, [r3, #9]
 801ebca:	f107 0314 	add.w	r3, r7, #20
 801ebce:	225d      	movs	r2, #93	; 0x5d
 801ebd0:	729a      	strb	r2, [r3, #10]
 801ebd2:	f107 0314 	add.w	r3, r7, #20
 801ebd6:	220e      	movs	r2, #14
 801ebd8:	72da      	strb	r2, [r3, #11]
 801ebda:	f107 0314 	add.w	r3, r7, #20
 801ebde:	227c      	movs	r2, #124	; 0x7c
 801ebe0:	731a      	strb	r2, [r3, #12]
 801ebe2:	f107 0314 	add.w	r3, r7, #20
 801ebe6:	2215      	movs	r2, #21
 801ebe8:	735a      	strb	r2, [r3, #13]
 801ebea:	f107 0314 	add.w	r3, r7, #20
 801ebee:	2226      	movs	r2, #38	; 0x26
 801ebf0:	739a      	strb	r2, [r3, #14]
 801ebf2:	f107 0314 	add.w	r3, r7, #20
 801ebf6:	2216      	movs	r2, #22
 801ebf8:	73da      	strb	r2, [r3, #15]
 801ebfa:	f107 0314 	add.w	r3, r7, #20
 801ebfe:	222b      	movs	r2, #43	; 0x2b
 801ec00:	741a      	strb	r2, [r3, #16]
 801ec02:	f107 0314 	add.w	r3, r7, #20
 801ec06:	221f      	movs	r2, #31
 801ec08:	745a      	strb	r2, [r3, #17]
 801ec0a:	f107 0314 	add.w	r3, r7, #20
 801ec0e:	222d      	movs	r2, #45	; 0x2d
 801ec10:	749a      	strb	r2, [r3, #18]
 801ec12:	f107 0314 	add.w	r3, r7, #20
 801ec16:	2220      	movs	r2, #32
 801ec18:	74da      	strb	r2, [r3, #19]
 801ec1a:	f107 0314 	add.w	r3, r7, #20
 801ec1e:	222a      	movs	r2, #42	; 0x2a
 801ec20:	751a      	strb	r2, [r3, #20]
 801ec22:	f107 0314 	add.w	r3, r7, #20
 801ec26:	2221      	movs	r2, #33	; 0x21
 801ec28:	755a      	strb	r2, [r3, #21]
 801ec2a:	f107 0314 	add.w	r3, r7, #20
 801ec2e:	222f      	movs	r2, #47	; 0x2f
 801ec30:	759a      	strb	r2, [r3, #22]
 801ec32:	f107 0314 	add.w	r3, r7, #20
 801ec36:	2222      	movs	r2, #34	; 0x22
 801ec38:	75da      	strb	r2, [r3, #23]
 801ec3a:	f107 0314 	add.w	r3, r7, #20
 801ec3e:	225e      	movs	r2, #94	; 0x5e
 801ec40:	761a      	strb	r2, [r3, #24]
 801ec42:	f107 0314 	add.w	r3, r7, #20
 801ec46:	2223      	movs	r2, #35	; 0x23
 801ec48:	765a      	strb	r2, [r3, #25]
 801ec4a:	f107 0314 	add.w	r3, r7, #20
 801ec4e:	2225      	movs	r2, #37	; 0x25
 801ec50:	769a      	strb	r2, [r3, #26]
 801ec52:	f107 0314 	add.w	r3, r7, #20
 801ec56:	2224      	movs	r2, #36	; 0x24
 801ec58:	76da      	strb	r2, [r3, #27]
 801ec5a:	f107 0314 	add.w	r3, r7, #20
 801ec5e:	2228      	movs	r2, #40	; 0x28
 801ec60:	771a      	strb	r2, [r3, #28]
 801ec62:	f107 0314 	add.w	r3, r7, #20
 801ec66:	2226      	movs	r2, #38	; 0x26
 801ec68:	775a      	strb	r2, [r3, #29]
 801ec6a:	f107 0314 	add.w	r3, r7, #20
 801ec6e:	2229      	movs	r2, #41	; 0x29
 801ec70:	779a      	strb	r2, [r3, #30]
 801ec72:	f107 0314 	add.w	r3, r7, #20
 801ec76:	2227      	movs	r2, #39	; 0x27
 801ec78:	77da      	strb	r2, [r3, #31]
 801ec7a:	f107 0314 	add.w	r3, r7, #20
 801ec7e:	2225      	movs	r2, #37	; 0x25
 801ec80:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801ec84:	f107 030c 	add.w	r3, r7, #12
 801ec88:	f107 0214 	add.w	r2, r7, #20
 801ec8c:	601a      	str	r2, [r3, #0]
 801ec8e:	f107 030c 	add.w	r3, r7, #12
 801ec92:	2211      	movs	r2, #17
 801ec94:	605a      	str	r2, [r3, #4]
 801ec96:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801ec9a:	4618      	mov	r0, r3
 801ec9c:	f7e2 fb22 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801eca0:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801eca4:	f107 020c 	add.w	r2, r7, #12
 801eca8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801ecac:	9300      	str	r3, [sp, #0]
 801ecae:	460b      	mov	r3, r1
 801ecb0:	ca06      	ldmia	r2, {r1, r2}
 801ecb2:	4885      	ldr	r0, [pc, #532]	; (801eec8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801ecb4:	f7e2 fb2e 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801ecb8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801ecbc:	4618      	mov	r0, r3
 801ecbe:	f7e2 fb1d 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801ecc2:	2305      	movs	r3, #5
 801ecc4:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801ecc8:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801eccc:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ecd0:	497e      	ldr	r1, [pc, #504]	; (801eecc <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801ecd2:	4618      	mov	r0, r3
 801ecd4:	f7e2 fa0a 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801ecd8:	2306      	movs	r3, #6
 801ecda:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801ecde:	f207 1263 	addw	r2, r7, #355	; 0x163
 801ece2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ece6:	331c      	adds	r3, #28
 801ece8:	4979      	ldr	r1, [pc, #484]	; (801eed0 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801ecea:	4618      	mov	r0, r3
 801ecec:	f7e2 fa26 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801ecf0:	2307      	movs	r3, #7
 801ecf2:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801ecf6:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801ecfa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ecfe:	3338      	adds	r3, #56	; 0x38
 801ed00:	4974      	ldr	r1, [pc, #464]	; (801eed4 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801ed02:	4618      	mov	r0, r3
 801ed04:	f7e2 fa1a 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801ed08:	2308      	movs	r3, #8
 801ed0a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801ed0e:	f207 1265 	addw	r2, r7, #357	; 0x165
 801ed12:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ed16:	3354      	adds	r3, #84	; 0x54
 801ed18:	496f      	ldr	r1, [pc, #444]	; (801eed8 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801ed1a:	4618      	mov	r0, r3
 801ed1c:	f7e2 f9e6 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801ed20:	2309      	movs	r3, #9
 801ed22:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801ed26:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801ed2a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ed2e:	3370      	adds	r3, #112	; 0x70
 801ed30:	496a      	ldr	r1, [pc, #424]	; (801eedc <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801ed32:	4618      	mov	r0, r3
 801ed34:	f7e2 fa2a 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801ed38:	2310      	movs	r3, #16
 801ed3a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801ed3e:	f207 1267 	addw	r2, r7, #359	; 0x167
 801ed42:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ed46:	338c      	adds	r3, #140	; 0x8c
 801ed48:	4965      	ldr	r1, [pc, #404]	; (801eee0 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801ed4a:	4618      	mov	r0, r3
 801ed4c:	f7e2 fa46 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801ed50:	2311      	movs	r3, #17
 801ed52:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801ed56:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801ed5a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ed5e:	33a8      	adds	r3, #168	; 0xa8
 801ed60:	4960      	ldr	r1, [pc, #384]	; (801eee4 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801ed62:	4618      	mov	r0, r3
 801ed64:	f7e2 fa12 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801ed68:	2312      	movs	r3, #18
 801ed6a:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801ed6e:	f207 1269 	addw	r2, r7, #361	; 0x169
 801ed72:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ed76:	33c4      	adds	r3, #196	; 0xc4
 801ed78:	495b      	ldr	r1, [pc, #364]	; (801eee8 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801ed7a:	4618      	mov	r0, r3
 801ed7c:	f7e2 f9b6 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801ed80:	2313      	movs	r3, #19
 801ed82:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801ed86:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801ed8a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ed8e:	33e0      	adds	r3, #224	; 0xe0
 801ed90:	4956      	ldr	r1, [pc, #344]	; (801eeec <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801ed92:	4618      	mov	r0, r3
 801ed94:	f7e2 f9d2 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801ed98:	2314      	movs	r3, #20
 801ed9a:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801ed9e:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801eda2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801eda6:	33fc      	adds	r3, #252	; 0xfc
 801eda8:	4951      	ldr	r1, [pc, #324]	; (801eef0 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801edaa:	4618      	mov	r0, r3
 801edac:	f7e2 fa3e 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801edb0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801edb4:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801edb8:	601a      	str	r2, [r3, #0]
 801edba:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801edbe:	220a      	movs	r2, #10
 801edc0:	605a      	str	r2, [r3, #4]
 801edc2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801edc6:	4618      	mov	r0, r3
 801edc8:	f7e2 fb31 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801edcc:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801edd0:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801edd4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801edd8:	9300      	str	r3, [sp, #0]
 801edda:	460b      	mov	r3, r1
 801eddc:	ca06      	ldmia	r2, {r1, r2}
 801edde:	4845      	ldr	r0, [pc, #276]	; (801eef4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801ede0:	f7e2 fb3d 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801ede4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801ede8:	4618      	mov	r0, r3
 801edea:	f7e2 fb2c 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801edee:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801edf2:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801edf6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801edfa:	429c      	cmp	r4, r3
 801edfc:	d004      	beq.n	801ee08 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801edfe:	3c1c      	subs	r4, #28
 801ee00:	4620      	mov	r0, r4
 801ee02:	f7e2 f966 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801ee06:	e7f6      	b.n	801edf6 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801ee08:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801ee0c:	2200      	movs	r2, #0
 801ee0e:	601a      	str	r2, [r3, #0]
 801ee10:	605a      	str	r2, [r3, #4]
 801ee12:	609a      	str	r2, [r3, #8]
 801ee14:	233c      	movs	r3, #60	; 0x3c
 801ee16:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801ee1a:	231b      	movs	r3, #27
 801ee1c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801ee20:	231c      	movs	r3, #28
 801ee22:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801ee26:	233e      	movs	r3, #62	; 0x3e
 801ee28:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801ee2c:	2319      	movs	r3, #25
 801ee2e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801ee32:	231a      	movs	r3, #26
 801ee34:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801ee38:	233d      	movs	r3, #61	; 0x3d
 801ee3a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801ee3e:	2318      	movs	r3, #24
 801ee40:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801ee44:	231d      	movs	r3, #29
 801ee46:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801ee4a:	2321      	movs	r3, #33	; 0x21
 801ee4c:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801ee50:	2317      	movs	r3, #23
 801ee52:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801ee56:	231e      	movs	r3, #30
 801ee58:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801ee5c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801ee60:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801ee64:	2304      	movs	r3, #4
 801ee66:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801ee6a:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801ee6e:	4618      	mov	r0, r3
 801ee70:	f7e2 fb25 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801ee74:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801ee78:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801ee7c:	9300      	str	r3, [sp, #0]
 801ee7e:	4613      	mov	r3, r2
 801ee80:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801ee84:	ca06      	ldmia	r2, {r1, r2}
 801ee86:	481c      	ldr	r0, [pc, #112]	; (801eef8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801ee88:	f7e2 fb31 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801ee8c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801ee90:	4618      	mov	r0, r3
 801ee92:	f7e2 fb20 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801ee96:	1d3b      	adds	r3, r7, #4
 801ee98:	681b      	ldr	r3, [r3, #0]
 801ee9a:	2b00      	cmp	r3, #0
 801ee9c:	d10e      	bne.n	801eebc <_Z41__static_initialization_and_destruction_0ii+0x378>
 801ee9e:	463b      	mov	r3, r7
 801eea0:	681b      	ldr	r3, [r3, #0]
 801eea2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801eea6:	4293      	cmp	r3, r2
 801eea8:	d108      	bne.n	801eebc <_Z41__static_initialization_and_destruction_0ii+0x378>
 801eeaa:	4813      	ldr	r0, [pc, #76]	; (801eef8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801eeac:	f7e4 ff78 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801eeb0:	4810      	ldr	r0, [pc, #64]	; (801eef4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801eeb2:	f7e4 ff82 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801eeb6:	4804      	ldr	r0, [pc, #16]	; (801eec8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801eeb8:	f7e4 ff8c 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801eebc:	bf00      	nop
 801eebe:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801eec2:	46bd      	mov	sp, r7
 801eec4:	bd90      	pop	{r4, r7, pc}
 801eec6:	bf00      	nop
 801eec8:	20000600 	.word	0x20000600
 801eecc:	08027d44 	.word	0x08027d44
 801eed0:	08027d4c 	.word	0x08027d4c
 801eed4:	08027d54 	.word	0x08027d54
 801eed8:	08027d5c 	.word	0x08027d5c
 801eedc:	08027d64 	.word	0x08027d64
 801eee0:	08027d6c 	.word	0x08027d6c
 801eee4:	08027d70 	.word	0x08027d70
 801eee8:	08027d78 	.word	0x08027d78
 801eeec:	08027d80 	.word	0x08027d80
 801eef0:	08027d88 	.word	0x08027d88
 801eef4:	20000618 	.word	0x20000618
 801eef8:	20000630 	.word	0x20000630

0801eefc <_GLOBAL__sub_I__Z11my_main_runP20__UART_HandleTypeDef>:
 801eefc:	b580      	push	{r7, lr}
 801eefe:	af00      	add	r7, sp, #0
 801ef00:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801ef04:	2001      	movs	r0, #1
 801ef06:	f7ff fe1d 	bl	801eb44 <_Z41__static_initialization_and_destruction_0ii>
 801ef0a:	bd80      	pop	{r7, pc}

0801ef0c <_GLOBAL__sub_D__Z11my_main_runP20__UART_HandleTypeDef>:
 801ef0c:	b580      	push	{r7, lr}
 801ef0e:	af00      	add	r7, sp, #0
 801ef10:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801ef14:	2000      	movs	r0, #0
 801ef16:	f7ff fe15 	bl	801eb44 <_Z41__static_initialization_and_destruction_0ii>
 801ef1a:	bd80      	pop	{r7, pc}

0801ef1c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 801ef1c:	b480      	push	{r7}
 801ef1e:	b083      	sub	sp, #12
 801ef20:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 801ef22:	4b0f      	ldr	r3, [pc, #60]	; (801ef60 <HAL_MspInit+0x44>)
 801ef24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ef26:	4a0e      	ldr	r2, [pc, #56]	; (801ef60 <HAL_MspInit+0x44>)
 801ef28:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801ef2c:	6413      	str	r3, [r2, #64]	; 0x40
 801ef2e:	4b0c      	ldr	r3, [pc, #48]	; (801ef60 <HAL_MspInit+0x44>)
 801ef30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ef32:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801ef36:	607b      	str	r3, [r7, #4]
 801ef38:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 801ef3a:	4b09      	ldr	r3, [pc, #36]	; (801ef60 <HAL_MspInit+0x44>)
 801ef3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ef3e:	4a08      	ldr	r2, [pc, #32]	; (801ef60 <HAL_MspInit+0x44>)
 801ef40:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801ef44:	6453      	str	r3, [r2, #68]	; 0x44
 801ef46:	4b06      	ldr	r3, [pc, #24]	; (801ef60 <HAL_MspInit+0x44>)
 801ef48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ef4a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 801ef4e:	603b      	str	r3, [r7, #0]
 801ef50:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 801ef52:	bf00      	nop
 801ef54:	370c      	adds	r7, #12
 801ef56:	46bd      	mov	sp, r7
 801ef58:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ef5c:	4770      	bx	lr
 801ef5e:	bf00      	nop
 801ef60:	40023800 	.word	0x40023800

0801ef64 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 801ef64:	b580      	push	{r7, lr}
 801ef66:	b08a      	sub	sp, #40	; 0x28
 801ef68:	af00      	add	r7, sp, #0
 801ef6a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 801ef6c:	f107 0314 	add.w	r3, r7, #20
 801ef70:	2200      	movs	r2, #0
 801ef72:	601a      	str	r2, [r3, #0]
 801ef74:	605a      	str	r2, [r3, #4]
 801ef76:	609a      	str	r2, [r3, #8]
 801ef78:	60da      	str	r2, [r3, #12]
 801ef7a:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 801ef7c:	687b      	ldr	r3, [r7, #4]
 801ef7e:	681b      	ldr	r3, [r3, #0]
 801ef80:	4a1b      	ldr	r2, [pc, #108]	; (801eff0 <HAL_UART_MspInit+0x8c>)
 801ef82:	4293      	cmp	r3, r2
 801ef84:	d130      	bne.n	801efe8 <HAL_UART_MspInit+0x84>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 801ef86:	4b1b      	ldr	r3, [pc, #108]	; (801eff4 <HAL_UART_MspInit+0x90>)
 801ef88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ef8a:	4a1a      	ldr	r2, [pc, #104]	; (801eff4 <HAL_UART_MspInit+0x90>)
 801ef8c:	f043 0310 	orr.w	r3, r3, #16
 801ef90:	6453      	str	r3, [r2, #68]	; 0x44
 801ef92:	4b18      	ldr	r3, [pc, #96]	; (801eff4 <HAL_UART_MspInit+0x90>)
 801ef94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ef96:	f003 0310 	and.w	r3, r3, #16
 801ef9a:	613b      	str	r3, [r7, #16]
 801ef9c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 801ef9e:	4b15      	ldr	r3, [pc, #84]	; (801eff4 <HAL_UART_MspInit+0x90>)
 801efa0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801efa2:	4a14      	ldr	r2, [pc, #80]	; (801eff4 <HAL_UART_MspInit+0x90>)
 801efa4:	f043 0301 	orr.w	r3, r3, #1
 801efa8:	6313      	str	r3, [r2, #48]	; 0x30
 801efaa:	4b12      	ldr	r3, [pc, #72]	; (801eff4 <HAL_UART_MspInit+0x90>)
 801efac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801efae:	f003 0301 	and.w	r3, r3, #1
 801efb2:	60fb      	str	r3, [r7, #12]
 801efb4:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 801efb6:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 801efba:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 801efbc:	2302      	movs	r3, #2
 801efbe:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 801efc0:	2300      	movs	r3, #0
 801efc2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 801efc4:	2303      	movs	r3, #3
 801efc6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 801efc8:	2307      	movs	r3, #7
 801efca:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 801efcc:	f107 0314 	add.w	r3, r7, #20
 801efd0:	4619      	mov	r1, r3
 801efd2:	4809      	ldr	r0, [pc, #36]	; (801eff8 <HAL_UART_MspInit+0x94>)
 801efd4:	f001 fbf0 	bl	80207b8 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 801efd8:	2200      	movs	r2, #0
 801efda:	2100      	movs	r1, #0
 801efdc:	2025      	movs	r0, #37	; 0x25
 801efde:	f001 fb22 	bl	8020626 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 801efe2:	2025      	movs	r0, #37	; 0x25
 801efe4:	f001 fb3b 	bl	802065e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 801efe8:	bf00      	nop
 801efea:	3728      	adds	r7, #40	; 0x28
 801efec:	46bd      	mov	sp, r7
 801efee:	bd80      	pop	{r7, pc}
 801eff0:	40011000 	.word	0x40011000
 801eff4:	40023800 	.word	0x40023800
 801eff8:	40020000 	.word	0x40020000

0801effc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 801effc:	b480      	push	{r7}
 801effe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 801f000:	e7fe      	b.n	801f000 <NMI_Handler+0x4>

0801f002 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 801f002:	b480      	push	{r7}
 801f004:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 801f006:	e7fe      	b.n	801f006 <HardFault_Handler+0x4>

0801f008 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 801f008:	b480      	push	{r7}
 801f00a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 801f00c:	e7fe      	b.n	801f00c <MemManage_Handler+0x4>

0801f00e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 801f00e:	b480      	push	{r7}
 801f010:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 801f012:	e7fe      	b.n	801f012 <BusFault_Handler+0x4>

0801f014 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 801f014:	b480      	push	{r7}
 801f016:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 801f018:	e7fe      	b.n	801f018 <UsageFault_Handler+0x4>

0801f01a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 801f01a:	b480      	push	{r7}
 801f01c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 801f01e:	bf00      	nop
 801f020:	46bd      	mov	sp, r7
 801f022:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f026:	4770      	bx	lr

0801f028 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 801f028:	b480      	push	{r7}
 801f02a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 801f02c:	bf00      	nop
 801f02e:	46bd      	mov	sp, r7
 801f030:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f034:	4770      	bx	lr

0801f036 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 801f036:	b480      	push	{r7}
 801f038:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 801f03a:	bf00      	nop
 801f03c:	46bd      	mov	sp, r7
 801f03e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f042:	4770      	bx	lr

0801f044 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 801f044:	b580      	push	{r7, lr}
 801f046:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 801f048:	f001 f9ce 	bl	80203e8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 801f04c:	bf00      	nop
 801f04e:	bd80      	pop	{r7, pc}

0801f050 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 801f050:	b580      	push	{r7, lr}
 801f052:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 801f054:	4802      	ldr	r0, [pc, #8]	; (801f060 <USART1_IRQHandler+0x10>)
 801f056:	f002 ffc7 	bl	8021fe8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 801f05a:	bf00      	nop
 801f05c:	bd80      	pop	{r7, pc}
 801f05e:	bf00      	nop
 801f060:	2000057c 	.word	0x2000057c

0801f064 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 801f064:	b480      	push	{r7}
 801f066:	af00      	add	r7, sp, #0
	return 1;
 801f068:	2301      	movs	r3, #1
}
 801f06a:	4618      	mov	r0, r3
 801f06c:	46bd      	mov	sp, r7
 801f06e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f072:	4770      	bx	lr

0801f074 <_kill>:

int _kill(int pid, int sig)
{
 801f074:	b580      	push	{r7, lr}
 801f076:	b082      	sub	sp, #8
 801f078:	af00      	add	r7, sp, #0
 801f07a:	6078      	str	r0, [r7, #4]
 801f07c:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 801f07e:	f005 f8c7 	bl	8024210 <__errno>
 801f082:	4603      	mov	r3, r0
 801f084:	2216      	movs	r2, #22
 801f086:	601a      	str	r2, [r3, #0]
	return -1;
 801f088:	f04f 33ff 	mov.w	r3, #4294967295
}
 801f08c:	4618      	mov	r0, r3
 801f08e:	3708      	adds	r7, #8
 801f090:	46bd      	mov	sp, r7
 801f092:	bd80      	pop	{r7, pc}

0801f094 <_exit>:

void _exit (int status)
{
 801f094:	b580      	push	{r7, lr}
 801f096:	b082      	sub	sp, #8
 801f098:	af00      	add	r7, sp, #0
 801f09a:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 801f09c:	f04f 31ff 	mov.w	r1, #4294967295
 801f0a0:	6878      	ldr	r0, [r7, #4]
 801f0a2:	f7ff ffe7 	bl	801f074 <_kill>
	while (1) {}		/* Make sure we hang here */
 801f0a6:	e7fe      	b.n	801f0a6 <_exit+0x12>

0801f0a8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 801f0a8:	b580      	push	{r7, lr}
 801f0aa:	b086      	sub	sp, #24
 801f0ac:	af00      	add	r7, sp, #0
 801f0ae:	60f8      	str	r0, [r7, #12]
 801f0b0:	60b9      	str	r1, [r7, #8]
 801f0b2:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801f0b4:	2300      	movs	r3, #0
 801f0b6:	617b      	str	r3, [r7, #20]
 801f0b8:	e00a      	b.n	801f0d0 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 801f0ba:	f3af 8000 	nop.w
 801f0be:	4601      	mov	r1, r0
 801f0c0:	68bb      	ldr	r3, [r7, #8]
 801f0c2:	1c5a      	adds	r2, r3, #1
 801f0c4:	60ba      	str	r2, [r7, #8]
 801f0c6:	b2ca      	uxtb	r2, r1
 801f0c8:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801f0ca:	697b      	ldr	r3, [r7, #20]
 801f0cc:	3301      	adds	r3, #1
 801f0ce:	617b      	str	r3, [r7, #20]
 801f0d0:	697a      	ldr	r2, [r7, #20]
 801f0d2:	687b      	ldr	r3, [r7, #4]
 801f0d4:	429a      	cmp	r2, r3
 801f0d6:	dbf0      	blt.n	801f0ba <_read+0x12>
	}

return len;
 801f0d8:	687b      	ldr	r3, [r7, #4]
}
 801f0da:	4618      	mov	r0, r3
 801f0dc:	3718      	adds	r7, #24
 801f0de:	46bd      	mov	sp, r7
 801f0e0:	bd80      	pop	{r7, pc}

0801f0e2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 801f0e2:	b580      	push	{r7, lr}
 801f0e4:	b086      	sub	sp, #24
 801f0e6:	af00      	add	r7, sp, #0
 801f0e8:	60f8      	str	r0, [r7, #12]
 801f0ea:	60b9      	str	r1, [r7, #8]
 801f0ec:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801f0ee:	2300      	movs	r3, #0
 801f0f0:	617b      	str	r3, [r7, #20]
 801f0f2:	e009      	b.n	801f108 <_write+0x26>
	{
		__io_putchar(*ptr++);
 801f0f4:	68bb      	ldr	r3, [r7, #8]
 801f0f6:	1c5a      	adds	r2, r3, #1
 801f0f8:	60ba      	str	r2, [r7, #8]
 801f0fa:	781b      	ldrb	r3, [r3, #0]
 801f0fc:	4618      	mov	r0, r3
 801f0fe:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801f102:	697b      	ldr	r3, [r7, #20]
 801f104:	3301      	adds	r3, #1
 801f106:	617b      	str	r3, [r7, #20]
 801f108:	697a      	ldr	r2, [r7, #20]
 801f10a:	687b      	ldr	r3, [r7, #4]
 801f10c:	429a      	cmp	r2, r3
 801f10e:	dbf1      	blt.n	801f0f4 <_write+0x12>
	}
	return len;
 801f110:	687b      	ldr	r3, [r7, #4]
}
 801f112:	4618      	mov	r0, r3
 801f114:	3718      	adds	r7, #24
 801f116:	46bd      	mov	sp, r7
 801f118:	bd80      	pop	{r7, pc}

0801f11a <_close>:

int _close(int file)
{
 801f11a:	b480      	push	{r7}
 801f11c:	b083      	sub	sp, #12
 801f11e:	af00      	add	r7, sp, #0
 801f120:	6078      	str	r0, [r7, #4]
	return -1;
 801f122:	f04f 33ff 	mov.w	r3, #4294967295
}
 801f126:	4618      	mov	r0, r3
 801f128:	370c      	adds	r7, #12
 801f12a:	46bd      	mov	sp, r7
 801f12c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f130:	4770      	bx	lr

0801f132 <_fstat>:


int _fstat(int file, struct stat *st)
{
 801f132:	b480      	push	{r7}
 801f134:	b083      	sub	sp, #12
 801f136:	af00      	add	r7, sp, #0
 801f138:	6078      	str	r0, [r7, #4]
 801f13a:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 801f13c:	683b      	ldr	r3, [r7, #0]
 801f13e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 801f142:	605a      	str	r2, [r3, #4]
	return 0;
 801f144:	2300      	movs	r3, #0
}
 801f146:	4618      	mov	r0, r3
 801f148:	370c      	adds	r7, #12
 801f14a:	46bd      	mov	sp, r7
 801f14c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f150:	4770      	bx	lr

0801f152 <_isatty>:

int _isatty(int file)
{
 801f152:	b480      	push	{r7}
 801f154:	b083      	sub	sp, #12
 801f156:	af00      	add	r7, sp, #0
 801f158:	6078      	str	r0, [r7, #4]
	return 1;
 801f15a:	2301      	movs	r3, #1
}
 801f15c:	4618      	mov	r0, r3
 801f15e:	370c      	adds	r7, #12
 801f160:	46bd      	mov	sp, r7
 801f162:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f166:	4770      	bx	lr

0801f168 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 801f168:	b480      	push	{r7}
 801f16a:	b085      	sub	sp, #20
 801f16c:	af00      	add	r7, sp, #0
 801f16e:	60f8      	str	r0, [r7, #12]
 801f170:	60b9      	str	r1, [r7, #8]
 801f172:	607a      	str	r2, [r7, #4]
	return 0;
 801f174:	2300      	movs	r3, #0
}
 801f176:	4618      	mov	r0, r3
 801f178:	3714      	adds	r7, #20
 801f17a:	46bd      	mov	sp, r7
 801f17c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f180:	4770      	bx	lr
	...

0801f184 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 801f184:	b580      	push	{r7, lr}
 801f186:	b086      	sub	sp, #24
 801f188:	af00      	add	r7, sp, #0
 801f18a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 801f18c:	4a14      	ldr	r2, [pc, #80]	; (801f1e0 <_sbrk+0x5c>)
 801f18e:	4b15      	ldr	r3, [pc, #84]	; (801f1e4 <_sbrk+0x60>)
 801f190:	1ad3      	subs	r3, r2, r3
 801f192:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 801f194:	697b      	ldr	r3, [r7, #20]
 801f196:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 801f198:	4b13      	ldr	r3, [pc, #76]	; (801f1e8 <_sbrk+0x64>)
 801f19a:	681b      	ldr	r3, [r3, #0]
 801f19c:	2b00      	cmp	r3, #0
 801f19e:	d102      	bne.n	801f1a6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 801f1a0:	4b11      	ldr	r3, [pc, #68]	; (801f1e8 <_sbrk+0x64>)
 801f1a2:	4a12      	ldr	r2, [pc, #72]	; (801f1ec <_sbrk+0x68>)
 801f1a4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 801f1a6:	4b10      	ldr	r3, [pc, #64]	; (801f1e8 <_sbrk+0x64>)
 801f1a8:	681a      	ldr	r2, [r3, #0]
 801f1aa:	687b      	ldr	r3, [r7, #4]
 801f1ac:	4413      	add	r3, r2
 801f1ae:	693a      	ldr	r2, [r7, #16]
 801f1b0:	429a      	cmp	r2, r3
 801f1b2:	d207      	bcs.n	801f1c4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 801f1b4:	f005 f82c 	bl	8024210 <__errno>
 801f1b8:	4603      	mov	r3, r0
 801f1ba:	220c      	movs	r2, #12
 801f1bc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 801f1be:	f04f 33ff 	mov.w	r3, #4294967295
 801f1c2:	e009      	b.n	801f1d8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 801f1c4:	4b08      	ldr	r3, [pc, #32]	; (801f1e8 <_sbrk+0x64>)
 801f1c6:	681b      	ldr	r3, [r3, #0]
 801f1c8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 801f1ca:	4b07      	ldr	r3, [pc, #28]	; (801f1e8 <_sbrk+0x64>)
 801f1cc:	681a      	ldr	r2, [r3, #0]
 801f1ce:	687b      	ldr	r3, [r7, #4]
 801f1d0:	4413      	add	r3, r2
 801f1d2:	4a05      	ldr	r2, [pc, #20]	; (801f1e8 <_sbrk+0x64>)
 801f1d4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 801f1d6:	68fb      	ldr	r3, [r7, #12]
}
 801f1d8:	4618      	mov	r0, r3
 801f1da:	3718      	adds	r7, #24
 801f1dc:	46bd      	mov	sp, r7
 801f1de:	bd80      	pop	{r7, pc}
 801f1e0:	20050000 	.word	0x20050000
 801f1e4:	00000400 	.word	0x00000400
 801f1e8:	20000648 	.word	0x20000648
 801f1ec:	20000748 	.word	0x20000748

0801f1f0 <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 801f1f0:	b480      	push	{r7}
 801f1f2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 801f1f4:	4b06      	ldr	r3, [pc, #24]	; (801f210 <SystemInit+0x20>)
 801f1f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801f1fa:	4a05      	ldr	r2, [pc, #20]	; (801f210 <SystemInit+0x20>)
 801f1fc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801f200:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 801f204:	bf00      	nop
 801f206:	46bd      	mov	sp, r7
 801f208:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f20c:	4770      	bx	lr
 801f20e:	bf00      	nop
 801f210:	e000ed00 	.word	0xe000ed00

0801f214 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE>:

namespace
{

Symbol run_single_experiment_iteration(arglist arguments = { })
{
 801f214:	b590      	push	{r4, r7, lr}
 801f216:	f5ad 7d1d 	sub.w	sp, sp, #628	; 0x274
 801f21a:	af00      	add	r7, sp, #0
 801f21c:	1d3b      	adds	r3, r7, #4
 801f21e:	6018      	str	r0, [r3, #0]
 801f220:	463b      	mov	r3, r7
 801f222:	6019      	str	r1, [r3, #0]
	Symbol x = 5;
 801f224:	1d3b      	adds	r3, r7, #4
 801f226:	2105      	movs	r1, #5
 801f228:	6818      	ldr	r0, [r3, #0]
 801f22a:	f7f8 f90b 	bl	8017444 <_ZN6SymbolC1Ei>

	if (arguments.size() > 0)
 801f22e:	463b      	mov	r3, r7
 801f230:	6818      	ldr	r0, [r3, #0]
 801f232:	f7f0 f9d0 	bl	800f5d6 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 801f236:	4603      	mov	r3, r0
 801f238:	2b00      	cmp	r3, #0
 801f23a:	bf14      	ite	ne
 801f23c:	2301      	movne	r3, #1
 801f23e:	2300      	moveq	r3, #0
 801f240:	b2db      	uxtb	r3, r3
 801f242:	2b00      	cmp	r3, #0
 801f244:	d01b      	beq.n	801f27e <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x6a>
	{
		x = EVALUATE(arguments[0]);
 801f246:	f7e7 fac3 	bl	80067d0 <_ZN21Expression_calculator12get_instanceEv>
 801f24a:	4604      	mov	r4, r0
 801f24c:	463b      	mov	r3, r7
 801f24e:	2100      	movs	r1, #0
 801f250:	6818      	ldr	r0, [r3, #0]
 801f252:	f000 fabd 	bl	801f7d0 <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>
 801f256:	4603      	mov	r3, r0
 801f258:	681a      	ldr	r2, [r3, #0]
 801f25a:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801f25e:	4621      	mov	r1, r4
 801f260:	4618      	mov	r0, r3
 801f262:	f7e7 fbc3 	bl	80069ec <_ZN21Expression_calculator8evaluateEP10Expression>
 801f266:	f107 0268 	add.w	r2, r7, #104	; 0x68
 801f26a:	1d3b      	adds	r3, r7, #4
 801f26c:	4611      	mov	r1, r2
 801f26e:	6818      	ldr	r0, [r3, #0]
 801f270:	f7e7 fb50 	bl	8006914 <_ZN6SymbolaSEOS_>
 801f274:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801f278:	4618      	mov	r0, r3
 801f27a:	f7e7 fb1d 	bl	80068b8 <_ZN6SymbolD1Ev>
	}

	ARG(x) = 3;
 801f27e:	f107 0388 	add.w	r3, r7, #136	; 0x88
 801f282:	2103      	movs	r1, #3
 801f284:	4618      	mov	r0, r3
 801f286:	f7f8 f8dd 	bl	8017444 <_ZN6SymbolC1Ei>
 801f28a:	f7f9 feef 	bl	801906c <_ZN16Variable_handler12get_instanceEv>
 801f28e:	4604      	mov	r4, r0
 801f290:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 801f294:	4618      	mov	r0, r3
 801f296:	f003 fce8 	bl	8022c6a <_ZNSaIcEC1Ev>
 801f29a:	f107 02c0 	add.w	r2, r7, #192	; 0xc0
 801f29e:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801f2a2:	49e0      	ldr	r1, [pc, #896]	; (801f624 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x410>)
 801f2a4:	4618      	mov	r0, r3
 801f2a6:	f7e2 f870 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f2aa:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801f2ae:	4619      	mov	r1, r3
 801f2b0:	4620      	mov	r0, r4
 801f2b2:	f7f9 ff09 	bl	80190c8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f2b6:	4602      	mov	r2, r0
 801f2b8:	f107 0388 	add.w	r3, r7, #136	; 0x88
 801f2bc:	4619      	mov	r1, r3
 801f2be:	4610      	mov	r0, r2
 801f2c0:	f7e7 fb28 	bl	8006914 <_ZN6SymbolaSEOS_>
 801f2c4:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801f2c8:	4618      	mov	r0, r3
 801f2ca:	f003 fe94 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f2ce:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 801f2d2:	4618      	mov	r0, r3
 801f2d4:	f003 fcca 	bl	8022c6c <_ZNSaIcED1Ev>
 801f2d8:	f107 0388 	add.w	r3, r7, #136	; 0x88
 801f2dc:	4618      	mov	r0, r3
 801f2de:	f7e7 faeb 	bl	80068b8 <_ZN6SymbolD1Ev>
	x = ARG(x);
 801f2e2:	f7f9 fec3 	bl	801906c <_ZN16Variable_handler12get_instanceEv>
 801f2e6:	4604      	mov	r4, r0
 801f2e8:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 801f2ec:	4618      	mov	r0, r3
 801f2ee:	f003 fcbc 	bl	8022c6a <_ZNSaIcEC1Ev>
 801f2f2:	f107 02dc 	add.w	r2, r7, #220	; 0xdc
 801f2f6:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801f2fa:	49ca      	ldr	r1, [pc, #808]	; (801f624 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x410>)
 801f2fc:	4618      	mov	r0, r3
 801f2fe:	f7e2 f844 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f302:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801f306:	4619      	mov	r1, r3
 801f308:	4620      	mov	r0, r4
 801f30a:	f7f9 fedd 	bl	80190c8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f30e:	4602      	mov	r2, r0
 801f310:	1d3b      	adds	r3, r7, #4
 801f312:	4611      	mov	r1, r2
 801f314:	6818      	ldr	r0, [r3, #0]
 801f316:	f7e8 f88a 	bl	800742e <_ZN6SymbolaSERKS_>
 801f31a:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801f31e:	4618      	mov	r0, r3
 801f320:	f003 fe69 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f324:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 801f328:	4618      	mov	r0, r3
 801f32a:	f003 fc9f 	bl	8022c6c <_ZNSaIcED1Ev>
	ARG(messages) = "hello";
 801f32e:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 801f332:	49bd      	ldr	r1, [pc, #756]	; (801f628 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x414>)
 801f334:	4618      	mov	r0, r3
 801f336:	f7f8 f8ea 	bl	801750e <_ZN6SymbolC1EPKc>
 801f33a:	f7f9 fe97 	bl	801906c <_ZN16Variable_handler12get_instanceEv>
 801f33e:	4604      	mov	r4, r0
 801f340:	f507 738c 	add.w	r3, r7, #280	; 0x118
 801f344:	4618      	mov	r0, r3
 801f346:	f003 fc90 	bl	8022c6a <_ZNSaIcEC1Ev>
 801f34a:	f507 728c 	add.w	r2, r7, #280	; 0x118
 801f34e:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801f352:	49b6      	ldr	r1, [pc, #728]	; (801f62c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x418>)
 801f354:	4618      	mov	r0, r3
 801f356:	f7e2 f818 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f35a:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801f35e:	4619      	mov	r1, r3
 801f360:	4620      	mov	r0, r4
 801f362:	f7f9 feb1 	bl	80190c8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f366:	4602      	mov	r2, r0
 801f368:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 801f36c:	4619      	mov	r1, r3
 801f36e:	4610      	mov	r0, r2
 801f370:	f7e7 fad0 	bl	8006914 <_ZN6SymbolaSEOS_>
 801f374:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801f378:	4618      	mov	r0, r3
 801f37a:	f003 fe3c 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f37e:	f507 738c 	add.w	r3, r7, #280	; 0x118
 801f382:	4618      	mov	r0, r3
 801f384:	f003 fc72 	bl	8022c6c <_ZNSaIcED1Ev>
 801f388:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 801f38c:	4618      	mov	r0, r3
 801f38e:	f7e7 fa93 	bl	80068b8 <_ZN6SymbolD1Ev>
	x = ARG(messages);
 801f392:	f7f9 fe6b 	bl	801906c <_ZN16Variable_handler12get_instanceEv>
 801f396:	4604      	mov	r4, r0
 801f398:	f507 739a 	add.w	r3, r7, #308	; 0x134
 801f39c:	4618      	mov	r0, r3
 801f39e:	f003 fc64 	bl	8022c6a <_ZNSaIcEC1Ev>
 801f3a2:	f507 729a 	add.w	r2, r7, #308	; 0x134
 801f3a6:	f507 738e 	add.w	r3, r7, #284	; 0x11c
 801f3aa:	49a0      	ldr	r1, [pc, #640]	; (801f62c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x418>)
 801f3ac:	4618      	mov	r0, r3
 801f3ae:	f7e1 ffec 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f3b2:	f507 738e 	add.w	r3, r7, #284	; 0x11c
 801f3b6:	4619      	mov	r1, r3
 801f3b8:	4620      	mov	r0, r4
 801f3ba:	f7f9 fe85 	bl	80190c8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f3be:	4602      	mov	r2, r0
 801f3c0:	1d3b      	adds	r3, r7, #4
 801f3c2:	4611      	mov	r1, r2
 801f3c4:	6818      	ldr	r0, [r3, #0]
 801f3c6:	f7e8 f832 	bl	800742e <_ZN6SymbolaSERKS_>
 801f3ca:	f507 738e 	add.w	r3, r7, #284	; 0x11c
 801f3ce:	4618      	mov	r0, r3
 801f3d0:	f003 fe11 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f3d4:	f507 739a 	add.w	r3, r7, #308	; 0x134
 801f3d8:	4618      	mov	r0, r3
 801f3da:	f003 fc47 	bl	8022c6c <_ZNSaIcED1Ev>
	ARG(messages) = 2.54f;
 801f3de:	f507 739c 	add.w	r3, r7, #312	; 0x138
 801f3e2:	ed9f 0a93 	vldr	s0, [pc, #588]	; 801f630 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x41c>
 801f3e6:	4618      	mov	r0, r3
 801f3e8:	f7f8 f845 	bl	8017476 <_ZN6SymbolC1Ef>
 801f3ec:	f7f9 fe3e 	bl	801906c <_ZN16Variable_handler12get_instanceEv>
 801f3f0:	4604      	mov	r4, r0
 801f3f2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801f3f6:	4618      	mov	r0, r3
 801f3f8:	f003 fc37 	bl	8022c6a <_ZNSaIcEC1Ev>
 801f3fc:	f507 72b8 	add.w	r2, r7, #368	; 0x170
 801f400:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 801f404:	4989      	ldr	r1, [pc, #548]	; (801f62c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x418>)
 801f406:	4618      	mov	r0, r3
 801f408:	f7e1 ffbf 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f40c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 801f410:	4619      	mov	r1, r3
 801f412:	4620      	mov	r0, r4
 801f414:	f7f9 fe58 	bl	80190c8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f418:	4602      	mov	r2, r0
 801f41a:	f507 739c 	add.w	r3, r7, #312	; 0x138
 801f41e:	4619      	mov	r1, r3
 801f420:	4610      	mov	r0, r2
 801f422:	f7e7 fa77 	bl	8006914 <_ZN6SymbolaSEOS_>
 801f426:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 801f42a:	4618      	mov	r0, r3
 801f42c:	f003 fde3 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f430:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801f434:	4618      	mov	r0, r3
 801f436:	f003 fc19 	bl	8022c6c <_ZNSaIcED1Ev>
 801f43a:	f507 739c 	add.w	r3, r7, #312	; 0x138
 801f43e:	4618      	mov	r0, r3
 801f440:	f7e7 fa3a 	bl	80068b8 <_ZN6SymbolD1Ev>
	x = ARG(messages);
 801f444:	f7f9 fe12 	bl	801906c <_ZN16Variable_handler12get_instanceEv>
 801f448:	4604      	mov	r4, r0
 801f44a:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801f44e:	4618      	mov	r0, r3
 801f450:	f003 fc0b 	bl	8022c6a <_ZNSaIcEC1Ev>
 801f454:	f507 72c6 	add.w	r2, r7, #396	; 0x18c
 801f458:	f507 73ba 	add.w	r3, r7, #372	; 0x174
 801f45c:	4973      	ldr	r1, [pc, #460]	; (801f62c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x418>)
 801f45e:	4618      	mov	r0, r3
 801f460:	f7e1 ff93 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f464:	f507 73ba 	add.w	r3, r7, #372	; 0x174
 801f468:	4619      	mov	r1, r3
 801f46a:	4620      	mov	r0, r4
 801f46c:	f7f9 fe2c 	bl	80190c8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f470:	4602      	mov	r2, r0
 801f472:	1d3b      	adds	r3, r7, #4
 801f474:	4611      	mov	r1, r2
 801f476:	6818      	ldr	r0, [r3, #0]
 801f478:	f7e7 ffd9 	bl	800742e <_ZN6SymbolaSERKS_>
 801f47c:	f507 73ba 	add.w	r3, r7, #372	; 0x174
 801f480:	4618      	mov	r0, r3
 801f482:	f003 fdb8 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f486:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801f48a:	4618      	mov	r0, r3
 801f48c:	f003 fbee 	bl	8022c6c <_ZNSaIcED1Ev>

	ARG(messages) = { "hello", "world" };
 801f490:	f507 73dc 	add.w	r3, r7, #440	; 0x1b8
 801f494:	4964      	ldr	r1, [pc, #400]	; (801f628 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x414>)
 801f496:	4618      	mov	r0, r3
 801f498:	f7f8 f839 	bl	801750e <_ZN6SymbolC1EPKc>
 801f49c:	f507 73dc 	add.w	r3, r7, #440	; 0x1b8
 801f4a0:	3320      	adds	r3, #32
 801f4a2:	4964      	ldr	r1, [pc, #400]	; (801f634 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x420>)
 801f4a4:	4618      	mov	r0, r3
 801f4a6:	f7f8 f832 	bl	801750e <_ZN6SymbolC1EPKc>
 801f4aa:	f507 73dc 	add.w	r3, r7, #440	; 0x1b8
 801f4ae:	f8c7 31b0 	str.w	r3, [r7, #432]	; 0x1b0
 801f4b2:	2302      	movs	r3, #2
 801f4b4:	f8c7 31b4 	str.w	r3, [r7, #436]	; 0x1b4
 801f4b8:	f507 70c8 	add.w	r0, r7, #400	; 0x190
 801f4bc:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 801f4c0:	e893 0006 	ldmia.w	r3, {r1, r2}
 801f4c4:	f7f8 f854 	bl	8017570 <_ZN6SymbolC1ESt16initializer_listIS_E>
 801f4c8:	f7f9 fdd0 	bl	801906c <_ZN16Variable_handler12get_instanceEv>
 801f4cc:	4604      	mov	r4, r0
 801f4ce:	f507 7304 	add.w	r3, r7, #528	; 0x210
 801f4d2:	4618      	mov	r0, r3
 801f4d4:	f003 fbc9 	bl	8022c6a <_ZNSaIcEC1Ev>
 801f4d8:	f507 7204 	add.w	r2, r7, #528	; 0x210
 801f4dc:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 801f4e0:	4952      	ldr	r1, [pc, #328]	; (801f62c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x418>)
 801f4e2:	4618      	mov	r0, r3
 801f4e4:	f7e1 ff51 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f4e8:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 801f4ec:	4619      	mov	r1, r3
 801f4ee:	4620      	mov	r0, r4
 801f4f0:	f7f9 fdea 	bl	80190c8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f4f4:	4602      	mov	r2, r0
 801f4f6:	f507 73c8 	add.w	r3, r7, #400	; 0x190
 801f4fa:	4619      	mov	r1, r3
 801f4fc:	4610      	mov	r0, r2
 801f4fe:	f7e7 fa09 	bl	8006914 <_ZN6SymbolaSEOS_>
 801f502:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 801f506:	4618      	mov	r0, r3
 801f508:	f003 fd75 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f50c:	f507 7304 	add.w	r3, r7, #528	; 0x210
 801f510:	4618      	mov	r0, r3
 801f512:	f003 fbab 	bl	8022c6c <_ZNSaIcED1Ev>
 801f516:	f507 73c8 	add.w	r3, r7, #400	; 0x190
 801f51a:	4618      	mov	r0, r3
 801f51c:	f7e7 f9cc 	bl	80068b8 <_ZN6SymbolD1Ev>
 801f520:	f507 74dc 	add.w	r4, r7, #440	; 0x1b8
 801f524:	3440      	adds	r4, #64	; 0x40
 801f526:	f507 73dc 	add.w	r3, r7, #440	; 0x1b8
 801f52a:	429c      	cmp	r4, r3
 801f52c:	d004      	beq.n	801f538 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x324>
 801f52e:	3c20      	subs	r4, #32
 801f530:	4620      	mov	r0, r4
 801f532:	f7e7 f9c1 	bl	80068b8 <_ZN6SymbolD1Ev>
 801f536:	e7f6      	b.n	801f526 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x312>
	Symbol m = ARG(messages);
 801f538:	f7f9 fd98 	bl	801906c <_ZN16Variable_handler12get_instanceEv>
 801f53c:	4604      	mov	r4, r0
 801f53e:	f507 730b 	add.w	r3, r7, #556	; 0x22c
 801f542:	4618      	mov	r0, r3
 801f544:	f003 fb91 	bl	8022c6a <_ZNSaIcEC1Ev>
 801f548:	f507 720b 	add.w	r2, r7, #556	; 0x22c
 801f54c:	f507 7305 	add.w	r3, r7, #532	; 0x214
 801f550:	4936      	ldr	r1, [pc, #216]	; (801f62c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x418>)
 801f552:	4618      	mov	r0, r3
 801f554:	f7e1 ff19 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f558:	f507 7305 	add.w	r3, r7, #532	; 0x214
 801f55c:	4619      	mov	r1, r3
 801f55e:	4620      	mov	r0, r4
 801f560:	f7f9 fdb2 	bl	80190c8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f564:	4602      	mov	r2, r0
 801f566:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f56a:	4611      	mov	r1, r2
 801f56c:	4618      	mov	r0, r3
 801f56e:	f7e7 fdd1 	bl	8007114 <_ZN6SymbolC1ERKS_>
 801f572:	f507 7305 	add.w	r3, r7, #532	; 0x214
 801f576:	4618      	mov	r0, r3
 801f578:	f003 fd3d 	bl	8022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f57c:	f507 730b 	add.w	r3, r7, #556	; 0x22c
 801f580:	4618      	mov	r0, r3
 801f582:	f003 fb73 	bl	8022c6c <_ZNSaIcED1Ev>
	Symbol h = m[0];
 801f586:	f507 730c 	add.w	r3, r7, #560	; 0x230
 801f58a:	2100      	movs	r1, #0
 801f58c:	4618      	mov	r0, r3
 801f58e:	f7f7 ff59 	bl	8017444 <_ZN6SymbolC1Ei>
 801f592:	f507 720c 	add.w	r2, r7, #560	; 0x230
 801f596:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f59a:	4611      	mov	r1, r2
 801f59c:	4618      	mov	r0, r3
 801f59e:	f7f8 f827 	bl	80175f0 <_ZN6SymbolixES_>
 801f5a2:	4602      	mov	r2, r0
 801f5a4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801f5a8:	4611      	mov	r1, r2
 801f5aa:	4618      	mov	r0, r3
 801f5ac:	f7e7 fdb2 	bl	8007114 <_ZN6SymbolC1ERKS_>
 801f5b0:	f507 730c 	add.w	r3, r7, #560	; 0x230
 801f5b4:	4618      	mov	r0, r3
 801f5b6:	f7e7 f97f 	bl	80068b8 <_ZN6SymbolD1Ev>
	Symbol w = m[1];
 801f5ba:	f507 7314 	add.w	r3, r7, #592	; 0x250
 801f5be:	2101      	movs	r1, #1
 801f5c0:	4618      	mov	r0, r3
 801f5c2:	f7f7 ff3f 	bl	8017444 <_ZN6SymbolC1Ei>
 801f5c6:	f507 7214 	add.w	r2, r7, #592	; 0x250
 801f5ca:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f5ce:	4611      	mov	r1, r2
 801f5d0:	4618      	mov	r0, r3
 801f5d2:	f7f8 f80d 	bl	80175f0 <_ZN6SymbolixES_>
 801f5d6:	4602      	mov	r2, r0
 801f5d8:	f107 0308 	add.w	r3, r7, #8
 801f5dc:	4611      	mov	r1, r2
 801f5de:	4618      	mov	r0, r3
 801f5e0:	f7e7 fd98 	bl	8007114 <_ZN6SymbolC1ERKS_>
 801f5e4:	f507 7314 	add.w	r3, r7, #592	; 0x250
 801f5e8:	4618      	mov	r0, r3
 801f5ea:	f7e7 f965 	bl	80068b8 <_ZN6SymbolD1Ev>
	return x;
 801f5ee:	bf00      	nop
	Symbol w = m[1];
 801f5f0:	f107 0308 	add.w	r3, r7, #8
 801f5f4:	4618      	mov	r0, r3
 801f5f6:	f7e7 f95f 	bl	80068b8 <_ZN6SymbolD1Ev>
	Symbol h = m[0];
 801f5fa:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801f5fe:	4618      	mov	r0, r3
 801f600:	f7e7 f95a 	bl	80068b8 <_ZN6SymbolD1Ev>
	Symbol m = ARG(messages);
 801f604:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f608:	4618      	mov	r0, r3
 801f60a:	f7e7 f955 	bl	80068b8 <_ZN6SymbolD1Ev>
	return x;
 801f60e:	1d3b      	adds	r3, r7, #4
 801f610:	1d3a      	adds	r2, r7, #4
 801f612:	6812      	ldr	r2, [r2, #0]
 801f614:	601a      	str	r2, [r3, #0]
}
 801f616:	1d3b      	adds	r3, r7, #4
 801f618:	6818      	ldr	r0, [r3, #0]
 801f61a:	f507 771d 	add.w	r7, r7, #628	; 0x274
 801f61e:	46bd      	mov	sp, r7
 801f620:	bd90      	pop	{r4, r7, pc}
 801f622:	bf00      	nop
 801f624:	08027d8c 	.word	0x08027d8c
 801f628:	08027d90 	.word	0x08027d90
 801f62c:	08027d98 	.word	0x08027d98
 801f630:	40228f5c 	.word	0x40228f5c
 801f634:	08027da4 	.word	0x08027da4

0801f638 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EEC1Ev>:
      _Rb_tree() = default;
 801f638:	b580      	push	{r7, lr}
 801f63a:	b082      	sub	sp, #8
 801f63c:	af00      	add	r7, sp, #0
 801f63e:	6078      	str	r0, [r7, #4]
 801f640:	687b      	ldr	r3, [r7, #4]
 801f642:	4618      	mov	r0, r3
 801f644:	f000 f8d4 	bl	801f7f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EEC1Ev>
 801f648:	687b      	ldr	r3, [r7, #4]
 801f64a:	4618      	mov	r0, r3
 801f64c:	3708      	adds	r7, #8
 801f64e:	46bd      	mov	sp, r7
 801f650:	bd80      	pop	{r7, pc}

0801f652 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEC1Ev>:
      map() = default;
 801f652:	b580      	push	{r7, lr}
 801f654:	b082      	sub	sp, #8
 801f656:	af00      	add	r7, sp, #0
 801f658:	6078      	str	r0, [r7, #4]
 801f65a:	687b      	ldr	r3, [r7, #4]
 801f65c:	4618      	mov	r0, r3
 801f65e:	f7ff ffeb 	bl	801f638 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EEC1Ev>
 801f662:	687b      	ldr	r3, [r7, #4]
 801f664:	4618      	mov	r0, r3
 801f666:	3708      	adds	r7, #8
 801f668:	46bd      	mov	sp, r7
 801f66a:	bd80      	pop	{r7, pc}

0801f66c <_ZN16Function_handlerC1Ev>:

}

Function_handler::Function_handler()
 801f66c:	b590      	push	{r4, r7, lr}
 801f66e:	b08d      	sub	sp, #52	; 0x34
 801f670:	af00      	add	r7, sp, #0
 801f672:	6078      	str	r0, [r7, #4]
 801f674:	687b      	ldr	r3, [r7, #4]
 801f676:	4618      	mov	r0, r3
 801f678:	f7ff ffeb 	bl	801f652 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEC1Ev>
{
	ADD_FUNCTION(run_single_experiment_iteration);
 801f67c:	687c      	ldr	r4, [r7, #4]
 801f67e:	4b0e      	ldr	r3, [pc, #56]	; (801f6b8 <_ZN16Function_handlerC1Ev+0x4c>)
 801f680:	62fb      	str	r3, [r7, #44]	; 0x2c
 801f682:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801f686:	f107 0310 	add.w	r3, r7, #16
 801f68a:	490c      	ldr	r1, [pc, #48]	; (801f6bc <_ZN16Function_handlerC1Ev+0x50>)
 801f68c:	4618      	mov	r0, r3
 801f68e:	f000 f8c4 	bl	801f81a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1IRA32_KcSE_Lb1EEEOT_OT0_>
 801f692:	f107 0308 	add.w	r3, r7, #8
 801f696:	f107 0210 	add.w	r2, r7, #16
 801f69a:	4621      	mov	r1, r4
 801f69c:	4618      	mov	r0, r3
 801f69e:	f000 f8e4 	bl	801f86a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE6insertEOSI_>
 801f6a2:	f107 0310 	add.w	r3, r7, #16
 801f6a6:	4618      	mov	r0, r3
 801f6a8:	f7f0 faad 	bl	800fc06 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>
}
 801f6ac:	687b      	ldr	r3, [r7, #4]
 801f6ae:	4618      	mov	r0, r3
 801f6b0:	3734      	adds	r7, #52	; 0x34
 801f6b2:	46bd      	mov	sp, r7
 801f6b4:	bd90      	pop	{r4, r7, pc}
 801f6b6:	bf00      	nop
 801f6b8:	0801f215 	.word	0x0801f215
 801f6bc:	08027dac 	.word	0x08027dac

0801f6c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1Ev>:
 801f6c0:	b580      	push	{r7, lr}
 801f6c2:	b082      	sub	sp, #8
 801f6c4:	af00      	add	r7, sp, #0
 801f6c6:	6078      	str	r0, [r7, #4]
 801f6c8:	687b      	ldr	r3, [r7, #4]
 801f6ca:	4618      	mov	r0, r3
 801f6cc:	f000 f8e1 	bl	801f892 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1Ev>
 801f6d0:	687b      	ldr	r3, [r7, #4]
 801f6d2:	4618      	mov	r0, r3
 801f6d4:	3708      	adds	r7, #8
 801f6d6:	46bd      	mov	sp, r7
 801f6d8:	bd80      	pop	{r7, pc}

0801f6da <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>:
 801f6da:	b580      	push	{r7, lr}
 801f6dc:	b082      	sub	sp, #8
 801f6de:	af00      	add	r7, sp, #0
 801f6e0:	6078      	str	r0, [r7, #4]
 801f6e2:	687b      	ldr	r3, [r7, #4]
 801f6e4:	4618      	mov	r0, r3
 801f6e6:	f7ff ffeb 	bl	801f6c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1Ev>
 801f6ea:	687b      	ldr	r3, [r7, #4]
 801f6ec:	4618      	mov	r0, r3
 801f6ee:	3708      	adds	r7, #8
 801f6f0:	46bd      	mov	sp, r7
 801f6f2:	bd80      	pop	{r7, pc}

0801f6f4 <_ZN16Variable_handlerC1Ev>:

Variable_handler::Variable_handler()
 801f6f4:	b590      	push	{r4, r7, lr}
 801f6f6:	b0b3      	sub	sp, #204	; 0xcc
 801f6f8:	af00      	add	r7, sp, #0
 801f6fa:	6078      	str	r0, [r7, #4]
 801f6fc:	687b      	ldr	r3, [r7, #4]
 801f6fe:	4618      	mov	r0, r3
 801f700:	f7ff ffeb 	bl	801f6da <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
 801f704:	687b      	ldr	r3, [r7, #4]
 801f706:	3318      	adds	r3, #24
 801f708:	4618      	mov	r0, r3
 801f70a:	f7ff ffe6 	bl	801f6da <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
 801f70e:	687b      	ldr	r3, [r7, #4]
 801f710:	3330      	adds	r3, #48	; 0x30
 801f712:	4618      	mov	r0, r3
 801f714:	f7ff ffe1 	bl	801f6da <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
{
	ADD_ARG(x);
 801f718:	687b      	ldr	r3, [r7, #4]
 801f71a:	f103 0430 	add.w	r4, r3, #48	; 0x30
 801f71e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f722:	2220      	movs	r2, #32
 801f724:	2100      	movs	r1, #0
 801f726:	4618      	mov	r0, r3
 801f728:	f004 fe14 	bl	8024354 <memset>
 801f72c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f730:	4618      	mov	r0, r3
 801f732:	f7e7 fe3e 	bl	80073b2 <_ZN6SymbolC1Ev>
 801f736:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801f73a:	f107 0310 	add.w	r3, r7, #16
 801f73e:	4922      	ldr	r1, [pc, #136]	; (801f7c8 <_ZN16Variable_handlerC1Ev+0xd4>)
 801f740:	4618      	mov	r0, r3
 801f742:	f000 f8bb 	bl	801f8bc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801f746:	f107 0308 	add.w	r3, r7, #8
 801f74a:	f107 0210 	add.w	r2, r7, #16
 801f74e:	4621      	mov	r1, r4
 801f750:	4618      	mov	r0, r3
 801f752:	f7f9 fd77 	bl	8019244 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801f756:	f107 0310 	add.w	r3, r7, #16
 801f75a:	4618      	mov	r0, r3
 801f75c:	f7f9 fce3 	bl	8019126 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801f760:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f764:	4618      	mov	r0, r3
 801f766:	f7e7 f8a7 	bl	80068b8 <_ZN6SymbolD1Ev>
	ADD_ARG(messages);
 801f76a:	687b      	ldr	r3, [r7, #4]
 801f76c:	f103 0430 	add.w	r4, r3, #48	; 0x30
 801f770:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801f774:	2220      	movs	r2, #32
 801f776:	2100      	movs	r1, #0
 801f778:	4618      	mov	r0, r3
 801f77a:	f004 fdeb 	bl	8024354 <memset>
 801f77e:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801f782:	4618      	mov	r0, r3
 801f784:	f7e7 fe15 	bl	80073b2 <_ZN6SymbolC1Ev>
 801f788:	f107 02a8 	add.w	r2, r7, #168	; 0xa8
 801f78c:	f107 0370 	add.w	r3, r7, #112	; 0x70
 801f790:	490e      	ldr	r1, [pc, #56]	; (801f7cc <_ZN16Variable_handlerC1Ev+0xd8>)
 801f792:	4618      	mov	r0, r3
 801f794:	f000 f8b9 	bl	801f90a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA9_KcLb1EEEOT_RKS7_>
 801f798:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801f79c:	f107 0270 	add.w	r2, r7, #112	; 0x70
 801f7a0:	4621      	mov	r1, r4
 801f7a2:	4618      	mov	r0, r3
 801f7a4:	f7f9 fd4e 	bl	8019244 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801f7a8:	f107 0370 	add.w	r3, r7, #112	; 0x70
 801f7ac:	4618      	mov	r0, r3
 801f7ae:	f7f9 fcba 	bl	8019126 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801f7b2:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801f7b6:	4618      	mov	r0, r3
 801f7b8:	f7e7 f87e 	bl	80068b8 <_ZN6SymbolD1Ev>
}
 801f7bc:	687b      	ldr	r3, [r7, #4]
 801f7be:	4618      	mov	r0, r3
 801f7c0:	37cc      	adds	r7, #204	; 0xcc
 801f7c2:	46bd      	mov	sp, r7
 801f7c4:	bd90      	pop	{r4, r7, pc}
 801f7c6:	bf00      	nop
 801f7c8:	08027d8c 	.word	0x08027d8c
 801f7cc:	08027d98 	.word	0x08027d98

0801f7d0 <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 801f7d0:	b480      	push	{r7}
 801f7d2:	b083      	sub	sp, #12
 801f7d4:	af00      	add	r7, sp, #0
 801f7d6:	6078      	str	r0, [r7, #4]
 801f7d8:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 801f7da:	687b      	ldr	r3, [r7, #4]
 801f7dc:	681a      	ldr	r2, [r3, #0]
 801f7de:	683b      	ldr	r3, [r7, #0]
 801f7e0:	009b      	lsls	r3, r3, #2
 801f7e2:	4413      	add	r3, r2
      }
 801f7e4:	4618      	mov	r0, r3
 801f7e6:	370c      	adds	r7, #12
 801f7e8:	46bd      	mov	sp, r7
 801f7ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f7ee:	4770      	bx	lr

0801f7f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 801f7f0:	b580      	push	{r7, lr}
 801f7f2:	b082      	sub	sp, #8
 801f7f4:	af00      	add	r7, sp, #0
 801f7f6:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 801f7f8:	6878      	ldr	r0, [r7, #4]
 801f7fa:	f000 f8ad 	bl	801f958 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEEC1Ev>
 801f7fe:	687b      	ldr	r3, [r7, #4]
 801f800:	4618      	mov	r0, r3
 801f802:	f000 f8b5 	bl	801f970 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 801f806:	687b      	ldr	r3, [r7, #4]
 801f808:	3304      	adds	r3, #4
 801f80a:	4618      	mov	r0, r3
 801f80c:	f7e1 fc31 	bl	8001072 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 801f810:	687b      	ldr	r3, [r7, #4]
 801f812:	4618      	mov	r0, r3
 801f814:	3708      	adds	r7, #8
 801f816:	46bd      	mov	sp, r7
 801f818:	bd80      	pop	{r7, pc}

0801f81a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1IRA32_KcSE_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801f81a:	b5b0      	push	{r4, r5, r7, lr}
 801f81c:	b086      	sub	sp, #24
 801f81e:	af00      	add	r7, sp, #0
 801f820:	60f8      	str	r0, [r7, #12]
 801f822:	60b9      	str	r1, [r7, #8]
 801f824:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801f826:	68fc      	ldr	r4, [r7, #12]
 801f828:	68b8      	ldr	r0, [r7, #8]
 801f82a:	f000 f8ac 	bl	801f986 <_ZSt7forwardIRA32_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801f82e:	4605      	mov	r5, r0
 801f830:	f107 0314 	add.w	r3, r7, #20
 801f834:	4618      	mov	r0, r3
 801f836:	f003 fa18 	bl	8022c6a <_ZNSaIcEC1Ev>
 801f83a:	f107 0314 	add.w	r3, r7, #20
 801f83e:	461a      	mov	r2, r3
 801f840:	4629      	mov	r1, r5
 801f842:	4620      	mov	r0, r4
 801f844:	f7e1 fda1 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f848:	f107 0314 	add.w	r3, r7, #20
 801f84c:	4618      	mov	r0, r3
 801f84e:	f003 fa0d 	bl	8022c6c <_ZNSaIcED1Ev>
 801f852:	6878      	ldr	r0, [r7, #4]
 801f854:	f000 f8a2 	bl	801f99c <_ZSt7forwardIPF6SymbolSt6vectorIP10ExpressionSaIS3_EEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801f858:	4603      	mov	r3, r0
 801f85a:	681a      	ldr	r2, [r3, #0]
 801f85c:	68fb      	ldr	r3, [r7, #12]
 801f85e:	619a      	str	r2, [r3, #24]
 801f860:	68fb      	ldr	r3, [r7, #12]
 801f862:	4618      	mov	r0, r3
 801f864:	3718      	adds	r7, #24
 801f866:	46bd      	mov	sp, r7
 801f868:	bdb0      	pop	{r4, r5, r7, pc}

0801f86a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE6insertEOSI_>:
      insert(value_type&& __x)
 801f86a:	b590      	push	{r4, r7, lr}
 801f86c:	b085      	sub	sp, #20
 801f86e:	af00      	add	r7, sp, #0
 801f870:	60f8      	str	r0, [r7, #12]
 801f872:	60b9      	str	r1, [r7, #8]
 801f874:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 801f876:	68bc      	ldr	r4, [r7, #8]
 801f878:	6878      	ldr	r0, [r7, #4]
 801f87a:	f000 f89a 	bl	801f9b2 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEONSt16remove_referenceIT_E4typeEOSJ_>
 801f87e:	4602      	mov	r2, r0
 801f880:	68fb      	ldr	r3, [r7, #12]
 801f882:	4621      	mov	r1, r4
 801f884:	4618      	mov	r0, r3
 801f886:	f000 f89f 	bl	801f9c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_>
 801f88a:	68f8      	ldr	r0, [r7, #12]
 801f88c:	3714      	adds	r7, #20
 801f88e:	46bd      	mov	sp, r7
 801f890:	bd90      	pop	{r4, r7, pc}

0801f892 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 801f892:	b580      	push	{r7, lr}
 801f894:	b082      	sub	sp, #8
 801f896:	af00      	add	r7, sp, #0
 801f898:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 801f89a:	6878      	ldr	r0, [r7, #4]
 801f89c:	f000 f8e3 	bl	801fa66 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>
 801f8a0:	687b      	ldr	r3, [r7, #4]
 801f8a2:	4618      	mov	r0, r3
 801f8a4:	f000 f864 	bl	801f970 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 801f8a8:	687b      	ldr	r3, [r7, #4]
 801f8aa:	3304      	adds	r3, #4
 801f8ac:	4618      	mov	r0, r3
 801f8ae:	f7e1 fbe0 	bl	8001072 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 801f8b2:	687b      	ldr	r3, [r7, #4]
 801f8b4:	4618      	mov	r0, r3
 801f8b6:	3708      	adds	r7, #8
 801f8b8:	46bd      	mov	sp, r7
 801f8ba:	bd80      	pop	{r7, pc}

0801f8bc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 801f8bc:	b5b0      	push	{r4, r5, r7, lr}
 801f8be:	b086      	sub	sp, #24
 801f8c0:	af00      	add	r7, sp, #0
 801f8c2:	60f8      	str	r0, [r7, #12]
 801f8c4:	60b9      	str	r1, [r7, #8]
 801f8c6:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 801f8c8:	68fc      	ldr	r4, [r7, #12]
 801f8ca:	68b8      	ldr	r0, [r7, #8]
 801f8cc:	f000 f8d7 	bl	801fa7e <_ZSt7forwardIRA2_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801f8d0:	4605      	mov	r5, r0
 801f8d2:	f107 0314 	add.w	r3, r7, #20
 801f8d6:	4618      	mov	r0, r3
 801f8d8:	f003 f9c7 	bl	8022c6a <_ZNSaIcEC1Ev>
 801f8dc:	f107 0314 	add.w	r3, r7, #20
 801f8e0:	461a      	mov	r2, r3
 801f8e2:	4629      	mov	r1, r5
 801f8e4:	4620      	mov	r0, r4
 801f8e6:	f7e1 fd50 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f8ea:	f107 0314 	add.w	r3, r7, #20
 801f8ee:	4618      	mov	r0, r3
 801f8f0:	f003 f9bc 	bl	8022c6c <_ZNSaIcED1Ev>
 801f8f4:	68fb      	ldr	r3, [r7, #12]
 801f8f6:	3318      	adds	r3, #24
 801f8f8:	6879      	ldr	r1, [r7, #4]
 801f8fa:	4618      	mov	r0, r3
 801f8fc:	f7e7 fc0a 	bl	8007114 <_ZN6SymbolC1ERKS_>
 801f900:	68fb      	ldr	r3, [r7, #12]
 801f902:	4618      	mov	r0, r3
 801f904:	3718      	adds	r7, #24
 801f906:	46bd      	mov	sp, r7
 801f908:	bdb0      	pop	{r4, r5, r7, pc}

0801f90a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA9_KcLb1EEEOT_RKS7_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 801f90a:	b5b0      	push	{r4, r5, r7, lr}
 801f90c:	b086      	sub	sp, #24
 801f90e:	af00      	add	r7, sp, #0
 801f910:	60f8      	str	r0, [r7, #12]
 801f912:	60b9      	str	r1, [r7, #8]
 801f914:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 801f916:	68fc      	ldr	r4, [r7, #12]
 801f918:	68b8      	ldr	r0, [r7, #8]
 801f91a:	f000 f8bb 	bl	801fa94 <_ZSt7forwardIRA9_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801f91e:	4605      	mov	r5, r0
 801f920:	f107 0314 	add.w	r3, r7, #20
 801f924:	4618      	mov	r0, r3
 801f926:	f003 f9a0 	bl	8022c6a <_ZNSaIcEC1Ev>
 801f92a:	f107 0314 	add.w	r3, r7, #20
 801f92e:	461a      	mov	r2, r3
 801f930:	4629      	mov	r1, r5
 801f932:	4620      	mov	r0, r4
 801f934:	f7e1 fd29 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f938:	f107 0314 	add.w	r3, r7, #20
 801f93c:	4618      	mov	r0, r3
 801f93e:	f003 f995 	bl	8022c6c <_ZNSaIcED1Ev>
 801f942:	68fb      	ldr	r3, [r7, #12]
 801f944:	3318      	adds	r3, #24
 801f946:	6879      	ldr	r1, [r7, #4]
 801f948:	4618      	mov	r0, r3
 801f94a:	f7e7 fbe3 	bl	8007114 <_ZN6SymbolC1ERKS_>
 801f94e:	68fb      	ldr	r3, [r7, #12]
 801f950:	4618      	mov	r0, r3
 801f952:	3718      	adds	r7, #24
 801f954:	46bd      	mov	sp, r7
 801f956:	bdb0      	pop	{r4, r5, r7, pc}

0801f958 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEEC1Ev>:
 801f958:	b580      	push	{r7, lr}
 801f95a:	b082      	sub	sp, #8
 801f95c:	af00      	add	r7, sp, #0
 801f95e:	6078      	str	r0, [r7, #4]
 801f960:	6878      	ldr	r0, [r7, #4]
 801f962:	f000 f8a2 	bl	801faaa <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEC1Ev>
 801f966:	687b      	ldr	r3, [r7, #4]
 801f968:	4618      	mov	r0, r3
 801f96a:	3708      	adds	r7, #8
 801f96c:	46bd      	mov	sp, r7
 801f96e:	bd80      	pop	{r7, pc}

0801f970 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
 801f970:	b480      	push	{r7}
 801f972:	b083      	sub	sp, #12
 801f974:	af00      	add	r7, sp, #0
 801f976:	6078      	str	r0, [r7, #4]
      { }
 801f978:	687b      	ldr	r3, [r7, #4]
 801f97a:	4618      	mov	r0, r3
 801f97c:	370c      	adds	r7, #12
 801f97e:	46bd      	mov	sp, r7
 801f980:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f984:	4770      	bx	lr

0801f986 <_ZSt7forwardIRA32_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f986:	b480      	push	{r7}
 801f988:	b083      	sub	sp, #12
 801f98a:	af00      	add	r7, sp, #0
 801f98c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f98e:	687b      	ldr	r3, [r7, #4]
 801f990:	4618      	mov	r0, r3
 801f992:	370c      	adds	r7, #12
 801f994:	46bd      	mov	sp, r7
 801f996:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f99a:	4770      	bx	lr

0801f99c <_ZSt7forwardIPF6SymbolSt6vectorIP10ExpressionSaIS3_EEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f99c:	b480      	push	{r7}
 801f99e:	b083      	sub	sp, #12
 801f9a0:	af00      	add	r7, sp, #0
 801f9a2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f9a4:	687b      	ldr	r3, [r7, #4]
 801f9a6:	4618      	mov	r0, r3
 801f9a8:	370c      	adds	r7, #12
 801f9aa:	46bd      	mov	sp, r7
 801f9ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f9b0:	4770      	bx	lr

0801f9b2 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEONSt16remove_referenceIT_E4typeEOSJ_>:
    move(_Tp&& __t) noexcept
 801f9b2:	b480      	push	{r7}
 801f9b4:	b083      	sub	sp, #12
 801f9b6:	af00      	add	r7, sp, #0
 801f9b8:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801f9ba:	687b      	ldr	r3, [r7, #4]
 801f9bc:	4618      	mov	r0, r3
 801f9be:	370c      	adds	r7, #12
 801f9c0:	46bd      	mov	sp, r7
 801f9c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f9c6:	4770      	bx	lr

0801f9c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801f9c8:	b5b0      	push	{r4, r5, r7, lr}
 801f9ca:	b08e      	sub	sp, #56	; 0x38
 801f9cc:	af02      	add	r7, sp, #8
 801f9ce:	60f8      	str	r0, [r7, #12]
 801f9d0:	60b9      	str	r1, [r7, #8]
 801f9d2:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 801f9d4:	f107 031c 	add.w	r3, r7, #28
 801f9d8:	6879      	ldr	r1, [r7, #4]
 801f9da:	4618      	mov	r0, r3
 801f9dc:	f000 f8f5 	bl	801fbca <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>
 801f9e0:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 801f9e2:	f107 0314 	add.w	r3, r7, #20
 801f9e6:	68b9      	ldr	r1, [r7, #8]
 801f9e8:	4618      	mov	r0, r3
 801f9ea:	f000 f869 	bl	801fac0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 801f9ee:	69bb      	ldr	r3, [r7, #24]
 801f9f0:	2b00      	cmp	r3, #0
 801f9f2:	d022      	beq.n	801fa3a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 801f9f4:	f107 0310 	add.w	r3, r7, #16
 801f9f8:	68b9      	ldr	r1, [r7, #8]
 801f9fa:	4618      	mov	r0, r3
 801f9fc:	f000 f8f1 	bl	801fbe2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeC1ERSM_>
	  return _Res(_M_insert_(__res.first, __res.second,
 801fa00:	697c      	ldr	r4, [r7, #20]
 801fa02:	69bd      	ldr	r5, [r7, #24]
 801fa04:	6878      	ldr	r0, [r7, #4]
 801fa06:	f000 f8fb 	bl	801fc00 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801fa0a:	4602      	mov	r2, r0
 801fa0c:	f107 0310 	add.w	r3, r7, #16
 801fa10:	9300      	str	r3, [sp, #0]
 801fa12:	4613      	mov	r3, r2
 801fa14:	462a      	mov	r2, r5
 801fa16:	4621      	mov	r1, r4
 801fa18:	68b8      	ldr	r0, [r7, #8]
 801fa1a:	f000 f8fc 	bl	801fc16 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_>
 801fa1e:	4603      	mov	r3, r0
 801fa20:	623b      	str	r3, [r7, #32]
		      true);
 801fa22:	2301      	movs	r3, #1
 801fa24:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801fa28:	f107 0227 	add.w	r2, r7, #39	; 0x27
 801fa2c:	f107 0320 	add.w	r3, r7, #32
 801fa30:	4619      	mov	r1, r3
 801fa32:	68f8      	ldr	r0, [r7, #12]
 801fa34:	f000 f938 	bl	801fca8 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>
 801fa38:	e011      	b.n	801fa5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 801fa3a:	697a      	ldr	r2, [r7, #20]
 801fa3c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801fa40:	4611      	mov	r1, r2
 801fa42:	4618      	mov	r0, r3
 801fa44:	f7ef ff18 	bl	800f878 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801fa48:	2300      	movs	r3, #0
 801fa4a:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 801fa4e:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 801fa52:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801fa56:	4619      	mov	r1, r3
 801fa58:	68f8      	ldr	r0, [r7, #12]
 801fa5a:	f000 f925 	bl	801fca8 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>
    }
 801fa5e:	68f8      	ldr	r0, [r7, #12]
 801fa60:	3730      	adds	r7, #48	; 0x30
 801fa62:	46bd      	mov	sp, r7
 801fa64:	bdb0      	pop	{r4, r5, r7, pc}

0801fa66 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>:
 801fa66:	b580      	push	{r7, lr}
 801fa68:	b082      	sub	sp, #8
 801fa6a:	af00      	add	r7, sp, #0
 801fa6c:	6078      	str	r0, [r7, #4]
 801fa6e:	6878      	ldr	r0, [r7, #4]
 801fa70:	f000 f933 	bl	801fcda <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>
 801fa74:	687b      	ldr	r3, [r7, #4]
 801fa76:	4618      	mov	r0, r3
 801fa78:	3708      	adds	r7, #8
 801fa7a:	46bd      	mov	sp, r7
 801fa7c:	bd80      	pop	{r7, pc}

0801fa7e <_ZSt7forwardIRA2_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801fa7e:	b480      	push	{r7}
 801fa80:	b083      	sub	sp, #12
 801fa82:	af00      	add	r7, sp, #0
 801fa84:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801fa86:	687b      	ldr	r3, [r7, #4]
 801fa88:	4618      	mov	r0, r3
 801fa8a:	370c      	adds	r7, #12
 801fa8c:	46bd      	mov	sp, r7
 801fa8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fa92:	4770      	bx	lr

0801fa94 <_ZSt7forwardIRA9_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801fa94:	b480      	push	{r7}
 801fa96:	b083      	sub	sp, #12
 801fa98:	af00      	add	r7, sp, #0
 801fa9a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801fa9c:	687b      	ldr	r3, [r7, #4]
 801fa9e:	4618      	mov	r0, r3
 801faa0:	370c      	adds	r7, #12
 801faa2:	46bd      	mov	sp, r7
 801faa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801faa8:	4770      	bx	lr

0801faaa <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801faaa:	b480      	push	{r7}
 801faac:	b083      	sub	sp, #12
 801faae:	af00      	add	r7, sp, #0
 801fab0:	6078      	str	r0, [r7, #4]
 801fab2:	687b      	ldr	r3, [r7, #4]
 801fab4:	4618      	mov	r0, r3
 801fab6:	370c      	adds	r7, #12
 801fab8:	46bd      	mov	sp, r7
 801faba:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fabe:	4770      	bx	lr

0801fac0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801fac0:	b590      	push	{r4, r7, lr}
 801fac2:	b08b      	sub	sp, #44	; 0x2c
 801fac4:	af00      	add	r7, sp, #0
 801fac6:	60f8      	str	r0, [r7, #12]
 801fac8:	60b9      	str	r1, [r7, #8]
 801faca:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 801facc:	68b8      	ldr	r0, [r7, #8]
 801face:	f7ef fd1b 	bl	800f508 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 801fad2:	4603      	mov	r3, r0
 801fad4:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 801fad6:	68b8      	ldr	r0, [r7, #8]
 801fad8:	f7ef fe71 	bl	800f7be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 801fadc:	4603      	mov	r3, r0
 801fade:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 801fae0:	2301      	movs	r3, #1
 801fae2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 801fae6:	69bb      	ldr	r3, [r7, #24]
 801fae8:	2b00      	cmp	r3, #0
 801faea:	d020      	beq.n	801fb2e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 801faec:	69bb      	ldr	r3, [r7, #24]
 801faee:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 801faf0:	68bc      	ldr	r4, [r7, #8]
 801faf2:	69bb      	ldr	r3, [r7, #24]
 801faf4:	4618      	mov	r0, r3
 801faf6:	f7ef ff88 	bl	800fa0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 801fafa:	4603      	mov	r3, r0
 801fafc:	461a      	mov	r2, r3
 801fafe:	6879      	ldr	r1, [r7, #4]
 801fb00:	4620      	mov	r0, r4
 801fb02:	f7e3 fa49 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801fb06:	4603      	mov	r3, r0
 801fb08:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 801fb0c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801fb10:	2b00      	cmp	r3, #0
 801fb12:	d005      	beq.n	801fb20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x60>
 801fb14:	69bb      	ldr	r3, [r7, #24]
 801fb16:	4618      	mov	r0, r3
 801fb18:	f7ef fe34 	bl	800f784 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 801fb1c:	4603      	mov	r3, r0
 801fb1e:	e004      	b.n	801fb2a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x6a>
 801fb20:	69bb      	ldr	r3, [r7, #24]
 801fb22:	4618      	mov	r0, r3
 801fb24:	f7ef fe22 	bl	800f76c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 801fb28:	4603      	mov	r3, r0
 801fb2a:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 801fb2c:	e7db      	b.n	801fae6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 801fb2e:	697a      	ldr	r2, [r7, #20]
 801fb30:	f107 0310 	add.w	r3, r7, #16
 801fb34:	4611      	mov	r1, r2
 801fb36:	4618      	mov	r0, r3
 801fb38:	f7ef fe9e 	bl	800f878 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 801fb3c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801fb40:	2b00      	cmp	r3, #0
 801fb42:	d01d      	beq.n	801fb80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 801fb44:	68b8      	ldr	r0, [r7, #8]
 801fb46:	f000 f8d3 	bl	801fcf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE5beginEv>
 801fb4a:	4603      	mov	r3, r0
 801fb4c:	61fb      	str	r3, [r7, #28]
 801fb4e:	f107 021c 	add.w	r2, r7, #28
 801fb52:	f107 0310 	add.w	r3, r7, #16
 801fb56:	4611      	mov	r1, r2
 801fb58:	4618      	mov	r0, r3
 801fb5a:	f7ef fe6d 	bl	800f838 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 801fb5e:	4603      	mov	r3, r0
 801fb60:	2b00      	cmp	r3, #0
 801fb62:	d008      	beq.n	801fb76 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 801fb64:	f107 0214 	add.w	r2, r7, #20
 801fb68:	f107 0318 	add.w	r3, r7, #24
 801fb6c:	4619      	mov	r1, r3
 801fb6e:	68f8      	ldr	r0, [r7, #12]
 801fb70:	f000 f8cf 	bl	801fd12 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>
 801fb74:	e025      	b.n	801fbc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 801fb76:	f107 0310 	add.w	r3, r7, #16
 801fb7a:	4618      	mov	r0, r3
 801fb7c:	f000 f8e2 	bl	801fd44 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 801fb80:	68bc      	ldr	r4, [r7, #8]
 801fb82:	693b      	ldr	r3, [r7, #16]
 801fb84:	4618      	mov	r0, r3
 801fb86:	f7ef fe6b 	bl	800f860 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801fb8a:	4603      	mov	r3, r0
 801fb8c:	687a      	ldr	r2, [r7, #4]
 801fb8e:	4619      	mov	r1, r3
 801fb90:	4620      	mov	r0, r4
 801fb92:	f7e3 fa01 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801fb96:	4603      	mov	r3, r0
 801fb98:	2b00      	cmp	r3, #0
 801fb9a:	d008      	beq.n	801fbae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 801fb9c:	f107 0214 	add.w	r2, r7, #20
 801fba0:	f107 0318 	add.w	r3, r7, #24
 801fba4:	4619      	mov	r1, r3
 801fba6:	68f8      	ldr	r0, [r7, #12]
 801fba8:	f000 f8b3 	bl	801fd12 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>
 801fbac:	e009      	b.n	801fbc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 801fbae:	2300      	movs	r3, #0
 801fbb0:	623b      	str	r3, [r7, #32]
 801fbb2:	f107 0220 	add.w	r2, r7, #32
 801fbb6:	f107 0310 	add.w	r3, r7, #16
 801fbba:	4619      	mov	r1, r3
 801fbbc:	68f8      	ldr	r0, [r7, #12]
 801fbbe:	f7e3 f94d 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 801fbc2:	68f8      	ldr	r0, [r7, #12]
 801fbc4:	372c      	adds	r7, #44	; 0x2c
 801fbc6:	46bd      	mov	sp, r7
 801fbc8:	bd90      	pop	{r4, r7, pc}

0801fbca <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>:
      operator()(_Pair& __x) const
 801fbca:	b480      	push	{r7}
 801fbcc:	b083      	sub	sp, #12
 801fbce:	af00      	add	r7, sp, #0
 801fbd0:	6078      	str	r0, [r7, #4]
 801fbd2:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 801fbd4:	683b      	ldr	r3, [r7, #0]
 801fbd6:	4618      	mov	r0, r3
 801fbd8:	370c      	adds	r7, #12
 801fbda:	46bd      	mov	sp, r7
 801fbdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fbe0:	4770      	bx	lr

0801fbe2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeC1ERSM_>:
	_Alloc_node(_Rb_tree& __t)
 801fbe2:	b480      	push	{r7}
 801fbe4:	b083      	sub	sp, #12
 801fbe6:	af00      	add	r7, sp, #0
 801fbe8:	6078      	str	r0, [r7, #4]
 801fbea:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 801fbec:	687b      	ldr	r3, [r7, #4]
 801fbee:	683a      	ldr	r2, [r7, #0]
 801fbf0:	601a      	str	r2, [r3, #0]
 801fbf2:	687b      	ldr	r3, [r7, #4]
 801fbf4:	4618      	mov	r0, r3
 801fbf6:	370c      	adds	r7, #12
 801fbf8:	46bd      	mov	sp, r7
 801fbfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fbfe:	4770      	bx	lr

0801fc00 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801fc00:	b480      	push	{r7}
 801fc02:	b083      	sub	sp, #12
 801fc04:	af00      	add	r7, sp, #0
 801fc06:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801fc08:	687b      	ldr	r3, [r7, #4]
 801fc0a:	4618      	mov	r0, r3
 801fc0c:	370c      	adds	r7, #12
 801fc0e:	46bd      	mov	sp, r7
 801fc10:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fc14:	4770      	bx	lr

0801fc16 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801fc16:	b5b0      	push	{r4, r5, r7, lr}
 801fc18:	b088      	sub	sp, #32
 801fc1a:	af00      	add	r7, sp, #0
 801fc1c:	60f8      	str	r0, [r7, #12]
 801fc1e:	60b9      	str	r1, [r7, #8]
 801fc20:	607a      	str	r2, [r7, #4]
 801fc22:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801fc24:	68bb      	ldr	r3, [r7, #8]
 801fc26:	2b00      	cmp	r3, #0
 801fc28:	d11a      	bne.n	801fc60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 801fc2a:	68f8      	ldr	r0, [r7, #12]
 801fc2c:	f7ef fdc7 	bl	800f7be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 801fc30:	4602      	mov	r2, r0
 801fc32:	687b      	ldr	r3, [r7, #4]
 801fc34:	4293      	cmp	r3, r2
 801fc36:	d013      	beq.n	801fc60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801fc38:	68fc      	ldr	r4, [r7, #12]
 801fc3a:	f107 0310 	add.w	r3, r7, #16
 801fc3e:	6839      	ldr	r1, [r7, #0]
 801fc40:	4618      	mov	r0, r3
 801fc42:	f7ff ffc2 	bl	801fbca <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>
 801fc46:	4605      	mov	r5, r0
 801fc48:	6878      	ldr	r0, [r7, #4]
 801fc4a:	f7ef fe09 	bl	800f860 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801fc4e:	4603      	mov	r3, r0
 801fc50:	461a      	mov	r2, r3
 801fc52:	4629      	mov	r1, r5
 801fc54:	4620      	mov	r0, r4
 801fc56:	f7e3 f99f 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801fc5a:	4603      	mov	r3, r0
 801fc5c:	2b00      	cmp	r3, #0
 801fc5e:	d001      	beq.n	801fc64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4e>
 801fc60:	2301      	movs	r3, #1
 801fc62:	e000      	b.n	801fc66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x50>
 801fc64:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 801fc66:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 801fc68:	6838      	ldr	r0, [r7, #0]
 801fc6a:	f7ff ffc9 	bl	801fc00 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801fc6e:	4603      	mov	r3, r0
 801fc70:	4619      	mov	r1, r3
 801fc72:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801fc74:	f000 f877 	bl	801fd66 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeclISG_EEPSt13_Rb_tree_nodeISG_EOT_>
 801fc78:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 801fc7a:	68fb      	ldr	r3, [r7, #12]
 801fc7c:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 801fc7e:	7ff8      	ldrb	r0, [r7, #31]
 801fc80:	687a      	ldr	r2, [r7, #4]
 801fc82:	69b9      	ldr	r1, [r7, #24]
 801fc84:	f003 f849 	bl	8022d1a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 801fc88:	68fb      	ldr	r3, [r7, #12]
 801fc8a:	695b      	ldr	r3, [r3, #20]
 801fc8c:	1c5a      	adds	r2, r3, #1
 801fc8e:	68fb      	ldr	r3, [r7, #12]
 801fc90:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 801fc92:	f107 0314 	add.w	r3, r7, #20
 801fc96:	69b9      	ldr	r1, [r7, #24]
 801fc98:	4618      	mov	r0, r3
 801fc9a:	f7ef fded 	bl	800f878 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801fc9e:	697b      	ldr	r3, [r7, #20]
      }
 801fca0:	4618      	mov	r0, r3
 801fca2:	3720      	adds	r7, #32
 801fca4:	46bd      	mov	sp, r7
 801fca6:	bdb0      	pop	{r4, r5, r7, pc}

0801fca8 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801fca8:	b580      	push	{r7, lr}
 801fcaa:	b084      	sub	sp, #16
 801fcac:	af00      	add	r7, sp, #0
 801fcae:	60f8      	str	r0, [r7, #12]
 801fcb0:	60b9      	str	r1, [r7, #8]
 801fcb2:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801fcb4:	68b8      	ldr	r0, [r7, #8]
 801fcb6:	f000 f86a 	bl	801fd8e <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801fcba:	4602      	mov	r2, r0
 801fcbc:	68fb      	ldr	r3, [r7, #12]
 801fcbe:	6812      	ldr	r2, [r2, #0]
 801fcc0:	601a      	str	r2, [r3, #0]
 801fcc2:	6878      	ldr	r0, [r7, #4]
 801fcc4:	f7eb fa25 	bl	800b112 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801fcc8:	4603      	mov	r3, r0
 801fcca:	781a      	ldrb	r2, [r3, #0]
 801fccc:	68fb      	ldr	r3, [r7, #12]
 801fcce:	711a      	strb	r2, [r3, #4]
 801fcd0:	68fb      	ldr	r3, [r7, #12]
 801fcd2:	4618      	mov	r0, r3
 801fcd4:	3710      	adds	r7, #16
 801fcd6:	46bd      	mov	sp, r7
 801fcd8:	bd80      	pop	{r7, pc}

0801fcda <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>:
 801fcda:	b480      	push	{r7}
 801fcdc:	b083      	sub	sp, #12
 801fcde:	af00      	add	r7, sp, #0
 801fce0:	6078      	str	r0, [r7, #4]
 801fce2:	687b      	ldr	r3, [r7, #4]
 801fce4:	4618      	mov	r0, r3
 801fce6:	370c      	adds	r7, #12
 801fce8:	46bd      	mov	sp, r7
 801fcea:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fcee:	4770      	bx	lr

0801fcf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801fcf0:	b580      	push	{r7, lr}
 801fcf2:	b084      	sub	sp, #16
 801fcf4:	af00      	add	r7, sp, #0
 801fcf6:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 801fcf8:	687b      	ldr	r3, [r7, #4]
 801fcfa:	68da      	ldr	r2, [r3, #12]
 801fcfc:	f107 030c 	add.w	r3, r7, #12
 801fd00:	4611      	mov	r1, r2
 801fd02:	4618      	mov	r0, r3
 801fd04:	f7ef fdb8 	bl	800f878 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801fd08:	68fb      	ldr	r3, [r7, #12]
 801fd0a:	4618      	mov	r0, r3
 801fd0c:	3710      	adds	r7, #16
 801fd0e:	46bd      	mov	sp, r7
 801fd10:	bd80      	pop	{r7, pc}

0801fd12 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801fd12:	b580      	push	{r7, lr}
 801fd14:	b084      	sub	sp, #16
 801fd16:	af00      	add	r7, sp, #0
 801fd18:	60f8      	str	r0, [r7, #12]
 801fd1a:	60b9      	str	r1, [r7, #8]
 801fd1c:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801fd1e:	68b8      	ldr	r0, [r7, #8]
 801fd20:	f000 f840 	bl	801fda4 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 801fd24:	4603      	mov	r3, r0
 801fd26:	681a      	ldr	r2, [r3, #0]
 801fd28:	68fb      	ldr	r3, [r7, #12]
 801fd2a:	601a      	str	r2, [r3, #0]
 801fd2c:	6878      	ldr	r0, [r7, #4]
 801fd2e:	f7e3 fb8c 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 801fd32:	4603      	mov	r3, r0
 801fd34:	681a      	ldr	r2, [r3, #0]
 801fd36:	68fb      	ldr	r3, [r7, #12]
 801fd38:	605a      	str	r2, [r3, #4]
 801fd3a:	68fb      	ldr	r3, [r7, #12]
 801fd3c:	4618      	mov	r0, r3
 801fd3e:	3710      	adds	r7, #16
 801fd40:	46bd      	mov	sp, r7
 801fd42:	bd80      	pop	{r7, pc}

0801fd44 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 801fd44:	b580      	push	{r7, lr}
 801fd46:	b082      	sub	sp, #8
 801fd48:	af00      	add	r7, sp, #0
 801fd4a:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 801fd4c:	687b      	ldr	r3, [r7, #4]
 801fd4e:	681b      	ldr	r3, [r3, #0]
 801fd50:	4618      	mov	r0, r3
 801fd52:	f002 ffe0 	bl	8022d16 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 801fd56:	4602      	mov	r2, r0
 801fd58:	687b      	ldr	r3, [r7, #4]
 801fd5a:	601a      	str	r2, [r3, #0]
	return *this;
 801fd5c:	687b      	ldr	r3, [r7, #4]
      }
 801fd5e:	4618      	mov	r0, r3
 801fd60:	3708      	adds	r7, #8
 801fd62:	46bd      	mov	sp, r7
 801fd64:	bd80      	pop	{r7, pc}

0801fd66 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeclISG_EEPSt13_Rb_tree_nodeISG_EOT_>:
	  operator()(_Arg&& __arg) const
 801fd66:	b590      	push	{r4, r7, lr}
 801fd68:	b083      	sub	sp, #12
 801fd6a:	af00      	add	r7, sp, #0
 801fd6c:	6078      	str	r0, [r7, #4]
 801fd6e:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 801fd70:	687b      	ldr	r3, [r7, #4]
 801fd72:	681c      	ldr	r4, [r3, #0]
 801fd74:	6838      	ldr	r0, [r7, #0]
 801fd76:	f7ff ff43 	bl	801fc00 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801fd7a:	4603      	mov	r3, r0
 801fd7c:	4619      	mov	r1, r3
 801fd7e:	4620      	mov	r0, r4
 801fd80:	f000 f81b 	bl	801fdba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_create_nodeIJSG_EEEPSt13_Rb_tree_nodeISG_EDpOT_>
 801fd84:	4603      	mov	r3, r0
 801fd86:	4618      	mov	r0, r3
 801fd88:	370c      	adds	r7, #12
 801fd8a:	46bd      	mov	sp, r7
 801fd8c:	bd90      	pop	{r4, r7, pc}

0801fd8e <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801fd8e:	b480      	push	{r7}
 801fd90:	b083      	sub	sp, #12
 801fd92:	af00      	add	r7, sp, #0
 801fd94:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801fd96:	687b      	ldr	r3, [r7, #4]
 801fd98:	4618      	mov	r0, r3
 801fd9a:	370c      	adds	r7, #12
 801fd9c:	46bd      	mov	sp, r7
 801fd9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fda2:	4770      	bx	lr

0801fda4 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISL_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801fda4:	b480      	push	{r7}
 801fda6:	b083      	sub	sp, #12
 801fda8:	af00      	add	r7, sp, #0
 801fdaa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801fdac:	687b      	ldr	r3, [r7, #4]
 801fdae:	4618      	mov	r0, r3
 801fdb0:	370c      	adds	r7, #12
 801fdb2:	46bd      	mov	sp, r7
 801fdb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fdb8:	4770      	bx	lr

0801fdba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_create_nodeIJSG_EEEPSt13_Rb_tree_nodeISG_EDpOT_>:
	_M_create_node(_Args&&... __args)
 801fdba:	b580      	push	{r7, lr}
 801fdbc:	b084      	sub	sp, #16
 801fdbe:	af00      	add	r7, sp, #0
 801fdc0:	6078      	str	r0, [r7, #4]
 801fdc2:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 801fdc4:	6878      	ldr	r0, [r7, #4]
 801fdc6:	f000 f80f 	bl	801fde8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_get_nodeEv>
 801fdca:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 801fdcc:	6838      	ldr	r0, [r7, #0]
 801fdce:	f7ff ff17 	bl	801fc00 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801fdd2:	4603      	mov	r3, r0
 801fdd4:	461a      	mov	r2, r3
 801fdd6:	68f9      	ldr	r1, [r7, #12]
 801fdd8:	6878      	ldr	r0, [r7, #4]
 801fdda:	f000 f816 	bl	801fe0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE17_M_construct_nodeIJSG_EEEvPSt13_Rb_tree_nodeISG_EDpOT_>
	  return __tmp;
 801fdde:	68fb      	ldr	r3, [r7, #12]
	}
 801fde0:	4618      	mov	r0, r3
 801fde2:	3710      	adds	r7, #16
 801fde4:	46bd      	mov	sp, r7
 801fde6:	bd80      	pop	{r7, pc}

0801fde8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_get_nodeEv>:
      _M_get_node()
 801fde8:	b580      	push	{r7, lr}
 801fdea:	b082      	sub	sp, #8
 801fdec:	af00      	add	r7, sp, #0
 801fdee:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 801fdf0:	6878      	ldr	r0, [r7, #4]
 801fdf2:	f7ef fe88 	bl	800fb06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 801fdf6:	4603      	mov	r3, r0
 801fdf8:	2101      	movs	r1, #1
 801fdfa:	4618      	mov	r0, r3
 801fdfc:	f000 f825 	bl	801fe4a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE8allocateERSJ_j>
 801fe00:	4603      	mov	r3, r0
 801fe02:	4618      	mov	r0, r3
 801fe04:	3708      	adds	r7, #8
 801fe06:	46bd      	mov	sp, r7
 801fe08:	bd80      	pop	{r7, pc}

0801fe0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE17_M_construct_nodeIJSG_EEEvPSt13_Rb_tree_nodeISG_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 801fe0a:	b5b0      	push	{r4, r5, r7, lr}
 801fe0c:	b084      	sub	sp, #16
 801fe0e:	af00      	add	r7, sp, #0
 801fe10:	60f8      	str	r0, [r7, #12]
 801fe12:	60b9      	str	r1, [r7, #8]
 801fe14:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 801fe16:	68bb      	ldr	r3, [r7, #8]
 801fe18:	4619      	mov	r1, r3
 801fe1a:	202c      	movs	r0, #44	; 0x2c
 801fe1c:	f7e1 f91d 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 801fe20:	68f8      	ldr	r0, [r7, #12]
 801fe22:	f7ef fe70 	bl	800fb06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 801fe26:	4604      	mov	r4, r0
 801fe28:	68b8      	ldr	r0, [r7, #8]
 801fe2a:	f7ef fbc6 	bl	800f5ba <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 801fe2e:	4605      	mov	r5, r0
 801fe30:	6878      	ldr	r0, [r7, #4]
 801fe32:	f7ff fee5 	bl	801fc00 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801fe36:	4603      	mov	r3, r0
 801fe38:	461a      	mov	r2, r3
 801fe3a:	4629      	mov	r1, r5
 801fe3c:	4620      	mov	r0, r4
 801fe3e:	f000 f813 	bl	801fe68 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE9constructISH_JSH_EEEvRSJ_PT_DpOT0_>
	}
 801fe42:	bf00      	nop
 801fe44:	3710      	adds	r7, #16
 801fe46:	46bd      	mov	sp, r7
 801fe48:	bdb0      	pop	{r4, r5, r7, pc}

0801fe4a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE8allocateERSJ_j>:
      allocate(allocator_type& __a, size_type __n)
 801fe4a:	b580      	push	{r7, lr}
 801fe4c:	b082      	sub	sp, #8
 801fe4e:	af00      	add	r7, sp, #0
 801fe50:	6078      	str	r0, [r7, #4]
 801fe52:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801fe54:	2200      	movs	r2, #0
 801fe56:	6839      	ldr	r1, [r7, #0]
 801fe58:	6878      	ldr	r0, [r7, #4]
 801fe5a:	f000 f818 	bl	801fe8e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv>
 801fe5e:	4603      	mov	r3, r0
 801fe60:	4618      	mov	r0, r3
 801fe62:	3708      	adds	r7, #8
 801fe64:	46bd      	mov	sp, r7
 801fe66:	bd80      	pop	{r7, pc}

0801fe68 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE9constructISH_JSH_EEEvRSJ_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801fe68:	b580      	push	{r7, lr}
 801fe6a:	b084      	sub	sp, #16
 801fe6c:	af00      	add	r7, sp, #0
 801fe6e:	60f8      	str	r0, [r7, #12]
 801fe70:	60b9      	str	r1, [r7, #8]
 801fe72:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801fe74:	6878      	ldr	r0, [r7, #4]
 801fe76:	f7ff fec3 	bl	801fc00 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801fe7a:	4603      	mov	r3, r0
 801fe7c:	461a      	mov	r2, r3
 801fe7e:	68b9      	ldr	r1, [r7, #8]
 801fe80:	68f8      	ldr	r0, [r7, #12]
 801fe82:	f000 f839 	bl	801fef8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE9constructISI_JSI_EEEvPT_DpOT0_>
 801fe86:	bf00      	nop
 801fe88:	3710      	adds	r7, #16
 801fe8a:	46bd      	mov	sp, r7
 801fe8c:	bd80      	pop	{r7, pc}

0801fe8e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801fe8e:	b580      	push	{r7, lr}
 801fe90:	b084      	sub	sp, #16
 801fe92:	af00      	add	r7, sp, #0
 801fe94:	60f8      	str	r0, [r7, #12]
 801fe96:	60b9      	str	r1, [r7, #8]
 801fe98:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801fe9a:	68f8      	ldr	r0, [r7, #12]
 801fe9c:	f000 f844 	bl	801ff28 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv>
 801fea0:	4602      	mov	r2, r0
 801fea2:	68bb      	ldr	r3, [r7, #8]
 801fea4:	4293      	cmp	r3, r2
 801fea6:	bf8c      	ite	hi
 801fea8:	2301      	movhi	r3, #1
 801feaa:	2300      	movls	r3, #0
 801feac:	b2db      	uxtb	r3, r3
 801feae:	2b00      	cmp	r3, #0
 801feb0:	d001      	beq.n	801feb6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801feb2:	f002 ff8e 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801feb6:	68bb      	ldr	r3, [r7, #8]
 801feb8:	222c      	movs	r2, #44	; 0x2c
 801feba:	fb02 f303 	mul.w	r3, r2, r3
 801febe:	4618      	mov	r0, r3
 801fec0:	f002 fec2 	bl	8022c48 <_Znwj>
 801fec4:	4603      	mov	r3, r0
 801fec6:	bf00      	nop
      }
 801fec8:	4618      	mov	r0, r3
 801feca:	3710      	adds	r7, #16
 801fecc:	46bd      	mov	sp, r7
 801fece:	bd80      	pop	{r7, pc}

0801fed0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1EOSF_>:
      constexpr pair(pair&&) = default;
 801fed0:	b580      	push	{r7, lr}
 801fed2:	b082      	sub	sp, #8
 801fed4:	af00      	add	r7, sp, #0
 801fed6:	6078      	str	r0, [r7, #4]
 801fed8:	6039      	str	r1, [r7, #0]
 801feda:	687b      	ldr	r3, [r7, #4]
 801fedc:	683a      	ldr	r2, [r7, #0]
 801fede:	4611      	mov	r1, r2
 801fee0:	4618      	mov	r0, r3
 801fee2:	f003 f9b9 	bl	8023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801fee6:	683b      	ldr	r3, [r7, #0]
 801fee8:	699a      	ldr	r2, [r3, #24]
 801feea:	687b      	ldr	r3, [r7, #4]
 801feec:	619a      	str	r2, [r3, #24]
 801feee:	687b      	ldr	r3, [r7, #4]
 801fef0:	4618      	mov	r0, r3
 801fef2:	3708      	adds	r7, #8
 801fef4:	46bd      	mov	sp, r7
 801fef6:	bd80      	pop	{r7, pc}

0801fef8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE9constructISI_JSI_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801fef8:	b590      	push	{r4, r7, lr}
 801fefa:	b085      	sub	sp, #20
 801fefc:	af00      	add	r7, sp, #0
 801fefe:	60f8      	str	r0, [r7, #12]
 801ff00:	60b9      	str	r1, [r7, #8]
 801ff02:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801ff04:	6878      	ldr	r0, [r7, #4]
 801ff06:	f7ff fe7b 	bl	801fc00 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801ff0a:	4604      	mov	r4, r0
 801ff0c:	68bb      	ldr	r3, [r7, #8]
 801ff0e:	4619      	mov	r1, r3
 801ff10:	201c      	movs	r0, #28
 801ff12:	f7e1 f8a2 	bl	800105a <_ZnwjPv>
 801ff16:	4603      	mov	r3, r0
 801ff18:	4621      	mov	r1, r4
 801ff1a:	4618      	mov	r0, r3
 801ff1c:	f7ff ffd8 	bl	801fed0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1EOSF_>
 801ff20:	bf00      	nop
 801ff22:	3714      	adds	r7, #20
 801ff24:	46bd      	mov	sp, r7
 801ff26:	bd90      	pop	{r4, r7, pc}

0801ff28 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801ff28:	b480      	push	{r7}
 801ff2a:	b083      	sub	sp, #12
 801ff2c:	af00      	add	r7, sp, #0
 801ff2e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801ff30:	4b03      	ldr	r3, [pc, #12]	; (801ff40 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv+0x18>)
      }
 801ff32:	4618      	mov	r0, r3
 801ff34:	370c      	adds	r7, #12
 801ff36:	46bd      	mov	sp, r7
 801ff38:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ff3c:	4770      	bx	lr
 801ff3e:	bf00      	nop
 801ff40:	02e8ba2e 	.word	0x02e8ba2e

0801ff44 <_Z41__static_initialization_and_destruction_0ii>:
 801ff44:	b590      	push	{r4, r7, lr}
 801ff46:	b0e7      	sub	sp, #412	; 0x19c
 801ff48:	af02      	add	r7, sp, #8
 801ff4a:	1d3b      	adds	r3, r7, #4
 801ff4c:	6018      	str	r0, [r3, #0]
 801ff4e:	463b      	mov	r3, r7
 801ff50:	6019      	str	r1, [r3, #0]
 801ff52:	1d3b      	adds	r3, r7, #4
 801ff54:	681b      	ldr	r3, [r3, #0]
 801ff56:	2b01      	cmp	r3, #1
 801ff58:	f040 819d 	bne.w	8020296 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801ff5c:	463b      	mov	r3, r7
 801ff5e:	681b      	ldr	r3, [r3, #0]
 801ff60:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801ff64:	4293      	cmp	r3, r2
 801ff66:	f040 8196 	bne.w	8020296 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801ff6a:	f107 0314 	add.w	r3, r7, #20
 801ff6e:	4618      	mov	r0, r3
 801ff70:	2322      	movs	r3, #34	; 0x22
 801ff72:	461a      	mov	r2, r3
 801ff74:	2100      	movs	r1, #0
 801ff76:	f004 f9ed 	bl	8024354 <memset>
 801ff7a:	f107 0314 	add.w	r3, r7, #20
 801ff7e:	223a      	movs	r2, #58	; 0x3a
 801ff80:	701a      	strb	r2, [r3, #0]
 801ff82:	f107 0314 	add.w	r3, r7, #20
 801ff86:	2201      	movs	r2, #1
 801ff88:	705a      	strb	r2, [r3, #1]
 801ff8a:	f107 0314 	add.w	r3, r7, #20
 801ff8e:	220a      	movs	r2, #10
 801ff90:	709a      	strb	r2, [r3, #2]
 801ff92:	f107 0314 	add.w	r3, r7, #20
 801ff96:	220a      	movs	r2, #10
 801ff98:	70da      	strb	r2, [r3, #3]
 801ff9a:	f107 0314 	add.w	r3, r7, #20
 801ff9e:	222c      	movs	r2, #44	; 0x2c
 801ffa0:	711a      	strb	r2, [r3, #4]
 801ffa2:	f107 0314 	add.w	r3, r7, #20
 801ffa6:	220c      	movs	r2, #12
 801ffa8:	715a      	strb	r2, [r3, #5]
 801ffaa:	f107 0314 	add.w	r3, r7, #20
 801ffae:	222e      	movs	r2, #46	; 0x2e
 801ffb0:	719a      	strb	r2, [r3, #6]
 801ffb2:	f107 0314 	add.w	r3, r7, #20
 801ffb6:	220b      	movs	r2, #11
 801ffb8:	71da      	strb	r2, [r3, #7]
 801ffba:	f107 0314 	add.w	r3, r7, #20
 801ffbe:	225b      	movs	r2, #91	; 0x5b
 801ffc0:	721a      	strb	r2, [r3, #8]
 801ffc2:	f107 0314 	add.w	r3, r7, #20
 801ffc6:	220d      	movs	r2, #13
 801ffc8:	725a      	strb	r2, [r3, #9]
 801ffca:	f107 0314 	add.w	r3, r7, #20
 801ffce:	225d      	movs	r2, #93	; 0x5d
 801ffd0:	729a      	strb	r2, [r3, #10]
 801ffd2:	f107 0314 	add.w	r3, r7, #20
 801ffd6:	220e      	movs	r2, #14
 801ffd8:	72da      	strb	r2, [r3, #11]
 801ffda:	f107 0314 	add.w	r3, r7, #20
 801ffde:	227c      	movs	r2, #124	; 0x7c
 801ffe0:	731a      	strb	r2, [r3, #12]
 801ffe2:	f107 0314 	add.w	r3, r7, #20
 801ffe6:	2215      	movs	r2, #21
 801ffe8:	735a      	strb	r2, [r3, #13]
 801ffea:	f107 0314 	add.w	r3, r7, #20
 801ffee:	2226      	movs	r2, #38	; 0x26
 801fff0:	739a      	strb	r2, [r3, #14]
 801fff2:	f107 0314 	add.w	r3, r7, #20
 801fff6:	2216      	movs	r2, #22
 801fff8:	73da      	strb	r2, [r3, #15]
 801fffa:	f107 0314 	add.w	r3, r7, #20
 801fffe:	222b      	movs	r2, #43	; 0x2b
 8020000:	741a      	strb	r2, [r3, #16]
 8020002:	f107 0314 	add.w	r3, r7, #20
 8020006:	221f      	movs	r2, #31
 8020008:	745a      	strb	r2, [r3, #17]
 802000a:	f107 0314 	add.w	r3, r7, #20
 802000e:	222d      	movs	r2, #45	; 0x2d
 8020010:	749a      	strb	r2, [r3, #18]
 8020012:	f107 0314 	add.w	r3, r7, #20
 8020016:	2220      	movs	r2, #32
 8020018:	74da      	strb	r2, [r3, #19]
 802001a:	f107 0314 	add.w	r3, r7, #20
 802001e:	222a      	movs	r2, #42	; 0x2a
 8020020:	751a      	strb	r2, [r3, #20]
 8020022:	f107 0314 	add.w	r3, r7, #20
 8020026:	2221      	movs	r2, #33	; 0x21
 8020028:	755a      	strb	r2, [r3, #21]
 802002a:	f107 0314 	add.w	r3, r7, #20
 802002e:	222f      	movs	r2, #47	; 0x2f
 8020030:	759a      	strb	r2, [r3, #22]
 8020032:	f107 0314 	add.w	r3, r7, #20
 8020036:	2222      	movs	r2, #34	; 0x22
 8020038:	75da      	strb	r2, [r3, #23]
 802003a:	f107 0314 	add.w	r3, r7, #20
 802003e:	225e      	movs	r2, #94	; 0x5e
 8020040:	761a      	strb	r2, [r3, #24]
 8020042:	f107 0314 	add.w	r3, r7, #20
 8020046:	2223      	movs	r2, #35	; 0x23
 8020048:	765a      	strb	r2, [r3, #25]
 802004a:	f107 0314 	add.w	r3, r7, #20
 802004e:	2225      	movs	r2, #37	; 0x25
 8020050:	769a      	strb	r2, [r3, #26]
 8020052:	f107 0314 	add.w	r3, r7, #20
 8020056:	2224      	movs	r2, #36	; 0x24
 8020058:	76da      	strb	r2, [r3, #27]
 802005a:	f107 0314 	add.w	r3, r7, #20
 802005e:	2228      	movs	r2, #40	; 0x28
 8020060:	771a      	strb	r2, [r3, #28]
 8020062:	f107 0314 	add.w	r3, r7, #20
 8020066:	2226      	movs	r2, #38	; 0x26
 8020068:	775a      	strb	r2, [r3, #29]
 802006a:	f107 0314 	add.w	r3, r7, #20
 802006e:	2229      	movs	r2, #41	; 0x29
 8020070:	779a      	strb	r2, [r3, #30]
 8020072:	f107 0314 	add.w	r3, r7, #20
 8020076:	2227      	movs	r2, #39	; 0x27
 8020078:	77da      	strb	r2, [r3, #31]
 802007a:	f107 0314 	add.w	r3, r7, #20
 802007e:	2225      	movs	r2, #37	; 0x25
 8020080:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8020084:	f107 030c 	add.w	r3, r7, #12
 8020088:	f107 0214 	add.w	r2, r7, #20
 802008c:	601a      	str	r2, [r3, #0]
 802008e:	f107 030c 	add.w	r3, r7, #12
 8020092:	2211      	movs	r2, #17
 8020094:	605a      	str	r2, [r3, #4]
 8020096:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 802009a:	4618      	mov	r0, r3
 802009c:	f7e1 f922 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 80200a0:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80200a4:	f107 020c 	add.w	r2, r7, #12
 80200a8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80200ac:	9300      	str	r3, [sp, #0]
 80200ae:	460b      	mov	r3, r1
 80200b0:	ca06      	ldmia	r2, {r1, r2}
 80200b2:	4885      	ldr	r0, [pc, #532]	; (80202c8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80200b4:	f7e1 f92e 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80200b8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80200bc:	4618      	mov	r0, r3
 80200be:	f7e1 f91d 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 80200c2:	2305      	movs	r3, #5
 80200c4:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 80200c8:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 80200cc:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80200d0:	497e      	ldr	r1, [pc, #504]	; (80202cc <_Z41__static_initialization_and_destruction_0ii+0x388>)
 80200d2:	4618      	mov	r0, r3
 80200d4:	f7e1 f80a 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 80200d8:	2306      	movs	r3, #6
 80200da:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 80200de:	f207 1263 	addw	r2, r7, #355	; 0x163
 80200e2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80200e6:	331c      	adds	r3, #28
 80200e8:	4979      	ldr	r1, [pc, #484]	; (80202d0 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 80200ea:	4618      	mov	r0, r3
 80200ec:	f7e1 f826 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 80200f0:	2307      	movs	r3, #7
 80200f2:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 80200f6:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 80200fa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80200fe:	3338      	adds	r3, #56	; 0x38
 8020100:	4974      	ldr	r1, [pc, #464]	; (80202d4 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8020102:	4618      	mov	r0, r3
 8020104:	f7e1 f81a 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8020108:	2308      	movs	r3, #8
 802010a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 802010e:	f207 1265 	addw	r2, r7, #357	; 0x165
 8020112:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8020116:	3354      	adds	r3, #84	; 0x54
 8020118:	496f      	ldr	r1, [pc, #444]	; (80202d8 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 802011a:	4618      	mov	r0, r3
 802011c:	f7e0 ffe6 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8020120:	2309      	movs	r3, #9
 8020122:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8020126:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 802012a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 802012e:	3370      	adds	r3, #112	; 0x70
 8020130:	496a      	ldr	r1, [pc, #424]	; (80202dc <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8020132:	4618      	mov	r0, r3
 8020134:	f7e1 f82a 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8020138:	2310      	movs	r3, #16
 802013a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 802013e:	f207 1267 	addw	r2, r7, #359	; 0x167
 8020142:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8020146:	338c      	adds	r3, #140	; 0x8c
 8020148:	4965      	ldr	r1, [pc, #404]	; (80202e0 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 802014a:	4618      	mov	r0, r3
 802014c:	f7e1 f846 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8020150:	2311      	movs	r3, #17
 8020152:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8020156:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 802015a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 802015e:	33a8      	adds	r3, #168	; 0xa8
 8020160:	4960      	ldr	r1, [pc, #384]	; (80202e4 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8020162:	4618      	mov	r0, r3
 8020164:	f7e1 f812 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8020168:	2312      	movs	r3, #18
 802016a:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 802016e:	f207 1269 	addw	r2, r7, #361	; 0x169
 8020172:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8020176:	33c4      	adds	r3, #196	; 0xc4
 8020178:	495b      	ldr	r1, [pc, #364]	; (80202e8 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 802017a:	4618      	mov	r0, r3
 802017c:	f7e0 ffb6 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8020180:	2313      	movs	r3, #19
 8020182:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8020186:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 802018a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 802018e:	33e0      	adds	r3, #224	; 0xe0
 8020190:	4956      	ldr	r1, [pc, #344]	; (80202ec <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8020192:	4618      	mov	r0, r3
 8020194:	f7e0 ffd2 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8020198:	2314      	movs	r3, #20
 802019a:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 802019e:	f207 126b 	addw	r2, r7, #363	; 0x16b
 80201a2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80201a6:	33fc      	adds	r3, #252	; 0xfc
 80201a8:	4951      	ldr	r1, [pc, #324]	; (80202f0 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80201aa:	4618      	mov	r0, r3
 80201ac:	f7e1 f83e 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80201b0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80201b4:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80201b8:	601a      	str	r2, [r3, #0]
 80201ba:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80201be:	220a      	movs	r2, #10
 80201c0:	605a      	str	r2, [r3, #4]
 80201c2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80201c6:	4618      	mov	r0, r3
 80201c8:	f7e1 f931 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80201cc:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80201d0:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80201d4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80201d8:	9300      	str	r3, [sp, #0]
 80201da:	460b      	mov	r3, r1
 80201dc:	ca06      	ldmia	r2, {r1, r2}
 80201de:	4845      	ldr	r0, [pc, #276]	; (80202f4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80201e0:	f7e1 f93d 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 80201e4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80201e8:	4618      	mov	r0, r3
 80201ea:	f7e1 f92c 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 80201ee:	f107 0448 	add.w	r4, r7, #72	; 0x48
 80201f2:	f504 748c 	add.w	r4, r4, #280	; 0x118
 80201f6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80201fa:	429c      	cmp	r4, r3
 80201fc:	d004      	beq.n	8020208 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 80201fe:	3c1c      	subs	r4, #28
 8020200:	4620      	mov	r0, r4
 8020202:	f7e0 ff66 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8020206:	e7f6      	b.n	80201f6 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8020208:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 802020c:	2200      	movs	r2, #0
 802020e:	601a      	str	r2, [r3, #0]
 8020210:	605a      	str	r2, [r3, #4]
 8020212:	609a      	str	r2, [r3, #8]
 8020214:	233c      	movs	r3, #60	; 0x3c
 8020216:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 802021a:	231b      	movs	r3, #27
 802021c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8020220:	231c      	movs	r3, #28
 8020222:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8020226:	233e      	movs	r3, #62	; 0x3e
 8020228:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 802022c:	2319      	movs	r3, #25
 802022e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8020232:	231a      	movs	r3, #26
 8020234:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8020238:	233d      	movs	r3, #61	; 0x3d
 802023a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 802023e:	2318      	movs	r3, #24
 8020240:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8020244:	231d      	movs	r3, #29
 8020246:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 802024a:	2321      	movs	r3, #33	; 0x21
 802024c:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8020250:	2317      	movs	r3, #23
 8020252:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8020256:	231e      	movs	r3, #30
 8020258:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 802025c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8020260:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8020264:	2304      	movs	r3, #4
 8020266:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 802026a:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 802026e:	4618      	mov	r0, r3
 8020270:	f7e1 f925 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8020274:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8020278:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 802027c:	9300      	str	r3, [sp, #0]
 802027e:	4613      	mov	r3, r2
 8020280:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8020284:	ca06      	ldmia	r2, {r1, r2}
 8020286:	481c      	ldr	r0, [pc, #112]	; (80202f8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8020288:	f7e1 f931 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 802028c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8020290:	4618      	mov	r0, r3
 8020292:	f7e1 f920 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8020296:	1d3b      	adds	r3, r7, #4
 8020298:	681b      	ldr	r3, [r3, #0]
 802029a:	2b00      	cmp	r3, #0
 802029c:	d10e      	bne.n	80202bc <_Z41__static_initialization_and_destruction_0ii+0x378>
 802029e:	463b      	mov	r3, r7
 80202a0:	681b      	ldr	r3, [r3, #0]
 80202a2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80202a6:	4293      	cmp	r3, r2
 80202a8:	d108      	bne.n	80202bc <_Z41__static_initialization_and_destruction_0ii+0x378>
 80202aa:	4813      	ldr	r0, [pc, #76]	; (80202f8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80202ac:	f7e3 fd78 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80202b0:	4810      	ldr	r0, [pc, #64]	; (80202f4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80202b2:	f7e3 fd82 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80202b6:	4804      	ldr	r0, [pc, #16]	; (80202c8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80202b8:	f7e3 fd8c 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80202bc:	bf00      	nop
 80202be:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80202c2:	46bd      	mov	sp, r7
 80202c4:	bd90      	pop	{r4, r7, pc}
 80202c6:	bf00      	nop
 80202c8:	2000064c 	.word	0x2000064c
 80202cc:	08027e0c 	.word	0x08027e0c
 80202d0:	08027e14 	.word	0x08027e14
 80202d4:	08027e1c 	.word	0x08027e1c
 80202d8:	08027e24 	.word	0x08027e24
 80202dc:	08027e2c 	.word	0x08027e2c
 80202e0:	08027e34 	.word	0x08027e34
 80202e4:	08027e38 	.word	0x08027e38
 80202e8:	08027e40 	.word	0x08027e40
 80202ec:	08027e48 	.word	0x08027e48
 80202f0:	08027e50 	.word	0x08027e50
 80202f4:	20000664 	.word	0x20000664
 80202f8:	2000067c 	.word	0x2000067c

080202fc <_GLOBAL__sub_I__ZN16Function_handlerC2Ev>:
 80202fc:	b580      	push	{r7, lr}
 80202fe:	af00      	add	r7, sp, #0
 8020300:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8020304:	2001      	movs	r0, #1
 8020306:	f7ff fe1d 	bl	801ff44 <_Z41__static_initialization_and_destruction_0ii>
 802030a:	bd80      	pop	{r7, pc}

0802030c <_GLOBAL__sub_D__ZN16Function_handlerC2Ev>:
 802030c:	b580      	push	{r7, lr}
 802030e:	af00      	add	r7, sp, #0
 8020310:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8020314:	2000      	movs	r0, #0
 8020316:	f7ff fe15 	bl	801ff44 <_Z41__static_initialization_and_destruction_0ii>
 802031a:	bd80      	pop	{r7, pc}

0802031c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 802031c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8020354 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8020320:	480d      	ldr	r0, [pc, #52]	; (8020358 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8020322:	490e      	ldr	r1, [pc, #56]	; (802035c <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8020324:	4a0e      	ldr	r2, [pc, #56]	; (8020360 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8020326:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8020328:	e002      	b.n	8020330 <LoopCopyDataInit>

0802032a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 802032a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 802032c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 802032e:	3304      	adds	r3, #4

08020330 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8020330:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8020332:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8020334:	d3f9      	bcc.n	802032a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8020336:	4a0b      	ldr	r2, [pc, #44]	; (8020364 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8020338:	4c0b      	ldr	r4, [pc, #44]	; (8020368 <LoopFillZerobss+0x26>)
  movs r3, #0
 802033a:	2300      	movs	r3, #0
  b LoopFillZerobss
 802033c:	e001      	b.n	8020342 <LoopFillZerobss>

0802033e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 802033e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8020340:	3204      	adds	r2, #4

08020342 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8020342:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8020344:	d3fb      	bcc.n	802033e <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8020346:	f7fe ff53 	bl	801f1f0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 802034a:	f003 ff67 	bl	802421c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 802034e:	f7fd fe61 	bl	801e014 <main>
  bx  lr    
 8020352:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8020354:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 8020358:	20000000 	.word	0x20000000
  ldr r1, =_edata
 802035c:	200001e8 	.word	0x200001e8
  ldr r2, =_sidata
 8020360:	08028494 	.word	0x08028494
  ldr r2, =_sbss
 8020364:	200001e8 	.word	0x200001e8
  ldr r4, =_ebss
 8020368:	20000744 	.word	0x20000744

0802036c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 802036c:	e7fe      	b.n	802036c <ADC_IRQHandler>

0802036e <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 802036e:	b580      	push	{r7, lr}
 8020370:	af00      	add	r7, sp, #0
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8020372:	2003      	movs	r0, #3
 8020374:	f000 f94c 	bl	8020610 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8020378:	200f      	movs	r0, #15
 802037a:	f000 f805 	bl	8020388 <HAL_InitTick>
  
  /* Init the low level hardware */
  HAL_MspInit();
 802037e:	f7fe fdcd 	bl	801ef1c <HAL_MspInit>
  
  /* Return function status */
  return HAL_OK;
 8020382:	2300      	movs	r3, #0
}
 8020384:	4618      	mov	r0, r3
 8020386:	bd80      	pop	{r7, pc}

08020388 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8020388:	b580      	push	{r7, lr}
 802038a:	b082      	sub	sp, #8
 802038c:	af00      	add	r7, sp, #0
 802038e:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8020390:	4b12      	ldr	r3, [pc, #72]	; (80203dc <HAL_InitTick+0x54>)
 8020392:	681a      	ldr	r2, [r3, #0]
 8020394:	4b12      	ldr	r3, [pc, #72]	; (80203e0 <HAL_InitTick+0x58>)
 8020396:	781b      	ldrb	r3, [r3, #0]
 8020398:	4619      	mov	r1, r3
 802039a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 802039e:	fbb3 f3f1 	udiv	r3, r3, r1
 80203a2:	fbb2 f3f3 	udiv	r3, r2, r3
 80203a6:	4618      	mov	r0, r3
 80203a8:	f000 f967 	bl	802067a <HAL_SYSTICK_Config>
 80203ac:	4603      	mov	r3, r0
 80203ae:	2b00      	cmp	r3, #0
 80203b0:	d001      	beq.n	80203b6 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80203b2:	2301      	movs	r3, #1
 80203b4:	e00e      	b.n	80203d4 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80203b6:	687b      	ldr	r3, [r7, #4]
 80203b8:	2b0f      	cmp	r3, #15
 80203ba:	d80a      	bhi.n	80203d2 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80203bc:	2200      	movs	r2, #0
 80203be:	6879      	ldr	r1, [r7, #4]
 80203c0:	f04f 30ff 	mov.w	r0, #4294967295
 80203c4:	f000 f92f 	bl	8020626 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80203c8:	4a06      	ldr	r2, [pc, #24]	; (80203e4 <HAL_InitTick+0x5c>)
 80203ca:	687b      	ldr	r3, [r7, #4]
 80203cc:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80203ce:	2300      	movs	r3, #0
 80203d0:	e000      	b.n	80203d4 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 80203d2:	2301      	movs	r3, #1
}
 80203d4:	4618      	mov	r0, r3
 80203d6:	3708      	adds	r7, #8
 80203d8:	46bd      	mov	sp, r7
 80203da:	bd80      	pop	{r7, pc}
 80203dc:	20000004 	.word	0x20000004
 80203e0:	2000000c 	.word	0x2000000c
 80203e4:	20000008 	.word	0x20000008

080203e8 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80203e8:	b480      	push	{r7}
 80203ea:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80203ec:	4b06      	ldr	r3, [pc, #24]	; (8020408 <HAL_IncTick+0x20>)
 80203ee:	781b      	ldrb	r3, [r3, #0]
 80203f0:	461a      	mov	r2, r3
 80203f2:	4b06      	ldr	r3, [pc, #24]	; (802040c <HAL_IncTick+0x24>)
 80203f4:	681b      	ldr	r3, [r3, #0]
 80203f6:	4413      	add	r3, r2
 80203f8:	4a04      	ldr	r2, [pc, #16]	; (802040c <HAL_IncTick+0x24>)
 80203fa:	6013      	str	r3, [r2, #0]
}
 80203fc:	bf00      	nop
 80203fe:	46bd      	mov	sp, r7
 8020400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020404:	4770      	bx	lr
 8020406:	bf00      	nop
 8020408:	2000000c 	.word	0x2000000c
 802040c:	20000730 	.word	0x20000730

08020410 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8020410:	b480      	push	{r7}
 8020412:	af00      	add	r7, sp, #0
  return uwTick;
 8020414:	4b03      	ldr	r3, [pc, #12]	; (8020424 <HAL_GetTick+0x14>)
 8020416:	681b      	ldr	r3, [r3, #0]
}
 8020418:	4618      	mov	r0, r3
 802041a:	46bd      	mov	sp, r7
 802041c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020420:	4770      	bx	lr
 8020422:	bf00      	nop
 8020424:	20000730 	.word	0x20000730

08020428 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8020428:	b580      	push	{r7, lr}
 802042a:	b084      	sub	sp, #16
 802042c:	af00      	add	r7, sp, #0
 802042e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8020430:	f7ff ffee 	bl	8020410 <HAL_GetTick>
 8020434:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8020436:	687b      	ldr	r3, [r7, #4]
 8020438:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 802043a:	68fb      	ldr	r3, [r7, #12]
 802043c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8020440:	d005      	beq.n	802044e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8020442:	4b0a      	ldr	r3, [pc, #40]	; (802046c <HAL_Delay+0x44>)
 8020444:	781b      	ldrb	r3, [r3, #0]
 8020446:	461a      	mov	r2, r3
 8020448:	68fb      	ldr	r3, [r7, #12]
 802044a:	4413      	add	r3, r2
 802044c:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 802044e:	bf00      	nop
 8020450:	f7ff ffde 	bl	8020410 <HAL_GetTick>
 8020454:	4602      	mov	r2, r0
 8020456:	68bb      	ldr	r3, [r7, #8]
 8020458:	1ad3      	subs	r3, r2, r3
 802045a:	68fa      	ldr	r2, [r7, #12]
 802045c:	429a      	cmp	r2, r3
 802045e:	d8f7      	bhi.n	8020450 <HAL_Delay+0x28>
  {
  }
}
 8020460:	bf00      	nop
 8020462:	bf00      	nop
 8020464:	3710      	adds	r7, #16
 8020466:	46bd      	mov	sp, r7
 8020468:	bd80      	pop	{r7, pc}
 802046a:	bf00      	nop
 802046c:	2000000c 	.word	0x2000000c

08020470 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8020470:	b480      	push	{r7}
 8020472:	b085      	sub	sp, #20
 8020474:	af00      	add	r7, sp, #0
 8020476:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8020478:	687b      	ldr	r3, [r7, #4]
 802047a:	f003 0307 	and.w	r3, r3, #7
 802047e:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8020480:	4b0b      	ldr	r3, [pc, #44]	; (80204b0 <__NVIC_SetPriorityGrouping+0x40>)
 8020482:	68db      	ldr	r3, [r3, #12]
 8020484:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8020486:	68ba      	ldr	r2, [r7, #8]
 8020488:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 802048c:	4013      	ands	r3, r2
 802048e:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8020490:	68fb      	ldr	r3, [r7, #12]
 8020492:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8020494:	68bb      	ldr	r3, [r7, #8]
 8020496:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 8020498:	4b06      	ldr	r3, [pc, #24]	; (80204b4 <__NVIC_SetPriorityGrouping+0x44>)
 802049a:	4313      	orrs	r3, r2
 802049c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 802049e:	4a04      	ldr	r2, [pc, #16]	; (80204b0 <__NVIC_SetPriorityGrouping+0x40>)
 80204a0:	68bb      	ldr	r3, [r7, #8]
 80204a2:	60d3      	str	r3, [r2, #12]
}
 80204a4:	bf00      	nop
 80204a6:	3714      	adds	r7, #20
 80204a8:	46bd      	mov	sp, r7
 80204aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80204ae:	4770      	bx	lr
 80204b0:	e000ed00 	.word	0xe000ed00
 80204b4:	05fa0000 	.word	0x05fa0000

080204b8 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80204b8:	b480      	push	{r7}
 80204ba:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80204bc:	4b04      	ldr	r3, [pc, #16]	; (80204d0 <__NVIC_GetPriorityGrouping+0x18>)
 80204be:	68db      	ldr	r3, [r3, #12]
 80204c0:	0a1b      	lsrs	r3, r3, #8
 80204c2:	f003 0307 	and.w	r3, r3, #7
}
 80204c6:	4618      	mov	r0, r3
 80204c8:	46bd      	mov	sp, r7
 80204ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80204ce:	4770      	bx	lr
 80204d0:	e000ed00 	.word	0xe000ed00

080204d4 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80204d4:	b480      	push	{r7}
 80204d6:	b083      	sub	sp, #12
 80204d8:	af00      	add	r7, sp, #0
 80204da:	4603      	mov	r3, r0
 80204dc:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80204de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80204e2:	2b00      	cmp	r3, #0
 80204e4:	db0b      	blt.n	80204fe <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80204e6:	79fb      	ldrb	r3, [r7, #7]
 80204e8:	f003 021f 	and.w	r2, r3, #31
 80204ec:	4907      	ldr	r1, [pc, #28]	; (802050c <__NVIC_EnableIRQ+0x38>)
 80204ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80204f2:	095b      	lsrs	r3, r3, #5
 80204f4:	2001      	movs	r0, #1
 80204f6:	fa00 f202 	lsl.w	r2, r0, r2
 80204fa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80204fe:	bf00      	nop
 8020500:	370c      	adds	r7, #12
 8020502:	46bd      	mov	sp, r7
 8020504:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020508:	4770      	bx	lr
 802050a:	bf00      	nop
 802050c:	e000e100 	.word	0xe000e100

08020510 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8020510:	b480      	push	{r7}
 8020512:	b083      	sub	sp, #12
 8020514:	af00      	add	r7, sp, #0
 8020516:	4603      	mov	r3, r0
 8020518:	6039      	str	r1, [r7, #0]
 802051a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 802051c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8020520:	2b00      	cmp	r3, #0
 8020522:	db0a      	blt.n	802053a <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8020524:	683b      	ldr	r3, [r7, #0]
 8020526:	b2da      	uxtb	r2, r3
 8020528:	490c      	ldr	r1, [pc, #48]	; (802055c <__NVIC_SetPriority+0x4c>)
 802052a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 802052e:	0112      	lsls	r2, r2, #4
 8020530:	b2d2      	uxtb	r2, r2
 8020532:	440b      	add	r3, r1
 8020534:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8020538:	e00a      	b.n	8020550 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 802053a:	683b      	ldr	r3, [r7, #0]
 802053c:	b2da      	uxtb	r2, r3
 802053e:	4908      	ldr	r1, [pc, #32]	; (8020560 <__NVIC_SetPriority+0x50>)
 8020540:	79fb      	ldrb	r3, [r7, #7]
 8020542:	f003 030f 	and.w	r3, r3, #15
 8020546:	3b04      	subs	r3, #4
 8020548:	0112      	lsls	r2, r2, #4
 802054a:	b2d2      	uxtb	r2, r2
 802054c:	440b      	add	r3, r1
 802054e:	761a      	strb	r2, [r3, #24]
}
 8020550:	bf00      	nop
 8020552:	370c      	adds	r7, #12
 8020554:	46bd      	mov	sp, r7
 8020556:	f85d 7b04 	ldr.w	r7, [sp], #4
 802055a:	4770      	bx	lr
 802055c:	e000e100 	.word	0xe000e100
 8020560:	e000ed00 	.word	0xe000ed00

08020564 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8020564:	b480      	push	{r7}
 8020566:	b089      	sub	sp, #36	; 0x24
 8020568:	af00      	add	r7, sp, #0
 802056a:	60f8      	str	r0, [r7, #12]
 802056c:	60b9      	str	r1, [r7, #8]
 802056e:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8020570:	68fb      	ldr	r3, [r7, #12]
 8020572:	f003 0307 	and.w	r3, r3, #7
 8020576:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8020578:	69fb      	ldr	r3, [r7, #28]
 802057a:	f1c3 0307 	rsb	r3, r3, #7
 802057e:	2b04      	cmp	r3, #4
 8020580:	bf28      	it	cs
 8020582:	2304      	movcs	r3, #4
 8020584:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8020586:	69fb      	ldr	r3, [r7, #28]
 8020588:	3304      	adds	r3, #4
 802058a:	2b06      	cmp	r3, #6
 802058c:	d902      	bls.n	8020594 <NVIC_EncodePriority+0x30>
 802058e:	69fb      	ldr	r3, [r7, #28]
 8020590:	3b03      	subs	r3, #3
 8020592:	e000      	b.n	8020596 <NVIC_EncodePriority+0x32>
 8020594:	2300      	movs	r3, #0
 8020596:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8020598:	f04f 32ff 	mov.w	r2, #4294967295
 802059c:	69bb      	ldr	r3, [r7, #24]
 802059e:	fa02 f303 	lsl.w	r3, r2, r3
 80205a2:	43da      	mvns	r2, r3
 80205a4:	68bb      	ldr	r3, [r7, #8]
 80205a6:	401a      	ands	r2, r3
 80205a8:	697b      	ldr	r3, [r7, #20]
 80205aa:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80205ac:	f04f 31ff 	mov.w	r1, #4294967295
 80205b0:	697b      	ldr	r3, [r7, #20]
 80205b2:	fa01 f303 	lsl.w	r3, r1, r3
 80205b6:	43d9      	mvns	r1, r3
 80205b8:	687b      	ldr	r3, [r7, #4]
 80205ba:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80205bc:	4313      	orrs	r3, r2
         );
}
 80205be:	4618      	mov	r0, r3
 80205c0:	3724      	adds	r7, #36	; 0x24
 80205c2:	46bd      	mov	sp, r7
 80205c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80205c8:	4770      	bx	lr
	...

080205cc <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80205cc:	b580      	push	{r7, lr}
 80205ce:	b082      	sub	sp, #8
 80205d0:	af00      	add	r7, sp, #0
 80205d2:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80205d4:	687b      	ldr	r3, [r7, #4]
 80205d6:	3b01      	subs	r3, #1
 80205d8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80205dc:	d301      	bcc.n	80205e2 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 80205de:	2301      	movs	r3, #1
 80205e0:	e00f      	b.n	8020602 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80205e2:	4a0a      	ldr	r2, [pc, #40]	; (802060c <SysTick_Config+0x40>)
 80205e4:	687b      	ldr	r3, [r7, #4]
 80205e6:	3b01      	subs	r3, #1
 80205e8:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80205ea:	210f      	movs	r1, #15
 80205ec:	f04f 30ff 	mov.w	r0, #4294967295
 80205f0:	f7ff ff8e 	bl	8020510 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80205f4:	4b05      	ldr	r3, [pc, #20]	; (802060c <SysTick_Config+0x40>)
 80205f6:	2200      	movs	r2, #0
 80205f8:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80205fa:	4b04      	ldr	r3, [pc, #16]	; (802060c <SysTick_Config+0x40>)
 80205fc:	2207      	movs	r2, #7
 80205fe:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8020600:	2300      	movs	r3, #0
}
 8020602:	4618      	mov	r0, r3
 8020604:	3708      	adds	r7, #8
 8020606:	46bd      	mov	sp, r7
 8020608:	bd80      	pop	{r7, pc}
 802060a:	bf00      	nop
 802060c:	e000e010 	.word	0xe000e010

08020610 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8020610:	b580      	push	{r7, lr}
 8020612:	b082      	sub	sp, #8
 8020614:	af00      	add	r7, sp, #0
 8020616:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8020618:	6878      	ldr	r0, [r7, #4]
 802061a:	f7ff ff29 	bl	8020470 <__NVIC_SetPriorityGrouping>
}
 802061e:	bf00      	nop
 8020620:	3708      	adds	r7, #8
 8020622:	46bd      	mov	sp, r7
 8020624:	bd80      	pop	{r7, pc}

08020626 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8020626:	b580      	push	{r7, lr}
 8020628:	b086      	sub	sp, #24
 802062a:	af00      	add	r7, sp, #0
 802062c:	4603      	mov	r3, r0
 802062e:	60b9      	str	r1, [r7, #8]
 8020630:	607a      	str	r2, [r7, #4]
 8020632:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 8020634:	2300      	movs	r3, #0
 8020636:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8020638:	f7ff ff3e 	bl	80204b8 <__NVIC_GetPriorityGrouping>
 802063c:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 802063e:	687a      	ldr	r2, [r7, #4]
 8020640:	68b9      	ldr	r1, [r7, #8]
 8020642:	6978      	ldr	r0, [r7, #20]
 8020644:	f7ff ff8e 	bl	8020564 <NVIC_EncodePriority>
 8020648:	4602      	mov	r2, r0
 802064a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 802064e:	4611      	mov	r1, r2
 8020650:	4618      	mov	r0, r3
 8020652:	f7ff ff5d 	bl	8020510 <__NVIC_SetPriority>
}
 8020656:	bf00      	nop
 8020658:	3718      	adds	r7, #24
 802065a:	46bd      	mov	sp, r7
 802065c:	bd80      	pop	{r7, pc}

0802065e <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 802065e:	b580      	push	{r7, lr}
 8020660:	b082      	sub	sp, #8
 8020662:	af00      	add	r7, sp, #0
 8020664:	4603      	mov	r3, r0
 8020666:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8020668:	f997 3007 	ldrsb.w	r3, [r7, #7]
 802066c:	4618      	mov	r0, r3
 802066e:	f7ff ff31 	bl	80204d4 <__NVIC_EnableIRQ>
}
 8020672:	bf00      	nop
 8020674:	3708      	adds	r7, #8
 8020676:	46bd      	mov	sp, r7
 8020678:	bd80      	pop	{r7, pc}

0802067a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 802067a:	b580      	push	{r7, lr}
 802067c:	b082      	sub	sp, #8
 802067e:	af00      	add	r7, sp, #0
 8020680:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8020682:	6878      	ldr	r0, [r7, #4]
 8020684:	f7ff ffa2 	bl	80205cc <SysTick_Config>
 8020688:	4603      	mov	r3, r0
}
 802068a:	4618      	mov	r0, r3
 802068c:	3708      	adds	r7, #8
 802068e:	46bd      	mov	sp, r7
 8020690:	bd80      	pop	{r7, pc}

08020692 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8020692:	b580      	push	{r7, lr}
 8020694:	b084      	sub	sp, #16
 8020696:	af00      	add	r7, sp, #0
 8020698:	6078      	str	r0, [r7, #4]
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 802069a:	687b      	ldr	r3, [r7, #4]
 802069c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 802069e:	60fb      	str	r3, [r7, #12]
  
  uint32_t tickstart = HAL_GetTick();
 80206a0:	f7ff feb6 	bl	8020410 <HAL_GetTick>
 80206a4:	60b8      	str	r0, [r7, #8]
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80206a6:	687b      	ldr	r3, [r7, #4]
 80206a8:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80206ac:	b2db      	uxtb	r3, r3
 80206ae:	2b02      	cmp	r3, #2
 80206b0:	d008      	beq.n	80206c4 <HAL_DMA_Abort+0x32>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80206b2:	687b      	ldr	r3, [r7, #4]
 80206b4:	2280      	movs	r2, #128	; 0x80
 80206b6:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 80206b8:	687b      	ldr	r3, [r7, #4]
 80206ba:	2200      	movs	r2, #0
 80206bc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    return HAL_ERROR;
 80206c0:	2301      	movs	r3, #1
 80206c2:	e052      	b.n	802076a <HAL_DMA_Abort+0xd8>
  }
  else
  {
    /* Disable all the transfer interrupts */
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80206c4:	687b      	ldr	r3, [r7, #4]
 80206c6:	681b      	ldr	r3, [r3, #0]
 80206c8:	681a      	ldr	r2, [r3, #0]
 80206ca:	687b      	ldr	r3, [r7, #4]
 80206cc:	681b      	ldr	r3, [r3, #0]
 80206ce:	f022 0216 	bic.w	r2, r2, #22
 80206d2:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 80206d4:	687b      	ldr	r3, [r7, #4]
 80206d6:	681b      	ldr	r3, [r3, #0]
 80206d8:	695a      	ldr	r2, [r3, #20]
 80206da:	687b      	ldr	r3, [r7, #4]
 80206dc:	681b      	ldr	r3, [r3, #0]
 80206de:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80206e2:	615a      	str	r2, [r3, #20]
    
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80206e4:	687b      	ldr	r3, [r7, #4]
 80206e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80206e8:	2b00      	cmp	r3, #0
 80206ea:	d103      	bne.n	80206f4 <HAL_DMA_Abort+0x62>
 80206ec:	687b      	ldr	r3, [r7, #4]
 80206ee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80206f0:	2b00      	cmp	r3, #0
 80206f2:	d007      	beq.n	8020704 <HAL_DMA_Abort+0x72>
    {
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 80206f4:	687b      	ldr	r3, [r7, #4]
 80206f6:	681b      	ldr	r3, [r3, #0]
 80206f8:	681a      	ldr	r2, [r3, #0]
 80206fa:	687b      	ldr	r3, [r7, #4]
 80206fc:	681b      	ldr	r3, [r3, #0]
 80206fe:	f022 0208 	bic.w	r2, r2, #8
 8020702:	601a      	str	r2, [r3, #0]
    }
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8020704:	687b      	ldr	r3, [r7, #4]
 8020706:	681b      	ldr	r3, [r3, #0]
 8020708:	681a      	ldr	r2, [r3, #0]
 802070a:	687b      	ldr	r3, [r7, #4]
 802070c:	681b      	ldr	r3, [r3, #0]
 802070e:	f022 0201 	bic.w	r2, r2, #1
 8020712:	601a      	str	r2, [r3, #0]
    
    /* Check if the DMA Stream is effectively disabled */
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8020714:	e013      	b.n	802073e <HAL_DMA_Abort+0xac>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8020716:	f7ff fe7b 	bl	8020410 <HAL_GetTick>
 802071a:	4602      	mov	r2, r0
 802071c:	68bb      	ldr	r3, [r7, #8]
 802071e:	1ad3      	subs	r3, r2, r3
 8020720:	2b05      	cmp	r3, #5
 8020722:	d90c      	bls.n	802073e <HAL_DMA_Abort+0xac>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8020724:	687b      	ldr	r3, [r7, #4]
 8020726:	2220      	movs	r2, #32
 8020728:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 802072a:	687b      	ldr	r3, [r7, #4]
 802072c:	2200      	movs	r2, #0
 802072e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8020732:	687b      	ldr	r3, [r7, #4]
 8020734:	2203      	movs	r2, #3
 8020736:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_TIMEOUT;
 802073a:	2303      	movs	r3, #3
 802073c:	e015      	b.n	802076a <HAL_DMA_Abort+0xd8>
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 802073e:	687b      	ldr	r3, [r7, #4]
 8020740:	681b      	ldr	r3, [r3, #0]
 8020742:	681b      	ldr	r3, [r3, #0]
 8020744:	f003 0301 	and.w	r3, r3, #1
 8020748:	2b00      	cmp	r3, #0
 802074a:	d1e4      	bne.n	8020716 <HAL_DMA_Abort+0x84>
      }
    }
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 802074c:	687b      	ldr	r3, [r7, #4]
 802074e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8020750:	223f      	movs	r2, #63	; 0x3f
 8020752:	409a      	lsls	r2, r3
 8020754:	68fb      	ldr	r3, [r7, #12]
 8020756:	609a      	str	r2, [r3, #8]
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8020758:	687b      	ldr	r3, [r7, #4]
 802075a:	2200      	movs	r2, #0
 802075c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    /* Change the DMA state*/
    hdma->State = HAL_DMA_STATE_READY;
 8020760:	687b      	ldr	r3, [r7, #4]
 8020762:	2201      	movs	r2, #1
 8020764:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  }
  return HAL_OK;
 8020768:	2300      	movs	r3, #0
}
 802076a:	4618      	mov	r0, r3
 802076c:	3710      	adds	r7, #16
 802076e:	46bd      	mov	sp, r7
 8020770:	bd80      	pop	{r7, pc}

08020772 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8020772:	b480      	push	{r7}
 8020774:	b083      	sub	sp, #12
 8020776:	af00      	add	r7, sp, #0
 8020778:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 802077a:	687b      	ldr	r3, [r7, #4]
 802077c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8020780:	b2db      	uxtb	r3, r3
 8020782:	2b02      	cmp	r3, #2
 8020784:	d004      	beq.n	8020790 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8020786:	687b      	ldr	r3, [r7, #4]
 8020788:	2280      	movs	r2, #128	; 0x80
 802078a:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 802078c:	2301      	movs	r3, #1
 802078e:	e00c      	b.n	80207aa <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 8020790:	687b      	ldr	r3, [r7, #4]
 8020792:	2205      	movs	r2, #5
 8020794:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8020798:	687b      	ldr	r3, [r7, #4]
 802079a:	681b      	ldr	r3, [r3, #0]
 802079c:	681a      	ldr	r2, [r3, #0]
 802079e:	687b      	ldr	r3, [r7, #4]
 80207a0:	681b      	ldr	r3, [r3, #0]
 80207a2:	f022 0201 	bic.w	r2, r2, #1
 80207a6:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 80207a8:	2300      	movs	r3, #0
}
 80207aa:	4618      	mov	r0, r3
 80207ac:	370c      	adds	r7, #12
 80207ae:	46bd      	mov	sp, r7
 80207b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80207b4:	4770      	bx	lr
	...

080207b8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80207b8:	b480      	push	{r7}
 80207ba:	b089      	sub	sp, #36	; 0x24
 80207bc:	af00      	add	r7, sp, #0
 80207be:	6078      	str	r0, [r7, #4]
 80207c0:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00;
 80207c2:	2300      	movs	r3, #0
 80207c4:	61fb      	str	r3, [r7, #28]
  uint32_t ioposition = 0x00;
 80207c6:	2300      	movs	r3, #0
 80207c8:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00;
 80207ca:	2300      	movs	r3, #0
 80207cc:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00;
 80207ce:	2300      	movs	r3, #0
 80207d0:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 80207d2:	2300      	movs	r3, #0
 80207d4:	61fb      	str	r3, [r7, #28]
 80207d6:	e175      	b.n	8020ac4 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 80207d8:	2201      	movs	r2, #1
 80207da:	69fb      	ldr	r3, [r7, #28]
 80207dc:	fa02 f303 	lsl.w	r3, r2, r3
 80207e0:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80207e2:	683b      	ldr	r3, [r7, #0]
 80207e4:	681b      	ldr	r3, [r3, #0]
 80207e6:	697a      	ldr	r2, [r7, #20]
 80207e8:	4013      	ands	r3, r2
 80207ea:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 80207ec:	693a      	ldr	r2, [r7, #16]
 80207ee:	697b      	ldr	r3, [r7, #20]
 80207f0:	429a      	cmp	r2, r3
 80207f2:	f040 8164 	bne.w	8020abe <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80207f6:	683b      	ldr	r3, [r7, #0]
 80207f8:	685b      	ldr	r3, [r3, #4]
 80207fa:	2b01      	cmp	r3, #1
 80207fc:	d00b      	beq.n	8020816 <HAL_GPIO_Init+0x5e>
 80207fe:	683b      	ldr	r3, [r7, #0]
 8020800:	685b      	ldr	r3, [r3, #4]
 8020802:	2b02      	cmp	r3, #2
 8020804:	d007      	beq.n	8020816 <HAL_GPIO_Init+0x5e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8020806:	683b      	ldr	r3, [r7, #0]
 8020808:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 802080a:	2b11      	cmp	r3, #17
 802080c:	d003      	beq.n	8020816 <HAL_GPIO_Init+0x5e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 802080e:	683b      	ldr	r3, [r7, #0]
 8020810:	685b      	ldr	r3, [r3, #4]
 8020812:	2b12      	cmp	r3, #18
 8020814:	d130      	bne.n	8020878 <HAL_GPIO_Init+0xc0>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8020816:	687b      	ldr	r3, [r7, #4]
 8020818:	689b      	ldr	r3, [r3, #8]
 802081a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 802081c:	69fb      	ldr	r3, [r7, #28]
 802081e:	005b      	lsls	r3, r3, #1
 8020820:	2203      	movs	r2, #3
 8020822:	fa02 f303 	lsl.w	r3, r2, r3
 8020826:	43db      	mvns	r3, r3
 8020828:	69ba      	ldr	r2, [r7, #24]
 802082a:	4013      	ands	r3, r2
 802082c:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2));
 802082e:	683b      	ldr	r3, [r7, #0]
 8020830:	68da      	ldr	r2, [r3, #12]
 8020832:	69fb      	ldr	r3, [r7, #28]
 8020834:	005b      	lsls	r3, r3, #1
 8020836:	fa02 f303 	lsl.w	r3, r2, r3
 802083a:	69ba      	ldr	r2, [r7, #24]
 802083c:	4313      	orrs	r3, r2
 802083e:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8020840:	687b      	ldr	r3, [r7, #4]
 8020842:	69ba      	ldr	r2, [r7, #24]
 8020844:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8020846:	687b      	ldr	r3, [r7, #4]
 8020848:	685b      	ldr	r3, [r3, #4]
 802084a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 802084c:	2201      	movs	r2, #1
 802084e:	69fb      	ldr	r3, [r7, #28]
 8020850:	fa02 f303 	lsl.w	r3, r2, r3
 8020854:	43db      	mvns	r3, r3
 8020856:	69ba      	ldr	r2, [r7, #24]
 8020858:	4013      	ands	r3, r2
 802085a:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 802085c:	683b      	ldr	r3, [r7, #0]
 802085e:	685b      	ldr	r3, [r3, #4]
 8020860:	091b      	lsrs	r3, r3, #4
 8020862:	f003 0201 	and.w	r2, r3, #1
 8020866:	69fb      	ldr	r3, [r7, #28]
 8020868:	fa02 f303 	lsl.w	r3, r2, r3
 802086c:	69ba      	ldr	r2, [r7, #24]
 802086e:	4313      	orrs	r3, r2
 8020870:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8020872:	687b      	ldr	r3, [r7, #4]
 8020874:	69ba      	ldr	r2, [r7, #24]
 8020876:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8020878:	687b      	ldr	r3, [r7, #4]
 802087a:	68db      	ldr	r3, [r3, #12]
 802087c:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 802087e:	69fb      	ldr	r3, [r7, #28]
 8020880:	005b      	lsls	r3, r3, #1
 8020882:	2203      	movs	r2, #3
 8020884:	fa02 f303 	lsl.w	r3, r2, r3
 8020888:	43db      	mvns	r3, r3
 802088a:	69ba      	ldr	r2, [r7, #24]
 802088c:	4013      	ands	r3, r2
 802088e:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2));
 8020890:	683b      	ldr	r3, [r7, #0]
 8020892:	689a      	ldr	r2, [r3, #8]
 8020894:	69fb      	ldr	r3, [r7, #28]
 8020896:	005b      	lsls	r3, r3, #1
 8020898:	fa02 f303 	lsl.w	r3, r2, r3
 802089c:	69ba      	ldr	r2, [r7, #24]
 802089e:	4313      	orrs	r3, r2
 80208a0:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 80208a2:	687b      	ldr	r3, [r7, #4]
 80208a4:	69ba      	ldr	r2, [r7, #24]
 80208a6:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80208a8:	683b      	ldr	r3, [r7, #0]
 80208aa:	685b      	ldr	r3, [r3, #4]
 80208ac:	2b02      	cmp	r3, #2
 80208ae:	d003      	beq.n	80208b8 <HAL_GPIO_Init+0x100>
 80208b0:	683b      	ldr	r3, [r7, #0]
 80208b2:	685b      	ldr	r3, [r3, #4]
 80208b4:	2b12      	cmp	r3, #18
 80208b6:	d123      	bne.n	8020900 <HAL_GPIO_Init+0x148>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 80208b8:	69fb      	ldr	r3, [r7, #28]
 80208ba:	08da      	lsrs	r2, r3, #3
 80208bc:	687b      	ldr	r3, [r7, #4]
 80208be:	3208      	adds	r2, #8
 80208c0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80208c4:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80208c6:	69fb      	ldr	r3, [r7, #28]
 80208c8:	f003 0307 	and.w	r3, r3, #7
 80208cc:	009b      	lsls	r3, r3, #2
 80208ce:	220f      	movs	r2, #15
 80208d0:	fa02 f303 	lsl.w	r3, r2, r3
 80208d4:	43db      	mvns	r3, r3
 80208d6:	69ba      	ldr	r2, [r7, #24]
 80208d8:	4013      	ands	r3, r2
 80208da:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 80208dc:	683b      	ldr	r3, [r7, #0]
 80208de:	691a      	ldr	r2, [r3, #16]
 80208e0:	69fb      	ldr	r3, [r7, #28]
 80208e2:	f003 0307 	and.w	r3, r3, #7
 80208e6:	009b      	lsls	r3, r3, #2
 80208e8:	fa02 f303 	lsl.w	r3, r2, r3
 80208ec:	69ba      	ldr	r2, [r7, #24]
 80208ee:	4313      	orrs	r3, r2
 80208f0:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3] = temp;
 80208f2:	69fb      	ldr	r3, [r7, #28]
 80208f4:	08da      	lsrs	r2, r3, #3
 80208f6:	687b      	ldr	r3, [r7, #4]
 80208f8:	3208      	adds	r2, #8
 80208fa:	69b9      	ldr	r1, [r7, #24]
 80208fc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }
      
      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8020900:	687b      	ldr	r3, [r7, #4]
 8020902:	681b      	ldr	r3, [r3, #0]
 8020904:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8020906:	69fb      	ldr	r3, [r7, #28]
 8020908:	005b      	lsls	r3, r3, #1
 802090a:	2203      	movs	r2, #3
 802090c:	fa02 f303 	lsl.w	r3, r2, r3
 8020910:	43db      	mvns	r3, r3
 8020912:	69ba      	ldr	r2, [r7, #24]
 8020914:	4013      	ands	r3, r2
 8020916:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8020918:	683b      	ldr	r3, [r7, #0]
 802091a:	685b      	ldr	r3, [r3, #4]
 802091c:	f003 0203 	and.w	r2, r3, #3
 8020920:	69fb      	ldr	r3, [r7, #28]
 8020922:	005b      	lsls	r3, r3, #1
 8020924:	fa02 f303 	lsl.w	r3, r2, r3
 8020928:	69ba      	ldr	r2, [r7, #24]
 802092a:	4313      	orrs	r3, r2
 802092c:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 802092e:	687b      	ldr	r3, [r7, #4]
 8020930:	69ba      	ldr	r2, [r7, #24]
 8020932:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8020934:	683b      	ldr	r3, [r7, #0]
 8020936:	685b      	ldr	r3, [r3, #4]
 8020938:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 802093c:	2b00      	cmp	r3, #0
 802093e:	f000 80be 	beq.w	8020abe <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8020942:	4b66      	ldr	r3, [pc, #408]	; (8020adc <HAL_GPIO_Init+0x324>)
 8020944:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8020946:	4a65      	ldr	r2, [pc, #404]	; (8020adc <HAL_GPIO_Init+0x324>)
 8020948:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 802094c:	6453      	str	r3, [r2, #68]	; 0x44
 802094e:	4b63      	ldr	r3, [pc, #396]	; (8020adc <HAL_GPIO_Init+0x324>)
 8020950:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8020952:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8020956:	60fb      	str	r3, [r7, #12]
 8020958:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2];
 802095a:	4a61      	ldr	r2, [pc, #388]	; (8020ae0 <HAL_GPIO_Init+0x328>)
 802095c:	69fb      	ldr	r3, [r7, #28]
 802095e:	089b      	lsrs	r3, r3, #2
 8020960:	3302      	adds	r3, #2
 8020962:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8020966:	61bb      	str	r3, [r7, #24]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8020968:	69fb      	ldr	r3, [r7, #28]
 802096a:	f003 0303 	and.w	r3, r3, #3
 802096e:	009b      	lsls	r3, r3, #2
 8020970:	220f      	movs	r2, #15
 8020972:	fa02 f303 	lsl.w	r3, r2, r3
 8020976:	43db      	mvns	r3, r3
 8020978:	69ba      	ldr	r2, [r7, #24]
 802097a:	4013      	ands	r3, r2
 802097c:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 802097e:	687b      	ldr	r3, [r7, #4]
 8020980:	4a58      	ldr	r2, [pc, #352]	; (8020ae4 <HAL_GPIO_Init+0x32c>)
 8020982:	4293      	cmp	r3, r2
 8020984:	d037      	beq.n	80209f6 <HAL_GPIO_Init+0x23e>
 8020986:	687b      	ldr	r3, [r7, #4]
 8020988:	4a57      	ldr	r2, [pc, #348]	; (8020ae8 <HAL_GPIO_Init+0x330>)
 802098a:	4293      	cmp	r3, r2
 802098c:	d031      	beq.n	80209f2 <HAL_GPIO_Init+0x23a>
 802098e:	687b      	ldr	r3, [r7, #4]
 8020990:	4a56      	ldr	r2, [pc, #344]	; (8020aec <HAL_GPIO_Init+0x334>)
 8020992:	4293      	cmp	r3, r2
 8020994:	d02b      	beq.n	80209ee <HAL_GPIO_Init+0x236>
 8020996:	687b      	ldr	r3, [r7, #4]
 8020998:	4a55      	ldr	r2, [pc, #340]	; (8020af0 <HAL_GPIO_Init+0x338>)
 802099a:	4293      	cmp	r3, r2
 802099c:	d025      	beq.n	80209ea <HAL_GPIO_Init+0x232>
 802099e:	687b      	ldr	r3, [r7, #4]
 80209a0:	4a54      	ldr	r2, [pc, #336]	; (8020af4 <HAL_GPIO_Init+0x33c>)
 80209a2:	4293      	cmp	r3, r2
 80209a4:	d01f      	beq.n	80209e6 <HAL_GPIO_Init+0x22e>
 80209a6:	687b      	ldr	r3, [r7, #4]
 80209a8:	4a53      	ldr	r2, [pc, #332]	; (8020af8 <HAL_GPIO_Init+0x340>)
 80209aa:	4293      	cmp	r3, r2
 80209ac:	d019      	beq.n	80209e2 <HAL_GPIO_Init+0x22a>
 80209ae:	687b      	ldr	r3, [r7, #4]
 80209b0:	4a52      	ldr	r2, [pc, #328]	; (8020afc <HAL_GPIO_Init+0x344>)
 80209b2:	4293      	cmp	r3, r2
 80209b4:	d013      	beq.n	80209de <HAL_GPIO_Init+0x226>
 80209b6:	687b      	ldr	r3, [r7, #4]
 80209b8:	4a51      	ldr	r2, [pc, #324]	; (8020b00 <HAL_GPIO_Init+0x348>)
 80209ba:	4293      	cmp	r3, r2
 80209bc:	d00d      	beq.n	80209da <HAL_GPIO_Init+0x222>
 80209be:	687b      	ldr	r3, [r7, #4]
 80209c0:	4a50      	ldr	r2, [pc, #320]	; (8020b04 <HAL_GPIO_Init+0x34c>)
 80209c2:	4293      	cmp	r3, r2
 80209c4:	d007      	beq.n	80209d6 <HAL_GPIO_Init+0x21e>
 80209c6:	687b      	ldr	r3, [r7, #4]
 80209c8:	4a4f      	ldr	r2, [pc, #316]	; (8020b08 <HAL_GPIO_Init+0x350>)
 80209ca:	4293      	cmp	r3, r2
 80209cc:	d101      	bne.n	80209d2 <HAL_GPIO_Init+0x21a>
 80209ce:	2309      	movs	r3, #9
 80209d0:	e012      	b.n	80209f8 <HAL_GPIO_Init+0x240>
 80209d2:	230a      	movs	r3, #10
 80209d4:	e010      	b.n	80209f8 <HAL_GPIO_Init+0x240>
 80209d6:	2308      	movs	r3, #8
 80209d8:	e00e      	b.n	80209f8 <HAL_GPIO_Init+0x240>
 80209da:	2307      	movs	r3, #7
 80209dc:	e00c      	b.n	80209f8 <HAL_GPIO_Init+0x240>
 80209de:	2306      	movs	r3, #6
 80209e0:	e00a      	b.n	80209f8 <HAL_GPIO_Init+0x240>
 80209e2:	2305      	movs	r3, #5
 80209e4:	e008      	b.n	80209f8 <HAL_GPIO_Init+0x240>
 80209e6:	2304      	movs	r3, #4
 80209e8:	e006      	b.n	80209f8 <HAL_GPIO_Init+0x240>
 80209ea:	2303      	movs	r3, #3
 80209ec:	e004      	b.n	80209f8 <HAL_GPIO_Init+0x240>
 80209ee:	2302      	movs	r3, #2
 80209f0:	e002      	b.n	80209f8 <HAL_GPIO_Init+0x240>
 80209f2:	2301      	movs	r3, #1
 80209f4:	e000      	b.n	80209f8 <HAL_GPIO_Init+0x240>
 80209f6:	2300      	movs	r3, #0
 80209f8:	69fa      	ldr	r2, [r7, #28]
 80209fa:	f002 0203 	and.w	r2, r2, #3
 80209fe:	0092      	lsls	r2, r2, #2
 8020a00:	4093      	lsls	r3, r2
 8020a02:	69ba      	ldr	r2, [r7, #24]
 8020a04:	4313      	orrs	r3, r2
 8020a06:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2] = temp;
 8020a08:	4935      	ldr	r1, [pc, #212]	; (8020ae0 <HAL_GPIO_Init+0x328>)
 8020a0a:	69fb      	ldr	r3, [r7, #28]
 8020a0c:	089b      	lsrs	r3, r3, #2
 8020a0e:	3302      	adds	r3, #2
 8020a10:	69ba      	ldr	r2, [r7, #24]
 8020a12:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8020a16:	4b3d      	ldr	r3, [pc, #244]	; (8020b0c <HAL_GPIO_Init+0x354>)
 8020a18:	681b      	ldr	r3, [r3, #0]
 8020a1a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8020a1c:	693b      	ldr	r3, [r7, #16]
 8020a1e:	43db      	mvns	r3, r3
 8020a20:	69ba      	ldr	r2, [r7, #24]
 8020a22:	4013      	ands	r3, r2
 8020a24:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8020a26:	683b      	ldr	r3, [r7, #0]
 8020a28:	685b      	ldr	r3, [r3, #4]
 8020a2a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8020a2e:	2b00      	cmp	r3, #0
 8020a30:	d003      	beq.n	8020a3a <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 8020a32:	69ba      	ldr	r2, [r7, #24]
 8020a34:	693b      	ldr	r3, [r7, #16]
 8020a36:	4313      	orrs	r3, r2
 8020a38:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8020a3a:	4a34      	ldr	r2, [pc, #208]	; (8020b0c <HAL_GPIO_Init+0x354>)
 8020a3c:	69bb      	ldr	r3, [r7, #24]
 8020a3e:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8020a40:	4b32      	ldr	r3, [pc, #200]	; (8020b0c <HAL_GPIO_Init+0x354>)
 8020a42:	685b      	ldr	r3, [r3, #4]
 8020a44:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8020a46:	693b      	ldr	r3, [r7, #16]
 8020a48:	43db      	mvns	r3, r3
 8020a4a:	69ba      	ldr	r2, [r7, #24]
 8020a4c:	4013      	ands	r3, r2
 8020a4e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8020a50:	683b      	ldr	r3, [r7, #0]
 8020a52:	685b      	ldr	r3, [r3, #4]
 8020a54:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020a58:	2b00      	cmp	r3, #0
 8020a5a:	d003      	beq.n	8020a64 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8020a5c:	69ba      	ldr	r2, [r7, #24]
 8020a5e:	693b      	ldr	r3, [r7, #16]
 8020a60:	4313      	orrs	r3, r2
 8020a62:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8020a64:	4a29      	ldr	r2, [pc, #164]	; (8020b0c <HAL_GPIO_Init+0x354>)
 8020a66:	69bb      	ldr	r3, [r7, #24]
 8020a68:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8020a6a:	4b28      	ldr	r3, [pc, #160]	; (8020b0c <HAL_GPIO_Init+0x354>)
 8020a6c:	689b      	ldr	r3, [r3, #8]
 8020a6e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8020a70:	693b      	ldr	r3, [r7, #16]
 8020a72:	43db      	mvns	r3, r3
 8020a74:	69ba      	ldr	r2, [r7, #24]
 8020a76:	4013      	ands	r3, r2
 8020a78:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8020a7a:	683b      	ldr	r3, [r7, #0]
 8020a7c:	685b      	ldr	r3, [r3, #4]
 8020a7e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8020a82:	2b00      	cmp	r3, #0
 8020a84:	d003      	beq.n	8020a8e <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 8020a86:	69ba      	ldr	r2, [r7, #24]
 8020a88:	693b      	ldr	r3, [r7, #16]
 8020a8a:	4313      	orrs	r3, r2
 8020a8c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8020a8e:	4a1f      	ldr	r2, [pc, #124]	; (8020b0c <HAL_GPIO_Init+0x354>)
 8020a90:	69bb      	ldr	r3, [r7, #24]
 8020a92:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8020a94:	4b1d      	ldr	r3, [pc, #116]	; (8020b0c <HAL_GPIO_Init+0x354>)
 8020a96:	68db      	ldr	r3, [r3, #12]
 8020a98:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8020a9a:	693b      	ldr	r3, [r7, #16]
 8020a9c:	43db      	mvns	r3, r3
 8020a9e:	69ba      	ldr	r2, [r7, #24]
 8020aa0:	4013      	ands	r3, r2
 8020aa2:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8020aa4:	683b      	ldr	r3, [r7, #0]
 8020aa6:	685b      	ldr	r3, [r3, #4]
 8020aa8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8020aac:	2b00      	cmp	r3, #0
 8020aae:	d003      	beq.n	8020ab8 <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 8020ab0:	69ba      	ldr	r2, [r7, #24]
 8020ab2:	693b      	ldr	r3, [r7, #16]
 8020ab4:	4313      	orrs	r3, r2
 8020ab6:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8020ab8:	4a14      	ldr	r2, [pc, #80]	; (8020b0c <HAL_GPIO_Init+0x354>)
 8020aba:	69bb      	ldr	r3, [r7, #24]
 8020abc:	60d3      	str	r3, [r2, #12]
  for(position = 0; position < GPIO_NUMBER; position++)
 8020abe:	69fb      	ldr	r3, [r7, #28]
 8020ac0:	3301      	adds	r3, #1
 8020ac2:	61fb      	str	r3, [r7, #28]
 8020ac4:	69fb      	ldr	r3, [r7, #28]
 8020ac6:	2b0f      	cmp	r3, #15
 8020ac8:	f67f ae86 	bls.w	80207d8 <HAL_GPIO_Init+0x20>
      }
    }
  }
}
 8020acc:	bf00      	nop
 8020ace:	bf00      	nop
 8020ad0:	3724      	adds	r7, #36	; 0x24
 8020ad2:	46bd      	mov	sp, r7
 8020ad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020ad8:	4770      	bx	lr
 8020ada:	bf00      	nop
 8020adc:	40023800 	.word	0x40023800
 8020ae0:	40013800 	.word	0x40013800
 8020ae4:	40020000 	.word	0x40020000
 8020ae8:	40020400 	.word	0x40020400
 8020aec:	40020800 	.word	0x40020800
 8020af0:	40020c00 	.word	0x40020c00
 8020af4:	40021000 	.word	0x40021000
 8020af8:	40021400 	.word	0x40021400
 8020afc:	40021800 	.word	0x40021800
 8020b00:	40021c00 	.word	0x40021c00
 8020b04:	40022000 	.word	0x40022000
 8020b08:	40022400 	.word	0x40022400
 8020b0c:	40013c00 	.word	0x40013c00

08020b10 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8020b10:	b580      	push	{r7, lr}
 8020b12:	b082      	sub	sp, #8
 8020b14:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0;
 8020b16:	2300      	movs	r3, #0
 8020b18:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 8020b1a:	4b23      	ldr	r3, [pc, #140]	; (8020ba8 <HAL_PWREx_EnableOverDrive+0x98>)
 8020b1c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020b1e:	4a22      	ldr	r2, [pc, #136]	; (8020ba8 <HAL_PWREx_EnableOverDrive+0x98>)
 8020b20:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8020b24:	6413      	str	r3, [r2, #64]	; 0x40
 8020b26:	4b20      	ldr	r3, [pc, #128]	; (8020ba8 <HAL_PWREx_EnableOverDrive+0x98>)
 8020b28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020b2a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8020b2e:	603b      	str	r3, [r7, #0]
 8020b30:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8020b32:	4b1e      	ldr	r3, [pc, #120]	; (8020bac <HAL_PWREx_EnableOverDrive+0x9c>)
 8020b34:	681b      	ldr	r3, [r3, #0]
 8020b36:	4a1d      	ldr	r2, [pc, #116]	; (8020bac <HAL_PWREx_EnableOverDrive+0x9c>)
 8020b38:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8020b3c:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8020b3e:	f7ff fc67 	bl	8020410 <HAL_GetTick>
 8020b42:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8020b44:	e009      	b.n	8020b5a <HAL_PWREx_EnableOverDrive+0x4a>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8020b46:	f7ff fc63 	bl	8020410 <HAL_GetTick>
 8020b4a:	4602      	mov	r2, r0
 8020b4c:	687b      	ldr	r3, [r7, #4]
 8020b4e:	1ad3      	subs	r3, r2, r3
 8020b50:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8020b54:	d901      	bls.n	8020b5a <HAL_PWREx_EnableOverDrive+0x4a>
    {
      return HAL_TIMEOUT;
 8020b56:	2303      	movs	r3, #3
 8020b58:	e022      	b.n	8020ba0 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8020b5a:	4b14      	ldr	r3, [pc, #80]	; (8020bac <HAL_PWREx_EnableOverDrive+0x9c>)
 8020b5c:	685b      	ldr	r3, [r3, #4]
 8020b5e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8020b62:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8020b66:	d1ee      	bne.n	8020b46 <HAL_PWREx_EnableOverDrive+0x36>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8020b68:	4b10      	ldr	r3, [pc, #64]	; (8020bac <HAL_PWREx_EnableOverDrive+0x9c>)
 8020b6a:	681b      	ldr	r3, [r3, #0]
 8020b6c:	4a0f      	ldr	r2, [pc, #60]	; (8020bac <HAL_PWREx_EnableOverDrive+0x9c>)
 8020b6e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8020b72:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8020b74:	f7ff fc4c 	bl	8020410 <HAL_GetTick>
 8020b78:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8020b7a:	e009      	b.n	8020b90 <HAL_PWREx_EnableOverDrive+0x80>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8020b7c:	f7ff fc48 	bl	8020410 <HAL_GetTick>
 8020b80:	4602      	mov	r2, r0
 8020b82:	687b      	ldr	r3, [r7, #4]
 8020b84:	1ad3      	subs	r3, r2, r3
 8020b86:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8020b8a:	d901      	bls.n	8020b90 <HAL_PWREx_EnableOverDrive+0x80>
    {
      return HAL_TIMEOUT;
 8020b8c:	2303      	movs	r3, #3
 8020b8e:	e007      	b.n	8020ba0 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8020b90:	4b06      	ldr	r3, [pc, #24]	; (8020bac <HAL_PWREx_EnableOverDrive+0x9c>)
 8020b92:	685b      	ldr	r3, [r3, #4]
 8020b94:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020b98:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8020b9c:	d1ee      	bne.n	8020b7c <HAL_PWREx_EnableOverDrive+0x6c>
    }
  } 
  return HAL_OK;
 8020b9e:	2300      	movs	r3, #0
}
 8020ba0:	4618      	mov	r0, r3
 8020ba2:	3708      	adds	r7, #8
 8020ba4:	46bd      	mov	sp, r7
 8020ba6:	bd80      	pop	{r7, pc}
 8020ba8:	40023800 	.word	0x40023800
 8020bac:	40007000 	.word	0x40007000

08020bb0 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8020bb0:	b580      	push	{r7, lr}
 8020bb2:	b086      	sub	sp, #24
 8020bb4:	af00      	add	r7, sp, #0
 8020bb6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;
 8020bb8:	2300      	movs	r3, #0
 8020bba:	75fb      	strb	r3, [r7, #23]

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8020bbc:	687b      	ldr	r3, [r7, #4]
 8020bbe:	2b00      	cmp	r3, #0
 8020bc0:	d101      	bne.n	8020bc6 <HAL_RCC_OscConfig+0x16>
  {
    return HAL_ERROR;
 8020bc2:	2301      	movs	r3, #1
 8020bc4:	e291      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8020bc6:	687b      	ldr	r3, [r7, #4]
 8020bc8:	681b      	ldr	r3, [r3, #0]
 8020bca:	f003 0301 	and.w	r3, r3, #1
 8020bce:	2b00      	cmp	r3, #0
 8020bd0:	f000 8087 	beq.w	8020ce2 <HAL_RCC_OscConfig+0x132>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8020bd4:	4b96      	ldr	r3, [pc, #600]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020bd6:	689b      	ldr	r3, [r3, #8]
 8020bd8:	f003 030c 	and.w	r3, r3, #12
 8020bdc:	2b04      	cmp	r3, #4
 8020bde:	d00c      	beq.n	8020bfa <HAL_RCC_OscConfig+0x4a>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8020be0:	4b93      	ldr	r3, [pc, #588]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020be2:	689b      	ldr	r3, [r3, #8]
 8020be4:	f003 030c 	and.w	r3, r3, #12
 8020be8:	2b08      	cmp	r3, #8
 8020bea:	d112      	bne.n	8020c12 <HAL_RCC_OscConfig+0x62>
 8020bec:	4b90      	ldr	r3, [pc, #576]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020bee:	685b      	ldr	r3, [r3, #4]
 8020bf0:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8020bf4:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8020bf8:	d10b      	bne.n	8020c12 <HAL_RCC_OscConfig+0x62>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8020bfa:	4b8d      	ldr	r3, [pc, #564]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020bfc:	681b      	ldr	r3, [r3, #0]
 8020bfe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020c02:	2b00      	cmp	r3, #0
 8020c04:	d06c      	beq.n	8020ce0 <HAL_RCC_OscConfig+0x130>
 8020c06:	687b      	ldr	r3, [r7, #4]
 8020c08:	685b      	ldr	r3, [r3, #4]
 8020c0a:	2b00      	cmp	r3, #0
 8020c0c:	d168      	bne.n	8020ce0 <HAL_RCC_OscConfig+0x130>
      {
        return HAL_ERROR;
 8020c0e:	2301      	movs	r3, #1
 8020c10:	e26b      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8020c12:	687b      	ldr	r3, [r7, #4]
 8020c14:	685b      	ldr	r3, [r3, #4]
 8020c16:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8020c1a:	d106      	bne.n	8020c2a <HAL_RCC_OscConfig+0x7a>
 8020c1c:	4b84      	ldr	r3, [pc, #528]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c1e:	681b      	ldr	r3, [r3, #0]
 8020c20:	4a83      	ldr	r2, [pc, #524]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c22:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8020c26:	6013      	str	r3, [r2, #0]
 8020c28:	e02e      	b.n	8020c88 <HAL_RCC_OscConfig+0xd8>
 8020c2a:	687b      	ldr	r3, [r7, #4]
 8020c2c:	685b      	ldr	r3, [r3, #4]
 8020c2e:	2b00      	cmp	r3, #0
 8020c30:	d10c      	bne.n	8020c4c <HAL_RCC_OscConfig+0x9c>
 8020c32:	4b7f      	ldr	r3, [pc, #508]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c34:	681b      	ldr	r3, [r3, #0]
 8020c36:	4a7e      	ldr	r2, [pc, #504]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c38:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8020c3c:	6013      	str	r3, [r2, #0]
 8020c3e:	4b7c      	ldr	r3, [pc, #496]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c40:	681b      	ldr	r3, [r3, #0]
 8020c42:	4a7b      	ldr	r2, [pc, #492]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c44:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8020c48:	6013      	str	r3, [r2, #0]
 8020c4a:	e01d      	b.n	8020c88 <HAL_RCC_OscConfig+0xd8>
 8020c4c:	687b      	ldr	r3, [r7, #4]
 8020c4e:	685b      	ldr	r3, [r3, #4]
 8020c50:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8020c54:	d10c      	bne.n	8020c70 <HAL_RCC_OscConfig+0xc0>
 8020c56:	4b76      	ldr	r3, [pc, #472]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c58:	681b      	ldr	r3, [r3, #0]
 8020c5a:	4a75      	ldr	r2, [pc, #468]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c5c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8020c60:	6013      	str	r3, [r2, #0]
 8020c62:	4b73      	ldr	r3, [pc, #460]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c64:	681b      	ldr	r3, [r3, #0]
 8020c66:	4a72      	ldr	r2, [pc, #456]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c68:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8020c6c:	6013      	str	r3, [r2, #0]
 8020c6e:	e00b      	b.n	8020c88 <HAL_RCC_OscConfig+0xd8>
 8020c70:	4b6f      	ldr	r3, [pc, #444]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c72:	681b      	ldr	r3, [r3, #0]
 8020c74:	4a6e      	ldr	r2, [pc, #440]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c76:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8020c7a:	6013      	str	r3, [r2, #0]
 8020c7c:	4b6c      	ldr	r3, [pc, #432]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c7e:	681b      	ldr	r3, [r3, #0]
 8020c80:	4a6b      	ldr	r2, [pc, #428]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020c82:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8020c86:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8020c88:	687b      	ldr	r3, [r7, #4]
 8020c8a:	685b      	ldr	r3, [r3, #4]
 8020c8c:	2b00      	cmp	r3, #0
 8020c8e:	d013      	beq.n	8020cb8 <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020c90:	f7ff fbbe 	bl	8020410 <HAL_GetTick>
 8020c94:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8020c96:	e008      	b.n	8020caa <HAL_RCC_OscConfig+0xfa>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8020c98:	f7ff fbba 	bl	8020410 <HAL_GetTick>
 8020c9c:	4602      	mov	r2, r0
 8020c9e:	693b      	ldr	r3, [r7, #16]
 8020ca0:	1ad3      	subs	r3, r2, r3
 8020ca2:	2b64      	cmp	r3, #100	; 0x64
 8020ca4:	d901      	bls.n	8020caa <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8020ca6:	2303      	movs	r3, #3
 8020ca8:	e21f      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8020caa:	4b61      	ldr	r3, [pc, #388]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020cac:	681b      	ldr	r3, [r3, #0]
 8020cae:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020cb2:	2b00      	cmp	r3, #0
 8020cb4:	d0f0      	beq.n	8020c98 <HAL_RCC_OscConfig+0xe8>
 8020cb6:	e014      	b.n	8020ce2 <HAL_RCC_OscConfig+0x132>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020cb8:	f7ff fbaa 	bl	8020410 <HAL_GetTick>
 8020cbc:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8020cbe:	e008      	b.n	8020cd2 <HAL_RCC_OscConfig+0x122>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8020cc0:	f7ff fba6 	bl	8020410 <HAL_GetTick>
 8020cc4:	4602      	mov	r2, r0
 8020cc6:	693b      	ldr	r3, [r7, #16]
 8020cc8:	1ad3      	subs	r3, r2, r3
 8020cca:	2b64      	cmp	r3, #100	; 0x64
 8020ccc:	d901      	bls.n	8020cd2 <HAL_RCC_OscConfig+0x122>
          {
            return HAL_TIMEOUT;
 8020cce:	2303      	movs	r3, #3
 8020cd0:	e20b      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8020cd2:	4b57      	ldr	r3, [pc, #348]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020cd4:	681b      	ldr	r3, [r3, #0]
 8020cd6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020cda:	2b00      	cmp	r3, #0
 8020cdc:	d1f0      	bne.n	8020cc0 <HAL_RCC_OscConfig+0x110>
 8020cde:	e000      	b.n	8020ce2 <HAL_RCC_OscConfig+0x132>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8020ce0:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8020ce2:	687b      	ldr	r3, [r7, #4]
 8020ce4:	681b      	ldr	r3, [r3, #0]
 8020ce6:	f003 0302 	and.w	r3, r3, #2
 8020cea:	2b00      	cmp	r3, #0
 8020cec:	d069      	beq.n	8020dc2 <HAL_RCC_OscConfig+0x212>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8020cee:	4b50      	ldr	r3, [pc, #320]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020cf0:	689b      	ldr	r3, [r3, #8]
 8020cf2:	f003 030c 	and.w	r3, r3, #12
 8020cf6:	2b00      	cmp	r3, #0
 8020cf8:	d00b      	beq.n	8020d12 <HAL_RCC_OscConfig+0x162>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8020cfa:	4b4d      	ldr	r3, [pc, #308]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020cfc:	689b      	ldr	r3, [r3, #8]
 8020cfe:	f003 030c 	and.w	r3, r3, #12
 8020d02:	2b08      	cmp	r3, #8
 8020d04:	d11c      	bne.n	8020d40 <HAL_RCC_OscConfig+0x190>
 8020d06:	4b4a      	ldr	r3, [pc, #296]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020d08:	685b      	ldr	r3, [r3, #4]
 8020d0a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8020d0e:	2b00      	cmp	r3, #0
 8020d10:	d116      	bne.n	8020d40 <HAL_RCC_OscConfig+0x190>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8020d12:	4b47      	ldr	r3, [pc, #284]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020d14:	681b      	ldr	r3, [r3, #0]
 8020d16:	f003 0302 	and.w	r3, r3, #2
 8020d1a:	2b00      	cmp	r3, #0
 8020d1c:	d005      	beq.n	8020d2a <HAL_RCC_OscConfig+0x17a>
 8020d1e:	687b      	ldr	r3, [r7, #4]
 8020d20:	68db      	ldr	r3, [r3, #12]
 8020d22:	2b01      	cmp	r3, #1
 8020d24:	d001      	beq.n	8020d2a <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 8020d26:	2301      	movs	r3, #1
 8020d28:	e1df      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8020d2a:	4b41      	ldr	r3, [pc, #260]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020d2c:	681b      	ldr	r3, [r3, #0]
 8020d2e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8020d32:	687b      	ldr	r3, [r7, #4]
 8020d34:	691b      	ldr	r3, [r3, #16]
 8020d36:	00db      	lsls	r3, r3, #3
 8020d38:	493d      	ldr	r1, [pc, #244]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020d3a:	4313      	orrs	r3, r2
 8020d3c:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8020d3e:	e040      	b.n	8020dc2 <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8020d40:	687b      	ldr	r3, [r7, #4]
 8020d42:	68db      	ldr	r3, [r3, #12]
 8020d44:	2b00      	cmp	r3, #0
 8020d46:	d023      	beq.n	8020d90 <HAL_RCC_OscConfig+0x1e0>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8020d48:	4b39      	ldr	r3, [pc, #228]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020d4a:	681b      	ldr	r3, [r3, #0]
 8020d4c:	4a38      	ldr	r2, [pc, #224]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020d4e:	f043 0301 	orr.w	r3, r3, #1
 8020d52:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020d54:	f7ff fb5c 	bl	8020410 <HAL_GetTick>
 8020d58:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8020d5a:	e008      	b.n	8020d6e <HAL_RCC_OscConfig+0x1be>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8020d5c:	f7ff fb58 	bl	8020410 <HAL_GetTick>
 8020d60:	4602      	mov	r2, r0
 8020d62:	693b      	ldr	r3, [r7, #16]
 8020d64:	1ad3      	subs	r3, r2, r3
 8020d66:	2b02      	cmp	r3, #2
 8020d68:	d901      	bls.n	8020d6e <HAL_RCC_OscConfig+0x1be>
          {
            return HAL_TIMEOUT;
 8020d6a:	2303      	movs	r3, #3
 8020d6c:	e1bd      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8020d6e:	4b30      	ldr	r3, [pc, #192]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020d70:	681b      	ldr	r3, [r3, #0]
 8020d72:	f003 0302 	and.w	r3, r3, #2
 8020d76:	2b00      	cmp	r3, #0
 8020d78:	d0f0      	beq.n	8020d5c <HAL_RCC_OscConfig+0x1ac>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8020d7a:	4b2d      	ldr	r3, [pc, #180]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020d7c:	681b      	ldr	r3, [r3, #0]
 8020d7e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8020d82:	687b      	ldr	r3, [r7, #4]
 8020d84:	691b      	ldr	r3, [r3, #16]
 8020d86:	00db      	lsls	r3, r3, #3
 8020d88:	4929      	ldr	r1, [pc, #164]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020d8a:	4313      	orrs	r3, r2
 8020d8c:	600b      	str	r3, [r1, #0]
 8020d8e:	e018      	b.n	8020dc2 <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8020d90:	4b27      	ldr	r3, [pc, #156]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020d92:	681b      	ldr	r3, [r3, #0]
 8020d94:	4a26      	ldr	r2, [pc, #152]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020d96:	f023 0301 	bic.w	r3, r3, #1
 8020d9a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020d9c:	f7ff fb38 	bl	8020410 <HAL_GetTick>
 8020da0:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8020da2:	e008      	b.n	8020db6 <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8020da4:	f7ff fb34 	bl	8020410 <HAL_GetTick>
 8020da8:	4602      	mov	r2, r0
 8020daa:	693b      	ldr	r3, [r7, #16]
 8020dac:	1ad3      	subs	r3, r2, r3
 8020dae:	2b02      	cmp	r3, #2
 8020db0:	d901      	bls.n	8020db6 <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 8020db2:	2303      	movs	r3, #3
 8020db4:	e199      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8020db6:	4b1e      	ldr	r3, [pc, #120]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020db8:	681b      	ldr	r3, [r3, #0]
 8020dba:	f003 0302 	and.w	r3, r3, #2
 8020dbe:	2b00      	cmp	r3, #0
 8020dc0:	d1f0      	bne.n	8020da4 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8020dc2:	687b      	ldr	r3, [r7, #4]
 8020dc4:	681b      	ldr	r3, [r3, #0]
 8020dc6:	f003 0308 	and.w	r3, r3, #8
 8020dca:	2b00      	cmp	r3, #0
 8020dcc:	d038      	beq.n	8020e40 <HAL_RCC_OscConfig+0x290>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8020dce:	687b      	ldr	r3, [r7, #4]
 8020dd0:	695b      	ldr	r3, [r3, #20]
 8020dd2:	2b00      	cmp	r3, #0
 8020dd4:	d019      	beq.n	8020e0a <HAL_RCC_OscConfig+0x25a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8020dd6:	4b16      	ldr	r3, [pc, #88]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020dd8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8020dda:	4a15      	ldr	r2, [pc, #84]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020ddc:	f043 0301 	orr.w	r3, r3, #1
 8020de0:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8020de2:	f7ff fb15 	bl	8020410 <HAL_GetTick>
 8020de6:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8020de8:	e008      	b.n	8020dfc <HAL_RCC_OscConfig+0x24c>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8020dea:	f7ff fb11 	bl	8020410 <HAL_GetTick>
 8020dee:	4602      	mov	r2, r0
 8020df0:	693b      	ldr	r3, [r7, #16]
 8020df2:	1ad3      	subs	r3, r2, r3
 8020df4:	2b02      	cmp	r3, #2
 8020df6:	d901      	bls.n	8020dfc <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8020df8:	2303      	movs	r3, #3
 8020dfa:	e176      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8020dfc:	4b0c      	ldr	r3, [pc, #48]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020dfe:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8020e00:	f003 0302 	and.w	r3, r3, #2
 8020e04:	2b00      	cmp	r3, #0
 8020e06:	d0f0      	beq.n	8020dea <HAL_RCC_OscConfig+0x23a>
 8020e08:	e01a      	b.n	8020e40 <HAL_RCC_OscConfig+0x290>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8020e0a:	4b09      	ldr	r3, [pc, #36]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020e0c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8020e0e:	4a08      	ldr	r2, [pc, #32]	; (8020e30 <HAL_RCC_OscConfig+0x280>)
 8020e10:	f023 0301 	bic.w	r3, r3, #1
 8020e14:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8020e16:	f7ff fafb 	bl	8020410 <HAL_GetTick>
 8020e1a:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8020e1c:	e00a      	b.n	8020e34 <HAL_RCC_OscConfig+0x284>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8020e1e:	f7ff faf7 	bl	8020410 <HAL_GetTick>
 8020e22:	4602      	mov	r2, r0
 8020e24:	693b      	ldr	r3, [r7, #16]
 8020e26:	1ad3      	subs	r3, r2, r3
 8020e28:	2b02      	cmp	r3, #2
 8020e2a:	d903      	bls.n	8020e34 <HAL_RCC_OscConfig+0x284>
        {
          return HAL_TIMEOUT;
 8020e2c:	2303      	movs	r3, #3
 8020e2e:	e15c      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
 8020e30:	40023800 	.word	0x40023800
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8020e34:	4b91      	ldr	r3, [pc, #580]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020e36:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8020e38:	f003 0302 	and.w	r3, r3, #2
 8020e3c:	2b00      	cmp	r3, #0
 8020e3e:	d1ee      	bne.n	8020e1e <HAL_RCC_OscConfig+0x26e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8020e40:	687b      	ldr	r3, [r7, #4]
 8020e42:	681b      	ldr	r3, [r3, #0]
 8020e44:	f003 0304 	and.w	r3, r3, #4
 8020e48:	2b00      	cmp	r3, #0
 8020e4a:	f000 80a4 	beq.w	8020f96 <HAL_RCC_OscConfig+0x3e6>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8020e4e:	4b8b      	ldr	r3, [pc, #556]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020e50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020e52:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8020e56:	2b00      	cmp	r3, #0
 8020e58:	d10d      	bne.n	8020e76 <HAL_RCC_OscConfig+0x2c6>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 8020e5a:	4b88      	ldr	r3, [pc, #544]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020e5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020e5e:	4a87      	ldr	r2, [pc, #540]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020e60:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8020e64:	6413      	str	r3, [r2, #64]	; 0x40
 8020e66:	4b85      	ldr	r3, [pc, #532]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020e68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020e6a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8020e6e:	60bb      	str	r3, [r7, #8]
 8020e70:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8020e72:	2301      	movs	r3, #1
 8020e74:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8020e76:	4b82      	ldr	r3, [pc, #520]	; (8021080 <HAL_RCC_OscConfig+0x4d0>)
 8020e78:	681b      	ldr	r3, [r3, #0]
 8020e7a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8020e7e:	2b00      	cmp	r3, #0
 8020e80:	d118      	bne.n	8020eb4 <HAL_RCC_OscConfig+0x304>
    {
      /* Enable write access to Backup domain */
      PWR->CR1 |= PWR_CR1_DBP;
 8020e82:	4b7f      	ldr	r3, [pc, #508]	; (8021080 <HAL_RCC_OscConfig+0x4d0>)
 8020e84:	681b      	ldr	r3, [r3, #0]
 8020e86:	4a7e      	ldr	r2, [pc, #504]	; (8021080 <HAL_RCC_OscConfig+0x4d0>)
 8020e88:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8020e8c:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8020e8e:	f7ff fabf 	bl	8020410 <HAL_GetTick>
 8020e92:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8020e94:	e008      	b.n	8020ea8 <HAL_RCC_OscConfig+0x2f8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8020e96:	f7ff fabb 	bl	8020410 <HAL_GetTick>
 8020e9a:	4602      	mov	r2, r0
 8020e9c:	693b      	ldr	r3, [r7, #16]
 8020e9e:	1ad3      	subs	r3, r2, r3
 8020ea0:	2b64      	cmp	r3, #100	; 0x64
 8020ea2:	d901      	bls.n	8020ea8 <HAL_RCC_OscConfig+0x2f8>
        {
          return HAL_TIMEOUT;
 8020ea4:	2303      	movs	r3, #3
 8020ea6:	e120      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8020ea8:	4b75      	ldr	r3, [pc, #468]	; (8021080 <HAL_RCC_OscConfig+0x4d0>)
 8020eaa:	681b      	ldr	r3, [r3, #0]
 8020eac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8020eb0:	2b00      	cmp	r3, #0
 8020eb2:	d0f0      	beq.n	8020e96 <HAL_RCC_OscConfig+0x2e6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8020eb4:	687b      	ldr	r3, [r7, #4]
 8020eb6:	689b      	ldr	r3, [r3, #8]
 8020eb8:	2b01      	cmp	r3, #1
 8020eba:	d106      	bne.n	8020eca <HAL_RCC_OscConfig+0x31a>
 8020ebc:	4b6f      	ldr	r3, [pc, #444]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020ebe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020ec0:	4a6e      	ldr	r2, [pc, #440]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020ec2:	f043 0301 	orr.w	r3, r3, #1
 8020ec6:	6713      	str	r3, [r2, #112]	; 0x70
 8020ec8:	e02d      	b.n	8020f26 <HAL_RCC_OscConfig+0x376>
 8020eca:	687b      	ldr	r3, [r7, #4]
 8020ecc:	689b      	ldr	r3, [r3, #8]
 8020ece:	2b00      	cmp	r3, #0
 8020ed0:	d10c      	bne.n	8020eec <HAL_RCC_OscConfig+0x33c>
 8020ed2:	4b6a      	ldr	r3, [pc, #424]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020ed4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020ed6:	4a69      	ldr	r2, [pc, #420]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020ed8:	f023 0301 	bic.w	r3, r3, #1
 8020edc:	6713      	str	r3, [r2, #112]	; 0x70
 8020ede:	4b67      	ldr	r3, [pc, #412]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020ee0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020ee2:	4a66      	ldr	r2, [pc, #408]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020ee4:	f023 0304 	bic.w	r3, r3, #4
 8020ee8:	6713      	str	r3, [r2, #112]	; 0x70
 8020eea:	e01c      	b.n	8020f26 <HAL_RCC_OscConfig+0x376>
 8020eec:	687b      	ldr	r3, [r7, #4]
 8020eee:	689b      	ldr	r3, [r3, #8]
 8020ef0:	2b05      	cmp	r3, #5
 8020ef2:	d10c      	bne.n	8020f0e <HAL_RCC_OscConfig+0x35e>
 8020ef4:	4b61      	ldr	r3, [pc, #388]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020ef6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020ef8:	4a60      	ldr	r2, [pc, #384]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020efa:	f043 0304 	orr.w	r3, r3, #4
 8020efe:	6713      	str	r3, [r2, #112]	; 0x70
 8020f00:	4b5e      	ldr	r3, [pc, #376]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020f02:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020f04:	4a5d      	ldr	r2, [pc, #372]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020f06:	f043 0301 	orr.w	r3, r3, #1
 8020f0a:	6713      	str	r3, [r2, #112]	; 0x70
 8020f0c:	e00b      	b.n	8020f26 <HAL_RCC_OscConfig+0x376>
 8020f0e:	4b5b      	ldr	r3, [pc, #364]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020f10:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020f12:	4a5a      	ldr	r2, [pc, #360]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020f14:	f023 0301 	bic.w	r3, r3, #1
 8020f18:	6713      	str	r3, [r2, #112]	; 0x70
 8020f1a:	4b58      	ldr	r3, [pc, #352]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020f1c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020f1e:	4a57      	ldr	r2, [pc, #348]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020f20:	f023 0304 	bic.w	r3, r3, #4
 8020f24:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8020f26:	687b      	ldr	r3, [r7, #4]
 8020f28:	689b      	ldr	r3, [r3, #8]
 8020f2a:	2b00      	cmp	r3, #0
 8020f2c:	d015      	beq.n	8020f5a <HAL_RCC_OscConfig+0x3aa>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8020f2e:	f7ff fa6f 	bl	8020410 <HAL_GetTick>
 8020f32:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8020f34:	e00a      	b.n	8020f4c <HAL_RCC_OscConfig+0x39c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8020f36:	f7ff fa6b 	bl	8020410 <HAL_GetTick>
 8020f3a:	4602      	mov	r2, r0
 8020f3c:	693b      	ldr	r3, [r7, #16]
 8020f3e:	1ad3      	subs	r3, r2, r3
 8020f40:	f241 3288 	movw	r2, #5000	; 0x1388
 8020f44:	4293      	cmp	r3, r2
 8020f46:	d901      	bls.n	8020f4c <HAL_RCC_OscConfig+0x39c>
        {
          return HAL_TIMEOUT;
 8020f48:	2303      	movs	r3, #3
 8020f4a:	e0ce      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8020f4c:	4b4b      	ldr	r3, [pc, #300]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020f4e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020f50:	f003 0302 	and.w	r3, r3, #2
 8020f54:	2b00      	cmp	r3, #0
 8020f56:	d0ee      	beq.n	8020f36 <HAL_RCC_OscConfig+0x386>
 8020f58:	e014      	b.n	8020f84 <HAL_RCC_OscConfig+0x3d4>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8020f5a:	f7ff fa59 	bl	8020410 <HAL_GetTick>
 8020f5e:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8020f60:	e00a      	b.n	8020f78 <HAL_RCC_OscConfig+0x3c8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8020f62:	f7ff fa55 	bl	8020410 <HAL_GetTick>
 8020f66:	4602      	mov	r2, r0
 8020f68:	693b      	ldr	r3, [r7, #16]
 8020f6a:	1ad3      	subs	r3, r2, r3
 8020f6c:	f241 3288 	movw	r2, #5000	; 0x1388
 8020f70:	4293      	cmp	r3, r2
 8020f72:	d901      	bls.n	8020f78 <HAL_RCC_OscConfig+0x3c8>
        {
          return HAL_TIMEOUT;
 8020f74:	2303      	movs	r3, #3
 8020f76:	e0b8      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8020f78:	4b40      	ldr	r3, [pc, #256]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020f7a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020f7c:	f003 0302 	and.w	r3, r3, #2
 8020f80:	2b00      	cmp	r3, #0
 8020f82:	d1ee      	bne.n	8020f62 <HAL_RCC_OscConfig+0x3b2>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8020f84:	7dfb      	ldrb	r3, [r7, #23]
 8020f86:	2b01      	cmp	r3, #1
 8020f88:	d105      	bne.n	8020f96 <HAL_RCC_OscConfig+0x3e6>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8020f8a:	4b3c      	ldr	r3, [pc, #240]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020f8c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020f8e:	4a3b      	ldr	r2, [pc, #236]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020f90:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8020f94:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8020f96:	687b      	ldr	r3, [r7, #4]
 8020f98:	699b      	ldr	r3, [r3, #24]
 8020f9a:	2b00      	cmp	r3, #0
 8020f9c:	f000 80a4 	beq.w	80210e8 <HAL_RCC_OscConfig+0x538>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8020fa0:	4b36      	ldr	r3, [pc, #216]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020fa2:	689b      	ldr	r3, [r3, #8]
 8020fa4:	f003 030c 	and.w	r3, r3, #12
 8020fa8:	2b08      	cmp	r3, #8
 8020faa:	d06b      	beq.n	8021084 <HAL_RCC_OscConfig+0x4d4>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8020fac:	687b      	ldr	r3, [r7, #4]
 8020fae:	699b      	ldr	r3, [r3, #24]
 8020fb0:	2b02      	cmp	r3, #2
 8020fb2:	d149      	bne.n	8021048 <HAL_RCC_OscConfig+0x498>
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8020fb4:	4b31      	ldr	r3, [pc, #196]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020fb6:	681b      	ldr	r3, [r3, #0]
 8020fb8:	4a30      	ldr	r2, [pc, #192]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020fba:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8020fbe:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020fc0:	f7ff fa26 	bl	8020410 <HAL_GetTick>
 8020fc4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8020fc6:	e008      	b.n	8020fda <HAL_RCC_OscConfig+0x42a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8020fc8:	f7ff fa22 	bl	8020410 <HAL_GetTick>
 8020fcc:	4602      	mov	r2, r0
 8020fce:	693b      	ldr	r3, [r7, #16]
 8020fd0:	1ad3      	subs	r3, r2, r3
 8020fd2:	2b02      	cmp	r3, #2
 8020fd4:	d901      	bls.n	8020fda <HAL_RCC_OscConfig+0x42a>
          {
            return HAL_TIMEOUT;
 8020fd6:	2303      	movs	r3, #3
 8020fd8:	e087      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8020fda:	4b28      	ldr	r3, [pc, #160]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8020fdc:	681b      	ldr	r3, [r3, #0]
 8020fde:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8020fe2:	2b00      	cmp	r3, #0
 8020fe4:	d1f0      	bne.n	8020fc8 <HAL_RCC_OscConfig+0x418>
                             RCC_OscInitStruct->PLL.PLLN,
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);
#else
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8020fe6:	687b      	ldr	r3, [r7, #4]
 8020fe8:	69da      	ldr	r2, [r3, #28]
 8020fea:	687b      	ldr	r3, [r7, #4]
 8020fec:	6a1b      	ldr	r3, [r3, #32]
 8020fee:	431a      	orrs	r2, r3
 8020ff0:	687b      	ldr	r3, [r7, #4]
 8020ff2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8020ff4:	019b      	lsls	r3, r3, #6
 8020ff6:	431a      	orrs	r2, r3
 8020ff8:	687b      	ldr	r3, [r7, #4]
 8020ffa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020ffc:	085b      	lsrs	r3, r3, #1
 8020ffe:	3b01      	subs	r3, #1
 8021000:	041b      	lsls	r3, r3, #16
 8021002:	431a      	orrs	r2, r3
 8021004:	687b      	ldr	r3, [r7, #4]
 8021006:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021008:	061b      	lsls	r3, r3, #24
 802100a:	4313      	orrs	r3, r2
 802100c:	4a1b      	ldr	r2, [pc, #108]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 802100e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8021012:	6053      	str	r3, [r2, #4]
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ);
#endif

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8021014:	4b19      	ldr	r3, [pc, #100]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8021016:	681b      	ldr	r3, [r3, #0]
 8021018:	4a18      	ldr	r2, [pc, #96]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 802101a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 802101e:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8021020:	f7ff f9f6 	bl	8020410 <HAL_GetTick>
 8021024:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8021026:	e008      	b.n	802103a <HAL_RCC_OscConfig+0x48a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8021028:	f7ff f9f2 	bl	8020410 <HAL_GetTick>
 802102c:	4602      	mov	r2, r0
 802102e:	693b      	ldr	r3, [r7, #16]
 8021030:	1ad3      	subs	r3, r2, r3
 8021032:	2b02      	cmp	r3, #2
 8021034:	d901      	bls.n	802103a <HAL_RCC_OscConfig+0x48a>
          {
            return HAL_TIMEOUT;
 8021036:	2303      	movs	r3, #3
 8021038:	e057      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 802103a:	4b10      	ldr	r3, [pc, #64]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 802103c:	681b      	ldr	r3, [r3, #0]
 802103e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8021042:	2b00      	cmp	r3, #0
 8021044:	d0f0      	beq.n	8021028 <HAL_RCC_OscConfig+0x478>
 8021046:	e04f      	b.n	80210e8 <HAL_RCC_OscConfig+0x538>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8021048:	4b0c      	ldr	r3, [pc, #48]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 802104a:	681b      	ldr	r3, [r3, #0]
 802104c:	4a0b      	ldr	r2, [pc, #44]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 802104e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8021052:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8021054:	f7ff f9dc 	bl	8020410 <HAL_GetTick>
 8021058:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 802105a:	e008      	b.n	802106e <HAL_RCC_OscConfig+0x4be>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 802105c:	f7ff f9d8 	bl	8020410 <HAL_GetTick>
 8021060:	4602      	mov	r2, r0
 8021062:	693b      	ldr	r3, [r7, #16]
 8021064:	1ad3      	subs	r3, r2, r3
 8021066:	2b02      	cmp	r3, #2
 8021068:	d901      	bls.n	802106e <HAL_RCC_OscConfig+0x4be>
          {
            return HAL_TIMEOUT;
 802106a:	2303      	movs	r3, #3
 802106c:	e03d      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 802106e:	4b03      	ldr	r3, [pc, #12]	; (802107c <HAL_RCC_OscConfig+0x4cc>)
 8021070:	681b      	ldr	r3, [r3, #0]
 8021072:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8021076:	2b00      	cmp	r3, #0
 8021078:	d1f0      	bne.n	802105c <HAL_RCC_OscConfig+0x4ac>
 802107a:	e035      	b.n	80210e8 <HAL_RCC_OscConfig+0x538>
 802107c:	40023800 	.word	0x40023800
 8021080:	40007000 	.word	0x40007000
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      pll_config = RCC->PLLCFGR;
 8021084:	4b1b      	ldr	r3, [pc, #108]	; (80210f4 <HAL_RCC_OscConfig+0x544>)
 8021086:	685b      	ldr	r3, [r3, #4]
 8021088:	60fb      	str	r3, [r7, #12]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 802108a:	687b      	ldr	r3, [r7, #4]
 802108c:	699b      	ldr	r3, [r3, #24]
 802108e:	2b01      	cmp	r3, #1
 8021090:	d028      	beq.n	80210e4 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8021092:	68fb      	ldr	r3, [r7, #12]
 8021094:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8021098:	687b      	ldr	r3, [r7, #4]
 802109a:	69db      	ldr	r3, [r3, #28]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 802109c:	429a      	cmp	r2, r3
 802109e:	d121      	bne.n	80210e4 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80210a0:	68fb      	ldr	r3, [r7, #12]
 80210a2:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80210a6:	687b      	ldr	r3, [r7, #4]
 80210a8:	6a1b      	ldr	r3, [r3, #32]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80210aa:	429a      	cmp	r2, r3
 80210ac:	d11a      	bne.n	80210e4 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80210ae:	68fa      	ldr	r2, [r7, #12]
 80210b0:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80210b4:	4013      	ands	r3, r2
 80210b6:	687a      	ldr	r2, [r7, #4]
 80210b8:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80210ba:	0192      	lsls	r2, r2, #6
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80210bc:	4293      	cmp	r3, r2
 80210be:	d111      	bne.n	80210e4 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80210c0:	68fb      	ldr	r3, [r7, #12]
 80210c2:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80210c6:	687b      	ldr	r3, [r7, #4]
 80210c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80210ca:	085b      	lsrs	r3, r3, #1
 80210cc:	3b01      	subs	r3, #1
 80210ce:	041b      	lsls	r3, r3, #16
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80210d0:	429a      	cmp	r2, r3
 80210d2:	d107      	bne.n	80210e4 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80210d4:	68fb      	ldr	r3, [r7, #12]
 80210d6:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80210da:	687b      	ldr	r3, [r7, #4]
 80210dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80210de:	061b      	lsls	r3, r3, #24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80210e0:	429a      	cmp	r2, r3
 80210e2:	d001      	beq.n	80210e8 <HAL_RCC_OscConfig+0x538>
#endif
      {
        return HAL_ERROR;
 80210e4:	2301      	movs	r3, #1
 80210e6:	e000      	b.n	80210ea <HAL_RCC_OscConfig+0x53a>
      }
    }
  }
  return HAL_OK;
 80210e8:	2300      	movs	r3, #0
}
 80210ea:	4618      	mov	r0, r3
 80210ec:	3718      	adds	r7, #24
 80210ee:	46bd      	mov	sp, r7
 80210f0:	bd80      	pop	{r7, pc}
 80210f2:	bf00      	nop
 80210f4:	40023800 	.word	0x40023800

080210f8 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80210f8:	b580      	push	{r7, lr}
 80210fa:	b084      	sub	sp, #16
 80210fc:	af00      	add	r7, sp, #0
 80210fe:	6078      	str	r0, [r7, #4]
 8021100:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0;
 8021102:	2300      	movs	r3, #0
 8021104:	60fb      	str	r3, [r7, #12]

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8021106:	687b      	ldr	r3, [r7, #4]
 8021108:	2b00      	cmp	r3, #0
 802110a:	d101      	bne.n	8021110 <HAL_RCC_ClockConfig+0x18>
  {
    return HAL_ERROR;
 802110c:	2301      	movs	r3, #1
 802110e:	e0d0      	b.n	80212b2 <HAL_RCC_ClockConfig+0x1ba>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8021110:	4b6a      	ldr	r3, [pc, #424]	; (80212bc <HAL_RCC_ClockConfig+0x1c4>)
 8021112:	681b      	ldr	r3, [r3, #0]
 8021114:	f003 030f 	and.w	r3, r3, #15
 8021118:	683a      	ldr	r2, [r7, #0]
 802111a:	429a      	cmp	r2, r3
 802111c:	d910      	bls.n	8021140 <HAL_RCC_ClockConfig+0x48>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 802111e:	4b67      	ldr	r3, [pc, #412]	; (80212bc <HAL_RCC_ClockConfig+0x1c4>)
 8021120:	681b      	ldr	r3, [r3, #0]
 8021122:	f023 020f 	bic.w	r2, r3, #15
 8021126:	4965      	ldr	r1, [pc, #404]	; (80212bc <HAL_RCC_ClockConfig+0x1c4>)
 8021128:	683b      	ldr	r3, [r7, #0]
 802112a:	4313      	orrs	r3, r2
 802112c:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 802112e:	4b63      	ldr	r3, [pc, #396]	; (80212bc <HAL_RCC_ClockConfig+0x1c4>)
 8021130:	681b      	ldr	r3, [r3, #0]
 8021132:	f003 030f 	and.w	r3, r3, #15
 8021136:	683a      	ldr	r2, [r7, #0]
 8021138:	429a      	cmp	r2, r3
 802113a:	d001      	beq.n	8021140 <HAL_RCC_ClockConfig+0x48>
    {
      return HAL_ERROR;
 802113c:	2301      	movs	r3, #1
 802113e:	e0b8      	b.n	80212b2 <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8021140:	687b      	ldr	r3, [r7, #4]
 8021142:	681b      	ldr	r3, [r3, #0]
 8021144:	f003 0302 	and.w	r3, r3, #2
 8021148:	2b00      	cmp	r3, #0
 802114a:	d020      	beq.n	802118e <HAL_RCC_ClockConfig+0x96>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 802114c:	687b      	ldr	r3, [r7, #4]
 802114e:	681b      	ldr	r3, [r3, #0]
 8021150:	f003 0304 	and.w	r3, r3, #4
 8021154:	2b00      	cmp	r3, #0
 8021156:	d005      	beq.n	8021164 <HAL_RCC_ClockConfig+0x6c>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8021158:	4b59      	ldr	r3, [pc, #356]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 802115a:	689b      	ldr	r3, [r3, #8]
 802115c:	4a58      	ldr	r2, [pc, #352]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 802115e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8021162:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8021164:	687b      	ldr	r3, [r7, #4]
 8021166:	681b      	ldr	r3, [r3, #0]
 8021168:	f003 0308 	and.w	r3, r3, #8
 802116c:	2b00      	cmp	r3, #0
 802116e:	d005      	beq.n	802117c <HAL_RCC_ClockConfig+0x84>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8021170:	4b53      	ldr	r3, [pc, #332]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 8021172:	689b      	ldr	r3, [r3, #8]
 8021174:	4a52      	ldr	r2, [pc, #328]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 8021176:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 802117a:	6093      	str	r3, [r2, #8]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 802117c:	4b50      	ldr	r3, [pc, #320]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 802117e:	689b      	ldr	r3, [r3, #8]
 8021180:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8021184:	687b      	ldr	r3, [r7, #4]
 8021186:	689b      	ldr	r3, [r3, #8]
 8021188:	494d      	ldr	r1, [pc, #308]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 802118a:	4313      	orrs	r3, r2
 802118c:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 802118e:	687b      	ldr	r3, [r7, #4]
 8021190:	681b      	ldr	r3, [r3, #0]
 8021192:	f003 0301 	and.w	r3, r3, #1
 8021196:	2b00      	cmp	r3, #0
 8021198:	d040      	beq.n	802121c <HAL_RCC_ClockConfig+0x124>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 802119a:	687b      	ldr	r3, [r7, #4]
 802119c:	685b      	ldr	r3, [r3, #4]
 802119e:	2b01      	cmp	r3, #1
 80211a0:	d107      	bne.n	80211b2 <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80211a2:	4b47      	ldr	r3, [pc, #284]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 80211a4:	681b      	ldr	r3, [r3, #0]
 80211a6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80211aa:	2b00      	cmp	r3, #0
 80211ac:	d115      	bne.n	80211da <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80211ae:	2301      	movs	r3, #1
 80211b0:	e07f      	b.n	80212b2 <HAL_RCC_ClockConfig+0x1ba>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80211b2:	687b      	ldr	r3, [r7, #4]
 80211b4:	685b      	ldr	r3, [r3, #4]
 80211b6:	2b02      	cmp	r3, #2
 80211b8:	d107      	bne.n	80211ca <HAL_RCC_ClockConfig+0xd2>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80211ba:	4b41      	ldr	r3, [pc, #260]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 80211bc:	681b      	ldr	r3, [r3, #0]
 80211be:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80211c2:	2b00      	cmp	r3, #0
 80211c4:	d109      	bne.n	80211da <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80211c6:	2301      	movs	r3, #1
 80211c8:	e073      	b.n	80212b2 <HAL_RCC_ClockConfig+0x1ba>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80211ca:	4b3d      	ldr	r3, [pc, #244]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 80211cc:	681b      	ldr	r3, [r3, #0]
 80211ce:	f003 0302 	and.w	r3, r3, #2
 80211d2:	2b00      	cmp	r3, #0
 80211d4:	d101      	bne.n	80211da <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80211d6:	2301      	movs	r3, #1
 80211d8:	e06b      	b.n	80212b2 <HAL_RCC_ClockConfig+0x1ba>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80211da:	4b39      	ldr	r3, [pc, #228]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 80211dc:	689b      	ldr	r3, [r3, #8]
 80211de:	f023 0203 	bic.w	r2, r3, #3
 80211e2:	687b      	ldr	r3, [r7, #4]
 80211e4:	685b      	ldr	r3, [r3, #4]
 80211e6:	4936      	ldr	r1, [pc, #216]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 80211e8:	4313      	orrs	r3, r2
 80211ea:	608b      	str	r3, [r1, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80211ec:	f7ff f910 	bl	8020410 <HAL_GetTick>
 80211f0:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80211f2:	e00a      	b.n	802120a <HAL_RCC_ClockConfig+0x112>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80211f4:	f7ff f90c 	bl	8020410 <HAL_GetTick>
 80211f8:	4602      	mov	r2, r0
 80211fa:	68fb      	ldr	r3, [r7, #12]
 80211fc:	1ad3      	subs	r3, r2, r3
 80211fe:	f241 3288 	movw	r2, #5000	; 0x1388
 8021202:	4293      	cmp	r3, r2
 8021204:	d901      	bls.n	802120a <HAL_RCC_ClockConfig+0x112>
      {
        return HAL_TIMEOUT;
 8021206:	2303      	movs	r3, #3
 8021208:	e053      	b.n	80212b2 <HAL_RCC_ClockConfig+0x1ba>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 802120a:	4b2d      	ldr	r3, [pc, #180]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 802120c:	689b      	ldr	r3, [r3, #8]
 802120e:	f003 020c 	and.w	r2, r3, #12
 8021212:	687b      	ldr	r3, [r7, #4]
 8021214:	685b      	ldr	r3, [r3, #4]
 8021216:	009b      	lsls	r3, r3, #2
 8021218:	429a      	cmp	r2, r3
 802121a:	d1eb      	bne.n	80211f4 <HAL_RCC_ClockConfig+0xfc>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 802121c:	4b27      	ldr	r3, [pc, #156]	; (80212bc <HAL_RCC_ClockConfig+0x1c4>)
 802121e:	681b      	ldr	r3, [r3, #0]
 8021220:	f003 030f 	and.w	r3, r3, #15
 8021224:	683a      	ldr	r2, [r7, #0]
 8021226:	429a      	cmp	r2, r3
 8021228:	d210      	bcs.n	802124c <HAL_RCC_ClockConfig+0x154>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 802122a:	4b24      	ldr	r3, [pc, #144]	; (80212bc <HAL_RCC_ClockConfig+0x1c4>)
 802122c:	681b      	ldr	r3, [r3, #0]
 802122e:	f023 020f 	bic.w	r2, r3, #15
 8021232:	4922      	ldr	r1, [pc, #136]	; (80212bc <HAL_RCC_ClockConfig+0x1c4>)
 8021234:	683b      	ldr	r3, [r7, #0]
 8021236:	4313      	orrs	r3, r2
 8021238:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 802123a:	4b20      	ldr	r3, [pc, #128]	; (80212bc <HAL_RCC_ClockConfig+0x1c4>)
 802123c:	681b      	ldr	r3, [r3, #0]
 802123e:	f003 030f 	and.w	r3, r3, #15
 8021242:	683a      	ldr	r2, [r7, #0]
 8021244:	429a      	cmp	r2, r3
 8021246:	d001      	beq.n	802124c <HAL_RCC_ClockConfig+0x154>
    {
      return HAL_ERROR;
 8021248:	2301      	movs	r3, #1
 802124a:	e032      	b.n	80212b2 <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 802124c:	687b      	ldr	r3, [r7, #4]
 802124e:	681b      	ldr	r3, [r3, #0]
 8021250:	f003 0304 	and.w	r3, r3, #4
 8021254:	2b00      	cmp	r3, #0
 8021256:	d008      	beq.n	802126a <HAL_RCC_ClockConfig+0x172>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8021258:	4b19      	ldr	r3, [pc, #100]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 802125a:	689b      	ldr	r3, [r3, #8]
 802125c:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8021260:	687b      	ldr	r3, [r7, #4]
 8021262:	68db      	ldr	r3, [r3, #12]
 8021264:	4916      	ldr	r1, [pc, #88]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 8021266:	4313      	orrs	r3, r2
 8021268:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 802126a:	687b      	ldr	r3, [r7, #4]
 802126c:	681b      	ldr	r3, [r3, #0]
 802126e:	f003 0308 	and.w	r3, r3, #8
 8021272:	2b00      	cmp	r3, #0
 8021274:	d009      	beq.n	802128a <HAL_RCC_ClockConfig+0x192>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8021276:	4b12      	ldr	r3, [pc, #72]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 8021278:	689b      	ldr	r3, [r3, #8]
 802127a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 802127e:	687b      	ldr	r3, [r7, #4]
 8021280:	691b      	ldr	r3, [r3, #16]
 8021282:	00db      	lsls	r3, r3, #3
 8021284:	490e      	ldr	r1, [pc, #56]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 8021286:	4313      	orrs	r3, r2
 8021288:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 802128a:	f000 f821 	bl	80212d0 <HAL_RCC_GetSysClockFreq>
 802128e:	4602      	mov	r2, r0
 8021290:	4b0b      	ldr	r3, [pc, #44]	; (80212c0 <HAL_RCC_ClockConfig+0x1c8>)
 8021292:	689b      	ldr	r3, [r3, #8]
 8021294:	091b      	lsrs	r3, r3, #4
 8021296:	f003 030f 	and.w	r3, r3, #15
 802129a:	490a      	ldr	r1, [pc, #40]	; (80212c4 <HAL_RCC_ClockConfig+0x1cc>)
 802129c:	5ccb      	ldrb	r3, [r1, r3]
 802129e:	fa22 f303 	lsr.w	r3, r2, r3
 80212a2:	4a09      	ldr	r2, [pc, #36]	; (80212c8 <HAL_RCC_ClockConfig+0x1d0>)
 80212a4:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 80212a6:	4b09      	ldr	r3, [pc, #36]	; (80212cc <HAL_RCC_ClockConfig+0x1d4>)
 80212a8:	681b      	ldr	r3, [r3, #0]
 80212aa:	4618      	mov	r0, r3
 80212ac:	f7ff f86c 	bl	8020388 <HAL_InitTick>

  return HAL_OK;
 80212b0:	2300      	movs	r3, #0
}
 80212b2:	4618      	mov	r0, r3
 80212b4:	3710      	adds	r7, #16
 80212b6:	46bd      	mov	sp, r7
 80212b8:	bd80      	pop	{r7, pc}
 80212ba:	bf00      	nop
 80212bc:	40023c00 	.word	0x40023c00
 80212c0:	40023800 	.word	0x40023800
 80212c4:	08027f18 	.word	0x08027f18
 80212c8:	20000004 	.word	0x20000004
 80212cc:	20000008 	.word	0x20000008

080212d0 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80212d0:	b5b0      	push	{r4, r5, r7, lr}
 80212d2:	b084      	sub	sp, #16
 80212d4:	af00      	add	r7, sp, #0
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
 80212d6:	2100      	movs	r1, #0
 80212d8:	6079      	str	r1, [r7, #4]
 80212da:	2100      	movs	r1, #0
 80212dc:	60f9      	str	r1, [r7, #12]
 80212de:	2100      	movs	r1, #0
 80212e0:	6039      	str	r1, [r7, #0]
  uint32_t sysclockfreq = 0;
 80212e2:	2100      	movs	r1, #0
 80212e4:	60b9      	str	r1, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80212e6:	4952      	ldr	r1, [pc, #328]	; (8021430 <HAL_RCC_GetSysClockFreq+0x160>)
 80212e8:	6889      	ldr	r1, [r1, #8]
 80212ea:	f001 010c 	and.w	r1, r1, #12
 80212ee:	2908      	cmp	r1, #8
 80212f0:	d00d      	beq.n	802130e <HAL_RCC_GetSysClockFreq+0x3e>
 80212f2:	2908      	cmp	r1, #8
 80212f4:	f200 8094 	bhi.w	8021420 <HAL_RCC_GetSysClockFreq+0x150>
 80212f8:	2900      	cmp	r1, #0
 80212fa:	d002      	beq.n	8021302 <HAL_RCC_GetSysClockFreq+0x32>
 80212fc:	2904      	cmp	r1, #4
 80212fe:	d003      	beq.n	8021308 <HAL_RCC_GetSysClockFreq+0x38>
 8021300:	e08e      	b.n	8021420 <HAL_RCC_GetSysClockFreq+0x150>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8021302:	4b4c      	ldr	r3, [pc, #304]	; (8021434 <HAL_RCC_GetSysClockFreq+0x164>)
 8021304:	60bb      	str	r3, [r7, #8]
      break;
 8021306:	e08e      	b.n	8021426 <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8021308:	4b4b      	ldr	r3, [pc, #300]	; (8021438 <HAL_RCC_GetSysClockFreq+0x168>)
 802130a:	60bb      	str	r3, [r7, #8]
      break;
 802130c:	e08b      	b.n	8021426 <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 802130e:	4948      	ldr	r1, [pc, #288]	; (8021430 <HAL_RCC_GetSysClockFreq+0x160>)
 8021310:	6849      	ldr	r1, [r1, #4]
 8021312:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8021316:	6079      	str	r1, [r7, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8021318:	4945      	ldr	r1, [pc, #276]	; (8021430 <HAL_RCC_GetSysClockFreq+0x160>)
 802131a:	6849      	ldr	r1, [r1, #4]
 802131c:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 8021320:	2900      	cmp	r1, #0
 8021322:	d024      	beq.n	802136e <HAL_RCC_GetSysClockFreq+0x9e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8021324:	4942      	ldr	r1, [pc, #264]	; (8021430 <HAL_RCC_GetSysClockFreq+0x160>)
 8021326:	6849      	ldr	r1, [r1, #4]
 8021328:	0989      	lsrs	r1, r1, #6
 802132a:	4608      	mov	r0, r1
 802132c:	f04f 0100 	mov.w	r1, #0
 8021330:	f240 14ff 	movw	r4, #511	; 0x1ff
 8021334:	f04f 0500 	mov.w	r5, #0
 8021338:	ea00 0204 	and.w	r2, r0, r4
 802133c:	ea01 0305 	and.w	r3, r1, r5
 8021340:	493d      	ldr	r1, [pc, #244]	; (8021438 <HAL_RCC_GetSysClockFreq+0x168>)
 8021342:	fb01 f003 	mul.w	r0, r1, r3
 8021346:	2100      	movs	r1, #0
 8021348:	fb01 f102 	mul.w	r1, r1, r2
 802134c:	1844      	adds	r4, r0, r1
 802134e:	493a      	ldr	r1, [pc, #232]	; (8021438 <HAL_RCC_GetSysClockFreq+0x168>)
 8021350:	fba2 0101 	umull	r0, r1, r2, r1
 8021354:	1863      	adds	r3, r4, r1
 8021356:	4619      	mov	r1, r3
 8021358:	687b      	ldr	r3, [r7, #4]
 802135a:	461a      	mov	r2, r3
 802135c:	f04f 0300 	mov.w	r3, #0
 8021360:	f7df fcb2 	bl	8000cc8 <__aeabi_uldivmod>
 8021364:	4602      	mov	r2, r0
 8021366:	460b      	mov	r3, r1
 8021368:	4613      	mov	r3, r2
 802136a:	60fb      	str	r3, [r7, #12]
 802136c:	e04a      	b.n	8021404 <HAL_RCC_GetSysClockFreq+0x134>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 802136e:	4b30      	ldr	r3, [pc, #192]	; (8021430 <HAL_RCC_GetSysClockFreq+0x160>)
 8021370:	685b      	ldr	r3, [r3, #4]
 8021372:	099b      	lsrs	r3, r3, #6
 8021374:	461a      	mov	r2, r3
 8021376:	f04f 0300 	mov.w	r3, #0
 802137a:	f240 10ff 	movw	r0, #511	; 0x1ff
 802137e:	f04f 0100 	mov.w	r1, #0
 8021382:	ea02 0400 	and.w	r4, r2, r0
 8021386:	ea03 0501 	and.w	r5, r3, r1
 802138a:	4620      	mov	r0, r4
 802138c:	4629      	mov	r1, r5
 802138e:	f04f 0200 	mov.w	r2, #0
 8021392:	f04f 0300 	mov.w	r3, #0
 8021396:	014b      	lsls	r3, r1, #5
 8021398:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 802139c:	0142      	lsls	r2, r0, #5
 802139e:	4610      	mov	r0, r2
 80213a0:	4619      	mov	r1, r3
 80213a2:	1b00      	subs	r0, r0, r4
 80213a4:	eb61 0105 	sbc.w	r1, r1, r5
 80213a8:	f04f 0200 	mov.w	r2, #0
 80213ac:	f04f 0300 	mov.w	r3, #0
 80213b0:	018b      	lsls	r3, r1, #6
 80213b2:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 80213b6:	0182      	lsls	r2, r0, #6
 80213b8:	1a12      	subs	r2, r2, r0
 80213ba:	eb63 0301 	sbc.w	r3, r3, r1
 80213be:	f04f 0000 	mov.w	r0, #0
 80213c2:	f04f 0100 	mov.w	r1, #0
 80213c6:	00d9      	lsls	r1, r3, #3
 80213c8:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80213cc:	00d0      	lsls	r0, r2, #3
 80213ce:	4602      	mov	r2, r0
 80213d0:	460b      	mov	r3, r1
 80213d2:	1912      	adds	r2, r2, r4
 80213d4:	eb45 0303 	adc.w	r3, r5, r3
 80213d8:	f04f 0000 	mov.w	r0, #0
 80213dc:	f04f 0100 	mov.w	r1, #0
 80213e0:	0299      	lsls	r1, r3, #10
 80213e2:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 80213e6:	0290      	lsls	r0, r2, #10
 80213e8:	4602      	mov	r2, r0
 80213ea:	460b      	mov	r3, r1
 80213ec:	4610      	mov	r0, r2
 80213ee:	4619      	mov	r1, r3
 80213f0:	687b      	ldr	r3, [r7, #4]
 80213f2:	461a      	mov	r2, r3
 80213f4:	f04f 0300 	mov.w	r3, #0
 80213f8:	f7df fc66 	bl	8000cc8 <__aeabi_uldivmod>
 80213fc:	4602      	mov	r2, r0
 80213fe:	460b      	mov	r3, r1
 8021400:	4613      	mov	r3, r2
 8021402:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8021404:	4b0a      	ldr	r3, [pc, #40]	; (8021430 <HAL_RCC_GetSysClockFreq+0x160>)
 8021406:	685b      	ldr	r3, [r3, #4]
 8021408:	0c1b      	lsrs	r3, r3, #16
 802140a:	f003 0303 	and.w	r3, r3, #3
 802140e:	3301      	adds	r3, #1
 8021410:	005b      	lsls	r3, r3, #1
 8021412:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco / pllp;
 8021414:	68fa      	ldr	r2, [r7, #12]
 8021416:	683b      	ldr	r3, [r7, #0]
 8021418:	fbb2 f3f3 	udiv	r3, r2, r3
 802141c:	60bb      	str	r3, [r7, #8]
      break;
 802141e:	e002      	b.n	8021426 <HAL_RCC_GetSysClockFreq+0x156>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8021420:	4b04      	ldr	r3, [pc, #16]	; (8021434 <HAL_RCC_GetSysClockFreq+0x164>)
 8021422:	60bb      	str	r3, [r7, #8]
      break;
 8021424:	bf00      	nop
    }
  }
  return sysclockfreq;
 8021426:	68bb      	ldr	r3, [r7, #8]
}
 8021428:	4618      	mov	r0, r3
 802142a:	3710      	adds	r7, #16
 802142c:	46bd      	mov	sp, r7
 802142e:	bdb0      	pop	{r4, r5, r7, pc}
 8021430:	40023800 	.word	0x40023800
 8021434:	00f42400 	.word	0x00f42400
 8021438:	017d7840 	.word	0x017d7840

0802143c <HAL_RCC_GetHCLKFreq>:
  *         right HCLK value. Otherwise, any configuration based on this function will be incorrect.
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 802143c:	b480      	push	{r7}
 802143e:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8021440:	4b03      	ldr	r3, [pc, #12]	; (8021450 <HAL_RCC_GetHCLKFreq+0x14>)
 8021442:	681b      	ldr	r3, [r3, #0]
}
 8021444:	4618      	mov	r0, r3
 8021446:	46bd      	mov	sp, r7
 8021448:	f85d 7b04 	ldr.w	r7, [sp], #4
 802144c:	4770      	bx	lr
 802144e:	bf00      	nop
 8021450:	20000004 	.word	0x20000004

08021454 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8021454:	b580      	push	{r7, lr}
 8021456:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8021458:	f7ff fff0 	bl	802143c <HAL_RCC_GetHCLKFreq>
 802145c:	4602      	mov	r2, r0
 802145e:	4b05      	ldr	r3, [pc, #20]	; (8021474 <HAL_RCC_GetPCLK1Freq+0x20>)
 8021460:	689b      	ldr	r3, [r3, #8]
 8021462:	0a9b      	lsrs	r3, r3, #10
 8021464:	f003 0307 	and.w	r3, r3, #7
 8021468:	4903      	ldr	r1, [pc, #12]	; (8021478 <HAL_RCC_GetPCLK1Freq+0x24>)
 802146a:	5ccb      	ldrb	r3, [r1, r3]
 802146c:	fa22 f303 	lsr.w	r3, r2, r3
}
 8021470:	4618      	mov	r0, r3
 8021472:	bd80      	pop	{r7, pc}
 8021474:	40023800 	.word	0x40023800
 8021478:	08027f28 	.word	0x08027f28

0802147c <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 802147c:	b580      	push	{r7, lr}
 802147e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8021480:	f7ff ffdc 	bl	802143c <HAL_RCC_GetHCLKFreq>
 8021484:	4602      	mov	r2, r0
 8021486:	4b05      	ldr	r3, [pc, #20]	; (802149c <HAL_RCC_GetPCLK2Freq+0x20>)
 8021488:	689b      	ldr	r3, [r3, #8]
 802148a:	0b5b      	lsrs	r3, r3, #13
 802148c:	f003 0307 	and.w	r3, r3, #7
 8021490:	4903      	ldr	r1, [pc, #12]	; (80214a0 <HAL_RCC_GetPCLK2Freq+0x24>)
 8021492:	5ccb      	ldrb	r3, [r1, r3]
 8021494:	fa22 f303 	lsr.w	r3, r2, r3
}
 8021498:	4618      	mov	r0, r3
 802149a:	bd80      	pop	{r7, pc}
 802149c:	40023800 	.word	0x40023800
 80214a0:	08027f28 	.word	0x08027f28

080214a4 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80214a4:	b580      	push	{r7, lr}
 80214a6:	b088      	sub	sp, #32
 80214a8:	af00      	add	r7, sp, #0
 80214aa:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0;
 80214ac:	2300      	movs	r3, #0
 80214ae:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg0 = 0;
 80214b0:	2300      	movs	r3, #0
 80214b2:	613b      	str	r3, [r7, #16]
  uint32_t tmpreg1 = 0;
 80214b4:	2300      	movs	r3, #0
 80214b6:	60fb      	str	r3, [r7, #12]
  uint32_t plli2sused = 0;
 80214b8:	2300      	movs	r3, #0
 80214ba:	61fb      	str	r3, [r7, #28]
  uint32_t pllsaiused = 0;
 80214bc:	2300      	movs	r3, #0
 80214be:	61bb      	str	r3, [r7, #24]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80214c0:	687b      	ldr	r3, [r7, #4]
 80214c2:	681b      	ldr	r3, [r3, #0]
 80214c4:	f003 0301 	and.w	r3, r3, #1
 80214c8:	2b00      	cmp	r3, #0
 80214ca:	d012      	beq.n	80214f2 <HAL_RCCEx_PeriphCLKConfig+0x4e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 80214cc:	4b69      	ldr	r3, [pc, #420]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80214ce:	689b      	ldr	r3, [r3, #8]
 80214d0:	4a68      	ldr	r2, [pc, #416]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80214d2:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80214d6:	6093      	str	r3, [r2, #8]
 80214d8:	4b66      	ldr	r3, [pc, #408]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80214da:	689a      	ldr	r2, [r3, #8]
 80214dc:	687b      	ldr	r3, [r7, #4]
 80214de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80214e0:	4964      	ldr	r1, [pc, #400]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80214e2:	4313      	orrs	r3, r2
 80214e4:	608b      	str	r3, [r1, #8]

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 80214e6:	687b      	ldr	r3, [r7, #4]
 80214e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80214ea:	2b00      	cmp	r3, #0
 80214ec:	d101      	bne.n	80214f2 <HAL_RCCEx_PeriphCLKConfig+0x4e>
    {
      plli2sused = 1;
 80214ee:	2301      	movs	r3, #1
 80214f0:	61fb      	str	r3, [r7, #28]
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 80214f2:	687b      	ldr	r3, [r7, #4]
 80214f4:	681b      	ldr	r3, [r3, #0]
 80214f6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80214fa:	2b00      	cmp	r3, #0
 80214fc:	d017      	beq.n	802152e <HAL_RCCEx_PeriphCLKConfig+0x8a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80214fe:	4b5d      	ldr	r3, [pc, #372]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021500:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021504:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8021508:	687b      	ldr	r3, [r7, #4]
 802150a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 802150c:	4959      	ldr	r1, [pc, #356]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 802150e:	4313      	orrs	r3, r2
 8021510:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8021514:	687b      	ldr	r3, [r7, #4]
 8021516:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021518:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 802151c:	d101      	bne.n	8021522 <HAL_RCCEx_PeriphCLKConfig+0x7e>
    {
      plli2sused = 1;
 802151e:	2301      	movs	r3, #1
 8021520:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8021522:	687b      	ldr	r3, [r7, #4]
 8021524:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021526:	2b00      	cmp	r3, #0
 8021528:	d101      	bne.n	802152e <HAL_RCCEx_PeriphCLKConfig+0x8a>
    {
      pllsaiused = 1;
 802152a:	2301      	movs	r3, #1
 802152c:	61bb      	str	r3, [r7, #24]
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 802152e:	687b      	ldr	r3, [r7, #4]
 8021530:	681b      	ldr	r3, [r3, #0]
 8021532:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8021536:	2b00      	cmp	r3, #0
 8021538:	d017      	beq.n	802156a <HAL_RCCEx_PeriphCLKConfig+0xc6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 802153a:	4b4e      	ldr	r3, [pc, #312]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 802153c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021540:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8021544:	687b      	ldr	r3, [r7, #4]
 8021546:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021548:	494a      	ldr	r1, [pc, #296]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 802154a:	4313      	orrs	r3, r2
 802154c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8021550:	687b      	ldr	r3, [r7, #4]
 8021552:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021554:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8021558:	d101      	bne.n	802155e <HAL_RCCEx_PeriphCLKConfig+0xba>
    {
      plli2sused = 1;
 802155a:	2301      	movs	r3, #1
 802155c:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
 802155e:	687b      	ldr	r3, [r7, #4]
 8021560:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021562:	2b00      	cmp	r3, #0
 8021564:	d101      	bne.n	802156a <HAL_RCCEx_PeriphCLKConfig+0xc6>
    {
      pllsaiused = 1;
 8021566:	2301      	movs	r3, #1
 8021568:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 802156a:	687b      	ldr	r3, [r7, #4]
 802156c:	681b      	ldr	r3, [r3, #0]
 802156e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8021572:	2b00      	cmp	r3, #0
 8021574:	d001      	beq.n	802157a <HAL_RCCEx_PeriphCLKConfig+0xd6>
  {
      plli2sused = 1;
 8021576:	2301      	movs	r3, #1
 8021578:	61fb      	str	r3, [r7, #28]
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 802157a:	687b      	ldr	r3, [r7, #4]
 802157c:	681b      	ldr	r3, [r3, #0]
 802157e:	f003 0320 	and.w	r3, r3, #32
 8021582:	2b00      	cmp	r3, #0
 8021584:	f000 808b 	beq.w	802169e <HAL_RCCEx_PeriphCLKConfig+0x1fa>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8021588:	4b3a      	ldr	r3, [pc, #232]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 802158a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 802158c:	4a39      	ldr	r2, [pc, #228]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 802158e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8021592:	6413      	str	r3, [r2, #64]	; 0x40
 8021594:	4b37      	ldr	r3, [pc, #220]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021596:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021598:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 802159c:	60bb      	str	r3, [r7, #8]
 802159e:	68bb      	ldr	r3, [r7, #8]

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 80215a0:	4b35      	ldr	r3, [pc, #212]	; (8021678 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80215a2:	681b      	ldr	r3, [r3, #0]
 80215a4:	4a34      	ldr	r2, [pc, #208]	; (8021678 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80215a6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80215aa:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80215ac:	f7fe ff30 	bl	8020410 <HAL_GetTick>
 80215b0:	6178      	str	r0, [r7, #20]

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 80215b2:	e008      	b.n	80215c6 <HAL_RCCEx_PeriphCLKConfig+0x122>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80215b4:	f7fe ff2c 	bl	8020410 <HAL_GetTick>
 80215b8:	4602      	mov	r2, r0
 80215ba:	697b      	ldr	r3, [r7, #20]
 80215bc:	1ad3      	subs	r3, r2, r3
 80215be:	2b64      	cmp	r3, #100	; 0x64
 80215c0:	d901      	bls.n	80215c6 <HAL_RCCEx_PeriphCLKConfig+0x122>
      {
        return HAL_TIMEOUT;
 80215c2:	2303      	movs	r3, #3
 80215c4:	e357      	b.n	8021c76 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 80215c6:	4b2c      	ldr	r3, [pc, #176]	; (8021678 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80215c8:	681b      	ldr	r3, [r3, #0]
 80215ca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80215ce:	2b00      	cmp	r3, #0
 80215d0:	d0f0      	beq.n	80215b4 <HAL_RCCEx_PeriphCLKConfig+0x110>
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80215d2:	4b28      	ldr	r3, [pc, #160]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80215d4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80215d6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80215da:	613b      	str	r3, [r7, #16]

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80215dc:	693b      	ldr	r3, [r7, #16]
 80215de:	2b00      	cmp	r3, #0
 80215e0:	d035      	beq.n	802164e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 80215e2:	687b      	ldr	r3, [r7, #4]
 80215e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80215e6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80215ea:	693a      	ldr	r2, [r7, #16]
 80215ec:	429a      	cmp	r2, r3
 80215ee:	d02e      	beq.n	802164e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80215f0:	4b20      	ldr	r3, [pc, #128]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80215f2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80215f4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80215f8:	613b      	str	r3, [r7, #16]

      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 80215fa:	4b1e      	ldr	r3, [pc, #120]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80215fc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80215fe:	4a1d      	ldr	r2, [pc, #116]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021600:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8021604:	6713      	str	r3, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8021606:	4b1b      	ldr	r3, [pc, #108]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021608:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802160a:	4a1a      	ldr	r2, [pc, #104]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 802160c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8021610:	6713      	str	r3, [r2, #112]	; 0x70

      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg0;
 8021612:	4a18      	ldr	r2, [pc, #96]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021614:	693b      	ldr	r3, [r7, #16]
 8021616:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8021618:	4b16      	ldr	r3, [pc, #88]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 802161a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802161c:	f003 0301 	and.w	r3, r3, #1
 8021620:	2b01      	cmp	r3, #1
 8021622:	d114      	bne.n	802164e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8021624:	f7fe fef4 	bl	8020410 <HAL_GetTick>
 8021628:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 802162a:	e00a      	b.n	8021642 <HAL_RCCEx_PeriphCLKConfig+0x19e>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 802162c:	f7fe fef0 	bl	8020410 <HAL_GetTick>
 8021630:	4602      	mov	r2, r0
 8021632:	697b      	ldr	r3, [r7, #20]
 8021634:	1ad3      	subs	r3, r2, r3
 8021636:	f241 3288 	movw	r2, #5000	; 0x1388
 802163a:	4293      	cmp	r3, r2
 802163c:	d901      	bls.n	8021642 <HAL_RCCEx_PeriphCLKConfig+0x19e>
          {
            return HAL_TIMEOUT;
 802163e:	2303      	movs	r3, #3
 8021640:	e319      	b.n	8021c76 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8021642:	4b0c      	ldr	r3, [pc, #48]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021644:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021646:	f003 0302 	and.w	r3, r3, #2
 802164a:	2b00      	cmp	r3, #0
 802164c:	d0ee      	beq.n	802162c <HAL_RCCEx_PeriphCLKConfig+0x188>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 802164e:	687b      	ldr	r3, [r7, #4]
 8021650:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8021652:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8021656:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 802165a:	d111      	bne.n	8021680 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 802165c:	4b05      	ldr	r3, [pc, #20]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 802165e:	689b      	ldr	r3, [r3, #8]
 8021660:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8021664:	687b      	ldr	r3, [r7, #4]
 8021666:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8021668:	4b04      	ldr	r3, [pc, #16]	; (802167c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 802166a:	400b      	ands	r3, r1
 802166c:	4901      	ldr	r1, [pc, #4]	; (8021674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 802166e:	4313      	orrs	r3, r2
 8021670:	608b      	str	r3, [r1, #8]
 8021672:	e00b      	b.n	802168c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8021674:	40023800 	.word	0x40023800
 8021678:	40007000 	.word	0x40007000
 802167c:	0ffffcff 	.word	0x0ffffcff
 8021680:	4bb1      	ldr	r3, [pc, #708]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021682:	689b      	ldr	r3, [r3, #8]
 8021684:	4ab0      	ldr	r2, [pc, #704]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021686:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 802168a:	6093      	str	r3, [r2, #8]
 802168c:	4bae      	ldr	r3, [pc, #696]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802168e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8021690:	687b      	ldr	r3, [r7, #4]
 8021692:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8021694:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8021698:	49ab      	ldr	r1, [pc, #684]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802169a:	4313      	orrs	r3, r2
 802169c:	670b      	str	r3, [r1, #112]	; 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 802169e:	687b      	ldr	r3, [r7, #4]
 80216a0:	681b      	ldr	r3, [r3, #0]
 80216a2:	f003 0310 	and.w	r3, r3, #16
 80216a6:	2b00      	cmp	r3, #0
 80216a8:	d010      	beq.n	80216cc <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80216aa:	4ba7      	ldr	r3, [pc, #668]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80216ac:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80216b0:	4aa5      	ldr	r2, [pc, #660]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80216b2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80216b6:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 80216ba:	4ba3      	ldr	r3, [pc, #652]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80216bc:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80216c0:	687b      	ldr	r3, [r7, #4]
 80216c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80216c4:	49a0      	ldr	r1, [pc, #640]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80216c6:	4313      	orrs	r3, r2
 80216c8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 80216cc:	687b      	ldr	r3, [r7, #4]
 80216ce:	681b      	ldr	r3, [r3, #0]
 80216d0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80216d4:	2b00      	cmp	r3, #0
 80216d6:	d00a      	beq.n	80216ee <HAL_RCCEx_PeriphCLKConfig+0x24a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 80216d8:	4b9b      	ldr	r3, [pc, #620]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80216da:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80216de:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80216e2:	687b      	ldr	r3, [r7, #4]
 80216e4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80216e6:	4998      	ldr	r1, [pc, #608]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80216e8:	4313      	orrs	r3, r2
 80216ea:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 80216ee:	687b      	ldr	r3, [r7, #4]
 80216f0:	681b      	ldr	r3, [r3, #0]
 80216f2:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80216f6:	2b00      	cmp	r3, #0
 80216f8:	d00a      	beq.n	8021710 <HAL_RCCEx_PeriphCLKConfig+0x26c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 80216fa:	4b93      	ldr	r3, [pc, #588]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80216fc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021700:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8021704:	687b      	ldr	r3, [r7, #4]
 8021706:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8021708:	498f      	ldr	r1, [pc, #572]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802170a:	4313      	orrs	r3, r2
 802170c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8021710:	687b      	ldr	r3, [r7, #4]
 8021712:	681b      	ldr	r3, [r3, #0]
 8021714:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8021718:	2b00      	cmp	r3, #0
 802171a:	d00a      	beq.n	8021732 <HAL_RCCEx_PeriphCLKConfig+0x28e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 802171c:	4b8a      	ldr	r3, [pc, #552]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802171e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021722:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8021726:	687b      	ldr	r3, [r7, #4]
 8021728:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802172a:	4987      	ldr	r1, [pc, #540]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802172c:	4313      	orrs	r3, r2
 802172e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8021732:	687b      	ldr	r3, [r7, #4]
 8021734:	681b      	ldr	r3, [r3, #0]
 8021736:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 802173a:	2b00      	cmp	r3, #0
 802173c:	d00a      	beq.n	8021754 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 802173e:	4b82      	ldr	r3, [pc, #520]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021740:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021744:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8021748:	687b      	ldr	r3, [r7, #4]
 802174a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802174c:	497e      	ldr	r1, [pc, #504]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802174e:	4313      	orrs	r3, r2
 8021750:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8021754:	687b      	ldr	r3, [r7, #4]
 8021756:	681b      	ldr	r3, [r3, #0]
 8021758:	f003 0340 	and.w	r3, r3, #64	; 0x40
 802175c:	2b00      	cmp	r3, #0
 802175e:	d00a      	beq.n	8021776 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8021760:	4b79      	ldr	r3, [pc, #484]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021762:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021766:	f023 0203 	bic.w	r2, r3, #3
 802176a:	687b      	ldr	r3, [r7, #4]
 802176c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 802176e:	4976      	ldr	r1, [pc, #472]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021770:	4313      	orrs	r3, r2
 8021772:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8021776:	687b      	ldr	r3, [r7, #4]
 8021778:	681b      	ldr	r3, [r3, #0]
 802177a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 802177e:	2b00      	cmp	r3, #0
 8021780:	d00a      	beq.n	8021798 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8021782:	4b71      	ldr	r3, [pc, #452]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021784:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021788:	f023 020c 	bic.w	r2, r3, #12
 802178c:	687b      	ldr	r3, [r7, #4]
 802178e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8021790:	496d      	ldr	r1, [pc, #436]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021792:	4313      	orrs	r3, r2
 8021794:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8021798:	687b      	ldr	r3, [r7, #4]
 802179a:	681b      	ldr	r3, [r3, #0]
 802179c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80217a0:	2b00      	cmp	r3, #0
 80217a2:	d00a      	beq.n	80217ba <HAL_RCCEx_PeriphCLKConfig+0x316>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 80217a4:	4b68      	ldr	r3, [pc, #416]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80217a6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80217aa:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 80217ae:	687b      	ldr	r3, [r7, #4]
 80217b0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80217b2:	4965      	ldr	r1, [pc, #404]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80217b4:	4313      	orrs	r3, r2
 80217b6:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 80217ba:	687b      	ldr	r3, [r7, #4]
 80217bc:	681b      	ldr	r3, [r3, #0]
 80217be:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80217c2:	2b00      	cmp	r3, #0
 80217c4:	d00a      	beq.n	80217dc <HAL_RCCEx_PeriphCLKConfig+0x338>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 80217c6:	4b60      	ldr	r3, [pc, #384]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80217c8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80217cc:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 80217d0:	687b      	ldr	r3, [r7, #4]
 80217d2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80217d4:	495c      	ldr	r1, [pc, #368]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80217d6:	4313      	orrs	r3, r2
 80217d8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 80217dc:	687b      	ldr	r3, [r7, #4]
 80217de:	681b      	ldr	r3, [r3, #0]
 80217e0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80217e4:	2b00      	cmp	r3, #0
 80217e6:	d00a      	beq.n	80217fe <HAL_RCCEx_PeriphCLKConfig+0x35a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 80217e8:	4b57      	ldr	r3, [pc, #348]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80217ea:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80217ee:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80217f2:	687b      	ldr	r3, [r7, #4]
 80217f4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80217f6:	4954      	ldr	r1, [pc, #336]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80217f8:	4313      	orrs	r3, r2
 80217fa:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 80217fe:	687b      	ldr	r3, [r7, #4]
 8021800:	681b      	ldr	r3, [r3, #0]
 8021802:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8021806:	2b00      	cmp	r3, #0
 8021808:	d00a      	beq.n	8021820 <HAL_RCCEx_PeriphCLKConfig+0x37c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 802180a:	4b4f      	ldr	r3, [pc, #316]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802180c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021810:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8021814:	687b      	ldr	r3, [r7, #4]
 8021816:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8021818:	494b      	ldr	r1, [pc, #300]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802181a:	4313      	orrs	r3, r2
 802181c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8021820:	687b      	ldr	r3, [r7, #4]
 8021822:	681b      	ldr	r3, [r3, #0]
 8021824:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8021828:	2b00      	cmp	r3, #0
 802182a:	d00a      	beq.n	8021842 <HAL_RCCEx_PeriphCLKConfig+0x39e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 802182c:	4b46      	ldr	r3, [pc, #280]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802182e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021832:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8021836:	687b      	ldr	r3, [r7, #4]
 8021838:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 802183a:	4943      	ldr	r1, [pc, #268]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802183c:	4313      	orrs	r3, r2
 802183e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8021842:	687b      	ldr	r3, [r7, #4]
 8021844:	681b      	ldr	r3, [r3, #0]
 8021846:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 802184a:	2b00      	cmp	r3, #0
 802184c:	d00a      	beq.n	8021864 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 802184e:	4b3e      	ldr	r3, [pc, #248]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021850:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021854:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8021858:	687b      	ldr	r3, [r7, #4]
 802185a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802185c:	493a      	ldr	r1, [pc, #232]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802185e:	4313      	orrs	r3, r2
 8021860:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8021864:	687b      	ldr	r3, [r7, #4]
 8021866:	681b      	ldr	r3, [r3, #0]
 8021868:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 802186c:	2b00      	cmp	r3, #0
 802186e:	d00a      	beq.n	8021886 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8021870:	4b35      	ldr	r3, [pc, #212]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021872:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021876:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 802187a:	687b      	ldr	r3, [r7, #4]
 802187c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 802187e:	4932      	ldr	r1, [pc, #200]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021880:	4313      	orrs	r3, r2
 8021882:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8021886:	687b      	ldr	r3, [r7, #4]
 8021888:	681b      	ldr	r3, [r3, #0]
 802188a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 802188e:	2b00      	cmp	r3, #0
 8021890:	d011      	beq.n	80218b6 <HAL_RCCEx_PeriphCLKConfig+0x412>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8021892:	4b2d      	ldr	r3, [pc, #180]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021894:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021898:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 802189c:	687b      	ldr	r3, [r7, #4]
 802189e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80218a0:	4929      	ldr	r1, [pc, #164]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80218a2:	4313      	orrs	r3, r2
 80218a4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
 80218a8:	687b      	ldr	r3, [r7, #4]
 80218aa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80218ac:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80218b0:	d101      	bne.n	80218b6 <HAL_RCCEx_PeriphCLKConfig+0x412>
    {
      pllsaiused = 1;
 80218b2:	2301      	movs	r3, #1
 80218b4:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 80218b6:	687b      	ldr	r3, [r7, #4]
 80218b8:	681b      	ldr	r3, [r3, #0]
 80218ba:	f003 0308 	and.w	r3, r3, #8
 80218be:	2b00      	cmp	r3, #0
 80218c0:	d001      	beq.n	80218c6 <HAL_RCCEx_PeriphCLKConfig+0x422>
  {
    pllsaiused = 1;
 80218c2:	2301      	movs	r3, #1
 80218c4:	61bb      	str	r3, [r7, #24]
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 80218c6:	687b      	ldr	r3, [r7, #4]
 80218c8:	681b      	ldr	r3, [r3, #0]
 80218ca:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80218ce:	2b00      	cmp	r3, #0
 80218d0:	d00a      	beq.n	80218e8 <HAL_RCCEx_PeriphCLKConfig+0x444>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 80218d2:	4b1d      	ldr	r3, [pc, #116]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80218d4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80218d8:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 80218dc:	687b      	ldr	r3, [r7, #4]
 80218de:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80218e0:	4919      	ldr	r1, [pc, #100]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80218e2:	4313      	orrs	r3, r2
 80218e4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 80218e8:	687b      	ldr	r3, [r7, #4]
 80218ea:	681b      	ldr	r3, [r3, #0]
 80218ec:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80218f0:	2b00      	cmp	r3, #0
 80218f2:	d00b      	beq.n	802190c <HAL_RCCEx_PeriphCLKConfig+0x468>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 80218f4:	4b14      	ldr	r3, [pc, #80]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80218f6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80218fa:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 80218fe:	687b      	ldr	r3, [r7, #4]
 8021900:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8021904:	4910      	ldr	r1, [pc, #64]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021906:	4313      	orrs	r3, r2
 8021908:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 802190c:	69fb      	ldr	r3, [r7, #28]
 802190e:	2b01      	cmp	r3, #1
 8021910:	d006      	beq.n	8021920 <HAL_RCCEx_PeriphCLKConfig+0x47c>
 8021912:	687b      	ldr	r3, [r7, #4]
 8021914:	681b      	ldr	r3, [r3, #0]
 8021916:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 802191a:	2b00      	cmp	r3, #0
 802191c:	f000 80d9 	beq.w	8021ad2 <HAL_RCCEx_PeriphCLKConfig+0x62e>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8021920:	4b09      	ldr	r3, [pc, #36]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021922:	681b      	ldr	r3, [r3, #0]
 8021924:	4a08      	ldr	r2, [pc, #32]	; (8021948 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021926:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 802192a:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 802192c:	f7fe fd70 	bl	8020410 <HAL_GetTick>
 8021930:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8021932:	e00b      	b.n	802194c <HAL_RCCEx_PeriphCLKConfig+0x4a8>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8021934:	f7fe fd6c 	bl	8020410 <HAL_GetTick>
 8021938:	4602      	mov	r2, r0
 802193a:	697b      	ldr	r3, [r7, #20]
 802193c:	1ad3      	subs	r3, r2, r3
 802193e:	2b64      	cmp	r3, #100	; 0x64
 8021940:	d904      	bls.n	802194c <HAL_RCCEx_PeriphCLKConfig+0x4a8>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8021942:	2303      	movs	r3, #3
 8021944:	e197      	b.n	8021c76 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8021946:	bf00      	nop
 8021948:	40023800 	.word	0x40023800
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 802194c:	4b6c      	ldr	r3, [pc, #432]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 802194e:	681b      	ldr	r3, [r3, #0]
 8021950:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8021954:	2b00      	cmp	r3, #0
 8021956:	d1ed      	bne.n	8021934 <HAL_RCCEx_PeriphCLKConfig+0x490>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8021958:	687b      	ldr	r3, [r7, #4]
 802195a:	681b      	ldr	r3, [r3, #0]
 802195c:	f003 0301 	and.w	r3, r3, #1
 8021960:	2b00      	cmp	r3, #0
 8021962:	d021      	beq.n	80219a8 <HAL_RCCEx_PeriphCLKConfig+0x504>
 8021964:	687b      	ldr	r3, [r7, #4]
 8021966:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8021968:	2b00      	cmp	r3, #0
 802196a:	d11d      	bne.n	80219a8 <HAL_RCCEx_PeriphCLKConfig+0x504>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 802196c:	4b64      	ldr	r3, [pc, #400]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 802196e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021972:	0c1b      	lsrs	r3, r3, #16
 8021974:	f003 0303 	and.w	r3, r3, #3
 8021978:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 802197a:	4b61      	ldr	r3, [pc, #388]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 802197c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021980:	0e1b      	lsrs	r3, r3, #24
 8021982:	f003 030f 	and.w	r3, r3, #15
 8021986:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8021988:	687b      	ldr	r3, [r7, #4]
 802198a:	685b      	ldr	r3, [r3, #4]
 802198c:	019a      	lsls	r2, r3, #6
 802198e:	693b      	ldr	r3, [r7, #16]
 8021990:	041b      	lsls	r3, r3, #16
 8021992:	431a      	orrs	r2, r3
 8021994:	68fb      	ldr	r3, [r7, #12]
 8021996:	061b      	lsls	r3, r3, #24
 8021998:	431a      	orrs	r2, r3
 802199a:	687b      	ldr	r3, [r7, #4]
 802199c:	689b      	ldr	r3, [r3, #8]
 802199e:	071b      	lsls	r3, r3, #28
 80219a0:	4957      	ldr	r1, [pc, #348]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80219a2:	4313      	orrs	r3, r2
 80219a4:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 80219a8:	687b      	ldr	r3, [r7, #4]
 80219aa:	681b      	ldr	r3, [r3, #0]
 80219ac:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80219b0:	2b00      	cmp	r3, #0
 80219b2:	d004      	beq.n	80219be <HAL_RCCEx_PeriphCLKConfig+0x51a>
 80219b4:	687b      	ldr	r3, [r7, #4]
 80219b6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80219b8:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80219bc:	d00a      	beq.n	80219d4 <HAL_RCCEx_PeriphCLKConfig+0x530>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 80219be:	687b      	ldr	r3, [r7, #4]
 80219c0:	681b      	ldr	r3, [r3, #0]
 80219c2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 80219c6:	2b00      	cmp	r3, #0
 80219c8:	d02e      	beq.n	8021a28 <HAL_RCCEx_PeriphCLKConfig+0x584>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 80219ca:	687b      	ldr	r3, [r7, #4]
 80219cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80219ce:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80219d2:	d129      	bne.n	8021a28 <HAL_RCCEx_PeriphCLKConfig+0x584>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      /* Check for PLLI2S/DIVQ parameters */
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SP and PLLI2SR values from PLLI2SCFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 80219d4:	4b4a      	ldr	r3, [pc, #296]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80219d6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80219da:	0c1b      	lsrs	r3, r3, #16
 80219dc:	f003 0303 	and.w	r3, r3, #3
 80219e0:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80219e2:	4b47      	ldr	r3, [pc, #284]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80219e4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80219e8:	0f1b      	lsrs	r3, r3, #28
 80219ea:	f003 0307 	and.w	r3, r3, #7
 80219ee:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 80219f0:	687b      	ldr	r3, [r7, #4]
 80219f2:	685b      	ldr	r3, [r3, #4]
 80219f4:	019a      	lsls	r2, r3, #6
 80219f6:	693b      	ldr	r3, [r7, #16]
 80219f8:	041b      	lsls	r3, r3, #16
 80219fa:	431a      	orrs	r2, r3
 80219fc:	687b      	ldr	r3, [r7, #4]
 80219fe:	68db      	ldr	r3, [r3, #12]
 8021a00:	061b      	lsls	r3, r3, #24
 8021a02:	431a      	orrs	r2, r3
 8021a04:	68fb      	ldr	r3, [r7, #12]
 8021a06:	071b      	lsls	r3, r3, #28
 8021a08:	493d      	ldr	r1, [pc, #244]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021a0a:	4313      	orrs	r3, r2
 8021a0c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84

      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8021a10:	4b3b      	ldr	r3, [pc, #236]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021a12:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021a16:	f023 021f 	bic.w	r2, r3, #31
 8021a1a:	687b      	ldr	r3, [r7, #4]
 8021a1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021a1e:	3b01      	subs	r3, #1
 8021a20:	4937      	ldr	r1, [pc, #220]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021a22:	4313      	orrs	r3, r2
 8021a24:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8021a28:	687b      	ldr	r3, [r7, #4]
 8021a2a:	681b      	ldr	r3, [r3, #0]
 8021a2c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8021a30:	2b00      	cmp	r3, #0
 8021a32:	d01d      	beq.n	8021a70 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8021a34:	4b32      	ldr	r3, [pc, #200]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021a36:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021a3a:	0e1b      	lsrs	r3, r3, #24
 8021a3c:	f003 030f 	and.w	r3, r3, #15
 8021a40:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8021a42:	4b2f      	ldr	r3, [pc, #188]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021a44:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021a48:	0f1b      	lsrs	r3, r3, #28
 8021a4a:	f003 0307 	and.w	r3, r3, #7
 8021a4e:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8021a50:	687b      	ldr	r3, [r7, #4]
 8021a52:	685b      	ldr	r3, [r3, #4]
 8021a54:	019a      	lsls	r2, r3, #6
 8021a56:	687b      	ldr	r3, [r7, #4]
 8021a58:	691b      	ldr	r3, [r3, #16]
 8021a5a:	041b      	lsls	r3, r3, #16
 8021a5c:	431a      	orrs	r2, r3
 8021a5e:	693b      	ldr	r3, [r7, #16]
 8021a60:	061b      	lsls	r3, r3, #24
 8021a62:	431a      	orrs	r2, r3
 8021a64:	68fb      	ldr	r3, [r7, #12]
 8021a66:	071b      	lsls	r3, r3, #28
 8021a68:	4925      	ldr	r1, [pc, #148]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021a6a:	4313      	orrs	r3, r2
 8021a6c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8021a70:	687b      	ldr	r3, [r7, #4]
 8021a72:	681b      	ldr	r3, [r3, #0]
 8021a74:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8021a78:	2b00      	cmp	r3, #0
 8021a7a:	d011      	beq.n	8021aa0 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));

      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLI2SM) */
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8021a7c:	687b      	ldr	r3, [r7, #4]
 8021a7e:	685b      	ldr	r3, [r3, #4]
 8021a80:	019a      	lsls	r2, r3, #6
 8021a82:	687b      	ldr	r3, [r7, #4]
 8021a84:	691b      	ldr	r3, [r3, #16]
 8021a86:	041b      	lsls	r3, r3, #16
 8021a88:	431a      	orrs	r2, r3
 8021a8a:	687b      	ldr	r3, [r7, #4]
 8021a8c:	68db      	ldr	r3, [r3, #12]
 8021a8e:	061b      	lsls	r3, r3, #24
 8021a90:	431a      	orrs	r2, r3
 8021a92:	687b      	ldr	r3, [r7, #4]
 8021a94:	689b      	ldr	r3, [r3, #8]
 8021a96:	071b      	lsls	r3, r3, #28
 8021a98:	4919      	ldr	r1, [pc, #100]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021a9a:	4313      	orrs	r3, r2
 8021a9c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8021aa0:	4b17      	ldr	r3, [pc, #92]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021aa2:	681b      	ldr	r3, [r3, #0]
 8021aa4:	4a16      	ldr	r2, [pc, #88]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021aa6:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8021aaa:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021aac:	f7fe fcb0 	bl	8020410 <HAL_GetTick>
 8021ab0:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8021ab2:	e008      	b.n	8021ac6 <HAL_RCCEx_PeriphCLKConfig+0x622>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8021ab4:	f7fe fcac 	bl	8020410 <HAL_GetTick>
 8021ab8:	4602      	mov	r2, r0
 8021aba:	697b      	ldr	r3, [r7, #20]
 8021abc:	1ad3      	subs	r3, r2, r3
 8021abe:	2b64      	cmp	r3, #100	; 0x64
 8021ac0:	d901      	bls.n	8021ac6 <HAL_RCCEx_PeriphCLKConfig+0x622>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8021ac2:	2303      	movs	r3, #3
 8021ac4:	e0d7      	b.n	8021c76 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8021ac6:	4b0e      	ldr	r3, [pc, #56]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021ac8:	681b      	ldr	r3, [r3, #0]
 8021aca:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8021ace:	2b00      	cmp	r3, #0
 8021ad0:	d0f0      	beq.n	8021ab4 <HAL_RCCEx_PeriphCLKConfig+0x610>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8021ad2:	69bb      	ldr	r3, [r7, #24]
 8021ad4:	2b01      	cmp	r3, #1
 8021ad6:	f040 80cd 	bne.w	8021c74 <HAL_RCCEx_PeriphCLKConfig+0x7d0>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8021ada:	4b09      	ldr	r3, [pc, #36]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021adc:	681b      	ldr	r3, [r3, #0]
 8021ade:	4a08      	ldr	r2, [pc, #32]	; (8021b00 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021ae0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8021ae4:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021ae6:	f7fe fc93 	bl	8020410 <HAL_GetTick>
 8021aea:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8021aec:	e00a      	b.n	8021b04 <HAL_RCCEx_PeriphCLKConfig+0x660>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8021aee:	f7fe fc8f 	bl	8020410 <HAL_GetTick>
 8021af2:	4602      	mov	r2, r0
 8021af4:	697b      	ldr	r3, [r7, #20]
 8021af6:	1ad3      	subs	r3, r2, r3
 8021af8:	2b64      	cmp	r3, #100	; 0x64
 8021afa:	d903      	bls.n	8021b04 <HAL_RCCEx_PeriphCLKConfig+0x660>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8021afc:	2303      	movs	r3, #3
 8021afe:	e0ba      	b.n	8021c76 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8021b00:	40023800 	.word	0x40023800
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8021b04:	4b5e      	ldr	r3, [pc, #376]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021b06:	681b      	ldr	r3, [r3, #0]
 8021b08:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8021b0c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8021b10:	d0ed      	beq.n	8021aee <HAL_RCCEx_PeriphCLKConfig+0x64a>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8021b12:	687b      	ldr	r3, [r7, #4]
 8021b14:	681b      	ldr	r3, [r3, #0]
 8021b16:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8021b1a:	2b00      	cmp	r3, #0
 8021b1c:	d003      	beq.n	8021b26 <HAL_RCCEx_PeriphCLKConfig+0x682>
 8021b1e:	687b      	ldr	r3, [r7, #4]
 8021b20:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021b22:	2b00      	cmp	r3, #0
 8021b24:	d009      	beq.n	8021b3a <HAL_RCCEx_PeriphCLKConfig+0x696>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8021b26:	687b      	ldr	r3, [r7, #4]
 8021b28:	681b      	ldr	r3, [r3, #0]
 8021b2a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8021b2e:	2b00      	cmp	r3, #0
 8021b30:	d02e      	beq.n	8021b90 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8021b32:	687b      	ldr	r3, [r7, #4]
 8021b34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021b36:	2b00      	cmp	r3, #0
 8021b38:	d12a      	bne.n	8021b90 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8021b3a:	4b51      	ldr	r3, [pc, #324]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021b3c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021b40:	0c1b      	lsrs	r3, r3, #16
 8021b42:	f003 0303 	and.w	r3, r3, #3
 8021b46:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8021b48:	4b4d      	ldr	r3, [pc, #308]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021b4a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021b4e:	0f1b      	lsrs	r3, r3, #28
 8021b50:	f003 0307 	and.w	r3, r3, #7
 8021b54:	60fb      	str	r3, [r7, #12]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8021b56:	687b      	ldr	r3, [r7, #4]
 8021b58:	695b      	ldr	r3, [r3, #20]
 8021b5a:	019a      	lsls	r2, r3, #6
 8021b5c:	693b      	ldr	r3, [r7, #16]
 8021b5e:	041b      	lsls	r3, r3, #16
 8021b60:	431a      	orrs	r2, r3
 8021b62:	687b      	ldr	r3, [r7, #4]
 8021b64:	699b      	ldr	r3, [r3, #24]
 8021b66:	061b      	lsls	r3, r3, #24
 8021b68:	431a      	orrs	r2, r3
 8021b6a:	68fb      	ldr	r3, [r7, #12]
 8021b6c:	071b      	lsls	r3, r3, #28
 8021b6e:	4944      	ldr	r1, [pc, #272]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021b70:	4313      	orrs	r3, r2
 8021b72:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8021b76:	4b42      	ldr	r3, [pc, #264]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021b78:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021b7c:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8021b80:	687b      	ldr	r3, [r7, #4]
 8021b82:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021b84:	3b01      	subs	r3, #1
 8021b86:	021b      	lsls	r3, r3, #8
 8021b88:	493d      	ldr	r1, [pc, #244]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021b8a:	4313      	orrs	r3, r2
 8021b8c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8021b90:	687b      	ldr	r3, [r7, #4]
 8021b92:	681b      	ldr	r3, [r3, #0]
 8021b94:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8021b98:	2b00      	cmp	r3, #0
 8021b9a:	d022      	beq.n	8021be2 <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8021b9c:	687b      	ldr	r3, [r7, #4]
 8021b9e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8021ba0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8021ba4:	d11d      	bne.n	8021be2 <HAL_RCCEx_PeriphCLKConfig+0x73e>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8021ba6:	4b36      	ldr	r3, [pc, #216]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021ba8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021bac:	0e1b      	lsrs	r3, r3, #24
 8021bae:	f003 030f 	and.w	r3, r3, #15
 8021bb2:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8021bb4:	4b32      	ldr	r3, [pc, #200]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021bb6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021bba:	0f1b      	lsrs	r3, r3, #28
 8021bbc:	f003 0307 	and.w	r3, r3, #7
 8021bc0:	60fb      	str	r3, [r7, #12]

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8021bc2:	687b      	ldr	r3, [r7, #4]
 8021bc4:	695b      	ldr	r3, [r3, #20]
 8021bc6:	019a      	lsls	r2, r3, #6
 8021bc8:	687b      	ldr	r3, [r7, #4]
 8021bca:	6a1b      	ldr	r3, [r3, #32]
 8021bcc:	041b      	lsls	r3, r3, #16
 8021bce:	431a      	orrs	r2, r3
 8021bd0:	693b      	ldr	r3, [r7, #16]
 8021bd2:	061b      	lsls	r3, r3, #24
 8021bd4:	431a      	orrs	r2, r3
 8021bd6:	68fb      	ldr	r3, [r7, #12]
 8021bd8:	071b      	lsls	r3, r3, #28
 8021bda:	4929      	ldr	r1, [pc, #164]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021bdc:	4313      	orrs	r3, r2
 8021bde:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8021be2:	687b      	ldr	r3, [r7, #4]
 8021be4:	681b      	ldr	r3, [r3, #0]
 8021be6:	f003 0308 	and.w	r3, r3, #8
 8021bea:	2b00      	cmp	r3, #0
 8021bec:	d028      	beq.n	8021c40 <HAL_RCCEx_PeriphCLKConfig+0x79c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8021bee:	4b24      	ldr	r3, [pc, #144]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021bf0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021bf4:	0e1b      	lsrs	r3, r3, #24
 8021bf6:	f003 030f 	and.w	r3, r3, #15
 8021bfa:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8021bfc:	4b20      	ldr	r3, [pc, #128]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021bfe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021c02:	0c1b      	lsrs	r3, r3, #16
 8021c04:	f003 0303 	and.w	r3, r3, #3
 8021c08:	60fb      	str	r3, [r7, #12]

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8021c0a:	687b      	ldr	r3, [r7, #4]
 8021c0c:	695b      	ldr	r3, [r3, #20]
 8021c0e:	019a      	lsls	r2, r3, #6
 8021c10:	68fb      	ldr	r3, [r7, #12]
 8021c12:	041b      	lsls	r3, r3, #16
 8021c14:	431a      	orrs	r2, r3
 8021c16:	693b      	ldr	r3, [r7, #16]
 8021c18:	061b      	lsls	r3, r3, #24
 8021c1a:	431a      	orrs	r2, r3
 8021c1c:	687b      	ldr	r3, [r7, #4]
 8021c1e:	69db      	ldr	r3, [r3, #28]
 8021c20:	071b      	lsls	r3, r3, #28
 8021c22:	4917      	ldr	r1, [pc, #92]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021c24:	4313      	orrs	r3, r2
 8021c26:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8021c2a:	4b15      	ldr	r3, [pc, #84]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021c2c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021c30:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8021c34:	687b      	ldr	r3, [r7, #4]
 8021c36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021c38:	4911      	ldr	r1, [pc, #68]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021c3a:	4313      	orrs	r3, r2
 8021c3c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8021c40:	4b0f      	ldr	r3, [pc, #60]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021c42:	681b      	ldr	r3, [r3, #0]
 8021c44:	4a0e      	ldr	r2, [pc, #56]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021c46:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8021c4a:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021c4c:	f7fe fbe0 	bl	8020410 <HAL_GetTick>
 8021c50:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8021c52:	e008      	b.n	8021c66 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8021c54:	f7fe fbdc 	bl	8020410 <HAL_GetTick>
 8021c58:	4602      	mov	r2, r0
 8021c5a:	697b      	ldr	r3, [r7, #20]
 8021c5c:	1ad3      	subs	r3, r2, r3
 8021c5e:	2b64      	cmp	r3, #100	; 0x64
 8021c60:	d901      	bls.n	8021c66 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8021c62:	2303      	movs	r3, #3
 8021c64:	e007      	b.n	8021c76 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8021c66:	4b06      	ldr	r3, [pc, #24]	; (8021c80 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021c68:	681b      	ldr	r3, [r3, #0]
 8021c6a:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8021c6e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8021c72:	d1ef      	bne.n	8021c54 <HAL_RCCEx_PeriphCLKConfig+0x7b0>
      }
    }
  }
  return HAL_OK;
 8021c74:	2300      	movs	r3, #0
}
 8021c76:	4618      	mov	r0, r3
 8021c78:	3720      	adds	r7, #32
 8021c7a:	46bd      	mov	sp, r7
 8021c7c:	bd80      	pop	{r7, pc}
 8021c7e:	bf00      	nop
 8021c80:	40023800 	.word	0x40023800

08021c84 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8021c84:	b580      	push	{r7, lr}
 8021c86:	b082      	sub	sp, #8
 8021c88:	af00      	add	r7, sp, #0
 8021c8a:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8021c8c:	687b      	ldr	r3, [r7, #4]
 8021c8e:	2b00      	cmp	r3, #0
 8021c90:	d101      	bne.n	8021c96 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8021c92:	2301      	movs	r3, #1
 8021c94:	e040      	b.n	8021d18 <HAL_UART_Init+0x94>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8021c96:	687b      	ldr	r3, [r7, #4]
 8021c98:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8021c9a:	2b00      	cmp	r3, #0
 8021c9c:	d106      	bne.n	8021cac <HAL_UART_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8021c9e:	687b      	ldr	r3, [r7, #4]
 8021ca0:	2200      	movs	r2, #0
 8021ca2:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8021ca6:	6878      	ldr	r0, [r7, #4]
 8021ca8:	f7fd f95c 	bl	801ef64 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8021cac:	687b      	ldr	r3, [r7, #4]
 8021cae:	2224      	movs	r2, #36	; 0x24
 8021cb0:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 8021cb2:	687b      	ldr	r3, [r7, #4]
 8021cb4:	681b      	ldr	r3, [r3, #0]
 8021cb6:	681a      	ldr	r2, [r3, #0]
 8021cb8:	687b      	ldr	r3, [r7, #4]
 8021cba:	681b      	ldr	r3, [r3, #0]
 8021cbc:	f022 0201 	bic.w	r2, r2, #1
 8021cc0:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8021cc2:	6878      	ldr	r0, [r7, #4]
 8021cc4:	f000 fb9c 	bl	8022400 <UART_SetConfig>
 8021cc8:	4603      	mov	r3, r0
 8021cca:	2b01      	cmp	r3, #1
 8021ccc:	d101      	bne.n	8021cd2 <HAL_UART_Init+0x4e>
  {
    return HAL_ERROR;
 8021cce:	2301      	movs	r3, #1
 8021cd0:	e022      	b.n	8021d18 <HAL_UART_Init+0x94>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8021cd2:	687b      	ldr	r3, [r7, #4]
 8021cd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021cd6:	2b00      	cmp	r3, #0
 8021cd8:	d002      	beq.n	8021ce0 <HAL_UART_Init+0x5c>
  {
    UART_AdvFeatureConfig(huart);
 8021cda:	6878      	ldr	r0, [r7, #4]
 8021cdc:	f000 fdf2 	bl	80228c4 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8021ce0:	687b      	ldr	r3, [r7, #4]
 8021ce2:	681b      	ldr	r3, [r3, #0]
 8021ce4:	685a      	ldr	r2, [r3, #4]
 8021ce6:	687b      	ldr	r3, [r7, #4]
 8021ce8:	681b      	ldr	r3, [r3, #0]
 8021cea:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8021cee:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8021cf0:	687b      	ldr	r3, [r7, #4]
 8021cf2:	681b      	ldr	r3, [r3, #0]
 8021cf4:	689a      	ldr	r2, [r3, #8]
 8021cf6:	687b      	ldr	r3, [r7, #4]
 8021cf8:	681b      	ldr	r3, [r3, #0]
 8021cfa:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8021cfe:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 8021d00:	687b      	ldr	r3, [r7, #4]
 8021d02:	681b      	ldr	r3, [r3, #0]
 8021d04:	681a      	ldr	r2, [r3, #0]
 8021d06:	687b      	ldr	r3, [r7, #4]
 8021d08:	681b      	ldr	r3, [r3, #0]
 8021d0a:	f042 0201 	orr.w	r2, r2, #1
 8021d0e:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8021d10:	6878      	ldr	r0, [r7, #4]
 8021d12:	f000 fe79 	bl	8022a08 <UART_CheckIdleState>
 8021d16:	4603      	mov	r3, r0
}
 8021d18:	4618      	mov	r0, r3
 8021d1a:	3708      	adds	r7, #8
 8021d1c:	46bd      	mov	sp, r7
 8021d1e:	bd80      	pop	{r7, pc}

08021d20 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8021d20:	b580      	push	{r7, lr}
 8021d22:	b08a      	sub	sp, #40	; 0x28
 8021d24:	af02      	add	r7, sp, #8
 8021d26:	60f8      	str	r0, [r7, #12]
 8021d28:	60b9      	str	r1, [r7, #8]
 8021d2a:	603b      	str	r3, [r7, #0]
 8021d2c:	4613      	mov	r3, r2
 8021d2e:	80fb      	strh	r3, [r7, #6]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8021d30:	68fb      	ldr	r3, [r7, #12]
 8021d32:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8021d34:	2b20      	cmp	r3, #32
 8021d36:	f040 8081 	bne.w	8021e3c <HAL_UART_Transmit+0x11c>
  {
    if ((pData == NULL) || (Size == 0U))
 8021d3a:	68bb      	ldr	r3, [r7, #8]
 8021d3c:	2b00      	cmp	r3, #0
 8021d3e:	d002      	beq.n	8021d46 <HAL_UART_Transmit+0x26>
 8021d40:	88fb      	ldrh	r3, [r7, #6]
 8021d42:	2b00      	cmp	r3, #0
 8021d44:	d101      	bne.n	8021d4a <HAL_UART_Transmit+0x2a>
    {
      return  HAL_ERROR;
 8021d46:	2301      	movs	r3, #1
 8021d48:	e079      	b.n	8021e3e <HAL_UART_Transmit+0x11e>
    }

    __HAL_LOCK(huart);
 8021d4a:	68fb      	ldr	r3, [r7, #12]
 8021d4c:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8021d50:	2b01      	cmp	r3, #1
 8021d52:	d101      	bne.n	8021d58 <HAL_UART_Transmit+0x38>
 8021d54:	2302      	movs	r3, #2
 8021d56:	e072      	b.n	8021e3e <HAL_UART_Transmit+0x11e>
 8021d58:	68fb      	ldr	r3, [r7, #12]
 8021d5a:	2201      	movs	r2, #1
 8021d5c:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8021d60:	68fb      	ldr	r3, [r7, #12]
 8021d62:	2200      	movs	r2, #0
 8021d64:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8021d68:	68fb      	ldr	r3, [r7, #12]
 8021d6a:	2221      	movs	r2, #33	; 0x21
 8021d6c:	679a      	str	r2, [r3, #120]	; 0x78

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8021d6e:	f7fe fb4f 	bl	8020410 <HAL_GetTick>
 8021d72:	6178      	str	r0, [r7, #20]

    huart->TxXferSize  = Size;
 8021d74:	68fb      	ldr	r3, [r7, #12]
 8021d76:	88fa      	ldrh	r2, [r7, #6]
 8021d78:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
    huart->TxXferCount = Size;
 8021d7c:	68fb      	ldr	r3, [r7, #12]
 8021d7e:	88fa      	ldrh	r2, [r7, #6]
 8021d80:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8021d84:	68fb      	ldr	r3, [r7, #12]
 8021d86:	689b      	ldr	r3, [r3, #8]
 8021d88:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8021d8c:	d108      	bne.n	8021da0 <HAL_UART_Transmit+0x80>
 8021d8e:	68fb      	ldr	r3, [r7, #12]
 8021d90:	691b      	ldr	r3, [r3, #16]
 8021d92:	2b00      	cmp	r3, #0
 8021d94:	d104      	bne.n	8021da0 <HAL_UART_Transmit+0x80>
    {
      pdata8bits  = NULL;
 8021d96:	2300      	movs	r3, #0
 8021d98:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 8021d9a:	68bb      	ldr	r3, [r7, #8]
 8021d9c:	61bb      	str	r3, [r7, #24]
 8021d9e:	e003      	b.n	8021da8 <HAL_UART_Transmit+0x88>
    }
    else
    {
      pdata8bits  = pData;
 8021da0:	68bb      	ldr	r3, [r7, #8]
 8021da2:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8021da4:	2300      	movs	r3, #0
 8021da6:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 8021da8:	68fb      	ldr	r3, [r7, #12]
 8021daa:	2200      	movs	r2, #0
 8021dac:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    while (huart->TxXferCount > 0U)
 8021db0:	e02c      	b.n	8021e0c <HAL_UART_Transmit+0xec>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8021db2:	683b      	ldr	r3, [r7, #0]
 8021db4:	9300      	str	r3, [sp, #0]
 8021db6:	697b      	ldr	r3, [r7, #20]
 8021db8:	2200      	movs	r2, #0
 8021dba:	2180      	movs	r1, #128	; 0x80
 8021dbc:	68f8      	ldr	r0, [r7, #12]
 8021dbe:	f000 fe56 	bl	8022a6e <UART_WaitOnFlagUntilTimeout>
 8021dc2:	4603      	mov	r3, r0
 8021dc4:	2b00      	cmp	r3, #0
 8021dc6:	d001      	beq.n	8021dcc <HAL_UART_Transmit+0xac>
      {
        return HAL_TIMEOUT;
 8021dc8:	2303      	movs	r3, #3
 8021dca:	e038      	b.n	8021e3e <HAL_UART_Transmit+0x11e>
      }
      if (pdata8bits == NULL)
 8021dcc:	69fb      	ldr	r3, [r7, #28]
 8021dce:	2b00      	cmp	r3, #0
 8021dd0:	d10b      	bne.n	8021dea <HAL_UART_Transmit+0xca>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8021dd2:	69bb      	ldr	r3, [r7, #24]
 8021dd4:	881b      	ldrh	r3, [r3, #0]
 8021dd6:	461a      	mov	r2, r3
 8021dd8:	68fb      	ldr	r3, [r7, #12]
 8021dda:	681b      	ldr	r3, [r3, #0]
 8021ddc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8021de0:	629a      	str	r2, [r3, #40]	; 0x28
        pdata16bits++;
 8021de2:	69bb      	ldr	r3, [r7, #24]
 8021de4:	3302      	adds	r3, #2
 8021de6:	61bb      	str	r3, [r7, #24]
 8021de8:	e007      	b.n	8021dfa <HAL_UART_Transmit+0xda>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8021dea:	69fb      	ldr	r3, [r7, #28]
 8021dec:	781a      	ldrb	r2, [r3, #0]
 8021dee:	68fb      	ldr	r3, [r7, #12]
 8021df0:	681b      	ldr	r3, [r3, #0]
 8021df2:	629a      	str	r2, [r3, #40]	; 0x28
        pdata8bits++;
 8021df4:	69fb      	ldr	r3, [r7, #28]
 8021df6:	3301      	adds	r3, #1
 8021df8:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8021dfa:	68fb      	ldr	r3, [r7, #12]
 8021dfc:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8021e00:	b29b      	uxth	r3, r3
 8021e02:	3b01      	subs	r3, #1
 8021e04:	b29a      	uxth	r2, r3
 8021e06:	68fb      	ldr	r3, [r7, #12]
 8021e08:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
    while (huart->TxXferCount > 0U)
 8021e0c:	68fb      	ldr	r3, [r7, #12]
 8021e0e:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8021e12:	b29b      	uxth	r3, r3
 8021e14:	2b00      	cmp	r3, #0
 8021e16:	d1cc      	bne.n	8021db2 <HAL_UART_Transmit+0x92>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8021e18:	683b      	ldr	r3, [r7, #0]
 8021e1a:	9300      	str	r3, [sp, #0]
 8021e1c:	697b      	ldr	r3, [r7, #20]
 8021e1e:	2200      	movs	r2, #0
 8021e20:	2140      	movs	r1, #64	; 0x40
 8021e22:	68f8      	ldr	r0, [r7, #12]
 8021e24:	f000 fe23 	bl	8022a6e <UART_WaitOnFlagUntilTimeout>
 8021e28:	4603      	mov	r3, r0
 8021e2a:	2b00      	cmp	r3, #0
 8021e2c:	d001      	beq.n	8021e32 <HAL_UART_Transmit+0x112>
    {
      return HAL_TIMEOUT;
 8021e2e:	2303      	movs	r3, #3
 8021e30:	e005      	b.n	8021e3e <HAL_UART_Transmit+0x11e>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8021e32:	68fb      	ldr	r3, [r7, #12]
 8021e34:	2220      	movs	r2, #32
 8021e36:	679a      	str	r2, [r3, #120]	; 0x78

    return HAL_OK;
 8021e38:	2300      	movs	r3, #0
 8021e3a:	e000      	b.n	8021e3e <HAL_UART_Transmit+0x11e>
  }
  else
  {
    return HAL_BUSY;
 8021e3c:	2302      	movs	r3, #2
  }
}
 8021e3e:	4618      	mov	r0, r3
 8021e40:	3720      	adds	r7, #32
 8021e42:	46bd      	mov	sp, r7
 8021e44:	bd80      	pop	{r7, pc}

08021e46 <HAL_UART_Receive>:
  * @param Size    Amount of data elements (u8 or u16) to be received.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8021e46:	b580      	push	{r7, lr}
 8021e48:	b08a      	sub	sp, #40	; 0x28
 8021e4a:	af02      	add	r7, sp, #8
 8021e4c:	60f8      	str	r0, [r7, #12]
 8021e4e:	60b9      	str	r1, [r7, #8]
 8021e50:	603b      	str	r3, [r7, #0]
 8021e52:	4613      	mov	r3, r2
 8021e54:	80fb      	strh	r3, [r7, #6]
  uint16_t *pdata16bits;
  uint16_t uhMask;
  uint32_t tickstart;

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8021e56:	68fb      	ldr	r3, [r7, #12]
 8021e58:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8021e5a:	2b20      	cmp	r3, #32
 8021e5c:	f040 80be 	bne.w	8021fdc <HAL_UART_Receive+0x196>
  {
    if ((pData == NULL) || (Size == 0U))
 8021e60:	68bb      	ldr	r3, [r7, #8]
 8021e62:	2b00      	cmp	r3, #0
 8021e64:	d002      	beq.n	8021e6c <HAL_UART_Receive+0x26>
 8021e66:	88fb      	ldrh	r3, [r7, #6]
 8021e68:	2b00      	cmp	r3, #0
 8021e6a:	d101      	bne.n	8021e70 <HAL_UART_Receive+0x2a>
    {
      return  HAL_ERROR;
 8021e6c:	2301      	movs	r3, #1
 8021e6e:	e0b6      	b.n	8021fde <HAL_UART_Receive+0x198>
    }

    __HAL_LOCK(huart);
 8021e70:	68fb      	ldr	r3, [r7, #12]
 8021e72:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8021e76:	2b01      	cmp	r3, #1
 8021e78:	d101      	bne.n	8021e7e <HAL_UART_Receive+0x38>
 8021e7a:	2302      	movs	r3, #2
 8021e7c:	e0af      	b.n	8021fde <HAL_UART_Receive+0x198>
 8021e7e:	68fb      	ldr	r3, [r7, #12]
 8021e80:	2201      	movs	r2, #1
 8021e82:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8021e86:	68fb      	ldr	r3, [r7, #12]
 8021e88:	2200      	movs	r2, #0
 8021e8a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8021e8e:	68fb      	ldr	r3, [r7, #12]
 8021e90:	2222      	movs	r2, #34	; 0x22
 8021e92:	67da      	str	r2, [r3, #124]	; 0x7c
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8021e94:	68fb      	ldr	r3, [r7, #12]
 8021e96:	2200      	movs	r2, #0
 8021e98:	661a      	str	r2, [r3, #96]	; 0x60

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8021e9a:	f7fe fab9 	bl	8020410 <HAL_GetTick>
 8021e9e:	6178      	str	r0, [r7, #20]

    huart->RxXferSize  = Size;
 8021ea0:	68fb      	ldr	r3, [r7, #12]
 8021ea2:	88fa      	ldrh	r2, [r7, #6]
 8021ea4:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
    huart->RxXferCount = Size;
 8021ea8:	68fb      	ldr	r3, [r7, #12]
 8021eaa:	88fa      	ldrh	r2, [r7, #6]
 8021eac:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    /* Computation of UART mask to apply to RDR register */
    UART_MASK_COMPUTATION(huart);
 8021eb0:	68fb      	ldr	r3, [r7, #12]
 8021eb2:	689b      	ldr	r3, [r3, #8]
 8021eb4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8021eb8:	d10e      	bne.n	8021ed8 <HAL_UART_Receive+0x92>
 8021eba:	68fb      	ldr	r3, [r7, #12]
 8021ebc:	691b      	ldr	r3, [r3, #16]
 8021ebe:	2b00      	cmp	r3, #0
 8021ec0:	d105      	bne.n	8021ece <HAL_UART_Receive+0x88>
 8021ec2:	68fb      	ldr	r3, [r7, #12]
 8021ec4:	f240 12ff 	movw	r2, #511	; 0x1ff
 8021ec8:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8021ecc:	e02d      	b.n	8021f2a <HAL_UART_Receive+0xe4>
 8021ece:	68fb      	ldr	r3, [r7, #12]
 8021ed0:	22ff      	movs	r2, #255	; 0xff
 8021ed2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8021ed6:	e028      	b.n	8021f2a <HAL_UART_Receive+0xe4>
 8021ed8:	68fb      	ldr	r3, [r7, #12]
 8021eda:	689b      	ldr	r3, [r3, #8]
 8021edc:	2b00      	cmp	r3, #0
 8021ede:	d10d      	bne.n	8021efc <HAL_UART_Receive+0xb6>
 8021ee0:	68fb      	ldr	r3, [r7, #12]
 8021ee2:	691b      	ldr	r3, [r3, #16]
 8021ee4:	2b00      	cmp	r3, #0
 8021ee6:	d104      	bne.n	8021ef2 <HAL_UART_Receive+0xac>
 8021ee8:	68fb      	ldr	r3, [r7, #12]
 8021eea:	22ff      	movs	r2, #255	; 0xff
 8021eec:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8021ef0:	e01b      	b.n	8021f2a <HAL_UART_Receive+0xe4>
 8021ef2:	68fb      	ldr	r3, [r7, #12]
 8021ef4:	227f      	movs	r2, #127	; 0x7f
 8021ef6:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8021efa:	e016      	b.n	8021f2a <HAL_UART_Receive+0xe4>
 8021efc:	68fb      	ldr	r3, [r7, #12]
 8021efe:	689b      	ldr	r3, [r3, #8]
 8021f00:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8021f04:	d10d      	bne.n	8021f22 <HAL_UART_Receive+0xdc>
 8021f06:	68fb      	ldr	r3, [r7, #12]
 8021f08:	691b      	ldr	r3, [r3, #16]
 8021f0a:	2b00      	cmp	r3, #0
 8021f0c:	d104      	bne.n	8021f18 <HAL_UART_Receive+0xd2>
 8021f0e:	68fb      	ldr	r3, [r7, #12]
 8021f10:	227f      	movs	r2, #127	; 0x7f
 8021f12:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8021f16:	e008      	b.n	8021f2a <HAL_UART_Receive+0xe4>
 8021f18:	68fb      	ldr	r3, [r7, #12]
 8021f1a:	223f      	movs	r2, #63	; 0x3f
 8021f1c:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8021f20:	e003      	b.n	8021f2a <HAL_UART_Receive+0xe4>
 8021f22:	68fb      	ldr	r3, [r7, #12]
 8021f24:	2200      	movs	r2, #0
 8021f26:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
    uhMask = huart->Mask;
 8021f2a:	68fb      	ldr	r3, [r7, #12]
 8021f2c:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8021f30:	827b      	strh	r3, [r7, #18]

    /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8021f32:	68fb      	ldr	r3, [r7, #12]
 8021f34:	689b      	ldr	r3, [r3, #8]
 8021f36:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8021f3a:	d108      	bne.n	8021f4e <HAL_UART_Receive+0x108>
 8021f3c:	68fb      	ldr	r3, [r7, #12]
 8021f3e:	691b      	ldr	r3, [r3, #16]
 8021f40:	2b00      	cmp	r3, #0
 8021f42:	d104      	bne.n	8021f4e <HAL_UART_Receive+0x108>
    {
      pdata8bits  = NULL;
 8021f44:	2300      	movs	r3, #0
 8021f46:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 8021f48:	68bb      	ldr	r3, [r7, #8]
 8021f4a:	61bb      	str	r3, [r7, #24]
 8021f4c:	e003      	b.n	8021f56 <HAL_UART_Receive+0x110>
    }
    else
    {
      pdata8bits  = pData;
 8021f4e:	68bb      	ldr	r3, [r7, #8]
 8021f50:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8021f52:	2300      	movs	r3, #0
 8021f54:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 8021f56:	68fb      	ldr	r3, [r7, #12]
 8021f58:	2200      	movs	r2, #0
 8021f5a:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* as long as data have to be received */
    while (huart->RxXferCount > 0U)
 8021f5e:	e032      	b.n	8021fc6 <HAL_UART_Receive+0x180>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 8021f60:	683b      	ldr	r3, [r7, #0]
 8021f62:	9300      	str	r3, [sp, #0]
 8021f64:	697b      	ldr	r3, [r7, #20]
 8021f66:	2200      	movs	r2, #0
 8021f68:	2120      	movs	r1, #32
 8021f6a:	68f8      	ldr	r0, [r7, #12]
 8021f6c:	f000 fd7f 	bl	8022a6e <UART_WaitOnFlagUntilTimeout>
 8021f70:	4603      	mov	r3, r0
 8021f72:	2b00      	cmp	r3, #0
 8021f74:	d001      	beq.n	8021f7a <HAL_UART_Receive+0x134>
      {
        return HAL_TIMEOUT;
 8021f76:	2303      	movs	r3, #3
 8021f78:	e031      	b.n	8021fde <HAL_UART_Receive+0x198>
      }
      if (pdata8bits == NULL)
 8021f7a:	69fb      	ldr	r3, [r7, #28]
 8021f7c:	2b00      	cmp	r3, #0
 8021f7e:	d10c      	bne.n	8021f9a <HAL_UART_Receive+0x154>
      {
        *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 8021f80:	68fb      	ldr	r3, [r7, #12]
 8021f82:	681b      	ldr	r3, [r3, #0]
 8021f84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021f86:	b29a      	uxth	r2, r3
 8021f88:	8a7b      	ldrh	r3, [r7, #18]
 8021f8a:	4013      	ands	r3, r2
 8021f8c:	b29a      	uxth	r2, r3
 8021f8e:	69bb      	ldr	r3, [r7, #24]
 8021f90:	801a      	strh	r2, [r3, #0]
        pdata16bits++;
 8021f92:	69bb      	ldr	r3, [r7, #24]
 8021f94:	3302      	adds	r3, #2
 8021f96:	61bb      	str	r3, [r7, #24]
 8021f98:	e00c      	b.n	8021fb4 <HAL_UART_Receive+0x16e>
      }
      else
      {
        *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 8021f9a:	68fb      	ldr	r3, [r7, #12]
 8021f9c:	681b      	ldr	r3, [r3, #0]
 8021f9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021fa0:	b2da      	uxtb	r2, r3
 8021fa2:	8a7b      	ldrh	r3, [r7, #18]
 8021fa4:	b2db      	uxtb	r3, r3
 8021fa6:	4013      	ands	r3, r2
 8021fa8:	b2da      	uxtb	r2, r3
 8021faa:	69fb      	ldr	r3, [r7, #28]
 8021fac:	701a      	strb	r2, [r3, #0]
        pdata8bits++;
 8021fae:	69fb      	ldr	r3, [r7, #28]
 8021fb0:	3301      	adds	r3, #1
 8021fb2:	61fb      	str	r3, [r7, #28]
      }
      huart->RxXferCount--;
 8021fb4:	68fb      	ldr	r3, [r7, #12]
 8021fb6:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8021fba:	b29b      	uxth	r3, r3
 8021fbc:	3b01      	subs	r3, #1
 8021fbe:	b29a      	uxth	r2, r3
 8021fc0:	68fb      	ldr	r3, [r7, #12]
 8021fc2:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
    while (huart->RxXferCount > 0U)
 8021fc6:	68fb      	ldr	r3, [r7, #12]
 8021fc8:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8021fcc:	b29b      	uxth	r3, r3
 8021fce:	2b00      	cmp	r3, #0
 8021fd0:	d1c6      	bne.n	8021f60 <HAL_UART_Receive+0x11a>
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 8021fd2:	68fb      	ldr	r3, [r7, #12]
 8021fd4:	2220      	movs	r2, #32
 8021fd6:	67da      	str	r2, [r3, #124]	; 0x7c

    return HAL_OK;
 8021fd8:	2300      	movs	r3, #0
 8021fda:	e000      	b.n	8021fde <HAL_UART_Receive+0x198>
  }
  else
  {
    return HAL_BUSY;
 8021fdc:	2302      	movs	r3, #2
  }
}
 8021fde:	4618      	mov	r0, r3
 8021fe0:	3720      	adds	r7, #32
 8021fe2:	46bd      	mov	sp, r7
 8021fe4:	bd80      	pop	{r7, pc}
	...

08021fe8 <HAL_UART_IRQHandler>:
  * @brief Handle UART interrupt request.
  * @param huart UART handle.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 8021fe8:	b580      	push	{r7, lr}
 8021fea:	b088      	sub	sp, #32
 8021fec:	af00      	add	r7, sp, #0
 8021fee:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8021ff0:	687b      	ldr	r3, [r7, #4]
 8021ff2:	681b      	ldr	r3, [r3, #0]
 8021ff4:	69db      	ldr	r3, [r3, #28]
 8021ff6:	61fb      	str	r3, [r7, #28]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8021ff8:	687b      	ldr	r3, [r7, #4]
 8021ffa:	681b      	ldr	r3, [r3, #0]
 8021ffc:	681b      	ldr	r3, [r3, #0]
 8021ffe:	61bb      	str	r3, [r7, #24]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8022000:	687b      	ldr	r3, [r7, #4]
 8022002:	681b      	ldr	r3, [r3, #0]
 8022004:	689b      	ldr	r3, [r3, #8]
 8022006:	617b      	str	r3, [r7, #20]

  uint32_t errorflags;
  uint32_t errorcode;

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 8022008:	69fa      	ldr	r2, [r7, #28]
 802200a:	f640 030f 	movw	r3, #2063	; 0x80f
 802200e:	4013      	ands	r3, r2
 8022010:	613b      	str	r3, [r7, #16]
  if (errorflags == 0U)
 8022012:	693b      	ldr	r3, [r7, #16]
 8022014:	2b00      	cmp	r3, #0
 8022016:	d113      	bne.n	8022040 <HAL_UART_IRQHandler+0x58>
  {
    /* UART in mode Receiver ---------------------------------------------------*/
    if (((isrflags & USART_ISR_RXNE) != 0U)
 8022018:	69fb      	ldr	r3, [r7, #28]
 802201a:	f003 0320 	and.w	r3, r3, #32
 802201e:	2b00      	cmp	r3, #0
 8022020:	d00e      	beq.n	8022040 <HAL_UART_IRQHandler+0x58>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8022022:	69bb      	ldr	r3, [r7, #24]
 8022024:	f003 0320 	and.w	r3, r3, #32
 8022028:	2b00      	cmp	r3, #0
 802202a:	d009      	beq.n	8022040 <HAL_UART_IRQHandler+0x58>
    {
      if (huart->RxISR != NULL)
 802202c:	687b      	ldr	r3, [r7, #4]
 802202e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8022030:	2b00      	cmp	r3, #0
 8022032:	f000 81b9 	beq.w	80223a8 <HAL_UART_IRQHandler+0x3c0>
      {
        huart->RxISR(huart);
 8022036:	687b      	ldr	r3, [r7, #4]
 8022038:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802203a:	6878      	ldr	r0, [r7, #4]
 802203c:	4798      	blx	r3
      }
      return;
 802203e:	e1b3      	b.n	80223a8 <HAL_UART_IRQHandler+0x3c0>
    }
  }

  /* If some errors occur */
  if ((errorflags != 0U)
 8022040:	693b      	ldr	r3, [r7, #16]
 8022042:	2b00      	cmp	r3, #0
 8022044:	f000 80e3 	beq.w	802220e <HAL_UART_IRQHandler+0x226>
      && (((cr3its & USART_CR3_EIE) != 0U)
 8022048:	697b      	ldr	r3, [r7, #20]
 802204a:	f003 0301 	and.w	r3, r3, #1
 802204e:	2b00      	cmp	r3, #0
 8022050:	d105      	bne.n	802205e <HAL_UART_IRQHandler+0x76>
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 8022052:	69ba      	ldr	r2, [r7, #24]
 8022054:	4ba5      	ldr	r3, [pc, #660]	; (80222ec <HAL_UART_IRQHandler+0x304>)
 8022056:	4013      	ands	r3, r2
 8022058:	2b00      	cmp	r3, #0
 802205a:	f000 80d8 	beq.w	802220e <HAL_UART_IRQHandler+0x226>
  {
    /* UART parity error interrupt occurred -------------------------------------*/
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 802205e:	69fb      	ldr	r3, [r7, #28]
 8022060:	f003 0301 	and.w	r3, r3, #1
 8022064:	2b00      	cmp	r3, #0
 8022066:	d010      	beq.n	802208a <HAL_UART_IRQHandler+0xa2>
 8022068:	69bb      	ldr	r3, [r7, #24]
 802206a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 802206e:	2b00      	cmp	r3, #0
 8022070:	d00b      	beq.n	802208a <HAL_UART_IRQHandler+0xa2>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8022072:	687b      	ldr	r3, [r7, #4]
 8022074:	681b      	ldr	r3, [r3, #0]
 8022076:	2201      	movs	r2, #1
 8022078:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_PE;
 802207a:	687b      	ldr	r3, [r7, #4]
 802207c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8022080:	f043 0201 	orr.w	r2, r3, #1
 8022084:	687b      	ldr	r3, [r7, #4]
 8022086:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART frame error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 802208a:	69fb      	ldr	r3, [r7, #28]
 802208c:	f003 0302 	and.w	r3, r3, #2
 8022090:	2b00      	cmp	r3, #0
 8022092:	d010      	beq.n	80220b6 <HAL_UART_IRQHandler+0xce>
 8022094:	697b      	ldr	r3, [r7, #20]
 8022096:	f003 0301 	and.w	r3, r3, #1
 802209a:	2b00      	cmp	r3, #0
 802209c:	d00b      	beq.n	80220b6 <HAL_UART_IRQHandler+0xce>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 802209e:	687b      	ldr	r3, [r7, #4]
 80220a0:	681b      	ldr	r3, [r3, #0]
 80220a2:	2202      	movs	r2, #2
 80220a4:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_FE;
 80220a6:	687b      	ldr	r3, [r7, #4]
 80220a8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80220ac:	f043 0204 	orr.w	r2, r3, #4
 80220b0:	687b      	ldr	r3, [r7, #4]
 80220b2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART noise error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80220b6:	69fb      	ldr	r3, [r7, #28]
 80220b8:	f003 0304 	and.w	r3, r3, #4
 80220bc:	2b00      	cmp	r3, #0
 80220be:	d010      	beq.n	80220e2 <HAL_UART_IRQHandler+0xfa>
 80220c0:	697b      	ldr	r3, [r7, #20]
 80220c2:	f003 0301 	and.w	r3, r3, #1
 80220c6:	2b00      	cmp	r3, #0
 80220c8:	d00b      	beq.n	80220e2 <HAL_UART_IRQHandler+0xfa>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 80220ca:	687b      	ldr	r3, [r7, #4]
 80220cc:	681b      	ldr	r3, [r3, #0]
 80220ce:	2204      	movs	r2, #4
 80220d0:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_NE;
 80220d2:	687b      	ldr	r3, [r7, #4]
 80220d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80220d8:	f043 0202 	orr.w	r2, r3, #2
 80220dc:	687b      	ldr	r3, [r7, #4]
 80220de:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART Over-Run interrupt occurred -----------------------------------------*/
    if (((isrflags & USART_ISR_ORE) != 0U)
 80220e2:	69fb      	ldr	r3, [r7, #28]
 80220e4:	f003 0308 	and.w	r3, r3, #8
 80220e8:	2b00      	cmp	r3, #0
 80220ea:	d015      	beq.n	8022118 <HAL_UART_IRQHandler+0x130>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 80220ec:	69bb      	ldr	r3, [r7, #24]
 80220ee:	f003 0320 	and.w	r3, r3, #32
 80220f2:	2b00      	cmp	r3, #0
 80220f4:	d104      	bne.n	8022100 <HAL_UART_IRQHandler+0x118>
            ((cr3its & USART_CR3_EIE) != 0U)))
 80220f6:	697b      	ldr	r3, [r7, #20]
 80220f8:	f003 0301 	and.w	r3, r3, #1
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 80220fc:	2b00      	cmp	r3, #0
 80220fe:	d00b      	beq.n	8022118 <HAL_UART_IRQHandler+0x130>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8022100:	687b      	ldr	r3, [r7, #4]
 8022102:	681b      	ldr	r3, [r3, #0]
 8022104:	2208      	movs	r2, #8
 8022106:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8022108:	687b      	ldr	r3, [r7, #4]
 802210a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 802210e:	f043 0208 	orr.w	r2, r3, #8
 8022112:	687b      	ldr	r3, [r7, #4]
 8022114:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART Receiver Timeout interrupt occurred ---------------------------------*/
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 8022118:	69fb      	ldr	r3, [r7, #28]
 802211a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 802211e:	2b00      	cmp	r3, #0
 8022120:	d011      	beq.n	8022146 <HAL_UART_IRQHandler+0x15e>
 8022122:	69bb      	ldr	r3, [r7, #24]
 8022124:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8022128:	2b00      	cmp	r3, #0
 802212a:	d00c      	beq.n	8022146 <HAL_UART_IRQHandler+0x15e>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 802212c:	687b      	ldr	r3, [r7, #4]
 802212e:	681b      	ldr	r3, [r3, #0]
 8022130:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8022134:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 8022136:	687b      	ldr	r3, [r7, #4]
 8022138:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 802213c:	f043 0220 	orr.w	r2, r3, #32
 8022140:	687b      	ldr	r3, [r7, #4]
 8022142:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* Call UART Error Call back function if need be ----------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8022146:	687b      	ldr	r3, [r7, #4]
 8022148:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 802214c:	2b00      	cmp	r3, #0
 802214e:	f000 812d 	beq.w	80223ac <HAL_UART_IRQHandler+0x3c4>
    {
      /* UART in mode Receiver --------------------------------------------------*/
      if (((isrflags & USART_ISR_RXNE) != 0U)
 8022152:	69fb      	ldr	r3, [r7, #28]
 8022154:	f003 0320 	and.w	r3, r3, #32
 8022158:	2b00      	cmp	r3, #0
 802215a:	d00c      	beq.n	8022176 <HAL_UART_IRQHandler+0x18e>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 802215c:	69bb      	ldr	r3, [r7, #24]
 802215e:	f003 0320 	and.w	r3, r3, #32
 8022162:	2b00      	cmp	r3, #0
 8022164:	d007      	beq.n	8022176 <HAL_UART_IRQHandler+0x18e>
      {
        if (huart->RxISR != NULL)
 8022166:	687b      	ldr	r3, [r7, #4]
 8022168:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802216a:	2b00      	cmp	r3, #0
 802216c:	d003      	beq.n	8022176 <HAL_UART_IRQHandler+0x18e>
        {
          huart->RxISR(huart);
 802216e:	687b      	ldr	r3, [r7, #4]
 8022170:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8022172:	6878      	ldr	r0, [r7, #4]
 8022174:	4798      	blx	r3
      /* If Error is to be considered as blocking :
          - Receiver Timeout error in Reception
          - Overrun error in Reception
          - any error occurs in DMA mode reception
      */
      errorcode = huart->ErrorCode;
 8022176:	687b      	ldr	r3, [r7, #4]
 8022178:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 802217c:	60fb      	str	r3, [r7, #12]
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 802217e:	687b      	ldr	r3, [r7, #4]
 8022180:	681b      	ldr	r3, [r3, #0]
 8022182:	689b      	ldr	r3, [r3, #8]
 8022184:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8022188:	2b40      	cmp	r3, #64	; 0x40
 802218a:	d004      	beq.n	8022196 <HAL_UART_IRQHandler+0x1ae>
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 802218c:	68fb      	ldr	r3, [r7, #12]
 802218e:	f003 0328 	and.w	r3, r3, #40	; 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8022192:	2b00      	cmp	r3, #0
 8022194:	d031      	beq.n	80221fa <HAL_UART_IRQHandler+0x212>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 8022196:	6878      	ldr	r0, [r7, #4]
 8022198:	f000 fce5 	bl	8022b66 <UART_EndRxTransfer>

        /* Disable the UART DMA Rx request if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 802219c:	687b      	ldr	r3, [r7, #4]
 802219e:	681b      	ldr	r3, [r3, #0]
 80221a0:	689b      	ldr	r3, [r3, #8]
 80221a2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80221a6:	2b40      	cmp	r3, #64	; 0x40
 80221a8:	d123      	bne.n	80221f2 <HAL_UART_IRQHandler+0x20a>
        {
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80221aa:	687b      	ldr	r3, [r7, #4]
 80221ac:	681b      	ldr	r3, [r3, #0]
 80221ae:	689a      	ldr	r2, [r3, #8]
 80221b0:	687b      	ldr	r3, [r7, #4]
 80221b2:	681b      	ldr	r3, [r3, #0]
 80221b4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80221b8:	609a      	str	r2, [r3, #8]

          /* Abort the UART DMA Rx channel */
          if (huart->hdmarx != NULL)
 80221ba:	687b      	ldr	r3, [r7, #4]
 80221bc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80221be:	2b00      	cmp	r3, #0
 80221c0:	d013      	beq.n	80221ea <HAL_UART_IRQHandler+0x202>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 80221c2:	687b      	ldr	r3, [r7, #4]
 80221c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80221c6:	4a4a      	ldr	r2, [pc, #296]	; (80222f0 <HAL_UART_IRQHandler+0x308>)
 80221c8:	651a      	str	r2, [r3, #80]	; 0x50

            /* Abort DMA RX */
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 80221ca:	687b      	ldr	r3, [r7, #4]
 80221cc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80221ce:	4618      	mov	r0, r3
 80221d0:	f7fe facf 	bl	8020772 <HAL_DMA_Abort_IT>
 80221d4:	4603      	mov	r3, r0
 80221d6:	2b00      	cmp	r3, #0
 80221d8:	d017      	beq.n	802220a <HAL_UART_IRQHandler+0x222>
            {
              /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 80221da:	687b      	ldr	r3, [r7, #4]
 80221dc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80221de:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80221e0:	687a      	ldr	r2, [r7, #4]
 80221e2:	6f12      	ldr	r2, [r2, #112]	; 0x70
 80221e4:	4610      	mov	r0, r2
 80221e6:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80221e8:	e00f      	b.n	802220a <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 80221ea:	6878      	ldr	r0, [r7, #4]
 80221ec:	f000 f8f2 	bl	80223d4 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80221f0:	e00b      	b.n	802220a <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 80221f2:	6878      	ldr	r0, [r7, #4]
 80221f4:	f000 f8ee 	bl	80223d4 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80221f8:	e007      	b.n	802220a <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 80221fa:	6878      	ldr	r0, [r7, #4]
 80221fc:	f000 f8ea 	bl	80223d4 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8022200:	687b      	ldr	r3, [r7, #4]
 8022202:	2200      	movs	r2, #0
 8022204:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
      }
    }
    return;
 8022208:	e0d0      	b.n	80223ac <HAL_UART_IRQHandler+0x3c4>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 802220a:	bf00      	nop
    return;
 802220c:	e0ce      	b.n	80223ac <HAL_UART_IRQHandler+0x3c4>

  } /* End if some error occurs */

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : */
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 802220e:	687b      	ldr	r3, [r7, #4]
 8022210:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8022212:	2b01      	cmp	r3, #1
 8022214:	f040 80a7 	bne.w	8022366 <HAL_UART_IRQHandler+0x37e>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 8022218:	69fb      	ldr	r3, [r7, #28]
 802221a:	f003 0310 	and.w	r3, r3, #16
 802221e:	2b00      	cmp	r3, #0
 8022220:	f000 80a1 	beq.w	8022366 <HAL_UART_IRQHandler+0x37e>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 8022224:	69bb      	ldr	r3, [r7, #24]
 8022226:	f003 0310 	and.w	r3, r3, #16
 802222a:	2b00      	cmp	r3, #0
 802222c:	f000 809b 	beq.w	8022366 <HAL_UART_IRQHandler+0x37e>
  {
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8022230:	687b      	ldr	r3, [r7, #4]
 8022232:	681b      	ldr	r3, [r3, #0]
 8022234:	2210      	movs	r2, #16
 8022236:	621a      	str	r2, [r3, #32]

    /* Check if DMA mode is enabled in UART */
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8022238:	687b      	ldr	r3, [r7, #4]
 802223a:	681b      	ldr	r3, [r3, #0]
 802223c:	689b      	ldr	r3, [r3, #8]
 802223e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8022242:	2b40      	cmp	r3, #64	; 0x40
 8022244:	d156      	bne.n	80222f4 <HAL_UART_IRQHandler+0x30c>
    {
      /* DMA mode enabled */
      /* Check received length : If all expected data are received, do nothing,
         (DMA cplt callback will be called).
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8022246:	687b      	ldr	r3, [r7, #4]
 8022248:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802224a:	681b      	ldr	r3, [r3, #0]
 802224c:	685b      	ldr	r3, [r3, #4]
 802224e:	813b      	strh	r3, [r7, #8]
      if ((nb_remaining_rx_data > 0U)
 8022250:	893b      	ldrh	r3, [r7, #8]
 8022252:	2b00      	cmp	r3, #0
 8022254:	f000 80ac 	beq.w	80223b0 <HAL_UART_IRQHandler+0x3c8>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8022258:	687b      	ldr	r3, [r7, #4]
 802225a:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 802225e:	893a      	ldrh	r2, [r7, #8]
 8022260:	429a      	cmp	r2, r3
 8022262:	f080 80a5 	bcs.w	80223b0 <HAL_UART_IRQHandler+0x3c8>
      {
        /* Reception is not complete */
        huart->RxXferCount = nb_remaining_rx_data;
 8022266:	687b      	ldr	r3, [r7, #4]
 8022268:	893a      	ldrh	r2, [r7, #8]
 802226a:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

        /* In Normal mode, end DMA xfer and HAL UART Rx process*/
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 802226e:	687b      	ldr	r3, [r7, #4]
 8022270:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8022272:	69db      	ldr	r3, [r3, #28]
 8022274:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8022278:	d02a      	beq.n	80222d0 <HAL_UART_IRQHandler+0x2e8>
        {
          /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 802227a:	687b      	ldr	r3, [r7, #4]
 802227c:	681b      	ldr	r3, [r3, #0]
 802227e:	681a      	ldr	r2, [r3, #0]
 8022280:	687b      	ldr	r3, [r7, #4]
 8022282:	681b      	ldr	r3, [r3, #0]
 8022284:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8022288:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802228a:	687b      	ldr	r3, [r7, #4]
 802228c:	681b      	ldr	r3, [r3, #0]
 802228e:	689a      	ldr	r2, [r3, #8]
 8022290:	687b      	ldr	r3, [r7, #4]
 8022292:	681b      	ldr	r3, [r3, #0]
 8022294:	f022 0201 	bic.w	r2, r2, #1
 8022298:	609a      	str	r2, [r3, #8]

          /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
             in the UART CR3 register */
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 802229a:	687b      	ldr	r3, [r7, #4]
 802229c:	681b      	ldr	r3, [r3, #0]
 802229e:	689a      	ldr	r2, [r3, #8]
 80222a0:	687b      	ldr	r3, [r7, #4]
 80222a2:	681b      	ldr	r3, [r3, #0]
 80222a4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80222a8:	609a      	str	r2, [r3, #8]

          /* At end of Rx process, restore huart->RxState to Ready */
          huart->RxState = HAL_UART_STATE_READY;
 80222aa:	687b      	ldr	r3, [r7, #4]
 80222ac:	2220      	movs	r2, #32
 80222ae:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80222b0:	687b      	ldr	r3, [r7, #4]
 80222b2:	2200      	movs	r2, #0
 80222b4:	661a      	str	r2, [r3, #96]	; 0x60

          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80222b6:	687b      	ldr	r3, [r7, #4]
 80222b8:	681b      	ldr	r3, [r3, #0]
 80222ba:	681a      	ldr	r2, [r3, #0]
 80222bc:	687b      	ldr	r3, [r7, #4]
 80222be:	681b      	ldr	r3, [r3, #0]
 80222c0:	f022 0210 	bic.w	r2, r2, #16
 80222c4:	601a      	str	r2, [r3, #0]

          /* Last bytes received, so no need as the abort is immediate */
          (void)HAL_DMA_Abort(huart->hdmarx);
 80222c6:	687b      	ldr	r3, [r7, #4]
 80222c8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80222ca:	4618      	mov	r0, r3
 80222cc:	f7fe f9e1 	bl	8020692 <HAL_DMA_Abort>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 80222d0:	687b      	ldr	r3, [r7, #4]
 80222d2:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 80222d6:	687b      	ldr	r3, [r7, #4]
 80222d8:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80222dc:	b29b      	uxth	r3, r3
 80222de:	1ad3      	subs	r3, r2, r3
 80222e0:	b29b      	uxth	r3, r3
 80222e2:	4619      	mov	r1, r3
 80222e4:	6878      	ldr	r0, [r7, #4]
 80222e6:	f000 f87f 	bl	80223e8 <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 80222ea:	e061      	b.n	80223b0 <HAL_UART_IRQHandler+0x3c8>
 80222ec:	04000120 	.word	0x04000120
 80222f0:	08022bc5 	.word	0x08022bc5
    else
    {
      /* DMA mode not enabled */
      /* Check received length : If all expected data are received, do nothing.
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 80222f4:	687b      	ldr	r3, [r7, #4]
 80222f6:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 80222fa:	687b      	ldr	r3, [r7, #4]
 80222fc:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8022300:	b29b      	uxth	r3, r3
 8022302:	1ad3      	subs	r3, r2, r3
 8022304:	817b      	strh	r3, [r7, #10]
      if ((huart->RxXferCount > 0U)
 8022306:	687b      	ldr	r3, [r7, #4]
 8022308:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 802230c:	b29b      	uxth	r3, r3
 802230e:	2b00      	cmp	r3, #0
 8022310:	d050      	beq.n	80223b4 <HAL_UART_IRQHandler+0x3cc>
          && (nb_rx_data > 0U))
 8022312:	897b      	ldrh	r3, [r7, #10]
 8022314:	2b00      	cmp	r3, #0
 8022316:	d04d      	beq.n	80223b4 <HAL_UART_IRQHandler+0x3cc>
      {
        /* Disable the UART Parity Error Interrupt and RXNE interrupts */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8022318:	687b      	ldr	r3, [r7, #4]
 802231a:	681b      	ldr	r3, [r3, #0]
 802231c:	681a      	ldr	r2, [r3, #0]
 802231e:	687b      	ldr	r3, [r7, #4]
 8022320:	681b      	ldr	r3, [r3, #0]
 8022322:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8022326:	601a      	str	r2, [r3, #0]

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8022328:	687b      	ldr	r3, [r7, #4]
 802232a:	681b      	ldr	r3, [r3, #0]
 802232c:	689a      	ldr	r2, [r3, #8]
 802232e:	687b      	ldr	r3, [r7, #4]
 8022330:	681b      	ldr	r3, [r3, #0]
 8022332:	f022 0201 	bic.w	r2, r2, #1
 8022336:	609a      	str	r2, [r3, #8]

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 8022338:	687b      	ldr	r3, [r7, #4]
 802233a:	2220      	movs	r2, #32
 802233c:	67da      	str	r2, [r3, #124]	; 0x7c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802233e:	687b      	ldr	r3, [r7, #4]
 8022340:	2200      	movs	r2, #0
 8022342:	661a      	str	r2, [r3, #96]	; 0x60

        /* Clear RxISR function pointer */
        huart->RxISR = NULL;
 8022344:	687b      	ldr	r3, [r7, #4]
 8022346:	2200      	movs	r2, #0
 8022348:	665a      	str	r2, [r3, #100]	; 0x64

        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 802234a:	687b      	ldr	r3, [r7, #4]
 802234c:	681b      	ldr	r3, [r3, #0]
 802234e:	681a      	ldr	r2, [r3, #0]
 8022350:	687b      	ldr	r3, [r7, #4]
 8022352:	681b      	ldr	r3, [r3, #0]
 8022354:	f022 0210 	bic.w	r2, r2, #16
 8022358:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxEventCallback(huart, nb_rx_data);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 802235a:	897b      	ldrh	r3, [r7, #10]
 802235c:	4619      	mov	r1, r3
 802235e:	6878      	ldr	r0, [r7, #4]
 8022360:	f000 f842 	bl	80223e8 <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 8022364:	e026      	b.n	80223b4 <HAL_UART_IRQHandler+0x3cc>
  }
#endif /* USART_CR3_WUFIE */
#endif /* USART_CR1_UESM */

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_ISR_TXE) != 0U)
 8022366:	69fb      	ldr	r3, [r7, #28]
 8022368:	f003 0380 	and.w	r3, r3, #128	; 0x80
 802236c:	2b00      	cmp	r3, #0
 802236e:	d00d      	beq.n	802238c <HAL_UART_IRQHandler+0x3a4>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 8022370:	69bb      	ldr	r3, [r7, #24]
 8022372:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8022376:	2b00      	cmp	r3, #0
 8022378:	d008      	beq.n	802238c <HAL_UART_IRQHandler+0x3a4>
  {
    if (huart->TxISR != NULL)
 802237a:	687b      	ldr	r3, [r7, #4]
 802237c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 802237e:	2b00      	cmp	r3, #0
 8022380:	d01a      	beq.n	80223b8 <HAL_UART_IRQHandler+0x3d0>
    {
      huart->TxISR(huart);
 8022382:	687b      	ldr	r3, [r7, #4]
 8022384:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8022386:	6878      	ldr	r0, [r7, #4]
 8022388:	4798      	blx	r3
    }
    return;
 802238a:	e015      	b.n	80223b8 <HAL_UART_IRQHandler+0x3d0>
  }

  /* UART in mode Transmitter (transmission end) -----------------------------*/
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 802238c:	69fb      	ldr	r3, [r7, #28]
 802238e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8022392:	2b00      	cmp	r3, #0
 8022394:	d011      	beq.n	80223ba <HAL_UART_IRQHandler+0x3d2>
 8022396:	69bb      	ldr	r3, [r7, #24]
 8022398:	f003 0340 	and.w	r3, r3, #64	; 0x40
 802239c:	2b00      	cmp	r3, #0
 802239e:	d00c      	beq.n	80223ba <HAL_UART_IRQHandler+0x3d2>
  {
    UART_EndTransmit_IT(huart);
 80223a0:	6878      	ldr	r0, [r7, #4]
 80223a2:	f000 fc25 	bl	8022bf0 <UART_EndTransmit_IT>
    return;
 80223a6:	e008      	b.n	80223ba <HAL_UART_IRQHandler+0x3d2>
      return;
 80223a8:	bf00      	nop
 80223aa:	e006      	b.n	80223ba <HAL_UART_IRQHandler+0x3d2>
    return;
 80223ac:	bf00      	nop
 80223ae:	e004      	b.n	80223ba <HAL_UART_IRQHandler+0x3d2>
      return;
 80223b0:	bf00      	nop
 80223b2:	e002      	b.n	80223ba <HAL_UART_IRQHandler+0x3d2>
      return;
 80223b4:	bf00      	nop
 80223b6:	e000      	b.n	80223ba <HAL_UART_IRQHandler+0x3d2>
    return;
 80223b8:	bf00      	nop
  }

}
 80223ba:	3720      	adds	r7, #32
 80223bc:	46bd      	mov	sp, r7
 80223be:	bd80      	pop	{r7, pc}

080223c0 <HAL_UART_TxCpltCallback>:
  * @brief Tx Transfer completed callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 80223c0:	b480      	push	{r7}
 80223c2:	b083      	sub	sp, #12
 80223c4:	af00      	add	r7, sp, #0
 80223c6:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_TxCpltCallback can be implemented in the user file.
   */
}
 80223c8:	bf00      	nop
 80223ca:	370c      	adds	r7, #12
 80223cc:	46bd      	mov	sp, r7
 80223ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80223d2:	4770      	bx	lr

080223d4 <HAL_UART_ErrorCallback>:
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 80223d4:	b480      	push	{r7}
 80223d6:	b083      	sub	sp, #12
 80223d8:	af00      	add	r7, sp, #0
 80223da:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_ErrorCallback can be implemented in the user file.
   */
}
 80223dc:	bf00      	nop
 80223de:	370c      	adds	r7, #12
 80223e0:	46bd      	mov	sp, r7
 80223e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80223e6:	4770      	bx	lr

080223e8 <HAL_UARTEx_RxEventCallback>:
  * @param  Size  Number of data available in application reception buffer (indicates a position in
  *               reception buffer until which, data are available)
  * @retval None
  */
__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 80223e8:	b480      	push	{r7}
 80223ea:	b083      	sub	sp, #12
 80223ec:	af00      	add	r7, sp, #0
 80223ee:	6078      	str	r0, [r7, #4]
 80223f0:	460b      	mov	r3, r1
 80223f2:	807b      	strh	r3, [r7, #2]
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 80223f4:	bf00      	nop
 80223f6:	370c      	adds	r7, #12
 80223f8:	46bd      	mov	sp, r7
 80223fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80223fe:	4770      	bx	lr

08022400 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8022400:	b580      	push	{r7, lr}
 8022402:	b088      	sub	sp, #32
 8022404:	af00      	add	r7, sp, #0
 8022406:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 8022408:	2300      	movs	r3, #0
 802240a:	77bb      	strb	r3, [r7, #30]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 802240c:	687b      	ldr	r3, [r7, #4]
 802240e:	689a      	ldr	r2, [r3, #8]
 8022410:	687b      	ldr	r3, [r7, #4]
 8022412:	691b      	ldr	r3, [r3, #16]
 8022414:	431a      	orrs	r2, r3
 8022416:	687b      	ldr	r3, [r7, #4]
 8022418:	695b      	ldr	r3, [r3, #20]
 802241a:	431a      	orrs	r2, r3
 802241c:	687b      	ldr	r3, [r7, #4]
 802241e:	69db      	ldr	r3, [r3, #28]
 8022420:	4313      	orrs	r3, r2
 8022422:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8022424:	687b      	ldr	r3, [r7, #4]
 8022426:	681b      	ldr	r3, [r3, #0]
 8022428:	681a      	ldr	r2, [r3, #0]
 802242a:	4ba7      	ldr	r3, [pc, #668]	; (80226c8 <UART_SetConfig+0x2c8>)
 802242c:	4013      	ands	r3, r2
 802242e:	687a      	ldr	r2, [r7, #4]
 8022430:	6812      	ldr	r2, [r2, #0]
 8022432:	6979      	ldr	r1, [r7, #20]
 8022434:	430b      	orrs	r3, r1
 8022436:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8022438:	687b      	ldr	r3, [r7, #4]
 802243a:	681b      	ldr	r3, [r3, #0]
 802243c:	685b      	ldr	r3, [r3, #4]
 802243e:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8022442:	687b      	ldr	r3, [r7, #4]
 8022444:	68da      	ldr	r2, [r3, #12]
 8022446:	687b      	ldr	r3, [r7, #4]
 8022448:	681b      	ldr	r3, [r3, #0]
 802244a:	430a      	orrs	r2, r1
 802244c:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 802244e:	687b      	ldr	r3, [r7, #4]
 8022450:	699b      	ldr	r3, [r3, #24]
 8022452:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 8022454:	687b      	ldr	r3, [r7, #4]
 8022456:	6a1b      	ldr	r3, [r3, #32]
 8022458:	697a      	ldr	r2, [r7, #20]
 802245a:	4313      	orrs	r3, r2
 802245c:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 802245e:	687b      	ldr	r3, [r7, #4]
 8022460:	681b      	ldr	r3, [r3, #0]
 8022462:	689b      	ldr	r3, [r3, #8]
 8022464:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8022468:	687b      	ldr	r3, [r7, #4]
 802246a:	681b      	ldr	r3, [r3, #0]
 802246c:	697a      	ldr	r2, [r7, #20]
 802246e:	430a      	orrs	r2, r1
 8022470:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8022472:	687b      	ldr	r3, [r7, #4]
 8022474:	681b      	ldr	r3, [r3, #0]
 8022476:	4a95      	ldr	r2, [pc, #596]	; (80226cc <UART_SetConfig+0x2cc>)
 8022478:	4293      	cmp	r3, r2
 802247a:	d120      	bne.n	80224be <UART_SetConfig+0xbe>
 802247c:	4b94      	ldr	r3, [pc, #592]	; (80226d0 <UART_SetConfig+0x2d0>)
 802247e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022482:	f003 0303 	and.w	r3, r3, #3
 8022486:	2b03      	cmp	r3, #3
 8022488:	d816      	bhi.n	80224b8 <UART_SetConfig+0xb8>
 802248a:	a201      	add	r2, pc, #4	; (adr r2, 8022490 <UART_SetConfig+0x90>)
 802248c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022490:	080224a1 	.word	0x080224a1
 8022494:	080224ad 	.word	0x080224ad
 8022498:	080224a7 	.word	0x080224a7
 802249c:	080224b3 	.word	0x080224b3
 80224a0:	2301      	movs	r3, #1
 80224a2:	77fb      	strb	r3, [r7, #31]
 80224a4:	e14f      	b.n	8022746 <UART_SetConfig+0x346>
 80224a6:	2302      	movs	r3, #2
 80224a8:	77fb      	strb	r3, [r7, #31]
 80224aa:	e14c      	b.n	8022746 <UART_SetConfig+0x346>
 80224ac:	2304      	movs	r3, #4
 80224ae:	77fb      	strb	r3, [r7, #31]
 80224b0:	e149      	b.n	8022746 <UART_SetConfig+0x346>
 80224b2:	2308      	movs	r3, #8
 80224b4:	77fb      	strb	r3, [r7, #31]
 80224b6:	e146      	b.n	8022746 <UART_SetConfig+0x346>
 80224b8:	2310      	movs	r3, #16
 80224ba:	77fb      	strb	r3, [r7, #31]
 80224bc:	e143      	b.n	8022746 <UART_SetConfig+0x346>
 80224be:	687b      	ldr	r3, [r7, #4]
 80224c0:	681b      	ldr	r3, [r3, #0]
 80224c2:	4a84      	ldr	r2, [pc, #528]	; (80226d4 <UART_SetConfig+0x2d4>)
 80224c4:	4293      	cmp	r3, r2
 80224c6:	d132      	bne.n	802252e <UART_SetConfig+0x12e>
 80224c8:	4b81      	ldr	r3, [pc, #516]	; (80226d0 <UART_SetConfig+0x2d0>)
 80224ca:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80224ce:	f003 030c 	and.w	r3, r3, #12
 80224d2:	2b0c      	cmp	r3, #12
 80224d4:	d828      	bhi.n	8022528 <UART_SetConfig+0x128>
 80224d6:	a201      	add	r2, pc, #4	; (adr r2, 80224dc <UART_SetConfig+0xdc>)
 80224d8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80224dc:	08022511 	.word	0x08022511
 80224e0:	08022529 	.word	0x08022529
 80224e4:	08022529 	.word	0x08022529
 80224e8:	08022529 	.word	0x08022529
 80224ec:	0802251d 	.word	0x0802251d
 80224f0:	08022529 	.word	0x08022529
 80224f4:	08022529 	.word	0x08022529
 80224f8:	08022529 	.word	0x08022529
 80224fc:	08022517 	.word	0x08022517
 8022500:	08022529 	.word	0x08022529
 8022504:	08022529 	.word	0x08022529
 8022508:	08022529 	.word	0x08022529
 802250c:	08022523 	.word	0x08022523
 8022510:	2300      	movs	r3, #0
 8022512:	77fb      	strb	r3, [r7, #31]
 8022514:	e117      	b.n	8022746 <UART_SetConfig+0x346>
 8022516:	2302      	movs	r3, #2
 8022518:	77fb      	strb	r3, [r7, #31]
 802251a:	e114      	b.n	8022746 <UART_SetConfig+0x346>
 802251c:	2304      	movs	r3, #4
 802251e:	77fb      	strb	r3, [r7, #31]
 8022520:	e111      	b.n	8022746 <UART_SetConfig+0x346>
 8022522:	2308      	movs	r3, #8
 8022524:	77fb      	strb	r3, [r7, #31]
 8022526:	e10e      	b.n	8022746 <UART_SetConfig+0x346>
 8022528:	2310      	movs	r3, #16
 802252a:	77fb      	strb	r3, [r7, #31]
 802252c:	e10b      	b.n	8022746 <UART_SetConfig+0x346>
 802252e:	687b      	ldr	r3, [r7, #4]
 8022530:	681b      	ldr	r3, [r3, #0]
 8022532:	4a69      	ldr	r2, [pc, #420]	; (80226d8 <UART_SetConfig+0x2d8>)
 8022534:	4293      	cmp	r3, r2
 8022536:	d120      	bne.n	802257a <UART_SetConfig+0x17a>
 8022538:	4b65      	ldr	r3, [pc, #404]	; (80226d0 <UART_SetConfig+0x2d0>)
 802253a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 802253e:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8022542:	2b30      	cmp	r3, #48	; 0x30
 8022544:	d013      	beq.n	802256e <UART_SetConfig+0x16e>
 8022546:	2b30      	cmp	r3, #48	; 0x30
 8022548:	d814      	bhi.n	8022574 <UART_SetConfig+0x174>
 802254a:	2b20      	cmp	r3, #32
 802254c:	d009      	beq.n	8022562 <UART_SetConfig+0x162>
 802254e:	2b20      	cmp	r3, #32
 8022550:	d810      	bhi.n	8022574 <UART_SetConfig+0x174>
 8022552:	2b00      	cmp	r3, #0
 8022554:	d002      	beq.n	802255c <UART_SetConfig+0x15c>
 8022556:	2b10      	cmp	r3, #16
 8022558:	d006      	beq.n	8022568 <UART_SetConfig+0x168>
 802255a:	e00b      	b.n	8022574 <UART_SetConfig+0x174>
 802255c:	2300      	movs	r3, #0
 802255e:	77fb      	strb	r3, [r7, #31]
 8022560:	e0f1      	b.n	8022746 <UART_SetConfig+0x346>
 8022562:	2302      	movs	r3, #2
 8022564:	77fb      	strb	r3, [r7, #31]
 8022566:	e0ee      	b.n	8022746 <UART_SetConfig+0x346>
 8022568:	2304      	movs	r3, #4
 802256a:	77fb      	strb	r3, [r7, #31]
 802256c:	e0eb      	b.n	8022746 <UART_SetConfig+0x346>
 802256e:	2308      	movs	r3, #8
 8022570:	77fb      	strb	r3, [r7, #31]
 8022572:	e0e8      	b.n	8022746 <UART_SetConfig+0x346>
 8022574:	2310      	movs	r3, #16
 8022576:	77fb      	strb	r3, [r7, #31]
 8022578:	e0e5      	b.n	8022746 <UART_SetConfig+0x346>
 802257a:	687b      	ldr	r3, [r7, #4]
 802257c:	681b      	ldr	r3, [r3, #0]
 802257e:	4a57      	ldr	r2, [pc, #348]	; (80226dc <UART_SetConfig+0x2dc>)
 8022580:	4293      	cmp	r3, r2
 8022582:	d120      	bne.n	80225c6 <UART_SetConfig+0x1c6>
 8022584:	4b52      	ldr	r3, [pc, #328]	; (80226d0 <UART_SetConfig+0x2d0>)
 8022586:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 802258a:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 802258e:	2bc0      	cmp	r3, #192	; 0xc0
 8022590:	d013      	beq.n	80225ba <UART_SetConfig+0x1ba>
 8022592:	2bc0      	cmp	r3, #192	; 0xc0
 8022594:	d814      	bhi.n	80225c0 <UART_SetConfig+0x1c0>
 8022596:	2b80      	cmp	r3, #128	; 0x80
 8022598:	d009      	beq.n	80225ae <UART_SetConfig+0x1ae>
 802259a:	2b80      	cmp	r3, #128	; 0x80
 802259c:	d810      	bhi.n	80225c0 <UART_SetConfig+0x1c0>
 802259e:	2b00      	cmp	r3, #0
 80225a0:	d002      	beq.n	80225a8 <UART_SetConfig+0x1a8>
 80225a2:	2b40      	cmp	r3, #64	; 0x40
 80225a4:	d006      	beq.n	80225b4 <UART_SetConfig+0x1b4>
 80225a6:	e00b      	b.n	80225c0 <UART_SetConfig+0x1c0>
 80225a8:	2300      	movs	r3, #0
 80225aa:	77fb      	strb	r3, [r7, #31]
 80225ac:	e0cb      	b.n	8022746 <UART_SetConfig+0x346>
 80225ae:	2302      	movs	r3, #2
 80225b0:	77fb      	strb	r3, [r7, #31]
 80225b2:	e0c8      	b.n	8022746 <UART_SetConfig+0x346>
 80225b4:	2304      	movs	r3, #4
 80225b6:	77fb      	strb	r3, [r7, #31]
 80225b8:	e0c5      	b.n	8022746 <UART_SetConfig+0x346>
 80225ba:	2308      	movs	r3, #8
 80225bc:	77fb      	strb	r3, [r7, #31]
 80225be:	e0c2      	b.n	8022746 <UART_SetConfig+0x346>
 80225c0:	2310      	movs	r3, #16
 80225c2:	77fb      	strb	r3, [r7, #31]
 80225c4:	e0bf      	b.n	8022746 <UART_SetConfig+0x346>
 80225c6:	687b      	ldr	r3, [r7, #4]
 80225c8:	681b      	ldr	r3, [r3, #0]
 80225ca:	4a45      	ldr	r2, [pc, #276]	; (80226e0 <UART_SetConfig+0x2e0>)
 80225cc:	4293      	cmp	r3, r2
 80225ce:	d125      	bne.n	802261c <UART_SetConfig+0x21c>
 80225d0:	4b3f      	ldr	r3, [pc, #252]	; (80226d0 <UART_SetConfig+0x2d0>)
 80225d2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80225d6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80225da:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80225de:	d017      	beq.n	8022610 <UART_SetConfig+0x210>
 80225e0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80225e4:	d817      	bhi.n	8022616 <UART_SetConfig+0x216>
 80225e6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80225ea:	d00b      	beq.n	8022604 <UART_SetConfig+0x204>
 80225ec:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80225f0:	d811      	bhi.n	8022616 <UART_SetConfig+0x216>
 80225f2:	2b00      	cmp	r3, #0
 80225f4:	d003      	beq.n	80225fe <UART_SetConfig+0x1fe>
 80225f6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80225fa:	d006      	beq.n	802260a <UART_SetConfig+0x20a>
 80225fc:	e00b      	b.n	8022616 <UART_SetConfig+0x216>
 80225fe:	2300      	movs	r3, #0
 8022600:	77fb      	strb	r3, [r7, #31]
 8022602:	e0a0      	b.n	8022746 <UART_SetConfig+0x346>
 8022604:	2302      	movs	r3, #2
 8022606:	77fb      	strb	r3, [r7, #31]
 8022608:	e09d      	b.n	8022746 <UART_SetConfig+0x346>
 802260a:	2304      	movs	r3, #4
 802260c:	77fb      	strb	r3, [r7, #31]
 802260e:	e09a      	b.n	8022746 <UART_SetConfig+0x346>
 8022610:	2308      	movs	r3, #8
 8022612:	77fb      	strb	r3, [r7, #31]
 8022614:	e097      	b.n	8022746 <UART_SetConfig+0x346>
 8022616:	2310      	movs	r3, #16
 8022618:	77fb      	strb	r3, [r7, #31]
 802261a:	e094      	b.n	8022746 <UART_SetConfig+0x346>
 802261c:	687b      	ldr	r3, [r7, #4]
 802261e:	681b      	ldr	r3, [r3, #0]
 8022620:	4a30      	ldr	r2, [pc, #192]	; (80226e4 <UART_SetConfig+0x2e4>)
 8022622:	4293      	cmp	r3, r2
 8022624:	d125      	bne.n	8022672 <UART_SetConfig+0x272>
 8022626:	4b2a      	ldr	r3, [pc, #168]	; (80226d0 <UART_SetConfig+0x2d0>)
 8022628:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 802262c:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8022630:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8022634:	d017      	beq.n	8022666 <UART_SetConfig+0x266>
 8022636:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 802263a:	d817      	bhi.n	802266c <UART_SetConfig+0x26c>
 802263c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8022640:	d00b      	beq.n	802265a <UART_SetConfig+0x25a>
 8022642:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8022646:	d811      	bhi.n	802266c <UART_SetConfig+0x26c>
 8022648:	2b00      	cmp	r3, #0
 802264a:	d003      	beq.n	8022654 <UART_SetConfig+0x254>
 802264c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8022650:	d006      	beq.n	8022660 <UART_SetConfig+0x260>
 8022652:	e00b      	b.n	802266c <UART_SetConfig+0x26c>
 8022654:	2301      	movs	r3, #1
 8022656:	77fb      	strb	r3, [r7, #31]
 8022658:	e075      	b.n	8022746 <UART_SetConfig+0x346>
 802265a:	2302      	movs	r3, #2
 802265c:	77fb      	strb	r3, [r7, #31]
 802265e:	e072      	b.n	8022746 <UART_SetConfig+0x346>
 8022660:	2304      	movs	r3, #4
 8022662:	77fb      	strb	r3, [r7, #31]
 8022664:	e06f      	b.n	8022746 <UART_SetConfig+0x346>
 8022666:	2308      	movs	r3, #8
 8022668:	77fb      	strb	r3, [r7, #31]
 802266a:	e06c      	b.n	8022746 <UART_SetConfig+0x346>
 802266c:	2310      	movs	r3, #16
 802266e:	77fb      	strb	r3, [r7, #31]
 8022670:	e069      	b.n	8022746 <UART_SetConfig+0x346>
 8022672:	687b      	ldr	r3, [r7, #4]
 8022674:	681b      	ldr	r3, [r3, #0]
 8022676:	4a1c      	ldr	r2, [pc, #112]	; (80226e8 <UART_SetConfig+0x2e8>)
 8022678:	4293      	cmp	r3, r2
 802267a:	d137      	bne.n	80226ec <UART_SetConfig+0x2ec>
 802267c:	4b14      	ldr	r3, [pc, #80]	; (80226d0 <UART_SetConfig+0x2d0>)
 802267e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022682:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8022686:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 802268a:	d017      	beq.n	80226bc <UART_SetConfig+0x2bc>
 802268c:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8022690:	d817      	bhi.n	80226c2 <UART_SetConfig+0x2c2>
 8022692:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8022696:	d00b      	beq.n	80226b0 <UART_SetConfig+0x2b0>
 8022698:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 802269c:	d811      	bhi.n	80226c2 <UART_SetConfig+0x2c2>
 802269e:	2b00      	cmp	r3, #0
 80226a0:	d003      	beq.n	80226aa <UART_SetConfig+0x2aa>
 80226a2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80226a6:	d006      	beq.n	80226b6 <UART_SetConfig+0x2b6>
 80226a8:	e00b      	b.n	80226c2 <UART_SetConfig+0x2c2>
 80226aa:	2300      	movs	r3, #0
 80226ac:	77fb      	strb	r3, [r7, #31]
 80226ae:	e04a      	b.n	8022746 <UART_SetConfig+0x346>
 80226b0:	2302      	movs	r3, #2
 80226b2:	77fb      	strb	r3, [r7, #31]
 80226b4:	e047      	b.n	8022746 <UART_SetConfig+0x346>
 80226b6:	2304      	movs	r3, #4
 80226b8:	77fb      	strb	r3, [r7, #31]
 80226ba:	e044      	b.n	8022746 <UART_SetConfig+0x346>
 80226bc:	2308      	movs	r3, #8
 80226be:	77fb      	strb	r3, [r7, #31]
 80226c0:	e041      	b.n	8022746 <UART_SetConfig+0x346>
 80226c2:	2310      	movs	r3, #16
 80226c4:	77fb      	strb	r3, [r7, #31]
 80226c6:	e03e      	b.n	8022746 <UART_SetConfig+0x346>
 80226c8:	efff69f3 	.word	0xefff69f3
 80226cc:	40011000 	.word	0x40011000
 80226d0:	40023800 	.word	0x40023800
 80226d4:	40004400 	.word	0x40004400
 80226d8:	40004800 	.word	0x40004800
 80226dc:	40004c00 	.word	0x40004c00
 80226e0:	40005000 	.word	0x40005000
 80226e4:	40011400 	.word	0x40011400
 80226e8:	40007800 	.word	0x40007800
 80226ec:	687b      	ldr	r3, [r7, #4]
 80226ee:	681b      	ldr	r3, [r3, #0]
 80226f0:	4a71      	ldr	r2, [pc, #452]	; (80228b8 <UART_SetConfig+0x4b8>)
 80226f2:	4293      	cmp	r3, r2
 80226f4:	d125      	bne.n	8022742 <UART_SetConfig+0x342>
 80226f6:	4b71      	ldr	r3, [pc, #452]	; (80228bc <UART_SetConfig+0x4bc>)
 80226f8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80226fc:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8022700:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8022704:	d017      	beq.n	8022736 <UART_SetConfig+0x336>
 8022706:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 802270a:	d817      	bhi.n	802273c <UART_SetConfig+0x33c>
 802270c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8022710:	d00b      	beq.n	802272a <UART_SetConfig+0x32a>
 8022712:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8022716:	d811      	bhi.n	802273c <UART_SetConfig+0x33c>
 8022718:	2b00      	cmp	r3, #0
 802271a:	d003      	beq.n	8022724 <UART_SetConfig+0x324>
 802271c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8022720:	d006      	beq.n	8022730 <UART_SetConfig+0x330>
 8022722:	e00b      	b.n	802273c <UART_SetConfig+0x33c>
 8022724:	2300      	movs	r3, #0
 8022726:	77fb      	strb	r3, [r7, #31]
 8022728:	e00d      	b.n	8022746 <UART_SetConfig+0x346>
 802272a:	2302      	movs	r3, #2
 802272c:	77fb      	strb	r3, [r7, #31]
 802272e:	e00a      	b.n	8022746 <UART_SetConfig+0x346>
 8022730:	2304      	movs	r3, #4
 8022732:	77fb      	strb	r3, [r7, #31]
 8022734:	e007      	b.n	8022746 <UART_SetConfig+0x346>
 8022736:	2308      	movs	r3, #8
 8022738:	77fb      	strb	r3, [r7, #31]
 802273a:	e004      	b.n	8022746 <UART_SetConfig+0x346>
 802273c:	2310      	movs	r3, #16
 802273e:	77fb      	strb	r3, [r7, #31]
 8022740:	e001      	b.n	8022746 <UART_SetConfig+0x346>
 8022742:	2310      	movs	r3, #16
 8022744:	77fb      	strb	r3, [r7, #31]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8022746:	687b      	ldr	r3, [r7, #4]
 8022748:	69db      	ldr	r3, [r3, #28]
 802274a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 802274e:	d15b      	bne.n	8022808 <UART_SetConfig+0x408>
  {
    switch (clocksource)
 8022750:	7ffb      	ldrb	r3, [r7, #31]
 8022752:	2b08      	cmp	r3, #8
 8022754:	d827      	bhi.n	80227a6 <UART_SetConfig+0x3a6>
 8022756:	a201      	add	r2, pc, #4	; (adr r2, 802275c <UART_SetConfig+0x35c>)
 8022758:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 802275c:	08022781 	.word	0x08022781
 8022760:	08022789 	.word	0x08022789
 8022764:	08022791 	.word	0x08022791
 8022768:	080227a7 	.word	0x080227a7
 802276c:	08022797 	.word	0x08022797
 8022770:	080227a7 	.word	0x080227a7
 8022774:	080227a7 	.word	0x080227a7
 8022778:	080227a7 	.word	0x080227a7
 802277c:	0802279f 	.word	0x0802279f
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8022780:	f7fe fe68 	bl	8021454 <HAL_RCC_GetPCLK1Freq>
 8022784:	61b8      	str	r0, [r7, #24]
        break;
 8022786:	e013      	b.n	80227b0 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8022788:	f7fe fe78 	bl	802147c <HAL_RCC_GetPCLK2Freq>
 802278c:	61b8      	str	r0, [r7, #24]
        break;
 802278e:	e00f      	b.n	80227b0 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8022790:	4b4b      	ldr	r3, [pc, #300]	; (80228c0 <UART_SetConfig+0x4c0>)
 8022792:	61bb      	str	r3, [r7, #24]
        break;
 8022794:	e00c      	b.n	80227b0 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8022796:	f7fe fd9b 	bl	80212d0 <HAL_RCC_GetSysClockFreq>
 802279a:	61b8      	str	r0, [r7, #24]
        break;
 802279c:	e008      	b.n	80227b0 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 802279e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80227a2:	61bb      	str	r3, [r7, #24]
        break;
 80227a4:	e004      	b.n	80227b0 <UART_SetConfig+0x3b0>
      default:
        pclk = 0U;
 80227a6:	2300      	movs	r3, #0
 80227a8:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 80227aa:	2301      	movs	r3, #1
 80227ac:	77bb      	strb	r3, [r7, #30]
        break;
 80227ae:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 80227b0:	69bb      	ldr	r3, [r7, #24]
 80227b2:	2b00      	cmp	r3, #0
 80227b4:	d074      	beq.n	80228a0 <UART_SetConfig+0x4a0>
    {
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 80227b6:	69bb      	ldr	r3, [r7, #24]
 80227b8:	005a      	lsls	r2, r3, #1
 80227ba:	687b      	ldr	r3, [r7, #4]
 80227bc:	685b      	ldr	r3, [r3, #4]
 80227be:	085b      	lsrs	r3, r3, #1
 80227c0:	441a      	add	r2, r3
 80227c2:	687b      	ldr	r3, [r7, #4]
 80227c4:	685b      	ldr	r3, [r3, #4]
 80227c6:	fbb2 f3f3 	udiv	r3, r2, r3
 80227ca:	b29b      	uxth	r3, r3
 80227cc:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80227ce:	693b      	ldr	r3, [r7, #16]
 80227d0:	2b0f      	cmp	r3, #15
 80227d2:	d916      	bls.n	8022802 <UART_SetConfig+0x402>
 80227d4:	693b      	ldr	r3, [r7, #16]
 80227d6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80227da:	d212      	bcs.n	8022802 <UART_SetConfig+0x402>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 80227dc:	693b      	ldr	r3, [r7, #16]
 80227de:	b29b      	uxth	r3, r3
 80227e0:	f023 030f 	bic.w	r3, r3, #15
 80227e4:	81fb      	strh	r3, [r7, #14]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 80227e6:	693b      	ldr	r3, [r7, #16]
 80227e8:	085b      	lsrs	r3, r3, #1
 80227ea:	b29b      	uxth	r3, r3
 80227ec:	f003 0307 	and.w	r3, r3, #7
 80227f0:	b29a      	uxth	r2, r3
 80227f2:	89fb      	ldrh	r3, [r7, #14]
 80227f4:	4313      	orrs	r3, r2
 80227f6:	81fb      	strh	r3, [r7, #14]
        huart->Instance->BRR = brrtemp;
 80227f8:	687b      	ldr	r3, [r7, #4]
 80227fa:	681b      	ldr	r3, [r3, #0]
 80227fc:	89fa      	ldrh	r2, [r7, #14]
 80227fe:	60da      	str	r2, [r3, #12]
 8022800:	e04e      	b.n	80228a0 <UART_SetConfig+0x4a0>
      }
      else
      {
        ret = HAL_ERROR;
 8022802:	2301      	movs	r3, #1
 8022804:	77bb      	strb	r3, [r7, #30]
 8022806:	e04b      	b.n	80228a0 <UART_SetConfig+0x4a0>
      }
    }
  }
  else
  {
    switch (clocksource)
 8022808:	7ffb      	ldrb	r3, [r7, #31]
 802280a:	2b08      	cmp	r3, #8
 802280c:	d827      	bhi.n	802285e <UART_SetConfig+0x45e>
 802280e:	a201      	add	r2, pc, #4	; (adr r2, 8022814 <UART_SetConfig+0x414>)
 8022810:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022814:	08022839 	.word	0x08022839
 8022818:	08022841 	.word	0x08022841
 802281c:	08022849 	.word	0x08022849
 8022820:	0802285f 	.word	0x0802285f
 8022824:	0802284f 	.word	0x0802284f
 8022828:	0802285f 	.word	0x0802285f
 802282c:	0802285f 	.word	0x0802285f
 8022830:	0802285f 	.word	0x0802285f
 8022834:	08022857 	.word	0x08022857
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8022838:	f7fe fe0c 	bl	8021454 <HAL_RCC_GetPCLK1Freq>
 802283c:	61b8      	str	r0, [r7, #24]
        break;
 802283e:	e013      	b.n	8022868 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8022840:	f7fe fe1c 	bl	802147c <HAL_RCC_GetPCLK2Freq>
 8022844:	61b8      	str	r0, [r7, #24]
        break;
 8022846:	e00f      	b.n	8022868 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8022848:	4b1d      	ldr	r3, [pc, #116]	; (80228c0 <UART_SetConfig+0x4c0>)
 802284a:	61bb      	str	r3, [r7, #24]
        break;
 802284c:	e00c      	b.n	8022868 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 802284e:	f7fe fd3f 	bl	80212d0 <HAL_RCC_GetSysClockFreq>
 8022852:	61b8      	str	r0, [r7, #24]
        break;
 8022854:	e008      	b.n	8022868 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8022856:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 802285a:	61bb      	str	r3, [r7, #24]
        break;
 802285c:	e004      	b.n	8022868 <UART_SetConfig+0x468>
      default:
        pclk = 0U;
 802285e:	2300      	movs	r3, #0
 8022860:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8022862:	2301      	movs	r3, #1
 8022864:	77bb      	strb	r3, [r7, #30]
        break;
 8022866:	bf00      	nop
    }

    if (pclk != 0U)
 8022868:	69bb      	ldr	r3, [r7, #24]
 802286a:	2b00      	cmp	r3, #0
 802286c:	d018      	beq.n	80228a0 <UART_SetConfig+0x4a0>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 802286e:	687b      	ldr	r3, [r7, #4]
 8022870:	685b      	ldr	r3, [r3, #4]
 8022872:	085a      	lsrs	r2, r3, #1
 8022874:	69bb      	ldr	r3, [r7, #24]
 8022876:	441a      	add	r2, r3
 8022878:	687b      	ldr	r3, [r7, #4]
 802287a:	685b      	ldr	r3, [r3, #4]
 802287c:	fbb2 f3f3 	udiv	r3, r2, r3
 8022880:	b29b      	uxth	r3, r3
 8022882:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8022884:	693b      	ldr	r3, [r7, #16]
 8022886:	2b0f      	cmp	r3, #15
 8022888:	d908      	bls.n	802289c <UART_SetConfig+0x49c>
 802288a:	693b      	ldr	r3, [r7, #16]
 802288c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8022890:	d204      	bcs.n	802289c <UART_SetConfig+0x49c>
      {
        huart->Instance->BRR = usartdiv;
 8022892:	687b      	ldr	r3, [r7, #4]
 8022894:	681b      	ldr	r3, [r3, #0]
 8022896:	693a      	ldr	r2, [r7, #16]
 8022898:	60da      	str	r2, [r3, #12]
 802289a:	e001      	b.n	80228a0 <UART_SetConfig+0x4a0>
      }
      else
      {
        ret = HAL_ERROR;
 802289c:	2301      	movs	r3, #1
 802289e:	77bb      	strb	r3, [r7, #30]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 80228a0:	687b      	ldr	r3, [r7, #4]
 80228a2:	2200      	movs	r2, #0
 80228a4:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 80228a6:	687b      	ldr	r3, [r7, #4]
 80228a8:	2200      	movs	r2, #0
 80228aa:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 80228ac:	7fbb      	ldrb	r3, [r7, #30]
}
 80228ae:	4618      	mov	r0, r3
 80228b0:	3720      	adds	r7, #32
 80228b2:	46bd      	mov	sp, r7
 80228b4:	bd80      	pop	{r7, pc}
 80228b6:	bf00      	nop
 80228b8:	40007c00 	.word	0x40007c00
 80228bc:	40023800 	.word	0x40023800
 80228c0:	00f42400 	.word	0x00f42400

080228c4 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 80228c4:	b480      	push	{r7}
 80228c6:	b083      	sub	sp, #12
 80228c8:	af00      	add	r7, sp, #0
 80228ca:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 80228cc:	687b      	ldr	r3, [r7, #4]
 80228ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80228d0:	f003 0301 	and.w	r3, r3, #1
 80228d4:	2b00      	cmp	r3, #0
 80228d6:	d00a      	beq.n	80228ee <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 80228d8:	687b      	ldr	r3, [r7, #4]
 80228da:	681b      	ldr	r3, [r3, #0]
 80228dc:	685b      	ldr	r3, [r3, #4]
 80228de:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 80228e2:	687b      	ldr	r3, [r7, #4]
 80228e4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80228e6:	687b      	ldr	r3, [r7, #4]
 80228e8:	681b      	ldr	r3, [r3, #0]
 80228ea:	430a      	orrs	r2, r1
 80228ec:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 80228ee:	687b      	ldr	r3, [r7, #4]
 80228f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80228f2:	f003 0302 	and.w	r3, r3, #2
 80228f6:	2b00      	cmp	r3, #0
 80228f8:	d00a      	beq.n	8022910 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 80228fa:	687b      	ldr	r3, [r7, #4]
 80228fc:	681b      	ldr	r3, [r3, #0]
 80228fe:	685b      	ldr	r3, [r3, #4]
 8022900:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8022904:	687b      	ldr	r3, [r7, #4]
 8022906:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8022908:	687b      	ldr	r3, [r7, #4]
 802290a:	681b      	ldr	r3, [r3, #0]
 802290c:	430a      	orrs	r2, r1
 802290e:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8022910:	687b      	ldr	r3, [r7, #4]
 8022912:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022914:	f003 0304 	and.w	r3, r3, #4
 8022918:	2b00      	cmp	r3, #0
 802291a:	d00a      	beq.n	8022932 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 802291c:	687b      	ldr	r3, [r7, #4]
 802291e:	681b      	ldr	r3, [r3, #0]
 8022920:	685b      	ldr	r3, [r3, #4]
 8022922:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8022926:	687b      	ldr	r3, [r7, #4]
 8022928:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 802292a:	687b      	ldr	r3, [r7, #4]
 802292c:	681b      	ldr	r3, [r3, #0]
 802292e:	430a      	orrs	r2, r1
 8022930:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8022932:	687b      	ldr	r3, [r7, #4]
 8022934:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022936:	f003 0308 	and.w	r3, r3, #8
 802293a:	2b00      	cmp	r3, #0
 802293c:	d00a      	beq.n	8022954 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 802293e:	687b      	ldr	r3, [r7, #4]
 8022940:	681b      	ldr	r3, [r3, #0]
 8022942:	685b      	ldr	r3, [r3, #4]
 8022944:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 8022948:	687b      	ldr	r3, [r7, #4]
 802294a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 802294c:	687b      	ldr	r3, [r7, #4]
 802294e:	681b      	ldr	r3, [r3, #0]
 8022950:	430a      	orrs	r2, r1
 8022952:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8022954:	687b      	ldr	r3, [r7, #4]
 8022956:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022958:	f003 0310 	and.w	r3, r3, #16
 802295c:	2b00      	cmp	r3, #0
 802295e:	d00a      	beq.n	8022976 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8022960:	687b      	ldr	r3, [r7, #4]
 8022962:	681b      	ldr	r3, [r3, #0]
 8022964:	689b      	ldr	r3, [r3, #8]
 8022966:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 802296a:	687b      	ldr	r3, [r7, #4]
 802296c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 802296e:	687b      	ldr	r3, [r7, #4]
 8022970:	681b      	ldr	r3, [r3, #0]
 8022972:	430a      	orrs	r2, r1
 8022974:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8022976:	687b      	ldr	r3, [r7, #4]
 8022978:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 802297a:	f003 0320 	and.w	r3, r3, #32
 802297e:	2b00      	cmp	r3, #0
 8022980:	d00a      	beq.n	8022998 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8022982:	687b      	ldr	r3, [r7, #4]
 8022984:	681b      	ldr	r3, [r3, #0]
 8022986:	689b      	ldr	r3, [r3, #8]
 8022988:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 802298c:	687b      	ldr	r3, [r7, #4]
 802298e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8022990:	687b      	ldr	r3, [r7, #4]
 8022992:	681b      	ldr	r3, [r3, #0]
 8022994:	430a      	orrs	r2, r1
 8022996:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8022998:	687b      	ldr	r3, [r7, #4]
 802299a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 802299c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80229a0:	2b00      	cmp	r3, #0
 80229a2:	d01a      	beq.n	80229da <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 80229a4:	687b      	ldr	r3, [r7, #4]
 80229a6:	681b      	ldr	r3, [r3, #0]
 80229a8:	685b      	ldr	r3, [r3, #4]
 80229aa:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 80229ae:	687b      	ldr	r3, [r7, #4]
 80229b0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80229b2:	687b      	ldr	r3, [r7, #4]
 80229b4:	681b      	ldr	r3, [r3, #0]
 80229b6:	430a      	orrs	r2, r1
 80229b8:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 80229ba:	687b      	ldr	r3, [r7, #4]
 80229bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80229be:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80229c2:	d10a      	bne.n	80229da <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 80229c4:	687b      	ldr	r3, [r7, #4]
 80229c6:	681b      	ldr	r3, [r3, #0]
 80229c8:	685b      	ldr	r3, [r3, #4]
 80229ca:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 80229ce:	687b      	ldr	r3, [r7, #4]
 80229d0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80229d2:	687b      	ldr	r3, [r7, #4]
 80229d4:	681b      	ldr	r3, [r3, #0]
 80229d6:	430a      	orrs	r2, r1
 80229d8:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 80229da:	687b      	ldr	r3, [r7, #4]
 80229dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80229de:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80229e2:	2b00      	cmp	r3, #0
 80229e4:	d00a      	beq.n	80229fc <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 80229e6:	687b      	ldr	r3, [r7, #4]
 80229e8:	681b      	ldr	r3, [r3, #0]
 80229ea:	685b      	ldr	r3, [r3, #4]
 80229ec:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 80229f0:	687b      	ldr	r3, [r7, #4]
 80229f2:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80229f4:	687b      	ldr	r3, [r7, #4]
 80229f6:	681b      	ldr	r3, [r3, #0]
 80229f8:	430a      	orrs	r2, r1
 80229fa:	605a      	str	r2, [r3, #4]
  }
}
 80229fc:	bf00      	nop
 80229fe:	370c      	adds	r7, #12
 8022a00:	46bd      	mov	sp, r7
 8022a02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8022a06:	4770      	bx	lr

08022a08 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 8022a08:	b580      	push	{r7, lr}
 8022a0a:	b086      	sub	sp, #24
 8022a0c:	af02      	add	r7, sp, #8
 8022a0e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8022a10:	687b      	ldr	r3, [r7, #4]
 8022a12:	2200      	movs	r2, #0
 8022a14:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 8022a18:	f7fd fcfa 	bl	8020410 <HAL_GetTick>
 8022a1c:	60f8      	str	r0, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8022a1e:	687b      	ldr	r3, [r7, #4]
 8022a20:	681b      	ldr	r3, [r3, #0]
 8022a22:	681b      	ldr	r3, [r3, #0]
 8022a24:	f003 0308 	and.w	r3, r3, #8
 8022a28:	2b08      	cmp	r3, #8
 8022a2a:	d10e      	bne.n	8022a4a <UART_CheckIdleState+0x42>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8022a2c:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8022a30:	9300      	str	r3, [sp, #0]
 8022a32:	68fb      	ldr	r3, [r7, #12]
 8022a34:	2200      	movs	r2, #0
 8022a36:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8022a3a:	6878      	ldr	r0, [r7, #4]
 8022a3c:	f000 f817 	bl	8022a6e <UART_WaitOnFlagUntilTimeout>
 8022a40:	4603      	mov	r3, r0
 8022a42:	2b00      	cmp	r3, #0
 8022a44:	d001      	beq.n	8022a4a <UART_CheckIdleState+0x42>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 8022a46:	2303      	movs	r3, #3
 8022a48:	e00d      	b.n	8022a66 <UART_CheckIdleState+0x5e>
    }
  }
#endif

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 8022a4a:	687b      	ldr	r3, [r7, #4]
 8022a4c:	2220      	movs	r2, #32
 8022a4e:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 8022a50:	687b      	ldr	r3, [r7, #4]
 8022a52:	2220      	movs	r2, #32
 8022a54:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8022a56:	687b      	ldr	r3, [r7, #4]
 8022a58:	2200      	movs	r2, #0
 8022a5a:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 8022a5c:	687b      	ldr	r3, [r7, #4]
 8022a5e:	2200      	movs	r2, #0
 8022a60:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

  return HAL_OK;
 8022a64:	2300      	movs	r3, #0
}
 8022a66:	4618      	mov	r0, r3
 8022a68:	3710      	adds	r7, #16
 8022a6a:	46bd      	mov	sp, r7
 8022a6c:	bd80      	pop	{r7, pc}

08022a6e <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 8022a6e:	b580      	push	{r7, lr}
 8022a70:	b084      	sub	sp, #16
 8022a72:	af00      	add	r7, sp, #0
 8022a74:	60f8      	str	r0, [r7, #12]
 8022a76:	60b9      	str	r1, [r7, #8]
 8022a78:	603b      	str	r3, [r7, #0]
 8022a7a:	4613      	mov	r3, r2
 8022a7c:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8022a7e:	e05e      	b.n	8022b3e <UART_WaitOnFlagUntilTimeout+0xd0>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8022a80:	69bb      	ldr	r3, [r7, #24]
 8022a82:	f1b3 3fff 	cmp.w	r3, #4294967295
 8022a86:	d05a      	beq.n	8022b3e <UART_WaitOnFlagUntilTimeout+0xd0>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8022a88:	f7fd fcc2 	bl	8020410 <HAL_GetTick>
 8022a8c:	4602      	mov	r2, r0
 8022a8e:	683b      	ldr	r3, [r7, #0]
 8022a90:	1ad3      	subs	r3, r2, r3
 8022a92:	69ba      	ldr	r2, [r7, #24]
 8022a94:	429a      	cmp	r2, r3
 8022a96:	d302      	bcc.n	8022a9e <UART_WaitOnFlagUntilTimeout+0x30>
 8022a98:	69bb      	ldr	r3, [r7, #24]
 8022a9a:	2b00      	cmp	r3, #0
 8022a9c:	d11b      	bne.n	8022ad6 <UART_WaitOnFlagUntilTimeout+0x68>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
           interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8022a9e:	68fb      	ldr	r3, [r7, #12]
 8022aa0:	681b      	ldr	r3, [r3, #0]
 8022aa2:	681a      	ldr	r2, [r3, #0]
 8022aa4:	68fb      	ldr	r3, [r7, #12]
 8022aa6:	681b      	ldr	r3, [r3, #0]
 8022aa8:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8022aac:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8022aae:	68fb      	ldr	r3, [r7, #12]
 8022ab0:	681b      	ldr	r3, [r3, #0]
 8022ab2:	689a      	ldr	r2, [r3, #8]
 8022ab4:	68fb      	ldr	r3, [r7, #12]
 8022ab6:	681b      	ldr	r3, [r3, #0]
 8022ab8:	f022 0201 	bic.w	r2, r2, #1
 8022abc:	609a      	str	r2, [r3, #8]

        huart->gState = HAL_UART_STATE_READY;
 8022abe:	68fb      	ldr	r3, [r7, #12]
 8022ac0:	2220      	movs	r2, #32
 8022ac2:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 8022ac4:	68fb      	ldr	r3, [r7, #12]
 8022ac6:	2220      	movs	r2, #32
 8022ac8:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 8022aca:	68fb      	ldr	r3, [r7, #12]
 8022acc:	2200      	movs	r2, #0
 8022ace:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

        return HAL_TIMEOUT;
 8022ad2:	2303      	movs	r3, #3
 8022ad4:	e043      	b.n	8022b5e <UART_WaitOnFlagUntilTimeout+0xf0>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8022ad6:	68fb      	ldr	r3, [r7, #12]
 8022ad8:	681b      	ldr	r3, [r3, #0]
 8022ada:	681b      	ldr	r3, [r3, #0]
 8022adc:	f003 0304 	and.w	r3, r3, #4
 8022ae0:	2b00      	cmp	r3, #0
 8022ae2:	d02c      	beq.n	8022b3e <UART_WaitOnFlagUntilTimeout+0xd0>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8022ae4:	68fb      	ldr	r3, [r7, #12]
 8022ae6:	681b      	ldr	r3, [r3, #0]
 8022ae8:	69db      	ldr	r3, [r3, #28]
 8022aea:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8022aee:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8022af2:	d124      	bne.n	8022b3e <UART_WaitOnFlagUntilTimeout+0xd0>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8022af4:	68fb      	ldr	r3, [r7, #12]
 8022af6:	681b      	ldr	r3, [r3, #0]
 8022af8:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8022afc:	621a      	str	r2, [r3, #32]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8022afe:	68fb      	ldr	r3, [r7, #12]
 8022b00:	681b      	ldr	r3, [r3, #0]
 8022b02:	681a      	ldr	r2, [r3, #0]
 8022b04:	68fb      	ldr	r3, [r7, #12]
 8022b06:	681b      	ldr	r3, [r3, #0]
 8022b08:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8022b0c:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8022b0e:	68fb      	ldr	r3, [r7, #12]
 8022b10:	681b      	ldr	r3, [r3, #0]
 8022b12:	689a      	ldr	r2, [r3, #8]
 8022b14:	68fb      	ldr	r3, [r7, #12]
 8022b16:	681b      	ldr	r3, [r3, #0]
 8022b18:	f022 0201 	bic.w	r2, r2, #1
 8022b1c:	609a      	str	r2, [r3, #8]

          huart->gState = HAL_UART_STATE_READY;
 8022b1e:	68fb      	ldr	r3, [r7, #12]
 8022b20:	2220      	movs	r2, #32
 8022b22:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 8022b24:	68fb      	ldr	r3, [r7, #12]
 8022b26:	2220      	movs	r2, #32
 8022b28:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8022b2a:	68fb      	ldr	r3, [r7, #12]
 8022b2c:	2220      	movs	r2, #32
 8022b2e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8022b32:	68fb      	ldr	r3, [r7, #12]
 8022b34:	2200      	movs	r2, #0
 8022b36:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

          return HAL_TIMEOUT;
 8022b3a:	2303      	movs	r3, #3
 8022b3c:	e00f      	b.n	8022b5e <UART_WaitOnFlagUntilTimeout+0xf0>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8022b3e:	68fb      	ldr	r3, [r7, #12]
 8022b40:	681b      	ldr	r3, [r3, #0]
 8022b42:	69da      	ldr	r2, [r3, #28]
 8022b44:	68bb      	ldr	r3, [r7, #8]
 8022b46:	4013      	ands	r3, r2
 8022b48:	68ba      	ldr	r2, [r7, #8]
 8022b4a:	429a      	cmp	r2, r3
 8022b4c:	bf0c      	ite	eq
 8022b4e:	2301      	moveq	r3, #1
 8022b50:	2300      	movne	r3, #0
 8022b52:	b2db      	uxtb	r3, r3
 8022b54:	461a      	mov	r2, r3
 8022b56:	79fb      	ldrb	r3, [r7, #7]
 8022b58:	429a      	cmp	r2, r3
 8022b5a:	d091      	beq.n	8022a80 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8022b5c:	2300      	movs	r3, #0
}
 8022b5e:	4618      	mov	r0, r3
 8022b60:	3710      	adds	r7, #16
 8022b62:	46bd      	mov	sp, r7
 8022b64:	bd80      	pop	{r7, pc}

08022b66 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8022b66:	b480      	push	{r7}
 8022b68:	b083      	sub	sp, #12
 8022b6a:	af00      	add	r7, sp, #0
 8022b6c:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8022b6e:	687b      	ldr	r3, [r7, #4]
 8022b70:	681b      	ldr	r3, [r3, #0]
 8022b72:	681a      	ldr	r2, [r3, #0]
 8022b74:	687b      	ldr	r3, [r7, #4]
 8022b76:	681b      	ldr	r3, [r3, #0]
 8022b78:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8022b7c:	601a      	str	r2, [r3, #0]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8022b7e:	687b      	ldr	r3, [r7, #4]
 8022b80:	681b      	ldr	r3, [r3, #0]
 8022b82:	689a      	ldr	r2, [r3, #8]
 8022b84:	687b      	ldr	r3, [r7, #4]
 8022b86:	681b      	ldr	r3, [r3, #0]
 8022b88:	f022 0201 	bic.w	r2, r2, #1
 8022b8c:	609a      	str	r2, [r3, #8]

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8022b8e:	687b      	ldr	r3, [r7, #4]
 8022b90:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8022b92:	2b01      	cmp	r3, #1
 8022b94:	d107      	bne.n	8022ba6 <UART_EndRxTransfer+0x40>
  {
    CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8022b96:	687b      	ldr	r3, [r7, #4]
 8022b98:	681b      	ldr	r3, [r3, #0]
 8022b9a:	681a      	ldr	r2, [r3, #0]
 8022b9c:	687b      	ldr	r3, [r7, #4]
 8022b9e:	681b      	ldr	r3, [r3, #0]
 8022ba0:	f022 0210 	bic.w	r2, r2, #16
 8022ba4:	601a      	str	r2, [r3, #0]
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8022ba6:	687b      	ldr	r3, [r7, #4]
 8022ba8:	2220      	movs	r2, #32
 8022baa:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8022bac:	687b      	ldr	r3, [r7, #4]
 8022bae:	2200      	movs	r2, #0
 8022bb0:	661a      	str	r2, [r3, #96]	; 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 8022bb2:	687b      	ldr	r3, [r7, #4]
 8022bb4:	2200      	movs	r2, #0
 8022bb6:	665a      	str	r2, [r3, #100]	; 0x64
}
 8022bb8:	bf00      	nop
 8022bba:	370c      	adds	r7, #12
 8022bbc:	46bd      	mov	sp, r7
 8022bbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8022bc2:	4770      	bx	lr

08022bc4 <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8022bc4:	b580      	push	{r7, lr}
 8022bc6:	b084      	sub	sp, #16
 8022bc8:	af00      	add	r7, sp, #0
 8022bca:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8022bcc:	687b      	ldr	r3, [r7, #4]
 8022bce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8022bd0:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0U;
 8022bd2:	68fb      	ldr	r3, [r7, #12]
 8022bd4:	2200      	movs	r2, #0
 8022bd6:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
  huart->TxXferCount = 0U;
 8022bda:	68fb      	ldr	r3, [r7, #12]
 8022bdc:	2200      	movs	r2, #0
 8022bde:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 8022be2:	68f8      	ldr	r0, [r7, #12]
 8022be4:	f7ff fbf6 	bl	80223d4 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8022be8:	bf00      	nop
 8022bea:	3710      	adds	r7, #16
 8022bec:	46bd      	mov	sp, r7
 8022bee:	bd80      	pop	{r7, pc}

08022bf0 <UART_EndTransmit_IT>:
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 8022bf0:	b580      	push	{r7, lr}
 8022bf2:	b082      	sub	sp, #8
 8022bf4:	af00      	add	r7, sp, #0
 8022bf6:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8022bf8:	687b      	ldr	r3, [r7, #4]
 8022bfa:	681b      	ldr	r3, [r3, #0]
 8022bfc:	681a      	ldr	r2, [r3, #0]
 8022bfe:	687b      	ldr	r3, [r7, #4]
 8022c00:	681b      	ldr	r3, [r3, #0]
 8022c02:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8022c06:	601a      	str	r2, [r3, #0]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8022c08:	687b      	ldr	r3, [r7, #4]
 8022c0a:	2220      	movs	r2, #32
 8022c0c:	679a      	str	r2, [r3, #120]	; 0x78

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 8022c0e:	687b      	ldr	r3, [r7, #4]
 8022c10:	2200      	movs	r2, #0
 8022c12:	669a      	str	r2, [r3, #104]	; 0x68
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 8022c14:	6878      	ldr	r0, [r7, #4]
 8022c16:	f7ff fbd3 	bl	80223c0 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8022c1a:	bf00      	nop
 8022c1c:	3708      	adds	r7, #8
 8022c1e:	46bd      	mov	sp, r7
 8022c20:	bd80      	pop	{r7, pc}

08022c22 <_ZdlPv>:
 8022c22:	f001 bb59 	b.w	80242d8 <free>

08022c26 <_ZdlPvj>:
 8022c26:	f7ff bffc 	b.w	8022c22 <_ZdlPv>

08022c2a <__cxa_guard_acquire>:
 8022c2a:	6803      	ldr	r3, [r0, #0]
 8022c2c:	07db      	lsls	r3, r3, #31
 8022c2e:	d406      	bmi.n	8022c3e <__cxa_guard_acquire+0x14>
 8022c30:	7843      	ldrb	r3, [r0, #1]
 8022c32:	b103      	cbz	r3, 8022c36 <__cxa_guard_acquire+0xc>
 8022c34:	deff      	udf	#255	; 0xff
 8022c36:	2301      	movs	r3, #1
 8022c38:	7043      	strb	r3, [r0, #1]
 8022c3a:	4618      	mov	r0, r3
 8022c3c:	4770      	bx	lr
 8022c3e:	2000      	movs	r0, #0
 8022c40:	4770      	bx	lr

08022c42 <__cxa_guard_release>:
 8022c42:	2301      	movs	r3, #1
 8022c44:	6003      	str	r3, [r0, #0]
 8022c46:	4770      	bx	lr

08022c48 <_Znwj>:
 8022c48:	2801      	cmp	r0, #1
 8022c4a:	bf38      	it	cc
 8022c4c:	2001      	movcc	r0, #1
 8022c4e:	b510      	push	{r4, lr}
 8022c50:	4604      	mov	r4, r0
 8022c52:	4620      	mov	r0, r4
 8022c54:	f001 fb38 	bl	80242c8 <malloc>
 8022c58:	b930      	cbnz	r0, 8022c68 <_Znwj+0x20>
 8022c5a:	f000 fb0d 	bl	8023278 <_ZSt15get_new_handlerv>
 8022c5e:	b908      	cbnz	r0, 8022c64 <_Znwj+0x1c>
 8022c60:	f001 fac8 	bl	80241f4 <abort>
 8022c64:	4780      	blx	r0
 8022c66:	e7f4      	b.n	8022c52 <_Znwj+0xa>
 8022c68:	bd10      	pop	{r4, pc}

08022c6a <_ZNSaIcEC1Ev>:
 8022c6a:	4770      	bx	lr

08022c6c <_ZNSaIcED1Ev>:
 8022c6c:	4770      	bx	lr

08022c6e <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>:
 8022c6e:	68c3      	ldr	r3, [r0, #12]
 8022c70:	689a      	ldr	r2, [r3, #8]
 8022c72:	60c2      	str	r2, [r0, #12]
 8022c74:	b510      	push	{r4, lr}
 8022c76:	b102      	cbz	r2, 8022c7a <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0xc>
 8022c78:	6050      	str	r0, [r2, #4]
 8022c7a:	6842      	ldr	r2, [r0, #4]
 8022c7c:	605a      	str	r2, [r3, #4]
 8022c7e:	680c      	ldr	r4, [r1, #0]
 8022c80:	4284      	cmp	r4, r0
 8022c82:	d103      	bne.n	8022c8c <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x1e>
 8022c84:	600b      	str	r3, [r1, #0]
 8022c86:	6098      	str	r0, [r3, #8]
 8022c88:	6043      	str	r3, [r0, #4]
 8022c8a:	bd10      	pop	{r4, pc}
 8022c8c:	6891      	ldr	r1, [r2, #8]
 8022c8e:	4281      	cmp	r1, r0
 8022c90:	bf0c      	ite	eq
 8022c92:	6093      	streq	r3, [r2, #8]
 8022c94:	60d3      	strne	r3, [r2, #12]
 8022c96:	e7f6      	b.n	8022c86 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x18>

08022c98 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>:
 8022c98:	6883      	ldr	r3, [r0, #8]
 8022c9a:	68da      	ldr	r2, [r3, #12]
 8022c9c:	6082      	str	r2, [r0, #8]
 8022c9e:	b510      	push	{r4, lr}
 8022ca0:	b102      	cbz	r2, 8022ca4 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0xc>
 8022ca2:	6050      	str	r0, [r2, #4]
 8022ca4:	6842      	ldr	r2, [r0, #4]
 8022ca6:	605a      	str	r2, [r3, #4]
 8022ca8:	680c      	ldr	r4, [r1, #0]
 8022caa:	4284      	cmp	r4, r0
 8022cac:	d103      	bne.n	8022cb6 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x1e>
 8022cae:	600b      	str	r3, [r1, #0]
 8022cb0:	60d8      	str	r0, [r3, #12]
 8022cb2:	6043      	str	r3, [r0, #4]
 8022cb4:	bd10      	pop	{r4, pc}
 8022cb6:	68d1      	ldr	r1, [r2, #12]
 8022cb8:	4281      	cmp	r1, r0
 8022cba:	bf0c      	ite	eq
 8022cbc:	60d3      	streq	r3, [r2, #12]
 8022cbe:	6093      	strne	r3, [r2, #8]
 8022cc0:	e7f6      	b.n	8022cb0 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x18>

08022cc2 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 8022cc2:	7803      	ldrb	r3, [r0, #0]
 8022cc4:	b933      	cbnz	r3, 8022cd4 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 8022cc6:	6843      	ldr	r3, [r0, #4]
 8022cc8:	685b      	ldr	r3, [r3, #4]
 8022cca:	4283      	cmp	r3, r0
 8022ccc:	d102      	bne.n	8022cd4 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 8022cce:	68db      	ldr	r3, [r3, #12]
 8022cd0:	4618      	mov	r0, r3
 8022cd2:	4770      	bx	lr
 8022cd4:	6882      	ldr	r2, [r0, #8]
 8022cd6:	b122      	cbz	r2, 8022ce2 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x20>
 8022cd8:	4613      	mov	r3, r2
 8022cda:	68d2      	ldr	r2, [r2, #12]
 8022cdc:	2a00      	cmp	r2, #0
 8022cde:	d1fb      	bne.n	8022cd8 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x16>
 8022ce0:	e7f6      	b.n	8022cd0 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0xe>
 8022ce2:	6843      	ldr	r3, [r0, #4]
 8022ce4:	689a      	ldr	r2, [r3, #8]
 8022ce6:	4282      	cmp	r2, r0
 8022ce8:	d1f2      	bne.n	8022cd0 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0xe>
 8022cea:	4618      	mov	r0, r3
 8022cec:	685b      	ldr	r3, [r3, #4]
 8022cee:	e7f9      	b.n	8022ce4 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x22>

08022cf0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>:
 8022cf0:	68c3      	ldr	r3, [r0, #12]
 8022cf2:	b123      	cbz	r3, 8022cfe <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0xe>
 8022cf4:	4618      	mov	r0, r3
 8022cf6:	689b      	ldr	r3, [r3, #8]
 8022cf8:	2b00      	cmp	r3, #0
 8022cfa:	d1fb      	bne.n	8022cf4 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x4>
 8022cfc:	4770      	bx	lr
 8022cfe:	6843      	ldr	r3, [r0, #4]
 8022d00:	68da      	ldr	r2, [r3, #12]
 8022d02:	4282      	cmp	r2, r0
 8022d04:	d102      	bne.n	8022d0c <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x1c>
 8022d06:	4618      	mov	r0, r3
 8022d08:	685b      	ldr	r3, [r3, #4]
 8022d0a:	e7f9      	b.n	8022d00 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x10>
 8022d0c:	68c2      	ldr	r2, [r0, #12]
 8022d0e:	4293      	cmp	r3, r2
 8022d10:	bf18      	it	ne
 8022d12:	4618      	movne	r0, r3
 8022d14:	4770      	bx	lr

08022d16 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 8022d16:	f7ff bfd4 	b.w	8022cc2 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>

08022d1a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>:
 8022d1a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022d1e:	461e      	mov	r6, r3
 8022d20:	f103 0804 	add.w	r8, r3, #4
 8022d24:	2300      	movs	r3, #0
 8022d26:	e9c1 3302 	strd	r3, r3, [r1, #8]
 8022d2a:	460c      	mov	r4, r1
 8022d2c:	604a      	str	r2, [r1, #4]
 8022d2e:	700b      	strb	r3, [r1, #0]
 8022d30:	b300      	cbz	r0, 8022d74 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x5a>
 8022d32:	4296      	cmp	r6, r2
 8022d34:	6091      	str	r1, [r2, #8]
 8022d36:	d118      	bne.n	8022d6a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x50>
 8022d38:	6071      	str	r1, [r6, #4]
 8022d3a:	60f4      	str	r4, [r6, #12]
 8022d3c:	2701      	movs	r7, #1
 8022d3e:	f04f 0900 	mov.w	r9, #0
 8022d42:	6873      	ldr	r3, [r6, #4]
 8022d44:	42a3      	cmp	r3, r4
 8022d46:	d03f      	beq.n	8022dc8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xae>
 8022d48:	6860      	ldr	r0, [r4, #4]
 8022d4a:	7802      	ldrb	r2, [r0, #0]
 8022d4c:	2a00      	cmp	r2, #0
 8022d4e:	d13c      	bne.n	8022dca <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xb0>
 8022d50:	6845      	ldr	r5, [r0, #4]
 8022d52:	68ab      	ldr	r3, [r5, #8]
 8022d54:	4298      	cmp	r0, r3
 8022d56:	d123      	bne.n	8022da0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x86>
 8022d58:	68eb      	ldr	r3, [r5, #12]
 8022d5a:	b183      	cbz	r3, 8022d7e <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x64>
 8022d5c:	781a      	ldrb	r2, [r3, #0]
 8022d5e:	b972      	cbnz	r2, 8022d7e <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x64>
 8022d60:	7007      	strb	r7, [r0, #0]
 8022d62:	701f      	strb	r7, [r3, #0]
 8022d64:	702a      	strb	r2, [r5, #0]
 8022d66:	462c      	mov	r4, r5
 8022d68:	e7eb      	b.n	8022d42 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x28>
 8022d6a:	68b3      	ldr	r3, [r6, #8]
 8022d6c:	4293      	cmp	r3, r2
 8022d6e:	d1e5      	bne.n	8022d3c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 8022d70:	60b1      	str	r1, [r6, #8]
 8022d72:	e7e3      	b.n	8022d3c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 8022d74:	60d1      	str	r1, [r2, #12]
 8022d76:	68f3      	ldr	r3, [r6, #12]
 8022d78:	4293      	cmp	r3, r2
 8022d7a:	d1df      	bne.n	8022d3c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 8022d7c:	e7dd      	b.n	8022d3a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x20>
 8022d7e:	68c3      	ldr	r3, [r0, #12]
 8022d80:	42a3      	cmp	r3, r4
 8022d82:	d103      	bne.n	8022d8c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x72>
 8022d84:	4641      	mov	r1, r8
 8022d86:	f7ff ff72 	bl	8022c6e <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 8022d8a:	4604      	mov	r4, r0
 8022d8c:	6863      	ldr	r3, [r4, #4]
 8022d8e:	4641      	mov	r1, r8
 8022d90:	701f      	strb	r7, [r3, #0]
 8022d92:	4628      	mov	r0, r5
 8022d94:	f885 9000 	strb.w	r9, [r5]
 8022d98:	f7ff ff7e 	bl	8022c98 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 8022d9c:	4625      	mov	r5, r4
 8022d9e:	e7e2      	b.n	8022d66 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x4c>
 8022da0:	b113      	cbz	r3, 8022da8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x8e>
 8022da2:	781a      	ldrb	r2, [r3, #0]
 8022da4:	2a00      	cmp	r2, #0
 8022da6:	d0db      	beq.n	8022d60 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x46>
 8022da8:	6883      	ldr	r3, [r0, #8]
 8022daa:	42a3      	cmp	r3, r4
 8022dac:	d103      	bne.n	8022db6 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x9c>
 8022dae:	4641      	mov	r1, r8
 8022db0:	f7ff ff72 	bl	8022c98 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 8022db4:	4604      	mov	r4, r0
 8022db6:	6863      	ldr	r3, [r4, #4]
 8022db8:	4641      	mov	r1, r8
 8022dba:	701f      	strb	r7, [r3, #0]
 8022dbc:	4628      	mov	r0, r5
 8022dbe:	f885 9000 	strb.w	r9, [r5]
 8022dc2:	f7ff ff54 	bl	8022c6e <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 8022dc6:	e7e9      	b.n	8022d9c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x82>
 8022dc8:	4623      	mov	r3, r4
 8022dca:	2201      	movs	r2, #1
 8022dcc:	701a      	strb	r2, [r3, #0]
 8022dce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08022dd2 <_ZSt17__throw_bad_allocv>:
 8022dd2:	b508      	push	{r3, lr}
 8022dd4:	f001 fa0e 	bl	80241f4 <abort>

08022dd8 <_ZSt19__throw_logic_errorPKc>:
 8022dd8:	b508      	push	{r3, lr}
 8022dda:	f001 fa0b 	bl	80241f4 <abort>

08022dde <_ZSt24__throw_invalid_argumentPKc>:
 8022dde:	b508      	push	{r3, lr}
 8022de0:	f001 fa08 	bl	80241f4 <abort>

08022de4 <_ZSt20__throw_length_errorPKc>:
 8022de4:	b508      	push	{r3, lr}
 8022de6:	f001 fa05 	bl	80241f4 <abort>

08022dea <_ZSt20__throw_out_of_rangePKc>:
 8022dea:	b508      	push	{r3, lr}
 8022dec:	f001 fa02 	bl	80241f4 <abort>

08022df0 <_ZNSt11char_traitsIcE7compareEPKcS2_j>:
 8022df0:	b10a      	cbz	r2, 8022df6 <_ZNSt11char_traitsIcE7compareEPKcS2_j+0x6>
 8022df2:	f001 ba79 	b.w	80242e8 <memcmp>
 8022df6:	4610      	mov	r0, r2
 8022df8:	4770      	bx	lr

08022dfa <_ZNSt11char_traitsIcE4copyEPcPKcj>:
 8022dfa:	b10a      	cbz	r2, 8022e00 <_ZNSt11char_traitsIcE4copyEPcPKcj+0x6>
 8022dfc:	f001 ba82 	b.w	8024304 <memcpy>
 8022e00:	4770      	bx	lr

08022e02 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
 8022e02:	6001      	str	r1, [r0, #0]
 8022e04:	4770      	bx	lr

08022e06 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
 8022e06:	6800      	ldr	r0, [r0, #0]
 8022e08:	4770      	bx	lr

08022e0a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
 8022e0a:	3008      	adds	r0, #8
 8022e0c:	4770      	bx	lr

08022e0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>:
 8022e0e:	6081      	str	r1, [r0, #8]
 8022e10:	4770      	bx	lr

08022e12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>:
 8022e12:	6803      	ldr	r3, [r0, #0]
 8022e14:	6041      	str	r1, [r0, #4]
 8022e16:	2200      	movs	r2, #0
 8022e18:	545a      	strb	r2, [r3, r1]
 8022e1a:	4770      	bx	lr

08022e1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
 8022e1c:	b508      	push	{r3, lr}
 8022e1e:	680b      	ldr	r3, [r1, #0]
 8022e20:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8022e24:	d302      	bcc.n	8022e2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x10>
 8022e26:	480d      	ldr	r0, [pc, #52]	; (8022e5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x40>)
 8022e28:	f7ff ffdc 	bl	8022de4 <_ZSt20__throw_length_errorPKc>
 8022e2c:	4293      	cmp	r3, r2
 8022e2e:	d90b      	bls.n	8022e48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 8022e30:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8022e34:	ea4f 0042 	mov.w	r0, r2, lsl #1
 8022e38:	d206      	bcs.n	8022e48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 8022e3a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8022e3e:	bf2a      	itet	cs
 8022e40:	f06f 4340 	mvncs.w	r3, #3221225472	; 0xc0000000
 8022e44:	6008      	strcc	r0, [r1, #0]
 8022e46:	600b      	strcs	r3, [r1, #0]
 8022e48:	6808      	ldr	r0, [r1, #0]
 8022e4a:	3001      	adds	r0, #1
 8022e4c:	d501      	bpl.n	8022e52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x36>
 8022e4e:	f7ff ffc0 	bl	8022dd2 <_ZSt17__throw_bad_allocv>
 8022e52:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8022e56:	f7ff bef7 	b.w	8022c48 <_Znwj>
 8022e5a:	bf00      	nop
 8022e5c:	08027f30 	.word	0x08027f30

08022e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
 8022e60:	f850 3b08 	ldr.w	r3, [r0], #8
 8022e64:	4283      	cmp	r3, r0
 8022e66:	d002      	beq.n	8022e6e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0xe>
 8022e68:	4618      	mov	r0, r3
 8022e6a:	f7ff beda 	b.w	8022c22 <_ZdlPv>
 8022e6e:	4770      	bx	lr

08022e70 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>:
 8022e70:	6840      	ldr	r0, [r0, #4]
 8022e72:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8022e76:	3901      	subs	r1, #1
 8022e78:	1a09      	subs	r1, r1, r0
 8022e7a:	4291      	cmp	r1, r2
 8022e7c:	b508      	push	{r3, lr}
 8022e7e:	d202      	bcs.n	8022e86 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc+0x16>
 8022e80:	4618      	mov	r0, r3
 8022e82:	f7ff ffaf 	bl	8022de4 <_ZSt20__throw_length_errorPKc>
 8022e86:	bd08      	pop	{r3, pc}

08022e88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
 8022e88:	2a01      	cmp	r2, #1
 8022e8a:	b510      	push	{r4, lr}
 8022e8c:	d102      	bne.n	8022e94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0xc>
 8022e8e:	780a      	ldrb	r2, [r1, #0]
 8022e90:	7002      	strb	r2, [r0, #0]
 8022e92:	bd10      	pop	{r4, pc}
 8022e94:	f7ff ffb1 	bl	8022dfa <_ZNSt11char_traitsIcE4copyEPcPKcj>
 8022e98:	e7fb      	b.n	8022e92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0xa>

08022e9a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>:
 8022e9a:	2a01      	cmp	r2, #1
 8022e9c:	b430      	push	{r4, r5}
 8022e9e:	d103      	bne.n	8022ea8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xe>
 8022ea0:	780b      	ldrb	r3, [r1, #0]
 8022ea2:	7003      	strb	r3, [r0, #0]
 8022ea4:	bc30      	pop	{r4, r5}
 8022ea6:	4770      	bx	lr
 8022ea8:	2a00      	cmp	r2, #0
 8022eaa:	d0fb      	beq.n	8022ea4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xa>
 8022eac:	bc30      	pop	{r4, r5}
 8022eae:	f001 ba37 	b.w	8024320 <memmove>

08022eb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
 8022eb2:	b508      	push	{r3, lr}
 8022eb4:	1a52      	subs	r2, r2, r1
 8022eb6:	f7ff ffe7 	bl	8022e88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022eba:	bd08      	pop	{r3, pc}

08022ebc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
 8022ebc:	b508      	push	{r3, lr}
 8022ebe:	1a52      	subs	r2, r2, r1
 8022ec0:	f7ff ffe2 	bl	8022e88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022ec4:	bd08      	pop	{r3, pc}

08022ec6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>:
 8022ec6:	4288      	cmp	r0, r1
 8022ec8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8022eca:	4604      	mov	r4, r0
 8022ecc:	460e      	mov	r6, r1
 8022ece:	d01e      	beq.n	8022f0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x48>
 8022ed0:	4603      	mov	r3, r0
 8022ed2:	684d      	ldr	r5, [r1, #4]
 8022ed4:	f853 2b08 	ldr.w	r2, [r3], #8
 8022ed8:	429a      	cmp	r2, r3
 8022eda:	bf14      	ite	ne
 8022edc:	6882      	ldrne	r2, [r0, #8]
 8022ede:	220f      	moveq	r2, #15
 8022ee0:	42aa      	cmp	r2, r5
 8022ee2:	d20a      	bcs.n	8022efa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x34>
 8022ee4:	a901      	add	r1, sp, #4
 8022ee6:	9501      	str	r5, [sp, #4]
 8022ee8:	f7ff ff98 	bl	8022e1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8022eec:	4607      	mov	r7, r0
 8022eee:	4620      	mov	r0, r4
 8022ef0:	f7ff ffb6 	bl	8022e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8022ef4:	9b01      	ldr	r3, [sp, #4]
 8022ef6:	6027      	str	r7, [r4, #0]
 8022ef8:	60a3      	str	r3, [r4, #8]
 8022efa:	b125      	cbz	r5, 8022f06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x40>
 8022efc:	6831      	ldr	r1, [r6, #0]
 8022efe:	6820      	ldr	r0, [r4, #0]
 8022f00:	462a      	mov	r2, r5
 8022f02:	f7ff ffc1 	bl	8022e88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022f06:	6823      	ldr	r3, [r4, #0]
 8022f08:	6065      	str	r5, [r4, #4]
 8022f0a:	2200      	movs	r2, #0
 8022f0c:	555a      	strb	r2, [r3, r5]
 8022f0e:	b003      	add	sp, #12
 8022f10:	bdf0      	pop	{r4, r5, r6, r7, pc}

08022f12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>:
 8022f12:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8022f16:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8022f18:	461f      	mov	r7, r3
 8022f1a:	6843      	ldr	r3, [r0, #4]
 8022f1c:	eb01 0802 	add.w	r8, r1, r2
 8022f20:	1ab2      	subs	r2, r6, r2
 8022f22:	441a      	add	r2, r3
 8022f24:	eba3 0908 	sub.w	r9, r3, r8
 8022f28:	4603      	mov	r3, r0
 8022f2a:	9201      	str	r2, [sp, #4]
 8022f2c:	f853 2b08 	ldr.w	r2, [r3], #8
 8022f30:	429a      	cmp	r2, r3
 8022f32:	bf18      	it	ne
 8022f34:	6882      	ldrne	r2, [r0, #8]
 8022f36:	460d      	mov	r5, r1
 8022f38:	bf08      	it	eq
 8022f3a:	220f      	moveq	r2, #15
 8022f3c:	a901      	add	r1, sp, #4
 8022f3e:	4604      	mov	r4, r0
 8022f40:	f7ff ff6c 	bl	8022e1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8022f44:	4682      	mov	sl, r0
 8022f46:	b11d      	cbz	r5, 8022f50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x3e>
 8022f48:	6821      	ldr	r1, [r4, #0]
 8022f4a:	462a      	mov	r2, r5
 8022f4c:	f7ff ff9c 	bl	8022e88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022f50:	b137      	cbz	r7, 8022f60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8022f52:	b12e      	cbz	r6, 8022f60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8022f54:	4632      	mov	r2, r6
 8022f56:	4639      	mov	r1, r7
 8022f58:	eb0a 0005 	add.w	r0, sl, r5
 8022f5c:	f7ff ff94 	bl	8022e88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022f60:	f1b9 0f00 	cmp.w	r9, #0
 8022f64:	d007      	beq.n	8022f76 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x64>
 8022f66:	6821      	ldr	r1, [r4, #0]
 8022f68:	4435      	add	r5, r6
 8022f6a:	464a      	mov	r2, r9
 8022f6c:	4441      	add	r1, r8
 8022f6e:	eb0a 0005 	add.w	r0, sl, r5
 8022f72:	f7ff ff89 	bl	8022e88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022f76:	4620      	mov	r0, r4
 8022f78:	f7ff ff72 	bl	8022e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8022f7c:	9b01      	ldr	r3, [sp, #4]
 8022f7e:	f8c4 a000 	str.w	sl, [r4]
 8022f82:	60a3      	str	r3, [r4, #8]
 8022f84:	b002      	add	sp, #8
 8022f86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08022f8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>:
 8022f8a:	b538      	push	{r3, r4, r5, lr}
 8022f8c:	4604      	mov	r4, r0
 8022f8e:	4615      	mov	r5, r2
 8022f90:	4608      	mov	r0, r1
 8022f92:	4411      	add	r1, r2
 8022f94:	6862      	ldr	r2, [r4, #4]
 8022f96:	1a52      	subs	r2, r2, r1
 8022f98:	d005      	beq.n	8022fa6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 8022f9a:	b125      	cbz	r5, 8022fa6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 8022f9c:	6823      	ldr	r3, [r4, #0]
 8022f9e:	4419      	add	r1, r3
 8022fa0:	4418      	add	r0, r3
 8022fa2:	f7ff ff7a 	bl	8022e9a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8022fa6:	6862      	ldr	r2, [r4, #4]
 8022fa8:	6823      	ldr	r3, [r4, #0]
 8022faa:	1b55      	subs	r5, r2, r5
 8022fac:	2200      	movs	r2, #0
 8022fae:	6065      	str	r5, [r4, #4]
 8022fb0:	555a      	strb	r2, [r3, r5]
 8022fb2:	bd38      	pop	{r3, r4, r5, pc}

08022fb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
 8022fb4:	f100 0208 	add.w	r2, r0, #8
 8022fb8:	6002      	str	r2, [r0, #0]
 8022fba:	2200      	movs	r2, #0
 8022fbc:	6042      	str	r2, [r0, #4]
 8022fbe:	7202      	strb	r2, [r0, #8]
 8022fc0:	4770      	bx	lr

08022fc2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
 8022fc2:	b570      	push	{r4, r5, r6, lr}
 8022fc4:	4604      	mov	r4, r0
 8022fc6:	460e      	mov	r6, r1
 8022fc8:	3008      	adds	r0, #8
 8022fca:	6020      	str	r0, [r4, #0]
 8022fcc:	f856 3b08 	ldr.w	r3, [r6], #8
 8022fd0:	429e      	cmp	r6, r3
 8022fd2:	460d      	mov	r5, r1
 8022fd4:	d10b      	bne.n	8022fee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x2c>
 8022fd6:	2210      	movs	r2, #16
 8022fd8:	4631      	mov	r1, r6
 8022fda:	f7ff ff0e 	bl	8022dfa <_ZNSt11char_traitsIcE4copyEPcPKcj>
 8022fde:	686b      	ldr	r3, [r5, #4]
 8022fe0:	6063      	str	r3, [r4, #4]
 8022fe2:	2300      	movs	r3, #0
 8022fe4:	602e      	str	r6, [r5, #0]
 8022fe6:	606b      	str	r3, [r5, #4]
 8022fe8:	722b      	strb	r3, [r5, #8]
 8022fea:	4620      	mov	r0, r4
 8022fec:	bd70      	pop	{r4, r5, r6, pc}
 8022fee:	6023      	str	r3, [r4, #0]
 8022ff0:	688b      	ldr	r3, [r1, #8]
 8022ff2:	60a3      	str	r3, [r4, #8]
 8022ff4:	e7f3      	b.n	8022fde <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x1c>

08022ff6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
 8022ff6:	b510      	push	{r4, lr}
 8022ff8:	4604      	mov	r4, r0
 8022ffa:	f7ff ff31 	bl	8022e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8022ffe:	4620      	mov	r0, r4
 8023000:	bd10      	pop	{r4, pc}

08023002 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>:
 8023002:	b510      	push	{r4, lr}
 8023004:	4604      	mov	r4, r0
 8023006:	f7ff ff5e 	bl	8022ec6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 802300a:	4620      	mov	r0, r4
 802300c:	bd10      	pop	{r4, pc}

0802300e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
 802300e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023010:	460d      	mov	r5, r1
 8023012:	f851 3b08 	ldr.w	r3, [r1], #8
 8023016:	686a      	ldr	r2, [r5, #4]
 8023018:	4299      	cmp	r1, r3
 802301a:	4604      	mov	r4, r0
 802301c:	6800      	ldr	r0, [r0, #0]
 802301e:	d10d      	bne.n	802303c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x2e>
 8023020:	b10a      	cbz	r2, 8023026 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x18>
 8023022:	f7ff ff31 	bl	8022e88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8023026:	686b      	ldr	r3, [r5, #4]
 8023028:	6822      	ldr	r2, [r4, #0]
 802302a:	6063      	str	r3, [r4, #4]
 802302c:	2100      	movs	r1, #0
 802302e:	54d1      	strb	r1, [r2, r3]
 8023030:	682a      	ldr	r2, [r5, #0]
 8023032:	2300      	movs	r3, #0
 8023034:	606b      	str	r3, [r5, #4]
 8023036:	7013      	strb	r3, [r2, #0]
 8023038:	4620      	mov	r0, r4
 802303a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802303c:	e9c4 3200 	strd	r3, r2, [r4]
 8023040:	f104 0708 	add.w	r7, r4, #8
 8023044:	42b8      	cmp	r0, r7
 8023046:	68ab      	ldr	r3, [r5, #8]
 8023048:	bf18      	it	ne
 802304a:	68a6      	ldrne	r6, [r4, #8]
 802304c:	60a3      	str	r3, [r4, #8]
 802304e:	bf08      	it	eq
 8023050:	2000      	moveq	r0, #0
 8023052:	b110      	cbz	r0, 802305a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x4c>
 8023054:	6028      	str	r0, [r5, #0]
 8023056:	60ae      	str	r6, [r5, #8]
 8023058:	e7ea      	b.n	8023030 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>
 802305a:	6029      	str	r1, [r5, #0]
 802305c:	e7e8      	b.n	8023030 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>

0802305e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
 802305e:	6840      	ldr	r0, [r0, #4]
 8023060:	4770      	bx	lr

08023062 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
 8023062:	6840      	ldr	r0, [r0, #4]
 8023064:	4770      	bx	lr

08023066 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>:
 8023066:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8023068:	4605      	mov	r5, r0
 802306a:	6843      	ldr	r3, [r0, #4]
 802306c:	4299      	cmp	r1, r3
 802306e:	bf2c      	ite	cs
 8023070:	9101      	strcs	r1, [sp, #4]
 8023072:	9301      	strcc	r3, [sp, #4]
 8023074:	f855 1b08 	ldr.w	r1, [r5], #8
 8023078:	428d      	cmp	r5, r1
 802307a:	bf18      	it	ne
 802307c:	6882      	ldrne	r2, [r0, #8]
 802307e:	4604      	mov	r4, r0
 8023080:	9801      	ldr	r0, [sp, #4]
 8023082:	bf08      	it	eq
 8023084:	220f      	moveq	r2, #15
 8023086:	4290      	cmp	r0, r2
 8023088:	d012      	beq.n	80230b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 802308a:	d801      	bhi.n	8023090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x2a>
 802308c:	280f      	cmp	r0, #15
 802308e:	d911      	bls.n	80230b4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4e>
 8023090:	a901      	add	r1, sp, #4
 8023092:	4620      	mov	r0, r4
 8023094:	f7ff fec2 	bl	8022e1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8023098:	6862      	ldr	r2, [r4, #4]
 802309a:	6821      	ldr	r1, [r4, #0]
 802309c:	3201      	adds	r2, #1
 802309e:	4605      	mov	r5, r0
 80230a0:	f7ff fef2 	bl	8022e88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80230a4:	4620      	mov	r0, r4
 80230a6:	f7ff fedb 	bl	8022e60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80230aa:	9b01      	ldr	r3, [sp, #4]
 80230ac:	6025      	str	r5, [r4, #0]
 80230ae:	60a3      	str	r3, [r4, #8]
 80230b0:	b003      	add	sp, #12
 80230b2:	bd30      	pop	{r4, r5, pc}
 80230b4:	428d      	cmp	r5, r1
 80230b6:	d0fb      	beq.n	80230b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 80230b8:	1c5a      	adds	r2, r3, #1
 80230ba:	4628      	mov	r0, r5
 80230bc:	f7ff fee4 	bl	8022e88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80230c0:	6820      	ldr	r0, [r4, #0]
 80230c2:	f7ff fdae 	bl	8022c22 <_ZdlPv>
 80230c6:	6025      	str	r5, [r4, #0]
 80230c8:	e7f2      	b.n	80230b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>

080230ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
 80230ca:	6843      	ldr	r3, [r0, #4]
 80230cc:	6800      	ldr	r0, [r0, #0]
 80230ce:	3b01      	subs	r3, #1
 80230d0:	4418      	add	r0, r3
 80230d2:	4770      	bx	lr

080230d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>:
 80230d4:	4603      	mov	r3, r0
 80230d6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80230d8:	f853 2b08 	ldr.w	r2, [r3], #8
 80230dc:	6846      	ldr	r6, [r0, #4]
 80230de:	429a      	cmp	r2, r3
 80230e0:	bf18      	it	ne
 80230e2:	6883      	ldrne	r3, [r0, #8]
 80230e4:	f106 0501 	add.w	r5, r6, #1
 80230e8:	bf08      	it	eq
 80230ea:	230f      	moveq	r3, #15
 80230ec:	429d      	cmp	r5, r3
 80230ee:	4604      	mov	r4, r0
 80230f0:	460f      	mov	r7, r1
 80230f2:	d906      	bls.n	8023102 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x2e>
 80230f4:	2301      	movs	r3, #1
 80230f6:	9300      	str	r3, [sp, #0]
 80230f8:	2300      	movs	r3, #0
 80230fa:	461a      	mov	r2, r3
 80230fc:	4631      	mov	r1, r6
 80230fe:	f7ff ff08 	bl	8022f12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8023102:	6823      	ldr	r3, [r4, #0]
 8023104:	559f      	strb	r7, [r3, r6]
 8023106:	6823      	ldr	r3, [r4, #0]
 8023108:	6065      	str	r5, [r4, #4]
 802310a:	2200      	movs	r2, #0
 802310c:	555a      	strb	r2, [r3, r5]
 802310e:	b003      	add	sp, #12
 8023110:	bdf0      	pop	{r4, r5, r6, r7, pc}

08023112 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>:
 8023112:	b508      	push	{r3, lr}
 8023114:	6841      	ldr	r1, [r0, #4]
 8023116:	2201      	movs	r2, #1
 8023118:	3901      	subs	r1, #1
 802311a:	f7ff ff36 	bl	8022f8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
 802311e:	bd08      	pop	{r3, pc}

08023120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>:
 8023120:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023122:	4604      	mov	r4, r0
 8023124:	4623      	mov	r3, r4
 8023126:	6840      	ldr	r0, [r0, #4]
 8023128:	f853 6b08 	ldr.w	r6, [r3], #8
 802312c:	429e      	cmp	r6, r3
 802312e:	bf18      	it	ne
 8023130:	68a3      	ldrne	r3, [r4, #8]
 8023132:	eb00 0502 	add.w	r5, r0, r2
 8023136:	bf08      	it	eq
 8023138:	230f      	moveq	r3, #15
 802313a:	429d      	cmp	r5, r3
 802313c:	d80a      	bhi.n	8023154 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x34>
 802313e:	b112      	cbz	r2, 8023146 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>
 8023140:	4430      	add	r0, r6
 8023142:	f7ff fea1 	bl	8022e88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8023146:	6823      	ldr	r3, [r4, #0]
 8023148:	6065      	str	r5, [r4, #4]
 802314a:	2200      	movs	r2, #0
 802314c:	4620      	mov	r0, r4
 802314e:	555a      	strb	r2, [r3, r5]
 8023150:	b002      	add	sp, #8
 8023152:	bd70      	pop	{r4, r5, r6, pc}
 8023154:	9200      	str	r2, [sp, #0]
 8023156:	460b      	mov	r3, r1
 8023158:	2200      	movs	r2, #0
 802315a:	4601      	mov	r1, r0
 802315c:	4620      	mov	r0, r4
 802315e:	f7ff fed8 	bl	8022f12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8023162:	e7f0      	b.n	8023146 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>

08023164 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>:
 8023164:	b508      	push	{r3, lr}
 8023166:	e9d1 1200 	ldrd	r1, r2, [r1]
 802316a:	f7ff ffd9 	bl	8023120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 802316e:	bd08      	pop	{r3, pc}

08023170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>:
 8023170:	b508      	push	{r3, lr}
 8023172:	f7ff fff7 	bl	8023164 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 8023176:	bd08      	pop	{r3, pc}

08023178 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>:
 8023178:	b570      	push	{r4, r5, r6, lr}
 802317a:	4b06      	ldr	r3, [pc, #24]	; (8023194 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj+0x1c>)
 802317c:	4604      	mov	r4, r0
 802317e:	460d      	mov	r5, r1
 8023180:	4616      	mov	r6, r2
 8023182:	2100      	movs	r1, #0
 8023184:	f7ff fe74 	bl	8022e70 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8023188:	4632      	mov	r2, r6
 802318a:	4629      	mov	r1, r5
 802318c:	4620      	mov	r0, r4
 802318e:	f7ff ffc7 	bl	8023120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8023192:	bd70      	pop	{r4, r5, r6, pc}
 8023194:	08027f48 	.word	0x08027f48

08023198 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
 8023198:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802319a:	4604      	mov	r4, r0
 802319c:	4608      	mov	r0, r1
 802319e:	460d      	mov	r5, r1
 80231a0:	f7dd f886 	bl	80002b0 <strlen>
 80231a4:	4b06      	ldr	r3, [pc, #24]	; (80231c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc+0x28>)
 80231a6:	9001      	str	r0, [sp, #4]
 80231a8:	4602      	mov	r2, r0
 80231aa:	2100      	movs	r1, #0
 80231ac:	4620      	mov	r0, r4
 80231ae:	f7ff fe5f 	bl	8022e70 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 80231b2:	9a01      	ldr	r2, [sp, #4]
 80231b4:	4629      	mov	r1, r5
 80231b6:	4620      	mov	r0, r4
 80231b8:	f7ff ffb2 	bl	8023120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 80231bc:	b003      	add	sp, #12
 80231be:	bd30      	pop	{r4, r5, pc}
 80231c0:	08027f48 	.word	0x08027f48

080231c4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
 80231c4:	6800      	ldr	r0, [r0, #0]
 80231c6:	4770      	bx	lr

080231c8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>:
 80231c8:	b538      	push	{r3, r4, r5, lr}
 80231ca:	6845      	ldr	r5, [r0, #4]
 80231cc:	684c      	ldr	r4, [r1, #4]
 80231ce:	6800      	ldr	r0, [r0, #0]
 80231d0:	6809      	ldr	r1, [r1, #0]
 80231d2:	42a5      	cmp	r5, r4
 80231d4:	462a      	mov	r2, r5
 80231d6:	bf28      	it	cs
 80231d8:	4622      	movcs	r2, r4
 80231da:	f7ff fe09 	bl	8022df0 <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 80231de:	b900      	cbnz	r0, 80231e2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x1a>
 80231e0:	1b28      	subs	r0, r5, r4
 80231e2:	bd38      	pop	{r3, r4, r5, pc}

080231e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>:
 80231e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80231e6:	6846      	ldr	r6, [r0, #4]
 80231e8:	9101      	str	r1, [sp, #4]
 80231ea:	4605      	mov	r5, r0
 80231ec:	4608      	mov	r0, r1
 80231ee:	f7dd f85f 	bl	80002b0 <strlen>
 80231f2:	4286      	cmp	r6, r0
 80231f4:	4604      	mov	r4, r0
 80231f6:	4632      	mov	r2, r6
 80231f8:	9901      	ldr	r1, [sp, #4]
 80231fa:	bf28      	it	cs
 80231fc:	4602      	movcs	r2, r0
 80231fe:	6828      	ldr	r0, [r5, #0]
 8023200:	f7ff fdf6 	bl	8022df0 <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 8023204:	b900      	cbnz	r0, 8023208 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x24>
 8023206:	1b30      	subs	r0, r6, r4
 8023208:	b002      	add	sp, #8
 802320a:	bd70      	pop	{r4, r5, r6, pc}

0802320c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>:
 802320c:	6001      	str	r1, [r0, #0]
 802320e:	4770      	bx	lr

08023210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
 8023210:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023212:	4604      	mov	r4, r0
 8023214:	4616      	mov	r6, r2
 8023216:	460d      	mov	r5, r1
 8023218:	b919      	cbnz	r1, 8023222 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x12>
 802321a:	b112      	cbz	r2, 8023222 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x12>
 802321c:	480d      	ldr	r0, [pc, #52]	; (8023254 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x44>)
 802321e:	f7ff fddb 	bl	8022dd8 <_ZSt19__throw_logic_errorPKc>
 8023222:	1b73      	subs	r3, r6, r5
 8023224:	2b0f      	cmp	r3, #15
 8023226:	9301      	str	r3, [sp, #4]
 8023228:	d907      	bls.n	802323a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x2a>
 802322a:	2200      	movs	r2, #0
 802322c:	a901      	add	r1, sp, #4
 802322e:	4620      	mov	r0, r4
 8023230:	f7ff fdf4 	bl	8022e1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8023234:	9b01      	ldr	r3, [sp, #4]
 8023236:	6020      	str	r0, [r4, #0]
 8023238:	60a3      	str	r3, [r4, #8]
 802323a:	4632      	mov	r2, r6
 802323c:	4629      	mov	r1, r5
 802323e:	6820      	ldr	r0, [r4, #0]
 8023240:	f7ff fe37 	bl	8022eb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>
 8023244:	9b01      	ldr	r3, [sp, #4]
 8023246:	6822      	ldr	r2, [r4, #0]
 8023248:	6063      	str	r3, [r4, #4]
 802324a:	2100      	movs	r1, #0
 802324c:	54d1      	strb	r1, [r2, r3]
 802324e:	b002      	add	sp, #8
 8023250:	bd70      	pop	{r4, r5, r6, pc}
 8023252:	bf00      	nop
 8023254:	08027f5d 	.word	0x08027f5d

08023258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>:
 8023258:	b538      	push	{r3, r4, r5, lr}
 802325a:	f100 0308 	add.w	r3, r0, #8
 802325e:	6003      	str	r3, [r0, #0]
 8023260:	e9d1 5200 	ldrd	r5, r2, [r1]
 8023264:	4604      	mov	r4, r0
 8023266:	f04f 0300 	mov.w	r3, #0
 802326a:	442a      	add	r2, r5
 802326c:	4629      	mov	r1, r5
 802326e:	f7ff ffcf 	bl	8023210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
 8023272:	4620      	mov	r0, r4
 8023274:	bd38      	pop	{r3, r4, r5, pc}
	...

08023278 <_ZSt15get_new_handlerv>:
 8023278:	4b02      	ldr	r3, [pc, #8]	; (8023284 <_ZSt15get_new_handlerv+0xc>)
 802327a:	6818      	ldr	r0, [r3, #0]
 802327c:	f3bf 8f5b 	dmb	ish
 8023280:	4770      	bx	lr
 8023282:	bf00      	nop
 8023284:	20000694 	.word	0x20000694

08023288 <pow>:
 8023288:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802328c:	ec59 8b10 	vmov	r8, r9, d0
 8023290:	ec57 6b11 	vmov	r6, r7, d1
 8023294:	f000 f8a8 	bl	80233e8 <__ieee754_pow>
 8023298:	4b4e      	ldr	r3, [pc, #312]	; (80233d4 <pow+0x14c>)
 802329a:	f993 3000 	ldrsb.w	r3, [r3]
 802329e:	3301      	adds	r3, #1
 80232a0:	ec55 4b10 	vmov	r4, r5, d0
 80232a4:	d015      	beq.n	80232d2 <pow+0x4a>
 80232a6:	4632      	mov	r2, r6
 80232a8:	463b      	mov	r3, r7
 80232aa:	4630      	mov	r0, r6
 80232ac:	4639      	mov	r1, r7
 80232ae:	f7dd fc5d 	bl	8000b6c <__aeabi_dcmpun>
 80232b2:	b970      	cbnz	r0, 80232d2 <pow+0x4a>
 80232b4:	4642      	mov	r2, r8
 80232b6:	464b      	mov	r3, r9
 80232b8:	4640      	mov	r0, r8
 80232ba:	4649      	mov	r1, r9
 80232bc:	f7dd fc56 	bl	8000b6c <__aeabi_dcmpun>
 80232c0:	2200      	movs	r2, #0
 80232c2:	2300      	movs	r3, #0
 80232c4:	b148      	cbz	r0, 80232da <pow+0x52>
 80232c6:	4630      	mov	r0, r6
 80232c8:	4639      	mov	r1, r7
 80232ca:	f7dd fc1d 	bl	8000b08 <__aeabi_dcmpeq>
 80232ce:	2800      	cmp	r0, #0
 80232d0:	d17d      	bne.n	80233ce <pow+0x146>
 80232d2:	ec45 4b10 	vmov	d0, r4, r5
 80232d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80232da:	4640      	mov	r0, r8
 80232dc:	4649      	mov	r1, r9
 80232de:	f7dd fc13 	bl	8000b08 <__aeabi_dcmpeq>
 80232e2:	b1e0      	cbz	r0, 802331e <pow+0x96>
 80232e4:	2200      	movs	r2, #0
 80232e6:	2300      	movs	r3, #0
 80232e8:	4630      	mov	r0, r6
 80232ea:	4639      	mov	r1, r7
 80232ec:	f7dd fc0c 	bl	8000b08 <__aeabi_dcmpeq>
 80232f0:	2800      	cmp	r0, #0
 80232f2:	d16c      	bne.n	80233ce <pow+0x146>
 80232f4:	ec47 6b10 	vmov	d0, r6, r7
 80232f8:	f000 fe55 	bl	8023fa6 <finite>
 80232fc:	2800      	cmp	r0, #0
 80232fe:	d0e8      	beq.n	80232d2 <pow+0x4a>
 8023300:	2200      	movs	r2, #0
 8023302:	2300      	movs	r3, #0
 8023304:	4630      	mov	r0, r6
 8023306:	4639      	mov	r1, r7
 8023308:	f7dd fc08 	bl	8000b1c <__aeabi_dcmplt>
 802330c:	2800      	cmp	r0, #0
 802330e:	d0e0      	beq.n	80232d2 <pow+0x4a>
 8023310:	f000 ff7e 	bl	8024210 <__errno>
 8023314:	2321      	movs	r3, #33	; 0x21
 8023316:	6003      	str	r3, [r0, #0]
 8023318:	2400      	movs	r4, #0
 802331a:	4d2f      	ldr	r5, [pc, #188]	; (80233d8 <pow+0x150>)
 802331c:	e7d9      	b.n	80232d2 <pow+0x4a>
 802331e:	ec45 4b10 	vmov	d0, r4, r5
 8023322:	f000 fe40 	bl	8023fa6 <finite>
 8023326:	bbb8      	cbnz	r0, 8023398 <pow+0x110>
 8023328:	ec49 8b10 	vmov	d0, r8, r9
 802332c:	f000 fe3b 	bl	8023fa6 <finite>
 8023330:	b390      	cbz	r0, 8023398 <pow+0x110>
 8023332:	ec47 6b10 	vmov	d0, r6, r7
 8023336:	f000 fe36 	bl	8023fa6 <finite>
 802333a:	b368      	cbz	r0, 8023398 <pow+0x110>
 802333c:	4622      	mov	r2, r4
 802333e:	462b      	mov	r3, r5
 8023340:	4620      	mov	r0, r4
 8023342:	4629      	mov	r1, r5
 8023344:	f7dd fc12 	bl	8000b6c <__aeabi_dcmpun>
 8023348:	b160      	cbz	r0, 8023364 <pow+0xdc>
 802334a:	f000 ff61 	bl	8024210 <__errno>
 802334e:	2321      	movs	r3, #33	; 0x21
 8023350:	6003      	str	r3, [r0, #0]
 8023352:	2200      	movs	r2, #0
 8023354:	2300      	movs	r3, #0
 8023356:	4610      	mov	r0, r2
 8023358:	4619      	mov	r1, r3
 802335a:	f7dd fa97 	bl	800088c <__aeabi_ddiv>
 802335e:	4604      	mov	r4, r0
 8023360:	460d      	mov	r5, r1
 8023362:	e7b6      	b.n	80232d2 <pow+0x4a>
 8023364:	f000 ff54 	bl	8024210 <__errno>
 8023368:	2322      	movs	r3, #34	; 0x22
 802336a:	6003      	str	r3, [r0, #0]
 802336c:	2200      	movs	r2, #0
 802336e:	2300      	movs	r3, #0
 8023370:	4640      	mov	r0, r8
 8023372:	4649      	mov	r1, r9
 8023374:	f7dd fbd2 	bl	8000b1c <__aeabi_dcmplt>
 8023378:	2400      	movs	r4, #0
 802337a:	b158      	cbz	r0, 8023394 <pow+0x10c>
 802337c:	ec47 6b10 	vmov	d0, r6, r7
 8023380:	f000 fe26 	bl	8023fd0 <rint>
 8023384:	4632      	mov	r2, r6
 8023386:	ec51 0b10 	vmov	r0, r1, d0
 802338a:	463b      	mov	r3, r7
 802338c:	f7dd fbbc 	bl	8000b08 <__aeabi_dcmpeq>
 8023390:	2800      	cmp	r0, #0
 8023392:	d0c2      	beq.n	802331a <pow+0x92>
 8023394:	4d11      	ldr	r5, [pc, #68]	; (80233dc <pow+0x154>)
 8023396:	e79c      	b.n	80232d2 <pow+0x4a>
 8023398:	2200      	movs	r2, #0
 802339a:	2300      	movs	r3, #0
 802339c:	4620      	mov	r0, r4
 802339e:	4629      	mov	r1, r5
 80233a0:	f7dd fbb2 	bl	8000b08 <__aeabi_dcmpeq>
 80233a4:	2800      	cmp	r0, #0
 80233a6:	d094      	beq.n	80232d2 <pow+0x4a>
 80233a8:	ec49 8b10 	vmov	d0, r8, r9
 80233ac:	f000 fdfb 	bl	8023fa6 <finite>
 80233b0:	2800      	cmp	r0, #0
 80233b2:	d08e      	beq.n	80232d2 <pow+0x4a>
 80233b4:	ec47 6b10 	vmov	d0, r6, r7
 80233b8:	f000 fdf5 	bl	8023fa6 <finite>
 80233bc:	2800      	cmp	r0, #0
 80233be:	d088      	beq.n	80232d2 <pow+0x4a>
 80233c0:	f000 ff26 	bl	8024210 <__errno>
 80233c4:	2322      	movs	r3, #34	; 0x22
 80233c6:	6003      	str	r3, [r0, #0]
 80233c8:	2400      	movs	r4, #0
 80233ca:	2500      	movs	r5, #0
 80233cc:	e781      	b.n	80232d2 <pow+0x4a>
 80233ce:	4d04      	ldr	r5, [pc, #16]	; (80233e0 <pow+0x158>)
 80233d0:	2400      	movs	r4, #0
 80233d2:	e77e      	b.n	80232d2 <pow+0x4a>
 80233d4:	2000000d 	.word	0x2000000d
 80233d8:	fff00000 	.word	0xfff00000
 80233dc:	7ff00000 	.word	0x7ff00000
 80233e0:	3ff00000 	.word	0x3ff00000
 80233e4:	00000000 	.word	0x00000000

080233e8 <__ieee754_pow>:
 80233e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80233ec:	ed2d 8b06 	vpush	{d8-d10}
 80233f0:	b08d      	sub	sp, #52	; 0x34
 80233f2:	ed8d 1b02 	vstr	d1, [sp, #8]
 80233f6:	e9dd 0702 	ldrd	r0, r7, [sp, #8]
 80233fa:	f027 4600 	bic.w	r6, r7, #2147483648	; 0x80000000
 80233fe:	ea56 0100 	orrs.w	r1, r6, r0
 8023402:	ec53 2b10 	vmov	r2, r3, d0
 8023406:	f000 84d1 	beq.w	8023dac <__ieee754_pow+0x9c4>
 802340a:	497f      	ldr	r1, [pc, #508]	; (8023608 <__ieee754_pow+0x220>)
 802340c:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
 8023410:	428c      	cmp	r4, r1
 8023412:	ee10 8a10 	vmov	r8, s0
 8023416:	4699      	mov	r9, r3
 8023418:	dc09      	bgt.n	802342e <__ieee754_pow+0x46>
 802341a:	d103      	bne.n	8023424 <__ieee754_pow+0x3c>
 802341c:	b97a      	cbnz	r2, 802343e <__ieee754_pow+0x56>
 802341e:	42a6      	cmp	r6, r4
 8023420:	dd02      	ble.n	8023428 <__ieee754_pow+0x40>
 8023422:	e00c      	b.n	802343e <__ieee754_pow+0x56>
 8023424:	428e      	cmp	r6, r1
 8023426:	dc02      	bgt.n	802342e <__ieee754_pow+0x46>
 8023428:	428e      	cmp	r6, r1
 802342a:	d110      	bne.n	802344e <__ieee754_pow+0x66>
 802342c:	b178      	cbz	r0, 802344e <__ieee754_pow+0x66>
 802342e:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8023432:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8023436:	ea54 0308 	orrs.w	r3, r4, r8
 802343a:	f000 84b7 	beq.w	8023dac <__ieee754_pow+0x9c4>
 802343e:	4873      	ldr	r0, [pc, #460]	; (802360c <__ieee754_pow+0x224>)
 8023440:	b00d      	add	sp, #52	; 0x34
 8023442:	ecbd 8b06 	vpop	{d8-d10}
 8023446:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802344a:	f000 bdb9 	b.w	8023fc0 <nan>
 802344e:	f1b9 0f00 	cmp.w	r9, #0
 8023452:	da36      	bge.n	80234c2 <__ieee754_pow+0xda>
 8023454:	496e      	ldr	r1, [pc, #440]	; (8023610 <__ieee754_pow+0x228>)
 8023456:	428e      	cmp	r6, r1
 8023458:	dc51      	bgt.n	80234fe <__ieee754_pow+0x116>
 802345a:	f1a1 7154 	sub.w	r1, r1, #55574528	; 0x3500000
 802345e:	428e      	cmp	r6, r1
 8023460:	f340 84af 	ble.w	8023dc2 <__ieee754_pow+0x9da>
 8023464:	1531      	asrs	r1, r6, #20
 8023466:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 802346a:	2914      	cmp	r1, #20
 802346c:	dd0f      	ble.n	802348e <__ieee754_pow+0xa6>
 802346e:	f1c1 0134 	rsb	r1, r1, #52	; 0x34
 8023472:	fa20 fc01 	lsr.w	ip, r0, r1
 8023476:	fa0c f101 	lsl.w	r1, ip, r1
 802347a:	4281      	cmp	r1, r0
 802347c:	f040 84a1 	bne.w	8023dc2 <__ieee754_pow+0x9da>
 8023480:	f00c 0c01 	and.w	ip, ip, #1
 8023484:	f1cc 0102 	rsb	r1, ip, #2
 8023488:	9100      	str	r1, [sp, #0]
 802348a:	b180      	cbz	r0, 80234ae <__ieee754_pow+0xc6>
 802348c:	e059      	b.n	8023542 <__ieee754_pow+0x15a>
 802348e:	2800      	cmp	r0, #0
 8023490:	d155      	bne.n	802353e <__ieee754_pow+0x156>
 8023492:	f1c1 0114 	rsb	r1, r1, #20
 8023496:	fa46 fc01 	asr.w	ip, r6, r1
 802349a:	fa0c f101 	lsl.w	r1, ip, r1
 802349e:	42b1      	cmp	r1, r6
 80234a0:	f040 848c 	bne.w	8023dbc <__ieee754_pow+0x9d4>
 80234a4:	f00c 0c01 	and.w	ip, ip, #1
 80234a8:	f1cc 0102 	rsb	r1, ip, #2
 80234ac:	9100      	str	r1, [sp, #0]
 80234ae:	4959      	ldr	r1, [pc, #356]	; (8023614 <__ieee754_pow+0x22c>)
 80234b0:	428e      	cmp	r6, r1
 80234b2:	d12d      	bne.n	8023510 <__ieee754_pow+0x128>
 80234b4:	2f00      	cmp	r7, #0
 80234b6:	da79      	bge.n	80235ac <__ieee754_pow+0x1c4>
 80234b8:	4956      	ldr	r1, [pc, #344]	; (8023614 <__ieee754_pow+0x22c>)
 80234ba:	2000      	movs	r0, #0
 80234bc:	f7dd f9e6 	bl	800088c <__aeabi_ddiv>
 80234c0:	e016      	b.n	80234f0 <__ieee754_pow+0x108>
 80234c2:	2100      	movs	r1, #0
 80234c4:	9100      	str	r1, [sp, #0]
 80234c6:	2800      	cmp	r0, #0
 80234c8:	d13b      	bne.n	8023542 <__ieee754_pow+0x15a>
 80234ca:	494f      	ldr	r1, [pc, #316]	; (8023608 <__ieee754_pow+0x220>)
 80234cc:	428e      	cmp	r6, r1
 80234ce:	d1ee      	bne.n	80234ae <__ieee754_pow+0xc6>
 80234d0:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 80234d4:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 80234d8:	ea53 0308 	orrs.w	r3, r3, r8
 80234dc:	f000 8466 	beq.w	8023dac <__ieee754_pow+0x9c4>
 80234e0:	4b4d      	ldr	r3, [pc, #308]	; (8023618 <__ieee754_pow+0x230>)
 80234e2:	429c      	cmp	r4, r3
 80234e4:	dd0d      	ble.n	8023502 <__ieee754_pow+0x11a>
 80234e6:	2f00      	cmp	r7, #0
 80234e8:	f280 8464 	bge.w	8023db4 <__ieee754_pow+0x9cc>
 80234ec:	2000      	movs	r0, #0
 80234ee:	2100      	movs	r1, #0
 80234f0:	ec41 0b10 	vmov	d0, r0, r1
 80234f4:	b00d      	add	sp, #52	; 0x34
 80234f6:	ecbd 8b06 	vpop	{d8-d10}
 80234fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80234fe:	2102      	movs	r1, #2
 8023500:	e7e0      	b.n	80234c4 <__ieee754_pow+0xdc>
 8023502:	2f00      	cmp	r7, #0
 8023504:	daf2      	bge.n	80234ec <__ieee754_pow+0x104>
 8023506:	e9dd 0302 	ldrd	r0, r3, [sp, #8]
 802350a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 802350e:	e7ef      	b.n	80234f0 <__ieee754_pow+0x108>
 8023510:	f1b7 4f80 	cmp.w	r7, #1073741824	; 0x40000000
 8023514:	d104      	bne.n	8023520 <__ieee754_pow+0x138>
 8023516:	4610      	mov	r0, r2
 8023518:	4619      	mov	r1, r3
 802351a:	f7dd f88d 	bl	8000638 <__aeabi_dmul>
 802351e:	e7e7      	b.n	80234f0 <__ieee754_pow+0x108>
 8023520:	493e      	ldr	r1, [pc, #248]	; (802361c <__ieee754_pow+0x234>)
 8023522:	428f      	cmp	r7, r1
 8023524:	d10d      	bne.n	8023542 <__ieee754_pow+0x15a>
 8023526:	f1b9 0f00 	cmp.w	r9, #0
 802352a:	db0a      	blt.n	8023542 <__ieee754_pow+0x15a>
 802352c:	ec43 2b10 	vmov	d0, r2, r3
 8023530:	b00d      	add	sp, #52	; 0x34
 8023532:	ecbd 8b06 	vpop	{d8-d10}
 8023536:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802353a:	f000 bc77 	b.w	8023e2c <__ieee754_sqrt>
 802353e:	2100      	movs	r1, #0
 8023540:	9100      	str	r1, [sp, #0]
 8023542:	ec43 2b10 	vmov	d0, r2, r3
 8023546:	e9cd 2304 	strd	r2, r3, [sp, #16]
 802354a:	f000 fd23 	bl	8023f94 <fabs>
 802354e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8023552:	ec51 0b10 	vmov	r0, r1, d0
 8023556:	f1b8 0f00 	cmp.w	r8, #0
 802355a:	d12a      	bne.n	80235b2 <__ieee754_pow+0x1ca>
 802355c:	b12c      	cbz	r4, 802356a <__ieee754_pow+0x182>
 802355e:	f8df c0b4 	ldr.w	ip, [pc, #180]	; 8023614 <__ieee754_pow+0x22c>
 8023562:	f029 4e40 	bic.w	lr, r9, #3221225472	; 0xc0000000
 8023566:	45e6      	cmp	lr, ip
 8023568:	d123      	bne.n	80235b2 <__ieee754_pow+0x1ca>
 802356a:	2f00      	cmp	r7, #0
 802356c:	da05      	bge.n	802357a <__ieee754_pow+0x192>
 802356e:	4602      	mov	r2, r0
 8023570:	460b      	mov	r3, r1
 8023572:	2000      	movs	r0, #0
 8023574:	4927      	ldr	r1, [pc, #156]	; (8023614 <__ieee754_pow+0x22c>)
 8023576:	f7dd f989 	bl	800088c <__aeabi_ddiv>
 802357a:	f1b9 0f00 	cmp.w	r9, #0
 802357e:	dab7      	bge.n	80234f0 <__ieee754_pow+0x108>
 8023580:	9b00      	ldr	r3, [sp, #0]
 8023582:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8023586:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 802358a:	4323      	orrs	r3, r4
 802358c:	d108      	bne.n	80235a0 <__ieee754_pow+0x1b8>
 802358e:	4602      	mov	r2, r0
 8023590:	460b      	mov	r3, r1
 8023592:	4610      	mov	r0, r2
 8023594:	4619      	mov	r1, r3
 8023596:	f7dc fe97 	bl	80002c8 <__aeabi_dsub>
 802359a:	4602      	mov	r2, r0
 802359c:	460b      	mov	r3, r1
 802359e:	e78d      	b.n	80234bc <__ieee754_pow+0xd4>
 80235a0:	9b00      	ldr	r3, [sp, #0]
 80235a2:	2b01      	cmp	r3, #1
 80235a4:	d1a4      	bne.n	80234f0 <__ieee754_pow+0x108>
 80235a6:	4602      	mov	r2, r0
 80235a8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80235ac:	4610      	mov	r0, r2
 80235ae:	4619      	mov	r1, r3
 80235b0:	e79e      	b.n	80234f0 <__ieee754_pow+0x108>
 80235b2:	ea4f 7cd9 	mov.w	ip, r9, lsr #31
 80235b6:	f10c 35ff 	add.w	r5, ip, #4294967295
 80235ba:	950a      	str	r5, [sp, #40]	; 0x28
 80235bc:	9d00      	ldr	r5, [sp, #0]
 80235be:	46ac      	mov	ip, r5
 80235c0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80235c2:	ea5c 0505 	orrs.w	r5, ip, r5
 80235c6:	d0e4      	beq.n	8023592 <__ieee754_pow+0x1aa>
 80235c8:	4b15      	ldr	r3, [pc, #84]	; (8023620 <__ieee754_pow+0x238>)
 80235ca:	429e      	cmp	r6, r3
 80235cc:	f340 80fc 	ble.w	80237c8 <__ieee754_pow+0x3e0>
 80235d0:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 80235d4:	429e      	cmp	r6, r3
 80235d6:	4b10      	ldr	r3, [pc, #64]	; (8023618 <__ieee754_pow+0x230>)
 80235d8:	dd07      	ble.n	80235ea <__ieee754_pow+0x202>
 80235da:	429c      	cmp	r4, r3
 80235dc:	dc0a      	bgt.n	80235f4 <__ieee754_pow+0x20c>
 80235de:	2f00      	cmp	r7, #0
 80235e0:	da84      	bge.n	80234ec <__ieee754_pow+0x104>
 80235e2:	a307      	add	r3, pc, #28	; (adr r3, 8023600 <__ieee754_pow+0x218>)
 80235e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80235e8:	e795      	b.n	8023516 <__ieee754_pow+0x12e>
 80235ea:	429c      	cmp	r4, r3
 80235ec:	dbf7      	blt.n	80235de <__ieee754_pow+0x1f6>
 80235ee:	4b09      	ldr	r3, [pc, #36]	; (8023614 <__ieee754_pow+0x22c>)
 80235f0:	429c      	cmp	r4, r3
 80235f2:	dd17      	ble.n	8023624 <__ieee754_pow+0x23c>
 80235f4:	2f00      	cmp	r7, #0
 80235f6:	dcf4      	bgt.n	80235e2 <__ieee754_pow+0x1fa>
 80235f8:	e778      	b.n	80234ec <__ieee754_pow+0x104>
 80235fa:	bf00      	nop
 80235fc:	f3af 8000 	nop.w
 8023600:	8800759c 	.word	0x8800759c
 8023604:	7e37e43c 	.word	0x7e37e43c
 8023608:	7ff00000 	.word	0x7ff00000
 802360c:	0802838f 	.word	0x0802838f
 8023610:	433fffff 	.word	0x433fffff
 8023614:	3ff00000 	.word	0x3ff00000
 8023618:	3fefffff 	.word	0x3fefffff
 802361c:	3fe00000 	.word	0x3fe00000
 8023620:	41e00000 	.word	0x41e00000
 8023624:	4b64      	ldr	r3, [pc, #400]	; (80237b8 <__ieee754_pow+0x3d0>)
 8023626:	2200      	movs	r2, #0
 8023628:	f7dc fe4e 	bl	80002c8 <__aeabi_dsub>
 802362c:	a356      	add	r3, pc, #344	; (adr r3, 8023788 <__ieee754_pow+0x3a0>)
 802362e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023632:	4604      	mov	r4, r0
 8023634:	460d      	mov	r5, r1
 8023636:	f7dc ffff 	bl	8000638 <__aeabi_dmul>
 802363a:	a355      	add	r3, pc, #340	; (adr r3, 8023790 <__ieee754_pow+0x3a8>)
 802363c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023640:	4606      	mov	r6, r0
 8023642:	460f      	mov	r7, r1
 8023644:	4620      	mov	r0, r4
 8023646:	4629      	mov	r1, r5
 8023648:	f7dc fff6 	bl	8000638 <__aeabi_dmul>
 802364c:	4b5b      	ldr	r3, [pc, #364]	; (80237bc <__ieee754_pow+0x3d4>)
 802364e:	4682      	mov	sl, r0
 8023650:	468b      	mov	fp, r1
 8023652:	2200      	movs	r2, #0
 8023654:	4620      	mov	r0, r4
 8023656:	4629      	mov	r1, r5
 8023658:	f7dc ffee 	bl	8000638 <__aeabi_dmul>
 802365c:	4602      	mov	r2, r0
 802365e:	460b      	mov	r3, r1
 8023660:	a14d      	add	r1, pc, #308	; (adr r1, 8023798 <__ieee754_pow+0x3b0>)
 8023662:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023666:	f7dc fe2f 	bl	80002c8 <__aeabi_dsub>
 802366a:	4622      	mov	r2, r4
 802366c:	462b      	mov	r3, r5
 802366e:	f7dc ffe3 	bl	8000638 <__aeabi_dmul>
 8023672:	4602      	mov	r2, r0
 8023674:	460b      	mov	r3, r1
 8023676:	2000      	movs	r0, #0
 8023678:	4951      	ldr	r1, [pc, #324]	; (80237c0 <__ieee754_pow+0x3d8>)
 802367a:	f7dc fe25 	bl	80002c8 <__aeabi_dsub>
 802367e:	4622      	mov	r2, r4
 8023680:	4680      	mov	r8, r0
 8023682:	4689      	mov	r9, r1
 8023684:	462b      	mov	r3, r5
 8023686:	4620      	mov	r0, r4
 8023688:	4629      	mov	r1, r5
 802368a:	f7dc ffd5 	bl	8000638 <__aeabi_dmul>
 802368e:	4602      	mov	r2, r0
 8023690:	460b      	mov	r3, r1
 8023692:	4640      	mov	r0, r8
 8023694:	4649      	mov	r1, r9
 8023696:	f7dc ffcf 	bl	8000638 <__aeabi_dmul>
 802369a:	a341      	add	r3, pc, #260	; (adr r3, 80237a0 <__ieee754_pow+0x3b8>)
 802369c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80236a0:	f7dc ffca 	bl	8000638 <__aeabi_dmul>
 80236a4:	4602      	mov	r2, r0
 80236a6:	460b      	mov	r3, r1
 80236a8:	4650      	mov	r0, sl
 80236aa:	4659      	mov	r1, fp
 80236ac:	f7dc fe0c 	bl	80002c8 <__aeabi_dsub>
 80236b0:	4602      	mov	r2, r0
 80236b2:	460b      	mov	r3, r1
 80236b4:	4680      	mov	r8, r0
 80236b6:	4689      	mov	r9, r1
 80236b8:	4630      	mov	r0, r6
 80236ba:	4639      	mov	r1, r7
 80236bc:	f7dc fe06 	bl	80002cc <__adddf3>
 80236c0:	2400      	movs	r4, #0
 80236c2:	4632      	mov	r2, r6
 80236c4:	463b      	mov	r3, r7
 80236c6:	4620      	mov	r0, r4
 80236c8:	460d      	mov	r5, r1
 80236ca:	f7dc fdfd 	bl	80002c8 <__aeabi_dsub>
 80236ce:	4602      	mov	r2, r0
 80236d0:	460b      	mov	r3, r1
 80236d2:	4640      	mov	r0, r8
 80236d4:	4649      	mov	r1, r9
 80236d6:	f7dc fdf7 	bl	80002c8 <__aeabi_dsub>
 80236da:	9b00      	ldr	r3, [sp, #0]
 80236dc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80236de:	3b01      	subs	r3, #1
 80236e0:	4313      	orrs	r3, r2
 80236e2:	4682      	mov	sl, r0
 80236e4:	468b      	mov	fp, r1
 80236e6:	f040 81f1 	bne.w	8023acc <__ieee754_pow+0x6e4>
 80236ea:	ed9f 7b2f 	vldr	d7, [pc, #188]	; 80237a8 <__ieee754_pow+0x3c0>
 80236ee:	eeb0 8a47 	vmov.f32	s16, s14
 80236f2:	eef0 8a67 	vmov.f32	s17, s15
 80236f6:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80236fa:	2600      	movs	r6, #0
 80236fc:	4632      	mov	r2, r6
 80236fe:	463b      	mov	r3, r7
 8023700:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023704:	f7dc fde0 	bl	80002c8 <__aeabi_dsub>
 8023708:	4622      	mov	r2, r4
 802370a:	462b      	mov	r3, r5
 802370c:	f7dc ff94 	bl	8000638 <__aeabi_dmul>
 8023710:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8023714:	4680      	mov	r8, r0
 8023716:	4689      	mov	r9, r1
 8023718:	4650      	mov	r0, sl
 802371a:	4659      	mov	r1, fp
 802371c:	f7dc ff8c 	bl	8000638 <__aeabi_dmul>
 8023720:	4602      	mov	r2, r0
 8023722:	460b      	mov	r3, r1
 8023724:	4640      	mov	r0, r8
 8023726:	4649      	mov	r1, r9
 8023728:	f7dc fdd0 	bl	80002cc <__adddf3>
 802372c:	4632      	mov	r2, r6
 802372e:	463b      	mov	r3, r7
 8023730:	4680      	mov	r8, r0
 8023732:	4689      	mov	r9, r1
 8023734:	4620      	mov	r0, r4
 8023736:	4629      	mov	r1, r5
 8023738:	f7dc ff7e 	bl	8000638 <__aeabi_dmul>
 802373c:	460b      	mov	r3, r1
 802373e:	4604      	mov	r4, r0
 8023740:	460d      	mov	r5, r1
 8023742:	4602      	mov	r2, r0
 8023744:	4649      	mov	r1, r9
 8023746:	4640      	mov	r0, r8
 8023748:	f7dc fdc0 	bl	80002cc <__adddf3>
 802374c:	4b1d      	ldr	r3, [pc, #116]	; (80237c4 <__ieee754_pow+0x3dc>)
 802374e:	4299      	cmp	r1, r3
 8023750:	ec45 4b19 	vmov	d9, r4, r5
 8023754:	4606      	mov	r6, r0
 8023756:	460f      	mov	r7, r1
 8023758:	468b      	mov	fp, r1
 802375a:	f340 82fe 	ble.w	8023d5a <__ieee754_pow+0x972>
 802375e:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 8023762:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 8023766:	4303      	orrs	r3, r0
 8023768:	f000 81f0 	beq.w	8023b4c <__ieee754_pow+0x764>
 802376c:	a310      	add	r3, pc, #64	; (adr r3, 80237b0 <__ieee754_pow+0x3c8>)
 802376e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023772:	ec51 0b18 	vmov	r0, r1, d8
 8023776:	f7dc ff5f 	bl	8000638 <__aeabi_dmul>
 802377a:	a30d      	add	r3, pc, #52	; (adr r3, 80237b0 <__ieee754_pow+0x3c8>)
 802377c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023780:	e6cb      	b.n	802351a <__ieee754_pow+0x132>
 8023782:	bf00      	nop
 8023784:	f3af 8000 	nop.w
 8023788:	60000000 	.word	0x60000000
 802378c:	3ff71547 	.word	0x3ff71547
 8023790:	f85ddf44 	.word	0xf85ddf44
 8023794:	3e54ae0b 	.word	0x3e54ae0b
 8023798:	55555555 	.word	0x55555555
 802379c:	3fd55555 	.word	0x3fd55555
 80237a0:	652b82fe 	.word	0x652b82fe
 80237a4:	3ff71547 	.word	0x3ff71547
 80237a8:	00000000 	.word	0x00000000
 80237ac:	bff00000 	.word	0xbff00000
 80237b0:	8800759c 	.word	0x8800759c
 80237b4:	7e37e43c 	.word	0x7e37e43c
 80237b8:	3ff00000 	.word	0x3ff00000
 80237bc:	3fd00000 	.word	0x3fd00000
 80237c0:	3fe00000 	.word	0x3fe00000
 80237c4:	408fffff 	.word	0x408fffff
 80237c8:	4bd7      	ldr	r3, [pc, #860]	; (8023b28 <__ieee754_pow+0x740>)
 80237ca:	ea03 0309 	and.w	r3, r3, r9
 80237ce:	2200      	movs	r2, #0
 80237d0:	b92b      	cbnz	r3, 80237de <__ieee754_pow+0x3f6>
 80237d2:	4bd6      	ldr	r3, [pc, #856]	; (8023b2c <__ieee754_pow+0x744>)
 80237d4:	f7dc ff30 	bl	8000638 <__aeabi_dmul>
 80237d8:	f06f 0234 	mvn.w	r2, #52	; 0x34
 80237dc:	460c      	mov	r4, r1
 80237de:	1523      	asrs	r3, r4, #20
 80237e0:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 80237e4:	4413      	add	r3, r2
 80237e6:	9309      	str	r3, [sp, #36]	; 0x24
 80237e8:	4bd1      	ldr	r3, [pc, #836]	; (8023b30 <__ieee754_pow+0x748>)
 80237ea:	f3c4 0413 	ubfx	r4, r4, #0, #20
 80237ee:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 80237f2:	429c      	cmp	r4, r3
 80237f4:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 80237f8:	dd08      	ble.n	802380c <__ieee754_pow+0x424>
 80237fa:	4bce      	ldr	r3, [pc, #824]	; (8023b34 <__ieee754_pow+0x74c>)
 80237fc:	429c      	cmp	r4, r3
 80237fe:	f340 8163 	ble.w	8023ac8 <__ieee754_pow+0x6e0>
 8023802:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023804:	3301      	adds	r3, #1
 8023806:	9309      	str	r3, [sp, #36]	; 0x24
 8023808:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 802380c:	2400      	movs	r4, #0
 802380e:	00e3      	lsls	r3, r4, #3
 8023810:	930b      	str	r3, [sp, #44]	; 0x2c
 8023812:	4bc9      	ldr	r3, [pc, #804]	; (8023b38 <__ieee754_pow+0x750>)
 8023814:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8023818:	ed93 7b00 	vldr	d7, [r3]
 802381c:	4629      	mov	r1, r5
 802381e:	ec53 2b17 	vmov	r2, r3, d7
 8023822:	eeb0 8a47 	vmov.f32	s16, s14
 8023826:	eef0 8a67 	vmov.f32	s17, s15
 802382a:	4682      	mov	sl, r0
 802382c:	f7dc fd4c 	bl	80002c8 <__aeabi_dsub>
 8023830:	4652      	mov	r2, sl
 8023832:	4606      	mov	r6, r0
 8023834:	460f      	mov	r7, r1
 8023836:	462b      	mov	r3, r5
 8023838:	ec51 0b18 	vmov	r0, r1, d8
 802383c:	f7dc fd46 	bl	80002cc <__adddf3>
 8023840:	4602      	mov	r2, r0
 8023842:	460b      	mov	r3, r1
 8023844:	2000      	movs	r0, #0
 8023846:	49bd      	ldr	r1, [pc, #756]	; (8023b3c <__ieee754_pow+0x754>)
 8023848:	f7dd f820 	bl	800088c <__aeabi_ddiv>
 802384c:	ec41 0b19 	vmov	d9, r0, r1
 8023850:	4602      	mov	r2, r0
 8023852:	460b      	mov	r3, r1
 8023854:	4630      	mov	r0, r6
 8023856:	4639      	mov	r1, r7
 8023858:	f7dc feee 	bl	8000638 <__aeabi_dmul>
 802385c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8023860:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8023864:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8023868:	2300      	movs	r3, #0
 802386a:	9304      	str	r3, [sp, #16]
 802386c:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8023870:	46ab      	mov	fp, r5
 8023872:	106d      	asrs	r5, r5, #1
 8023874:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 8023878:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 802387c:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 8023880:	2200      	movs	r2, #0
 8023882:	4640      	mov	r0, r8
 8023884:	4649      	mov	r1, r9
 8023886:	4614      	mov	r4, r2
 8023888:	461d      	mov	r5, r3
 802388a:	f7dc fed5 	bl	8000638 <__aeabi_dmul>
 802388e:	4602      	mov	r2, r0
 8023890:	460b      	mov	r3, r1
 8023892:	4630      	mov	r0, r6
 8023894:	4639      	mov	r1, r7
 8023896:	f7dc fd17 	bl	80002c8 <__aeabi_dsub>
 802389a:	ec53 2b18 	vmov	r2, r3, d8
 802389e:	4606      	mov	r6, r0
 80238a0:	460f      	mov	r7, r1
 80238a2:	4620      	mov	r0, r4
 80238a4:	4629      	mov	r1, r5
 80238a6:	f7dc fd0f 	bl	80002c8 <__aeabi_dsub>
 80238aa:	4602      	mov	r2, r0
 80238ac:	460b      	mov	r3, r1
 80238ae:	4650      	mov	r0, sl
 80238b0:	4659      	mov	r1, fp
 80238b2:	f7dc fd09 	bl	80002c8 <__aeabi_dsub>
 80238b6:	4642      	mov	r2, r8
 80238b8:	464b      	mov	r3, r9
 80238ba:	f7dc febd 	bl	8000638 <__aeabi_dmul>
 80238be:	4602      	mov	r2, r0
 80238c0:	460b      	mov	r3, r1
 80238c2:	4630      	mov	r0, r6
 80238c4:	4639      	mov	r1, r7
 80238c6:	f7dc fcff 	bl	80002c8 <__aeabi_dsub>
 80238ca:	ec53 2b19 	vmov	r2, r3, d9
 80238ce:	f7dc feb3 	bl	8000638 <__aeabi_dmul>
 80238d2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80238d6:	ec41 0b18 	vmov	d8, r0, r1
 80238da:	4610      	mov	r0, r2
 80238dc:	4619      	mov	r1, r3
 80238de:	f7dc feab 	bl	8000638 <__aeabi_dmul>
 80238e2:	a37d      	add	r3, pc, #500	; (adr r3, 8023ad8 <__ieee754_pow+0x6f0>)
 80238e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80238e8:	4604      	mov	r4, r0
 80238ea:	460d      	mov	r5, r1
 80238ec:	f7dc fea4 	bl	8000638 <__aeabi_dmul>
 80238f0:	a37b      	add	r3, pc, #492	; (adr r3, 8023ae0 <__ieee754_pow+0x6f8>)
 80238f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80238f6:	f7dc fce9 	bl	80002cc <__adddf3>
 80238fa:	4622      	mov	r2, r4
 80238fc:	462b      	mov	r3, r5
 80238fe:	f7dc fe9b 	bl	8000638 <__aeabi_dmul>
 8023902:	a379      	add	r3, pc, #484	; (adr r3, 8023ae8 <__ieee754_pow+0x700>)
 8023904:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023908:	f7dc fce0 	bl	80002cc <__adddf3>
 802390c:	4622      	mov	r2, r4
 802390e:	462b      	mov	r3, r5
 8023910:	f7dc fe92 	bl	8000638 <__aeabi_dmul>
 8023914:	a376      	add	r3, pc, #472	; (adr r3, 8023af0 <__ieee754_pow+0x708>)
 8023916:	e9d3 2300 	ldrd	r2, r3, [r3]
 802391a:	f7dc fcd7 	bl	80002cc <__adddf3>
 802391e:	4622      	mov	r2, r4
 8023920:	462b      	mov	r3, r5
 8023922:	f7dc fe89 	bl	8000638 <__aeabi_dmul>
 8023926:	a374      	add	r3, pc, #464	; (adr r3, 8023af8 <__ieee754_pow+0x710>)
 8023928:	e9d3 2300 	ldrd	r2, r3, [r3]
 802392c:	f7dc fcce 	bl	80002cc <__adddf3>
 8023930:	4622      	mov	r2, r4
 8023932:	462b      	mov	r3, r5
 8023934:	f7dc fe80 	bl	8000638 <__aeabi_dmul>
 8023938:	a371      	add	r3, pc, #452	; (adr r3, 8023b00 <__ieee754_pow+0x718>)
 802393a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802393e:	f7dc fcc5 	bl	80002cc <__adddf3>
 8023942:	4622      	mov	r2, r4
 8023944:	4606      	mov	r6, r0
 8023946:	460f      	mov	r7, r1
 8023948:	462b      	mov	r3, r5
 802394a:	4620      	mov	r0, r4
 802394c:	4629      	mov	r1, r5
 802394e:	f7dc fe73 	bl	8000638 <__aeabi_dmul>
 8023952:	4602      	mov	r2, r0
 8023954:	460b      	mov	r3, r1
 8023956:	4630      	mov	r0, r6
 8023958:	4639      	mov	r1, r7
 802395a:	f7dc fe6d 	bl	8000638 <__aeabi_dmul>
 802395e:	4642      	mov	r2, r8
 8023960:	4604      	mov	r4, r0
 8023962:	460d      	mov	r5, r1
 8023964:	464b      	mov	r3, r9
 8023966:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802396a:	f7dc fcaf 	bl	80002cc <__adddf3>
 802396e:	ec53 2b18 	vmov	r2, r3, d8
 8023972:	f7dc fe61 	bl	8000638 <__aeabi_dmul>
 8023976:	4622      	mov	r2, r4
 8023978:	462b      	mov	r3, r5
 802397a:	f7dc fca7 	bl	80002cc <__adddf3>
 802397e:	4642      	mov	r2, r8
 8023980:	4682      	mov	sl, r0
 8023982:	468b      	mov	fp, r1
 8023984:	464b      	mov	r3, r9
 8023986:	4640      	mov	r0, r8
 8023988:	4649      	mov	r1, r9
 802398a:	f7dc fe55 	bl	8000638 <__aeabi_dmul>
 802398e:	4b6c      	ldr	r3, [pc, #432]	; (8023b40 <__ieee754_pow+0x758>)
 8023990:	2200      	movs	r2, #0
 8023992:	4606      	mov	r6, r0
 8023994:	460f      	mov	r7, r1
 8023996:	f7dc fc99 	bl	80002cc <__adddf3>
 802399a:	4652      	mov	r2, sl
 802399c:	465b      	mov	r3, fp
 802399e:	f7dc fc95 	bl	80002cc <__adddf3>
 80239a2:	9c04      	ldr	r4, [sp, #16]
 80239a4:	460d      	mov	r5, r1
 80239a6:	4622      	mov	r2, r4
 80239a8:	460b      	mov	r3, r1
 80239aa:	4640      	mov	r0, r8
 80239ac:	4649      	mov	r1, r9
 80239ae:	f7dc fe43 	bl	8000638 <__aeabi_dmul>
 80239b2:	4b63      	ldr	r3, [pc, #396]	; (8023b40 <__ieee754_pow+0x758>)
 80239b4:	4680      	mov	r8, r0
 80239b6:	4689      	mov	r9, r1
 80239b8:	2200      	movs	r2, #0
 80239ba:	4620      	mov	r0, r4
 80239bc:	4629      	mov	r1, r5
 80239be:	f7dc fc83 	bl	80002c8 <__aeabi_dsub>
 80239c2:	4632      	mov	r2, r6
 80239c4:	463b      	mov	r3, r7
 80239c6:	f7dc fc7f 	bl	80002c8 <__aeabi_dsub>
 80239ca:	4602      	mov	r2, r0
 80239cc:	460b      	mov	r3, r1
 80239ce:	4650      	mov	r0, sl
 80239d0:	4659      	mov	r1, fp
 80239d2:	f7dc fc79 	bl	80002c8 <__aeabi_dsub>
 80239d6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80239da:	f7dc fe2d 	bl	8000638 <__aeabi_dmul>
 80239de:	4622      	mov	r2, r4
 80239e0:	4606      	mov	r6, r0
 80239e2:	460f      	mov	r7, r1
 80239e4:	462b      	mov	r3, r5
 80239e6:	ec51 0b18 	vmov	r0, r1, d8
 80239ea:	f7dc fe25 	bl	8000638 <__aeabi_dmul>
 80239ee:	4602      	mov	r2, r0
 80239f0:	460b      	mov	r3, r1
 80239f2:	4630      	mov	r0, r6
 80239f4:	4639      	mov	r1, r7
 80239f6:	f7dc fc69 	bl	80002cc <__adddf3>
 80239fa:	4606      	mov	r6, r0
 80239fc:	460f      	mov	r7, r1
 80239fe:	4602      	mov	r2, r0
 8023a00:	460b      	mov	r3, r1
 8023a02:	4640      	mov	r0, r8
 8023a04:	4649      	mov	r1, r9
 8023a06:	f7dc fc61 	bl	80002cc <__adddf3>
 8023a0a:	9c04      	ldr	r4, [sp, #16]
 8023a0c:	a33e      	add	r3, pc, #248	; (adr r3, 8023b08 <__ieee754_pow+0x720>)
 8023a0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023a12:	4620      	mov	r0, r4
 8023a14:	460d      	mov	r5, r1
 8023a16:	f7dc fe0f 	bl	8000638 <__aeabi_dmul>
 8023a1a:	4642      	mov	r2, r8
 8023a1c:	ec41 0b18 	vmov	d8, r0, r1
 8023a20:	464b      	mov	r3, r9
 8023a22:	4620      	mov	r0, r4
 8023a24:	4629      	mov	r1, r5
 8023a26:	f7dc fc4f 	bl	80002c8 <__aeabi_dsub>
 8023a2a:	4602      	mov	r2, r0
 8023a2c:	460b      	mov	r3, r1
 8023a2e:	4630      	mov	r0, r6
 8023a30:	4639      	mov	r1, r7
 8023a32:	f7dc fc49 	bl	80002c8 <__aeabi_dsub>
 8023a36:	a336      	add	r3, pc, #216	; (adr r3, 8023b10 <__ieee754_pow+0x728>)
 8023a38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023a3c:	f7dc fdfc 	bl	8000638 <__aeabi_dmul>
 8023a40:	a335      	add	r3, pc, #212	; (adr r3, 8023b18 <__ieee754_pow+0x730>)
 8023a42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023a46:	4606      	mov	r6, r0
 8023a48:	460f      	mov	r7, r1
 8023a4a:	4620      	mov	r0, r4
 8023a4c:	4629      	mov	r1, r5
 8023a4e:	f7dc fdf3 	bl	8000638 <__aeabi_dmul>
 8023a52:	4602      	mov	r2, r0
 8023a54:	460b      	mov	r3, r1
 8023a56:	4630      	mov	r0, r6
 8023a58:	4639      	mov	r1, r7
 8023a5a:	f7dc fc37 	bl	80002cc <__adddf3>
 8023a5e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023a60:	4b38      	ldr	r3, [pc, #224]	; (8023b44 <__ieee754_pow+0x75c>)
 8023a62:	4413      	add	r3, r2
 8023a64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023a68:	f7dc fc30 	bl	80002cc <__adddf3>
 8023a6c:	4682      	mov	sl, r0
 8023a6e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023a70:	468b      	mov	fp, r1
 8023a72:	f7dc fd77 	bl	8000564 <__aeabi_i2d>
 8023a76:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023a78:	4b33      	ldr	r3, [pc, #204]	; (8023b48 <__ieee754_pow+0x760>)
 8023a7a:	4413      	add	r3, r2
 8023a7c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8023a80:	4606      	mov	r6, r0
 8023a82:	460f      	mov	r7, r1
 8023a84:	4652      	mov	r2, sl
 8023a86:	465b      	mov	r3, fp
 8023a88:	ec51 0b18 	vmov	r0, r1, d8
 8023a8c:	f7dc fc1e 	bl	80002cc <__adddf3>
 8023a90:	4642      	mov	r2, r8
 8023a92:	464b      	mov	r3, r9
 8023a94:	f7dc fc1a 	bl	80002cc <__adddf3>
 8023a98:	4632      	mov	r2, r6
 8023a9a:	463b      	mov	r3, r7
 8023a9c:	f7dc fc16 	bl	80002cc <__adddf3>
 8023aa0:	9c04      	ldr	r4, [sp, #16]
 8023aa2:	4632      	mov	r2, r6
 8023aa4:	463b      	mov	r3, r7
 8023aa6:	4620      	mov	r0, r4
 8023aa8:	460d      	mov	r5, r1
 8023aaa:	f7dc fc0d 	bl	80002c8 <__aeabi_dsub>
 8023aae:	4642      	mov	r2, r8
 8023ab0:	464b      	mov	r3, r9
 8023ab2:	f7dc fc09 	bl	80002c8 <__aeabi_dsub>
 8023ab6:	ec53 2b18 	vmov	r2, r3, d8
 8023aba:	f7dc fc05 	bl	80002c8 <__aeabi_dsub>
 8023abe:	4602      	mov	r2, r0
 8023ac0:	460b      	mov	r3, r1
 8023ac2:	4650      	mov	r0, sl
 8023ac4:	4659      	mov	r1, fp
 8023ac6:	e606      	b.n	80236d6 <__ieee754_pow+0x2ee>
 8023ac8:	2401      	movs	r4, #1
 8023aca:	e6a0      	b.n	802380e <__ieee754_pow+0x426>
 8023acc:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8023b20 <__ieee754_pow+0x738>
 8023ad0:	e60d      	b.n	80236ee <__ieee754_pow+0x306>
 8023ad2:	bf00      	nop
 8023ad4:	f3af 8000 	nop.w
 8023ad8:	4a454eef 	.word	0x4a454eef
 8023adc:	3fca7e28 	.word	0x3fca7e28
 8023ae0:	93c9db65 	.word	0x93c9db65
 8023ae4:	3fcd864a 	.word	0x3fcd864a
 8023ae8:	a91d4101 	.word	0xa91d4101
 8023aec:	3fd17460 	.word	0x3fd17460
 8023af0:	518f264d 	.word	0x518f264d
 8023af4:	3fd55555 	.word	0x3fd55555
 8023af8:	db6fabff 	.word	0xdb6fabff
 8023afc:	3fdb6db6 	.word	0x3fdb6db6
 8023b00:	33333303 	.word	0x33333303
 8023b04:	3fe33333 	.word	0x3fe33333
 8023b08:	e0000000 	.word	0xe0000000
 8023b0c:	3feec709 	.word	0x3feec709
 8023b10:	dc3a03fd 	.word	0xdc3a03fd
 8023b14:	3feec709 	.word	0x3feec709
 8023b18:	145b01f5 	.word	0x145b01f5
 8023b1c:	be3e2fe0 	.word	0xbe3e2fe0
 8023b20:	00000000 	.word	0x00000000
 8023b24:	3ff00000 	.word	0x3ff00000
 8023b28:	7ff00000 	.word	0x7ff00000
 8023b2c:	43400000 	.word	0x43400000
 8023b30:	0003988e 	.word	0x0003988e
 8023b34:	000bb679 	.word	0x000bb679
 8023b38:	08027f88 	.word	0x08027f88
 8023b3c:	3ff00000 	.word	0x3ff00000
 8023b40:	40080000 	.word	0x40080000
 8023b44:	08027fa8 	.word	0x08027fa8
 8023b48:	08027f98 	.word	0x08027f98
 8023b4c:	a3b5      	add	r3, pc, #724	; (adr r3, 8023e24 <__ieee754_pow+0xa3c>)
 8023b4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023b52:	4640      	mov	r0, r8
 8023b54:	4649      	mov	r1, r9
 8023b56:	f7dc fbb9 	bl	80002cc <__adddf3>
 8023b5a:	4622      	mov	r2, r4
 8023b5c:	ec41 0b1a 	vmov	d10, r0, r1
 8023b60:	462b      	mov	r3, r5
 8023b62:	4630      	mov	r0, r6
 8023b64:	4639      	mov	r1, r7
 8023b66:	f7dc fbaf 	bl	80002c8 <__aeabi_dsub>
 8023b6a:	4602      	mov	r2, r0
 8023b6c:	460b      	mov	r3, r1
 8023b6e:	ec51 0b1a 	vmov	r0, r1, d10
 8023b72:	f7dc fff1 	bl	8000b58 <__aeabi_dcmpgt>
 8023b76:	2800      	cmp	r0, #0
 8023b78:	f47f adf8 	bne.w	802376c <__ieee754_pow+0x384>
 8023b7c:	4aa4      	ldr	r2, [pc, #656]	; (8023e10 <__ieee754_pow+0xa28>)
 8023b7e:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8023b82:	4293      	cmp	r3, r2
 8023b84:	f340 810b 	ble.w	8023d9e <__ieee754_pow+0x9b6>
 8023b88:	151b      	asrs	r3, r3, #20
 8023b8a:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 8023b8e:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 8023b92:	fa4a f303 	asr.w	r3, sl, r3
 8023b96:	445b      	add	r3, fp
 8023b98:	f3c3 520a 	ubfx	r2, r3, #20, #11
 8023b9c:	4e9d      	ldr	r6, [pc, #628]	; (8023e14 <__ieee754_pow+0xa2c>)
 8023b9e:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 8023ba2:	4116      	asrs	r6, r2
 8023ba4:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 8023ba8:	2000      	movs	r0, #0
 8023baa:	ea23 0106 	bic.w	r1, r3, r6
 8023bae:	f1c2 0214 	rsb	r2, r2, #20
 8023bb2:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 8023bb6:	fa4a fa02 	asr.w	sl, sl, r2
 8023bba:	f1bb 0f00 	cmp.w	fp, #0
 8023bbe:	4602      	mov	r2, r0
 8023bc0:	460b      	mov	r3, r1
 8023bc2:	4620      	mov	r0, r4
 8023bc4:	4629      	mov	r1, r5
 8023bc6:	bfb8      	it	lt
 8023bc8:	f1ca 0a00 	rsblt	sl, sl, #0
 8023bcc:	f7dc fb7c 	bl	80002c8 <__aeabi_dsub>
 8023bd0:	ec41 0b19 	vmov	d9, r0, r1
 8023bd4:	4642      	mov	r2, r8
 8023bd6:	464b      	mov	r3, r9
 8023bd8:	ec51 0b19 	vmov	r0, r1, d9
 8023bdc:	f7dc fb76 	bl	80002cc <__adddf3>
 8023be0:	2400      	movs	r4, #0
 8023be2:	a379      	add	r3, pc, #484	; (adr r3, 8023dc8 <__ieee754_pow+0x9e0>)
 8023be4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023be8:	4620      	mov	r0, r4
 8023bea:	460d      	mov	r5, r1
 8023bec:	f7dc fd24 	bl	8000638 <__aeabi_dmul>
 8023bf0:	ec53 2b19 	vmov	r2, r3, d9
 8023bf4:	4606      	mov	r6, r0
 8023bf6:	460f      	mov	r7, r1
 8023bf8:	4620      	mov	r0, r4
 8023bfa:	4629      	mov	r1, r5
 8023bfc:	f7dc fb64 	bl	80002c8 <__aeabi_dsub>
 8023c00:	4602      	mov	r2, r0
 8023c02:	460b      	mov	r3, r1
 8023c04:	4640      	mov	r0, r8
 8023c06:	4649      	mov	r1, r9
 8023c08:	f7dc fb5e 	bl	80002c8 <__aeabi_dsub>
 8023c0c:	a370      	add	r3, pc, #448	; (adr r3, 8023dd0 <__ieee754_pow+0x9e8>)
 8023c0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023c12:	f7dc fd11 	bl	8000638 <__aeabi_dmul>
 8023c16:	a370      	add	r3, pc, #448	; (adr r3, 8023dd8 <__ieee754_pow+0x9f0>)
 8023c18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023c1c:	4680      	mov	r8, r0
 8023c1e:	4689      	mov	r9, r1
 8023c20:	4620      	mov	r0, r4
 8023c22:	4629      	mov	r1, r5
 8023c24:	f7dc fd08 	bl	8000638 <__aeabi_dmul>
 8023c28:	4602      	mov	r2, r0
 8023c2a:	460b      	mov	r3, r1
 8023c2c:	4640      	mov	r0, r8
 8023c2e:	4649      	mov	r1, r9
 8023c30:	f7dc fb4c 	bl	80002cc <__adddf3>
 8023c34:	4604      	mov	r4, r0
 8023c36:	460d      	mov	r5, r1
 8023c38:	4602      	mov	r2, r0
 8023c3a:	460b      	mov	r3, r1
 8023c3c:	4630      	mov	r0, r6
 8023c3e:	4639      	mov	r1, r7
 8023c40:	f7dc fb44 	bl	80002cc <__adddf3>
 8023c44:	4632      	mov	r2, r6
 8023c46:	463b      	mov	r3, r7
 8023c48:	4680      	mov	r8, r0
 8023c4a:	4689      	mov	r9, r1
 8023c4c:	f7dc fb3c 	bl	80002c8 <__aeabi_dsub>
 8023c50:	4602      	mov	r2, r0
 8023c52:	460b      	mov	r3, r1
 8023c54:	4620      	mov	r0, r4
 8023c56:	4629      	mov	r1, r5
 8023c58:	f7dc fb36 	bl	80002c8 <__aeabi_dsub>
 8023c5c:	4642      	mov	r2, r8
 8023c5e:	4606      	mov	r6, r0
 8023c60:	460f      	mov	r7, r1
 8023c62:	464b      	mov	r3, r9
 8023c64:	4640      	mov	r0, r8
 8023c66:	4649      	mov	r1, r9
 8023c68:	f7dc fce6 	bl	8000638 <__aeabi_dmul>
 8023c6c:	a35c      	add	r3, pc, #368	; (adr r3, 8023de0 <__ieee754_pow+0x9f8>)
 8023c6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023c72:	4604      	mov	r4, r0
 8023c74:	460d      	mov	r5, r1
 8023c76:	f7dc fcdf 	bl	8000638 <__aeabi_dmul>
 8023c7a:	a35b      	add	r3, pc, #364	; (adr r3, 8023de8 <__ieee754_pow+0xa00>)
 8023c7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023c80:	f7dc fb22 	bl	80002c8 <__aeabi_dsub>
 8023c84:	4622      	mov	r2, r4
 8023c86:	462b      	mov	r3, r5
 8023c88:	f7dc fcd6 	bl	8000638 <__aeabi_dmul>
 8023c8c:	a358      	add	r3, pc, #352	; (adr r3, 8023df0 <__ieee754_pow+0xa08>)
 8023c8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023c92:	f7dc fb1b 	bl	80002cc <__adddf3>
 8023c96:	4622      	mov	r2, r4
 8023c98:	462b      	mov	r3, r5
 8023c9a:	f7dc fccd 	bl	8000638 <__aeabi_dmul>
 8023c9e:	a356      	add	r3, pc, #344	; (adr r3, 8023df8 <__ieee754_pow+0xa10>)
 8023ca0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023ca4:	f7dc fb10 	bl	80002c8 <__aeabi_dsub>
 8023ca8:	4622      	mov	r2, r4
 8023caa:	462b      	mov	r3, r5
 8023cac:	f7dc fcc4 	bl	8000638 <__aeabi_dmul>
 8023cb0:	a353      	add	r3, pc, #332	; (adr r3, 8023e00 <__ieee754_pow+0xa18>)
 8023cb2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023cb6:	f7dc fb09 	bl	80002cc <__adddf3>
 8023cba:	4622      	mov	r2, r4
 8023cbc:	462b      	mov	r3, r5
 8023cbe:	f7dc fcbb 	bl	8000638 <__aeabi_dmul>
 8023cc2:	4602      	mov	r2, r0
 8023cc4:	460b      	mov	r3, r1
 8023cc6:	4640      	mov	r0, r8
 8023cc8:	4649      	mov	r1, r9
 8023cca:	f7dc fafd 	bl	80002c8 <__aeabi_dsub>
 8023cce:	4604      	mov	r4, r0
 8023cd0:	460d      	mov	r5, r1
 8023cd2:	4602      	mov	r2, r0
 8023cd4:	460b      	mov	r3, r1
 8023cd6:	4640      	mov	r0, r8
 8023cd8:	4649      	mov	r1, r9
 8023cda:	f7dc fcad 	bl	8000638 <__aeabi_dmul>
 8023cde:	2200      	movs	r2, #0
 8023ce0:	ec41 0b19 	vmov	d9, r0, r1
 8023ce4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8023ce8:	4620      	mov	r0, r4
 8023cea:	4629      	mov	r1, r5
 8023cec:	f7dc faec 	bl	80002c8 <__aeabi_dsub>
 8023cf0:	4602      	mov	r2, r0
 8023cf2:	460b      	mov	r3, r1
 8023cf4:	ec51 0b19 	vmov	r0, r1, d9
 8023cf8:	f7dc fdc8 	bl	800088c <__aeabi_ddiv>
 8023cfc:	4632      	mov	r2, r6
 8023cfe:	4604      	mov	r4, r0
 8023d00:	460d      	mov	r5, r1
 8023d02:	463b      	mov	r3, r7
 8023d04:	4640      	mov	r0, r8
 8023d06:	4649      	mov	r1, r9
 8023d08:	f7dc fc96 	bl	8000638 <__aeabi_dmul>
 8023d0c:	4632      	mov	r2, r6
 8023d0e:	463b      	mov	r3, r7
 8023d10:	f7dc fadc 	bl	80002cc <__adddf3>
 8023d14:	4602      	mov	r2, r0
 8023d16:	460b      	mov	r3, r1
 8023d18:	4620      	mov	r0, r4
 8023d1a:	4629      	mov	r1, r5
 8023d1c:	f7dc fad4 	bl	80002c8 <__aeabi_dsub>
 8023d20:	4642      	mov	r2, r8
 8023d22:	464b      	mov	r3, r9
 8023d24:	f7dc fad0 	bl	80002c8 <__aeabi_dsub>
 8023d28:	460b      	mov	r3, r1
 8023d2a:	4602      	mov	r2, r0
 8023d2c:	493a      	ldr	r1, [pc, #232]	; (8023e18 <__ieee754_pow+0xa30>)
 8023d2e:	2000      	movs	r0, #0
 8023d30:	f7dc faca 	bl	80002c8 <__aeabi_dsub>
 8023d34:	e9cd 0100 	strd	r0, r1, [sp]
 8023d38:	9b01      	ldr	r3, [sp, #4]
 8023d3a:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 8023d3e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8023d42:	da2f      	bge.n	8023da4 <__ieee754_pow+0x9bc>
 8023d44:	4650      	mov	r0, sl
 8023d46:	ed9d 0b00 	vldr	d0, [sp]
 8023d4a:	f000 f9cd 	bl	80240e8 <scalbn>
 8023d4e:	ec51 0b10 	vmov	r0, r1, d0
 8023d52:	ec53 2b18 	vmov	r2, r3, d8
 8023d56:	f7ff bbe0 	b.w	802351a <__ieee754_pow+0x132>
 8023d5a:	4b30      	ldr	r3, [pc, #192]	; (8023e1c <__ieee754_pow+0xa34>)
 8023d5c:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8023d60:	429e      	cmp	r6, r3
 8023d62:	f77f af0b 	ble.w	8023b7c <__ieee754_pow+0x794>
 8023d66:	4b2e      	ldr	r3, [pc, #184]	; (8023e20 <__ieee754_pow+0xa38>)
 8023d68:	440b      	add	r3, r1
 8023d6a:	4303      	orrs	r3, r0
 8023d6c:	d00b      	beq.n	8023d86 <__ieee754_pow+0x99e>
 8023d6e:	a326      	add	r3, pc, #152	; (adr r3, 8023e08 <__ieee754_pow+0xa20>)
 8023d70:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023d74:	ec51 0b18 	vmov	r0, r1, d8
 8023d78:	f7dc fc5e 	bl	8000638 <__aeabi_dmul>
 8023d7c:	a322      	add	r3, pc, #136	; (adr r3, 8023e08 <__ieee754_pow+0xa20>)
 8023d7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023d82:	f7ff bbca 	b.w	802351a <__ieee754_pow+0x132>
 8023d86:	4622      	mov	r2, r4
 8023d88:	462b      	mov	r3, r5
 8023d8a:	f7dc fa9d 	bl	80002c8 <__aeabi_dsub>
 8023d8e:	4642      	mov	r2, r8
 8023d90:	464b      	mov	r3, r9
 8023d92:	f7dc fed7 	bl	8000b44 <__aeabi_dcmpge>
 8023d96:	2800      	cmp	r0, #0
 8023d98:	f43f aef0 	beq.w	8023b7c <__ieee754_pow+0x794>
 8023d9c:	e7e7      	b.n	8023d6e <__ieee754_pow+0x986>
 8023d9e:	f04f 0a00 	mov.w	sl, #0
 8023da2:	e717      	b.n	8023bd4 <__ieee754_pow+0x7ec>
 8023da4:	e9dd 0100 	ldrd	r0, r1, [sp]
 8023da8:	4619      	mov	r1, r3
 8023daa:	e7d2      	b.n	8023d52 <__ieee754_pow+0x96a>
 8023dac:	491a      	ldr	r1, [pc, #104]	; (8023e18 <__ieee754_pow+0xa30>)
 8023dae:	2000      	movs	r0, #0
 8023db0:	f7ff bb9e 	b.w	80234f0 <__ieee754_pow+0x108>
 8023db4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023db8:	f7ff bb9a 	b.w	80234f0 <__ieee754_pow+0x108>
 8023dbc:	9000      	str	r0, [sp, #0]
 8023dbe:	f7ff bb76 	b.w	80234ae <__ieee754_pow+0xc6>
 8023dc2:	2100      	movs	r1, #0
 8023dc4:	f7ff bb60 	b.w	8023488 <__ieee754_pow+0xa0>
 8023dc8:	00000000 	.word	0x00000000
 8023dcc:	3fe62e43 	.word	0x3fe62e43
 8023dd0:	fefa39ef 	.word	0xfefa39ef
 8023dd4:	3fe62e42 	.word	0x3fe62e42
 8023dd8:	0ca86c39 	.word	0x0ca86c39
 8023ddc:	be205c61 	.word	0xbe205c61
 8023de0:	72bea4d0 	.word	0x72bea4d0
 8023de4:	3e663769 	.word	0x3e663769
 8023de8:	c5d26bf1 	.word	0xc5d26bf1
 8023dec:	3ebbbd41 	.word	0x3ebbbd41
 8023df0:	af25de2c 	.word	0xaf25de2c
 8023df4:	3f11566a 	.word	0x3f11566a
 8023df8:	16bebd93 	.word	0x16bebd93
 8023dfc:	3f66c16c 	.word	0x3f66c16c
 8023e00:	5555553e 	.word	0x5555553e
 8023e04:	3fc55555 	.word	0x3fc55555
 8023e08:	c2f8f359 	.word	0xc2f8f359
 8023e0c:	01a56e1f 	.word	0x01a56e1f
 8023e10:	3fe00000 	.word	0x3fe00000
 8023e14:	000fffff 	.word	0x000fffff
 8023e18:	3ff00000 	.word	0x3ff00000
 8023e1c:	4090cbff 	.word	0x4090cbff
 8023e20:	3f6f3400 	.word	0x3f6f3400
 8023e24:	652b82fe 	.word	0x652b82fe
 8023e28:	3c971547 	.word	0x3c971547

08023e2c <__ieee754_sqrt>:
 8023e2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023e30:	ec55 4b10 	vmov	r4, r5, d0
 8023e34:	4e56      	ldr	r6, [pc, #344]	; (8023f90 <__ieee754_sqrt+0x164>)
 8023e36:	43ae      	bics	r6, r5
 8023e38:	ee10 0a10 	vmov	r0, s0
 8023e3c:	ee10 3a10 	vmov	r3, s0
 8023e40:	4629      	mov	r1, r5
 8023e42:	462a      	mov	r2, r5
 8023e44:	d110      	bne.n	8023e68 <__ieee754_sqrt+0x3c>
 8023e46:	ee10 2a10 	vmov	r2, s0
 8023e4a:	462b      	mov	r3, r5
 8023e4c:	f7dc fbf4 	bl	8000638 <__aeabi_dmul>
 8023e50:	4602      	mov	r2, r0
 8023e52:	460b      	mov	r3, r1
 8023e54:	4620      	mov	r0, r4
 8023e56:	4629      	mov	r1, r5
 8023e58:	f7dc fa38 	bl	80002cc <__adddf3>
 8023e5c:	4604      	mov	r4, r0
 8023e5e:	460d      	mov	r5, r1
 8023e60:	ec45 4b10 	vmov	d0, r4, r5
 8023e64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023e68:	2d00      	cmp	r5, #0
 8023e6a:	dc10      	bgt.n	8023e8e <__ieee754_sqrt+0x62>
 8023e6c:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8023e70:	4330      	orrs	r0, r6
 8023e72:	d0f5      	beq.n	8023e60 <__ieee754_sqrt+0x34>
 8023e74:	b15d      	cbz	r5, 8023e8e <__ieee754_sqrt+0x62>
 8023e76:	ee10 2a10 	vmov	r2, s0
 8023e7a:	462b      	mov	r3, r5
 8023e7c:	ee10 0a10 	vmov	r0, s0
 8023e80:	f7dc fa22 	bl	80002c8 <__aeabi_dsub>
 8023e84:	4602      	mov	r2, r0
 8023e86:	460b      	mov	r3, r1
 8023e88:	f7dc fd00 	bl	800088c <__aeabi_ddiv>
 8023e8c:	e7e6      	b.n	8023e5c <__ieee754_sqrt+0x30>
 8023e8e:	1509      	asrs	r1, r1, #20
 8023e90:	d076      	beq.n	8023f80 <__ieee754_sqrt+0x154>
 8023e92:	f3c2 0213 	ubfx	r2, r2, #0, #20
 8023e96:	07ce      	lsls	r6, r1, #31
 8023e98:	f442 1080 	orr.w	r0, r2, #1048576	; 0x100000
 8023e9c:	bf5e      	ittt	pl
 8023e9e:	0fda      	lsrpl	r2, r3, #31
 8023ea0:	005b      	lslpl	r3, r3, #1
 8023ea2:	eb02 0040 	addpl.w	r0, r2, r0, lsl #1
 8023ea6:	0fda      	lsrs	r2, r3, #31
 8023ea8:	f2a1 35ff 	subw	r5, r1, #1023	; 0x3ff
 8023eac:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8023eb0:	2000      	movs	r0, #0
 8023eb2:	106d      	asrs	r5, r5, #1
 8023eb4:	005b      	lsls	r3, r3, #1
 8023eb6:	f04f 0e16 	mov.w	lr, #22
 8023eba:	4684      	mov	ip, r0
 8023ebc:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8023ec0:	eb0c 0401 	add.w	r4, ip, r1
 8023ec4:	4294      	cmp	r4, r2
 8023ec6:	bfde      	ittt	le
 8023ec8:	1b12      	suble	r2, r2, r4
 8023eca:	eb04 0c01 	addle.w	ip, r4, r1
 8023ece:	1840      	addle	r0, r0, r1
 8023ed0:	0052      	lsls	r2, r2, #1
 8023ed2:	f1be 0e01 	subs.w	lr, lr, #1
 8023ed6:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 8023eda:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8023ede:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8023ee2:	d1ed      	bne.n	8023ec0 <__ieee754_sqrt+0x94>
 8023ee4:	4671      	mov	r1, lr
 8023ee6:	2720      	movs	r7, #32
 8023ee8:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8023eec:	4562      	cmp	r2, ip
 8023eee:	eb04 060e 	add.w	r6, r4, lr
 8023ef2:	dc02      	bgt.n	8023efa <__ieee754_sqrt+0xce>
 8023ef4:	d113      	bne.n	8023f1e <__ieee754_sqrt+0xf2>
 8023ef6:	429e      	cmp	r6, r3
 8023ef8:	d811      	bhi.n	8023f1e <__ieee754_sqrt+0xf2>
 8023efa:	2e00      	cmp	r6, #0
 8023efc:	eb06 0e04 	add.w	lr, r6, r4
 8023f00:	da43      	bge.n	8023f8a <__ieee754_sqrt+0x15e>
 8023f02:	f1be 0f00 	cmp.w	lr, #0
 8023f06:	db40      	blt.n	8023f8a <__ieee754_sqrt+0x15e>
 8023f08:	f10c 0801 	add.w	r8, ip, #1
 8023f0c:	eba2 020c 	sub.w	r2, r2, ip
 8023f10:	429e      	cmp	r6, r3
 8023f12:	bf88      	it	hi
 8023f14:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8023f18:	1b9b      	subs	r3, r3, r6
 8023f1a:	4421      	add	r1, r4
 8023f1c:	46c4      	mov	ip, r8
 8023f1e:	0052      	lsls	r2, r2, #1
 8023f20:	3f01      	subs	r7, #1
 8023f22:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 8023f26:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8023f2a:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8023f2e:	d1dd      	bne.n	8023eec <__ieee754_sqrt+0xc0>
 8023f30:	4313      	orrs	r3, r2
 8023f32:	d006      	beq.n	8023f42 <__ieee754_sqrt+0x116>
 8023f34:	1c4c      	adds	r4, r1, #1
 8023f36:	bf13      	iteet	ne
 8023f38:	3101      	addne	r1, #1
 8023f3a:	3001      	addeq	r0, #1
 8023f3c:	4639      	moveq	r1, r7
 8023f3e:	f021 0101 	bicne.w	r1, r1, #1
 8023f42:	1043      	asrs	r3, r0, #1
 8023f44:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8023f48:	0849      	lsrs	r1, r1, #1
 8023f4a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8023f4e:	07c2      	lsls	r2, r0, #31
 8023f50:	bf48      	it	mi
 8023f52:	f041 4100 	orrmi.w	r1, r1, #2147483648	; 0x80000000
 8023f56:	eb03 5705 	add.w	r7, r3, r5, lsl #20
 8023f5a:	460c      	mov	r4, r1
 8023f5c:	463d      	mov	r5, r7
 8023f5e:	e77f      	b.n	8023e60 <__ieee754_sqrt+0x34>
 8023f60:	0ada      	lsrs	r2, r3, #11
 8023f62:	3815      	subs	r0, #21
 8023f64:	055b      	lsls	r3, r3, #21
 8023f66:	2a00      	cmp	r2, #0
 8023f68:	d0fa      	beq.n	8023f60 <__ieee754_sqrt+0x134>
 8023f6a:	02d7      	lsls	r7, r2, #11
 8023f6c:	d50a      	bpl.n	8023f84 <__ieee754_sqrt+0x158>
 8023f6e:	f1c1 0420 	rsb	r4, r1, #32
 8023f72:	fa23 f404 	lsr.w	r4, r3, r4
 8023f76:	1e4d      	subs	r5, r1, #1
 8023f78:	408b      	lsls	r3, r1
 8023f7a:	4322      	orrs	r2, r4
 8023f7c:	1b41      	subs	r1, r0, r5
 8023f7e:	e788      	b.n	8023e92 <__ieee754_sqrt+0x66>
 8023f80:	4608      	mov	r0, r1
 8023f82:	e7f0      	b.n	8023f66 <__ieee754_sqrt+0x13a>
 8023f84:	0052      	lsls	r2, r2, #1
 8023f86:	3101      	adds	r1, #1
 8023f88:	e7ef      	b.n	8023f6a <__ieee754_sqrt+0x13e>
 8023f8a:	46e0      	mov	r8, ip
 8023f8c:	e7be      	b.n	8023f0c <__ieee754_sqrt+0xe0>
 8023f8e:	bf00      	nop
 8023f90:	7ff00000 	.word	0x7ff00000

08023f94 <fabs>:
 8023f94:	ec51 0b10 	vmov	r0, r1, d0
 8023f98:	ee10 2a10 	vmov	r2, s0
 8023f9c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8023fa0:	ec43 2b10 	vmov	d0, r2, r3
 8023fa4:	4770      	bx	lr

08023fa6 <finite>:
 8023fa6:	b082      	sub	sp, #8
 8023fa8:	ed8d 0b00 	vstr	d0, [sp]
 8023fac:	9801      	ldr	r0, [sp, #4]
 8023fae:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 8023fb2:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8023fb6:	0fc0      	lsrs	r0, r0, #31
 8023fb8:	b002      	add	sp, #8
 8023fba:	4770      	bx	lr
 8023fbc:	0000      	movs	r0, r0
	...

08023fc0 <nan>:
 8023fc0:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8023fc8 <nan+0x8>
 8023fc4:	4770      	bx	lr
 8023fc6:	bf00      	nop
 8023fc8:	00000000 	.word	0x00000000
 8023fcc:	7ff80000 	.word	0x7ff80000

08023fd0 <rint>:
 8023fd0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8023fd2:	ec51 0b10 	vmov	r0, r1, d0
 8023fd6:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8023fda:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8023fde:	2e13      	cmp	r6, #19
 8023fe0:	ee10 4a10 	vmov	r4, s0
 8023fe4:	460b      	mov	r3, r1
 8023fe6:	ea4f 75d1 	mov.w	r5, r1, lsr #31
 8023fea:	dc58      	bgt.n	802409e <rint+0xce>
 8023fec:	2e00      	cmp	r6, #0
 8023fee:	da2b      	bge.n	8024048 <rint+0x78>
 8023ff0:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 8023ff4:	4302      	orrs	r2, r0
 8023ff6:	d023      	beq.n	8024040 <rint+0x70>
 8023ff8:	f3c1 0213 	ubfx	r2, r1, #0, #20
 8023ffc:	4302      	orrs	r2, r0
 8023ffe:	4254      	negs	r4, r2
 8024000:	4314      	orrs	r4, r2
 8024002:	0c4b      	lsrs	r3, r1, #17
 8024004:	0b24      	lsrs	r4, r4, #12
 8024006:	045b      	lsls	r3, r3, #17
 8024008:	f404 2400 	and.w	r4, r4, #524288	; 0x80000
 802400c:	ea44 0103 	orr.w	r1, r4, r3
 8024010:	4b32      	ldr	r3, [pc, #200]	; (80240dc <rint+0x10c>)
 8024012:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8024016:	e9d3 6700 	ldrd	r6, r7, [r3]
 802401a:	4602      	mov	r2, r0
 802401c:	460b      	mov	r3, r1
 802401e:	4630      	mov	r0, r6
 8024020:	4639      	mov	r1, r7
 8024022:	f7dc f953 	bl	80002cc <__adddf3>
 8024026:	e9cd 0100 	strd	r0, r1, [sp]
 802402a:	463b      	mov	r3, r7
 802402c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8024030:	4632      	mov	r2, r6
 8024032:	f7dc f949 	bl	80002c8 <__aeabi_dsub>
 8024036:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 802403a:	ea43 77c5 	orr.w	r7, r3, r5, lsl #31
 802403e:	4639      	mov	r1, r7
 8024040:	ec41 0b10 	vmov	d0, r0, r1
 8024044:	b003      	add	sp, #12
 8024046:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024048:	4a25      	ldr	r2, [pc, #148]	; (80240e0 <rint+0x110>)
 802404a:	4132      	asrs	r2, r6
 802404c:	ea01 0702 	and.w	r7, r1, r2
 8024050:	4307      	orrs	r7, r0
 8024052:	d0f5      	beq.n	8024040 <rint+0x70>
 8024054:	0851      	lsrs	r1, r2, #1
 8024056:	ea03 0252 	and.w	r2, r3, r2, lsr #1
 802405a:	4314      	orrs	r4, r2
 802405c:	d00c      	beq.n	8024078 <rint+0xa8>
 802405e:	ea23 0201 	bic.w	r2, r3, r1
 8024062:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8024066:	2e13      	cmp	r6, #19
 8024068:	fa43 f606 	asr.w	r6, r3, r6
 802406c:	bf0c      	ite	eq
 802406e:	f04f 4400 	moveq.w	r4, #2147483648	; 0x80000000
 8024072:	2400      	movne	r4, #0
 8024074:	ea42 0306 	orr.w	r3, r2, r6
 8024078:	4918      	ldr	r1, [pc, #96]	; (80240dc <rint+0x10c>)
 802407a:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 802407e:	4622      	mov	r2, r4
 8024080:	e9d5 4500 	ldrd	r4, r5, [r5]
 8024084:	4620      	mov	r0, r4
 8024086:	4629      	mov	r1, r5
 8024088:	f7dc f920 	bl	80002cc <__adddf3>
 802408c:	e9cd 0100 	strd	r0, r1, [sp]
 8024090:	e9dd 0100 	ldrd	r0, r1, [sp]
 8024094:	4622      	mov	r2, r4
 8024096:	462b      	mov	r3, r5
 8024098:	f7dc f916 	bl	80002c8 <__aeabi_dsub>
 802409c:	e7d0      	b.n	8024040 <rint+0x70>
 802409e:	2e33      	cmp	r6, #51	; 0x33
 80240a0:	dd07      	ble.n	80240b2 <rint+0xe2>
 80240a2:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 80240a6:	d1cb      	bne.n	8024040 <rint+0x70>
 80240a8:	ee10 2a10 	vmov	r2, s0
 80240ac:	f7dc f90e 	bl	80002cc <__adddf3>
 80240b0:	e7c6      	b.n	8024040 <rint+0x70>
 80240b2:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
 80240b6:	f04f 36ff 	mov.w	r6, #4294967295
 80240ba:	40d6      	lsrs	r6, r2
 80240bc:	4230      	tst	r0, r6
 80240be:	d0bf      	beq.n	8024040 <rint+0x70>
 80240c0:	ea14 0056 	ands.w	r0, r4, r6, lsr #1
 80240c4:	ea4f 0156 	mov.w	r1, r6, lsr #1
 80240c8:	bf1f      	itttt	ne
 80240ca:	ea24 0101 	bicne.w	r1, r4, r1
 80240ce:	f04f 4480 	movne.w	r4, #1073741824	; 0x40000000
 80240d2:	fa44 f202 	asrne.w	r2, r4, r2
 80240d6:	ea41 0402 	orrne.w	r4, r1, r2
 80240da:	e7cd      	b.n	8024078 <rint+0xa8>
 80240dc:	08027fb8 	.word	0x08027fb8
 80240e0:	000fffff 	.word	0x000fffff
 80240e4:	00000000 	.word	0x00000000

080240e8 <scalbn>:
 80240e8:	b570      	push	{r4, r5, r6, lr}
 80240ea:	ec55 4b10 	vmov	r4, r5, d0
 80240ee:	f3c5 520a 	ubfx	r2, r5, #20, #11
 80240f2:	4606      	mov	r6, r0
 80240f4:	462b      	mov	r3, r5
 80240f6:	b99a      	cbnz	r2, 8024120 <scalbn+0x38>
 80240f8:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80240fc:	4323      	orrs	r3, r4
 80240fe:	d036      	beq.n	802416e <scalbn+0x86>
 8024100:	4b39      	ldr	r3, [pc, #228]	; (80241e8 <scalbn+0x100>)
 8024102:	4629      	mov	r1, r5
 8024104:	ee10 0a10 	vmov	r0, s0
 8024108:	2200      	movs	r2, #0
 802410a:	f7dc fa95 	bl	8000638 <__aeabi_dmul>
 802410e:	4b37      	ldr	r3, [pc, #220]	; (80241ec <scalbn+0x104>)
 8024110:	429e      	cmp	r6, r3
 8024112:	4604      	mov	r4, r0
 8024114:	460d      	mov	r5, r1
 8024116:	da10      	bge.n	802413a <scalbn+0x52>
 8024118:	a32b      	add	r3, pc, #172	; (adr r3, 80241c8 <scalbn+0xe0>)
 802411a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802411e:	e03a      	b.n	8024196 <scalbn+0xae>
 8024120:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8024124:	428a      	cmp	r2, r1
 8024126:	d10c      	bne.n	8024142 <scalbn+0x5a>
 8024128:	ee10 2a10 	vmov	r2, s0
 802412c:	4620      	mov	r0, r4
 802412e:	4629      	mov	r1, r5
 8024130:	f7dc f8cc 	bl	80002cc <__adddf3>
 8024134:	4604      	mov	r4, r0
 8024136:	460d      	mov	r5, r1
 8024138:	e019      	b.n	802416e <scalbn+0x86>
 802413a:	f3c1 520a 	ubfx	r2, r1, #20, #11
 802413e:	460b      	mov	r3, r1
 8024140:	3a36      	subs	r2, #54	; 0x36
 8024142:	4432      	add	r2, r6
 8024144:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8024148:	428a      	cmp	r2, r1
 802414a:	dd08      	ble.n	802415e <scalbn+0x76>
 802414c:	2d00      	cmp	r5, #0
 802414e:	a120      	add	r1, pc, #128	; (adr r1, 80241d0 <scalbn+0xe8>)
 8024150:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024154:	da1c      	bge.n	8024190 <scalbn+0xa8>
 8024156:	a120      	add	r1, pc, #128	; (adr r1, 80241d8 <scalbn+0xf0>)
 8024158:	e9d1 0100 	ldrd	r0, r1, [r1]
 802415c:	e018      	b.n	8024190 <scalbn+0xa8>
 802415e:	2a00      	cmp	r2, #0
 8024160:	dd08      	ble.n	8024174 <scalbn+0x8c>
 8024162:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8024166:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 802416a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 802416e:	ec45 4b10 	vmov	d0, r4, r5
 8024172:	bd70      	pop	{r4, r5, r6, pc}
 8024174:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8024178:	da19      	bge.n	80241ae <scalbn+0xc6>
 802417a:	f24c 3350 	movw	r3, #50000	; 0xc350
 802417e:	429e      	cmp	r6, r3
 8024180:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 8024184:	dd0a      	ble.n	802419c <scalbn+0xb4>
 8024186:	a112      	add	r1, pc, #72	; (adr r1, 80241d0 <scalbn+0xe8>)
 8024188:	e9d1 0100 	ldrd	r0, r1, [r1]
 802418c:	2b00      	cmp	r3, #0
 802418e:	d1e2      	bne.n	8024156 <scalbn+0x6e>
 8024190:	a30f      	add	r3, pc, #60	; (adr r3, 80241d0 <scalbn+0xe8>)
 8024192:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024196:	f7dc fa4f 	bl	8000638 <__aeabi_dmul>
 802419a:	e7cb      	b.n	8024134 <scalbn+0x4c>
 802419c:	a10a      	add	r1, pc, #40	; (adr r1, 80241c8 <scalbn+0xe0>)
 802419e:	e9d1 0100 	ldrd	r0, r1, [r1]
 80241a2:	2b00      	cmp	r3, #0
 80241a4:	d0b8      	beq.n	8024118 <scalbn+0x30>
 80241a6:	a10e      	add	r1, pc, #56	; (adr r1, 80241e0 <scalbn+0xf8>)
 80241a8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80241ac:	e7b4      	b.n	8024118 <scalbn+0x30>
 80241ae:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80241b2:	3236      	adds	r2, #54	; 0x36
 80241b4:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80241b8:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 80241bc:	4620      	mov	r0, r4
 80241be:	4b0c      	ldr	r3, [pc, #48]	; (80241f0 <scalbn+0x108>)
 80241c0:	2200      	movs	r2, #0
 80241c2:	e7e8      	b.n	8024196 <scalbn+0xae>
 80241c4:	f3af 8000 	nop.w
 80241c8:	c2f8f359 	.word	0xc2f8f359
 80241cc:	01a56e1f 	.word	0x01a56e1f
 80241d0:	8800759c 	.word	0x8800759c
 80241d4:	7e37e43c 	.word	0x7e37e43c
 80241d8:	8800759c 	.word	0x8800759c
 80241dc:	fe37e43c 	.word	0xfe37e43c
 80241e0:	c2f8f359 	.word	0xc2f8f359
 80241e4:	81a56e1f 	.word	0x81a56e1f
 80241e8:	43500000 	.word	0x43500000
 80241ec:	ffff3cb0 	.word	0xffff3cb0
 80241f0:	3c900000 	.word	0x3c900000

080241f4 <abort>:
 80241f4:	b508      	push	{r3, lr}
 80241f6:	2006      	movs	r0, #6
 80241f8:	f000 f996 	bl	8024528 <raise>
 80241fc:	2001      	movs	r0, #1
 80241fe:	f7fa ff49 	bl	801f094 <_exit>

08024202 <atexit>:
 8024202:	2300      	movs	r3, #0
 8024204:	4601      	mov	r1, r0
 8024206:	461a      	mov	r2, r3
 8024208:	4618      	mov	r0, r3
 802420a:	f001 b8f9 	b.w	8025400 <__register_exitproc>
	...

08024210 <__errno>:
 8024210:	4b01      	ldr	r3, [pc, #4]	; (8024218 <__errno+0x8>)
 8024212:	6818      	ldr	r0, [r3, #0]
 8024214:	4770      	bx	lr
 8024216:	bf00      	nop
 8024218:	20000010 	.word	0x20000010

0802421c <__libc_init_array>:
 802421c:	b570      	push	{r4, r5, r6, lr}
 802421e:	4d0d      	ldr	r5, [pc, #52]	; (8024254 <__libc_init_array+0x38>)
 8024220:	4c0d      	ldr	r4, [pc, #52]	; (8024258 <__libc_init_array+0x3c>)
 8024222:	1b64      	subs	r4, r4, r5
 8024224:	10a4      	asrs	r4, r4, #2
 8024226:	2600      	movs	r6, #0
 8024228:	42a6      	cmp	r6, r4
 802422a:	d109      	bne.n	8024240 <__libc_init_array+0x24>
 802422c:	4d0b      	ldr	r5, [pc, #44]	; (802425c <__libc_init_array+0x40>)
 802422e:	4c0c      	ldr	r4, [pc, #48]	; (8024260 <__libc_init_array+0x44>)
 8024230:	f003 f870 	bl	8027314 <_init>
 8024234:	1b64      	subs	r4, r4, r5
 8024236:	10a4      	asrs	r4, r4, #2
 8024238:	2600      	movs	r6, #0
 802423a:	42a6      	cmp	r6, r4
 802423c:	d105      	bne.n	802424a <__libc_init_array+0x2e>
 802423e:	bd70      	pop	{r4, r5, r6, pc}
 8024240:	f855 3b04 	ldr.w	r3, [r5], #4
 8024244:	4798      	blx	r3
 8024246:	3601      	adds	r6, #1
 8024248:	e7ee      	b.n	8024228 <__libc_init_array+0xc>
 802424a:	f855 3b04 	ldr.w	r3, [r5], #4
 802424e:	4798      	blx	r3
 8024250:	3601      	adds	r6, #1
 8024252:	e7f2      	b.n	802423a <__libc_init_array+0x1e>
 8024254:	0802842c 	.word	0x0802842c
 8024258:	0802842c 	.word	0x0802842c
 802425c:	0802842c 	.word	0x0802842c
 8024260:	08028460 	.word	0x08028460

08024264 <isalnum>:
 8024264:	4b02      	ldr	r3, [pc, #8]	; (8024270 <isalnum+0xc>)
 8024266:	4418      	add	r0, r3
 8024268:	7840      	ldrb	r0, [r0, #1]
 802426a:	f000 0007 	and.w	r0, r0, #7
 802426e:	4770      	bx	lr
 8024270:	0802804d 	.word	0x0802804d

08024274 <isalpha>:
 8024274:	4b02      	ldr	r3, [pc, #8]	; (8024280 <isalpha+0xc>)
 8024276:	4418      	add	r0, r3
 8024278:	7840      	ldrb	r0, [r0, #1]
 802427a:	f000 0003 	and.w	r0, r0, #3
 802427e:	4770      	bx	lr
 8024280:	0802804d 	.word	0x0802804d

08024284 <isspace>:
 8024284:	4b02      	ldr	r3, [pc, #8]	; (8024290 <isspace+0xc>)
 8024286:	4418      	add	r0, r3
 8024288:	7840      	ldrb	r0, [r0, #1]
 802428a:	f000 0008 	and.w	r0, r0, #8
 802428e:	4770      	bx	lr
 8024290:	0802804d 	.word	0x0802804d

08024294 <__itoa>:
 8024294:	1e93      	subs	r3, r2, #2
 8024296:	2b22      	cmp	r3, #34	; 0x22
 8024298:	b510      	push	{r4, lr}
 802429a:	460c      	mov	r4, r1
 802429c:	d904      	bls.n	80242a8 <__itoa+0x14>
 802429e:	2300      	movs	r3, #0
 80242a0:	700b      	strb	r3, [r1, #0]
 80242a2:	461c      	mov	r4, r3
 80242a4:	4620      	mov	r0, r4
 80242a6:	bd10      	pop	{r4, pc}
 80242a8:	2a0a      	cmp	r2, #10
 80242aa:	d109      	bne.n	80242c0 <__itoa+0x2c>
 80242ac:	2800      	cmp	r0, #0
 80242ae:	da07      	bge.n	80242c0 <__itoa+0x2c>
 80242b0:	232d      	movs	r3, #45	; 0x2d
 80242b2:	700b      	strb	r3, [r1, #0]
 80242b4:	4240      	negs	r0, r0
 80242b6:	2101      	movs	r1, #1
 80242b8:	4421      	add	r1, r4
 80242ba:	f001 f85f 	bl	802537c <__utoa>
 80242be:	e7f1      	b.n	80242a4 <__itoa+0x10>
 80242c0:	2100      	movs	r1, #0
 80242c2:	e7f9      	b.n	80242b8 <__itoa+0x24>

080242c4 <itoa>:
 80242c4:	f7ff bfe6 	b.w	8024294 <__itoa>

080242c8 <malloc>:
 80242c8:	4b02      	ldr	r3, [pc, #8]	; (80242d4 <malloc+0xc>)
 80242ca:	4601      	mov	r1, r0
 80242cc:	6818      	ldr	r0, [r3, #0]
 80242ce:	f000 b899 	b.w	8024404 <_malloc_r>
 80242d2:	bf00      	nop
 80242d4:	20000010 	.word	0x20000010

080242d8 <free>:
 80242d8:	4b02      	ldr	r3, [pc, #8]	; (80242e4 <free+0xc>)
 80242da:	4601      	mov	r1, r0
 80242dc:	6818      	ldr	r0, [r3, #0]
 80242de:	f000 b841 	b.w	8024364 <_free_r>
 80242e2:	bf00      	nop
 80242e4:	20000010 	.word	0x20000010

080242e8 <memcmp>:
 80242e8:	b530      	push	{r4, r5, lr}
 80242ea:	3901      	subs	r1, #1
 80242ec:	2400      	movs	r4, #0
 80242ee:	42a2      	cmp	r2, r4
 80242f0:	d101      	bne.n	80242f6 <memcmp+0xe>
 80242f2:	2000      	movs	r0, #0
 80242f4:	e005      	b.n	8024302 <memcmp+0x1a>
 80242f6:	5d03      	ldrb	r3, [r0, r4]
 80242f8:	3401      	adds	r4, #1
 80242fa:	5d0d      	ldrb	r5, [r1, r4]
 80242fc:	42ab      	cmp	r3, r5
 80242fe:	d0f6      	beq.n	80242ee <memcmp+0x6>
 8024300:	1b58      	subs	r0, r3, r5
 8024302:	bd30      	pop	{r4, r5, pc}

08024304 <memcpy>:
 8024304:	440a      	add	r2, r1
 8024306:	4291      	cmp	r1, r2
 8024308:	f100 33ff 	add.w	r3, r0, #4294967295
 802430c:	d100      	bne.n	8024310 <memcpy+0xc>
 802430e:	4770      	bx	lr
 8024310:	b510      	push	{r4, lr}
 8024312:	f811 4b01 	ldrb.w	r4, [r1], #1
 8024316:	f803 4f01 	strb.w	r4, [r3, #1]!
 802431a:	4291      	cmp	r1, r2
 802431c:	d1f9      	bne.n	8024312 <memcpy+0xe>
 802431e:	bd10      	pop	{r4, pc}

08024320 <memmove>:
 8024320:	4288      	cmp	r0, r1
 8024322:	b510      	push	{r4, lr}
 8024324:	eb01 0402 	add.w	r4, r1, r2
 8024328:	d902      	bls.n	8024330 <memmove+0x10>
 802432a:	4284      	cmp	r4, r0
 802432c:	4623      	mov	r3, r4
 802432e:	d807      	bhi.n	8024340 <memmove+0x20>
 8024330:	1e43      	subs	r3, r0, #1
 8024332:	42a1      	cmp	r1, r4
 8024334:	d008      	beq.n	8024348 <memmove+0x28>
 8024336:	f811 2b01 	ldrb.w	r2, [r1], #1
 802433a:	f803 2f01 	strb.w	r2, [r3, #1]!
 802433e:	e7f8      	b.n	8024332 <memmove+0x12>
 8024340:	4402      	add	r2, r0
 8024342:	4601      	mov	r1, r0
 8024344:	428a      	cmp	r2, r1
 8024346:	d100      	bne.n	802434a <memmove+0x2a>
 8024348:	bd10      	pop	{r4, pc}
 802434a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 802434e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8024352:	e7f7      	b.n	8024344 <memmove+0x24>

08024354 <memset>:
 8024354:	4402      	add	r2, r0
 8024356:	4603      	mov	r3, r0
 8024358:	4293      	cmp	r3, r2
 802435a:	d100      	bne.n	802435e <memset+0xa>
 802435c:	4770      	bx	lr
 802435e:	f803 1b01 	strb.w	r1, [r3], #1
 8024362:	e7f9      	b.n	8024358 <memset+0x4>

08024364 <_free_r>:
 8024364:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8024366:	2900      	cmp	r1, #0
 8024368:	d048      	beq.n	80243fc <_free_r+0x98>
 802436a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802436e:	9001      	str	r0, [sp, #4]
 8024370:	2b00      	cmp	r3, #0
 8024372:	f1a1 0404 	sub.w	r4, r1, #4
 8024376:	bfb8      	it	lt
 8024378:	18e4      	addlt	r4, r4, r3
 802437a:	f001 fc29 	bl	8025bd0 <__malloc_lock>
 802437e:	4a20      	ldr	r2, [pc, #128]	; (8024400 <_free_r+0x9c>)
 8024380:	9801      	ldr	r0, [sp, #4]
 8024382:	6813      	ldr	r3, [r2, #0]
 8024384:	4615      	mov	r5, r2
 8024386:	b933      	cbnz	r3, 8024396 <_free_r+0x32>
 8024388:	6063      	str	r3, [r4, #4]
 802438a:	6014      	str	r4, [r2, #0]
 802438c:	b003      	add	sp, #12
 802438e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8024392:	f001 bc23 	b.w	8025bdc <__malloc_unlock>
 8024396:	42a3      	cmp	r3, r4
 8024398:	d90b      	bls.n	80243b2 <_free_r+0x4e>
 802439a:	6821      	ldr	r1, [r4, #0]
 802439c:	1862      	adds	r2, r4, r1
 802439e:	4293      	cmp	r3, r2
 80243a0:	bf04      	itt	eq
 80243a2:	681a      	ldreq	r2, [r3, #0]
 80243a4:	685b      	ldreq	r3, [r3, #4]
 80243a6:	6063      	str	r3, [r4, #4]
 80243a8:	bf04      	itt	eq
 80243aa:	1852      	addeq	r2, r2, r1
 80243ac:	6022      	streq	r2, [r4, #0]
 80243ae:	602c      	str	r4, [r5, #0]
 80243b0:	e7ec      	b.n	802438c <_free_r+0x28>
 80243b2:	461a      	mov	r2, r3
 80243b4:	685b      	ldr	r3, [r3, #4]
 80243b6:	b10b      	cbz	r3, 80243bc <_free_r+0x58>
 80243b8:	42a3      	cmp	r3, r4
 80243ba:	d9fa      	bls.n	80243b2 <_free_r+0x4e>
 80243bc:	6811      	ldr	r1, [r2, #0]
 80243be:	1855      	adds	r5, r2, r1
 80243c0:	42a5      	cmp	r5, r4
 80243c2:	d10b      	bne.n	80243dc <_free_r+0x78>
 80243c4:	6824      	ldr	r4, [r4, #0]
 80243c6:	4421      	add	r1, r4
 80243c8:	1854      	adds	r4, r2, r1
 80243ca:	42a3      	cmp	r3, r4
 80243cc:	6011      	str	r1, [r2, #0]
 80243ce:	d1dd      	bne.n	802438c <_free_r+0x28>
 80243d0:	681c      	ldr	r4, [r3, #0]
 80243d2:	685b      	ldr	r3, [r3, #4]
 80243d4:	6053      	str	r3, [r2, #4]
 80243d6:	4421      	add	r1, r4
 80243d8:	6011      	str	r1, [r2, #0]
 80243da:	e7d7      	b.n	802438c <_free_r+0x28>
 80243dc:	d902      	bls.n	80243e4 <_free_r+0x80>
 80243de:	230c      	movs	r3, #12
 80243e0:	6003      	str	r3, [r0, #0]
 80243e2:	e7d3      	b.n	802438c <_free_r+0x28>
 80243e4:	6825      	ldr	r5, [r4, #0]
 80243e6:	1961      	adds	r1, r4, r5
 80243e8:	428b      	cmp	r3, r1
 80243ea:	bf04      	itt	eq
 80243ec:	6819      	ldreq	r1, [r3, #0]
 80243ee:	685b      	ldreq	r3, [r3, #4]
 80243f0:	6063      	str	r3, [r4, #4]
 80243f2:	bf04      	itt	eq
 80243f4:	1949      	addeq	r1, r1, r5
 80243f6:	6021      	streq	r1, [r4, #0]
 80243f8:	6054      	str	r4, [r2, #4]
 80243fa:	e7c7      	b.n	802438c <_free_r+0x28>
 80243fc:	b003      	add	sp, #12
 80243fe:	bd30      	pop	{r4, r5, pc}
 8024400:	20000698 	.word	0x20000698

08024404 <_malloc_r>:
 8024404:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024406:	1ccd      	adds	r5, r1, #3
 8024408:	f025 0503 	bic.w	r5, r5, #3
 802440c:	3508      	adds	r5, #8
 802440e:	2d0c      	cmp	r5, #12
 8024410:	bf38      	it	cc
 8024412:	250c      	movcc	r5, #12
 8024414:	2d00      	cmp	r5, #0
 8024416:	4606      	mov	r6, r0
 8024418:	db01      	blt.n	802441e <_malloc_r+0x1a>
 802441a:	42a9      	cmp	r1, r5
 802441c:	d903      	bls.n	8024426 <_malloc_r+0x22>
 802441e:	230c      	movs	r3, #12
 8024420:	6033      	str	r3, [r6, #0]
 8024422:	2000      	movs	r0, #0
 8024424:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024426:	f001 fbd3 	bl	8025bd0 <__malloc_lock>
 802442a:	4921      	ldr	r1, [pc, #132]	; (80244b0 <_malloc_r+0xac>)
 802442c:	680a      	ldr	r2, [r1, #0]
 802442e:	4614      	mov	r4, r2
 8024430:	b99c      	cbnz	r4, 802445a <_malloc_r+0x56>
 8024432:	4f20      	ldr	r7, [pc, #128]	; (80244b4 <_malloc_r+0xb0>)
 8024434:	683b      	ldr	r3, [r7, #0]
 8024436:	b923      	cbnz	r3, 8024442 <_malloc_r+0x3e>
 8024438:	4621      	mov	r1, r4
 802443a:	4630      	mov	r0, r6
 802443c:	f000 f83c 	bl	80244b8 <_sbrk_r>
 8024440:	6038      	str	r0, [r7, #0]
 8024442:	4629      	mov	r1, r5
 8024444:	4630      	mov	r0, r6
 8024446:	f000 f837 	bl	80244b8 <_sbrk_r>
 802444a:	1c43      	adds	r3, r0, #1
 802444c:	d123      	bne.n	8024496 <_malloc_r+0x92>
 802444e:	230c      	movs	r3, #12
 8024450:	6033      	str	r3, [r6, #0]
 8024452:	4630      	mov	r0, r6
 8024454:	f001 fbc2 	bl	8025bdc <__malloc_unlock>
 8024458:	e7e3      	b.n	8024422 <_malloc_r+0x1e>
 802445a:	6823      	ldr	r3, [r4, #0]
 802445c:	1b5b      	subs	r3, r3, r5
 802445e:	d417      	bmi.n	8024490 <_malloc_r+0x8c>
 8024460:	2b0b      	cmp	r3, #11
 8024462:	d903      	bls.n	802446c <_malloc_r+0x68>
 8024464:	6023      	str	r3, [r4, #0]
 8024466:	441c      	add	r4, r3
 8024468:	6025      	str	r5, [r4, #0]
 802446a:	e004      	b.n	8024476 <_malloc_r+0x72>
 802446c:	6863      	ldr	r3, [r4, #4]
 802446e:	42a2      	cmp	r2, r4
 8024470:	bf0c      	ite	eq
 8024472:	600b      	streq	r3, [r1, #0]
 8024474:	6053      	strne	r3, [r2, #4]
 8024476:	4630      	mov	r0, r6
 8024478:	f001 fbb0 	bl	8025bdc <__malloc_unlock>
 802447c:	f104 000b 	add.w	r0, r4, #11
 8024480:	1d23      	adds	r3, r4, #4
 8024482:	f020 0007 	bic.w	r0, r0, #7
 8024486:	1ac2      	subs	r2, r0, r3
 8024488:	d0cc      	beq.n	8024424 <_malloc_r+0x20>
 802448a:	1a1b      	subs	r3, r3, r0
 802448c:	50a3      	str	r3, [r4, r2]
 802448e:	e7c9      	b.n	8024424 <_malloc_r+0x20>
 8024490:	4622      	mov	r2, r4
 8024492:	6864      	ldr	r4, [r4, #4]
 8024494:	e7cc      	b.n	8024430 <_malloc_r+0x2c>
 8024496:	1cc4      	adds	r4, r0, #3
 8024498:	f024 0403 	bic.w	r4, r4, #3
 802449c:	42a0      	cmp	r0, r4
 802449e:	d0e3      	beq.n	8024468 <_malloc_r+0x64>
 80244a0:	1a21      	subs	r1, r4, r0
 80244a2:	4630      	mov	r0, r6
 80244a4:	f000 f808 	bl	80244b8 <_sbrk_r>
 80244a8:	3001      	adds	r0, #1
 80244aa:	d1dd      	bne.n	8024468 <_malloc_r+0x64>
 80244ac:	e7cf      	b.n	802444e <_malloc_r+0x4a>
 80244ae:	bf00      	nop
 80244b0:	20000698 	.word	0x20000698
 80244b4:	2000069c 	.word	0x2000069c

080244b8 <_sbrk_r>:
 80244b8:	b538      	push	{r3, r4, r5, lr}
 80244ba:	4d06      	ldr	r5, [pc, #24]	; (80244d4 <_sbrk_r+0x1c>)
 80244bc:	2300      	movs	r3, #0
 80244be:	4604      	mov	r4, r0
 80244c0:	4608      	mov	r0, r1
 80244c2:	602b      	str	r3, [r5, #0]
 80244c4:	f7fa fe5e 	bl	801f184 <_sbrk>
 80244c8:	1c43      	adds	r3, r0, #1
 80244ca:	d102      	bne.n	80244d2 <_sbrk_r+0x1a>
 80244cc:	682b      	ldr	r3, [r5, #0]
 80244ce:	b103      	cbz	r3, 80244d2 <_sbrk_r+0x1a>
 80244d0:	6023      	str	r3, [r4, #0]
 80244d2:	bd38      	pop	{r3, r4, r5, pc}
 80244d4:	20000740 	.word	0x20000740

080244d8 <_raise_r>:
 80244d8:	291f      	cmp	r1, #31
 80244da:	b538      	push	{r3, r4, r5, lr}
 80244dc:	4604      	mov	r4, r0
 80244de:	460d      	mov	r5, r1
 80244e0:	d904      	bls.n	80244ec <_raise_r+0x14>
 80244e2:	2316      	movs	r3, #22
 80244e4:	6003      	str	r3, [r0, #0]
 80244e6:	f04f 30ff 	mov.w	r0, #4294967295
 80244ea:	bd38      	pop	{r3, r4, r5, pc}
 80244ec:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80244ee:	b112      	cbz	r2, 80244f6 <_raise_r+0x1e>
 80244f0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80244f4:	b94b      	cbnz	r3, 802450a <_raise_r+0x32>
 80244f6:	4620      	mov	r0, r4
 80244f8:	f000 f830 	bl	802455c <_getpid_r>
 80244fc:	462a      	mov	r2, r5
 80244fe:	4601      	mov	r1, r0
 8024500:	4620      	mov	r0, r4
 8024502:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8024506:	f000 b817 	b.w	8024538 <_kill_r>
 802450a:	2b01      	cmp	r3, #1
 802450c:	d00a      	beq.n	8024524 <_raise_r+0x4c>
 802450e:	1c59      	adds	r1, r3, #1
 8024510:	d103      	bne.n	802451a <_raise_r+0x42>
 8024512:	2316      	movs	r3, #22
 8024514:	6003      	str	r3, [r0, #0]
 8024516:	2001      	movs	r0, #1
 8024518:	e7e7      	b.n	80244ea <_raise_r+0x12>
 802451a:	2400      	movs	r4, #0
 802451c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8024520:	4628      	mov	r0, r5
 8024522:	4798      	blx	r3
 8024524:	2000      	movs	r0, #0
 8024526:	e7e0      	b.n	80244ea <_raise_r+0x12>

08024528 <raise>:
 8024528:	4b02      	ldr	r3, [pc, #8]	; (8024534 <raise+0xc>)
 802452a:	4601      	mov	r1, r0
 802452c:	6818      	ldr	r0, [r3, #0]
 802452e:	f7ff bfd3 	b.w	80244d8 <_raise_r>
 8024532:	bf00      	nop
 8024534:	20000010 	.word	0x20000010

08024538 <_kill_r>:
 8024538:	b538      	push	{r3, r4, r5, lr}
 802453a:	4d07      	ldr	r5, [pc, #28]	; (8024558 <_kill_r+0x20>)
 802453c:	2300      	movs	r3, #0
 802453e:	4604      	mov	r4, r0
 8024540:	4608      	mov	r0, r1
 8024542:	4611      	mov	r1, r2
 8024544:	602b      	str	r3, [r5, #0]
 8024546:	f7fa fd95 	bl	801f074 <_kill>
 802454a:	1c43      	adds	r3, r0, #1
 802454c:	d102      	bne.n	8024554 <_kill_r+0x1c>
 802454e:	682b      	ldr	r3, [r5, #0]
 8024550:	b103      	cbz	r3, 8024554 <_kill_r+0x1c>
 8024552:	6023      	str	r3, [r4, #0]
 8024554:	bd38      	pop	{r3, r4, r5, pc}
 8024556:	bf00      	nop
 8024558:	20000740 	.word	0x20000740

0802455c <_getpid_r>:
 802455c:	f7fa bd82 	b.w	801f064 <_getpid>

08024560 <sulp>:
 8024560:	b570      	push	{r4, r5, r6, lr}
 8024562:	4604      	mov	r4, r0
 8024564:	460d      	mov	r5, r1
 8024566:	ec45 4b10 	vmov	d0, r4, r5
 802456a:	4616      	mov	r6, r2
 802456c:	f001 fea8 	bl	80262c0 <__ulp>
 8024570:	ec51 0b10 	vmov	r0, r1, d0
 8024574:	b17e      	cbz	r6, 8024596 <sulp+0x36>
 8024576:	f3c5 530a 	ubfx	r3, r5, #20, #11
 802457a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 802457e:	2b00      	cmp	r3, #0
 8024580:	dd09      	ble.n	8024596 <sulp+0x36>
 8024582:	051b      	lsls	r3, r3, #20
 8024584:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8024588:	2400      	movs	r4, #0
 802458a:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 802458e:	4622      	mov	r2, r4
 8024590:	462b      	mov	r3, r5
 8024592:	f7dc f851 	bl	8000638 <__aeabi_dmul>
 8024596:	bd70      	pop	{r4, r5, r6, pc}

08024598 <_strtod_l>:
 8024598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802459c:	b0a3      	sub	sp, #140	; 0x8c
 802459e:	461f      	mov	r7, r3
 80245a0:	2300      	movs	r3, #0
 80245a2:	931e      	str	r3, [sp, #120]	; 0x78
 80245a4:	4ba4      	ldr	r3, [pc, #656]	; (8024838 <_strtod_l+0x2a0>)
 80245a6:	9219      	str	r2, [sp, #100]	; 0x64
 80245a8:	681b      	ldr	r3, [r3, #0]
 80245aa:	9307      	str	r3, [sp, #28]
 80245ac:	4604      	mov	r4, r0
 80245ae:	4618      	mov	r0, r3
 80245b0:	4688      	mov	r8, r1
 80245b2:	f7db fe7d 	bl	80002b0 <strlen>
 80245b6:	f04f 0a00 	mov.w	sl, #0
 80245ba:	4605      	mov	r5, r0
 80245bc:	f04f 0b00 	mov.w	fp, #0
 80245c0:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 80245c4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80245c6:	781a      	ldrb	r2, [r3, #0]
 80245c8:	2a2b      	cmp	r2, #43	; 0x2b
 80245ca:	d04c      	beq.n	8024666 <_strtod_l+0xce>
 80245cc:	d839      	bhi.n	8024642 <_strtod_l+0xaa>
 80245ce:	2a0d      	cmp	r2, #13
 80245d0:	d832      	bhi.n	8024638 <_strtod_l+0xa0>
 80245d2:	2a08      	cmp	r2, #8
 80245d4:	d832      	bhi.n	802463c <_strtod_l+0xa4>
 80245d6:	2a00      	cmp	r2, #0
 80245d8:	d03c      	beq.n	8024654 <_strtod_l+0xbc>
 80245da:	2300      	movs	r3, #0
 80245dc:	930e      	str	r3, [sp, #56]	; 0x38
 80245de:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80245e0:	7833      	ldrb	r3, [r6, #0]
 80245e2:	2b30      	cmp	r3, #48	; 0x30
 80245e4:	f040 80b4 	bne.w	8024750 <_strtod_l+0x1b8>
 80245e8:	7873      	ldrb	r3, [r6, #1]
 80245ea:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80245ee:	2b58      	cmp	r3, #88	; 0x58
 80245f0:	d16c      	bne.n	80246cc <_strtod_l+0x134>
 80245f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80245f4:	9301      	str	r3, [sp, #4]
 80245f6:	ab1e      	add	r3, sp, #120	; 0x78
 80245f8:	9702      	str	r7, [sp, #8]
 80245fa:	9300      	str	r3, [sp, #0]
 80245fc:	4a8f      	ldr	r2, [pc, #572]	; (802483c <_strtod_l+0x2a4>)
 80245fe:	ab1f      	add	r3, sp, #124	; 0x7c
 8024600:	a91d      	add	r1, sp, #116	; 0x74
 8024602:	4620      	mov	r0, r4
 8024604:	f000 ffc6 	bl	8025594 <__gethex>
 8024608:	f010 0707 	ands.w	r7, r0, #7
 802460c:	4605      	mov	r5, r0
 802460e:	d005      	beq.n	802461c <_strtod_l+0x84>
 8024610:	2f06      	cmp	r7, #6
 8024612:	d12a      	bne.n	802466a <_strtod_l+0xd2>
 8024614:	3601      	adds	r6, #1
 8024616:	2300      	movs	r3, #0
 8024618:	961d      	str	r6, [sp, #116]	; 0x74
 802461a:	930e      	str	r3, [sp, #56]	; 0x38
 802461c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802461e:	2b00      	cmp	r3, #0
 8024620:	f040 8596 	bne.w	8025150 <_strtod_l+0xbb8>
 8024624:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024626:	b1db      	cbz	r3, 8024660 <_strtod_l+0xc8>
 8024628:	4652      	mov	r2, sl
 802462a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 802462e:	ec43 2b10 	vmov	d0, r2, r3
 8024632:	b023      	add	sp, #140	; 0x8c
 8024634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024638:	2a20      	cmp	r2, #32
 802463a:	d1ce      	bne.n	80245da <_strtod_l+0x42>
 802463c:	3301      	adds	r3, #1
 802463e:	931d      	str	r3, [sp, #116]	; 0x74
 8024640:	e7c0      	b.n	80245c4 <_strtod_l+0x2c>
 8024642:	2a2d      	cmp	r2, #45	; 0x2d
 8024644:	d1c9      	bne.n	80245da <_strtod_l+0x42>
 8024646:	2201      	movs	r2, #1
 8024648:	920e      	str	r2, [sp, #56]	; 0x38
 802464a:	1c5a      	adds	r2, r3, #1
 802464c:	921d      	str	r2, [sp, #116]	; 0x74
 802464e:	785b      	ldrb	r3, [r3, #1]
 8024650:	2b00      	cmp	r3, #0
 8024652:	d1c4      	bne.n	80245de <_strtod_l+0x46>
 8024654:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024656:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 802465a:	2b00      	cmp	r3, #0
 802465c:	f040 8576 	bne.w	802514c <_strtod_l+0xbb4>
 8024660:	4652      	mov	r2, sl
 8024662:	465b      	mov	r3, fp
 8024664:	e7e3      	b.n	802462e <_strtod_l+0x96>
 8024666:	2200      	movs	r2, #0
 8024668:	e7ee      	b.n	8024648 <_strtod_l+0xb0>
 802466a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802466c:	b13a      	cbz	r2, 802467e <_strtod_l+0xe6>
 802466e:	2135      	movs	r1, #53	; 0x35
 8024670:	a820      	add	r0, sp, #128	; 0x80
 8024672:	f001 ff30 	bl	80264d6 <__copybits>
 8024676:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024678:	4620      	mov	r0, r4
 802467a:	f001 faf5 	bl	8025c68 <_Bfree>
 802467e:	3f01      	subs	r7, #1
 8024680:	2f05      	cmp	r7, #5
 8024682:	d807      	bhi.n	8024694 <_strtod_l+0xfc>
 8024684:	e8df f007 	tbb	[pc, r7]
 8024688:	1d180b0e 	.word	0x1d180b0e
 802468c:	030e      	.short	0x030e
 802468e:	f04f 0b00 	mov.w	fp, #0
 8024692:	46da      	mov	sl, fp
 8024694:	0728      	lsls	r0, r5, #28
 8024696:	d5c1      	bpl.n	802461c <_strtod_l+0x84>
 8024698:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 802469c:	e7be      	b.n	802461c <_strtod_l+0x84>
 802469e:	e9dd ab20 	ldrd	sl, fp, [sp, #128]	; 0x80
 80246a2:	e7f7      	b.n	8024694 <_strtod_l+0xfc>
 80246a4:	e9dd a320 	ldrd	sl, r3, [sp, #128]	; 0x80
 80246a8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80246aa:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80246ae:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80246b2:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 80246b6:	e7ed      	b.n	8024694 <_strtod_l+0xfc>
 80246b8:	f8df b184 	ldr.w	fp, [pc, #388]	; 8024840 <_strtod_l+0x2a8>
 80246bc:	f04f 0a00 	mov.w	sl, #0
 80246c0:	e7e8      	b.n	8024694 <_strtod_l+0xfc>
 80246c2:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 80246c6:	f04f 3aff 	mov.w	sl, #4294967295
 80246ca:	e7e3      	b.n	8024694 <_strtod_l+0xfc>
 80246cc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80246ce:	1c5a      	adds	r2, r3, #1
 80246d0:	921d      	str	r2, [sp, #116]	; 0x74
 80246d2:	785b      	ldrb	r3, [r3, #1]
 80246d4:	2b30      	cmp	r3, #48	; 0x30
 80246d6:	d0f9      	beq.n	80246cc <_strtod_l+0x134>
 80246d8:	2b00      	cmp	r3, #0
 80246da:	d09f      	beq.n	802461c <_strtod_l+0x84>
 80246dc:	2301      	movs	r3, #1
 80246de:	f04f 0900 	mov.w	r9, #0
 80246e2:	9304      	str	r3, [sp, #16]
 80246e4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80246e6:	930a      	str	r3, [sp, #40]	; 0x28
 80246e8:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 80246ec:	464f      	mov	r7, r9
 80246ee:	220a      	movs	r2, #10
 80246f0:	981d      	ldr	r0, [sp, #116]	; 0x74
 80246f2:	7806      	ldrb	r6, [r0, #0]
 80246f4:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 80246f8:	b2d9      	uxtb	r1, r3
 80246fa:	2909      	cmp	r1, #9
 80246fc:	d92a      	bls.n	8024754 <_strtod_l+0x1bc>
 80246fe:	9907      	ldr	r1, [sp, #28]
 8024700:	462a      	mov	r2, r5
 8024702:	f001 ff41 	bl	8026588 <strncmp>
 8024706:	b398      	cbz	r0, 8024770 <_strtod_l+0x1d8>
 8024708:	2000      	movs	r0, #0
 802470a:	4633      	mov	r3, r6
 802470c:	463d      	mov	r5, r7
 802470e:	9007      	str	r0, [sp, #28]
 8024710:	4602      	mov	r2, r0
 8024712:	2b65      	cmp	r3, #101	; 0x65
 8024714:	d001      	beq.n	802471a <_strtod_l+0x182>
 8024716:	2b45      	cmp	r3, #69	; 0x45
 8024718:	d118      	bne.n	802474c <_strtod_l+0x1b4>
 802471a:	b91d      	cbnz	r5, 8024724 <_strtod_l+0x18c>
 802471c:	9b04      	ldr	r3, [sp, #16]
 802471e:	4303      	orrs	r3, r0
 8024720:	d098      	beq.n	8024654 <_strtod_l+0xbc>
 8024722:	2500      	movs	r5, #0
 8024724:	f8dd 8074 	ldr.w	r8, [sp, #116]	; 0x74
 8024728:	f108 0301 	add.w	r3, r8, #1
 802472c:	931d      	str	r3, [sp, #116]	; 0x74
 802472e:	f898 3001 	ldrb.w	r3, [r8, #1]
 8024732:	2b2b      	cmp	r3, #43	; 0x2b
 8024734:	d075      	beq.n	8024822 <_strtod_l+0x28a>
 8024736:	2b2d      	cmp	r3, #45	; 0x2d
 8024738:	d07b      	beq.n	8024832 <_strtod_l+0x29a>
 802473a:	f04f 0c00 	mov.w	ip, #0
 802473e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8024742:	2909      	cmp	r1, #9
 8024744:	f240 8082 	bls.w	802484c <_strtod_l+0x2b4>
 8024748:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 802474c:	2600      	movs	r6, #0
 802474e:	e09d      	b.n	802488c <_strtod_l+0x2f4>
 8024750:	2300      	movs	r3, #0
 8024752:	e7c4      	b.n	80246de <_strtod_l+0x146>
 8024754:	2f08      	cmp	r7, #8
 8024756:	bfd8      	it	le
 8024758:	9909      	ldrle	r1, [sp, #36]	; 0x24
 802475a:	f100 0001 	add.w	r0, r0, #1
 802475e:	bfda      	itte	le
 8024760:	fb02 3301 	mlale	r3, r2, r1, r3
 8024764:	9309      	strle	r3, [sp, #36]	; 0x24
 8024766:	fb02 3909 	mlagt	r9, r2, r9, r3
 802476a:	3701      	adds	r7, #1
 802476c:	901d      	str	r0, [sp, #116]	; 0x74
 802476e:	e7bf      	b.n	80246f0 <_strtod_l+0x158>
 8024770:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024772:	195a      	adds	r2, r3, r5
 8024774:	921d      	str	r2, [sp, #116]	; 0x74
 8024776:	5d5b      	ldrb	r3, [r3, r5]
 8024778:	2f00      	cmp	r7, #0
 802477a:	d037      	beq.n	80247ec <_strtod_l+0x254>
 802477c:	9007      	str	r0, [sp, #28]
 802477e:	463d      	mov	r5, r7
 8024780:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8024784:	2a09      	cmp	r2, #9
 8024786:	d912      	bls.n	80247ae <_strtod_l+0x216>
 8024788:	2201      	movs	r2, #1
 802478a:	e7c2      	b.n	8024712 <_strtod_l+0x17a>
 802478c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802478e:	1c5a      	adds	r2, r3, #1
 8024790:	921d      	str	r2, [sp, #116]	; 0x74
 8024792:	785b      	ldrb	r3, [r3, #1]
 8024794:	3001      	adds	r0, #1
 8024796:	2b30      	cmp	r3, #48	; 0x30
 8024798:	d0f8      	beq.n	802478c <_strtod_l+0x1f4>
 802479a:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 802479e:	2a08      	cmp	r2, #8
 80247a0:	f200 84db 	bhi.w	802515a <_strtod_l+0xbc2>
 80247a4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80247a6:	9007      	str	r0, [sp, #28]
 80247a8:	2000      	movs	r0, #0
 80247aa:	920a      	str	r2, [sp, #40]	; 0x28
 80247ac:	4605      	mov	r5, r0
 80247ae:	3b30      	subs	r3, #48	; 0x30
 80247b0:	f100 0201 	add.w	r2, r0, #1
 80247b4:	d014      	beq.n	80247e0 <_strtod_l+0x248>
 80247b6:	9907      	ldr	r1, [sp, #28]
 80247b8:	4411      	add	r1, r2
 80247ba:	9107      	str	r1, [sp, #28]
 80247bc:	462a      	mov	r2, r5
 80247be:	eb00 0e05 	add.w	lr, r0, r5
 80247c2:	210a      	movs	r1, #10
 80247c4:	4572      	cmp	r2, lr
 80247c6:	d113      	bne.n	80247f0 <_strtod_l+0x258>
 80247c8:	182a      	adds	r2, r5, r0
 80247ca:	2a08      	cmp	r2, #8
 80247cc:	f105 0501 	add.w	r5, r5, #1
 80247d0:	4405      	add	r5, r0
 80247d2:	dc1c      	bgt.n	802480e <_strtod_l+0x276>
 80247d4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80247d6:	220a      	movs	r2, #10
 80247d8:	fb02 3301 	mla	r3, r2, r1, r3
 80247dc:	9309      	str	r3, [sp, #36]	; 0x24
 80247de:	2200      	movs	r2, #0
 80247e0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80247e2:	1c59      	adds	r1, r3, #1
 80247e4:	911d      	str	r1, [sp, #116]	; 0x74
 80247e6:	785b      	ldrb	r3, [r3, #1]
 80247e8:	4610      	mov	r0, r2
 80247ea:	e7c9      	b.n	8024780 <_strtod_l+0x1e8>
 80247ec:	4638      	mov	r0, r7
 80247ee:	e7d2      	b.n	8024796 <_strtod_l+0x1fe>
 80247f0:	2a08      	cmp	r2, #8
 80247f2:	dc04      	bgt.n	80247fe <_strtod_l+0x266>
 80247f4:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80247f6:	434e      	muls	r6, r1
 80247f8:	9609      	str	r6, [sp, #36]	; 0x24
 80247fa:	3201      	adds	r2, #1
 80247fc:	e7e2      	b.n	80247c4 <_strtod_l+0x22c>
 80247fe:	f102 0c01 	add.w	ip, r2, #1
 8024802:	f1bc 0f10 	cmp.w	ip, #16
 8024806:	bfd8      	it	le
 8024808:	fb01 f909 	mulle.w	r9, r1, r9
 802480c:	e7f5      	b.n	80247fa <_strtod_l+0x262>
 802480e:	2d10      	cmp	r5, #16
 8024810:	bfdc      	itt	le
 8024812:	220a      	movle	r2, #10
 8024814:	fb02 3909 	mlale	r9, r2, r9, r3
 8024818:	e7e1      	b.n	80247de <_strtod_l+0x246>
 802481a:	2300      	movs	r3, #0
 802481c:	9307      	str	r3, [sp, #28]
 802481e:	2201      	movs	r2, #1
 8024820:	e77c      	b.n	802471c <_strtod_l+0x184>
 8024822:	f04f 0c00 	mov.w	ip, #0
 8024826:	f108 0302 	add.w	r3, r8, #2
 802482a:	931d      	str	r3, [sp, #116]	; 0x74
 802482c:	f898 3002 	ldrb.w	r3, [r8, #2]
 8024830:	e785      	b.n	802473e <_strtod_l+0x1a6>
 8024832:	f04f 0c01 	mov.w	ip, #1
 8024836:	e7f6      	b.n	8024826 <_strtod_l+0x28e>
 8024838:	080281c8 	.word	0x080281c8
 802483c:	08027fd8 	.word	0x08027fd8
 8024840:	7ff00000 	.word	0x7ff00000
 8024844:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024846:	1c59      	adds	r1, r3, #1
 8024848:	911d      	str	r1, [sp, #116]	; 0x74
 802484a:	785b      	ldrb	r3, [r3, #1]
 802484c:	2b30      	cmp	r3, #48	; 0x30
 802484e:	d0f9      	beq.n	8024844 <_strtod_l+0x2ac>
 8024850:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 8024854:	2908      	cmp	r1, #8
 8024856:	f63f af79 	bhi.w	802474c <_strtod_l+0x1b4>
 802485a:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 802485e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024860:	9308      	str	r3, [sp, #32]
 8024862:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024864:	1c59      	adds	r1, r3, #1
 8024866:	911d      	str	r1, [sp, #116]	; 0x74
 8024868:	785b      	ldrb	r3, [r3, #1]
 802486a:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
 802486e:	2e09      	cmp	r6, #9
 8024870:	d937      	bls.n	80248e2 <_strtod_l+0x34a>
 8024872:	9e08      	ldr	r6, [sp, #32]
 8024874:	1b89      	subs	r1, r1, r6
 8024876:	2908      	cmp	r1, #8
 8024878:	f644 661f 	movw	r6, #19999	; 0x4e1f
 802487c:	dc02      	bgt.n	8024884 <_strtod_l+0x2ec>
 802487e:	4576      	cmp	r6, lr
 8024880:	bfa8      	it	ge
 8024882:	4676      	movge	r6, lr
 8024884:	f1bc 0f00 	cmp.w	ip, #0
 8024888:	d000      	beq.n	802488c <_strtod_l+0x2f4>
 802488a:	4276      	negs	r6, r6
 802488c:	2d00      	cmp	r5, #0
 802488e:	d14f      	bne.n	8024930 <_strtod_l+0x398>
 8024890:	9904      	ldr	r1, [sp, #16]
 8024892:	4301      	orrs	r1, r0
 8024894:	f47f aec2 	bne.w	802461c <_strtod_l+0x84>
 8024898:	2a00      	cmp	r2, #0
 802489a:	f47f aedb 	bne.w	8024654 <_strtod_l+0xbc>
 802489e:	2b69      	cmp	r3, #105	; 0x69
 80248a0:	d027      	beq.n	80248f2 <_strtod_l+0x35a>
 80248a2:	dc24      	bgt.n	80248ee <_strtod_l+0x356>
 80248a4:	2b49      	cmp	r3, #73	; 0x49
 80248a6:	d024      	beq.n	80248f2 <_strtod_l+0x35a>
 80248a8:	2b4e      	cmp	r3, #78	; 0x4e
 80248aa:	f47f aed3 	bne.w	8024654 <_strtod_l+0xbc>
 80248ae:	499e      	ldr	r1, [pc, #632]	; (8024b28 <_strtod_l+0x590>)
 80248b0:	a81d      	add	r0, sp, #116	; 0x74
 80248b2:	f001 f8c7 	bl	8025a44 <__match>
 80248b6:	2800      	cmp	r0, #0
 80248b8:	f43f aecc 	beq.w	8024654 <_strtod_l+0xbc>
 80248bc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80248be:	781b      	ldrb	r3, [r3, #0]
 80248c0:	2b28      	cmp	r3, #40	; 0x28
 80248c2:	d12d      	bne.n	8024920 <_strtod_l+0x388>
 80248c4:	4999      	ldr	r1, [pc, #612]	; (8024b2c <_strtod_l+0x594>)
 80248c6:	aa20      	add	r2, sp, #128	; 0x80
 80248c8:	a81d      	add	r0, sp, #116	; 0x74
 80248ca:	f001 f8cf 	bl	8025a6c <__hexnan>
 80248ce:	2805      	cmp	r0, #5
 80248d0:	d126      	bne.n	8024920 <_strtod_l+0x388>
 80248d2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80248d4:	f8dd a080 	ldr.w	sl, [sp, #128]	; 0x80
 80248d8:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 80248dc:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 80248e0:	e69c      	b.n	802461c <_strtod_l+0x84>
 80248e2:	210a      	movs	r1, #10
 80248e4:	fb01 3e0e 	mla	lr, r1, lr, r3
 80248e8:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 80248ec:	e7b9      	b.n	8024862 <_strtod_l+0x2ca>
 80248ee:	2b6e      	cmp	r3, #110	; 0x6e
 80248f0:	e7db      	b.n	80248aa <_strtod_l+0x312>
 80248f2:	498f      	ldr	r1, [pc, #572]	; (8024b30 <_strtod_l+0x598>)
 80248f4:	a81d      	add	r0, sp, #116	; 0x74
 80248f6:	f001 f8a5 	bl	8025a44 <__match>
 80248fa:	2800      	cmp	r0, #0
 80248fc:	f43f aeaa 	beq.w	8024654 <_strtod_l+0xbc>
 8024900:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024902:	498c      	ldr	r1, [pc, #560]	; (8024b34 <_strtod_l+0x59c>)
 8024904:	3b01      	subs	r3, #1
 8024906:	a81d      	add	r0, sp, #116	; 0x74
 8024908:	931d      	str	r3, [sp, #116]	; 0x74
 802490a:	f001 f89b 	bl	8025a44 <__match>
 802490e:	b910      	cbnz	r0, 8024916 <_strtod_l+0x37e>
 8024910:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024912:	3301      	adds	r3, #1
 8024914:	931d      	str	r3, [sp, #116]	; 0x74
 8024916:	f8df b22c 	ldr.w	fp, [pc, #556]	; 8024b44 <_strtod_l+0x5ac>
 802491a:	f04f 0a00 	mov.w	sl, #0
 802491e:	e67d      	b.n	802461c <_strtod_l+0x84>
 8024920:	4885      	ldr	r0, [pc, #532]	; (8024b38 <_strtod_l+0x5a0>)
 8024922:	f7ff fb4d 	bl	8023fc0 <nan>
 8024926:	ed8d 0b04 	vstr	d0, [sp, #16]
 802492a:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
 802492e:	e675      	b.n	802461c <_strtod_l+0x84>
 8024930:	9b07      	ldr	r3, [sp, #28]
 8024932:	9809      	ldr	r0, [sp, #36]	; 0x24
 8024934:	1af3      	subs	r3, r6, r3
 8024936:	2f00      	cmp	r7, #0
 8024938:	bf08      	it	eq
 802493a:	462f      	moveq	r7, r5
 802493c:	2d10      	cmp	r5, #16
 802493e:	9308      	str	r3, [sp, #32]
 8024940:	46a8      	mov	r8, r5
 8024942:	bfa8      	it	ge
 8024944:	f04f 0810 	movge.w	r8, #16
 8024948:	f7db fdfc 	bl	8000544 <__aeabi_ui2d>
 802494c:	2d09      	cmp	r5, #9
 802494e:	4682      	mov	sl, r0
 8024950:	468b      	mov	fp, r1
 8024952:	dd13      	ble.n	802497c <_strtod_l+0x3e4>
 8024954:	4b79      	ldr	r3, [pc, #484]	; (8024b3c <_strtod_l+0x5a4>)
 8024956:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 802495a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 802495e:	f7db fe6b 	bl	8000638 <__aeabi_dmul>
 8024962:	4682      	mov	sl, r0
 8024964:	4648      	mov	r0, r9
 8024966:	468b      	mov	fp, r1
 8024968:	f7db fdec 	bl	8000544 <__aeabi_ui2d>
 802496c:	4602      	mov	r2, r0
 802496e:	460b      	mov	r3, r1
 8024970:	4650      	mov	r0, sl
 8024972:	4659      	mov	r1, fp
 8024974:	f7db fcaa 	bl	80002cc <__adddf3>
 8024978:	4682      	mov	sl, r0
 802497a:	468b      	mov	fp, r1
 802497c:	2d0f      	cmp	r5, #15
 802497e:	dc38      	bgt.n	80249f2 <_strtod_l+0x45a>
 8024980:	9b08      	ldr	r3, [sp, #32]
 8024982:	2b00      	cmp	r3, #0
 8024984:	f43f ae4a 	beq.w	802461c <_strtod_l+0x84>
 8024988:	dd24      	ble.n	80249d4 <_strtod_l+0x43c>
 802498a:	2b16      	cmp	r3, #22
 802498c:	dc0b      	bgt.n	80249a6 <_strtod_l+0x40e>
 802498e:	4d6b      	ldr	r5, [pc, #428]	; (8024b3c <_strtod_l+0x5a4>)
 8024990:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8024994:	e9d5 0100 	ldrd	r0, r1, [r5]
 8024998:	4652      	mov	r2, sl
 802499a:	465b      	mov	r3, fp
 802499c:	f7db fe4c 	bl	8000638 <__aeabi_dmul>
 80249a0:	4682      	mov	sl, r0
 80249a2:	468b      	mov	fp, r1
 80249a4:	e63a      	b.n	802461c <_strtod_l+0x84>
 80249a6:	9a08      	ldr	r2, [sp, #32]
 80249a8:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 80249ac:	4293      	cmp	r3, r2
 80249ae:	db20      	blt.n	80249f2 <_strtod_l+0x45a>
 80249b0:	4c62      	ldr	r4, [pc, #392]	; (8024b3c <_strtod_l+0x5a4>)
 80249b2:	f1c5 050f 	rsb	r5, r5, #15
 80249b6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80249ba:	4652      	mov	r2, sl
 80249bc:	465b      	mov	r3, fp
 80249be:	e9d1 0100 	ldrd	r0, r1, [r1]
 80249c2:	f7db fe39 	bl	8000638 <__aeabi_dmul>
 80249c6:	9b08      	ldr	r3, [sp, #32]
 80249c8:	1b5d      	subs	r5, r3, r5
 80249ca:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80249ce:	e9d4 2300 	ldrd	r2, r3, [r4]
 80249d2:	e7e3      	b.n	802499c <_strtod_l+0x404>
 80249d4:	9b08      	ldr	r3, [sp, #32]
 80249d6:	3316      	adds	r3, #22
 80249d8:	db0b      	blt.n	80249f2 <_strtod_l+0x45a>
 80249da:	9b07      	ldr	r3, [sp, #28]
 80249dc:	4a57      	ldr	r2, [pc, #348]	; (8024b3c <_strtod_l+0x5a4>)
 80249de:	1b9e      	subs	r6, r3, r6
 80249e0:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
 80249e4:	e9d6 2300 	ldrd	r2, r3, [r6]
 80249e8:	4650      	mov	r0, sl
 80249ea:	4659      	mov	r1, fp
 80249ec:	f7db ff4e 	bl	800088c <__aeabi_ddiv>
 80249f0:	e7d6      	b.n	80249a0 <_strtod_l+0x408>
 80249f2:	9b08      	ldr	r3, [sp, #32]
 80249f4:	eba5 0808 	sub.w	r8, r5, r8
 80249f8:	4498      	add	r8, r3
 80249fa:	f1b8 0f00 	cmp.w	r8, #0
 80249fe:	dd71      	ble.n	8024ae4 <_strtod_l+0x54c>
 8024a00:	f018 030f 	ands.w	r3, r8, #15
 8024a04:	d00a      	beq.n	8024a1c <_strtod_l+0x484>
 8024a06:	494d      	ldr	r1, [pc, #308]	; (8024b3c <_strtod_l+0x5a4>)
 8024a08:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8024a0c:	4652      	mov	r2, sl
 8024a0e:	465b      	mov	r3, fp
 8024a10:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024a14:	f7db fe10 	bl	8000638 <__aeabi_dmul>
 8024a18:	4682      	mov	sl, r0
 8024a1a:	468b      	mov	fp, r1
 8024a1c:	f038 080f 	bics.w	r8, r8, #15
 8024a20:	d04d      	beq.n	8024abe <_strtod_l+0x526>
 8024a22:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8024a26:	dd22      	ble.n	8024a6e <_strtod_l+0x4d6>
 8024a28:	2500      	movs	r5, #0
 8024a2a:	462e      	mov	r6, r5
 8024a2c:	9509      	str	r5, [sp, #36]	; 0x24
 8024a2e:	9507      	str	r5, [sp, #28]
 8024a30:	2322      	movs	r3, #34	; 0x22
 8024a32:	f8df b110 	ldr.w	fp, [pc, #272]	; 8024b44 <_strtod_l+0x5ac>
 8024a36:	6023      	str	r3, [r4, #0]
 8024a38:	f04f 0a00 	mov.w	sl, #0
 8024a3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a3e:	2b00      	cmp	r3, #0
 8024a40:	f43f adec 	beq.w	802461c <_strtod_l+0x84>
 8024a44:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024a46:	4620      	mov	r0, r4
 8024a48:	f001 f90e 	bl	8025c68 <_Bfree>
 8024a4c:	9907      	ldr	r1, [sp, #28]
 8024a4e:	4620      	mov	r0, r4
 8024a50:	f001 f90a 	bl	8025c68 <_Bfree>
 8024a54:	4631      	mov	r1, r6
 8024a56:	4620      	mov	r0, r4
 8024a58:	f001 f906 	bl	8025c68 <_Bfree>
 8024a5c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024a5e:	4620      	mov	r0, r4
 8024a60:	f001 f902 	bl	8025c68 <_Bfree>
 8024a64:	4629      	mov	r1, r5
 8024a66:	4620      	mov	r0, r4
 8024a68:	f001 f8fe 	bl	8025c68 <_Bfree>
 8024a6c:	e5d6      	b.n	802461c <_strtod_l+0x84>
 8024a6e:	2300      	movs	r3, #0
 8024a70:	ea4f 1828 	mov.w	r8, r8, asr #4
 8024a74:	4650      	mov	r0, sl
 8024a76:	4659      	mov	r1, fp
 8024a78:	4699      	mov	r9, r3
 8024a7a:	f1b8 0f01 	cmp.w	r8, #1
 8024a7e:	dc21      	bgt.n	8024ac4 <_strtod_l+0x52c>
 8024a80:	b10b      	cbz	r3, 8024a86 <_strtod_l+0x4ee>
 8024a82:	4682      	mov	sl, r0
 8024a84:	468b      	mov	fp, r1
 8024a86:	4b2e      	ldr	r3, [pc, #184]	; (8024b40 <_strtod_l+0x5a8>)
 8024a88:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8024a8c:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 8024a90:	4652      	mov	r2, sl
 8024a92:	465b      	mov	r3, fp
 8024a94:	e9d9 0100 	ldrd	r0, r1, [r9]
 8024a98:	f7db fdce 	bl	8000638 <__aeabi_dmul>
 8024a9c:	4b29      	ldr	r3, [pc, #164]	; (8024b44 <_strtod_l+0x5ac>)
 8024a9e:	460a      	mov	r2, r1
 8024aa0:	400b      	ands	r3, r1
 8024aa2:	4929      	ldr	r1, [pc, #164]	; (8024b48 <_strtod_l+0x5b0>)
 8024aa4:	428b      	cmp	r3, r1
 8024aa6:	4682      	mov	sl, r0
 8024aa8:	d8be      	bhi.n	8024a28 <_strtod_l+0x490>
 8024aaa:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8024aae:	428b      	cmp	r3, r1
 8024ab0:	bf86      	itte	hi
 8024ab2:	f8df b098 	ldrhi.w	fp, [pc, #152]	; 8024b4c <_strtod_l+0x5b4>
 8024ab6:	f04f 3aff 	movhi.w	sl, #4294967295
 8024aba:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 8024abe:	2300      	movs	r3, #0
 8024ac0:	9304      	str	r3, [sp, #16]
 8024ac2:	e081      	b.n	8024bc8 <_strtod_l+0x630>
 8024ac4:	f018 0f01 	tst.w	r8, #1
 8024ac8:	d007      	beq.n	8024ada <_strtod_l+0x542>
 8024aca:	4b1d      	ldr	r3, [pc, #116]	; (8024b40 <_strtod_l+0x5a8>)
 8024acc:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8024ad0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024ad4:	f7db fdb0 	bl	8000638 <__aeabi_dmul>
 8024ad8:	2301      	movs	r3, #1
 8024ada:	f109 0901 	add.w	r9, r9, #1
 8024ade:	ea4f 0868 	mov.w	r8, r8, asr #1
 8024ae2:	e7ca      	b.n	8024a7a <_strtod_l+0x4e2>
 8024ae4:	d0eb      	beq.n	8024abe <_strtod_l+0x526>
 8024ae6:	f1c8 0800 	rsb	r8, r8, #0
 8024aea:	f018 020f 	ands.w	r2, r8, #15
 8024aee:	d00a      	beq.n	8024b06 <_strtod_l+0x56e>
 8024af0:	4b12      	ldr	r3, [pc, #72]	; (8024b3c <_strtod_l+0x5a4>)
 8024af2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8024af6:	4650      	mov	r0, sl
 8024af8:	4659      	mov	r1, fp
 8024afa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024afe:	f7db fec5 	bl	800088c <__aeabi_ddiv>
 8024b02:	4682      	mov	sl, r0
 8024b04:	468b      	mov	fp, r1
 8024b06:	ea5f 1828 	movs.w	r8, r8, asr #4
 8024b0a:	d0d8      	beq.n	8024abe <_strtod_l+0x526>
 8024b0c:	f1b8 0f1f 	cmp.w	r8, #31
 8024b10:	dd1e      	ble.n	8024b50 <_strtod_l+0x5b8>
 8024b12:	2500      	movs	r5, #0
 8024b14:	462e      	mov	r6, r5
 8024b16:	9509      	str	r5, [sp, #36]	; 0x24
 8024b18:	9507      	str	r5, [sp, #28]
 8024b1a:	2322      	movs	r3, #34	; 0x22
 8024b1c:	f04f 0a00 	mov.w	sl, #0
 8024b20:	f04f 0b00 	mov.w	fp, #0
 8024b24:	6023      	str	r3, [r4, #0]
 8024b26:	e789      	b.n	8024a3c <_strtod_l+0x4a4>
 8024b28:	08027fd5 	.word	0x08027fd5
 8024b2c:	08027fec 	.word	0x08027fec
 8024b30:	08027fcc 	.word	0x08027fcc
 8024b34:	08027fcf 	.word	0x08027fcf
 8024b38:	0802838f 	.word	0x0802838f
 8024b3c:	08028280 	.word	0x08028280
 8024b40:	08028258 	.word	0x08028258
 8024b44:	7ff00000 	.word	0x7ff00000
 8024b48:	7ca00000 	.word	0x7ca00000
 8024b4c:	7fefffff 	.word	0x7fefffff
 8024b50:	f018 0310 	ands.w	r3, r8, #16
 8024b54:	bf18      	it	ne
 8024b56:	236a      	movne	r3, #106	; 0x6a
 8024b58:	f8df 93b4 	ldr.w	r9, [pc, #948]	; 8024f10 <_strtod_l+0x978>
 8024b5c:	9304      	str	r3, [sp, #16]
 8024b5e:	4650      	mov	r0, sl
 8024b60:	4659      	mov	r1, fp
 8024b62:	2300      	movs	r3, #0
 8024b64:	f018 0f01 	tst.w	r8, #1
 8024b68:	d004      	beq.n	8024b74 <_strtod_l+0x5dc>
 8024b6a:	e9d9 2300 	ldrd	r2, r3, [r9]
 8024b6e:	f7db fd63 	bl	8000638 <__aeabi_dmul>
 8024b72:	2301      	movs	r3, #1
 8024b74:	ea5f 0868 	movs.w	r8, r8, asr #1
 8024b78:	f109 0908 	add.w	r9, r9, #8
 8024b7c:	d1f2      	bne.n	8024b64 <_strtod_l+0x5cc>
 8024b7e:	b10b      	cbz	r3, 8024b84 <_strtod_l+0x5ec>
 8024b80:	4682      	mov	sl, r0
 8024b82:	468b      	mov	fp, r1
 8024b84:	9b04      	ldr	r3, [sp, #16]
 8024b86:	b1bb      	cbz	r3, 8024bb8 <_strtod_l+0x620>
 8024b88:	f3cb 530a 	ubfx	r3, fp, #20, #11
 8024b8c:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8024b90:	2b00      	cmp	r3, #0
 8024b92:	4659      	mov	r1, fp
 8024b94:	dd10      	ble.n	8024bb8 <_strtod_l+0x620>
 8024b96:	2b1f      	cmp	r3, #31
 8024b98:	f340 8128 	ble.w	8024dec <_strtod_l+0x854>
 8024b9c:	2b34      	cmp	r3, #52	; 0x34
 8024b9e:	bfde      	ittt	le
 8024ba0:	3b20      	suble	r3, #32
 8024ba2:	f04f 32ff 	movle.w	r2, #4294967295
 8024ba6:	fa02 f303 	lslle.w	r3, r2, r3
 8024baa:	f04f 0a00 	mov.w	sl, #0
 8024bae:	bfcc      	ite	gt
 8024bb0:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 8024bb4:	ea03 0b01 	andle.w	fp, r3, r1
 8024bb8:	2200      	movs	r2, #0
 8024bba:	2300      	movs	r3, #0
 8024bbc:	4650      	mov	r0, sl
 8024bbe:	4659      	mov	r1, fp
 8024bc0:	f7db ffa2 	bl	8000b08 <__aeabi_dcmpeq>
 8024bc4:	2800      	cmp	r0, #0
 8024bc6:	d1a4      	bne.n	8024b12 <_strtod_l+0x57a>
 8024bc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024bca:	9300      	str	r3, [sp, #0]
 8024bcc:	990a      	ldr	r1, [sp, #40]	; 0x28
 8024bce:	462b      	mov	r3, r5
 8024bd0:	463a      	mov	r2, r7
 8024bd2:	4620      	mov	r0, r4
 8024bd4:	f001 f8b4 	bl	8025d40 <__s2b>
 8024bd8:	9009      	str	r0, [sp, #36]	; 0x24
 8024bda:	2800      	cmp	r0, #0
 8024bdc:	f43f af24 	beq.w	8024a28 <_strtod_l+0x490>
 8024be0:	9b07      	ldr	r3, [sp, #28]
 8024be2:	1b9e      	subs	r6, r3, r6
 8024be4:	9b08      	ldr	r3, [sp, #32]
 8024be6:	2b00      	cmp	r3, #0
 8024be8:	bfb4      	ite	lt
 8024bea:	4633      	movlt	r3, r6
 8024bec:	2300      	movge	r3, #0
 8024bee:	9310      	str	r3, [sp, #64]	; 0x40
 8024bf0:	9b08      	ldr	r3, [sp, #32]
 8024bf2:	2500      	movs	r5, #0
 8024bf4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8024bf8:	9318      	str	r3, [sp, #96]	; 0x60
 8024bfa:	462e      	mov	r6, r5
 8024bfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024bfe:	4620      	mov	r0, r4
 8024c00:	6859      	ldr	r1, [r3, #4]
 8024c02:	f000 fff1 	bl	8025be8 <_Balloc>
 8024c06:	9007      	str	r0, [sp, #28]
 8024c08:	2800      	cmp	r0, #0
 8024c0a:	f43f af11 	beq.w	8024a30 <_strtod_l+0x498>
 8024c0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024c10:	691a      	ldr	r2, [r3, #16]
 8024c12:	3202      	adds	r2, #2
 8024c14:	f103 010c 	add.w	r1, r3, #12
 8024c18:	0092      	lsls	r2, r2, #2
 8024c1a:	300c      	adds	r0, #12
 8024c1c:	f7ff fb72 	bl	8024304 <memcpy>
 8024c20:	ec4b ab10 	vmov	d0, sl, fp
 8024c24:	aa20      	add	r2, sp, #128	; 0x80
 8024c26:	a91f      	add	r1, sp, #124	; 0x7c
 8024c28:	4620      	mov	r0, r4
 8024c2a:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 8024c2e:	f001 fbc3 	bl	80263b8 <__d2b>
 8024c32:	901e      	str	r0, [sp, #120]	; 0x78
 8024c34:	2800      	cmp	r0, #0
 8024c36:	f43f aefb 	beq.w	8024a30 <_strtod_l+0x498>
 8024c3a:	2101      	movs	r1, #1
 8024c3c:	4620      	mov	r0, r4
 8024c3e:	f001 f919 	bl	8025e74 <__i2b>
 8024c42:	4606      	mov	r6, r0
 8024c44:	2800      	cmp	r0, #0
 8024c46:	f43f aef3 	beq.w	8024a30 <_strtod_l+0x498>
 8024c4a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024c4c:	9904      	ldr	r1, [sp, #16]
 8024c4e:	2b00      	cmp	r3, #0
 8024c50:	bfab      	itete	ge
 8024c52:	9a10      	ldrge	r2, [sp, #64]	; 0x40
 8024c54:	9a18      	ldrlt	r2, [sp, #96]	; 0x60
 8024c56:	9f18      	ldrge	r7, [sp, #96]	; 0x60
 8024c58:	f8dd 9040 	ldrlt.w	r9, [sp, #64]	; 0x40
 8024c5c:	bfac      	ite	ge
 8024c5e:	eb03 0902 	addge.w	r9, r3, r2
 8024c62:	1ad7      	sublt	r7, r2, r3
 8024c64:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8024c66:	eba3 0801 	sub.w	r8, r3, r1
 8024c6a:	4490      	add	r8, r2
 8024c6c:	4ba3      	ldr	r3, [pc, #652]	; (8024efc <_strtod_l+0x964>)
 8024c6e:	f108 38ff 	add.w	r8, r8, #4294967295
 8024c72:	4598      	cmp	r8, r3
 8024c74:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8024c78:	f280 80cc 	bge.w	8024e14 <_strtod_l+0x87c>
 8024c7c:	eba3 0308 	sub.w	r3, r3, r8
 8024c80:	2b1f      	cmp	r3, #31
 8024c82:	eba2 0203 	sub.w	r2, r2, r3
 8024c86:	f04f 0101 	mov.w	r1, #1
 8024c8a:	f300 80b6 	bgt.w	8024dfa <_strtod_l+0x862>
 8024c8e:	fa01 f303 	lsl.w	r3, r1, r3
 8024c92:	9311      	str	r3, [sp, #68]	; 0x44
 8024c94:	2300      	movs	r3, #0
 8024c96:	930c      	str	r3, [sp, #48]	; 0x30
 8024c98:	eb09 0802 	add.w	r8, r9, r2
 8024c9c:	9b04      	ldr	r3, [sp, #16]
 8024c9e:	45c1      	cmp	r9, r8
 8024ca0:	4417      	add	r7, r2
 8024ca2:	441f      	add	r7, r3
 8024ca4:	464b      	mov	r3, r9
 8024ca6:	bfa8      	it	ge
 8024ca8:	4643      	movge	r3, r8
 8024caa:	42bb      	cmp	r3, r7
 8024cac:	bfa8      	it	ge
 8024cae:	463b      	movge	r3, r7
 8024cb0:	2b00      	cmp	r3, #0
 8024cb2:	bfc2      	ittt	gt
 8024cb4:	eba8 0803 	subgt.w	r8, r8, r3
 8024cb8:	1aff      	subgt	r7, r7, r3
 8024cba:	eba9 0903 	subgt.w	r9, r9, r3
 8024cbe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024cc0:	2b00      	cmp	r3, #0
 8024cc2:	dd17      	ble.n	8024cf4 <_strtod_l+0x75c>
 8024cc4:	4631      	mov	r1, r6
 8024cc6:	461a      	mov	r2, r3
 8024cc8:	4620      	mov	r0, r4
 8024cca:	f001 f98f 	bl	8025fec <__pow5mult>
 8024cce:	4606      	mov	r6, r0
 8024cd0:	2800      	cmp	r0, #0
 8024cd2:	f43f aead 	beq.w	8024a30 <_strtod_l+0x498>
 8024cd6:	4601      	mov	r1, r0
 8024cd8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8024cda:	4620      	mov	r0, r4
 8024cdc:	f001 f8e0 	bl	8025ea0 <__multiply>
 8024ce0:	900f      	str	r0, [sp, #60]	; 0x3c
 8024ce2:	2800      	cmp	r0, #0
 8024ce4:	f43f aea4 	beq.w	8024a30 <_strtod_l+0x498>
 8024ce8:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024cea:	4620      	mov	r0, r4
 8024cec:	f000 ffbc 	bl	8025c68 <_Bfree>
 8024cf0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024cf2:	931e      	str	r3, [sp, #120]	; 0x78
 8024cf4:	f1b8 0f00 	cmp.w	r8, #0
 8024cf8:	f300 8091 	bgt.w	8024e1e <_strtod_l+0x886>
 8024cfc:	9b08      	ldr	r3, [sp, #32]
 8024cfe:	2b00      	cmp	r3, #0
 8024d00:	dd08      	ble.n	8024d14 <_strtod_l+0x77c>
 8024d02:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024d04:	9907      	ldr	r1, [sp, #28]
 8024d06:	4620      	mov	r0, r4
 8024d08:	f001 f970 	bl	8025fec <__pow5mult>
 8024d0c:	9007      	str	r0, [sp, #28]
 8024d0e:	2800      	cmp	r0, #0
 8024d10:	f43f ae8e 	beq.w	8024a30 <_strtod_l+0x498>
 8024d14:	2f00      	cmp	r7, #0
 8024d16:	dd08      	ble.n	8024d2a <_strtod_l+0x792>
 8024d18:	9907      	ldr	r1, [sp, #28]
 8024d1a:	463a      	mov	r2, r7
 8024d1c:	4620      	mov	r0, r4
 8024d1e:	f001 f9bf 	bl	80260a0 <__lshift>
 8024d22:	9007      	str	r0, [sp, #28]
 8024d24:	2800      	cmp	r0, #0
 8024d26:	f43f ae83 	beq.w	8024a30 <_strtod_l+0x498>
 8024d2a:	f1b9 0f00 	cmp.w	r9, #0
 8024d2e:	dd08      	ble.n	8024d42 <_strtod_l+0x7aa>
 8024d30:	4631      	mov	r1, r6
 8024d32:	464a      	mov	r2, r9
 8024d34:	4620      	mov	r0, r4
 8024d36:	f001 f9b3 	bl	80260a0 <__lshift>
 8024d3a:	4606      	mov	r6, r0
 8024d3c:	2800      	cmp	r0, #0
 8024d3e:	f43f ae77 	beq.w	8024a30 <_strtod_l+0x498>
 8024d42:	9a07      	ldr	r2, [sp, #28]
 8024d44:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024d46:	4620      	mov	r0, r4
 8024d48:	f001 fa32 	bl	80261b0 <__mdiff>
 8024d4c:	4605      	mov	r5, r0
 8024d4e:	2800      	cmp	r0, #0
 8024d50:	f43f ae6e 	beq.w	8024a30 <_strtod_l+0x498>
 8024d54:	68c3      	ldr	r3, [r0, #12]
 8024d56:	930f      	str	r3, [sp, #60]	; 0x3c
 8024d58:	2300      	movs	r3, #0
 8024d5a:	60c3      	str	r3, [r0, #12]
 8024d5c:	4631      	mov	r1, r6
 8024d5e:	f001 fa0b 	bl	8026178 <__mcmp>
 8024d62:	2800      	cmp	r0, #0
 8024d64:	da65      	bge.n	8024e32 <_strtod_l+0x89a>
 8024d66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024d68:	ea53 030a 	orrs.w	r3, r3, sl
 8024d6c:	f040 8087 	bne.w	8024e7e <_strtod_l+0x8e6>
 8024d70:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8024d74:	2b00      	cmp	r3, #0
 8024d76:	f040 8082 	bne.w	8024e7e <_strtod_l+0x8e6>
 8024d7a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8024d7e:	0d1b      	lsrs	r3, r3, #20
 8024d80:	051b      	lsls	r3, r3, #20
 8024d82:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8024d86:	d97a      	bls.n	8024e7e <_strtod_l+0x8e6>
 8024d88:	696b      	ldr	r3, [r5, #20]
 8024d8a:	b913      	cbnz	r3, 8024d92 <_strtod_l+0x7fa>
 8024d8c:	692b      	ldr	r3, [r5, #16]
 8024d8e:	2b01      	cmp	r3, #1
 8024d90:	dd75      	ble.n	8024e7e <_strtod_l+0x8e6>
 8024d92:	4629      	mov	r1, r5
 8024d94:	2201      	movs	r2, #1
 8024d96:	4620      	mov	r0, r4
 8024d98:	f001 f982 	bl	80260a0 <__lshift>
 8024d9c:	4631      	mov	r1, r6
 8024d9e:	4605      	mov	r5, r0
 8024da0:	f001 f9ea 	bl	8026178 <__mcmp>
 8024da4:	2800      	cmp	r0, #0
 8024da6:	dd6a      	ble.n	8024e7e <_strtod_l+0x8e6>
 8024da8:	9904      	ldr	r1, [sp, #16]
 8024daa:	4a55      	ldr	r2, [pc, #340]	; (8024f00 <_strtod_l+0x968>)
 8024dac:	465b      	mov	r3, fp
 8024dae:	2900      	cmp	r1, #0
 8024db0:	f000 8085 	beq.w	8024ebe <_strtod_l+0x926>
 8024db4:	ea02 010b 	and.w	r1, r2, fp
 8024db8:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8024dbc:	dc7f      	bgt.n	8024ebe <_strtod_l+0x926>
 8024dbe:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8024dc2:	f77f aeaa 	ble.w	8024b1a <_strtod_l+0x582>
 8024dc6:	4a4f      	ldr	r2, [pc, #316]	; (8024f04 <_strtod_l+0x96c>)
 8024dc8:	2300      	movs	r3, #0
 8024dca:	e9cd 3216 	strd	r3, r2, [sp, #88]	; 0x58
 8024dce:	4650      	mov	r0, sl
 8024dd0:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
 8024dd4:	4659      	mov	r1, fp
 8024dd6:	f7db fc2f 	bl	8000638 <__aeabi_dmul>
 8024dda:	460b      	mov	r3, r1
 8024ddc:	4303      	orrs	r3, r0
 8024dde:	bf08      	it	eq
 8024de0:	2322      	moveq	r3, #34	; 0x22
 8024de2:	4682      	mov	sl, r0
 8024de4:	468b      	mov	fp, r1
 8024de6:	bf08      	it	eq
 8024de8:	6023      	streq	r3, [r4, #0]
 8024dea:	e62b      	b.n	8024a44 <_strtod_l+0x4ac>
 8024dec:	f04f 32ff 	mov.w	r2, #4294967295
 8024df0:	fa02 f303 	lsl.w	r3, r2, r3
 8024df4:	ea03 0a0a 	and.w	sl, r3, sl
 8024df8:	e6de      	b.n	8024bb8 <_strtod_l+0x620>
 8024dfa:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 8024dfe:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 8024e02:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 8024e06:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 8024e0a:	fa01 f308 	lsl.w	r3, r1, r8
 8024e0e:	930c      	str	r3, [sp, #48]	; 0x30
 8024e10:	9111      	str	r1, [sp, #68]	; 0x44
 8024e12:	e741      	b.n	8024c98 <_strtod_l+0x700>
 8024e14:	2300      	movs	r3, #0
 8024e16:	930c      	str	r3, [sp, #48]	; 0x30
 8024e18:	2301      	movs	r3, #1
 8024e1a:	9311      	str	r3, [sp, #68]	; 0x44
 8024e1c:	e73c      	b.n	8024c98 <_strtod_l+0x700>
 8024e1e:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024e20:	4642      	mov	r2, r8
 8024e22:	4620      	mov	r0, r4
 8024e24:	f001 f93c 	bl	80260a0 <__lshift>
 8024e28:	901e      	str	r0, [sp, #120]	; 0x78
 8024e2a:	2800      	cmp	r0, #0
 8024e2c:	f47f af66 	bne.w	8024cfc <_strtod_l+0x764>
 8024e30:	e5fe      	b.n	8024a30 <_strtod_l+0x498>
 8024e32:	465f      	mov	r7, fp
 8024e34:	d16e      	bne.n	8024f14 <_strtod_l+0x97c>
 8024e36:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024e38:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8024e3c:	b342      	cbz	r2, 8024e90 <_strtod_l+0x8f8>
 8024e3e:	4a32      	ldr	r2, [pc, #200]	; (8024f08 <_strtod_l+0x970>)
 8024e40:	4293      	cmp	r3, r2
 8024e42:	d128      	bne.n	8024e96 <_strtod_l+0x8fe>
 8024e44:	9b04      	ldr	r3, [sp, #16]
 8024e46:	4650      	mov	r0, sl
 8024e48:	b1eb      	cbz	r3, 8024e86 <_strtod_l+0x8ee>
 8024e4a:	4a2d      	ldr	r2, [pc, #180]	; (8024f00 <_strtod_l+0x968>)
 8024e4c:	403a      	ands	r2, r7
 8024e4e:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8024e52:	f04f 31ff 	mov.w	r1, #4294967295
 8024e56:	d819      	bhi.n	8024e8c <_strtod_l+0x8f4>
 8024e58:	0d12      	lsrs	r2, r2, #20
 8024e5a:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8024e5e:	fa01 f303 	lsl.w	r3, r1, r3
 8024e62:	4298      	cmp	r0, r3
 8024e64:	d117      	bne.n	8024e96 <_strtod_l+0x8fe>
 8024e66:	4b29      	ldr	r3, [pc, #164]	; (8024f0c <_strtod_l+0x974>)
 8024e68:	429f      	cmp	r7, r3
 8024e6a:	d102      	bne.n	8024e72 <_strtod_l+0x8da>
 8024e6c:	3001      	adds	r0, #1
 8024e6e:	f43f addf 	beq.w	8024a30 <_strtod_l+0x498>
 8024e72:	4b23      	ldr	r3, [pc, #140]	; (8024f00 <_strtod_l+0x968>)
 8024e74:	403b      	ands	r3, r7
 8024e76:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 8024e7a:	f04f 0a00 	mov.w	sl, #0
 8024e7e:	9b04      	ldr	r3, [sp, #16]
 8024e80:	2b00      	cmp	r3, #0
 8024e82:	d1a0      	bne.n	8024dc6 <_strtod_l+0x82e>
 8024e84:	e5de      	b.n	8024a44 <_strtod_l+0x4ac>
 8024e86:	f04f 33ff 	mov.w	r3, #4294967295
 8024e8a:	e7ea      	b.n	8024e62 <_strtod_l+0x8ca>
 8024e8c:	460b      	mov	r3, r1
 8024e8e:	e7e8      	b.n	8024e62 <_strtod_l+0x8ca>
 8024e90:	ea53 030a 	orrs.w	r3, r3, sl
 8024e94:	d088      	beq.n	8024da8 <_strtod_l+0x810>
 8024e96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024e98:	b1db      	cbz	r3, 8024ed2 <_strtod_l+0x93a>
 8024e9a:	423b      	tst	r3, r7
 8024e9c:	d0ef      	beq.n	8024e7e <_strtod_l+0x8e6>
 8024e9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024ea0:	9a04      	ldr	r2, [sp, #16]
 8024ea2:	4650      	mov	r0, sl
 8024ea4:	4659      	mov	r1, fp
 8024ea6:	b1c3      	cbz	r3, 8024eda <_strtod_l+0x942>
 8024ea8:	f7ff fb5a 	bl	8024560 <sulp>
 8024eac:	4602      	mov	r2, r0
 8024eae:	460b      	mov	r3, r1
 8024eb0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8024eb4:	f7db fa0a 	bl	80002cc <__adddf3>
 8024eb8:	4682      	mov	sl, r0
 8024eba:	468b      	mov	fp, r1
 8024ebc:	e7df      	b.n	8024e7e <_strtod_l+0x8e6>
 8024ebe:	4013      	ands	r3, r2
 8024ec0:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8024ec4:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8024ec8:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8024ecc:	f04f 3aff 	mov.w	sl, #4294967295
 8024ed0:	e7d5      	b.n	8024e7e <_strtod_l+0x8e6>
 8024ed2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8024ed4:	ea13 0f0a 	tst.w	r3, sl
 8024ed8:	e7e0      	b.n	8024e9c <_strtod_l+0x904>
 8024eda:	f7ff fb41 	bl	8024560 <sulp>
 8024ede:	4602      	mov	r2, r0
 8024ee0:	460b      	mov	r3, r1
 8024ee2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8024ee6:	f7db f9ef 	bl	80002c8 <__aeabi_dsub>
 8024eea:	2200      	movs	r2, #0
 8024eec:	2300      	movs	r3, #0
 8024eee:	4682      	mov	sl, r0
 8024ef0:	468b      	mov	fp, r1
 8024ef2:	f7db fe09 	bl	8000b08 <__aeabi_dcmpeq>
 8024ef6:	2800      	cmp	r0, #0
 8024ef8:	d0c1      	beq.n	8024e7e <_strtod_l+0x8e6>
 8024efa:	e60e      	b.n	8024b1a <_strtod_l+0x582>
 8024efc:	fffffc02 	.word	0xfffffc02
 8024f00:	7ff00000 	.word	0x7ff00000
 8024f04:	39500000 	.word	0x39500000
 8024f08:	000fffff 	.word	0x000fffff
 8024f0c:	7fefffff 	.word	0x7fefffff
 8024f10:	08028000 	.word	0x08028000
 8024f14:	4631      	mov	r1, r6
 8024f16:	4628      	mov	r0, r5
 8024f18:	f001 faaa 	bl	8026470 <__ratio>
 8024f1c:	ec59 8b10 	vmov	r8, r9, d0
 8024f20:	ee10 0a10 	vmov	r0, s0
 8024f24:	2200      	movs	r2, #0
 8024f26:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8024f2a:	4649      	mov	r1, r9
 8024f2c:	f7db fe00 	bl	8000b30 <__aeabi_dcmple>
 8024f30:	2800      	cmp	r0, #0
 8024f32:	d07c      	beq.n	802502e <_strtod_l+0xa96>
 8024f34:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024f36:	2b00      	cmp	r3, #0
 8024f38:	d04c      	beq.n	8024fd4 <_strtod_l+0xa3c>
 8024f3a:	4b95      	ldr	r3, [pc, #596]	; (8025190 <_strtod_l+0xbf8>)
 8024f3c:	2200      	movs	r2, #0
 8024f3e:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8024f42:	f8df 924c 	ldr.w	r9, [pc, #588]	; 8025190 <_strtod_l+0xbf8>
 8024f46:	f04f 0800 	mov.w	r8, #0
 8024f4a:	4b92      	ldr	r3, [pc, #584]	; (8025194 <_strtod_l+0xbfc>)
 8024f4c:	403b      	ands	r3, r7
 8024f4e:	9311      	str	r3, [sp, #68]	; 0x44
 8024f50:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024f52:	4b91      	ldr	r3, [pc, #580]	; (8025198 <_strtod_l+0xc00>)
 8024f54:	429a      	cmp	r2, r3
 8024f56:	f040 80b2 	bne.w	80250be <_strtod_l+0xb26>
 8024f5a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8024f5e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8024f62:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 8024f66:	ec4b ab10 	vmov	d0, sl, fp
 8024f6a:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
 8024f6e:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8024f72:	f001 f9a5 	bl	80262c0 <__ulp>
 8024f76:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8024f7a:	ec53 2b10 	vmov	r2, r3, d0
 8024f7e:	f7db fb5b 	bl	8000638 <__aeabi_dmul>
 8024f82:	4652      	mov	r2, sl
 8024f84:	465b      	mov	r3, fp
 8024f86:	f7db f9a1 	bl	80002cc <__adddf3>
 8024f8a:	460b      	mov	r3, r1
 8024f8c:	4981      	ldr	r1, [pc, #516]	; (8025194 <_strtod_l+0xbfc>)
 8024f8e:	4a83      	ldr	r2, [pc, #524]	; (802519c <_strtod_l+0xc04>)
 8024f90:	4019      	ands	r1, r3
 8024f92:	4291      	cmp	r1, r2
 8024f94:	4682      	mov	sl, r0
 8024f96:	d95e      	bls.n	8025056 <_strtod_l+0xabe>
 8024f98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024f9a:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8024f9e:	4293      	cmp	r3, r2
 8024fa0:	d103      	bne.n	8024faa <_strtod_l+0xa12>
 8024fa2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024fa4:	3301      	adds	r3, #1
 8024fa6:	f43f ad43 	beq.w	8024a30 <_strtod_l+0x498>
 8024faa:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 80251a8 <_strtod_l+0xc10>
 8024fae:	f04f 3aff 	mov.w	sl, #4294967295
 8024fb2:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024fb4:	4620      	mov	r0, r4
 8024fb6:	f000 fe57 	bl	8025c68 <_Bfree>
 8024fba:	9907      	ldr	r1, [sp, #28]
 8024fbc:	4620      	mov	r0, r4
 8024fbe:	f000 fe53 	bl	8025c68 <_Bfree>
 8024fc2:	4631      	mov	r1, r6
 8024fc4:	4620      	mov	r0, r4
 8024fc6:	f000 fe4f 	bl	8025c68 <_Bfree>
 8024fca:	4629      	mov	r1, r5
 8024fcc:	4620      	mov	r0, r4
 8024fce:	f000 fe4b 	bl	8025c68 <_Bfree>
 8024fd2:	e613      	b.n	8024bfc <_strtod_l+0x664>
 8024fd4:	f1ba 0f00 	cmp.w	sl, #0
 8024fd8:	d11b      	bne.n	8025012 <_strtod_l+0xa7a>
 8024fda:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8024fde:	b9f3      	cbnz	r3, 802501e <_strtod_l+0xa86>
 8024fe0:	4b6b      	ldr	r3, [pc, #428]	; (8025190 <_strtod_l+0xbf8>)
 8024fe2:	2200      	movs	r2, #0
 8024fe4:	4640      	mov	r0, r8
 8024fe6:	4649      	mov	r1, r9
 8024fe8:	f7db fd98 	bl	8000b1c <__aeabi_dcmplt>
 8024fec:	b9d0      	cbnz	r0, 8025024 <_strtod_l+0xa8c>
 8024fee:	4640      	mov	r0, r8
 8024ff0:	4649      	mov	r1, r9
 8024ff2:	4b6b      	ldr	r3, [pc, #428]	; (80251a0 <_strtod_l+0xc08>)
 8024ff4:	2200      	movs	r2, #0
 8024ff6:	f7db fb1f 	bl	8000638 <__aeabi_dmul>
 8024ffa:	4680      	mov	r8, r0
 8024ffc:	4689      	mov	r9, r1
 8024ffe:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8025002:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 8025006:	931b      	str	r3, [sp, #108]	; 0x6c
 8025008:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
 802500c:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8025010:	e79b      	b.n	8024f4a <_strtod_l+0x9b2>
 8025012:	f1ba 0f01 	cmp.w	sl, #1
 8025016:	d102      	bne.n	802501e <_strtod_l+0xa86>
 8025018:	2f00      	cmp	r7, #0
 802501a:	f43f ad7e 	beq.w	8024b1a <_strtod_l+0x582>
 802501e:	4b61      	ldr	r3, [pc, #388]	; (80251a4 <_strtod_l+0xc0c>)
 8025020:	2200      	movs	r2, #0
 8025022:	e78c      	b.n	8024f3e <_strtod_l+0x9a6>
 8025024:	f8df 9178 	ldr.w	r9, [pc, #376]	; 80251a0 <_strtod_l+0xc08>
 8025028:	f04f 0800 	mov.w	r8, #0
 802502c:	e7e7      	b.n	8024ffe <_strtod_l+0xa66>
 802502e:	4b5c      	ldr	r3, [pc, #368]	; (80251a0 <_strtod_l+0xc08>)
 8025030:	4640      	mov	r0, r8
 8025032:	4649      	mov	r1, r9
 8025034:	2200      	movs	r2, #0
 8025036:	f7db faff 	bl	8000638 <__aeabi_dmul>
 802503a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802503c:	4680      	mov	r8, r0
 802503e:	4689      	mov	r9, r1
 8025040:	b933      	cbnz	r3, 8025050 <_strtod_l+0xab8>
 8025042:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8025046:	9012      	str	r0, [sp, #72]	; 0x48
 8025048:	9313      	str	r3, [sp, #76]	; 0x4c
 802504a:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
 802504e:	e7dd      	b.n	802500c <_strtod_l+0xa74>
 8025050:	e9cd 8912 	strd	r8, r9, [sp, #72]	; 0x48
 8025054:	e7f9      	b.n	802504a <_strtod_l+0xab2>
 8025056:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 802505a:	9b04      	ldr	r3, [sp, #16]
 802505c:	2b00      	cmp	r3, #0
 802505e:	d1a8      	bne.n	8024fb2 <_strtod_l+0xa1a>
 8025060:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8025064:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8025066:	0d1b      	lsrs	r3, r3, #20
 8025068:	051b      	lsls	r3, r3, #20
 802506a:	429a      	cmp	r2, r3
 802506c:	d1a1      	bne.n	8024fb2 <_strtod_l+0xa1a>
 802506e:	4640      	mov	r0, r8
 8025070:	4649      	mov	r1, r9
 8025072:	f7db fe41 	bl	8000cf8 <__aeabi_d2lz>
 8025076:	f7db fab1 	bl	80005dc <__aeabi_l2d>
 802507a:	4602      	mov	r2, r0
 802507c:	460b      	mov	r3, r1
 802507e:	4640      	mov	r0, r8
 8025080:	4649      	mov	r1, r9
 8025082:	f7db f921 	bl	80002c8 <__aeabi_dsub>
 8025086:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025088:	f3cb 0313 	ubfx	r3, fp, #0, #20
 802508c:	ea43 030a 	orr.w	r3, r3, sl
 8025090:	4313      	orrs	r3, r2
 8025092:	4680      	mov	r8, r0
 8025094:	4689      	mov	r9, r1
 8025096:	d053      	beq.n	8025140 <_strtod_l+0xba8>
 8025098:	a335      	add	r3, pc, #212	; (adr r3, 8025170 <_strtod_l+0xbd8>)
 802509a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802509e:	f7db fd3d 	bl	8000b1c <__aeabi_dcmplt>
 80250a2:	2800      	cmp	r0, #0
 80250a4:	f47f acce 	bne.w	8024a44 <_strtod_l+0x4ac>
 80250a8:	a333      	add	r3, pc, #204	; (adr r3, 8025178 <_strtod_l+0xbe0>)
 80250aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80250ae:	4640      	mov	r0, r8
 80250b0:	4649      	mov	r1, r9
 80250b2:	f7db fd51 	bl	8000b58 <__aeabi_dcmpgt>
 80250b6:	2800      	cmp	r0, #0
 80250b8:	f43f af7b 	beq.w	8024fb2 <_strtod_l+0xa1a>
 80250bc:	e4c2      	b.n	8024a44 <_strtod_l+0x4ac>
 80250be:	9b04      	ldr	r3, [sp, #16]
 80250c0:	b333      	cbz	r3, 8025110 <_strtod_l+0xb78>
 80250c2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80250c4:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80250c8:	d822      	bhi.n	8025110 <_strtod_l+0xb78>
 80250ca:	a32d      	add	r3, pc, #180	; (adr r3, 8025180 <_strtod_l+0xbe8>)
 80250cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80250d0:	4640      	mov	r0, r8
 80250d2:	4649      	mov	r1, r9
 80250d4:	f7db fd2c 	bl	8000b30 <__aeabi_dcmple>
 80250d8:	b1a0      	cbz	r0, 8025104 <_strtod_l+0xb6c>
 80250da:	4649      	mov	r1, r9
 80250dc:	4640      	mov	r0, r8
 80250de:	f7db fd83 	bl	8000be8 <__aeabi_d2uiz>
 80250e2:	2801      	cmp	r0, #1
 80250e4:	bf38      	it	cc
 80250e6:	2001      	movcc	r0, #1
 80250e8:	f7db fa2c 	bl	8000544 <__aeabi_ui2d>
 80250ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80250ee:	4680      	mov	r8, r0
 80250f0:	4689      	mov	r9, r1
 80250f2:	bb13      	cbnz	r3, 802513a <_strtod_l+0xba2>
 80250f4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80250f8:	9014      	str	r0, [sp, #80]	; 0x50
 80250fa:	9315      	str	r3, [sp, #84]	; 0x54
 80250fc:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8025100:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8025104:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025106:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8025108:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 802510c:	1a9b      	subs	r3, r3, r2
 802510e:	930d      	str	r3, [sp, #52]	; 0x34
 8025110:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8025114:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 8025118:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 802511c:	f001 f8d0 	bl	80262c0 <__ulp>
 8025120:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8025124:	ec53 2b10 	vmov	r2, r3, d0
 8025128:	f7db fa86 	bl	8000638 <__aeabi_dmul>
 802512c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8025130:	f7db f8cc 	bl	80002cc <__adddf3>
 8025134:	4682      	mov	sl, r0
 8025136:	468b      	mov	fp, r1
 8025138:	e78f      	b.n	802505a <_strtod_l+0xac2>
 802513a:	e9cd 8914 	strd	r8, r9, [sp, #80]	; 0x50
 802513e:	e7dd      	b.n	80250fc <_strtod_l+0xb64>
 8025140:	a311      	add	r3, pc, #68	; (adr r3, 8025188 <_strtod_l+0xbf0>)
 8025142:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025146:	f7db fce9 	bl	8000b1c <__aeabi_dcmplt>
 802514a:	e7b4      	b.n	80250b6 <_strtod_l+0xb1e>
 802514c:	2300      	movs	r3, #0
 802514e:	930e      	str	r3, [sp, #56]	; 0x38
 8025150:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8025152:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025154:	6013      	str	r3, [r2, #0]
 8025156:	f7ff ba65 	b.w	8024624 <_strtod_l+0x8c>
 802515a:	2b65      	cmp	r3, #101	; 0x65
 802515c:	f43f ab5d 	beq.w	802481a <_strtod_l+0x282>
 8025160:	2b45      	cmp	r3, #69	; 0x45
 8025162:	f43f ab5a 	beq.w	802481a <_strtod_l+0x282>
 8025166:	2201      	movs	r2, #1
 8025168:	f7ff bb92 	b.w	8024890 <_strtod_l+0x2f8>
 802516c:	f3af 8000 	nop.w
 8025170:	94a03595 	.word	0x94a03595
 8025174:	3fdfffff 	.word	0x3fdfffff
 8025178:	35afe535 	.word	0x35afe535
 802517c:	3fe00000 	.word	0x3fe00000
 8025180:	ffc00000 	.word	0xffc00000
 8025184:	41dfffff 	.word	0x41dfffff
 8025188:	94a03595 	.word	0x94a03595
 802518c:	3fcfffff 	.word	0x3fcfffff
 8025190:	3ff00000 	.word	0x3ff00000
 8025194:	7ff00000 	.word	0x7ff00000
 8025198:	7fe00000 	.word	0x7fe00000
 802519c:	7c9fffff 	.word	0x7c9fffff
 80251a0:	3fe00000 	.word	0x3fe00000
 80251a4:	bff00000 	.word	0xbff00000
 80251a8:	7fefffff 	.word	0x7fefffff

080251ac <strtof>:
 80251ac:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
 80251b0:	4e26      	ldr	r6, [pc, #152]	; (802524c <strtof+0xa0>)
 80251b2:	4b27      	ldr	r3, [pc, #156]	; (8025250 <strtof+0xa4>)
 80251b4:	460a      	mov	r2, r1
 80251b6:	ed2d 8b02 	vpush	{d8}
 80251ba:	4601      	mov	r1, r0
 80251bc:	6830      	ldr	r0, [r6, #0]
 80251be:	f7ff f9eb 	bl	8024598 <_strtod_l>
 80251c2:	ec55 4b10 	vmov	r4, r5, d0
 80251c6:	ee10 2a10 	vmov	r2, s0
 80251ca:	ee10 0a10 	vmov	r0, s0
 80251ce:	462b      	mov	r3, r5
 80251d0:	4629      	mov	r1, r5
 80251d2:	f7db fccb 	bl	8000b6c <__aeabi_dcmpun>
 80251d6:	b190      	cbz	r0, 80251fe <strtof+0x52>
 80251d8:	2d00      	cmp	r5, #0
 80251da:	481e      	ldr	r0, [pc, #120]	; (8025254 <strtof+0xa8>)
 80251dc:	da09      	bge.n	80251f2 <strtof+0x46>
 80251de:	f001 f9cd 	bl	802657c <nanf>
 80251e2:	eeb1 8a40 	vneg.f32	s16, s0
 80251e6:	eeb0 0a48 	vmov.f32	s0, s16
 80251ea:	ecbd 8b02 	vpop	{d8}
 80251ee:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80251f2:	ecbd 8b02 	vpop	{d8}
 80251f6:	e8bd 4370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, lr}
 80251fa:	f001 b9bf 	b.w	802657c <nanf>
 80251fe:	4620      	mov	r0, r4
 8025200:	4629      	mov	r1, r5
 8025202:	f7db fd11 	bl	8000c28 <__aeabi_d2f>
 8025206:	ee08 0a10 	vmov	s16, r0
 802520a:	eddf 7a13 	vldr	s15, [pc, #76]	; 8025258 <strtof+0xac>
 802520e:	eeb0 7ac8 	vabs.f32	s14, s16
 8025212:	eeb4 7a67 	vcmp.f32	s14, s15
 8025216:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802521a:	dde4      	ble.n	80251e6 <strtof+0x3a>
 802521c:	f025 4900 	bic.w	r9, r5, #2147483648	; 0x80000000
 8025220:	4b0e      	ldr	r3, [pc, #56]	; (802525c <strtof+0xb0>)
 8025222:	f04f 32ff 	mov.w	r2, #4294967295
 8025226:	4620      	mov	r0, r4
 8025228:	4649      	mov	r1, r9
 802522a:	f7db fc9f 	bl	8000b6c <__aeabi_dcmpun>
 802522e:	b940      	cbnz	r0, 8025242 <strtof+0x96>
 8025230:	4b0a      	ldr	r3, [pc, #40]	; (802525c <strtof+0xb0>)
 8025232:	f04f 32ff 	mov.w	r2, #4294967295
 8025236:	4620      	mov	r0, r4
 8025238:	4649      	mov	r1, r9
 802523a:	f7db fc79 	bl	8000b30 <__aeabi_dcmple>
 802523e:	2800      	cmp	r0, #0
 8025240:	d0d1      	beq.n	80251e6 <strtof+0x3a>
 8025242:	6833      	ldr	r3, [r6, #0]
 8025244:	2222      	movs	r2, #34	; 0x22
 8025246:	601a      	str	r2, [r3, #0]
 8025248:	e7cd      	b.n	80251e6 <strtof+0x3a>
 802524a:	bf00      	nop
 802524c:	20000010 	.word	0x20000010
 8025250:	2000007c 	.word	0x2000007c
 8025254:	0802838f 	.word	0x0802838f
 8025258:	7f7fffff 	.word	0x7f7fffff
 802525c:	7fefffff 	.word	0x7fefffff

08025260 <_strtol_l.isra.0>:
 8025260:	2b01      	cmp	r3, #1
 8025262:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025266:	d001      	beq.n	802526c <_strtol_l.isra.0+0xc>
 8025268:	2b24      	cmp	r3, #36	; 0x24
 802526a:	d906      	bls.n	802527a <_strtol_l.isra.0+0x1a>
 802526c:	f7fe ffd0 	bl	8024210 <__errno>
 8025270:	2316      	movs	r3, #22
 8025272:	6003      	str	r3, [r0, #0]
 8025274:	2000      	movs	r0, #0
 8025276:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802527a:	4f3a      	ldr	r7, [pc, #232]	; (8025364 <_strtol_l.isra.0+0x104>)
 802527c:	468e      	mov	lr, r1
 802527e:	4676      	mov	r6, lr
 8025280:	f81e 4b01 	ldrb.w	r4, [lr], #1
 8025284:	5de5      	ldrb	r5, [r4, r7]
 8025286:	f015 0508 	ands.w	r5, r5, #8
 802528a:	d1f8      	bne.n	802527e <_strtol_l.isra.0+0x1e>
 802528c:	2c2d      	cmp	r4, #45	; 0x2d
 802528e:	d134      	bne.n	80252fa <_strtol_l.isra.0+0x9a>
 8025290:	f89e 4000 	ldrb.w	r4, [lr]
 8025294:	f04f 0801 	mov.w	r8, #1
 8025298:	f106 0e02 	add.w	lr, r6, #2
 802529c:	2b00      	cmp	r3, #0
 802529e:	d05c      	beq.n	802535a <_strtol_l.isra.0+0xfa>
 80252a0:	2b10      	cmp	r3, #16
 80252a2:	d10c      	bne.n	80252be <_strtol_l.isra.0+0x5e>
 80252a4:	2c30      	cmp	r4, #48	; 0x30
 80252a6:	d10a      	bne.n	80252be <_strtol_l.isra.0+0x5e>
 80252a8:	f89e 4000 	ldrb.w	r4, [lr]
 80252ac:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 80252b0:	2c58      	cmp	r4, #88	; 0x58
 80252b2:	d14d      	bne.n	8025350 <_strtol_l.isra.0+0xf0>
 80252b4:	f89e 4001 	ldrb.w	r4, [lr, #1]
 80252b8:	2310      	movs	r3, #16
 80252ba:	f10e 0e02 	add.w	lr, lr, #2
 80252be:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
 80252c2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80252c6:	2600      	movs	r6, #0
 80252c8:	fbbc f9f3 	udiv	r9, ip, r3
 80252cc:	4635      	mov	r5, r6
 80252ce:	fb03 ca19 	mls	sl, r3, r9, ip
 80252d2:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 80252d6:	2f09      	cmp	r7, #9
 80252d8:	d818      	bhi.n	802530c <_strtol_l.isra.0+0xac>
 80252da:	463c      	mov	r4, r7
 80252dc:	42a3      	cmp	r3, r4
 80252de:	dd24      	ble.n	802532a <_strtol_l.isra.0+0xca>
 80252e0:	2e00      	cmp	r6, #0
 80252e2:	db1f      	blt.n	8025324 <_strtol_l.isra.0+0xc4>
 80252e4:	45a9      	cmp	r9, r5
 80252e6:	d31d      	bcc.n	8025324 <_strtol_l.isra.0+0xc4>
 80252e8:	d101      	bne.n	80252ee <_strtol_l.isra.0+0x8e>
 80252ea:	45a2      	cmp	sl, r4
 80252ec:	db1a      	blt.n	8025324 <_strtol_l.isra.0+0xc4>
 80252ee:	fb05 4503 	mla	r5, r5, r3, r4
 80252f2:	2601      	movs	r6, #1
 80252f4:	f81e 4b01 	ldrb.w	r4, [lr], #1
 80252f8:	e7eb      	b.n	80252d2 <_strtol_l.isra.0+0x72>
 80252fa:	2c2b      	cmp	r4, #43	; 0x2b
 80252fc:	bf08      	it	eq
 80252fe:	f89e 4000 	ldrbeq.w	r4, [lr]
 8025302:	46a8      	mov	r8, r5
 8025304:	bf08      	it	eq
 8025306:	f106 0e02 	addeq.w	lr, r6, #2
 802530a:	e7c7      	b.n	802529c <_strtol_l.isra.0+0x3c>
 802530c:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 8025310:	2f19      	cmp	r7, #25
 8025312:	d801      	bhi.n	8025318 <_strtol_l.isra.0+0xb8>
 8025314:	3c37      	subs	r4, #55	; 0x37
 8025316:	e7e1      	b.n	80252dc <_strtol_l.isra.0+0x7c>
 8025318:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 802531c:	2f19      	cmp	r7, #25
 802531e:	d804      	bhi.n	802532a <_strtol_l.isra.0+0xca>
 8025320:	3c57      	subs	r4, #87	; 0x57
 8025322:	e7db      	b.n	80252dc <_strtol_l.isra.0+0x7c>
 8025324:	f04f 36ff 	mov.w	r6, #4294967295
 8025328:	e7e4      	b.n	80252f4 <_strtol_l.isra.0+0x94>
 802532a:	2e00      	cmp	r6, #0
 802532c:	da05      	bge.n	802533a <_strtol_l.isra.0+0xda>
 802532e:	2322      	movs	r3, #34	; 0x22
 8025330:	6003      	str	r3, [r0, #0]
 8025332:	4665      	mov	r5, ip
 8025334:	b942      	cbnz	r2, 8025348 <_strtol_l.isra.0+0xe8>
 8025336:	4628      	mov	r0, r5
 8025338:	e79d      	b.n	8025276 <_strtol_l.isra.0+0x16>
 802533a:	f1b8 0f00 	cmp.w	r8, #0
 802533e:	d000      	beq.n	8025342 <_strtol_l.isra.0+0xe2>
 8025340:	426d      	negs	r5, r5
 8025342:	2a00      	cmp	r2, #0
 8025344:	d0f7      	beq.n	8025336 <_strtol_l.isra.0+0xd6>
 8025346:	b10e      	cbz	r6, 802534c <_strtol_l.isra.0+0xec>
 8025348:	f10e 31ff 	add.w	r1, lr, #4294967295
 802534c:	6011      	str	r1, [r2, #0]
 802534e:	e7f2      	b.n	8025336 <_strtol_l.isra.0+0xd6>
 8025350:	2430      	movs	r4, #48	; 0x30
 8025352:	2b00      	cmp	r3, #0
 8025354:	d1b3      	bne.n	80252be <_strtol_l.isra.0+0x5e>
 8025356:	2308      	movs	r3, #8
 8025358:	e7b1      	b.n	80252be <_strtol_l.isra.0+0x5e>
 802535a:	2c30      	cmp	r4, #48	; 0x30
 802535c:	d0a4      	beq.n	80252a8 <_strtol_l.isra.0+0x48>
 802535e:	230a      	movs	r3, #10
 8025360:	e7ad      	b.n	80252be <_strtol_l.isra.0+0x5e>
 8025362:	bf00      	nop
 8025364:	0802804e 	.word	0x0802804e

08025368 <strtol>:
 8025368:	4613      	mov	r3, r2
 802536a:	460a      	mov	r2, r1
 802536c:	4601      	mov	r1, r0
 802536e:	4802      	ldr	r0, [pc, #8]	; (8025378 <strtol+0x10>)
 8025370:	6800      	ldr	r0, [r0, #0]
 8025372:	f7ff bf75 	b.w	8025260 <_strtol_l.isra.0>
 8025376:	bf00      	nop
 8025378:	20000010 	.word	0x20000010

0802537c <__utoa>:
 802537c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802537e:	4c1f      	ldr	r4, [pc, #124]	; (80253fc <__utoa+0x80>)
 8025380:	b08b      	sub	sp, #44	; 0x2c
 8025382:	4605      	mov	r5, r0
 8025384:	460b      	mov	r3, r1
 8025386:	466e      	mov	r6, sp
 8025388:	f104 0c20 	add.w	ip, r4, #32
 802538c:	6820      	ldr	r0, [r4, #0]
 802538e:	6861      	ldr	r1, [r4, #4]
 8025390:	4637      	mov	r7, r6
 8025392:	c703      	stmia	r7!, {r0, r1}
 8025394:	3408      	adds	r4, #8
 8025396:	4564      	cmp	r4, ip
 8025398:	463e      	mov	r6, r7
 802539a:	d1f7      	bne.n	802538c <__utoa+0x10>
 802539c:	7921      	ldrb	r1, [r4, #4]
 802539e:	7139      	strb	r1, [r7, #4]
 80253a0:	1e91      	subs	r1, r2, #2
 80253a2:	6820      	ldr	r0, [r4, #0]
 80253a4:	6038      	str	r0, [r7, #0]
 80253a6:	2922      	cmp	r1, #34	; 0x22
 80253a8:	f04f 0100 	mov.w	r1, #0
 80253ac:	d904      	bls.n	80253b8 <__utoa+0x3c>
 80253ae:	7019      	strb	r1, [r3, #0]
 80253b0:	460b      	mov	r3, r1
 80253b2:	4618      	mov	r0, r3
 80253b4:	b00b      	add	sp, #44	; 0x2c
 80253b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80253b8:	1e58      	subs	r0, r3, #1
 80253ba:	4684      	mov	ip, r0
 80253bc:	fbb5 f7f2 	udiv	r7, r5, r2
 80253c0:	f10d 0e28 	add.w	lr, sp, #40	; 0x28
 80253c4:	fb02 5617 	mls	r6, r2, r7, r5
 80253c8:	4476      	add	r6, lr
 80253ca:	460c      	mov	r4, r1
 80253cc:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 80253d0:	f80c 6f01 	strb.w	r6, [ip, #1]!
 80253d4:	462e      	mov	r6, r5
 80253d6:	42b2      	cmp	r2, r6
 80253d8:	f101 0101 	add.w	r1, r1, #1
 80253dc:	463d      	mov	r5, r7
 80253de:	d9ed      	bls.n	80253bc <__utoa+0x40>
 80253e0:	2200      	movs	r2, #0
 80253e2:	545a      	strb	r2, [r3, r1]
 80253e4:	1919      	adds	r1, r3, r4
 80253e6:	1aa5      	subs	r5, r4, r2
 80253e8:	42aa      	cmp	r2, r5
 80253ea:	dae2      	bge.n	80253b2 <__utoa+0x36>
 80253ec:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 80253f0:	780e      	ldrb	r6, [r1, #0]
 80253f2:	7006      	strb	r6, [r0, #0]
 80253f4:	3201      	adds	r2, #1
 80253f6:	f801 5901 	strb.w	r5, [r1], #-1
 80253fa:	e7f4      	b.n	80253e6 <__utoa+0x6a>
 80253fc:	08028028 	.word	0x08028028

08025400 <__register_exitproc>:
 8025400:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025404:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 80254c0 <__register_exitproc+0xc0>
 8025408:	4606      	mov	r6, r0
 802540a:	f8d8 0000 	ldr.w	r0, [r8]
 802540e:	461f      	mov	r7, r3
 8025410:	460d      	mov	r5, r1
 8025412:	4691      	mov	r9, r2
 8025414:	f000 fbc7 	bl	8025ba6 <__retarget_lock_acquire_recursive>
 8025418:	4b25      	ldr	r3, [pc, #148]	; (80254b0 <__register_exitproc+0xb0>)
 802541a:	681c      	ldr	r4, [r3, #0]
 802541c:	b934      	cbnz	r4, 802542c <__register_exitproc+0x2c>
 802541e:	4c25      	ldr	r4, [pc, #148]	; (80254b4 <__register_exitproc+0xb4>)
 8025420:	601c      	str	r4, [r3, #0]
 8025422:	4b25      	ldr	r3, [pc, #148]	; (80254b8 <__register_exitproc+0xb8>)
 8025424:	b113      	cbz	r3, 802542c <__register_exitproc+0x2c>
 8025426:	681b      	ldr	r3, [r3, #0]
 8025428:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802542c:	6863      	ldr	r3, [r4, #4]
 802542e:	2b1f      	cmp	r3, #31
 8025430:	dd07      	ble.n	8025442 <__register_exitproc+0x42>
 8025432:	f8d8 0000 	ldr.w	r0, [r8]
 8025436:	f000 fbb8 	bl	8025baa <__retarget_lock_release_recursive>
 802543a:	f04f 30ff 	mov.w	r0, #4294967295
 802543e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025442:	b34e      	cbz	r6, 8025498 <__register_exitproc+0x98>
 8025444:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8025448:	b988      	cbnz	r0, 802546e <__register_exitproc+0x6e>
 802544a:	4b1c      	ldr	r3, [pc, #112]	; (80254bc <__register_exitproc+0xbc>)
 802544c:	b923      	cbnz	r3, 8025458 <__register_exitproc+0x58>
 802544e:	f8d8 0000 	ldr.w	r0, [r8]
 8025452:	f000 fba9 	bl	8025ba8 <__retarget_lock_release>
 8025456:	e7f0      	b.n	802543a <__register_exitproc+0x3a>
 8025458:	f44f 7084 	mov.w	r0, #264	; 0x108
 802545c:	f7fe ff34 	bl	80242c8 <malloc>
 8025460:	2800      	cmp	r0, #0
 8025462:	d0f4      	beq.n	802544e <__register_exitproc+0x4e>
 8025464:	2300      	movs	r3, #0
 8025466:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802546a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802546e:	6863      	ldr	r3, [r4, #4]
 8025470:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8025474:	2201      	movs	r2, #1
 8025476:	409a      	lsls	r2, r3
 8025478:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802547c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8025480:	4313      	orrs	r3, r2
 8025482:	2e02      	cmp	r6, #2
 8025484:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8025488:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802548c:	bf02      	ittt	eq
 802548e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8025492:	431a      	orreq	r2, r3
 8025494:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 8025498:	6863      	ldr	r3, [r4, #4]
 802549a:	f8d8 0000 	ldr.w	r0, [r8]
 802549e:	1c5a      	adds	r2, r3, #1
 80254a0:	3302      	adds	r3, #2
 80254a2:	6062      	str	r2, [r4, #4]
 80254a4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80254a8:	f000 fb7f 	bl	8025baa <__retarget_lock_release_recursive>
 80254ac:	2000      	movs	r0, #0
 80254ae:	e7c6      	b.n	802543e <__register_exitproc+0x3e>
 80254b0:	2000072c 	.word	0x2000072c
 80254b4:	200006a0 	.word	0x200006a0
 80254b8:	00000000 	.word	0x00000000
 80254bc:	080242c9 	.word	0x080242c9
 80254c0:	20000074 	.word	0x20000074

080254c4 <rshift>:
 80254c4:	6903      	ldr	r3, [r0, #16]
 80254c6:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80254ca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80254ce:	ea4f 1261 	mov.w	r2, r1, asr #5
 80254d2:	f100 0414 	add.w	r4, r0, #20
 80254d6:	dd45      	ble.n	8025564 <rshift+0xa0>
 80254d8:	f011 011f 	ands.w	r1, r1, #31
 80254dc:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80254e0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80254e4:	d10c      	bne.n	8025500 <rshift+0x3c>
 80254e6:	f100 0710 	add.w	r7, r0, #16
 80254ea:	4629      	mov	r1, r5
 80254ec:	42b1      	cmp	r1, r6
 80254ee:	d334      	bcc.n	802555a <rshift+0x96>
 80254f0:	1a9b      	subs	r3, r3, r2
 80254f2:	009b      	lsls	r3, r3, #2
 80254f4:	1eea      	subs	r2, r5, #3
 80254f6:	4296      	cmp	r6, r2
 80254f8:	bf38      	it	cc
 80254fa:	2300      	movcc	r3, #0
 80254fc:	4423      	add	r3, r4
 80254fe:	e015      	b.n	802552c <rshift+0x68>
 8025500:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8025504:	f1c1 0820 	rsb	r8, r1, #32
 8025508:	40cf      	lsrs	r7, r1
 802550a:	f105 0e04 	add.w	lr, r5, #4
 802550e:	46a1      	mov	r9, r4
 8025510:	4576      	cmp	r6, lr
 8025512:	46f4      	mov	ip, lr
 8025514:	d815      	bhi.n	8025542 <rshift+0x7e>
 8025516:	1a9b      	subs	r3, r3, r2
 8025518:	009a      	lsls	r2, r3, #2
 802551a:	3a04      	subs	r2, #4
 802551c:	3501      	adds	r5, #1
 802551e:	42ae      	cmp	r6, r5
 8025520:	bf38      	it	cc
 8025522:	2200      	movcc	r2, #0
 8025524:	18a3      	adds	r3, r4, r2
 8025526:	50a7      	str	r7, [r4, r2]
 8025528:	b107      	cbz	r7, 802552c <rshift+0x68>
 802552a:	3304      	adds	r3, #4
 802552c:	1b1a      	subs	r2, r3, r4
 802552e:	42a3      	cmp	r3, r4
 8025530:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8025534:	bf08      	it	eq
 8025536:	2300      	moveq	r3, #0
 8025538:	6102      	str	r2, [r0, #16]
 802553a:	bf08      	it	eq
 802553c:	6143      	streq	r3, [r0, #20]
 802553e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8025542:	f8dc c000 	ldr.w	ip, [ip]
 8025546:	fa0c fc08 	lsl.w	ip, ip, r8
 802554a:	ea4c 0707 	orr.w	r7, ip, r7
 802554e:	f849 7b04 	str.w	r7, [r9], #4
 8025552:	f85e 7b04 	ldr.w	r7, [lr], #4
 8025556:	40cf      	lsrs	r7, r1
 8025558:	e7da      	b.n	8025510 <rshift+0x4c>
 802555a:	f851 cb04 	ldr.w	ip, [r1], #4
 802555e:	f847 cf04 	str.w	ip, [r7, #4]!
 8025562:	e7c3      	b.n	80254ec <rshift+0x28>
 8025564:	4623      	mov	r3, r4
 8025566:	e7e1      	b.n	802552c <rshift+0x68>

08025568 <__hexdig_fun>:
 8025568:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 802556c:	2b09      	cmp	r3, #9
 802556e:	d802      	bhi.n	8025576 <__hexdig_fun+0xe>
 8025570:	3820      	subs	r0, #32
 8025572:	b2c0      	uxtb	r0, r0
 8025574:	4770      	bx	lr
 8025576:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 802557a:	2b05      	cmp	r3, #5
 802557c:	d801      	bhi.n	8025582 <__hexdig_fun+0x1a>
 802557e:	3847      	subs	r0, #71	; 0x47
 8025580:	e7f7      	b.n	8025572 <__hexdig_fun+0xa>
 8025582:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8025586:	2b05      	cmp	r3, #5
 8025588:	d801      	bhi.n	802558e <__hexdig_fun+0x26>
 802558a:	3827      	subs	r0, #39	; 0x27
 802558c:	e7f1      	b.n	8025572 <__hexdig_fun+0xa>
 802558e:	2000      	movs	r0, #0
 8025590:	4770      	bx	lr
	...

08025594 <__gethex>:
 8025594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025598:	ed2d 8b02 	vpush	{d8}
 802559c:	b089      	sub	sp, #36	; 0x24
 802559e:	ee08 0a10 	vmov	s16, r0
 80255a2:	9304      	str	r3, [sp, #16]
 80255a4:	4bbc      	ldr	r3, [pc, #752]	; (8025898 <__gethex+0x304>)
 80255a6:	681b      	ldr	r3, [r3, #0]
 80255a8:	9301      	str	r3, [sp, #4]
 80255aa:	4618      	mov	r0, r3
 80255ac:	468b      	mov	fp, r1
 80255ae:	4690      	mov	r8, r2
 80255b0:	f7da fe7e 	bl	80002b0 <strlen>
 80255b4:	9b01      	ldr	r3, [sp, #4]
 80255b6:	f8db 2000 	ldr.w	r2, [fp]
 80255ba:	4403      	add	r3, r0
 80255bc:	4682      	mov	sl, r0
 80255be:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80255c2:	9305      	str	r3, [sp, #20]
 80255c4:	1c93      	adds	r3, r2, #2
 80255c6:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 80255ca:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 80255ce:	32fe      	adds	r2, #254	; 0xfe
 80255d0:	18d1      	adds	r1, r2, r3
 80255d2:	461f      	mov	r7, r3
 80255d4:	f813 0b01 	ldrb.w	r0, [r3], #1
 80255d8:	9100      	str	r1, [sp, #0]
 80255da:	2830      	cmp	r0, #48	; 0x30
 80255dc:	d0f8      	beq.n	80255d0 <__gethex+0x3c>
 80255de:	f7ff ffc3 	bl	8025568 <__hexdig_fun>
 80255e2:	4604      	mov	r4, r0
 80255e4:	2800      	cmp	r0, #0
 80255e6:	d13a      	bne.n	802565e <__gethex+0xca>
 80255e8:	9901      	ldr	r1, [sp, #4]
 80255ea:	4652      	mov	r2, sl
 80255ec:	4638      	mov	r0, r7
 80255ee:	f000 ffcb 	bl	8026588 <strncmp>
 80255f2:	4605      	mov	r5, r0
 80255f4:	2800      	cmp	r0, #0
 80255f6:	d168      	bne.n	80256ca <__gethex+0x136>
 80255f8:	f817 000a 	ldrb.w	r0, [r7, sl]
 80255fc:	eb07 060a 	add.w	r6, r7, sl
 8025600:	f7ff ffb2 	bl	8025568 <__hexdig_fun>
 8025604:	2800      	cmp	r0, #0
 8025606:	d062      	beq.n	80256ce <__gethex+0x13a>
 8025608:	4633      	mov	r3, r6
 802560a:	7818      	ldrb	r0, [r3, #0]
 802560c:	2830      	cmp	r0, #48	; 0x30
 802560e:	461f      	mov	r7, r3
 8025610:	f103 0301 	add.w	r3, r3, #1
 8025614:	d0f9      	beq.n	802560a <__gethex+0x76>
 8025616:	f7ff ffa7 	bl	8025568 <__hexdig_fun>
 802561a:	2301      	movs	r3, #1
 802561c:	fab0 f480 	clz	r4, r0
 8025620:	0964      	lsrs	r4, r4, #5
 8025622:	4635      	mov	r5, r6
 8025624:	9300      	str	r3, [sp, #0]
 8025626:	463a      	mov	r2, r7
 8025628:	4616      	mov	r6, r2
 802562a:	3201      	adds	r2, #1
 802562c:	7830      	ldrb	r0, [r6, #0]
 802562e:	f7ff ff9b 	bl	8025568 <__hexdig_fun>
 8025632:	2800      	cmp	r0, #0
 8025634:	d1f8      	bne.n	8025628 <__gethex+0x94>
 8025636:	9901      	ldr	r1, [sp, #4]
 8025638:	4652      	mov	r2, sl
 802563a:	4630      	mov	r0, r6
 802563c:	f000 ffa4 	bl	8026588 <strncmp>
 8025640:	b980      	cbnz	r0, 8025664 <__gethex+0xd0>
 8025642:	b94d      	cbnz	r5, 8025658 <__gethex+0xc4>
 8025644:	eb06 050a 	add.w	r5, r6, sl
 8025648:	462a      	mov	r2, r5
 802564a:	4616      	mov	r6, r2
 802564c:	3201      	adds	r2, #1
 802564e:	7830      	ldrb	r0, [r6, #0]
 8025650:	f7ff ff8a 	bl	8025568 <__hexdig_fun>
 8025654:	2800      	cmp	r0, #0
 8025656:	d1f8      	bne.n	802564a <__gethex+0xb6>
 8025658:	1bad      	subs	r5, r5, r6
 802565a:	00ad      	lsls	r5, r5, #2
 802565c:	e004      	b.n	8025668 <__gethex+0xd4>
 802565e:	2400      	movs	r4, #0
 8025660:	4625      	mov	r5, r4
 8025662:	e7e0      	b.n	8025626 <__gethex+0x92>
 8025664:	2d00      	cmp	r5, #0
 8025666:	d1f7      	bne.n	8025658 <__gethex+0xc4>
 8025668:	7833      	ldrb	r3, [r6, #0]
 802566a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 802566e:	2b50      	cmp	r3, #80	; 0x50
 8025670:	d13b      	bne.n	80256ea <__gethex+0x156>
 8025672:	7873      	ldrb	r3, [r6, #1]
 8025674:	2b2b      	cmp	r3, #43	; 0x2b
 8025676:	d02c      	beq.n	80256d2 <__gethex+0x13e>
 8025678:	2b2d      	cmp	r3, #45	; 0x2d
 802567a:	d02e      	beq.n	80256da <__gethex+0x146>
 802567c:	1c71      	adds	r1, r6, #1
 802567e:	f04f 0900 	mov.w	r9, #0
 8025682:	7808      	ldrb	r0, [r1, #0]
 8025684:	f7ff ff70 	bl	8025568 <__hexdig_fun>
 8025688:	1e43      	subs	r3, r0, #1
 802568a:	b2db      	uxtb	r3, r3
 802568c:	2b18      	cmp	r3, #24
 802568e:	d82c      	bhi.n	80256ea <__gethex+0x156>
 8025690:	f1a0 0210 	sub.w	r2, r0, #16
 8025694:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8025698:	f7ff ff66 	bl	8025568 <__hexdig_fun>
 802569c:	1e43      	subs	r3, r0, #1
 802569e:	b2db      	uxtb	r3, r3
 80256a0:	2b18      	cmp	r3, #24
 80256a2:	d91d      	bls.n	80256e0 <__gethex+0x14c>
 80256a4:	f1b9 0f00 	cmp.w	r9, #0
 80256a8:	d000      	beq.n	80256ac <__gethex+0x118>
 80256aa:	4252      	negs	r2, r2
 80256ac:	4415      	add	r5, r2
 80256ae:	f8cb 1000 	str.w	r1, [fp]
 80256b2:	b1e4      	cbz	r4, 80256ee <__gethex+0x15a>
 80256b4:	9b00      	ldr	r3, [sp, #0]
 80256b6:	2b00      	cmp	r3, #0
 80256b8:	bf14      	ite	ne
 80256ba:	2700      	movne	r7, #0
 80256bc:	2706      	moveq	r7, #6
 80256be:	4638      	mov	r0, r7
 80256c0:	b009      	add	sp, #36	; 0x24
 80256c2:	ecbd 8b02 	vpop	{d8}
 80256c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80256ca:	463e      	mov	r6, r7
 80256cc:	4625      	mov	r5, r4
 80256ce:	2401      	movs	r4, #1
 80256d0:	e7ca      	b.n	8025668 <__gethex+0xd4>
 80256d2:	f04f 0900 	mov.w	r9, #0
 80256d6:	1cb1      	adds	r1, r6, #2
 80256d8:	e7d3      	b.n	8025682 <__gethex+0xee>
 80256da:	f04f 0901 	mov.w	r9, #1
 80256de:	e7fa      	b.n	80256d6 <__gethex+0x142>
 80256e0:	230a      	movs	r3, #10
 80256e2:	fb03 0202 	mla	r2, r3, r2, r0
 80256e6:	3a10      	subs	r2, #16
 80256e8:	e7d4      	b.n	8025694 <__gethex+0x100>
 80256ea:	4631      	mov	r1, r6
 80256ec:	e7df      	b.n	80256ae <__gethex+0x11a>
 80256ee:	1bf3      	subs	r3, r6, r7
 80256f0:	3b01      	subs	r3, #1
 80256f2:	4621      	mov	r1, r4
 80256f4:	2b07      	cmp	r3, #7
 80256f6:	dc0b      	bgt.n	8025710 <__gethex+0x17c>
 80256f8:	ee18 0a10 	vmov	r0, s16
 80256fc:	f000 fa74 	bl	8025be8 <_Balloc>
 8025700:	4604      	mov	r4, r0
 8025702:	b940      	cbnz	r0, 8025716 <__gethex+0x182>
 8025704:	4b65      	ldr	r3, [pc, #404]	; (802589c <__gethex+0x308>)
 8025706:	4602      	mov	r2, r0
 8025708:	21de      	movs	r1, #222	; 0xde
 802570a:	4865      	ldr	r0, [pc, #404]	; (80258a0 <__gethex+0x30c>)
 802570c:	f000 ff5c 	bl	80265c8 <__assert_func>
 8025710:	3101      	adds	r1, #1
 8025712:	105b      	asrs	r3, r3, #1
 8025714:	e7ee      	b.n	80256f4 <__gethex+0x160>
 8025716:	f100 0914 	add.w	r9, r0, #20
 802571a:	f04f 0b00 	mov.w	fp, #0
 802571e:	f1ca 0301 	rsb	r3, sl, #1
 8025722:	f8cd 9008 	str.w	r9, [sp, #8]
 8025726:	f8cd b000 	str.w	fp, [sp]
 802572a:	9306      	str	r3, [sp, #24]
 802572c:	42b7      	cmp	r7, r6
 802572e:	d340      	bcc.n	80257b2 <__gethex+0x21e>
 8025730:	9802      	ldr	r0, [sp, #8]
 8025732:	9b00      	ldr	r3, [sp, #0]
 8025734:	f840 3b04 	str.w	r3, [r0], #4
 8025738:	eba0 0009 	sub.w	r0, r0, r9
 802573c:	1080      	asrs	r0, r0, #2
 802573e:	0146      	lsls	r6, r0, #5
 8025740:	6120      	str	r0, [r4, #16]
 8025742:	4618      	mov	r0, r3
 8025744:	f000 fb46 	bl	8025dd4 <__hi0bits>
 8025748:	1a30      	subs	r0, r6, r0
 802574a:	f8d8 6000 	ldr.w	r6, [r8]
 802574e:	42b0      	cmp	r0, r6
 8025750:	dd63      	ble.n	802581a <__gethex+0x286>
 8025752:	1b87      	subs	r7, r0, r6
 8025754:	4639      	mov	r1, r7
 8025756:	4620      	mov	r0, r4
 8025758:	f000 fee0 	bl	802651c <__any_on>
 802575c:	4682      	mov	sl, r0
 802575e:	b1a8      	cbz	r0, 802578c <__gethex+0x1f8>
 8025760:	1e7b      	subs	r3, r7, #1
 8025762:	1159      	asrs	r1, r3, #5
 8025764:	f003 021f 	and.w	r2, r3, #31
 8025768:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 802576c:	f04f 0a01 	mov.w	sl, #1
 8025770:	fa0a f202 	lsl.w	r2, sl, r2
 8025774:	420a      	tst	r2, r1
 8025776:	d009      	beq.n	802578c <__gethex+0x1f8>
 8025778:	4553      	cmp	r3, sl
 802577a:	dd05      	ble.n	8025788 <__gethex+0x1f4>
 802577c:	1eb9      	subs	r1, r7, #2
 802577e:	4620      	mov	r0, r4
 8025780:	f000 fecc 	bl	802651c <__any_on>
 8025784:	2800      	cmp	r0, #0
 8025786:	d145      	bne.n	8025814 <__gethex+0x280>
 8025788:	f04f 0a02 	mov.w	sl, #2
 802578c:	4639      	mov	r1, r7
 802578e:	4620      	mov	r0, r4
 8025790:	f7ff fe98 	bl	80254c4 <rshift>
 8025794:	443d      	add	r5, r7
 8025796:	f8d8 3008 	ldr.w	r3, [r8, #8]
 802579a:	42ab      	cmp	r3, r5
 802579c:	da4c      	bge.n	8025838 <__gethex+0x2a4>
 802579e:	ee18 0a10 	vmov	r0, s16
 80257a2:	4621      	mov	r1, r4
 80257a4:	f000 fa60 	bl	8025c68 <_Bfree>
 80257a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80257aa:	2300      	movs	r3, #0
 80257ac:	6013      	str	r3, [r2, #0]
 80257ae:	27a3      	movs	r7, #163	; 0xa3
 80257b0:	e785      	b.n	80256be <__gethex+0x12a>
 80257b2:	1e73      	subs	r3, r6, #1
 80257b4:	9a05      	ldr	r2, [sp, #20]
 80257b6:	9303      	str	r3, [sp, #12]
 80257b8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80257bc:	4293      	cmp	r3, r2
 80257be:	d019      	beq.n	80257f4 <__gethex+0x260>
 80257c0:	f1bb 0f20 	cmp.w	fp, #32
 80257c4:	d107      	bne.n	80257d6 <__gethex+0x242>
 80257c6:	9b02      	ldr	r3, [sp, #8]
 80257c8:	9a00      	ldr	r2, [sp, #0]
 80257ca:	f843 2b04 	str.w	r2, [r3], #4
 80257ce:	9302      	str	r3, [sp, #8]
 80257d0:	2300      	movs	r3, #0
 80257d2:	9300      	str	r3, [sp, #0]
 80257d4:	469b      	mov	fp, r3
 80257d6:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 80257da:	f7ff fec5 	bl	8025568 <__hexdig_fun>
 80257de:	9b00      	ldr	r3, [sp, #0]
 80257e0:	f000 000f 	and.w	r0, r0, #15
 80257e4:	fa00 f00b 	lsl.w	r0, r0, fp
 80257e8:	4303      	orrs	r3, r0
 80257ea:	9300      	str	r3, [sp, #0]
 80257ec:	f10b 0b04 	add.w	fp, fp, #4
 80257f0:	9b03      	ldr	r3, [sp, #12]
 80257f2:	e00d      	b.n	8025810 <__gethex+0x27c>
 80257f4:	9b03      	ldr	r3, [sp, #12]
 80257f6:	9a06      	ldr	r2, [sp, #24]
 80257f8:	4413      	add	r3, r2
 80257fa:	42bb      	cmp	r3, r7
 80257fc:	d3e0      	bcc.n	80257c0 <__gethex+0x22c>
 80257fe:	4618      	mov	r0, r3
 8025800:	9901      	ldr	r1, [sp, #4]
 8025802:	9307      	str	r3, [sp, #28]
 8025804:	4652      	mov	r2, sl
 8025806:	f000 febf 	bl	8026588 <strncmp>
 802580a:	9b07      	ldr	r3, [sp, #28]
 802580c:	2800      	cmp	r0, #0
 802580e:	d1d7      	bne.n	80257c0 <__gethex+0x22c>
 8025810:	461e      	mov	r6, r3
 8025812:	e78b      	b.n	802572c <__gethex+0x198>
 8025814:	f04f 0a03 	mov.w	sl, #3
 8025818:	e7b8      	b.n	802578c <__gethex+0x1f8>
 802581a:	da0a      	bge.n	8025832 <__gethex+0x29e>
 802581c:	1a37      	subs	r7, r6, r0
 802581e:	4621      	mov	r1, r4
 8025820:	ee18 0a10 	vmov	r0, s16
 8025824:	463a      	mov	r2, r7
 8025826:	f000 fc3b 	bl	80260a0 <__lshift>
 802582a:	1bed      	subs	r5, r5, r7
 802582c:	4604      	mov	r4, r0
 802582e:	f100 0914 	add.w	r9, r0, #20
 8025832:	f04f 0a00 	mov.w	sl, #0
 8025836:	e7ae      	b.n	8025796 <__gethex+0x202>
 8025838:	f8d8 0004 	ldr.w	r0, [r8, #4]
 802583c:	42a8      	cmp	r0, r5
 802583e:	dd72      	ble.n	8025926 <__gethex+0x392>
 8025840:	1b45      	subs	r5, r0, r5
 8025842:	42ae      	cmp	r6, r5
 8025844:	dc36      	bgt.n	80258b4 <__gethex+0x320>
 8025846:	f8d8 300c 	ldr.w	r3, [r8, #12]
 802584a:	2b02      	cmp	r3, #2
 802584c:	d02a      	beq.n	80258a4 <__gethex+0x310>
 802584e:	2b03      	cmp	r3, #3
 8025850:	d02c      	beq.n	80258ac <__gethex+0x318>
 8025852:	2b01      	cmp	r3, #1
 8025854:	d115      	bne.n	8025882 <__gethex+0x2ee>
 8025856:	42ae      	cmp	r6, r5
 8025858:	d113      	bne.n	8025882 <__gethex+0x2ee>
 802585a:	2e01      	cmp	r6, #1
 802585c:	d10b      	bne.n	8025876 <__gethex+0x2e2>
 802585e:	9a04      	ldr	r2, [sp, #16]
 8025860:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8025864:	6013      	str	r3, [r2, #0]
 8025866:	2301      	movs	r3, #1
 8025868:	6123      	str	r3, [r4, #16]
 802586a:	f8c9 3000 	str.w	r3, [r9]
 802586e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8025870:	2762      	movs	r7, #98	; 0x62
 8025872:	601c      	str	r4, [r3, #0]
 8025874:	e723      	b.n	80256be <__gethex+0x12a>
 8025876:	1e71      	subs	r1, r6, #1
 8025878:	4620      	mov	r0, r4
 802587a:	f000 fe4f 	bl	802651c <__any_on>
 802587e:	2800      	cmp	r0, #0
 8025880:	d1ed      	bne.n	802585e <__gethex+0x2ca>
 8025882:	ee18 0a10 	vmov	r0, s16
 8025886:	4621      	mov	r1, r4
 8025888:	f000 f9ee 	bl	8025c68 <_Bfree>
 802588c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802588e:	2300      	movs	r3, #0
 8025890:	6013      	str	r3, [r2, #0]
 8025892:	2750      	movs	r7, #80	; 0x50
 8025894:	e713      	b.n	80256be <__gethex+0x12a>
 8025896:	bf00      	nop
 8025898:	080281c8 	.word	0x080281c8
 802589c:	0802814e 	.word	0x0802814e
 80258a0:	0802815f 	.word	0x0802815f
 80258a4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80258a6:	2b00      	cmp	r3, #0
 80258a8:	d1eb      	bne.n	8025882 <__gethex+0x2ee>
 80258aa:	e7d8      	b.n	802585e <__gethex+0x2ca>
 80258ac:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80258ae:	2b00      	cmp	r3, #0
 80258b0:	d1d5      	bne.n	802585e <__gethex+0x2ca>
 80258b2:	e7e6      	b.n	8025882 <__gethex+0x2ee>
 80258b4:	1e6f      	subs	r7, r5, #1
 80258b6:	f1ba 0f00 	cmp.w	sl, #0
 80258ba:	d131      	bne.n	8025920 <__gethex+0x38c>
 80258bc:	b127      	cbz	r7, 80258c8 <__gethex+0x334>
 80258be:	4639      	mov	r1, r7
 80258c0:	4620      	mov	r0, r4
 80258c2:	f000 fe2b 	bl	802651c <__any_on>
 80258c6:	4682      	mov	sl, r0
 80258c8:	117b      	asrs	r3, r7, #5
 80258ca:	2101      	movs	r1, #1
 80258cc:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 80258d0:	f007 071f 	and.w	r7, r7, #31
 80258d4:	fa01 f707 	lsl.w	r7, r1, r7
 80258d8:	421f      	tst	r7, r3
 80258da:	4629      	mov	r1, r5
 80258dc:	4620      	mov	r0, r4
 80258de:	bf18      	it	ne
 80258e0:	f04a 0a02 	orrne.w	sl, sl, #2
 80258e4:	1b76      	subs	r6, r6, r5
 80258e6:	f7ff fded 	bl	80254c4 <rshift>
 80258ea:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80258ee:	2702      	movs	r7, #2
 80258f0:	f1ba 0f00 	cmp.w	sl, #0
 80258f4:	d048      	beq.n	8025988 <__gethex+0x3f4>
 80258f6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80258fa:	2b02      	cmp	r3, #2
 80258fc:	d015      	beq.n	802592a <__gethex+0x396>
 80258fe:	2b03      	cmp	r3, #3
 8025900:	d017      	beq.n	8025932 <__gethex+0x39e>
 8025902:	2b01      	cmp	r3, #1
 8025904:	d109      	bne.n	802591a <__gethex+0x386>
 8025906:	f01a 0f02 	tst.w	sl, #2
 802590a:	d006      	beq.n	802591a <__gethex+0x386>
 802590c:	f8d9 0000 	ldr.w	r0, [r9]
 8025910:	ea4a 0a00 	orr.w	sl, sl, r0
 8025914:	f01a 0f01 	tst.w	sl, #1
 8025918:	d10e      	bne.n	8025938 <__gethex+0x3a4>
 802591a:	f047 0710 	orr.w	r7, r7, #16
 802591e:	e033      	b.n	8025988 <__gethex+0x3f4>
 8025920:	f04f 0a01 	mov.w	sl, #1
 8025924:	e7d0      	b.n	80258c8 <__gethex+0x334>
 8025926:	2701      	movs	r7, #1
 8025928:	e7e2      	b.n	80258f0 <__gethex+0x35c>
 802592a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802592c:	f1c3 0301 	rsb	r3, r3, #1
 8025930:	9315      	str	r3, [sp, #84]	; 0x54
 8025932:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8025934:	2b00      	cmp	r3, #0
 8025936:	d0f0      	beq.n	802591a <__gethex+0x386>
 8025938:	f8d4 b010 	ldr.w	fp, [r4, #16]
 802593c:	f104 0314 	add.w	r3, r4, #20
 8025940:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8025944:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8025948:	f04f 0c00 	mov.w	ip, #0
 802594c:	4618      	mov	r0, r3
 802594e:	f853 2b04 	ldr.w	r2, [r3], #4
 8025952:	f1b2 3fff 	cmp.w	r2, #4294967295
 8025956:	d01c      	beq.n	8025992 <__gethex+0x3fe>
 8025958:	3201      	adds	r2, #1
 802595a:	6002      	str	r2, [r0, #0]
 802595c:	2f02      	cmp	r7, #2
 802595e:	f104 0314 	add.w	r3, r4, #20
 8025962:	d13f      	bne.n	80259e4 <__gethex+0x450>
 8025964:	f8d8 2000 	ldr.w	r2, [r8]
 8025968:	3a01      	subs	r2, #1
 802596a:	42b2      	cmp	r2, r6
 802596c:	d10a      	bne.n	8025984 <__gethex+0x3f0>
 802596e:	1171      	asrs	r1, r6, #5
 8025970:	2201      	movs	r2, #1
 8025972:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8025976:	f006 061f 	and.w	r6, r6, #31
 802597a:	fa02 f606 	lsl.w	r6, r2, r6
 802597e:	421e      	tst	r6, r3
 8025980:	bf18      	it	ne
 8025982:	4617      	movne	r7, r2
 8025984:	f047 0720 	orr.w	r7, r7, #32
 8025988:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802598a:	601c      	str	r4, [r3, #0]
 802598c:	9b04      	ldr	r3, [sp, #16]
 802598e:	601d      	str	r5, [r3, #0]
 8025990:	e695      	b.n	80256be <__gethex+0x12a>
 8025992:	4299      	cmp	r1, r3
 8025994:	f843 cc04 	str.w	ip, [r3, #-4]
 8025998:	d8d8      	bhi.n	802594c <__gethex+0x3b8>
 802599a:	68a3      	ldr	r3, [r4, #8]
 802599c:	459b      	cmp	fp, r3
 802599e:	db19      	blt.n	80259d4 <__gethex+0x440>
 80259a0:	6861      	ldr	r1, [r4, #4]
 80259a2:	ee18 0a10 	vmov	r0, s16
 80259a6:	3101      	adds	r1, #1
 80259a8:	f000 f91e 	bl	8025be8 <_Balloc>
 80259ac:	4681      	mov	r9, r0
 80259ae:	b918      	cbnz	r0, 80259b8 <__gethex+0x424>
 80259b0:	4b1a      	ldr	r3, [pc, #104]	; (8025a1c <__gethex+0x488>)
 80259b2:	4602      	mov	r2, r0
 80259b4:	2184      	movs	r1, #132	; 0x84
 80259b6:	e6a8      	b.n	802570a <__gethex+0x176>
 80259b8:	6922      	ldr	r2, [r4, #16]
 80259ba:	3202      	adds	r2, #2
 80259bc:	f104 010c 	add.w	r1, r4, #12
 80259c0:	0092      	lsls	r2, r2, #2
 80259c2:	300c      	adds	r0, #12
 80259c4:	f7fe fc9e 	bl	8024304 <memcpy>
 80259c8:	4621      	mov	r1, r4
 80259ca:	ee18 0a10 	vmov	r0, s16
 80259ce:	f000 f94b 	bl	8025c68 <_Bfree>
 80259d2:	464c      	mov	r4, r9
 80259d4:	6923      	ldr	r3, [r4, #16]
 80259d6:	1c5a      	adds	r2, r3, #1
 80259d8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80259dc:	6122      	str	r2, [r4, #16]
 80259de:	2201      	movs	r2, #1
 80259e0:	615a      	str	r2, [r3, #20]
 80259e2:	e7bb      	b.n	802595c <__gethex+0x3c8>
 80259e4:	6922      	ldr	r2, [r4, #16]
 80259e6:	455a      	cmp	r2, fp
 80259e8:	dd0b      	ble.n	8025a02 <__gethex+0x46e>
 80259ea:	2101      	movs	r1, #1
 80259ec:	4620      	mov	r0, r4
 80259ee:	f7ff fd69 	bl	80254c4 <rshift>
 80259f2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80259f6:	3501      	adds	r5, #1
 80259f8:	42ab      	cmp	r3, r5
 80259fa:	f6ff aed0 	blt.w	802579e <__gethex+0x20a>
 80259fe:	2701      	movs	r7, #1
 8025a00:	e7c0      	b.n	8025984 <__gethex+0x3f0>
 8025a02:	f016 061f 	ands.w	r6, r6, #31
 8025a06:	d0fa      	beq.n	80259fe <__gethex+0x46a>
 8025a08:	449a      	add	sl, r3
 8025a0a:	f1c6 0620 	rsb	r6, r6, #32
 8025a0e:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 8025a12:	f000 f9df 	bl	8025dd4 <__hi0bits>
 8025a16:	42b0      	cmp	r0, r6
 8025a18:	dbe7      	blt.n	80259ea <__gethex+0x456>
 8025a1a:	e7f0      	b.n	80259fe <__gethex+0x46a>
 8025a1c:	0802814e 	.word	0x0802814e

08025a20 <L_shift>:
 8025a20:	f1c2 0208 	rsb	r2, r2, #8
 8025a24:	0092      	lsls	r2, r2, #2
 8025a26:	b570      	push	{r4, r5, r6, lr}
 8025a28:	f1c2 0620 	rsb	r6, r2, #32
 8025a2c:	6843      	ldr	r3, [r0, #4]
 8025a2e:	6804      	ldr	r4, [r0, #0]
 8025a30:	fa03 f506 	lsl.w	r5, r3, r6
 8025a34:	432c      	orrs	r4, r5
 8025a36:	40d3      	lsrs	r3, r2
 8025a38:	6004      	str	r4, [r0, #0]
 8025a3a:	f840 3f04 	str.w	r3, [r0, #4]!
 8025a3e:	4288      	cmp	r0, r1
 8025a40:	d3f4      	bcc.n	8025a2c <L_shift+0xc>
 8025a42:	bd70      	pop	{r4, r5, r6, pc}

08025a44 <__match>:
 8025a44:	b530      	push	{r4, r5, lr}
 8025a46:	6803      	ldr	r3, [r0, #0]
 8025a48:	3301      	adds	r3, #1
 8025a4a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8025a4e:	b914      	cbnz	r4, 8025a56 <__match+0x12>
 8025a50:	6003      	str	r3, [r0, #0]
 8025a52:	2001      	movs	r0, #1
 8025a54:	bd30      	pop	{r4, r5, pc}
 8025a56:	f813 2b01 	ldrb.w	r2, [r3], #1
 8025a5a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8025a5e:	2d19      	cmp	r5, #25
 8025a60:	bf98      	it	ls
 8025a62:	3220      	addls	r2, #32
 8025a64:	42a2      	cmp	r2, r4
 8025a66:	d0f0      	beq.n	8025a4a <__match+0x6>
 8025a68:	2000      	movs	r0, #0
 8025a6a:	e7f3      	b.n	8025a54 <__match+0x10>

08025a6c <__hexnan>:
 8025a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025a70:	680b      	ldr	r3, [r1, #0]
 8025a72:	6801      	ldr	r1, [r0, #0]
 8025a74:	115e      	asrs	r6, r3, #5
 8025a76:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8025a7a:	f013 031f 	ands.w	r3, r3, #31
 8025a7e:	b087      	sub	sp, #28
 8025a80:	bf18      	it	ne
 8025a82:	3604      	addne	r6, #4
 8025a84:	2500      	movs	r5, #0
 8025a86:	1f37      	subs	r7, r6, #4
 8025a88:	4682      	mov	sl, r0
 8025a8a:	4690      	mov	r8, r2
 8025a8c:	9301      	str	r3, [sp, #4]
 8025a8e:	f846 5c04 	str.w	r5, [r6, #-4]
 8025a92:	46b9      	mov	r9, r7
 8025a94:	463c      	mov	r4, r7
 8025a96:	9502      	str	r5, [sp, #8]
 8025a98:	46ab      	mov	fp, r5
 8025a9a:	784a      	ldrb	r2, [r1, #1]
 8025a9c:	1c4b      	adds	r3, r1, #1
 8025a9e:	9303      	str	r3, [sp, #12]
 8025aa0:	b342      	cbz	r2, 8025af4 <__hexnan+0x88>
 8025aa2:	4610      	mov	r0, r2
 8025aa4:	9105      	str	r1, [sp, #20]
 8025aa6:	9204      	str	r2, [sp, #16]
 8025aa8:	f7ff fd5e 	bl	8025568 <__hexdig_fun>
 8025aac:	2800      	cmp	r0, #0
 8025aae:	d14f      	bne.n	8025b50 <__hexnan+0xe4>
 8025ab0:	9a04      	ldr	r2, [sp, #16]
 8025ab2:	9905      	ldr	r1, [sp, #20]
 8025ab4:	2a20      	cmp	r2, #32
 8025ab6:	d818      	bhi.n	8025aea <__hexnan+0x7e>
 8025ab8:	9b02      	ldr	r3, [sp, #8]
 8025aba:	459b      	cmp	fp, r3
 8025abc:	dd13      	ble.n	8025ae6 <__hexnan+0x7a>
 8025abe:	454c      	cmp	r4, r9
 8025ac0:	d206      	bcs.n	8025ad0 <__hexnan+0x64>
 8025ac2:	2d07      	cmp	r5, #7
 8025ac4:	dc04      	bgt.n	8025ad0 <__hexnan+0x64>
 8025ac6:	462a      	mov	r2, r5
 8025ac8:	4649      	mov	r1, r9
 8025aca:	4620      	mov	r0, r4
 8025acc:	f7ff ffa8 	bl	8025a20 <L_shift>
 8025ad0:	4544      	cmp	r4, r8
 8025ad2:	d950      	bls.n	8025b76 <__hexnan+0x10a>
 8025ad4:	2300      	movs	r3, #0
 8025ad6:	f1a4 0904 	sub.w	r9, r4, #4
 8025ada:	f844 3c04 	str.w	r3, [r4, #-4]
 8025ade:	f8cd b008 	str.w	fp, [sp, #8]
 8025ae2:	464c      	mov	r4, r9
 8025ae4:	461d      	mov	r5, r3
 8025ae6:	9903      	ldr	r1, [sp, #12]
 8025ae8:	e7d7      	b.n	8025a9a <__hexnan+0x2e>
 8025aea:	2a29      	cmp	r2, #41	; 0x29
 8025aec:	d156      	bne.n	8025b9c <__hexnan+0x130>
 8025aee:	3102      	adds	r1, #2
 8025af0:	f8ca 1000 	str.w	r1, [sl]
 8025af4:	f1bb 0f00 	cmp.w	fp, #0
 8025af8:	d050      	beq.n	8025b9c <__hexnan+0x130>
 8025afa:	454c      	cmp	r4, r9
 8025afc:	d206      	bcs.n	8025b0c <__hexnan+0xa0>
 8025afe:	2d07      	cmp	r5, #7
 8025b00:	dc04      	bgt.n	8025b0c <__hexnan+0xa0>
 8025b02:	462a      	mov	r2, r5
 8025b04:	4649      	mov	r1, r9
 8025b06:	4620      	mov	r0, r4
 8025b08:	f7ff ff8a 	bl	8025a20 <L_shift>
 8025b0c:	4544      	cmp	r4, r8
 8025b0e:	d934      	bls.n	8025b7a <__hexnan+0x10e>
 8025b10:	f1a8 0204 	sub.w	r2, r8, #4
 8025b14:	4623      	mov	r3, r4
 8025b16:	f853 1b04 	ldr.w	r1, [r3], #4
 8025b1a:	f842 1f04 	str.w	r1, [r2, #4]!
 8025b1e:	429f      	cmp	r7, r3
 8025b20:	d2f9      	bcs.n	8025b16 <__hexnan+0xaa>
 8025b22:	1b3b      	subs	r3, r7, r4
 8025b24:	f023 0303 	bic.w	r3, r3, #3
 8025b28:	3304      	adds	r3, #4
 8025b2a:	3401      	adds	r4, #1
 8025b2c:	3e03      	subs	r6, #3
 8025b2e:	42b4      	cmp	r4, r6
 8025b30:	bf88      	it	hi
 8025b32:	2304      	movhi	r3, #4
 8025b34:	4443      	add	r3, r8
 8025b36:	2200      	movs	r2, #0
 8025b38:	f843 2b04 	str.w	r2, [r3], #4
 8025b3c:	429f      	cmp	r7, r3
 8025b3e:	d2fb      	bcs.n	8025b38 <__hexnan+0xcc>
 8025b40:	683b      	ldr	r3, [r7, #0]
 8025b42:	b91b      	cbnz	r3, 8025b4c <__hexnan+0xe0>
 8025b44:	4547      	cmp	r7, r8
 8025b46:	d127      	bne.n	8025b98 <__hexnan+0x12c>
 8025b48:	2301      	movs	r3, #1
 8025b4a:	603b      	str	r3, [r7, #0]
 8025b4c:	2005      	movs	r0, #5
 8025b4e:	e026      	b.n	8025b9e <__hexnan+0x132>
 8025b50:	3501      	adds	r5, #1
 8025b52:	2d08      	cmp	r5, #8
 8025b54:	f10b 0b01 	add.w	fp, fp, #1
 8025b58:	dd06      	ble.n	8025b68 <__hexnan+0xfc>
 8025b5a:	4544      	cmp	r4, r8
 8025b5c:	d9c3      	bls.n	8025ae6 <__hexnan+0x7a>
 8025b5e:	2300      	movs	r3, #0
 8025b60:	f844 3c04 	str.w	r3, [r4, #-4]
 8025b64:	2501      	movs	r5, #1
 8025b66:	3c04      	subs	r4, #4
 8025b68:	6822      	ldr	r2, [r4, #0]
 8025b6a:	f000 000f 	and.w	r0, r0, #15
 8025b6e:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8025b72:	6022      	str	r2, [r4, #0]
 8025b74:	e7b7      	b.n	8025ae6 <__hexnan+0x7a>
 8025b76:	2508      	movs	r5, #8
 8025b78:	e7b5      	b.n	8025ae6 <__hexnan+0x7a>
 8025b7a:	9b01      	ldr	r3, [sp, #4]
 8025b7c:	2b00      	cmp	r3, #0
 8025b7e:	d0df      	beq.n	8025b40 <__hexnan+0xd4>
 8025b80:	f04f 32ff 	mov.w	r2, #4294967295
 8025b84:	f1c3 0320 	rsb	r3, r3, #32
 8025b88:	fa22 f303 	lsr.w	r3, r2, r3
 8025b8c:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8025b90:	401a      	ands	r2, r3
 8025b92:	f846 2c04 	str.w	r2, [r6, #-4]
 8025b96:	e7d3      	b.n	8025b40 <__hexnan+0xd4>
 8025b98:	3f04      	subs	r7, #4
 8025b9a:	e7d1      	b.n	8025b40 <__hexnan+0xd4>
 8025b9c:	2004      	movs	r0, #4
 8025b9e:	b007      	add	sp, #28
 8025ba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025ba4 <__retarget_lock_init_recursive>:
 8025ba4:	4770      	bx	lr

08025ba6 <__retarget_lock_acquire_recursive>:
 8025ba6:	4770      	bx	lr

08025ba8 <__retarget_lock_release>:
 8025ba8:	4770      	bx	lr

08025baa <__retarget_lock_release_recursive>:
 8025baa:	4770      	bx	lr

08025bac <__ascii_mbtowc>:
 8025bac:	b082      	sub	sp, #8
 8025bae:	b901      	cbnz	r1, 8025bb2 <__ascii_mbtowc+0x6>
 8025bb0:	a901      	add	r1, sp, #4
 8025bb2:	b142      	cbz	r2, 8025bc6 <__ascii_mbtowc+0x1a>
 8025bb4:	b14b      	cbz	r3, 8025bca <__ascii_mbtowc+0x1e>
 8025bb6:	7813      	ldrb	r3, [r2, #0]
 8025bb8:	600b      	str	r3, [r1, #0]
 8025bba:	7812      	ldrb	r2, [r2, #0]
 8025bbc:	1e10      	subs	r0, r2, #0
 8025bbe:	bf18      	it	ne
 8025bc0:	2001      	movne	r0, #1
 8025bc2:	b002      	add	sp, #8
 8025bc4:	4770      	bx	lr
 8025bc6:	4610      	mov	r0, r2
 8025bc8:	e7fb      	b.n	8025bc2 <__ascii_mbtowc+0x16>
 8025bca:	f06f 0001 	mvn.w	r0, #1
 8025bce:	e7f8      	b.n	8025bc2 <__ascii_mbtowc+0x16>

08025bd0 <__malloc_lock>:
 8025bd0:	4801      	ldr	r0, [pc, #4]	; (8025bd8 <__malloc_lock+0x8>)
 8025bd2:	f7ff bfe8 	b.w	8025ba6 <__retarget_lock_acquire_recursive>
 8025bd6:	bf00      	nop
 8025bd8:	20000734 	.word	0x20000734

08025bdc <__malloc_unlock>:
 8025bdc:	4801      	ldr	r0, [pc, #4]	; (8025be4 <__malloc_unlock+0x8>)
 8025bde:	f7ff bfe4 	b.w	8025baa <__retarget_lock_release_recursive>
 8025be2:	bf00      	nop
 8025be4:	20000734 	.word	0x20000734

08025be8 <_Balloc>:
 8025be8:	b570      	push	{r4, r5, r6, lr}
 8025bea:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8025bec:	4604      	mov	r4, r0
 8025bee:	460d      	mov	r5, r1
 8025bf0:	b976      	cbnz	r6, 8025c10 <_Balloc+0x28>
 8025bf2:	2010      	movs	r0, #16
 8025bf4:	f7fe fb68 	bl	80242c8 <malloc>
 8025bf8:	4602      	mov	r2, r0
 8025bfa:	6260      	str	r0, [r4, #36]	; 0x24
 8025bfc:	b920      	cbnz	r0, 8025c08 <_Balloc+0x20>
 8025bfe:	4b18      	ldr	r3, [pc, #96]	; (8025c60 <_Balloc+0x78>)
 8025c00:	4818      	ldr	r0, [pc, #96]	; (8025c64 <_Balloc+0x7c>)
 8025c02:	2166      	movs	r1, #102	; 0x66
 8025c04:	f000 fce0 	bl	80265c8 <__assert_func>
 8025c08:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8025c0c:	6006      	str	r6, [r0, #0]
 8025c0e:	60c6      	str	r6, [r0, #12]
 8025c10:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8025c12:	68f3      	ldr	r3, [r6, #12]
 8025c14:	b183      	cbz	r3, 8025c38 <_Balloc+0x50>
 8025c16:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8025c18:	68db      	ldr	r3, [r3, #12]
 8025c1a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8025c1e:	b9b8      	cbnz	r0, 8025c50 <_Balloc+0x68>
 8025c20:	2101      	movs	r1, #1
 8025c22:	fa01 f605 	lsl.w	r6, r1, r5
 8025c26:	1d72      	adds	r2, r6, #5
 8025c28:	0092      	lsls	r2, r2, #2
 8025c2a:	4620      	mov	r0, r4
 8025c2c:	f000 fc97 	bl	802655e <_calloc_r>
 8025c30:	b160      	cbz	r0, 8025c4c <_Balloc+0x64>
 8025c32:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8025c36:	e00e      	b.n	8025c56 <_Balloc+0x6e>
 8025c38:	2221      	movs	r2, #33	; 0x21
 8025c3a:	2104      	movs	r1, #4
 8025c3c:	4620      	mov	r0, r4
 8025c3e:	f000 fc8e 	bl	802655e <_calloc_r>
 8025c42:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8025c44:	60f0      	str	r0, [r6, #12]
 8025c46:	68db      	ldr	r3, [r3, #12]
 8025c48:	2b00      	cmp	r3, #0
 8025c4a:	d1e4      	bne.n	8025c16 <_Balloc+0x2e>
 8025c4c:	2000      	movs	r0, #0
 8025c4e:	bd70      	pop	{r4, r5, r6, pc}
 8025c50:	6802      	ldr	r2, [r0, #0]
 8025c52:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8025c56:	2300      	movs	r3, #0
 8025c58:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8025c5c:	e7f7      	b.n	8025c4e <_Balloc+0x66>
 8025c5e:	bf00      	nop
 8025c60:	080281dc 	.word	0x080281dc
 8025c64:	080281f3 	.word	0x080281f3

08025c68 <_Bfree>:
 8025c68:	b570      	push	{r4, r5, r6, lr}
 8025c6a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8025c6c:	4605      	mov	r5, r0
 8025c6e:	460c      	mov	r4, r1
 8025c70:	b976      	cbnz	r6, 8025c90 <_Bfree+0x28>
 8025c72:	2010      	movs	r0, #16
 8025c74:	f7fe fb28 	bl	80242c8 <malloc>
 8025c78:	4602      	mov	r2, r0
 8025c7a:	6268      	str	r0, [r5, #36]	; 0x24
 8025c7c:	b920      	cbnz	r0, 8025c88 <_Bfree+0x20>
 8025c7e:	4b09      	ldr	r3, [pc, #36]	; (8025ca4 <_Bfree+0x3c>)
 8025c80:	4809      	ldr	r0, [pc, #36]	; (8025ca8 <_Bfree+0x40>)
 8025c82:	218a      	movs	r1, #138	; 0x8a
 8025c84:	f000 fca0 	bl	80265c8 <__assert_func>
 8025c88:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8025c8c:	6006      	str	r6, [r0, #0]
 8025c8e:	60c6      	str	r6, [r0, #12]
 8025c90:	b13c      	cbz	r4, 8025ca2 <_Bfree+0x3a>
 8025c92:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8025c94:	6862      	ldr	r2, [r4, #4]
 8025c96:	68db      	ldr	r3, [r3, #12]
 8025c98:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8025c9c:	6021      	str	r1, [r4, #0]
 8025c9e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8025ca2:	bd70      	pop	{r4, r5, r6, pc}
 8025ca4:	080281dc 	.word	0x080281dc
 8025ca8:	080281f3 	.word	0x080281f3

08025cac <__multadd>:
 8025cac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025cb0:	690e      	ldr	r6, [r1, #16]
 8025cb2:	4607      	mov	r7, r0
 8025cb4:	4698      	mov	r8, r3
 8025cb6:	460c      	mov	r4, r1
 8025cb8:	f101 0014 	add.w	r0, r1, #20
 8025cbc:	2300      	movs	r3, #0
 8025cbe:	6805      	ldr	r5, [r0, #0]
 8025cc0:	b2a9      	uxth	r1, r5
 8025cc2:	fb02 8101 	mla	r1, r2, r1, r8
 8025cc6:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 8025cca:	0c2d      	lsrs	r5, r5, #16
 8025ccc:	fb02 c505 	mla	r5, r2, r5, ip
 8025cd0:	b289      	uxth	r1, r1
 8025cd2:	3301      	adds	r3, #1
 8025cd4:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 8025cd8:	429e      	cmp	r6, r3
 8025cda:	f840 1b04 	str.w	r1, [r0], #4
 8025cde:	ea4f 4815 	mov.w	r8, r5, lsr #16
 8025ce2:	dcec      	bgt.n	8025cbe <__multadd+0x12>
 8025ce4:	f1b8 0f00 	cmp.w	r8, #0
 8025ce8:	d022      	beq.n	8025d30 <__multadd+0x84>
 8025cea:	68a3      	ldr	r3, [r4, #8]
 8025cec:	42b3      	cmp	r3, r6
 8025cee:	dc19      	bgt.n	8025d24 <__multadd+0x78>
 8025cf0:	6861      	ldr	r1, [r4, #4]
 8025cf2:	4638      	mov	r0, r7
 8025cf4:	3101      	adds	r1, #1
 8025cf6:	f7ff ff77 	bl	8025be8 <_Balloc>
 8025cfa:	4605      	mov	r5, r0
 8025cfc:	b928      	cbnz	r0, 8025d0a <__multadd+0x5e>
 8025cfe:	4602      	mov	r2, r0
 8025d00:	4b0d      	ldr	r3, [pc, #52]	; (8025d38 <__multadd+0x8c>)
 8025d02:	480e      	ldr	r0, [pc, #56]	; (8025d3c <__multadd+0x90>)
 8025d04:	21b5      	movs	r1, #181	; 0xb5
 8025d06:	f000 fc5f 	bl	80265c8 <__assert_func>
 8025d0a:	6922      	ldr	r2, [r4, #16]
 8025d0c:	3202      	adds	r2, #2
 8025d0e:	f104 010c 	add.w	r1, r4, #12
 8025d12:	0092      	lsls	r2, r2, #2
 8025d14:	300c      	adds	r0, #12
 8025d16:	f7fe faf5 	bl	8024304 <memcpy>
 8025d1a:	4621      	mov	r1, r4
 8025d1c:	4638      	mov	r0, r7
 8025d1e:	f7ff ffa3 	bl	8025c68 <_Bfree>
 8025d22:	462c      	mov	r4, r5
 8025d24:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8025d28:	3601      	adds	r6, #1
 8025d2a:	f8c3 8014 	str.w	r8, [r3, #20]
 8025d2e:	6126      	str	r6, [r4, #16]
 8025d30:	4620      	mov	r0, r4
 8025d32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025d36:	bf00      	nop
 8025d38:	0802814e 	.word	0x0802814e
 8025d3c:	080281f3 	.word	0x080281f3

08025d40 <__s2b>:
 8025d40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025d44:	460c      	mov	r4, r1
 8025d46:	4615      	mov	r5, r2
 8025d48:	461f      	mov	r7, r3
 8025d4a:	2209      	movs	r2, #9
 8025d4c:	3308      	adds	r3, #8
 8025d4e:	4606      	mov	r6, r0
 8025d50:	fb93 f3f2 	sdiv	r3, r3, r2
 8025d54:	2100      	movs	r1, #0
 8025d56:	2201      	movs	r2, #1
 8025d58:	429a      	cmp	r2, r3
 8025d5a:	db09      	blt.n	8025d70 <__s2b+0x30>
 8025d5c:	4630      	mov	r0, r6
 8025d5e:	f7ff ff43 	bl	8025be8 <_Balloc>
 8025d62:	b940      	cbnz	r0, 8025d76 <__s2b+0x36>
 8025d64:	4602      	mov	r2, r0
 8025d66:	4b19      	ldr	r3, [pc, #100]	; (8025dcc <__s2b+0x8c>)
 8025d68:	4819      	ldr	r0, [pc, #100]	; (8025dd0 <__s2b+0x90>)
 8025d6a:	21ce      	movs	r1, #206	; 0xce
 8025d6c:	f000 fc2c 	bl	80265c8 <__assert_func>
 8025d70:	0052      	lsls	r2, r2, #1
 8025d72:	3101      	adds	r1, #1
 8025d74:	e7f0      	b.n	8025d58 <__s2b+0x18>
 8025d76:	9b08      	ldr	r3, [sp, #32]
 8025d78:	6143      	str	r3, [r0, #20]
 8025d7a:	2d09      	cmp	r5, #9
 8025d7c:	f04f 0301 	mov.w	r3, #1
 8025d80:	6103      	str	r3, [r0, #16]
 8025d82:	dd16      	ble.n	8025db2 <__s2b+0x72>
 8025d84:	f104 0909 	add.w	r9, r4, #9
 8025d88:	46c8      	mov	r8, r9
 8025d8a:	442c      	add	r4, r5
 8025d8c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8025d90:	4601      	mov	r1, r0
 8025d92:	3b30      	subs	r3, #48	; 0x30
 8025d94:	220a      	movs	r2, #10
 8025d96:	4630      	mov	r0, r6
 8025d98:	f7ff ff88 	bl	8025cac <__multadd>
 8025d9c:	45a0      	cmp	r8, r4
 8025d9e:	d1f5      	bne.n	8025d8c <__s2b+0x4c>
 8025da0:	f1a5 0408 	sub.w	r4, r5, #8
 8025da4:	444c      	add	r4, r9
 8025da6:	1b2d      	subs	r5, r5, r4
 8025da8:	1963      	adds	r3, r4, r5
 8025daa:	42bb      	cmp	r3, r7
 8025dac:	db04      	blt.n	8025db8 <__s2b+0x78>
 8025dae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025db2:	340a      	adds	r4, #10
 8025db4:	2509      	movs	r5, #9
 8025db6:	e7f6      	b.n	8025da6 <__s2b+0x66>
 8025db8:	f814 3b01 	ldrb.w	r3, [r4], #1
 8025dbc:	4601      	mov	r1, r0
 8025dbe:	3b30      	subs	r3, #48	; 0x30
 8025dc0:	220a      	movs	r2, #10
 8025dc2:	4630      	mov	r0, r6
 8025dc4:	f7ff ff72 	bl	8025cac <__multadd>
 8025dc8:	e7ee      	b.n	8025da8 <__s2b+0x68>
 8025dca:	bf00      	nop
 8025dcc:	0802814e 	.word	0x0802814e
 8025dd0:	080281f3 	.word	0x080281f3

08025dd4 <__hi0bits>:
 8025dd4:	0c03      	lsrs	r3, r0, #16
 8025dd6:	041b      	lsls	r3, r3, #16
 8025dd8:	b9d3      	cbnz	r3, 8025e10 <__hi0bits+0x3c>
 8025dda:	0400      	lsls	r0, r0, #16
 8025ddc:	2310      	movs	r3, #16
 8025dde:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8025de2:	bf04      	itt	eq
 8025de4:	0200      	lsleq	r0, r0, #8
 8025de6:	3308      	addeq	r3, #8
 8025de8:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8025dec:	bf04      	itt	eq
 8025dee:	0100      	lsleq	r0, r0, #4
 8025df0:	3304      	addeq	r3, #4
 8025df2:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8025df6:	bf04      	itt	eq
 8025df8:	0080      	lsleq	r0, r0, #2
 8025dfa:	3302      	addeq	r3, #2
 8025dfc:	2800      	cmp	r0, #0
 8025dfe:	db05      	blt.n	8025e0c <__hi0bits+0x38>
 8025e00:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8025e04:	f103 0301 	add.w	r3, r3, #1
 8025e08:	bf08      	it	eq
 8025e0a:	2320      	moveq	r3, #32
 8025e0c:	4618      	mov	r0, r3
 8025e0e:	4770      	bx	lr
 8025e10:	2300      	movs	r3, #0
 8025e12:	e7e4      	b.n	8025dde <__hi0bits+0xa>

08025e14 <__lo0bits>:
 8025e14:	6803      	ldr	r3, [r0, #0]
 8025e16:	f013 0207 	ands.w	r2, r3, #7
 8025e1a:	4601      	mov	r1, r0
 8025e1c:	d00b      	beq.n	8025e36 <__lo0bits+0x22>
 8025e1e:	07da      	lsls	r2, r3, #31
 8025e20:	d424      	bmi.n	8025e6c <__lo0bits+0x58>
 8025e22:	0798      	lsls	r0, r3, #30
 8025e24:	bf49      	itett	mi
 8025e26:	085b      	lsrmi	r3, r3, #1
 8025e28:	089b      	lsrpl	r3, r3, #2
 8025e2a:	2001      	movmi	r0, #1
 8025e2c:	600b      	strmi	r3, [r1, #0]
 8025e2e:	bf5c      	itt	pl
 8025e30:	600b      	strpl	r3, [r1, #0]
 8025e32:	2002      	movpl	r0, #2
 8025e34:	4770      	bx	lr
 8025e36:	b298      	uxth	r0, r3
 8025e38:	b9b0      	cbnz	r0, 8025e68 <__lo0bits+0x54>
 8025e3a:	0c1b      	lsrs	r3, r3, #16
 8025e3c:	2010      	movs	r0, #16
 8025e3e:	f013 0fff 	tst.w	r3, #255	; 0xff
 8025e42:	bf04      	itt	eq
 8025e44:	0a1b      	lsreq	r3, r3, #8
 8025e46:	3008      	addeq	r0, #8
 8025e48:	071a      	lsls	r2, r3, #28
 8025e4a:	bf04      	itt	eq
 8025e4c:	091b      	lsreq	r3, r3, #4
 8025e4e:	3004      	addeq	r0, #4
 8025e50:	079a      	lsls	r2, r3, #30
 8025e52:	bf04      	itt	eq
 8025e54:	089b      	lsreq	r3, r3, #2
 8025e56:	3002      	addeq	r0, #2
 8025e58:	07da      	lsls	r2, r3, #31
 8025e5a:	d403      	bmi.n	8025e64 <__lo0bits+0x50>
 8025e5c:	085b      	lsrs	r3, r3, #1
 8025e5e:	f100 0001 	add.w	r0, r0, #1
 8025e62:	d005      	beq.n	8025e70 <__lo0bits+0x5c>
 8025e64:	600b      	str	r3, [r1, #0]
 8025e66:	4770      	bx	lr
 8025e68:	4610      	mov	r0, r2
 8025e6a:	e7e8      	b.n	8025e3e <__lo0bits+0x2a>
 8025e6c:	2000      	movs	r0, #0
 8025e6e:	4770      	bx	lr
 8025e70:	2020      	movs	r0, #32
 8025e72:	4770      	bx	lr

08025e74 <__i2b>:
 8025e74:	b510      	push	{r4, lr}
 8025e76:	460c      	mov	r4, r1
 8025e78:	2101      	movs	r1, #1
 8025e7a:	f7ff feb5 	bl	8025be8 <_Balloc>
 8025e7e:	4602      	mov	r2, r0
 8025e80:	b928      	cbnz	r0, 8025e8e <__i2b+0x1a>
 8025e82:	4b05      	ldr	r3, [pc, #20]	; (8025e98 <__i2b+0x24>)
 8025e84:	4805      	ldr	r0, [pc, #20]	; (8025e9c <__i2b+0x28>)
 8025e86:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8025e8a:	f000 fb9d 	bl	80265c8 <__assert_func>
 8025e8e:	2301      	movs	r3, #1
 8025e90:	6144      	str	r4, [r0, #20]
 8025e92:	6103      	str	r3, [r0, #16]
 8025e94:	bd10      	pop	{r4, pc}
 8025e96:	bf00      	nop
 8025e98:	0802814e 	.word	0x0802814e
 8025e9c:	080281f3 	.word	0x080281f3

08025ea0 <__multiply>:
 8025ea0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025ea4:	4614      	mov	r4, r2
 8025ea6:	690a      	ldr	r2, [r1, #16]
 8025ea8:	6923      	ldr	r3, [r4, #16]
 8025eaa:	429a      	cmp	r2, r3
 8025eac:	bfb8      	it	lt
 8025eae:	460b      	movlt	r3, r1
 8025eb0:	460d      	mov	r5, r1
 8025eb2:	bfbc      	itt	lt
 8025eb4:	4625      	movlt	r5, r4
 8025eb6:	461c      	movlt	r4, r3
 8025eb8:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8025ebc:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8025ec0:	68ab      	ldr	r3, [r5, #8]
 8025ec2:	6869      	ldr	r1, [r5, #4]
 8025ec4:	eb0a 0709 	add.w	r7, sl, r9
 8025ec8:	42bb      	cmp	r3, r7
 8025eca:	b085      	sub	sp, #20
 8025ecc:	bfb8      	it	lt
 8025ece:	3101      	addlt	r1, #1
 8025ed0:	f7ff fe8a 	bl	8025be8 <_Balloc>
 8025ed4:	b930      	cbnz	r0, 8025ee4 <__multiply+0x44>
 8025ed6:	4602      	mov	r2, r0
 8025ed8:	4b42      	ldr	r3, [pc, #264]	; (8025fe4 <__multiply+0x144>)
 8025eda:	4843      	ldr	r0, [pc, #268]	; (8025fe8 <__multiply+0x148>)
 8025edc:	f240 115d 	movw	r1, #349	; 0x15d
 8025ee0:	f000 fb72 	bl	80265c8 <__assert_func>
 8025ee4:	f100 0614 	add.w	r6, r0, #20
 8025ee8:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8025eec:	4633      	mov	r3, r6
 8025eee:	2200      	movs	r2, #0
 8025ef0:	4543      	cmp	r3, r8
 8025ef2:	d31e      	bcc.n	8025f32 <__multiply+0x92>
 8025ef4:	f105 0c14 	add.w	ip, r5, #20
 8025ef8:	f104 0314 	add.w	r3, r4, #20
 8025efc:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8025f00:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8025f04:	9202      	str	r2, [sp, #8]
 8025f06:	ebac 0205 	sub.w	r2, ip, r5
 8025f0a:	3a15      	subs	r2, #21
 8025f0c:	f022 0203 	bic.w	r2, r2, #3
 8025f10:	3204      	adds	r2, #4
 8025f12:	f105 0115 	add.w	r1, r5, #21
 8025f16:	458c      	cmp	ip, r1
 8025f18:	bf38      	it	cc
 8025f1a:	2204      	movcc	r2, #4
 8025f1c:	9201      	str	r2, [sp, #4]
 8025f1e:	9a02      	ldr	r2, [sp, #8]
 8025f20:	9303      	str	r3, [sp, #12]
 8025f22:	429a      	cmp	r2, r3
 8025f24:	d808      	bhi.n	8025f38 <__multiply+0x98>
 8025f26:	2f00      	cmp	r7, #0
 8025f28:	dc55      	bgt.n	8025fd6 <__multiply+0x136>
 8025f2a:	6107      	str	r7, [r0, #16]
 8025f2c:	b005      	add	sp, #20
 8025f2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025f32:	f843 2b04 	str.w	r2, [r3], #4
 8025f36:	e7db      	b.n	8025ef0 <__multiply+0x50>
 8025f38:	f8b3 a000 	ldrh.w	sl, [r3]
 8025f3c:	f1ba 0f00 	cmp.w	sl, #0
 8025f40:	d020      	beq.n	8025f84 <__multiply+0xe4>
 8025f42:	f105 0e14 	add.w	lr, r5, #20
 8025f46:	46b1      	mov	r9, r6
 8025f48:	2200      	movs	r2, #0
 8025f4a:	f85e 4b04 	ldr.w	r4, [lr], #4
 8025f4e:	f8d9 b000 	ldr.w	fp, [r9]
 8025f52:	b2a1      	uxth	r1, r4
 8025f54:	fa1f fb8b 	uxth.w	fp, fp
 8025f58:	fb0a b101 	mla	r1, sl, r1, fp
 8025f5c:	4411      	add	r1, r2
 8025f5e:	f8d9 2000 	ldr.w	r2, [r9]
 8025f62:	0c24      	lsrs	r4, r4, #16
 8025f64:	0c12      	lsrs	r2, r2, #16
 8025f66:	fb0a 2404 	mla	r4, sl, r4, r2
 8025f6a:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 8025f6e:	b289      	uxth	r1, r1
 8025f70:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8025f74:	45f4      	cmp	ip, lr
 8025f76:	f849 1b04 	str.w	r1, [r9], #4
 8025f7a:	ea4f 4214 	mov.w	r2, r4, lsr #16
 8025f7e:	d8e4      	bhi.n	8025f4a <__multiply+0xaa>
 8025f80:	9901      	ldr	r1, [sp, #4]
 8025f82:	5072      	str	r2, [r6, r1]
 8025f84:	9a03      	ldr	r2, [sp, #12]
 8025f86:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8025f8a:	3304      	adds	r3, #4
 8025f8c:	f1b9 0f00 	cmp.w	r9, #0
 8025f90:	d01f      	beq.n	8025fd2 <__multiply+0x132>
 8025f92:	6834      	ldr	r4, [r6, #0]
 8025f94:	f105 0114 	add.w	r1, r5, #20
 8025f98:	46b6      	mov	lr, r6
 8025f9a:	f04f 0a00 	mov.w	sl, #0
 8025f9e:	880a      	ldrh	r2, [r1, #0]
 8025fa0:	f8be b002 	ldrh.w	fp, [lr, #2]
 8025fa4:	fb09 b202 	mla	r2, r9, r2, fp
 8025fa8:	4492      	add	sl, r2
 8025faa:	b2a4      	uxth	r4, r4
 8025fac:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8025fb0:	f84e 4b04 	str.w	r4, [lr], #4
 8025fb4:	f851 4b04 	ldr.w	r4, [r1], #4
 8025fb8:	f8be 2000 	ldrh.w	r2, [lr]
 8025fbc:	0c24      	lsrs	r4, r4, #16
 8025fbe:	fb09 2404 	mla	r4, r9, r4, r2
 8025fc2:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 8025fc6:	458c      	cmp	ip, r1
 8025fc8:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8025fcc:	d8e7      	bhi.n	8025f9e <__multiply+0xfe>
 8025fce:	9a01      	ldr	r2, [sp, #4]
 8025fd0:	50b4      	str	r4, [r6, r2]
 8025fd2:	3604      	adds	r6, #4
 8025fd4:	e7a3      	b.n	8025f1e <__multiply+0x7e>
 8025fd6:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8025fda:	2b00      	cmp	r3, #0
 8025fdc:	d1a5      	bne.n	8025f2a <__multiply+0x8a>
 8025fde:	3f01      	subs	r7, #1
 8025fe0:	e7a1      	b.n	8025f26 <__multiply+0x86>
 8025fe2:	bf00      	nop
 8025fe4:	0802814e 	.word	0x0802814e
 8025fe8:	080281f3 	.word	0x080281f3

08025fec <__pow5mult>:
 8025fec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025ff0:	4615      	mov	r5, r2
 8025ff2:	f012 0203 	ands.w	r2, r2, #3
 8025ff6:	4606      	mov	r6, r0
 8025ff8:	460f      	mov	r7, r1
 8025ffa:	d007      	beq.n	802600c <__pow5mult+0x20>
 8025ffc:	4c25      	ldr	r4, [pc, #148]	; (8026094 <__pow5mult+0xa8>)
 8025ffe:	3a01      	subs	r2, #1
 8026000:	2300      	movs	r3, #0
 8026002:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8026006:	f7ff fe51 	bl	8025cac <__multadd>
 802600a:	4607      	mov	r7, r0
 802600c:	10ad      	asrs	r5, r5, #2
 802600e:	d03d      	beq.n	802608c <__pow5mult+0xa0>
 8026010:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8026012:	b97c      	cbnz	r4, 8026034 <__pow5mult+0x48>
 8026014:	2010      	movs	r0, #16
 8026016:	f7fe f957 	bl	80242c8 <malloc>
 802601a:	4602      	mov	r2, r0
 802601c:	6270      	str	r0, [r6, #36]	; 0x24
 802601e:	b928      	cbnz	r0, 802602c <__pow5mult+0x40>
 8026020:	4b1d      	ldr	r3, [pc, #116]	; (8026098 <__pow5mult+0xac>)
 8026022:	481e      	ldr	r0, [pc, #120]	; (802609c <__pow5mult+0xb0>)
 8026024:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8026028:	f000 face 	bl	80265c8 <__assert_func>
 802602c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8026030:	6004      	str	r4, [r0, #0]
 8026032:	60c4      	str	r4, [r0, #12]
 8026034:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8026038:	f8d8 4008 	ldr.w	r4, [r8, #8]
 802603c:	b94c      	cbnz	r4, 8026052 <__pow5mult+0x66>
 802603e:	f240 2171 	movw	r1, #625	; 0x271
 8026042:	4630      	mov	r0, r6
 8026044:	f7ff ff16 	bl	8025e74 <__i2b>
 8026048:	2300      	movs	r3, #0
 802604a:	f8c8 0008 	str.w	r0, [r8, #8]
 802604e:	4604      	mov	r4, r0
 8026050:	6003      	str	r3, [r0, #0]
 8026052:	f04f 0900 	mov.w	r9, #0
 8026056:	07eb      	lsls	r3, r5, #31
 8026058:	d50a      	bpl.n	8026070 <__pow5mult+0x84>
 802605a:	4639      	mov	r1, r7
 802605c:	4622      	mov	r2, r4
 802605e:	4630      	mov	r0, r6
 8026060:	f7ff ff1e 	bl	8025ea0 <__multiply>
 8026064:	4639      	mov	r1, r7
 8026066:	4680      	mov	r8, r0
 8026068:	4630      	mov	r0, r6
 802606a:	f7ff fdfd 	bl	8025c68 <_Bfree>
 802606e:	4647      	mov	r7, r8
 8026070:	106d      	asrs	r5, r5, #1
 8026072:	d00b      	beq.n	802608c <__pow5mult+0xa0>
 8026074:	6820      	ldr	r0, [r4, #0]
 8026076:	b938      	cbnz	r0, 8026088 <__pow5mult+0x9c>
 8026078:	4622      	mov	r2, r4
 802607a:	4621      	mov	r1, r4
 802607c:	4630      	mov	r0, r6
 802607e:	f7ff ff0f 	bl	8025ea0 <__multiply>
 8026082:	6020      	str	r0, [r4, #0]
 8026084:	f8c0 9000 	str.w	r9, [r0]
 8026088:	4604      	mov	r4, r0
 802608a:	e7e4      	b.n	8026056 <__pow5mult+0x6a>
 802608c:	4638      	mov	r0, r7
 802608e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8026092:	bf00      	nop
 8026094:	08028348 	.word	0x08028348
 8026098:	080281dc 	.word	0x080281dc
 802609c:	080281f3 	.word	0x080281f3

080260a0 <__lshift>:
 80260a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80260a4:	460c      	mov	r4, r1
 80260a6:	6849      	ldr	r1, [r1, #4]
 80260a8:	6923      	ldr	r3, [r4, #16]
 80260aa:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80260ae:	68a3      	ldr	r3, [r4, #8]
 80260b0:	4607      	mov	r7, r0
 80260b2:	4691      	mov	r9, r2
 80260b4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80260b8:	f108 0601 	add.w	r6, r8, #1
 80260bc:	42b3      	cmp	r3, r6
 80260be:	db0b      	blt.n	80260d8 <__lshift+0x38>
 80260c0:	4638      	mov	r0, r7
 80260c2:	f7ff fd91 	bl	8025be8 <_Balloc>
 80260c6:	4605      	mov	r5, r0
 80260c8:	b948      	cbnz	r0, 80260de <__lshift+0x3e>
 80260ca:	4602      	mov	r2, r0
 80260cc:	4b28      	ldr	r3, [pc, #160]	; (8026170 <__lshift+0xd0>)
 80260ce:	4829      	ldr	r0, [pc, #164]	; (8026174 <__lshift+0xd4>)
 80260d0:	f240 11d9 	movw	r1, #473	; 0x1d9
 80260d4:	f000 fa78 	bl	80265c8 <__assert_func>
 80260d8:	3101      	adds	r1, #1
 80260da:	005b      	lsls	r3, r3, #1
 80260dc:	e7ee      	b.n	80260bc <__lshift+0x1c>
 80260de:	2300      	movs	r3, #0
 80260e0:	f100 0114 	add.w	r1, r0, #20
 80260e4:	f100 0210 	add.w	r2, r0, #16
 80260e8:	4618      	mov	r0, r3
 80260ea:	4553      	cmp	r3, sl
 80260ec:	db33      	blt.n	8026156 <__lshift+0xb6>
 80260ee:	6920      	ldr	r0, [r4, #16]
 80260f0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80260f4:	f104 0314 	add.w	r3, r4, #20
 80260f8:	f019 091f 	ands.w	r9, r9, #31
 80260fc:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8026100:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8026104:	d02b      	beq.n	802615e <__lshift+0xbe>
 8026106:	f1c9 0e20 	rsb	lr, r9, #32
 802610a:	468a      	mov	sl, r1
 802610c:	2200      	movs	r2, #0
 802610e:	6818      	ldr	r0, [r3, #0]
 8026110:	fa00 f009 	lsl.w	r0, r0, r9
 8026114:	4302      	orrs	r2, r0
 8026116:	f84a 2b04 	str.w	r2, [sl], #4
 802611a:	f853 2b04 	ldr.w	r2, [r3], #4
 802611e:	459c      	cmp	ip, r3
 8026120:	fa22 f20e 	lsr.w	r2, r2, lr
 8026124:	d8f3      	bhi.n	802610e <__lshift+0x6e>
 8026126:	ebac 0304 	sub.w	r3, ip, r4
 802612a:	3b15      	subs	r3, #21
 802612c:	f023 0303 	bic.w	r3, r3, #3
 8026130:	3304      	adds	r3, #4
 8026132:	f104 0015 	add.w	r0, r4, #21
 8026136:	4584      	cmp	ip, r0
 8026138:	bf38      	it	cc
 802613a:	2304      	movcc	r3, #4
 802613c:	50ca      	str	r2, [r1, r3]
 802613e:	b10a      	cbz	r2, 8026144 <__lshift+0xa4>
 8026140:	f108 0602 	add.w	r6, r8, #2
 8026144:	3e01      	subs	r6, #1
 8026146:	4638      	mov	r0, r7
 8026148:	612e      	str	r6, [r5, #16]
 802614a:	4621      	mov	r1, r4
 802614c:	f7ff fd8c 	bl	8025c68 <_Bfree>
 8026150:	4628      	mov	r0, r5
 8026152:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026156:	f842 0f04 	str.w	r0, [r2, #4]!
 802615a:	3301      	adds	r3, #1
 802615c:	e7c5      	b.n	80260ea <__lshift+0x4a>
 802615e:	3904      	subs	r1, #4
 8026160:	f853 2b04 	ldr.w	r2, [r3], #4
 8026164:	f841 2f04 	str.w	r2, [r1, #4]!
 8026168:	459c      	cmp	ip, r3
 802616a:	d8f9      	bhi.n	8026160 <__lshift+0xc0>
 802616c:	e7ea      	b.n	8026144 <__lshift+0xa4>
 802616e:	bf00      	nop
 8026170:	0802814e 	.word	0x0802814e
 8026174:	080281f3 	.word	0x080281f3

08026178 <__mcmp>:
 8026178:	b530      	push	{r4, r5, lr}
 802617a:	6902      	ldr	r2, [r0, #16]
 802617c:	690c      	ldr	r4, [r1, #16]
 802617e:	1b12      	subs	r2, r2, r4
 8026180:	d10e      	bne.n	80261a0 <__mcmp+0x28>
 8026182:	f100 0314 	add.w	r3, r0, #20
 8026186:	3114      	adds	r1, #20
 8026188:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 802618c:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8026190:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8026194:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8026198:	42a5      	cmp	r5, r4
 802619a:	d003      	beq.n	80261a4 <__mcmp+0x2c>
 802619c:	d305      	bcc.n	80261aa <__mcmp+0x32>
 802619e:	2201      	movs	r2, #1
 80261a0:	4610      	mov	r0, r2
 80261a2:	bd30      	pop	{r4, r5, pc}
 80261a4:	4283      	cmp	r3, r0
 80261a6:	d3f3      	bcc.n	8026190 <__mcmp+0x18>
 80261a8:	e7fa      	b.n	80261a0 <__mcmp+0x28>
 80261aa:	f04f 32ff 	mov.w	r2, #4294967295
 80261ae:	e7f7      	b.n	80261a0 <__mcmp+0x28>

080261b0 <__mdiff>:
 80261b0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80261b4:	460c      	mov	r4, r1
 80261b6:	4606      	mov	r6, r0
 80261b8:	4611      	mov	r1, r2
 80261ba:	4620      	mov	r0, r4
 80261bc:	4617      	mov	r7, r2
 80261be:	f7ff ffdb 	bl	8026178 <__mcmp>
 80261c2:	1e05      	subs	r5, r0, #0
 80261c4:	d110      	bne.n	80261e8 <__mdiff+0x38>
 80261c6:	4629      	mov	r1, r5
 80261c8:	4630      	mov	r0, r6
 80261ca:	f7ff fd0d 	bl	8025be8 <_Balloc>
 80261ce:	b930      	cbnz	r0, 80261de <__mdiff+0x2e>
 80261d0:	4b39      	ldr	r3, [pc, #228]	; (80262b8 <__mdiff+0x108>)
 80261d2:	4602      	mov	r2, r0
 80261d4:	f240 2132 	movw	r1, #562	; 0x232
 80261d8:	4838      	ldr	r0, [pc, #224]	; (80262bc <__mdiff+0x10c>)
 80261da:	f000 f9f5 	bl	80265c8 <__assert_func>
 80261de:	2301      	movs	r3, #1
 80261e0:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80261e4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80261e8:	bfa4      	itt	ge
 80261ea:	463b      	movge	r3, r7
 80261ec:	4627      	movge	r7, r4
 80261ee:	4630      	mov	r0, r6
 80261f0:	6879      	ldr	r1, [r7, #4]
 80261f2:	bfa6      	itte	ge
 80261f4:	461c      	movge	r4, r3
 80261f6:	2500      	movge	r5, #0
 80261f8:	2501      	movlt	r5, #1
 80261fa:	f7ff fcf5 	bl	8025be8 <_Balloc>
 80261fe:	b920      	cbnz	r0, 802620a <__mdiff+0x5a>
 8026200:	4b2d      	ldr	r3, [pc, #180]	; (80262b8 <__mdiff+0x108>)
 8026202:	4602      	mov	r2, r0
 8026204:	f44f 7110 	mov.w	r1, #576	; 0x240
 8026208:	e7e6      	b.n	80261d8 <__mdiff+0x28>
 802620a:	693e      	ldr	r6, [r7, #16]
 802620c:	60c5      	str	r5, [r0, #12]
 802620e:	6925      	ldr	r5, [r4, #16]
 8026210:	f107 0114 	add.w	r1, r7, #20
 8026214:	f104 0914 	add.w	r9, r4, #20
 8026218:	f100 0e14 	add.w	lr, r0, #20
 802621c:	f107 0210 	add.w	r2, r7, #16
 8026220:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 8026224:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 8026228:	46f2      	mov	sl, lr
 802622a:	2700      	movs	r7, #0
 802622c:	f859 3b04 	ldr.w	r3, [r9], #4
 8026230:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8026234:	fa1f f883 	uxth.w	r8, r3
 8026238:	fa17 f78b 	uxtah	r7, r7, fp
 802623c:	0c1b      	lsrs	r3, r3, #16
 802623e:	eba7 0808 	sub.w	r8, r7, r8
 8026242:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8026246:	eb03 4328 	add.w	r3, r3, r8, asr #16
 802624a:	fa1f f888 	uxth.w	r8, r8
 802624e:	141f      	asrs	r7, r3, #16
 8026250:	454d      	cmp	r5, r9
 8026252:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8026256:	f84a 3b04 	str.w	r3, [sl], #4
 802625a:	d8e7      	bhi.n	802622c <__mdiff+0x7c>
 802625c:	1b2b      	subs	r3, r5, r4
 802625e:	3b15      	subs	r3, #21
 8026260:	f023 0303 	bic.w	r3, r3, #3
 8026264:	3304      	adds	r3, #4
 8026266:	3415      	adds	r4, #21
 8026268:	42a5      	cmp	r5, r4
 802626a:	bf38      	it	cc
 802626c:	2304      	movcc	r3, #4
 802626e:	4419      	add	r1, r3
 8026270:	4473      	add	r3, lr
 8026272:	469e      	mov	lr, r3
 8026274:	460d      	mov	r5, r1
 8026276:	4565      	cmp	r5, ip
 8026278:	d30e      	bcc.n	8026298 <__mdiff+0xe8>
 802627a:	f10c 0203 	add.w	r2, ip, #3
 802627e:	1a52      	subs	r2, r2, r1
 8026280:	f022 0203 	bic.w	r2, r2, #3
 8026284:	3903      	subs	r1, #3
 8026286:	458c      	cmp	ip, r1
 8026288:	bf38      	it	cc
 802628a:	2200      	movcc	r2, #0
 802628c:	441a      	add	r2, r3
 802628e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8026292:	b17b      	cbz	r3, 80262b4 <__mdiff+0x104>
 8026294:	6106      	str	r6, [r0, #16]
 8026296:	e7a5      	b.n	80261e4 <__mdiff+0x34>
 8026298:	f855 8b04 	ldr.w	r8, [r5], #4
 802629c:	fa17 f488 	uxtah	r4, r7, r8
 80262a0:	1422      	asrs	r2, r4, #16
 80262a2:	eb02 4218 	add.w	r2, r2, r8, lsr #16
 80262a6:	b2a4      	uxth	r4, r4
 80262a8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80262ac:	f84e 4b04 	str.w	r4, [lr], #4
 80262b0:	1417      	asrs	r7, r2, #16
 80262b2:	e7e0      	b.n	8026276 <__mdiff+0xc6>
 80262b4:	3e01      	subs	r6, #1
 80262b6:	e7ea      	b.n	802628e <__mdiff+0xde>
 80262b8:	0802814e 	.word	0x0802814e
 80262bc:	080281f3 	.word	0x080281f3

080262c0 <__ulp>:
 80262c0:	b082      	sub	sp, #8
 80262c2:	ed8d 0b00 	vstr	d0, [sp]
 80262c6:	9b01      	ldr	r3, [sp, #4]
 80262c8:	4912      	ldr	r1, [pc, #72]	; (8026314 <__ulp+0x54>)
 80262ca:	4019      	ands	r1, r3
 80262cc:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 80262d0:	2900      	cmp	r1, #0
 80262d2:	dd05      	ble.n	80262e0 <__ulp+0x20>
 80262d4:	2200      	movs	r2, #0
 80262d6:	460b      	mov	r3, r1
 80262d8:	ec43 2b10 	vmov	d0, r2, r3
 80262dc:	b002      	add	sp, #8
 80262de:	4770      	bx	lr
 80262e0:	4249      	negs	r1, r1
 80262e2:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 80262e6:	ea4f 5021 	mov.w	r0, r1, asr #20
 80262ea:	f04f 0200 	mov.w	r2, #0
 80262ee:	f04f 0300 	mov.w	r3, #0
 80262f2:	da04      	bge.n	80262fe <__ulp+0x3e>
 80262f4:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 80262f8:	fa41 f300 	asr.w	r3, r1, r0
 80262fc:	e7ec      	b.n	80262d8 <__ulp+0x18>
 80262fe:	f1a0 0114 	sub.w	r1, r0, #20
 8026302:	291e      	cmp	r1, #30
 8026304:	bfda      	itte	le
 8026306:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 802630a:	fa20 f101 	lsrle.w	r1, r0, r1
 802630e:	2101      	movgt	r1, #1
 8026310:	460a      	mov	r2, r1
 8026312:	e7e1      	b.n	80262d8 <__ulp+0x18>
 8026314:	7ff00000 	.word	0x7ff00000

08026318 <__b2d>:
 8026318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802631a:	6905      	ldr	r5, [r0, #16]
 802631c:	f100 0714 	add.w	r7, r0, #20
 8026320:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8026324:	1f2e      	subs	r6, r5, #4
 8026326:	f855 4c04 	ldr.w	r4, [r5, #-4]
 802632a:	4620      	mov	r0, r4
 802632c:	f7ff fd52 	bl	8025dd4 <__hi0bits>
 8026330:	f1c0 0320 	rsb	r3, r0, #32
 8026334:	280a      	cmp	r0, #10
 8026336:	f8df c07c 	ldr.w	ip, [pc, #124]	; 80263b4 <__b2d+0x9c>
 802633a:	600b      	str	r3, [r1, #0]
 802633c:	dc14      	bgt.n	8026368 <__b2d+0x50>
 802633e:	f1c0 0e0b 	rsb	lr, r0, #11
 8026342:	fa24 f10e 	lsr.w	r1, r4, lr
 8026346:	42b7      	cmp	r7, r6
 8026348:	ea41 030c 	orr.w	r3, r1, ip
 802634c:	bf34      	ite	cc
 802634e:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8026352:	2100      	movcs	r1, #0
 8026354:	3015      	adds	r0, #21
 8026356:	fa04 f000 	lsl.w	r0, r4, r0
 802635a:	fa21 f10e 	lsr.w	r1, r1, lr
 802635e:	ea40 0201 	orr.w	r2, r0, r1
 8026362:	ec43 2b10 	vmov	d0, r2, r3
 8026366:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026368:	42b7      	cmp	r7, r6
 802636a:	bf3a      	itte	cc
 802636c:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8026370:	f1a5 0608 	subcc.w	r6, r5, #8
 8026374:	2100      	movcs	r1, #0
 8026376:	380b      	subs	r0, #11
 8026378:	d017      	beq.n	80263aa <__b2d+0x92>
 802637a:	f1c0 0c20 	rsb	ip, r0, #32
 802637e:	fa04 f500 	lsl.w	r5, r4, r0
 8026382:	42be      	cmp	r6, r7
 8026384:	fa21 f40c 	lsr.w	r4, r1, ip
 8026388:	ea45 0504 	orr.w	r5, r5, r4
 802638c:	bf8c      	ite	hi
 802638e:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8026392:	2400      	movls	r4, #0
 8026394:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8026398:	fa01 f000 	lsl.w	r0, r1, r0
 802639c:	fa24 f40c 	lsr.w	r4, r4, ip
 80263a0:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80263a4:	ea40 0204 	orr.w	r2, r0, r4
 80263a8:	e7db      	b.n	8026362 <__b2d+0x4a>
 80263aa:	ea44 030c 	orr.w	r3, r4, ip
 80263ae:	460a      	mov	r2, r1
 80263b0:	e7d7      	b.n	8026362 <__b2d+0x4a>
 80263b2:	bf00      	nop
 80263b4:	3ff00000 	.word	0x3ff00000

080263b8 <__d2b>:
 80263b8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80263bc:	4689      	mov	r9, r1
 80263be:	2101      	movs	r1, #1
 80263c0:	ec57 6b10 	vmov	r6, r7, d0
 80263c4:	4690      	mov	r8, r2
 80263c6:	f7ff fc0f 	bl	8025be8 <_Balloc>
 80263ca:	4604      	mov	r4, r0
 80263cc:	b930      	cbnz	r0, 80263dc <__d2b+0x24>
 80263ce:	4602      	mov	r2, r0
 80263d0:	4b25      	ldr	r3, [pc, #148]	; (8026468 <__d2b+0xb0>)
 80263d2:	4826      	ldr	r0, [pc, #152]	; (802646c <__d2b+0xb4>)
 80263d4:	f240 310a 	movw	r1, #778	; 0x30a
 80263d8:	f000 f8f6 	bl	80265c8 <__assert_func>
 80263dc:	f3c7 550a 	ubfx	r5, r7, #20, #11
 80263e0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80263e4:	bb35      	cbnz	r5, 8026434 <__d2b+0x7c>
 80263e6:	2e00      	cmp	r6, #0
 80263e8:	9301      	str	r3, [sp, #4]
 80263ea:	d028      	beq.n	802643e <__d2b+0x86>
 80263ec:	4668      	mov	r0, sp
 80263ee:	9600      	str	r6, [sp, #0]
 80263f0:	f7ff fd10 	bl	8025e14 <__lo0bits>
 80263f4:	9900      	ldr	r1, [sp, #0]
 80263f6:	b300      	cbz	r0, 802643a <__d2b+0x82>
 80263f8:	9a01      	ldr	r2, [sp, #4]
 80263fa:	f1c0 0320 	rsb	r3, r0, #32
 80263fe:	fa02 f303 	lsl.w	r3, r2, r3
 8026402:	430b      	orrs	r3, r1
 8026404:	40c2      	lsrs	r2, r0
 8026406:	6163      	str	r3, [r4, #20]
 8026408:	9201      	str	r2, [sp, #4]
 802640a:	9b01      	ldr	r3, [sp, #4]
 802640c:	61a3      	str	r3, [r4, #24]
 802640e:	2b00      	cmp	r3, #0
 8026410:	bf14      	ite	ne
 8026412:	2202      	movne	r2, #2
 8026414:	2201      	moveq	r2, #1
 8026416:	6122      	str	r2, [r4, #16]
 8026418:	b1d5      	cbz	r5, 8026450 <__d2b+0x98>
 802641a:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 802641e:	4405      	add	r5, r0
 8026420:	f8c9 5000 	str.w	r5, [r9]
 8026424:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8026428:	f8c8 0000 	str.w	r0, [r8]
 802642c:	4620      	mov	r0, r4
 802642e:	b003      	add	sp, #12
 8026430:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8026434:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8026438:	e7d5      	b.n	80263e6 <__d2b+0x2e>
 802643a:	6161      	str	r1, [r4, #20]
 802643c:	e7e5      	b.n	802640a <__d2b+0x52>
 802643e:	a801      	add	r0, sp, #4
 8026440:	f7ff fce8 	bl	8025e14 <__lo0bits>
 8026444:	9b01      	ldr	r3, [sp, #4]
 8026446:	6163      	str	r3, [r4, #20]
 8026448:	2201      	movs	r2, #1
 802644a:	6122      	str	r2, [r4, #16]
 802644c:	3020      	adds	r0, #32
 802644e:	e7e3      	b.n	8026418 <__d2b+0x60>
 8026450:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8026454:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8026458:	f8c9 0000 	str.w	r0, [r9]
 802645c:	6918      	ldr	r0, [r3, #16]
 802645e:	f7ff fcb9 	bl	8025dd4 <__hi0bits>
 8026462:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8026466:	e7df      	b.n	8026428 <__d2b+0x70>
 8026468:	0802814e 	.word	0x0802814e
 802646c:	080281f3 	.word	0x080281f3

08026470 <__ratio>:
 8026470:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026474:	4688      	mov	r8, r1
 8026476:	4669      	mov	r1, sp
 8026478:	4681      	mov	r9, r0
 802647a:	f7ff ff4d 	bl	8026318 <__b2d>
 802647e:	a901      	add	r1, sp, #4
 8026480:	4640      	mov	r0, r8
 8026482:	ec55 4b10 	vmov	r4, r5, d0
 8026486:	f7ff ff47 	bl	8026318 <__b2d>
 802648a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 802648e:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8026492:	eba3 0c02 	sub.w	ip, r3, r2
 8026496:	e9dd 3200 	ldrd	r3, r2, [sp]
 802649a:	1a9b      	subs	r3, r3, r2
 802649c:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 80264a0:	ec51 0b10 	vmov	r0, r1, d0
 80264a4:	2b00      	cmp	r3, #0
 80264a6:	bfd6      	itet	le
 80264a8:	460a      	movle	r2, r1
 80264aa:	462a      	movgt	r2, r5
 80264ac:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80264b0:	468b      	mov	fp, r1
 80264b2:	462f      	mov	r7, r5
 80264b4:	bfd4      	ite	le
 80264b6:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 80264ba:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 80264be:	4620      	mov	r0, r4
 80264c0:	ee10 2a10 	vmov	r2, s0
 80264c4:	465b      	mov	r3, fp
 80264c6:	4639      	mov	r1, r7
 80264c8:	f7da f9e0 	bl	800088c <__aeabi_ddiv>
 80264cc:	ec41 0b10 	vmov	d0, r0, r1
 80264d0:	b003      	add	sp, #12
 80264d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080264d6 <__copybits>:
 80264d6:	3901      	subs	r1, #1
 80264d8:	b570      	push	{r4, r5, r6, lr}
 80264da:	1149      	asrs	r1, r1, #5
 80264dc:	6914      	ldr	r4, [r2, #16]
 80264de:	3101      	adds	r1, #1
 80264e0:	f102 0314 	add.w	r3, r2, #20
 80264e4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80264e8:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80264ec:	1f05      	subs	r5, r0, #4
 80264ee:	42a3      	cmp	r3, r4
 80264f0:	d30c      	bcc.n	802650c <__copybits+0x36>
 80264f2:	1aa3      	subs	r3, r4, r2
 80264f4:	3b11      	subs	r3, #17
 80264f6:	f023 0303 	bic.w	r3, r3, #3
 80264fa:	3211      	adds	r2, #17
 80264fc:	42a2      	cmp	r2, r4
 80264fe:	bf88      	it	hi
 8026500:	2300      	movhi	r3, #0
 8026502:	4418      	add	r0, r3
 8026504:	2300      	movs	r3, #0
 8026506:	4288      	cmp	r0, r1
 8026508:	d305      	bcc.n	8026516 <__copybits+0x40>
 802650a:	bd70      	pop	{r4, r5, r6, pc}
 802650c:	f853 6b04 	ldr.w	r6, [r3], #4
 8026510:	f845 6f04 	str.w	r6, [r5, #4]!
 8026514:	e7eb      	b.n	80264ee <__copybits+0x18>
 8026516:	f840 3b04 	str.w	r3, [r0], #4
 802651a:	e7f4      	b.n	8026506 <__copybits+0x30>

0802651c <__any_on>:
 802651c:	f100 0214 	add.w	r2, r0, #20
 8026520:	6900      	ldr	r0, [r0, #16]
 8026522:	114b      	asrs	r3, r1, #5
 8026524:	4298      	cmp	r0, r3
 8026526:	b510      	push	{r4, lr}
 8026528:	db11      	blt.n	802654e <__any_on+0x32>
 802652a:	dd0a      	ble.n	8026542 <__any_on+0x26>
 802652c:	f011 011f 	ands.w	r1, r1, #31
 8026530:	d007      	beq.n	8026542 <__any_on+0x26>
 8026532:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8026536:	fa24 f001 	lsr.w	r0, r4, r1
 802653a:	fa00 f101 	lsl.w	r1, r0, r1
 802653e:	428c      	cmp	r4, r1
 8026540:	d10b      	bne.n	802655a <__any_on+0x3e>
 8026542:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8026546:	4293      	cmp	r3, r2
 8026548:	d803      	bhi.n	8026552 <__any_on+0x36>
 802654a:	2000      	movs	r0, #0
 802654c:	bd10      	pop	{r4, pc}
 802654e:	4603      	mov	r3, r0
 8026550:	e7f7      	b.n	8026542 <__any_on+0x26>
 8026552:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8026556:	2900      	cmp	r1, #0
 8026558:	d0f5      	beq.n	8026546 <__any_on+0x2a>
 802655a:	2001      	movs	r0, #1
 802655c:	e7f6      	b.n	802654c <__any_on+0x30>

0802655e <_calloc_r>:
 802655e:	b513      	push	{r0, r1, r4, lr}
 8026560:	434a      	muls	r2, r1
 8026562:	4611      	mov	r1, r2
 8026564:	9201      	str	r2, [sp, #4]
 8026566:	f7fd ff4d 	bl	8024404 <_malloc_r>
 802656a:	4604      	mov	r4, r0
 802656c:	b118      	cbz	r0, 8026576 <_calloc_r+0x18>
 802656e:	9a01      	ldr	r2, [sp, #4]
 8026570:	2100      	movs	r1, #0
 8026572:	f7fd feef 	bl	8024354 <memset>
 8026576:	4620      	mov	r0, r4
 8026578:	b002      	add	sp, #8
 802657a:	bd10      	pop	{r4, pc}

0802657c <nanf>:
 802657c:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8026584 <nanf+0x8>
 8026580:	4770      	bx	lr
 8026582:	bf00      	nop
 8026584:	7fc00000 	.word	0x7fc00000

08026588 <strncmp>:
 8026588:	b510      	push	{r4, lr}
 802658a:	b16a      	cbz	r2, 80265a8 <strncmp+0x20>
 802658c:	3901      	subs	r1, #1
 802658e:	1884      	adds	r4, r0, r2
 8026590:	f810 3b01 	ldrb.w	r3, [r0], #1
 8026594:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8026598:	4293      	cmp	r3, r2
 802659a:	d103      	bne.n	80265a4 <strncmp+0x1c>
 802659c:	42a0      	cmp	r0, r4
 802659e:	d001      	beq.n	80265a4 <strncmp+0x1c>
 80265a0:	2b00      	cmp	r3, #0
 80265a2:	d1f5      	bne.n	8026590 <strncmp+0x8>
 80265a4:	1a98      	subs	r0, r3, r2
 80265a6:	bd10      	pop	{r4, pc}
 80265a8:	4610      	mov	r0, r2
 80265aa:	e7fc      	b.n	80265a6 <strncmp+0x1e>

080265ac <__ascii_wctomb>:
 80265ac:	b149      	cbz	r1, 80265c2 <__ascii_wctomb+0x16>
 80265ae:	2aff      	cmp	r2, #255	; 0xff
 80265b0:	bf85      	ittet	hi
 80265b2:	238a      	movhi	r3, #138	; 0x8a
 80265b4:	6003      	strhi	r3, [r0, #0]
 80265b6:	700a      	strbls	r2, [r1, #0]
 80265b8:	f04f 30ff 	movhi.w	r0, #4294967295
 80265bc:	bf98      	it	ls
 80265be:	2001      	movls	r0, #1
 80265c0:	4770      	bx	lr
 80265c2:	4608      	mov	r0, r1
 80265c4:	4770      	bx	lr
	...

080265c8 <__assert_func>:
 80265c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80265ca:	4614      	mov	r4, r2
 80265cc:	461a      	mov	r2, r3
 80265ce:	4b09      	ldr	r3, [pc, #36]	; (80265f4 <__assert_func+0x2c>)
 80265d0:	681b      	ldr	r3, [r3, #0]
 80265d2:	4605      	mov	r5, r0
 80265d4:	68d8      	ldr	r0, [r3, #12]
 80265d6:	b14c      	cbz	r4, 80265ec <__assert_func+0x24>
 80265d8:	4b07      	ldr	r3, [pc, #28]	; (80265f8 <__assert_func+0x30>)
 80265da:	9100      	str	r1, [sp, #0]
 80265dc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80265e0:	4906      	ldr	r1, [pc, #24]	; (80265fc <__assert_func+0x34>)
 80265e2:	462b      	mov	r3, r5
 80265e4:	f000 f80e 	bl	8026604 <fiprintf>
 80265e8:	f7fd fe04 	bl	80241f4 <abort>
 80265ec:	4b04      	ldr	r3, [pc, #16]	; (8026600 <__assert_func+0x38>)
 80265ee:	461c      	mov	r4, r3
 80265f0:	e7f3      	b.n	80265da <__assert_func+0x12>
 80265f2:	bf00      	nop
 80265f4:	20000010 	.word	0x20000010
 80265f8:	08028354 	.word	0x08028354
 80265fc:	08028361 	.word	0x08028361
 8026600:	0802838f 	.word	0x0802838f

08026604 <fiprintf>:
 8026604:	b40e      	push	{r1, r2, r3}
 8026606:	b503      	push	{r0, r1, lr}
 8026608:	4601      	mov	r1, r0
 802660a:	ab03      	add	r3, sp, #12
 802660c:	4805      	ldr	r0, [pc, #20]	; (8026624 <fiprintf+0x20>)
 802660e:	f853 2b04 	ldr.w	r2, [r3], #4
 8026612:	6800      	ldr	r0, [r0, #0]
 8026614:	9301      	str	r3, [sp, #4]
 8026616:	f000 f831 	bl	802667c <_vfiprintf_r>
 802661a:	b002      	add	sp, #8
 802661c:	f85d eb04 	ldr.w	lr, [sp], #4
 8026620:	b003      	add	sp, #12
 8026622:	4770      	bx	lr
 8026624:	20000010 	.word	0x20000010

08026628 <__sfputc_r>:
 8026628:	6893      	ldr	r3, [r2, #8]
 802662a:	3b01      	subs	r3, #1
 802662c:	2b00      	cmp	r3, #0
 802662e:	b410      	push	{r4}
 8026630:	6093      	str	r3, [r2, #8]
 8026632:	da08      	bge.n	8026646 <__sfputc_r+0x1e>
 8026634:	6994      	ldr	r4, [r2, #24]
 8026636:	42a3      	cmp	r3, r4
 8026638:	db01      	blt.n	802663e <__sfputc_r+0x16>
 802663a:	290a      	cmp	r1, #10
 802663c:	d103      	bne.n	8026646 <__sfputc_r+0x1e>
 802663e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026642:	f000 badf 	b.w	8026c04 <__swbuf_r>
 8026646:	6813      	ldr	r3, [r2, #0]
 8026648:	1c58      	adds	r0, r3, #1
 802664a:	6010      	str	r0, [r2, #0]
 802664c:	7019      	strb	r1, [r3, #0]
 802664e:	4608      	mov	r0, r1
 8026650:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026654:	4770      	bx	lr

08026656 <__sfputs_r>:
 8026656:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026658:	4606      	mov	r6, r0
 802665a:	460f      	mov	r7, r1
 802665c:	4614      	mov	r4, r2
 802665e:	18d5      	adds	r5, r2, r3
 8026660:	42ac      	cmp	r4, r5
 8026662:	d101      	bne.n	8026668 <__sfputs_r+0x12>
 8026664:	2000      	movs	r0, #0
 8026666:	e007      	b.n	8026678 <__sfputs_r+0x22>
 8026668:	f814 1b01 	ldrb.w	r1, [r4], #1
 802666c:	463a      	mov	r2, r7
 802666e:	4630      	mov	r0, r6
 8026670:	f7ff ffda 	bl	8026628 <__sfputc_r>
 8026674:	1c43      	adds	r3, r0, #1
 8026676:	d1f3      	bne.n	8026660 <__sfputs_r+0xa>
 8026678:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802667c <_vfiprintf_r>:
 802667c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026680:	460d      	mov	r5, r1
 8026682:	b09d      	sub	sp, #116	; 0x74
 8026684:	4614      	mov	r4, r2
 8026686:	4698      	mov	r8, r3
 8026688:	4606      	mov	r6, r0
 802668a:	b118      	cbz	r0, 8026694 <_vfiprintf_r+0x18>
 802668c:	6983      	ldr	r3, [r0, #24]
 802668e:	b90b      	cbnz	r3, 8026694 <_vfiprintf_r+0x18>
 8026690:	f000 fc92 	bl	8026fb8 <__sinit>
 8026694:	4b89      	ldr	r3, [pc, #548]	; (80268bc <_vfiprintf_r+0x240>)
 8026696:	429d      	cmp	r5, r3
 8026698:	d11b      	bne.n	80266d2 <_vfiprintf_r+0x56>
 802669a:	6875      	ldr	r5, [r6, #4]
 802669c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802669e:	07d9      	lsls	r1, r3, #31
 80266a0:	d405      	bmi.n	80266ae <_vfiprintf_r+0x32>
 80266a2:	89ab      	ldrh	r3, [r5, #12]
 80266a4:	059a      	lsls	r2, r3, #22
 80266a6:	d402      	bmi.n	80266ae <_vfiprintf_r+0x32>
 80266a8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80266aa:	f7ff fa7c 	bl	8025ba6 <__retarget_lock_acquire_recursive>
 80266ae:	89ab      	ldrh	r3, [r5, #12]
 80266b0:	071b      	lsls	r3, r3, #28
 80266b2:	d501      	bpl.n	80266b8 <_vfiprintf_r+0x3c>
 80266b4:	692b      	ldr	r3, [r5, #16]
 80266b6:	b9eb      	cbnz	r3, 80266f4 <_vfiprintf_r+0x78>
 80266b8:	4629      	mov	r1, r5
 80266ba:	4630      	mov	r0, r6
 80266bc:	f000 faf4 	bl	8026ca8 <__swsetup_r>
 80266c0:	b1c0      	cbz	r0, 80266f4 <_vfiprintf_r+0x78>
 80266c2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80266c4:	07dc      	lsls	r4, r3, #31
 80266c6:	d50e      	bpl.n	80266e6 <_vfiprintf_r+0x6a>
 80266c8:	f04f 30ff 	mov.w	r0, #4294967295
 80266cc:	b01d      	add	sp, #116	; 0x74
 80266ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80266d2:	4b7b      	ldr	r3, [pc, #492]	; (80268c0 <_vfiprintf_r+0x244>)
 80266d4:	429d      	cmp	r5, r3
 80266d6:	d101      	bne.n	80266dc <_vfiprintf_r+0x60>
 80266d8:	68b5      	ldr	r5, [r6, #8]
 80266da:	e7df      	b.n	802669c <_vfiprintf_r+0x20>
 80266dc:	4b79      	ldr	r3, [pc, #484]	; (80268c4 <_vfiprintf_r+0x248>)
 80266de:	429d      	cmp	r5, r3
 80266e0:	bf08      	it	eq
 80266e2:	68f5      	ldreq	r5, [r6, #12]
 80266e4:	e7da      	b.n	802669c <_vfiprintf_r+0x20>
 80266e6:	89ab      	ldrh	r3, [r5, #12]
 80266e8:	0598      	lsls	r0, r3, #22
 80266ea:	d4ed      	bmi.n	80266c8 <_vfiprintf_r+0x4c>
 80266ec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80266ee:	f7ff fa5c 	bl	8025baa <__retarget_lock_release_recursive>
 80266f2:	e7e9      	b.n	80266c8 <_vfiprintf_r+0x4c>
 80266f4:	2300      	movs	r3, #0
 80266f6:	9309      	str	r3, [sp, #36]	; 0x24
 80266f8:	2320      	movs	r3, #32
 80266fa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80266fe:	f8cd 800c 	str.w	r8, [sp, #12]
 8026702:	2330      	movs	r3, #48	; 0x30
 8026704:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80268c8 <_vfiprintf_r+0x24c>
 8026708:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802670c:	f04f 0901 	mov.w	r9, #1
 8026710:	4623      	mov	r3, r4
 8026712:	469a      	mov	sl, r3
 8026714:	f813 2b01 	ldrb.w	r2, [r3], #1
 8026718:	b10a      	cbz	r2, 802671e <_vfiprintf_r+0xa2>
 802671a:	2a25      	cmp	r2, #37	; 0x25
 802671c:	d1f9      	bne.n	8026712 <_vfiprintf_r+0x96>
 802671e:	ebba 0b04 	subs.w	fp, sl, r4
 8026722:	d00b      	beq.n	802673c <_vfiprintf_r+0xc0>
 8026724:	465b      	mov	r3, fp
 8026726:	4622      	mov	r2, r4
 8026728:	4629      	mov	r1, r5
 802672a:	4630      	mov	r0, r6
 802672c:	f7ff ff93 	bl	8026656 <__sfputs_r>
 8026730:	3001      	adds	r0, #1
 8026732:	f000 80aa 	beq.w	802688a <_vfiprintf_r+0x20e>
 8026736:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026738:	445a      	add	r2, fp
 802673a:	9209      	str	r2, [sp, #36]	; 0x24
 802673c:	f89a 3000 	ldrb.w	r3, [sl]
 8026740:	2b00      	cmp	r3, #0
 8026742:	f000 80a2 	beq.w	802688a <_vfiprintf_r+0x20e>
 8026746:	2300      	movs	r3, #0
 8026748:	f04f 32ff 	mov.w	r2, #4294967295
 802674c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8026750:	f10a 0a01 	add.w	sl, sl, #1
 8026754:	9304      	str	r3, [sp, #16]
 8026756:	9307      	str	r3, [sp, #28]
 8026758:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802675c:	931a      	str	r3, [sp, #104]	; 0x68
 802675e:	4654      	mov	r4, sl
 8026760:	2205      	movs	r2, #5
 8026762:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026766:	4858      	ldr	r0, [pc, #352]	; (80268c8 <_vfiprintf_r+0x24c>)
 8026768:	f7d9 fd52 	bl	8000210 <memchr>
 802676c:	9a04      	ldr	r2, [sp, #16]
 802676e:	b9d8      	cbnz	r0, 80267a8 <_vfiprintf_r+0x12c>
 8026770:	06d1      	lsls	r1, r2, #27
 8026772:	bf44      	itt	mi
 8026774:	2320      	movmi	r3, #32
 8026776:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802677a:	0713      	lsls	r3, r2, #28
 802677c:	bf44      	itt	mi
 802677e:	232b      	movmi	r3, #43	; 0x2b
 8026780:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8026784:	f89a 3000 	ldrb.w	r3, [sl]
 8026788:	2b2a      	cmp	r3, #42	; 0x2a
 802678a:	d015      	beq.n	80267b8 <_vfiprintf_r+0x13c>
 802678c:	9a07      	ldr	r2, [sp, #28]
 802678e:	4654      	mov	r4, sl
 8026790:	2000      	movs	r0, #0
 8026792:	f04f 0c0a 	mov.w	ip, #10
 8026796:	4621      	mov	r1, r4
 8026798:	f811 3b01 	ldrb.w	r3, [r1], #1
 802679c:	3b30      	subs	r3, #48	; 0x30
 802679e:	2b09      	cmp	r3, #9
 80267a0:	d94e      	bls.n	8026840 <_vfiprintf_r+0x1c4>
 80267a2:	b1b0      	cbz	r0, 80267d2 <_vfiprintf_r+0x156>
 80267a4:	9207      	str	r2, [sp, #28]
 80267a6:	e014      	b.n	80267d2 <_vfiprintf_r+0x156>
 80267a8:	eba0 0308 	sub.w	r3, r0, r8
 80267ac:	fa09 f303 	lsl.w	r3, r9, r3
 80267b0:	4313      	orrs	r3, r2
 80267b2:	9304      	str	r3, [sp, #16]
 80267b4:	46a2      	mov	sl, r4
 80267b6:	e7d2      	b.n	802675e <_vfiprintf_r+0xe2>
 80267b8:	9b03      	ldr	r3, [sp, #12]
 80267ba:	1d19      	adds	r1, r3, #4
 80267bc:	681b      	ldr	r3, [r3, #0]
 80267be:	9103      	str	r1, [sp, #12]
 80267c0:	2b00      	cmp	r3, #0
 80267c2:	bfbb      	ittet	lt
 80267c4:	425b      	neglt	r3, r3
 80267c6:	f042 0202 	orrlt.w	r2, r2, #2
 80267ca:	9307      	strge	r3, [sp, #28]
 80267cc:	9307      	strlt	r3, [sp, #28]
 80267ce:	bfb8      	it	lt
 80267d0:	9204      	strlt	r2, [sp, #16]
 80267d2:	7823      	ldrb	r3, [r4, #0]
 80267d4:	2b2e      	cmp	r3, #46	; 0x2e
 80267d6:	d10c      	bne.n	80267f2 <_vfiprintf_r+0x176>
 80267d8:	7863      	ldrb	r3, [r4, #1]
 80267da:	2b2a      	cmp	r3, #42	; 0x2a
 80267dc:	d135      	bne.n	802684a <_vfiprintf_r+0x1ce>
 80267de:	9b03      	ldr	r3, [sp, #12]
 80267e0:	1d1a      	adds	r2, r3, #4
 80267e2:	681b      	ldr	r3, [r3, #0]
 80267e4:	9203      	str	r2, [sp, #12]
 80267e6:	2b00      	cmp	r3, #0
 80267e8:	bfb8      	it	lt
 80267ea:	f04f 33ff 	movlt.w	r3, #4294967295
 80267ee:	3402      	adds	r4, #2
 80267f0:	9305      	str	r3, [sp, #20]
 80267f2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80268d8 <_vfiprintf_r+0x25c>
 80267f6:	7821      	ldrb	r1, [r4, #0]
 80267f8:	2203      	movs	r2, #3
 80267fa:	4650      	mov	r0, sl
 80267fc:	f7d9 fd08 	bl	8000210 <memchr>
 8026800:	b140      	cbz	r0, 8026814 <_vfiprintf_r+0x198>
 8026802:	2340      	movs	r3, #64	; 0x40
 8026804:	eba0 000a 	sub.w	r0, r0, sl
 8026808:	fa03 f000 	lsl.w	r0, r3, r0
 802680c:	9b04      	ldr	r3, [sp, #16]
 802680e:	4303      	orrs	r3, r0
 8026810:	3401      	adds	r4, #1
 8026812:	9304      	str	r3, [sp, #16]
 8026814:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026818:	482c      	ldr	r0, [pc, #176]	; (80268cc <_vfiprintf_r+0x250>)
 802681a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802681e:	2206      	movs	r2, #6
 8026820:	f7d9 fcf6 	bl	8000210 <memchr>
 8026824:	2800      	cmp	r0, #0
 8026826:	d03f      	beq.n	80268a8 <_vfiprintf_r+0x22c>
 8026828:	4b29      	ldr	r3, [pc, #164]	; (80268d0 <_vfiprintf_r+0x254>)
 802682a:	bb1b      	cbnz	r3, 8026874 <_vfiprintf_r+0x1f8>
 802682c:	9b03      	ldr	r3, [sp, #12]
 802682e:	3307      	adds	r3, #7
 8026830:	f023 0307 	bic.w	r3, r3, #7
 8026834:	3308      	adds	r3, #8
 8026836:	9303      	str	r3, [sp, #12]
 8026838:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802683a:	443b      	add	r3, r7
 802683c:	9309      	str	r3, [sp, #36]	; 0x24
 802683e:	e767      	b.n	8026710 <_vfiprintf_r+0x94>
 8026840:	fb0c 3202 	mla	r2, ip, r2, r3
 8026844:	460c      	mov	r4, r1
 8026846:	2001      	movs	r0, #1
 8026848:	e7a5      	b.n	8026796 <_vfiprintf_r+0x11a>
 802684a:	2300      	movs	r3, #0
 802684c:	3401      	adds	r4, #1
 802684e:	9305      	str	r3, [sp, #20]
 8026850:	4619      	mov	r1, r3
 8026852:	f04f 0c0a 	mov.w	ip, #10
 8026856:	4620      	mov	r0, r4
 8026858:	f810 2b01 	ldrb.w	r2, [r0], #1
 802685c:	3a30      	subs	r2, #48	; 0x30
 802685e:	2a09      	cmp	r2, #9
 8026860:	d903      	bls.n	802686a <_vfiprintf_r+0x1ee>
 8026862:	2b00      	cmp	r3, #0
 8026864:	d0c5      	beq.n	80267f2 <_vfiprintf_r+0x176>
 8026866:	9105      	str	r1, [sp, #20]
 8026868:	e7c3      	b.n	80267f2 <_vfiprintf_r+0x176>
 802686a:	fb0c 2101 	mla	r1, ip, r1, r2
 802686e:	4604      	mov	r4, r0
 8026870:	2301      	movs	r3, #1
 8026872:	e7f0      	b.n	8026856 <_vfiprintf_r+0x1da>
 8026874:	ab03      	add	r3, sp, #12
 8026876:	9300      	str	r3, [sp, #0]
 8026878:	462a      	mov	r2, r5
 802687a:	4b16      	ldr	r3, [pc, #88]	; (80268d4 <_vfiprintf_r+0x258>)
 802687c:	a904      	add	r1, sp, #16
 802687e:	4630      	mov	r0, r6
 8026880:	f3af 8000 	nop.w
 8026884:	4607      	mov	r7, r0
 8026886:	1c78      	adds	r0, r7, #1
 8026888:	d1d6      	bne.n	8026838 <_vfiprintf_r+0x1bc>
 802688a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802688c:	07d9      	lsls	r1, r3, #31
 802688e:	d405      	bmi.n	802689c <_vfiprintf_r+0x220>
 8026890:	89ab      	ldrh	r3, [r5, #12]
 8026892:	059a      	lsls	r2, r3, #22
 8026894:	d402      	bmi.n	802689c <_vfiprintf_r+0x220>
 8026896:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8026898:	f7ff f987 	bl	8025baa <__retarget_lock_release_recursive>
 802689c:	89ab      	ldrh	r3, [r5, #12]
 802689e:	065b      	lsls	r3, r3, #25
 80268a0:	f53f af12 	bmi.w	80266c8 <_vfiprintf_r+0x4c>
 80268a4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80268a6:	e711      	b.n	80266cc <_vfiprintf_r+0x50>
 80268a8:	ab03      	add	r3, sp, #12
 80268aa:	9300      	str	r3, [sp, #0]
 80268ac:	462a      	mov	r2, r5
 80268ae:	4b09      	ldr	r3, [pc, #36]	; (80268d4 <_vfiprintf_r+0x258>)
 80268b0:	a904      	add	r1, sp, #16
 80268b2:	4630      	mov	r0, r6
 80268b4:	f000 f880 	bl	80269b8 <_printf_i>
 80268b8:	e7e4      	b.n	8026884 <_vfiprintf_r+0x208>
 80268ba:	bf00      	nop
 80268bc:	080283e4 	.word	0x080283e4
 80268c0:	08028404 	.word	0x08028404
 80268c4:	080283c4 	.word	0x080283c4
 80268c8:	08028390 	.word	0x08028390
 80268cc:	0802839a 	.word	0x0802839a
 80268d0:	00000000 	.word	0x00000000
 80268d4:	08026657 	.word	0x08026657
 80268d8:	08028396 	.word	0x08028396

080268dc <_printf_common>:
 80268dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80268e0:	4616      	mov	r6, r2
 80268e2:	4699      	mov	r9, r3
 80268e4:	688a      	ldr	r2, [r1, #8]
 80268e6:	690b      	ldr	r3, [r1, #16]
 80268e8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80268ec:	4293      	cmp	r3, r2
 80268ee:	bfb8      	it	lt
 80268f0:	4613      	movlt	r3, r2
 80268f2:	6033      	str	r3, [r6, #0]
 80268f4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80268f8:	4607      	mov	r7, r0
 80268fa:	460c      	mov	r4, r1
 80268fc:	b10a      	cbz	r2, 8026902 <_printf_common+0x26>
 80268fe:	3301      	adds	r3, #1
 8026900:	6033      	str	r3, [r6, #0]
 8026902:	6823      	ldr	r3, [r4, #0]
 8026904:	0699      	lsls	r1, r3, #26
 8026906:	bf42      	ittt	mi
 8026908:	6833      	ldrmi	r3, [r6, #0]
 802690a:	3302      	addmi	r3, #2
 802690c:	6033      	strmi	r3, [r6, #0]
 802690e:	6825      	ldr	r5, [r4, #0]
 8026910:	f015 0506 	ands.w	r5, r5, #6
 8026914:	d106      	bne.n	8026924 <_printf_common+0x48>
 8026916:	f104 0a19 	add.w	sl, r4, #25
 802691a:	68e3      	ldr	r3, [r4, #12]
 802691c:	6832      	ldr	r2, [r6, #0]
 802691e:	1a9b      	subs	r3, r3, r2
 8026920:	42ab      	cmp	r3, r5
 8026922:	dc26      	bgt.n	8026972 <_printf_common+0x96>
 8026924:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8026928:	1e13      	subs	r3, r2, #0
 802692a:	6822      	ldr	r2, [r4, #0]
 802692c:	bf18      	it	ne
 802692e:	2301      	movne	r3, #1
 8026930:	0692      	lsls	r2, r2, #26
 8026932:	d42b      	bmi.n	802698c <_printf_common+0xb0>
 8026934:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8026938:	4649      	mov	r1, r9
 802693a:	4638      	mov	r0, r7
 802693c:	47c0      	blx	r8
 802693e:	3001      	adds	r0, #1
 8026940:	d01e      	beq.n	8026980 <_printf_common+0xa4>
 8026942:	6823      	ldr	r3, [r4, #0]
 8026944:	68e5      	ldr	r5, [r4, #12]
 8026946:	6832      	ldr	r2, [r6, #0]
 8026948:	f003 0306 	and.w	r3, r3, #6
 802694c:	2b04      	cmp	r3, #4
 802694e:	bf08      	it	eq
 8026950:	1aad      	subeq	r5, r5, r2
 8026952:	68a3      	ldr	r3, [r4, #8]
 8026954:	6922      	ldr	r2, [r4, #16]
 8026956:	bf0c      	ite	eq
 8026958:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802695c:	2500      	movne	r5, #0
 802695e:	4293      	cmp	r3, r2
 8026960:	bfc4      	itt	gt
 8026962:	1a9b      	subgt	r3, r3, r2
 8026964:	18ed      	addgt	r5, r5, r3
 8026966:	2600      	movs	r6, #0
 8026968:	341a      	adds	r4, #26
 802696a:	42b5      	cmp	r5, r6
 802696c:	d11a      	bne.n	80269a4 <_printf_common+0xc8>
 802696e:	2000      	movs	r0, #0
 8026970:	e008      	b.n	8026984 <_printf_common+0xa8>
 8026972:	2301      	movs	r3, #1
 8026974:	4652      	mov	r2, sl
 8026976:	4649      	mov	r1, r9
 8026978:	4638      	mov	r0, r7
 802697a:	47c0      	blx	r8
 802697c:	3001      	adds	r0, #1
 802697e:	d103      	bne.n	8026988 <_printf_common+0xac>
 8026980:	f04f 30ff 	mov.w	r0, #4294967295
 8026984:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026988:	3501      	adds	r5, #1
 802698a:	e7c6      	b.n	802691a <_printf_common+0x3e>
 802698c:	18e1      	adds	r1, r4, r3
 802698e:	1c5a      	adds	r2, r3, #1
 8026990:	2030      	movs	r0, #48	; 0x30
 8026992:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8026996:	4422      	add	r2, r4
 8026998:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802699c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80269a0:	3302      	adds	r3, #2
 80269a2:	e7c7      	b.n	8026934 <_printf_common+0x58>
 80269a4:	2301      	movs	r3, #1
 80269a6:	4622      	mov	r2, r4
 80269a8:	4649      	mov	r1, r9
 80269aa:	4638      	mov	r0, r7
 80269ac:	47c0      	blx	r8
 80269ae:	3001      	adds	r0, #1
 80269b0:	d0e6      	beq.n	8026980 <_printf_common+0xa4>
 80269b2:	3601      	adds	r6, #1
 80269b4:	e7d9      	b.n	802696a <_printf_common+0x8e>
	...

080269b8 <_printf_i>:
 80269b8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80269bc:	460c      	mov	r4, r1
 80269be:	4691      	mov	r9, r2
 80269c0:	7e27      	ldrb	r7, [r4, #24]
 80269c2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80269c4:	2f78      	cmp	r7, #120	; 0x78
 80269c6:	4680      	mov	r8, r0
 80269c8:	469a      	mov	sl, r3
 80269ca:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80269ce:	d807      	bhi.n	80269e0 <_printf_i+0x28>
 80269d0:	2f62      	cmp	r7, #98	; 0x62
 80269d2:	d80a      	bhi.n	80269ea <_printf_i+0x32>
 80269d4:	2f00      	cmp	r7, #0
 80269d6:	f000 80d8 	beq.w	8026b8a <_printf_i+0x1d2>
 80269da:	2f58      	cmp	r7, #88	; 0x58
 80269dc:	f000 80a3 	beq.w	8026b26 <_printf_i+0x16e>
 80269e0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80269e4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80269e8:	e03a      	b.n	8026a60 <_printf_i+0xa8>
 80269ea:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80269ee:	2b15      	cmp	r3, #21
 80269f0:	d8f6      	bhi.n	80269e0 <_printf_i+0x28>
 80269f2:	a001      	add	r0, pc, #4	; (adr r0, 80269f8 <_printf_i+0x40>)
 80269f4:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80269f8:	08026a51 	.word	0x08026a51
 80269fc:	08026a65 	.word	0x08026a65
 8026a00:	080269e1 	.word	0x080269e1
 8026a04:	080269e1 	.word	0x080269e1
 8026a08:	080269e1 	.word	0x080269e1
 8026a0c:	080269e1 	.word	0x080269e1
 8026a10:	08026a65 	.word	0x08026a65
 8026a14:	080269e1 	.word	0x080269e1
 8026a18:	080269e1 	.word	0x080269e1
 8026a1c:	080269e1 	.word	0x080269e1
 8026a20:	080269e1 	.word	0x080269e1
 8026a24:	08026b71 	.word	0x08026b71
 8026a28:	08026a95 	.word	0x08026a95
 8026a2c:	08026b53 	.word	0x08026b53
 8026a30:	080269e1 	.word	0x080269e1
 8026a34:	080269e1 	.word	0x080269e1
 8026a38:	08026b93 	.word	0x08026b93
 8026a3c:	080269e1 	.word	0x080269e1
 8026a40:	08026a95 	.word	0x08026a95
 8026a44:	080269e1 	.word	0x080269e1
 8026a48:	080269e1 	.word	0x080269e1
 8026a4c:	08026b5b 	.word	0x08026b5b
 8026a50:	680b      	ldr	r3, [r1, #0]
 8026a52:	1d1a      	adds	r2, r3, #4
 8026a54:	681b      	ldr	r3, [r3, #0]
 8026a56:	600a      	str	r2, [r1, #0]
 8026a58:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8026a5c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8026a60:	2301      	movs	r3, #1
 8026a62:	e0a3      	b.n	8026bac <_printf_i+0x1f4>
 8026a64:	6825      	ldr	r5, [r4, #0]
 8026a66:	6808      	ldr	r0, [r1, #0]
 8026a68:	062e      	lsls	r6, r5, #24
 8026a6a:	f100 0304 	add.w	r3, r0, #4
 8026a6e:	d50a      	bpl.n	8026a86 <_printf_i+0xce>
 8026a70:	6805      	ldr	r5, [r0, #0]
 8026a72:	600b      	str	r3, [r1, #0]
 8026a74:	2d00      	cmp	r5, #0
 8026a76:	da03      	bge.n	8026a80 <_printf_i+0xc8>
 8026a78:	232d      	movs	r3, #45	; 0x2d
 8026a7a:	426d      	negs	r5, r5
 8026a7c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026a80:	485e      	ldr	r0, [pc, #376]	; (8026bfc <_printf_i+0x244>)
 8026a82:	230a      	movs	r3, #10
 8026a84:	e019      	b.n	8026aba <_printf_i+0x102>
 8026a86:	f015 0f40 	tst.w	r5, #64	; 0x40
 8026a8a:	6805      	ldr	r5, [r0, #0]
 8026a8c:	600b      	str	r3, [r1, #0]
 8026a8e:	bf18      	it	ne
 8026a90:	b22d      	sxthne	r5, r5
 8026a92:	e7ef      	b.n	8026a74 <_printf_i+0xbc>
 8026a94:	680b      	ldr	r3, [r1, #0]
 8026a96:	6825      	ldr	r5, [r4, #0]
 8026a98:	1d18      	adds	r0, r3, #4
 8026a9a:	6008      	str	r0, [r1, #0]
 8026a9c:	0628      	lsls	r0, r5, #24
 8026a9e:	d501      	bpl.n	8026aa4 <_printf_i+0xec>
 8026aa0:	681d      	ldr	r5, [r3, #0]
 8026aa2:	e002      	b.n	8026aaa <_printf_i+0xf2>
 8026aa4:	0669      	lsls	r1, r5, #25
 8026aa6:	d5fb      	bpl.n	8026aa0 <_printf_i+0xe8>
 8026aa8:	881d      	ldrh	r5, [r3, #0]
 8026aaa:	4854      	ldr	r0, [pc, #336]	; (8026bfc <_printf_i+0x244>)
 8026aac:	2f6f      	cmp	r7, #111	; 0x6f
 8026aae:	bf0c      	ite	eq
 8026ab0:	2308      	moveq	r3, #8
 8026ab2:	230a      	movne	r3, #10
 8026ab4:	2100      	movs	r1, #0
 8026ab6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8026aba:	6866      	ldr	r6, [r4, #4]
 8026abc:	60a6      	str	r6, [r4, #8]
 8026abe:	2e00      	cmp	r6, #0
 8026ac0:	bfa2      	ittt	ge
 8026ac2:	6821      	ldrge	r1, [r4, #0]
 8026ac4:	f021 0104 	bicge.w	r1, r1, #4
 8026ac8:	6021      	strge	r1, [r4, #0]
 8026aca:	b90d      	cbnz	r5, 8026ad0 <_printf_i+0x118>
 8026acc:	2e00      	cmp	r6, #0
 8026ace:	d04d      	beq.n	8026b6c <_printf_i+0x1b4>
 8026ad0:	4616      	mov	r6, r2
 8026ad2:	fbb5 f1f3 	udiv	r1, r5, r3
 8026ad6:	fb03 5711 	mls	r7, r3, r1, r5
 8026ada:	5dc7      	ldrb	r7, [r0, r7]
 8026adc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8026ae0:	462f      	mov	r7, r5
 8026ae2:	42bb      	cmp	r3, r7
 8026ae4:	460d      	mov	r5, r1
 8026ae6:	d9f4      	bls.n	8026ad2 <_printf_i+0x11a>
 8026ae8:	2b08      	cmp	r3, #8
 8026aea:	d10b      	bne.n	8026b04 <_printf_i+0x14c>
 8026aec:	6823      	ldr	r3, [r4, #0]
 8026aee:	07df      	lsls	r7, r3, #31
 8026af0:	d508      	bpl.n	8026b04 <_printf_i+0x14c>
 8026af2:	6923      	ldr	r3, [r4, #16]
 8026af4:	6861      	ldr	r1, [r4, #4]
 8026af6:	4299      	cmp	r1, r3
 8026af8:	bfde      	ittt	le
 8026afa:	2330      	movle	r3, #48	; 0x30
 8026afc:	f806 3c01 	strble.w	r3, [r6, #-1]
 8026b00:	f106 36ff 	addle.w	r6, r6, #4294967295
 8026b04:	1b92      	subs	r2, r2, r6
 8026b06:	6122      	str	r2, [r4, #16]
 8026b08:	f8cd a000 	str.w	sl, [sp]
 8026b0c:	464b      	mov	r3, r9
 8026b0e:	aa03      	add	r2, sp, #12
 8026b10:	4621      	mov	r1, r4
 8026b12:	4640      	mov	r0, r8
 8026b14:	f7ff fee2 	bl	80268dc <_printf_common>
 8026b18:	3001      	adds	r0, #1
 8026b1a:	d14c      	bne.n	8026bb6 <_printf_i+0x1fe>
 8026b1c:	f04f 30ff 	mov.w	r0, #4294967295
 8026b20:	b004      	add	sp, #16
 8026b22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026b26:	4835      	ldr	r0, [pc, #212]	; (8026bfc <_printf_i+0x244>)
 8026b28:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8026b2c:	6823      	ldr	r3, [r4, #0]
 8026b2e:	680e      	ldr	r6, [r1, #0]
 8026b30:	061f      	lsls	r7, r3, #24
 8026b32:	f856 5b04 	ldr.w	r5, [r6], #4
 8026b36:	600e      	str	r6, [r1, #0]
 8026b38:	d514      	bpl.n	8026b64 <_printf_i+0x1ac>
 8026b3a:	07d9      	lsls	r1, r3, #31
 8026b3c:	bf44      	itt	mi
 8026b3e:	f043 0320 	orrmi.w	r3, r3, #32
 8026b42:	6023      	strmi	r3, [r4, #0]
 8026b44:	b91d      	cbnz	r5, 8026b4e <_printf_i+0x196>
 8026b46:	6823      	ldr	r3, [r4, #0]
 8026b48:	f023 0320 	bic.w	r3, r3, #32
 8026b4c:	6023      	str	r3, [r4, #0]
 8026b4e:	2310      	movs	r3, #16
 8026b50:	e7b0      	b.n	8026ab4 <_printf_i+0xfc>
 8026b52:	6823      	ldr	r3, [r4, #0]
 8026b54:	f043 0320 	orr.w	r3, r3, #32
 8026b58:	6023      	str	r3, [r4, #0]
 8026b5a:	2378      	movs	r3, #120	; 0x78
 8026b5c:	4828      	ldr	r0, [pc, #160]	; (8026c00 <_printf_i+0x248>)
 8026b5e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8026b62:	e7e3      	b.n	8026b2c <_printf_i+0x174>
 8026b64:	065e      	lsls	r6, r3, #25
 8026b66:	bf48      	it	mi
 8026b68:	b2ad      	uxthmi	r5, r5
 8026b6a:	e7e6      	b.n	8026b3a <_printf_i+0x182>
 8026b6c:	4616      	mov	r6, r2
 8026b6e:	e7bb      	b.n	8026ae8 <_printf_i+0x130>
 8026b70:	680b      	ldr	r3, [r1, #0]
 8026b72:	6826      	ldr	r6, [r4, #0]
 8026b74:	6960      	ldr	r0, [r4, #20]
 8026b76:	1d1d      	adds	r5, r3, #4
 8026b78:	600d      	str	r5, [r1, #0]
 8026b7a:	0635      	lsls	r5, r6, #24
 8026b7c:	681b      	ldr	r3, [r3, #0]
 8026b7e:	d501      	bpl.n	8026b84 <_printf_i+0x1cc>
 8026b80:	6018      	str	r0, [r3, #0]
 8026b82:	e002      	b.n	8026b8a <_printf_i+0x1d2>
 8026b84:	0671      	lsls	r1, r6, #25
 8026b86:	d5fb      	bpl.n	8026b80 <_printf_i+0x1c8>
 8026b88:	8018      	strh	r0, [r3, #0]
 8026b8a:	2300      	movs	r3, #0
 8026b8c:	6123      	str	r3, [r4, #16]
 8026b8e:	4616      	mov	r6, r2
 8026b90:	e7ba      	b.n	8026b08 <_printf_i+0x150>
 8026b92:	680b      	ldr	r3, [r1, #0]
 8026b94:	1d1a      	adds	r2, r3, #4
 8026b96:	600a      	str	r2, [r1, #0]
 8026b98:	681e      	ldr	r6, [r3, #0]
 8026b9a:	6862      	ldr	r2, [r4, #4]
 8026b9c:	2100      	movs	r1, #0
 8026b9e:	4630      	mov	r0, r6
 8026ba0:	f7d9 fb36 	bl	8000210 <memchr>
 8026ba4:	b108      	cbz	r0, 8026baa <_printf_i+0x1f2>
 8026ba6:	1b80      	subs	r0, r0, r6
 8026ba8:	6060      	str	r0, [r4, #4]
 8026baa:	6863      	ldr	r3, [r4, #4]
 8026bac:	6123      	str	r3, [r4, #16]
 8026bae:	2300      	movs	r3, #0
 8026bb0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026bb4:	e7a8      	b.n	8026b08 <_printf_i+0x150>
 8026bb6:	6923      	ldr	r3, [r4, #16]
 8026bb8:	4632      	mov	r2, r6
 8026bba:	4649      	mov	r1, r9
 8026bbc:	4640      	mov	r0, r8
 8026bbe:	47d0      	blx	sl
 8026bc0:	3001      	adds	r0, #1
 8026bc2:	d0ab      	beq.n	8026b1c <_printf_i+0x164>
 8026bc4:	6823      	ldr	r3, [r4, #0]
 8026bc6:	079b      	lsls	r3, r3, #30
 8026bc8:	d413      	bmi.n	8026bf2 <_printf_i+0x23a>
 8026bca:	68e0      	ldr	r0, [r4, #12]
 8026bcc:	9b03      	ldr	r3, [sp, #12]
 8026bce:	4298      	cmp	r0, r3
 8026bd0:	bfb8      	it	lt
 8026bd2:	4618      	movlt	r0, r3
 8026bd4:	e7a4      	b.n	8026b20 <_printf_i+0x168>
 8026bd6:	2301      	movs	r3, #1
 8026bd8:	4632      	mov	r2, r6
 8026bda:	4649      	mov	r1, r9
 8026bdc:	4640      	mov	r0, r8
 8026bde:	47d0      	blx	sl
 8026be0:	3001      	adds	r0, #1
 8026be2:	d09b      	beq.n	8026b1c <_printf_i+0x164>
 8026be4:	3501      	adds	r5, #1
 8026be6:	68e3      	ldr	r3, [r4, #12]
 8026be8:	9903      	ldr	r1, [sp, #12]
 8026bea:	1a5b      	subs	r3, r3, r1
 8026bec:	42ab      	cmp	r3, r5
 8026bee:	dcf2      	bgt.n	8026bd6 <_printf_i+0x21e>
 8026bf0:	e7eb      	b.n	8026bca <_printf_i+0x212>
 8026bf2:	2500      	movs	r5, #0
 8026bf4:	f104 0619 	add.w	r6, r4, #25
 8026bf8:	e7f5      	b.n	8026be6 <_printf_i+0x22e>
 8026bfa:	bf00      	nop
 8026bfc:	080283a1 	.word	0x080283a1
 8026c00:	080283b2 	.word	0x080283b2

08026c04 <__swbuf_r>:
 8026c04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026c06:	460e      	mov	r6, r1
 8026c08:	4614      	mov	r4, r2
 8026c0a:	4605      	mov	r5, r0
 8026c0c:	b118      	cbz	r0, 8026c16 <__swbuf_r+0x12>
 8026c0e:	6983      	ldr	r3, [r0, #24]
 8026c10:	b90b      	cbnz	r3, 8026c16 <__swbuf_r+0x12>
 8026c12:	f000 f9d1 	bl	8026fb8 <__sinit>
 8026c16:	4b21      	ldr	r3, [pc, #132]	; (8026c9c <__swbuf_r+0x98>)
 8026c18:	429c      	cmp	r4, r3
 8026c1a:	d12b      	bne.n	8026c74 <__swbuf_r+0x70>
 8026c1c:	686c      	ldr	r4, [r5, #4]
 8026c1e:	69a3      	ldr	r3, [r4, #24]
 8026c20:	60a3      	str	r3, [r4, #8]
 8026c22:	89a3      	ldrh	r3, [r4, #12]
 8026c24:	071a      	lsls	r2, r3, #28
 8026c26:	d52f      	bpl.n	8026c88 <__swbuf_r+0x84>
 8026c28:	6923      	ldr	r3, [r4, #16]
 8026c2a:	b36b      	cbz	r3, 8026c88 <__swbuf_r+0x84>
 8026c2c:	6923      	ldr	r3, [r4, #16]
 8026c2e:	6820      	ldr	r0, [r4, #0]
 8026c30:	1ac0      	subs	r0, r0, r3
 8026c32:	6963      	ldr	r3, [r4, #20]
 8026c34:	b2f6      	uxtb	r6, r6
 8026c36:	4283      	cmp	r3, r0
 8026c38:	4637      	mov	r7, r6
 8026c3a:	dc04      	bgt.n	8026c46 <__swbuf_r+0x42>
 8026c3c:	4621      	mov	r1, r4
 8026c3e:	4628      	mov	r0, r5
 8026c40:	f000 f926 	bl	8026e90 <_fflush_r>
 8026c44:	bb30      	cbnz	r0, 8026c94 <__swbuf_r+0x90>
 8026c46:	68a3      	ldr	r3, [r4, #8]
 8026c48:	3b01      	subs	r3, #1
 8026c4a:	60a3      	str	r3, [r4, #8]
 8026c4c:	6823      	ldr	r3, [r4, #0]
 8026c4e:	1c5a      	adds	r2, r3, #1
 8026c50:	6022      	str	r2, [r4, #0]
 8026c52:	701e      	strb	r6, [r3, #0]
 8026c54:	6963      	ldr	r3, [r4, #20]
 8026c56:	3001      	adds	r0, #1
 8026c58:	4283      	cmp	r3, r0
 8026c5a:	d004      	beq.n	8026c66 <__swbuf_r+0x62>
 8026c5c:	89a3      	ldrh	r3, [r4, #12]
 8026c5e:	07db      	lsls	r3, r3, #31
 8026c60:	d506      	bpl.n	8026c70 <__swbuf_r+0x6c>
 8026c62:	2e0a      	cmp	r6, #10
 8026c64:	d104      	bne.n	8026c70 <__swbuf_r+0x6c>
 8026c66:	4621      	mov	r1, r4
 8026c68:	4628      	mov	r0, r5
 8026c6a:	f000 f911 	bl	8026e90 <_fflush_r>
 8026c6e:	b988      	cbnz	r0, 8026c94 <__swbuf_r+0x90>
 8026c70:	4638      	mov	r0, r7
 8026c72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026c74:	4b0a      	ldr	r3, [pc, #40]	; (8026ca0 <__swbuf_r+0x9c>)
 8026c76:	429c      	cmp	r4, r3
 8026c78:	d101      	bne.n	8026c7e <__swbuf_r+0x7a>
 8026c7a:	68ac      	ldr	r4, [r5, #8]
 8026c7c:	e7cf      	b.n	8026c1e <__swbuf_r+0x1a>
 8026c7e:	4b09      	ldr	r3, [pc, #36]	; (8026ca4 <__swbuf_r+0xa0>)
 8026c80:	429c      	cmp	r4, r3
 8026c82:	bf08      	it	eq
 8026c84:	68ec      	ldreq	r4, [r5, #12]
 8026c86:	e7ca      	b.n	8026c1e <__swbuf_r+0x1a>
 8026c88:	4621      	mov	r1, r4
 8026c8a:	4628      	mov	r0, r5
 8026c8c:	f000 f80c 	bl	8026ca8 <__swsetup_r>
 8026c90:	2800      	cmp	r0, #0
 8026c92:	d0cb      	beq.n	8026c2c <__swbuf_r+0x28>
 8026c94:	f04f 37ff 	mov.w	r7, #4294967295
 8026c98:	e7ea      	b.n	8026c70 <__swbuf_r+0x6c>
 8026c9a:	bf00      	nop
 8026c9c:	080283e4 	.word	0x080283e4
 8026ca0:	08028404 	.word	0x08028404
 8026ca4:	080283c4 	.word	0x080283c4

08026ca8 <__swsetup_r>:
 8026ca8:	4b32      	ldr	r3, [pc, #200]	; (8026d74 <__swsetup_r+0xcc>)
 8026caa:	b570      	push	{r4, r5, r6, lr}
 8026cac:	681d      	ldr	r5, [r3, #0]
 8026cae:	4606      	mov	r6, r0
 8026cb0:	460c      	mov	r4, r1
 8026cb2:	b125      	cbz	r5, 8026cbe <__swsetup_r+0x16>
 8026cb4:	69ab      	ldr	r3, [r5, #24]
 8026cb6:	b913      	cbnz	r3, 8026cbe <__swsetup_r+0x16>
 8026cb8:	4628      	mov	r0, r5
 8026cba:	f000 f97d 	bl	8026fb8 <__sinit>
 8026cbe:	4b2e      	ldr	r3, [pc, #184]	; (8026d78 <__swsetup_r+0xd0>)
 8026cc0:	429c      	cmp	r4, r3
 8026cc2:	d10f      	bne.n	8026ce4 <__swsetup_r+0x3c>
 8026cc4:	686c      	ldr	r4, [r5, #4]
 8026cc6:	89a3      	ldrh	r3, [r4, #12]
 8026cc8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026ccc:	0719      	lsls	r1, r3, #28
 8026cce:	d42c      	bmi.n	8026d2a <__swsetup_r+0x82>
 8026cd0:	06dd      	lsls	r5, r3, #27
 8026cd2:	d411      	bmi.n	8026cf8 <__swsetup_r+0x50>
 8026cd4:	2309      	movs	r3, #9
 8026cd6:	6033      	str	r3, [r6, #0]
 8026cd8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8026cdc:	81a3      	strh	r3, [r4, #12]
 8026cde:	f04f 30ff 	mov.w	r0, #4294967295
 8026ce2:	e03e      	b.n	8026d62 <__swsetup_r+0xba>
 8026ce4:	4b25      	ldr	r3, [pc, #148]	; (8026d7c <__swsetup_r+0xd4>)
 8026ce6:	429c      	cmp	r4, r3
 8026ce8:	d101      	bne.n	8026cee <__swsetup_r+0x46>
 8026cea:	68ac      	ldr	r4, [r5, #8]
 8026cec:	e7eb      	b.n	8026cc6 <__swsetup_r+0x1e>
 8026cee:	4b24      	ldr	r3, [pc, #144]	; (8026d80 <__swsetup_r+0xd8>)
 8026cf0:	429c      	cmp	r4, r3
 8026cf2:	bf08      	it	eq
 8026cf4:	68ec      	ldreq	r4, [r5, #12]
 8026cf6:	e7e6      	b.n	8026cc6 <__swsetup_r+0x1e>
 8026cf8:	0758      	lsls	r0, r3, #29
 8026cfa:	d512      	bpl.n	8026d22 <__swsetup_r+0x7a>
 8026cfc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8026cfe:	b141      	cbz	r1, 8026d12 <__swsetup_r+0x6a>
 8026d00:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026d04:	4299      	cmp	r1, r3
 8026d06:	d002      	beq.n	8026d0e <__swsetup_r+0x66>
 8026d08:	4630      	mov	r0, r6
 8026d0a:	f7fd fb2b 	bl	8024364 <_free_r>
 8026d0e:	2300      	movs	r3, #0
 8026d10:	6363      	str	r3, [r4, #52]	; 0x34
 8026d12:	89a3      	ldrh	r3, [r4, #12]
 8026d14:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8026d18:	81a3      	strh	r3, [r4, #12]
 8026d1a:	2300      	movs	r3, #0
 8026d1c:	6063      	str	r3, [r4, #4]
 8026d1e:	6923      	ldr	r3, [r4, #16]
 8026d20:	6023      	str	r3, [r4, #0]
 8026d22:	89a3      	ldrh	r3, [r4, #12]
 8026d24:	f043 0308 	orr.w	r3, r3, #8
 8026d28:	81a3      	strh	r3, [r4, #12]
 8026d2a:	6923      	ldr	r3, [r4, #16]
 8026d2c:	b94b      	cbnz	r3, 8026d42 <__swsetup_r+0x9a>
 8026d2e:	89a3      	ldrh	r3, [r4, #12]
 8026d30:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8026d34:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8026d38:	d003      	beq.n	8026d42 <__swsetup_r+0x9a>
 8026d3a:	4621      	mov	r1, r4
 8026d3c:	4630      	mov	r0, r6
 8026d3e:	f000 f9fd 	bl	802713c <__smakebuf_r>
 8026d42:	89a0      	ldrh	r0, [r4, #12]
 8026d44:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026d48:	f010 0301 	ands.w	r3, r0, #1
 8026d4c:	d00a      	beq.n	8026d64 <__swsetup_r+0xbc>
 8026d4e:	2300      	movs	r3, #0
 8026d50:	60a3      	str	r3, [r4, #8]
 8026d52:	6963      	ldr	r3, [r4, #20]
 8026d54:	425b      	negs	r3, r3
 8026d56:	61a3      	str	r3, [r4, #24]
 8026d58:	6923      	ldr	r3, [r4, #16]
 8026d5a:	b943      	cbnz	r3, 8026d6e <__swsetup_r+0xc6>
 8026d5c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8026d60:	d1ba      	bne.n	8026cd8 <__swsetup_r+0x30>
 8026d62:	bd70      	pop	{r4, r5, r6, pc}
 8026d64:	0781      	lsls	r1, r0, #30
 8026d66:	bf58      	it	pl
 8026d68:	6963      	ldrpl	r3, [r4, #20]
 8026d6a:	60a3      	str	r3, [r4, #8]
 8026d6c:	e7f4      	b.n	8026d58 <__swsetup_r+0xb0>
 8026d6e:	2000      	movs	r0, #0
 8026d70:	e7f7      	b.n	8026d62 <__swsetup_r+0xba>
 8026d72:	bf00      	nop
 8026d74:	20000010 	.word	0x20000010
 8026d78:	080283e4 	.word	0x080283e4
 8026d7c:	08028404 	.word	0x08028404
 8026d80:	080283c4 	.word	0x080283c4

08026d84 <__sflush_r>:
 8026d84:	898a      	ldrh	r2, [r1, #12]
 8026d86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026d8a:	4605      	mov	r5, r0
 8026d8c:	0710      	lsls	r0, r2, #28
 8026d8e:	460c      	mov	r4, r1
 8026d90:	d458      	bmi.n	8026e44 <__sflush_r+0xc0>
 8026d92:	684b      	ldr	r3, [r1, #4]
 8026d94:	2b00      	cmp	r3, #0
 8026d96:	dc05      	bgt.n	8026da4 <__sflush_r+0x20>
 8026d98:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8026d9a:	2b00      	cmp	r3, #0
 8026d9c:	dc02      	bgt.n	8026da4 <__sflush_r+0x20>
 8026d9e:	2000      	movs	r0, #0
 8026da0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026da4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8026da6:	2e00      	cmp	r6, #0
 8026da8:	d0f9      	beq.n	8026d9e <__sflush_r+0x1a>
 8026daa:	2300      	movs	r3, #0
 8026dac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8026db0:	682f      	ldr	r7, [r5, #0]
 8026db2:	602b      	str	r3, [r5, #0]
 8026db4:	d032      	beq.n	8026e1c <__sflush_r+0x98>
 8026db6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8026db8:	89a3      	ldrh	r3, [r4, #12]
 8026dba:	075a      	lsls	r2, r3, #29
 8026dbc:	d505      	bpl.n	8026dca <__sflush_r+0x46>
 8026dbe:	6863      	ldr	r3, [r4, #4]
 8026dc0:	1ac0      	subs	r0, r0, r3
 8026dc2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8026dc4:	b10b      	cbz	r3, 8026dca <__sflush_r+0x46>
 8026dc6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8026dc8:	1ac0      	subs	r0, r0, r3
 8026dca:	2300      	movs	r3, #0
 8026dcc:	4602      	mov	r2, r0
 8026dce:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8026dd0:	6a21      	ldr	r1, [r4, #32]
 8026dd2:	4628      	mov	r0, r5
 8026dd4:	47b0      	blx	r6
 8026dd6:	1c43      	adds	r3, r0, #1
 8026dd8:	89a3      	ldrh	r3, [r4, #12]
 8026dda:	d106      	bne.n	8026dea <__sflush_r+0x66>
 8026ddc:	6829      	ldr	r1, [r5, #0]
 8026dde:	291d      	cmp	r1, #29
 8026de0:	d82c      	bhi.n	8026e3c <__sflush_r+0xb8>
 8026de2:	4a2a      	ldr	r2, [pc, #168]	; (8026e8c <__sflush_r+0x108>)
 8026de4:	40ca      	lsrs	r2, r1
 8026de6:	07d6      	lsls	r6, r2, #31
 8026de8:	d528      	bpl.n	8026e3c <__sflush_r+0xb8>
 8026dea:	2200      	movs	r2, #0
 8026dec:	6062      	str	r2, [r4, #4]
 8026dee:	04d9      	lsls	r1, r3, #19
 8026df0:	6922      	ldr	r2, [r4, #16]
 8026df2:	6022      	str	r2, [r4, #0]
 8026df4:	d504      	bpl.n	8026e00 <__sflush_r+0x7c>
 8026df6:	1c42      	adds	r2, r0, #1
 8026df8:	d101      	bne.n	8026dfe <__sflush_r+0x7a>
 8026dfa:	682b      	ldr	r3, [r5, #0]
 8026dfc:	b903      	cbnz	r3, 8026e00 <__sflush_r+0x7c>
 8026dfe:	6560      	str	r0, [r4, #84]	; 0x54
 8026e00:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8026e02:	602f      	str	r7, [r5, #0]
 8026e04:	2900      	cmp	r1, #0
 8026e06:	d0ca      	beq.n	8026d9e <__sflush_r+0x1a>
 8026e08:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026e0c:	4299      	cmp	r1, r3
 8026e0e:	d002      	beq.n	8026e16 <__sflush_r+0x92>
 8026e10:	4628      	mov	r0, r5
 8026e12:	f7fd faa7 	bl	8024364 <_free_r>
 8026e16:	2000      	movs	r0, #0
 8026e18:	6360      	str	r0, [r4, #52]	; 0x34
 8026e1a:	e7c1      	b.n	8026da0 <__sflush_r+0x1c>
 8026e1c:	6a21      	ldr	r1, [r4, #32]
 8026e1e:	2301      	movs	r3, #1
 8026e20:	4628      	mov	r0, r5
 8026e22:	47b0      	blx	r6
 8026e24:	1c41      	adds	r1, r0, #1
 8026e26:	d1c7      	bne.n	8026db8 <__sflush_r+0x34>
 8026e28:	682b      	ldr	r3, [r5, #0]
 8026e2a:	2b00      	cmp	r3, #0
 8026e2c:	d0c4      	beq.n	8026db8 <__sflush_r+0x34>
 8026e2e:	2b1d      	cmp	r3, #29
 8026e30:	d001      	beq.n	8026e36 <__sflush_r+0xb2>
 8026e32:	2b16      	cmp	r3, #22
 8026e34:	d101      	bne.n	8026e3a <__sflush_r+0xb6>
 8026e36:	602f      	str	r7, [r5, #0]
 8026e38:	e7b1      	b.n	8026d9e <__sflush_r+0x1a>
 8026e3a:	89a3      	ldrh	r3, [r4, #12]
 8026e3c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8026e40:	81a3      	strh	r3, [r4, #12]
 8026e42:	e7ad      	b.n	8026da0 <__sflush_r+0x1c>
 8026e44:	690f      	ldr	r7, [r1, #16]
 8026e46:	2f00      	cmp	r7, #0
 8026e48:	d0a9      	beq.n	8026d9e <__sflush_r+0x1a>
 8026e4a:	0793      	lsls	r3, r2, #30
 8026e4c:	680e      	ldr	r6, [r1, #0]
 8026e4e:	bf08      	it	eq
 8026e50:	694b      	ldreq	r3, [r1, #20]
 8026e52:	600f      	str	r7, [r1, #0]
 8026e54:	bf18      	it	ne
 8026e56:	2300      	movne	r3, #0
 8026e58:	eba6 0807 	sub.w	r8, r6, r7
 8026e5c:	608b      	str	r3, [r1, #8]
 8026e5e:	f1b8 0f00 	cmp.w	r8, #0
 8026e62:	dd9c      	ble.n	8026d9e <__sflush_r+0x1a>
 8026e64:	6a21      	ldr	r1, [r4, #32]
 8026e66:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8026e68:	4643      	mov	r3, r8
 8026e6a:	463a      	mov	r2, r7
 8026e6c:	4628      	mov	r0, r5
 8026e6e:	47b0      	blx	r6
 8026e70:	2800      	cmp	r0, #0
 8026e72:	dc06      	bgt.n	8026e82 <__sflush_r+0xfe>
 8026e74:	89a3      	ldrh	r3, [r4, #12]
 8026e76:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8026e7a:	81a3      	strh	r3, [r4, #12]
 8026e7c:	f04f 30ff 	mov.w	r0, #4294967295
 8026e80:	e78e      	b.n	8026da0 <__sflush_r+0x1c>
 8026e82:	4407      	add	r7, r0
 8026e84:	eba8 0800 	sub.w	r8, r8, r0
 8026e88:	e7e9      	b.n	8026e5e <__sflush_r+0xda>
 8026e8a:	bf00      	nop
 8026e8c:	20400001 	.word	0x20400001

08026e90 <_fflush_r>:
 8026e90:	b538      	push	{r3, r4, r5, lr}
 8026e92:	690b      	ldr	r3, [r1, #16]
 8026e94:	4605      	mov	r5, r0
 8026e96:	460c      	mov	r4, r1
 8026e98:	b913      	cbnz	r3, 8026ea0 <_fflush_r+0x10>
 8026e9a:	2500      	movs	r5, #0
 8026e9c:	4628      	mov	r0, r5
 8026e9e:	bd38      	pop	{r3, r4, r5, pc}
 8026ea0:	b118      	cbz	r0, 8026eaa <_fflush_r+0x1a>
 8026ea2:	6983      	ldr	r3, [r0, #24]
 8026ea4:	b90b      	cbnz	r3, 8026eaa <_fflush_r+0x1a>
 8026ea6:	f000 f887 	bl	8026fb8 <__sinit>
 8026eaa:	4b14      	ldr	r3, [pc, #80]	; (8026efc <_fflush_r+0x6c>)
 8026eac:	429c      	cmp	r4, r3
 8026eae:	d11b      	bne.n	8026ee8 <_fflush_r+0x58>
 8026eb0:	686c      	ldr	r4, [r5, #4]
 8026eb2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026eb6:	2b00      	cmp	r3, #0
 8026eb8:	d0ef      	beq.n	8026e9a <_fflush_r+0xa>
 8026eba:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8026ebc:	07d0      	lsls	r0, r2, #31
 8026ebe:	d404      	bmi.n	8026eca <_fflush_r+0x3a>
 8026ec0:	0599      	lsls	r1, r3, #22
 8026ec2:	d402      	bmi.n	8026eca <_fflush_r+0x3a>
 8026ec4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8026ec6:	f7fe fe6e 	bl	8025ba6 <__retarget_lock_acquire_recursive>
 8026eca:	4628      	mov	r0, r5
 8026ecc:	4621      	mov	r1, r4
 8026ece:	f7ff ff59 	bl	8026d84 <__sflush_r>
 8026ed2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8026ed4:	07da      	lsls	r2, r3, #31
 8026ed6:	4605      	mov	r5, r0
 8026ed8:	d4e0      	bmi.n	8026e9c <_fflush_r+0xc>
 8026eda:	89a3      	ldrh	r3, [r4, #12]
 8026edc:	059b      	lsls	r3, r3, #22
 8026ede:	d4dd      	bmi.n	8026e9c <_fflush_r+0xc>
 8026ee0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8026ee2:	f7fe fe62 	bl	8025baa <__retarget_lock_release_recursive>
 8026ee6:	e7d9      	b.n	8026e9c <_fflush_r+0xc>
 8026ee8:	4b05      	ldr	r3, [pc, #20]	; (8026f00 <_fflush_r+0x70>)
 8026eea:	429c      	cmp	r4, r3
 8026eec:	d101      	bne.n	8026ef2 <_fflush_r+0x62>
 8026eee:	68ac      	ldr	r4, [r5, #8]
 8026ef0:	e7df      	b.n	8026eb2 <_fflush_r+0x22>
 8026ef2:	4b04      	ldr	r3, [pc, #16]	; (8026f04 <_fflush_r+0x74>)
 8026ef4:	429c      	cmp	r4, r3
 8026ef6:	bf08      	it	eq
 8026ef8:	68ec      	ldreq	r4, [r5, #12]
 8026efa:	e7da      	b.n	8026eb2 <_fflush_r+0x22>
 8026efc:	080283e4 	.word	0x080283e4
 8026f00:	08028404 	.word	0x08028404
 8026f04:	080283c4 	.word	0x080283c4

08026f08 <std>:
 8026f08:	2300      	movs	r3, #0
 8026f0a:	b510      	push	{r4, lr}
 8026f0c:	4604      	mov	r4, r0
 8026f0e:	e9c0 3300 	strd	r3, r3, [r0]
 8026f12:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8026f16:	6083      	str	r3, [r0, #8]
 8026f18:	8181      	strh	r1, [r0, #12]
 8026f1a:	6643      	str	r3, [r0, #100]	; 0x64
 8026f1c:	81c2      	strh	r2, [r0, #14]
 8026f1e:	6183      	str	r3, [r0, #24]
 8026f20:	4619      	mov	r1, r3
 8026f22:	2208      	movs	r2, #8
 8026f24:	305c      	adds	r0, #92	; 0x5c
 8026f26:	f7fd fa15 	bl	8024354 <memset>
 8026f2a:	4b05      	ldr	r3, [pc, #20]	; (8026f40 <std+0x38>)
 8026f2c:	6263      	str	r3, [r4, #36]	; 0x24
 8026f2e:	4b05      	ldr	r3, [pc, #20]	; (8026f44 <std+0x3c>)
 8026f30:	62a3      	str	r3, [r4, #40]	; 0x28
 8026f32:	4b05      	ldr	r3, [pc, #20]	; (8026f48 <std+0x40>)
 8026f34:	62e3      	str	r3, [r4, #44]	; 0x2c
 8026f36:	4b05      	ldr	r3, [pc, #20]	; (8026f4c <std+0x44>)
 8026f38:	6224      	str	r4, [r4, #32]
 8026f3a:	6323      	str	r3, [r4, #48]	; 0x30
 8026f3c:	bd10      	pop	{r4, pc}
 8026f3e:	bf00      	nop
 8026f40:	080271bd 	.word	0x080271bd
 8026f44:	080271df 	.word	0x080271df
 8026f48:	08027217 	.word	0x08027217
 8026f4c:	0802723b 	.word	0x0802723b

08026f50 <_cleanup_r>:
 8026f50:	4901      	ldr	r1, [pc, #4]	; (8026f58 <_cleanup_r+0x8>)
 8026f52:	f000 b8af 	b.w	80270b4 <_fwalk_reent>
 8026f56:	bf00      	nop
 8026f58:	08026e91 	.word	0x08026e91

08026f5c <__sfmoreglue>:
 8026f5c:	b570      	push	{r4, r5, r6, lr}
 8026f5e:	1e4a      	subs	r2, r1, #1
 8026f60:	2568      	movs	r5, #104	; 0x68
 8026f62:	4355      	muls	r5, r2
 8026f64:	460e      	mov	r6, r1
 8026f66:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8026f6a:	f7fd fa4b 	bl	8024404 <_malloc_r>
 8026f6e:	4604      	mov	r4, r0
 8026f70:	b140      	cbz	r0, 8026f84 <__sfmoreglue+0x28>
 8026f72:	2100      	movs	r1, #0
 8026f74:	e9c0 1600 	strd	r1, r6, [r0]
 8026f78:	300c      	adds	r0, #12
 8026f7a:	60a0      	str	r0, [r4, #8]
 8026f7c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8026f80:	f7fd f9e8 	bl	8024354 <memset>
 8026f84:	4620      	mov	r0, r4
 8026f86:	bd70      	pop	{r4, r5, r6, pc}

08026f88 <__sfp_lock_acquire>:
 8026f88:	4801      	ldr	r0, [pc, #4]	; (8026f90 <__sfp_lock_acquire+0x8>)
 8026f8a:	f7fe be0c 	b.w	8025ba6 <__retarget_lock_acquire_recursive>
 8026f8e:	bf00      	nop
 8026f90:	20000738 	.word	0x20000738

08026f94 <__sfp_lock_release>:
 8026f94:	4801      	ldr	r0, [pc, #4]	; (8026f9c <__sfp_lock_release+0x8>)
 8026f96:	f7fe be08 	b.w	8025baa <__retarget_lock_release_recursive>
 8026f9a:	bf00      	nop
 8026f9c:	20000738 	.word	0x20000738

08026fa0 <__sinit_lock_acquire>:
 8026fa0:	4801      	ldr	r0, [pc, #4]	; (8026fa8 <__sinit_lock_acquire+0x8>)
 8026fa2:	f7fe be00 	b.w	8025ba6 <__retarget_lock_acquire_recursive>
 8026fa6:	bf00      	nop
 8026fa8:	20000737 	.word	0x20000737

08026fac <__sinit_lock_release>:
 8026fac:	4801      	ldr	r0, [pc, #4]	; (8026fb4 <__sinit_lock_release+0x8>)
 8026fae:	f7fe bdfc 	b.w	8025baa <__retarget_lock_release_recursive>
 8026fb2:	bf00      	nop
 8026fb4:	20000737 	.word	0x20000737

08026fb8 <__sinit>:
 8026fb8:	b510      	push	{r4, lr}
 8026fba:	4604      	mov	r4, r0
 8026fbc:	f7ff fff0 	bl	8026fa0 <__sinit_lock_acquire>
 8026fc0:	69a3      	ldr	r3, [r4, #24]
 8026fc2:	b11b      	cbz	r3, 8026fcc <__sinit+0x14>
 8026fc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026fc8:	f7ff bff0 	b.w	8026fac <__sinit_lock_release>
 8026fcc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8026fd0:	6523      	str	r3, [r4, #80]	; 0x50
 8026fd2:	4b13      	ldr	r3, [pc, #76]	; (8027020 <__sinit+0x68>)
 8026fd4:	4a13      	ldr	r2, [pc, #76]	; (8027024 <__sinit+0x6c>)
 8026fd6:	681b      	ldr	r3, [r3, #0]
 8026fd8:	62a2      	str	r2, [r4, #40]	; 0x28
 8026fda:	42a3      	cmp	r3, r4
 8026fdc:	bf04      	itt	eq
 8026fde:	2301      	moveq	r3, #1
 8026fe0:	61a3      	streq	r3, [r4, #24]
 8026fe2:	4620      	mov	r0, r4
 8026fe4:	f000 f820 	bl	8027028 <__sfp>
 8026fe8:	6060      	str	r0, [r4, #4]
 8026fea:	4620      	mov	r0, r4
 8026fec:	f000 f81c 	bl	8027028 <__sfp>
 8026ff0:	60a0      	str	r0, [r4, #8]
 8026ff2:	4620      	mov	r0, r4
 8026ff4:	f000 f818 	bl	8027028 <__sfp>
 8026ff8:	2200      	movs	r2, #0
 8026ffa:	60e0      	str	r0, [r4, #12]
 8026ffc:	2104      	movs	r1, #4
 8026ffe:	6860      	ldr	r0, [r4, #4]
 8027000:	f7ff ff82 	bl	8026f08 <std>
 8027004:	68a0      	ldr	r0, [r4, #8]
 8027006:	2201      	movs	r2, #1
 8027008:	2109      	movs	r1, #9
 802700a:	f7ff ff7d 	bl	8026f08 <std>
 802700e:	68e0      	ldr	r0, [r4, #12]
 8027010:	2202      	movs	r2, #2
 8027012:	2112      	movs	r1, #18
 8027014:	f7ff ff78 	bl	8026f08 <std>
 8027018:	2301      	movs	r3, #1
 802701a:	61a3      	str	r3, [r4, #24]
 802701c:	e7d2      	b.n	8026fc4 <__sinit+0xc>
 802701e:	bf00      	nop
 8027020:	08027fc8 	.word	0x08027fc8
 8027024:	08026f51 	.word	0x08026f51

08027028 <__sfp>:
 8027028:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802702a:	4607      	mov	r7, r0
 802702c:	f7ff ffac 	bl	8026f88 <__sfp_lock_acquire>
 8027030:	4b1e      	ldr	r3, [pc, #120]	; (80270ac <__sfp+0x84>)
 8027032:	681e      	ldr	r6, [r3, #0]
 8027034:	69b3      	ldr	r3, [r6, #24]
 8027036:	b913      	cbnz	r3, 802703e <__sfp+0x16>
 8027038:	4630      	mov	r0, r6
 802703a:	f7ff ffbd 	bl	8026fb8 <__sinit>
 802703e:	3648      	adds	r6, #72	; 0x48
 8027040:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8027044:	3b01      	subs	r3, #1
 8027046:	d503      	bpl.n	8027050 <__sfp+0x28>
 8027048:	6833      	ldr	r3, [r6, #0]
 802704a:	b30b      	cbz	r3, 8027090 <__sfp+0x68>
 802704c:	6836      	ldr	r6, [r6, #0]
 802704e:	e7f7      	b.n	8027040 <__sfp+0x18>
 8027050:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8027054:	b9d5      	cbnz	r5, 802708c <__sfp+0x64>
 8027056:	4b16      	ldr	r3, [pc, #88]	; (80270b0 <__sfp+0x88>)
 8027058:	60e3      	str	r3, [r4, #12]
 802705a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802705e:	6665      	str	r5, [r4, #100]	; 0x64
 8027060:	f7fe fda0 	bl	8025ba4 <__retarget_lock_init_recursive>
 8027064:	f7ff ff96 	bl	8026f94 <__sfp_lock_release>
 8027068:	e9c4 5501 	strd	r5, r5, [r4, #4]
 802706c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8027070:	6025      	str	r5, [r4, #0]
 8027072:	61a5      	str	r5, [r4, #24]
 8027074:	2208      	movs	r2, #8
 8027076:	4629      	mov	r1, r5
 8027078:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 802707c:	f7fd f96a 	bl	8024354 <memset>
 8027080:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8027084:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8027088:	4620      	mov	r0, r4
 802708a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802708c:	3468      	adds	r4, #104	; 0x68
 802708e:	e7d9      	b.n	8027044 <__sfp+0x1c>
 8027090:	2104      	movs	r1, #4
 8027092:	4638      	mov	r0, r7
 8027094:	f7ff ff62 	bl	8026f5c <__sfmoreglue>
 8027098:	4604      	mov	r4, r0
 802709a:	6030      	str	r0, [r6, #0]
 802709c:	2800      	cmp	r0, #0
 802709e:	d1d5      	bne.n	802704c <__sfp+0x24>
 80270a0:	f7ff ff78 	bl	8026f94 <__sfp_lock_release>
 80270a4:	230c      	movs	r3, #12
 80270a6:	603b      	str	r3, [r7, #0]
 80270a8:	e7ee      	b.n	8027088 <__sfp+0x60>
 80270aa:	bf00      	nop
 80270ac:	08027fc8 	.word	0x08027fc8
 80270b0:	ffff0001 	.word	0xffff0001

080270b4 <_fwalk_reent>:
 80270b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80270b8:	4606      	mov	r6, r0
 80270ba:	4688      	mov	r8, r1
 80270bc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80270c0:	2700      	movs	r7, #0
 80270c2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80270c6:	f1b9 0901 	subs.w	r9, r9, #1
 80270ca:	d505      	bpl.n	80270d8 <_fwalk_reent+0x24>
 80270cc:	6824      	ldr	r4, [r4, #0]
 80270ce:	2c00      	cmp	r4, #0
 80270d0:	d1f7      	bne.n	80270c2 <_fwalk_reent+0xe>
 80270d2:	4638      	mov	r0, r7
 80270d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80270d8:	89ab      	ldrh	r3, [r5, #12]
 80270da:	2b01      	cmp	r3, #1
 80270dc:	d907      	bls.n	80270ee <_fwalk_reent+0x3a>
 80270de:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80270e2:	3301      	adds	r3, #1
 80270e4:	d003      	beq.n	80270ee <_fwalk_reent+0x3a>
 80270e6:	4629      	mov	r1, r5
 80270e8:	4630      	mov	r0, r6
 80270ea:	47c0      	blx	r8
 80270ec:	4307      	orrs	r7, r0
 80270ee:	3568      	adds	r5, #104	; 0x68
 80270f0:	e7e9      	b.n	80270c6 <_fwalk_reent+0x12>

080270f2 <__swhatbuf_r>:
 80270f2:	b570      	push	{r4, r5, r6, lr}
 80270f4:	460e      	mov	r6, r1
 80270f6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80270fa:	2900      	cmp	r1, #0
 80270fc:	b096      	sub	sp, #88	; 0x58
 80270fe:	4614      	mov	r4, r2
 8027100:	461d      	mov	r5, r3
 8027102:	da07      	bge.n	8027114 <__swhatbuf_r+0x22>
 8027104:	2300      	movs	r3, #0
 8027106:	602b      	str	r3, [r5, #0]
 8027108:	89b3      	ldrh	r3, [r6, #12]
 802710a:	061a      	lsls	r2, r3, #24
 802710c:	d410      	bmi.n	8027130 <__swhatbuf_r+0x3e>
 802710e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8027112:	e00e      	b.n	8027132 <__swhatbuf_r+0x40>
 8027114:	466a      	mov	r2, sp
 8027116:	f000 f8b7 	bl	8027288 <_fstat_r>
 802711a:	2800      	cmp	r0, #0
 802711c:	dbf2      	blt.n	8027104 <__swhatbuf_r+0x12>
 802711e:	9a01      	ldr	r2, [sp, #4]
 8027120:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8027124:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8027128:	425a      	negs	r2, r3
 802712a:	415a      	adcs	r2, r3
 802712c:	602a      	str	r2, [r5, #0]
 802712e:	e7ee      	b.n	802710e <__swhatbuf_r+0x1c>
 8027130:	2340      	movs	r3, #64	; 0x40
 8027132:	2000      	movs	r0, #0
 8027134:	6023      	str	r3, [r4, #0]
 8027136:	b016      	add	sp, #88	; 0x58
 8027138:	bd70      	pop	{r4, r5, r6, pc}
	...

0802713c <__smakebuf_r>:
 802713c:	898b      	ldrh	r3, [r1, #12]
 802713e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027140:	079d      	lsls	r5, r3, #30
 8027142:	4606      	mov	r6, r0
 8027144:	460c      	mov	r4, r1
 8027146:	d507      	bpl.n	8027158 <__smakebuf_r+0x1c>
 8027148:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802714c:	6023      	str	r3, [r4, #0]
 802714e:	6123      	str	r3, [r4, #16]
 8027150:	2301      	movs	r3, #1
 8027152:	6163      	str	r3, [r4, #20]
 8027154:	b002      	add	sp, #8
 8027156:	bd70      	pop	{r4, r5, r6, pc}
 8027158:	ab01      	add	r3, sp, #4
 802715a:	466a      	mov	r2, sp
 802715c:	f7ff ffc9 	bl	80270f2 <__swhatbuf_r>
 8027160:	9900      	ldr	r1, [sp, #0]
 8027162:	4605      	mov	r5, r0
 8027164:	4630      	mov	r0, r6
 8027166:	f7fd f94d 	bl	8024404 <_malloc_r>
 802716a:	b948      	cbnz	r0, 8027180 <__smakebuf_r+0x44>
 802716c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8027170:	059a      	lsls	r2, r3, #22
 8027172:	d4ef      	bmi.n	8027154 <__smakebuf_r+0x18>
 8027174:	f023 0303 	bic.w	r3, r3, #3
 8027178:	f043 0302 	orr.w	r3, r3, #2
 802717c:	81a3      	strh	r3, [r4, #12]
 802717e:	e7e3      	b.n	8027148 <__smakebuf_r+0xc>
 8027180:	4b0d      	ldr	r3, [pc, #52]	; (80271b8 <__smakebuf_r+0x7c>)
 8027182:	62b3      	str	r3, [r6, #40]	; 0x28
 8027184:	89a3      	ldrh	r3, [r4, #12]
 8027186:	6020      	str	r0, [r4, #0]
 8027188:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802718c:	81a3      	strh	r3, [r4, #12]
 802718e:	9b00      	ldr	r3, [sp, #0]
 8027190:	6163      	str	r3, [r4, #20]
 8027192:	9b01      	ldr	r3, [sp, #4]
 8027194:	6120      	str	r0, [r4, #16]
 8027196:	b15b      	cbz	r3, 80271b0 <__smakebuf_r+0x74>
 8027198:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802719c:	4630      	mov	r0, r6
 802719e:	f000 f885 	bl	80272ac <_isatty_r>
 80271a2:	b128      	cbz	r0, 80271b0 <__smakebuf_r+0x74>
 80271a4:	89a3      	ldrh	r3, [r4, #12]
 80271a6:	f023 0303 	bic.w	r3, r3, #3
 80271aa:	f043 0301 	orr.w	r3, r3, #1
 80271ae:	81a3      	strh	r3, [r4, #12]
 80271b0:	89a0      	ldrh	r0, [r4, #12]
 80271b2:	4305      	orrs	r5, r0
 80271b4:	81a5      	strh	r5, [r4, #12]
 80271b6:	e7cd      	b.n	8027154 <__smakebuf_r+0x18>
 80271b8:	08026f51 	.word	0x08026f51

080271bc <__sread>:
 80271bc:	b510      	push	{r4, lr}
 80271be:	460c      	mov	r4, r1
 80271c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80271c4:	f000 f894 	bl	80272f0 <_read_r>
 80271c8:	2800      	cmp	r0, #0
 80271ca:	bfab      	itete	ge
 80271cc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80271ce:	89a3      	ldrhlt	r3, [r4, #12]
 80271d0:	181b      	addge	r3, r3, r0
 80271d2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80271d6:	bfac      	ite	ge
 80271d8:	6563      	strge	r3, [r4, #84]	; 0x54
 80271da:	81a3      	strhlt	r3, [r4, #12]
 80271dc:	bd10      	pop	{r4, pc}

080271de <__swrite>:
 80271de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80271e2:	461f      	mov	r7, r3
 80271e4:	898b      	ldrh	r3, [r1, #12]
 80271e6:	05db      	lsls	r3, r3, #23
 80271e8:	4605      	mov	r5, r0
 80271ea:	460c      	mov	r4, r1
 80271ec:	4616      	mov	r6, r2
 80271ee:	d505      	bpl.n	80271fc <__swrite+0x1e>
 80271f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80271f4:	2302      	movs	r3, #2
 80271f6:	2200      	movs	r2, #0
 80271f8:	f000 f868 	bl	80272cc <_lseek_r>
 80271fc:	89a3      	ldrh	r3, [r4, #12]
 80271fe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8027202:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8027206:	81a3      	strh	r3, [r4, #12]
 8027208:	4632      	mov	r2, r6
 802720a:	463b      	mov	r3, r7
 802720c:	4628      	mov	r0, r5
 802720e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8027212:	f000 b817 	b.w	8027244 <_write_r>

08027216 <__sseek>:
 8027216:	b510      	push	{r4, lr}
 8027218:	460c      	mov	r4, r1
 802721a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802721e:	f000 f855 	bl	80272cc <_lseek_r>
 8027222:	1c43      	adds	r3, r0, #1
 8027224:	89a3      	ldrh	r3, [r4, #12]
 8027226:	bf15      	itete	ne
 8027228:	6560      	strne	r0, [r4, #84]	; 0x54
 802722a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802722e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8027232:	81a3      	strheq	r3, [r4, #12]
 8027234:	bf18      	it	ne
 8027236:	81a3      	strhne	r3, [r4, #12]
 8027238:	bd10      	pop	{r4, pc}

0802723a <__sclose>:
 802723a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802723e:	f000 b813 	b.w	8027268 <_close_r>
	...

08027244 <_write_r>:
 8027244:	b538      	push	{r3, r4, r5, lr}
 8027246:	4d07      	ldr	r5, [pc, #28]	; (8027264 <_write_r+0x20>)
 8027248:	4604      	mov	r4, r0
 802724a:	4608      	mov	r0, r1
 802724c:	4611      	mov	r1, r2
 802724e:	2200      	movs	r2, #0
 8027250:	602a      	str	r2, [r5, #0]
 8027252:	461a      	mov	r2, r3
 8027254:	f7f7 ff45 	bl	801f0e2 <_write>
 8027258:	1c43      	adds	r3, r0, #1
 802725a:	d102      	bne.n	8027262 <_write_r+0x1e>
 802725c:	682b      	ldr	r3, [r5, #0]
 802725e:	b103      	cbz	r3, 8027262 <_write_r+0x1e>
 8027260:	6023      	str	r3, [r4, #0]
 8027262:	bd38      	pop	{r3, r4, r5, pc}
 8027264:	20000740 	.word	0x20000740

08027268 <_close_r>:
 8027268:	b538      	push	{r3, r4, r5, lr}
 802726a:	4d06      	ldr	r5, [pc, #24]	; (8027284 <_close_r+0x1c>)
 802726c:	2300      	movs	r3, #0
 802726e:	4604      	mov	r4, r0
 8027270:	4608      	mov	r0, r1
 8027272:	602b      	str	r3, [r5, #0]
 8027274:	f7f7 ff51 	bl	801f11a <_close>
 8027278:	1c43      	adds	r3, r0, #1
 802727a:	d102      	bne.n	8027282 <_close_r+0x1a>
 802727c:	682b      	ldr	r3, [r5, #0]
 802727e:	b103      	cbz	r3, 8027282 <_close_r+0x1a>
 8027280:	6023      	str	r3, [r4, #0]
 8027282:	bd38      	pop	{r3, r4, r5, pc}
 8027284:	20000740 	.word	0x20000740

08027288 <_fstat_r>:
 8027288:	b538      	push	{r3, r4, r5, lr}
 802728a:	4d07      	ldr	r5, [pc, #28]	; (80272a8 <_fstat_r+0x20>)
 802728c:	2300      	movs	r3, #0
 802728e:	4604      	mov	r4, r0
 8027290:	4608      	mov	r0, r1
 8027292:	4611      	mov	r1, r2
 8027294:	602b      	str	r3, [r5, #0]
 8027296:	f7f7 ff4c 	bl	801f132 <_fstat>
 802729a:	1c43      	adds	r3, r0, #1
 802729c:	d102      	bne.n	80272a4 <_fstat_r+0x1c>
 802729e:	682b      	ldr	r3, [r5, #0]
 80272a0:	b103      	cbz	r3, 80272a4 <_fstat_r+0x1c>
 80272a2:	6023      	str	r3, [r4, #0]
 80272a4:	bd38      	pop	{r3, r4, r5, pc}
 80272a6:	bf00      	nop
 80272a8:	20000740 	.word	0x20000740

080272ac <_isatty_r>:
 80272ac:	b538      	push	{r3, r4, r5, lr}
 80272ae:	4d06      	ldr	r5, [pc, #24]	; (80272c8 <_isatty_r+0x1c>)
 80272b0:	2300      	movs	r3, #0
 80272b2:	4604      	mov	r4, r0
 80272b4:	4608      	mov	r0, r1
 80272b6:	602b      	str	r3, [r5, #0]
 80272b8:	f7f7 ff4b 	bl	801f152 <_isatty>
 80272bc:	1c43      	adds	r3, r0, #1
 80272be:	d102      	bne.n	80272c6 <_isatty_r+0x1a>
 80272c0:	682b      	ldr	r3, [r5, #0]
 80272c2:	b103      	cbz	r3, 80272c6 <_isatty_r+0x1a>
 80272c4:	6023      	str	r3, [r4, #0]
 80272c6:	bd38      	pop	{r3, r4, r5, pc}
 80272c8:	20000740 	.word	0x20000740

080272cc <_lseek_r>:
 80272cc:	b538      	push	{r3, r4, r5, lr}
 80272ce:	4d07      	ldr	r5, [pc, #28]	; (80272ec <_lseek_r+0x20>)
 80272d0:	4604      	mov	r4, r0
 80272d2:	4608      	mov	r0, r1
 80272d4:	4611      	mov	r1, r2
 80272d6:	2200      	movs	r2, #0
 80272d8:	602a      	str	r2, [r5, #0]
 80272da:	461a      	mov	r2, r3
 80272dc:	f7f7 ff44 	bl	801f168 <_lseek>
 80272e0:	1c43      	adds	r3, r0, #1
 80272e2:	d102      	bne.n	80272ea <_lseek_r+0x1e>
 80272e4:	682b      	ldr	r3, [r5, #0]
 80272e6:	b103      	cbz	r3, 80272ea <_lseek_r+0x1e>
 80272e8:	6023      	str	r3, [r4, #0]
 80272ea:	bd38      	pop	{r3, r4, r5, pc}
 80272ec:	20000740 	.word	0x20000740

080272f0 <_read_r>:
 80272f0:	b538      	push	{r3, r4, r5, lr}
 80272f2:	4d07      	ldr	r5, [pc, #28]	; (8027310 <_read_r+0x20>)
 80272f4:	4604      	mov	r4, r0
 80272f6:	4608      	mov	r0, r1
 80272f8:	4611      	mov	r1, r2
 80272fa:	2200      	movs	r2, #0
 80272fc:	602a      	str	r2, [r5, #0]
 80272fe:	461a      	mov	r2, r3
 8027300:	f7f7 fed2 	bl	801f0a8 <_read>
 8027304:	1c43      	adds	r3, r0, #1
 8027306:	d102      	bne.n	802730e <_read_r+0x1e>
 8027308:	682b      	ldr	r3, [r5, #0]
 802730a:	b103      	cbz	r3, 802730e <_read_r+0x1e>
 802730c:	6023      	str	r3, [r4, #0]
 802730e:	bd38      	pop	{r3, r4, r5, pc}
 8027310:	20000740 	.word	0x20000740

08027314 <_init>:
 8027314:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027316:	bf00      	nop
 8027318:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802731a:	bc08      	pop	{r3}
 802731c:	469e      	mov	lr, r3
 802731e:	4770      	bx	lr

08027320 <_fini>:
 8027320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027322:	bf00      	nop
 8027324:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8027326:	bc08      	pop	{r3}
 8027328:	469e      	mov	lr, r3
 802732a:	4770      	bx	lr
