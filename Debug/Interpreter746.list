
Interpreter746.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00026ff4  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001274  080271c8  080271c8  000371c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0802843c  0802843c  000401e8  2**0
                  CONTENTS
  4 .ARM          00000008  0802843c  0802843c  0003843c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08028444  08028444  000401e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000038  08028444  08028444  00038444  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000038  0802847c  0802847c  0003847c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e8  20000000  080284b4  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000005ec  200001e8  0802869c  000401e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200007d4  0802869c  000407d4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000401e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   002ee966  00000000  00000000  00040218  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0001112c  00000000  00000000  0032eb7e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00010320  00000000  00000000  0033fcb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00010178  00000000  00000000  0034ffd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00031d87  00000000  00000000  00360148  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0006245b  00000000  00000000  00391ecf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    001fd69a  00000000  00000000  003f432a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  005f19c4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0004fd7c  00000000  00000000  005f1a18  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001e8 	.word	0x200001e8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080271ac 	.word	0x080271ac

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001ec 	.word	0x200001ec
 800020c:	080271ac 	.word	0x080271ac

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_uldivmod>:
 8000cc8:	b953      	cbnz	r3, 8000ce0 <__aeabi_uldivmod+0x18>
 8000cca:	b94a      	cbnz	r2, 8000ce0 <__aeabi_uldivmod+0x18>
 8000ccc:	2900      	cmp	r1, #0
 8000cce:	bf08      	it	eq
 8000cd0:	2800      	cmpeq	r0, #0
 8000cd2:	bf1c      	itt	ne
 8000cd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cdc:	f000 b9a4 	b.w	8001028 <__aeabi_idiv0>
 8000ce0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ce4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ce8:	f000 f83c 	bl	8000d64 <__udivmoddi4>
 8000cec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf4:	b004      	add	sp, #16
 8000cf6:	4770      	bx	lr

08000cf8 <__aeabi_d2lz>:
 8000cf8:	b538      	push	{r3, r4, r5, lr}
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	4604      	mov	r4, r0
 8000d00:	460d      	mov	r5, r1
 8000d02:	f7ff ff0b 	bl	8000b1c <__aeabi_dcmplt>
 8000d06:	b928      	cbnz	r0, 8000d14 <__aeabi_d2lz+0x1c>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	4629      	mov	r1, r5
 8000d0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d10:	f000 b80a 	b.w	8000d28 <__aeabi_d2ulz>
 8000d14:	4620      	mov	r0, r4
 8000d16:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000d1a:	f000 f805 	bl	8000d28 <__aeabi_d2ulz>
 8000d1e:	4240      	negs	r0, r0
 8000d20:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d24:	bd38      	pop	{r3, r4, r5, pc}
 8000d26:	bf00      	nop

08000d28 <__aeabi_d2ulz>:
 8000d28:	b5d0      	push	{r4, r6, r7, lr}
 8000d2a:	4b0c      	ldr	r3, [pc, #48]	; (8000d5c <__aeabi_d2ulz+0x34>)
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	4606      	mov	r6, r0
 8000d30:	460f      	mov	r7, r1
 8000d32:	f7ff fc81 	bl	8000638 <__aeabi_dmul>
 8000d36:	f7ff ff57 	bl	8000be8 <__aeabi_d2uiz>
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	f7ff fc02 	bl	8000544 <__aeabi_ui2d>
 8000d40:	4b07      	ldr	r3, [pc, #28]	; (8000d60 <__aeabi_d2ulz+0x38>)
 8000d42:	2200      	movs	r2, #0
 8000d44:	f7ff fc78 	bl	8000638 <__aeabi_dmul>
 8000d48:	4602      	mov	r2, r0
 8000d4a:	460b      	mov	r3, r1
 8000d4c:	4630      	mov	r0, r6
 8000d4e:	4639      	mov	r1, r7
 8000d50:	f7ff faba 	bl	80002c8 <__aeabi_dsub>
 8000d54:	f7ff ff48 	bl	8000be8 <__aeabi_d2uiz>
 8000d58:	4621      	mov	r1, r4
 8000d5a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d5c:	3df00000 	.word	0x3df00000
 8000d60:	41f00000 	.word	0x41f00000

08000d64 <__udivmoddi4>:
 8000d64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d68:	9d08      	ldr	r5, [sp, #32]
 8000d6a:	4604      	mov	r4, r0
 8000d6c:	468c      	mov	ip, r1
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	f040 8083 	bne.w	8000e7a <__udivmoddi4+0x116>
 8000d74:	428a      	cmp	r2, r1
 8000d76:	4617      	mov	r7, r2
 8000d78:	d947      	bls.n	8000e0a <__udivmoddi4+0xa6>
 8000d7a:	fab2 f282 	clz	r2, r2
 8000d7e:	b142      	cbz	r2, 8000d92 <__udivmoddi4+0x2e>
 8000d80:	f1c2 0020 	rsb	r0, r2, #32
 8000d84:	fa24 f000 	lsr.w	r0, r4, r0
 8000d88:	4091      	lsls	r1, r2
 8000d8a:	4097      	lsls	r7, r2
 8000d8c:	ea40 0c01 	orr.w	ip, r0, r1
 8000d90:	4094      	lsls	r4, r2
 8000d92:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000d96:	0c23      	lsrs	r3, r4, #16
 8000d98:	fbbc f6f8 	udiv	r6, ip, r8
 8000d9c:	fa1f fe87 	uxth.w	lr, r7
 8000da0:	fb08 c116 	mls	r1, r8, r6, ip
 8000da4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000da8:	fb06 f10e 	mul.w	r1, r6, lr
 8000dac:	4299      	cmp	r1, r3
 8000dae:	d909      	bls.n	8000dc4 <__udivmoddi4+0x60>
 8000db0:	18fb      	adds	r3, r7, r3
 8000db2:	f106 30ff 	add.w	r0, r6, #4294967295
 8000db6:	f080 8119 	bcs.w	8000fec <__udivmoddi4+0x288>
 8000dba:	4299      	cmp	r1, r3
 8000dbc:	f240 8116 	bls.w	8000fec <__udivmoddi4+0x288>
 8000dc0:	3e02      	subs	r6, #2
 8000dc2:	443b      	add	r3, r7
 8000dc4:	1a5b      	subs	r3, r3, r1
 8000dc6:	b2a4      	uxth	r4, r4
 8000dc8:	fbb3 f0f8 	udiv	r0, r3, r8
 8000dcc:	fb08 3310 	mls	r3, r8, r0, r3
 8000dd0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000dd4:	fb00 fe0e 	mul.w	lr, r0, lr
 8000dd8:	45a6      	cmp	lr, r4
 8000dda:	d909      	bls.n	8000df0 <__udivmoddi4+0x8c>
 8000ddc:	193c      	adds	r4, r7, r4
 8000dde:	f100 33ff 	add.w	r3, r0, #4294967295
 8000de2:	f080 8105 	bcs.w	8000ff0 <__udivmoddi4+0x28c>
 8000de6:	45a6      	cmp	lr, r4
 8000de8:	f240 8102 	bls.w	8000ff0 <__udivmoddi4+0x28c>
 8000dec:	3802      	subs	r0, #2
 8000dee:	443c      	add	r4, r7
 8000df0:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000df4:	eba4 040e 	sub.w	r4, r4, lr
 8000df8:	2600      	movs	r6, #0
 8000dfa:	b11d      	cbz	r5, 8000e04 <__udivmoddi4+0xa0>
 8000dfc:	40d4      	lsrs	r4, r2
 8000dfe:	2300      	movs	r3, #0
 8000e00:	e9c5 4300 	strd	r4, r3, [r5]
 8000e04:	4631      	mov	r1, r6
 8000e06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e0a:	b902      	cbnz	r2, 8000e0e <__udivmoddi4+0xaa>
 8000e0c:	deff      	udf	#255	; 0xff
 8000e0e:	fab2 f282 	clz	r2, r2
 8000e12:	2a00      	cmp	r2, #0
 8000e14:	d150      	bne.n	8000eb8 <__udivmoddi4+0x154>
 8000e16:	1bcb      	subs	r3, r1, r7
 8000e18:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000e1c:	fa1f f887 	uxth.w	r8, r7
 8000e20:	2601      	movs	r6, #1
 8000e22:	fbb3 fcfe 	udiv	ip, r3, lr
 8000e26:	0c21      	lsrs	r1, r4, #16
 8000e28:	fb0e 331c 	mls	r3, lr, ip, r3
 8000e2c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e30:	fb08 f30c 	mul.w	r3, r8, ip
 8000e34:	428b      	cmp	r3, r1
 8000e36:	d907      	bls.n	8000e48 <__udivmoddi4+0xe4>
 8000e38:	1879      	adds	r1, r7, r1
 8000e3a:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000e3e:	d202      	bcs.n	8000e46 <__udivmoddi4+0xe2>
 8000e40:	428b      	cmp	r3, r1
 8000e42:	f200 80e9 	bhi.w	8001018 <__udivmoddi4+0x2b4>
 8000e46:	4684      	mov	ip, r0
 8000e48:	1ac9      	subs	r1, r1, r3
 8000e4a:	b2a3      	uxth	r3, r4
 8000e4c:	fbb1 f0fe 	udiv	r0, r1, lr
 8000e50:	fb0e 1110 	mls	r1, lr, r0, r1
 8000e54:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000e58:	fb08 f800 	mul.w	r8, r8, r0
 8000e5c:	45a0      	cmp	r8, r4
 8000e5e:	d907      	bls.n	8000e70 <__udivmoddi4+0x10c>
 8000e60:	193c      	adds	r4, r7, r4
 8000e62:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e66:	d202      	bcs.n	8000e6e <__udivmoddi4+0x10a>
 8000e68:	45a0      	cmp	r8, r4
 8000e6a:	f200 80d9 	bhi.w	8001020 <__udivmoddi4+0x2bc>
 8000e6e:	4618      	mov	r0, r3
 8000e70:	eba4 0408 	sub.w	r4, r4, r8
 8000e74:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000e78:	e7bf      	b.n	8000dfa <__udivmoddi4+0x96>
 8000e7a:	428b      	cmp	r3, r1
 8000e7c:	d909      	bls.n	8000e92 <__udivmoddi4+0x12e>
 8000e7e:	2d00      	cmp	r5, #0
 8000e80:	f000 80b1 	beq.w	8000fe6 <__udivmoddi4+0x282>
 8000e84:	2600      	movs	r6, #0
 8000e86:	e9c5 0100 	strd	r0, r1, [r5]
 8000e8a:	4630      	mov	r0, r6
 8000e8c:	4631      	mov	r1, r6
 8000e8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e92:	fab3 f683 	clz	r6, r3
 8000e96:	2e00      	cmp	r6, #0
 8000e98:	d14a      	bne.n	8000f30 <__udivmoddi4+0x1cc>
 8000e9a:	428b      	cmp	r3, r1
 8000e9c:	d302      	bcc.n	8000ea4 <__udivmoddi4+0x140>
 8000e9e:	4282      	cmp	r2, r0
 8000ea0:	f200 80b8 	bhi.w	8001014 <__udivmoddi4+0x2b0>
 8000ea4:	1a84      	subs	r4, r0, r2
 8000ea6:	eb61 0103 	sbc.w	r1, r1, r3
 8000eaa:	2001      	movs	r0, #1
 8000eac:	468c      	mov	ip, r1
 8000eae:	2d00      	cmp	r5, #0
 8000eb0:	d0a8      	beq.n	8000e04 <__udivmoddi4+0xa0>
 8000eb2:	e9c5 4c00 	strd	r4, ip, [r5]
 8000eb6:	e7a5      	b.n	8000e04 <__udivmoddi4+0xa0>
 8000eb8:	f1c2 0320 	rsb	r3, r2, #32
 8000ebc:	fa20 f603 	lsr.w	r6, r0, r3
 8000ec0:	4097      	lsls	r7, r2
 8000ec2:	fa01 f002 	lsl.w	r0, r1, r2
 8000ec6:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000eca:	40d9      	lsrs	r1, r3
 8000ecc:	4330      	orrs	r0, r6
 8000ece:	0c03      	lsrs	r3, r0, #16
 8000ed0:	fbb1 f6fe 	udiv	r6, r1, lr
 8000ed4:	fa1f f887 	uxth.w	r8, r7
 8000ed8:	fb0e 1116 	mls	r1, lr, r6, r1
 8000edc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ee0:	fb06 f108 	mul.w	r1, r6, r8
 8000ee4:	4299      	cmp	r1, r3
 8000ee6:	fa04 f402 	lsl.w	r4, r4, r2
 8000eea:	d909      	bls.n	8000f00 <__udivmoddi4+0x19c>
 8000eec:	18fb      	adds	r3, r7, r3
 8000eee:	f106 3cff 	add.w	ip, r6, #4294967295
 8000ef2:	f080 808d 	bcs.w	8001010 <__udivmoddi4+0x2ac>
 8000ef6:	4299      	cmp	r1, r3
 8000ef8:	f240 808a 	bls.w	8001010 <__udivmoddi4+0x2ac>
 8000efc:	3e02      	subs	r6, #2
 8000efe:	443b      	add	r3, r7
 8000f00:	1a5b      	subs	r3, r3, r1
 8000f02:	b281      	uxth	r1, r0
 8000f04:	fbb3 f0fe 	udiv	r0, r3, lr
 8000f08:	fb0e 3310 	mls	r3, lr, r0, r3
 8000f0c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f10:	fb00 f308 	mul.w	r3, r0, r8
 8000f14:	428b      	cmp	r3, r1
 8000f16:	d907      	bls.n	8000f28 <__udivmoddi4+0x1c4>
 8000f18:	1879      	adds	r1, r7, r1
 8000f1a:	f100 3cff 	add.w	ip, r0, #4294967295
 8000f1e:	d273      	bcs.n	8001008 <__udivmoddi4+0x2a4>
 8000f20:	428b      	cmp	r3, r1
 8000f22:	d971      	bls.n	8001008 <__udivmoddi4+0x2a4>
 8000f24:	3802      	subs	r0, #2
 8000f26:	4439      	add	r1, r7
 8000f28:	1acb      	subs	r3, r1, r3
 8000f2a:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8000f2e:	e778      	b.n	8000e22 <__udivmoddi4+0xbe>
 8000f30:	f1c6 0c20 	rsb	ip, r6, #32
 8000f34:	fa03 f406 	lsl.w	r4, r3, r6
 8000f38:	fa22 f30c 	lsr.w	r3, r2, ip
 8000f3c:	431c      	orrs	r4, r3
 8000f3e:	fa20 f70c 	lsr.w	r7, r0, ip
 8000f42:	fa01 f306 	lsl.w	r3, r1, r6
 8000f46:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000f4a:	fa21 f10c 	lsr.w	r1, r1, ip
 8000f4e:	431f      	orrs	r7, r3
 8000f50:	0c3b      	lsrs	r3, r7, #16
 8000f52:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f56:	fa1f f884 	uxth.w	r8, r4
 8000f5a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f5e:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000f62:	fb09 fa08 	mul.w	sl, r9, r8
 8000f66:	458a      	cmp	sl, r1
 8000f68:	fa02 f206 	lsl.w	r2, r2, r6
 8000f6c:	fa00 f306 	lsl.w	r3, r0, r6
 8000f70:	d908      	bls.n	8000f84 <__udivmoddi4+0x220>
 8000f72:	1861      	adds	r1, r4, r1
 8000f74:	f109 30ff 	add.w	r0, r9, #4294967295
 8000f78:	d248      	bcs.n	800100c <__udivmoddi4+0x2a8>
 8000f7a:	458a      	cmp	sl, r1
 8000f7c:	d946      	bls.n	800100c <__udivmoddi4+0x2a8>
 8000f7e:	f1a9 0902 	sub.w	r9, r9, #2
 8000f82:	4421      	add	r1, r4
 8000f84:	eba1 010a 	sub.w	r1, r1, sl
 8000f88:	b2bf      	uxth	r7, r7
 8000f8a:	fbb1 f0fe 	udiv	r0, r1, lr
 8000f8e:	fb0e 1110 	mls	r1, lr, r0, r1
 8000f92:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000f96:	fb00 f808 	mul.w	r8, r0, r8
 8000f9a:	45b8      	cmp	r8, r7
 8000f9c:	d907      	bls.n	8000fae <__udivmoddi4+0x24a>
 8000f9e:	19e7      	adds	r7, r4, r7
 8000fa0:	f100 31ff 	add.w	r1, r0, #4294967295
 8000fa4:	d22e      	bcs.n	8001004 <__udivmoddi4+0x2a0>
 8000fa6:	45b8      	cmp	r8, r7
 8000fa8:	d92c      	bls.n	8001004 <__udivmoddi4+0x2a0>
 8000faa:	3802      	subs	r0, #2
 8000fac:	4427      	add	r7, r4
 8000fae:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000fb2:	eba7 0708 	sub.w	r7, r7, r8
 8000fb6:	fba0 8902 	umull	r8, r9, r0, r2
 8000fba:	454f      	cmp	r7, r9
 8000fbc:	46c6      	mov	lr, r8
 8000fbe:	4649      	mov	r1, r9
 8000fc0:	d31a      	bcc.n	8000ff8 <__udivmoddi4+0x294>
 8000fc2:	d017      	beq.n	8000ff4 <__udivmoddi4+0x290>
 8000fc4:	b15d      	cbz	r5, 8000fde <__udivmoddi4+0x27a>
 8000fc6:	ebb3 020e 	subs.w	r2, r3, lr
 8000fca:	eb67 0701 	sbc.w	r7, r7, r1
 8000fce:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000fd2:	40f2      	lsrs	r2, r6
 8000fd4:	ea4c 0202 	orr.w	r2, ip, r2
 8000fd8:	40f7      	lsrs	r7, r6
 8000fda:	e9c5 2700 	strd	r2, r7, [r5]
 8000fde:	2600      	movs	r6, #0
 8000fe0:	4631      	mov	r1, r6
 8000fe2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fe6:	462e      	mov	r6, r5
 8000fe8:	4628      	mov	r0, r5
 8000fea:	e70b      	b.n	8000e04 <__udivmoddi4+0xa0>
 8000fec:	4606      	mov	r6, r0
 8000fee:	e6e9      	b.n	8000dc4 <__udivmoddi4+0x60>
 8000ff0:	4618      	mov	r0, r3
 8000ff2:	e6fd      	b.n	8000df0 <__udivmoddi4+0x8c>
 8000ff4:	4543      	cmp	r3, r8
 8000ff6:	d2e5      	bcs.n	8000fc4 <__udivmoddi4+0x260>
 8000ff8:	ebb8 0e02 	subs.w	lr, r8, r2
 8000ffc:	eb69 0104 	sbc.w	r1, r9, r4
 8001000:	3801      	subs	r0, #1
 8001002:	e7df      	b.n	8000fc4 <__udivmoddi4+0x260>
 8001004:	4608      	mov	r0, r1
 8001006:	e7d2      	b.n	8000fae <__udivmoddi4+0x24a>
 8001008:	4660      	mov	r0, ip
 800100a:	e78d      	b.n	8000f28 <__udivmoddi4+0x1c4>
 800100c:	4681      	mov	r9, r0
 800100e:	e7b9      	b.n	8000f84 <__udivmoddi4+0x220>
 8001010:	4666      	mov	r6, ip
 8001012:	e775      	b.n	8000f00 <__udivmoddi4+0x19c>
 8001014:	4630      	mov	r0, r6
 8001016:	e74a      	b.n	8000eae <__udivmoddi4+0x14a>
 8001018:	f1ac 0c02 	sub.w	ip, ip, #2
 800101c:	4439      	add	r1, r7
 800101e:	e713      	b.n	8000e48 <__udivmoddi4+0xe4>
 8001020:	3802      	subs	r0, #2
 8001022:	443c      	add	r4, r7
 8001024:	e724      	b.n	8000e70 <__udivmoddi4+0x10c>
 8001026:	bf00      	nop

08001028 <__aeabi_idiv0>:
 8001028:	4770      	bx	lr
 800102a:	bf00      	nop

0800102c <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
 800102c:	b580      	push	{r7, lr}
 800102e:	b084      	sub	sp, #16
 8001030:	af00      	add	r7, sp, #0
 8001032:	6078      	str	r0, [r7, #4]
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	60fb      	str	r3, [r7, #12]
      return __builtin_is_constant_evaluated();
 8001038:	2300      	movs	r3, #0
      {
#if __cplusplus >= 201703L
	if (__constant_string_p(__s))
 800103a:	2b00      	cmp	r3, #0
 800103c:	d004      	beq.n	8001048 <_ZNSt11char_traitsIcE6lengthEPKc+0x1c>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
 800103e:	6878      	ldr	r0, [r7, #4]
 8001040:	f000 fcfc 	bl	8001a3c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
 8001044:	4603      	mov	r3, r0
 8001046:	e004      	b.n	8001052 <_ZNSt11char_traitsIcE6lengthEPKc+0x26>
#endif
	return __builtin_strlen(__s);
 8001048:	6878      	ldr	r0, [r7, #4]
 800104a:	f7ff f931 	bl	80002b0 <strlen>
 800104e:	4603      	mov	r3, r0
 8001050:	bf00      	nop
      }
 8001052:	4618      	mov	r0, r3
 8001054:	3710      	adds	r7, #16
 8001056:	46bd      	mov	sp, r7
 8001058:	bd80      	pop	{r7, pc}

0800105a <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800105a:	b480      	push	{r7}
 800105c:	b083      	sub	sp, #12
 800105e:	af00      	add	r7, sp, #0
 8001060:	6078      	str	r0, [r7, #4]
 8001062:	6039      	str	r1, [r7, #0]
 8001064:	683b      	ldr	r3, [r7, #0]
 8001066:	4618      	mov	r0, r3
 8001068:	370c      	adds	r7, #12
 800106a:	46bd      	mov	sp, r7
 800106c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001070:	4770      	bx	lr

08001072 <_ZSt26__throw_bad_variant_accessPKc>:
    friend void __throw_bad_variant_access(const char* __what);
  };

  inline void
  __throw_bad_variant_access(const char* __what)
  { _GLIBCXX_THROW_OR_ABORT(bad_variant_access(__what)); }
 8001072:	b580      	push	{r7, lr}
 8001074:	b082      	sub	sp, #8
 8001076:	af00      	add	r7, sp, #0
 8001078:	6078      	str	r0, [r7, #4]
 800107a:	f022 fe43 	bl	8023d04 <abort>

0800107e <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
 800107e:	b580      	push	{r7, lr}
 8001080:	b082      	sub	sp, #8
 8001082:	af00      	add	r7, sp, #0
 8001084:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_color = _S_red;
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	2200      	movs	r2, #0
 800108a:	701a      	strb	r2, [r3, #0]
      _M_reset();
 800108c:	6878      	ldr	r0, [r7, #4]
 800108e:	f000 f805 	bl	800109c <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
 8001092:	687b      	ldr	r3, [r7, #4]
 8001094:	4618      	mov	r0, r3
 8001096:	3708      	adds	r7, #8
 8001098:	46bd      	mov	sp, r7
 800109a:	bd80      	pop	{r7, pc}

0800109c <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
 800109c:	b480      	push	{r7}
 800109e:	b083      	sub	sp, #12
 80010a0:	af00      	add	r7, sp, #0
 80010a2:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_parent = 0;
 80010a4:	687b      	ldr	r3, [r7, #4]
 80010a6:	2200      	movs	r2, #0
 80010a8:	605a      	str	r2, [r3, #4]
      _M_header._M_left = &_M_header;
 80010aa:	687a      	ldr	r2, [r7, #4]
 80010ac:	687b      	ldr	r3, [r7, #4]
 80010ae:	609a      	str	r2, [r3, #8]
      _M_header._M_right = &_M_header;
 80010b0:	687a      	ldr	r2, [r7, #4]
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	60da      	str	r2, [r3, #12]
      _M_node_count = 0;
 80010b6:	687b      	ldr	r3, [r7, #4]
 80010b8:	2200      	movs	r2, #0
 80010ba:	611a      	str	r2, [r3, #16]
    }
 80010bc:	bf00      	nop
 80010be:	370c      	adds	r7, #12
 80010c0:	46bd      	mov	sp, r7
 80010c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010c6:	4770      	bx	lr

080010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>:
   *
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80010c8:	b480      	push	{r7}
 80010ca:	b083      	sub	sp, #12
 80010cc:	af00      	add	r7, sp, #0
 80010ce:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	4618      	mov	r0, r3
 80010d4:	370c      	adds	r7, #12
 80010d6:	46bd      	mov	sp, r7
 80010d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010dc:	4770      	bx	lr

080010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>:
   *
   *  @tparam _T1  Type of first object.
   *  @tparam _T2  Type of second object.
   */
  template<typename _T1, typename _T2>
    struct pair
 80010de:	b580      	push	{r7, lr}
 80010e0:	b082      	sub	sp, #8
 80010e2:	af00      	add	r7, sp, #0
 80010e4:	6078      	str	r0, [r7, #4]
 80010e6:	687b      	ldr	r3, [r7, #4]
 80010e8:	4618      	mov	r0, r3
 80010ea:	f021 fc7a 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80010ee:	687b      	ldr	r3, [r7, #4]
 80010f0:	4618      	mov	r0, r3
 80010f2:	3708      	adds	r7, #8
 80010f4:	46bd      	mov	sp, r7
 80010f6:	bd80      	pop	{r7, pc}

080010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
 80010f8:	b5b0      	push	{r4, r5, r7, lr}
 80010fa:	b086      	sub	sp, #24
 80010fc:	af00      	add	r7, sp, #0
 80010fe:	60f8      	str	r0, [r7, #12]
 8001100:	60b9      	str	r1, [r7, #8]
 8001102:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001104:	68fc      	ldr	r4, [r7, #12]
 8001106:	68b8      	ldr	r0, [r7, #8]
 8001108:	f000 fd00 	bl	8001b0c <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 800110c:	4605      	mov	r5, r0
 800110e:	f107 0314 	add.w	r3, r7, #20
 8001112:	4618      	mov	r0, r3
 8001114:	f021 f9d4 	bl	80224c0 <_ZNSaIcEC1Ev>
 8001118:	f107 0314 	add.w	r3, r7, #20
 800111c:	461a      	mov	r2, r3
 800111e:	4629      	mov	r1, r5
 8001120:	4620      	mov	r0, r4
 8001122:	f000 fcfe 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001126:	f107 0314 	add.w	r3, r7, #20
 800112a:	4618      	mov	r0, r3
 800112c:	f021 f9c9 	bl	80224c2 <_ZNSaIcED1Ev>
 8001130:	6878      	ldr	r0, [r7, #4]
 8001132:	f7ff ffc9 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001136:	4603      	mov	r3, r0
 8001138:	781a      	ldrb	r2, [r3, #0]
 800113a:	68fb      	ldr	r3, [r7, #12]
 800113c:	761a      	strb	r2, [r3, #24]
 800113e:	68fb      	ldr	r3, [r7, #12]
 8001140:	4618      	mov	r0, r3
 8001142:	3718      	adds	r7, #24
 8001144:	46bd      	mov	sp, r7
 8001146:	bdb0      	pop	{r4, r5, r7, pc}

08001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8001148:	b5b0      	push	{r4, r5, r7, lr}
 800114a:	b086      	sub	sp, #24
 800114c:	af00      	add	r7, sp, #0
 800114e:	60f8      	str	r0, [r7, #12]
 8001150:	60b9      	str	r1, [r7, #8]
 8001152:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001154:	68fc      	ldr	r4, [r7, #12]
 8001156:	68b8      	ldr	r0, [r7, #8]
 8001158:	f000 fd09 	bl	8001b6e <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 800115c:	4605      	mov	r5, r0
 800115e:	f107 0314 	add.w	r3, r7, #20
 8001162:	4618      	mov	r0, r3
 8001164:	f021 f9ac 	bl	80224c0 <_ZNSaIcEC1Ev>
 8001168:	f107 0314 	add.w	r3, r7, #20
 800116c:	461a      	mov	r2, r3
 800116e:	4629      	mov	r1, r5
 8001170:	4620      	mov	r0, r4
 8001172:	f000 fcd6 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001176:	f107 0314 	add.w	r3, r7, #20
 800117a:	4618      	mov	r0, r3
 800117c:	f021 f9a1 	bl	80224c2 <_ZNSaIcED1Ev>
 8001180:	6878      	ldr	r0, [r7, #4]
 8001182:	f7ff ffa1 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001186:	4603      	mov	r3, r0
 8001188:	781a      	ldrb	r2, [r3, #0]
 800118a:	68fb      	ldr	r3, [r7, #12]
 800118c:	761a      	strb	r2, [r3, #24]
 800118e:	68fb      	ldr	r3, [r7, #12]
 8001190:	4618      	mov	r0, r3
 8001192:	3718      	adds	r7, #24
 8001194:	46bd      	mov	sp, r7
 8001196:	bdb0      	pop	{r4, r5, r7, pc}

08001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8001198:	b5b0      	push	{r4, r5, r7, lr}
 800119a:	b086      	sub	sp, #24
 800119c:	af00      	add	r7, sp, #0
 800119e:	60f8      	str	r0, [r7, #12]
 80011a0:	60b9      	str	r1, [r7, #8]
 80011a2:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80011a4:	68fc      	ldr	r4, [r7, #12]
 80011a6:	68b8      	ldr	r0, [r7, #8]
 80011a8:	f000 fcec 	bl	8001b84 <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80011ac:	4605      	mov	r5, r0
 80011ae:	f107 0314 	add.w	r3, r7, #20
 80011b2:	4618      	mov	r0, r3
 80011b4:	f021 f984 	bl	80224c0 <_ZNSaIcEC1Ev>
 80011b8:	f107 0314 	add.w	r3, r7, #20
 80011bc:	461a      	mov	r2, r3
 80011be:	4629      	mov	r1, r5
 80011c0:	4620      	mov	r0, r4
 80011c2:	f000 fcae 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80011c6:	f107 0314 	add.w	r3, r7, #20
 80011ca:	4618      	mov	r0, r3
 80011cc:	f021 f979 	bl	80224c2 <_ZNSaIcED1Ev>
 80011d0:	6878      	ldr	r0, [r7, #4]
 80011d2:	f7ff ff79 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 80011d6:	4603      	mov	r3, r0
 80011d8:	781a      	ldrb	r2, [r3, #0]
 80011da:	68fb      	ldr	r3, [r7, #12]
 80011dc:	761a      	strb	r2, [r3, #24]
 80011de:	68fb      	ldr	r3, [r7, #12]
 80011e0:	4618      	mov	r0, r3
 80011e2:	3718      	adds	r7, #24
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bdb0      	pop	{r4, r5, r7, pc}

080011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80011e8:	b5b0      	push	{r4, r5, r7, lr}
 80011ea:	b086      	sub	sp, #24
 80011ec:	af00      	add	r7, sp, #0
 80011ee:	60f8      	str	r0, [r7, #12]
 80011f0:	60b9      	str	r1, [r7, #8]
 80011f2:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80011f4:	68fc      	ldr	r4, [r7, #12]
 80011f6:	68b8      	ldr	r0, [r7, #8]
 80011f8:	f000 fccf 	bl	8001b9a <_ZSt7forwardIRA3_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80011fc:	4605      	mov	r5, r0
 80011fe:	f107 0314 	add.w	r3, r7, #20
 8001202:	4618      	mov	r0, r3
 8001204:	f021 f95c 	bl	80224c0 <_ZNSaIcEC1Ev>
 8001208:	f107 0314 	add.w	r3, r7, #20
 800120c:	461a      	mov	r2, r3
 800120e:	4629      	mov	r1, r5
 8001210:	4620      	mov	r0, r4
 8001212:	f000 fc86 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001216:	f107 0314 	add.w	r3, r7, #20
 800121a:	4618      	mov	r0, r3
 800121c:	f021 f951 	bl	80224c2 <_ZNSaIcED1Ev>
 8001220:	6878      	ldr	r0, [r7, #4]
 8001222:	f7ff ff51 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001226:	4603      	mov	r3, r0
 8001228:	781a      	ldrb	r2, [r3, #0]
 800122a:	68fb      	ldr	r3, [r7, #12]
 800122c:	761a      	strb	r2, [r3, #24]
 800122e:	68fb      	ldr	r3, [r7, #12]
 8001230:	4618      	mov	r0, r3
 8001232:	3718      	adds	r7, #24
 8001234:	46bd      	mov	sp, r7
 8001236:	bdb0      	pop	{r4, r5, r7, pc}

08001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8001238:	b5b0      	push	{r4, r5, r7, lr}
 800123a:	b086      	sub	sp, #24
 800123c:	af00      	add	r7, sp, #0
 800123e:	60f8      	str	r0, [r7, #12]
 8001240:	60b9      	str	r1, [r7, #8]
 8001242:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001244:	68fc      	ldr	r4, [r7, #12]
 8001246:	68b8      	ldr	r0, [r7, #8]
 8001248:	f000 fcb2 	bl	8001bb0 <_ZSt7forwardIRA4_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 800124c:	4605      	mov	r5, r0
 800124e:	f107 0314 	add.w	r3, r7, #20
 8001252:	4618      	mov	r0, r3
 8001254:	f021 f934 	bl	80224c0 <_ZNSaIcEC1Ev>
 8001258:	f107 0314 	add.w	r3, r7, #20
 800125c:	461a      	mov	r2, r3
 800125e:	4629      	mov	r1, r5
 8001260:	4620      	mov	r0, r4
 8001262:	f000 fc5e 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001266:	f107 0314 	add.w	r3, r7, #20
 800126a:	4618      	mov	r0, r3
 800126c:	f021 f929 	bl	80224c2 <_ZNSaIcED1Ev>
 8001270:	6878      	ldr	r0, [r7, #4]
 8001272:	f7ff ff29 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001276:	4603      	mov	r3, r0
 8001278:	781a      	ldrb	r2, [r3, #0]
 800127a:	68fb      	ldr	r3, [r7, #12]
 800127c:	761a      	strb	r2, [r3, #24]
 800127e:	68fb      	ldr	r3, [r7, #12]
 8001280:	4618      	mov	r0, r3
 8001282:	3718      	adds	r7, #24
 8001284:	46bd      	mov	sp, r7
 8001286:	bdb0      	pop	{r4, r5, r7, pc}

08001288 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E15_S_always_equalEv>:
    { return _Base_type::propagate_on_container_move_assignment::value; }

    static constexpr bool _S_propagate_on_swap()
    { return _Base_type::propagate_on_container_swap::value; }

    static constexpr bool _S_always_equal()
 8001288:	b480      	push	{r7}
 800128a:	af00      	add	r7, sp, #0
    { return _Base_type::is_always_equal::value; }
 800128c:	2301      	movs	r3, #1
 800128e:	4618      	mov	r0, r3
 8001290:	46bd      	mov	sp, r7
 8001292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001296:	4770      	bx	lr

08001298 <_ZN8ExecutorC1Ev>:
#include <Executor.h>

Executor::Executor()
 8001298:	b480      	push	{r7}
 800129a:	b083      	sub	sp, #12
 800129c:	af00      	add	r7, sp, #0
 800129e:	6078      	str	r0, [r7, #4]
{

}
 80012a0:	687b      	ldr	r3, [r7, #4]
 80012a2:	4618      	mov	r0, r3
 80012a4:	370c      	adds	r7, #12
 80012a6:	46bd      	mov	sp, r7
 80012a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ac:	4770      	bx	lr
	...

080012b0 <_ZN8Executor7executeEP7Program>:

void Executor::execute(Program* p)
{
 80012b0:	b580      	push	{r7, lr}
 80012b2:	b082      	sub	sp, #8
 80012b4:	af00      	add	r7, sp, #0
 80012b6:	6078      	str	r0, [r7, #4]
	static Executor exec;
 80012b8:	4b1a      	ldr	r3, [pc, #104]	; (8001324 <_ZN8Executor7executeEP7Program+0x74>)
 80012ba:	781b      	ldrb	r3, [r3, #0]
 80012bc:	f3bf 8f5b 	dmb	ish
 80012c0:	b2db      	uxtb	r3, r3
 80012c2:	f003 0301 	and.w	r3, r3, #1
 80012c6:	2b00      	cmp	r3, #0
 80012c8:	bf0c      	ite	eq
 80012ca:	2301      	moveq	r3, #1
 80012cc:	2300      	movne	r3, #0
 80012ce:	b2db      	uxtb	r3, r3
 80012d0:	2b00      	cmp	r3, #0
 80012d2:	d010      	beq.n	80012f6 <_ZN8Executor7executeEP7Program+0x46>
 80012d4:	4813      	ldr	r0, [pc, #76]	; (8001324 <_ZN8Executor7executeEP7Program+0x74>)
 80012d6:	f021 f8d3 	bl	8022480 <__cxa_guard_acquire>
 80012da:	4603      	mov	r3, r0
 80012dc:	2b00      	cmp	r3, #0
 80012de:	bf14      	ite	ne
 80012e0:	2301      	movne	r3, #1
 80012e2:	2300      	moveq	r3, #0
 80012e4:	b2db      	uxtb	r3, r3
 80012e6:	2b00      	cmp	r3, #0
 80012e8:	d005      	beq.n	80012f6 <_ZN8Executor7executeEP7Program+0x46>
 80012ea:	480f      	ldr	r0, [pc, #60]	; (8001328 <_ZN8Executor7executeEP7Program+0x78>)
 80012ec:	f7ff ffd4 	bl	8001298 <_ZN8ExecutorC1Ev>
 80012f0:	480c      	ldr	r0, [pc, #48]	; (8001324 <_ZN8Executor7executeEP7Program+0x74>)
 80012f2:	f021 f8d1 	bl	8022498 <__cxa_guard_release>
	exec.execute(p->setup);
 80012f6:	687b      	ldr	r3, [r7, #4]
 80012f8:	681b      	ldr	r3, [r3, #0]
 80012fa:	4619      	mov	r1, r3
 80012fc:	480a      	ldr	r0, [pc, #40]	; (8001328 <_ZN8Executor7executeEP7Program+0x78>)
 80012fe:	f000 f815 	bl	800132c <_ZN8Executor7executeEP4Body>
	exec.execute(p->loop);
 8001302:	687b      	ldr	r3, [r7, #4]
 8001304:	685b      	ldr	r3, [r3, #4]
 8001306:	4619      	mov	r1, r3
 8001308:	4807      	ldr	r0, [pc, #28]	; (8001328 <_ZN8Executor7executeEP7Program+0x78>)
 800130a:	f000 f80f 	bl	800132c <_ZN8Executor7executeEP4Body>
	exec.execute(p->finish);
 800130e:	687b      	ldr	r3, [r7, #4]
 8001310:	689b      	ldr	r3, [r3, #8]
 8001312:	4619      	mov	r1, r3
 8001314:	4804      	ldr	r0, [pc, #16]	; (8001328 <_ZN8Executor7executeEP7Program+0x78>)
 8001316:	f000 f809 	bl	800132c <_ZN8Executor7executeEP4Body>
}
 800131a:	bf00      	nop
 800131c:	3708      	adds	r7, #8
 800131e:	46bd      	mov	sp, r7
 8001320:	bd80      	pop	{r7, pc}
 8001322:	bf00      	nop
 8001324:	20000250 	.word	0x20000250
 8001328:	2000024c 	.word	0x2000024c

0800132c <_ZN8Executor7executeEP4Body>:


void Executor::execute(Body* bod)
{
 800132c:	b580      	push	{r7, lr}
 800132e:	b086      	sub	sp, #24
 8001330:	af00      	add	r7, sp, #0
 8001332:	6078      	str	r0, [r7, #4]
 8001334:	6039      	str	r1, [r7, #0]
	for(Statement* s : bod->statements)
 8001336:	683b      	ldr	r3, [r7, #0]
 8001338:	617b      	str	r3, [r7, #20]
 800133a:	6978      	ldr	r0, [r7, #20]
 800133c:	f000 fcd3 	bl	8001ce6 <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>
 8001340:	4603      	mov	r3, r0
 8001342:	60fb      	str	r3, [r7, #12]
 8001344:	6978      	ldr	r0, [r7, #20]
 8001346:	f000 fcde 	bl	8001d06 <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 800134a:	4603      	mov	r3, r0
 800134c:	60bb      	str	r3, [r7, #8]
 800134e:	f107 0208 	add.w	r2, r7, #8
 8001352:	f107 030c 	add.w	r3, r7, #12
 8001356:	4611      	mov	r1, r2
 8001358:	4618      	mov	r0, r3
 800135a:	f000 fce5 	bl	8001d28 <_ZN9__gnu_cxxneIPP9StatementSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800135e:	4603      	mov	r3, r0
 8001360:	2b00      	cmp	r3, #0
 8001362:	d011      	beq.n	8001388 <_ZN8Executor7executeEP4Body+0x5c>
 8001364:	f107 030c 	add.w	r3, r7, #12
 8001368:	4618      	mov	r0, r3
 800136a:	f000 fd05 	bl	8001d78 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>
 800136e:	4603      	mov	r3, r0
 8001370:	681b      	ldr	r3, [r3, #0]
 8001372:	613b      	str	r3, [r7, #16]
	{
		execute(s);
 8001374:	6939      	ldr	r1, [r7, #16]
 8001376:	6878      	ldr	r0, [r7, #4]
 8001378:	f000 f80a 	bl	8001390 <_ZN8Executor7executeEP9Statement>
	for(Statement* s : bod->statements)
 800137c:	f107 030c 	add.w	r3, r7, #12
 8001380:	4618      	mov	r0, r3
 8001382:	f000 fce9 	bl	8001d58 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEppEv>
 8001386:	e7e2      	b.n	800134e <_ZN8Executor7executeEP4Body+0x22>
	}
}
 8001388:	bf00      	nop
 800138a:	3718      	adds	r7, #24
 800138c:	46bd      	mov	sp, r7
 800138e:	bd80      	pop	{r7, pc}

08001390 <_ZN8Executor7executeEP9Statement>:

void Executor::execute(Statement* stat)
{
 8001390:	b580      	push	{r7, lr}
 8001392:	b082      	sub	sp, #8
 8001394:	af00      	add	r7, sp, #0
 8001396:	6078      	str	r0, [r7, #4]
 8001398:	6039      	str	r1, [r7, #0]
	switch(stat->type)
 800139a:	683b      	ldr	r3, [r7, #0]
 800139c:	781b      	ldrb	r3, [r3, #0]
 800139e:	2b04      	cmp	r3, #4
 80013a0:	d848      	bhi.n	8001434 <_ZN8Executor7executeEP9Statement+0xa4>
 80013a2:	a201      	add	r2, pc, #4	; (adr r2, 80013a8 <_ZN8Executor7executeEP9Statement+0x18>)
 80013a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80013a8:	080013bd 	.word	0x080013bd
 80013ac:	080013d5 	.word	0x080013d5
 80013b0:	080013ed 	.word	0x080013ed
 80013b4:	08001405 	.word	0x08001405
 80013b8:	0800141d 	.word	0x0800141d
	{
	case STATEMENT_ASSIGNMENT:
		execute(std::get<Assignment*>(stat->content));
 80013bc:	683b      	ldr	r3, [r7, #0]
 80013be:	3304      	adds	r3, #4
 80013c0:	4618      	mov	r0, r3
 80013c2:	f000 fce5 	bl	8001d90 <_ZSt3getIP10AssignmentJS1_P13Function_callP11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 80013c6:	4603      	mov	r3, r0
 80013c8:	681b      	ldr	r3, [r3, #0]
 80013ca:	4619      	mov	r1, r3
 80013cc:	6878      	ldr	r0, [r7, #4]
 80013ce:	f000 fa2f 	bl	8001830 <_ZN8Executor7executeEP10Assignment>
		break;
 80013d2:	e02f      	b.n	8001434 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_FUNCTION_CALL:
		execute(std::get<Function_call*>(stat->content));
 80013d4:	683b      	ldr	r3, [r7, #0]
 80013d6:	3304      	adds	r3, #4
 80013d8:	4618      	mov	r0, r3
 80013da:	f000 fce5 	bl	8001da8 <_ZSt3getIP13Function_callJP10AssignmentS1_P11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 80013de:	4603      	mov	r3, r0
 80013e0:	681b      	ldr	r3, [r3, #0]
 80013e2:	4619      	mov	r1, r3
 80013e4:	6878      	ldr	r0, [r7, #4]
 80013e6:	f000 f9af 	bl	8001748 <_ZN8Executor7executeEP13Function_call>
		break;
 80013ea:	e023      	b.n	8001434 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_METHOD_CALL:
		execute(std::get<Method_call*>(stat->content));
 80013ec:	683b      	ldr	r3, [r7, #0]
 80013ee:	3304      	adds	r3, #4
 80013f0:	4618      	mov	r0, r3
 80013f2:	f000 fce5 	bl	8001dc0 <_ZSt3getIP11Method_callJP10AssignmentP13Function_callS1_P15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 80013f6:	4603      	mov	r3, r0
 80013f8:	681b      	ldr	r3, [r3, #0]
 80013fa:	4619      	mov	r1, r3
 80013fc:	6878      	ldr	r0, [r7, #4]
 80013fe:	f000 f997 	bl	8001730 <_ZN8Executor7executeEP11Method_call>
		break;
 8001402:	e017      	b.n	8001434 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_WHILE:
		execute(std::get<While_statement*>(stat->content));
 8001404:	683b      	ldr	r3, [r7, #0]
 8001406:	3304      	adds	r3, #4
 8001408:	4618      	mov	r0, r3
 800140a:	f000 fce5 	bl	8001dd8 <_ZSt3getIP15While_statementJP10AssignmentP13Function_callP11Method_callS1_P12If_statementEERT_RSt7variantIJDpT0_EE>
 800140e:	4603      	mov	r3, r0
 8001410:	681b      	ldr	r3, [r3, #0]
 8001412:	4619      	mov	r1, r3
 8001414:	6878      	ldr	r0, [r7, #4]
 8001416:	f000 f95b 	bl	80016d0 <_ZN8Executor7executeEP15While_statement>
		break;
 800141a:	e00b      	b.n	8001434 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_IF:
		execute(std::get<If_statement*>(stat->content));
 800141c:	683b      	ldr	r3, [r7, #0]
 800141e:	3304      	adds	r3, #4
 8001420:	4618      	mov	r0, r3
 8001422:	f000 fce5 	bl	8001df0 <_ZSt3getIP12If_statementJP10AssignmentP13Function_callP11Method_callP15While_statementS1_EERT_RSt7variantIJDpT0_EE>
 8001426:	4603      	mov	r3, r0
 8001428:	681b      	ldr	r3, [r3, #0]
 800142a:	4619      	mov	r1, r3
 800142c:	6878      	ldr	r0, [r7, #4]
 800142e:	f000 f8e3 	bl	80015f8 <_ZN8Executor7executeEP12If_statement>
		break;
 8001432:	bf00      	nop
	}
}
 8001434:	bf00      	nop
 8001436:	3708      	adds	r7, #8
 8001438:	46bd      	mov	sp, r7
 800143a:	bd80      	pop	{r7, pc}

0800143c <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 800143c:	b580      	push	{r7, lr}
 800143e:	b082      	sub	sp, #8
 8001440:	af00      	add	r7, sp, #0
 8001442:	6078      	str	r0, [r7, #4]
 8001444:	687b      	ldr	r3, [r7, #4]
 8001446:	4618      	mov	r0, r3
 8001448:	f000 fcfe 	bl	8001e48 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 800144c:	687b      	ldr	r3, [r7, #4]
 800144e:	4618      	mov	r0, r3
 8001450:	3708      	adds	r7, #8
 8001452:	46bd      	mov	sp, r7
 8001454:	bd80      	pop	{r7, pc}

08001456 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 8001456:	b580      	push	{r7, lr}
 8001458:	b082      	sub	sp, #8
 800145a:	af00      	add	r7, sp, #0
 800145c:	6078      	str	r0, [r7, #4]
 800145e:	687b      	ldr	r3, [r7, #4]
 8001460:	4618      	mov	r0, r3
 8001462:	f7ff ffeb 	bl	800143c <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	4618      	mov	r0, r3
 800146a:	3708      	adds	r7, #8
 800146c:	46bd      	mov	sp, r7
 800146e:	bd80      	pop	{r7, pc}

08001470 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 8001470:	b580      	push	{r7, lr}
 8001472:	b082      	sub	sp, #8
 8001474:	af00      	add	r7, sp, #0
 8001476:	6078      	str	r0, [r7, #4]
 8001478:	687b      	ldr	r3, [r7, #4]
 800147a:	4618      	mov	r0, r3
 800147c:	f7ff ffeb 	bl	8001456 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 8001480:	687b      	ldr	r3, [r7, #4]
 8001482:	4618      	mov	r0, r3
 8001484:	3708      	adds	r7, #8
 8001486:	46bd      	mov	sp, r7
 8001488:	bd80      	pop	{r7, pc}

0800148a <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 800148a:	b580      	push	{r7, lr}
 800148c:	b082      	sub	sp, #8
 800148e:	af00      	add	r7, sp, #0
 8001490:	6078      	str	r0, [r7, #4]
 8001492:	687b      	ldr	r3, [r7, #4]
 8001494:	4618      	mov	r0, r3
 8001496:	f7ff ffeb 	bl	8001470 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 800149a:	687b      	ldr	r3, [r7, #4]
 800149c:	4618      	mov	r0, r3
 800149e:	3708      	adds	r7, #8
 80014a0:	46bd      	mov	sp, r7
 80014a2:	bd80      	pop	{r7, pc}

080014a4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 80014a4:	b580      	push	{r7, lr}
 80014a6:	b082      	sub	sp, #8
 80014a8:	af00      	add	r7, sp, #0
 80014aa:	6078      	str	r0, [r7, #4]
 80014ac:	687b      	ldr	r3, [r7, #4]
 80014ae:	4618      	mov	r0, r3
 80014b0:	f7ff ffeb 	bl	800148a <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 80014b4:	687b      	ldr	r3, [r7, #4]
 80014b6:	4618      	mov	r0, r3
 80014b8:	3708      	adds	r7, #8
 80014ba:	46bd      	mov	sp, r7
 80014bc:	bd80      	pop	{r7, pc}

080014be <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>:
      variant() = default;
      variant(const variant& __rhs) = default;
      variant(variant&&) = default;
      variant& operator=(const variant&) = default;
      variant& operator=(variant&&) = default;
      ~variant() = default;
 80014be:	b580      	push	{r7, lr}
 80014c0:	b082      	sub	sp, #8
 80014c2:	af00      	add	r7, sp, #0
 80014c4:	6078      	str	r0, [r7, #4]
 80014c6:	687b      	ldr	r3, [r7, #4]
 80014c8:	4618      	mov	r0, r3
 80014ca:	f7ff ffeb 	bl	80014a4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 80014ce:	687b      	ldr	r3, [r7, #4]
 80014d0:	4618      	mov	r0, r3
 80014d2:	3708      	adds	r7, #8
 80014d4:	46bd      	mov	sp, r7
 80014d6:	bd80      	pop	{r7, pc}

080014d8 <_ZN6SymbolD1Ev>:
typedef enum
{
	SYMBOL_INT, SYMBOL_FLOAT, SYMBOL_BOOL, SYMBOL_STRING, SYMBOL_CONTAINER,
} symbol_type;

class Symbol
 80014d8:	b580      	push	{r7, lr}
 80014da:	b082      	sub	sp, #8
 80014dc:	af00      	add	r7, sp, #0
 80014de:	6078      	str	r0, [r7, #4]
 80014e0:	687b      	ldr	r3, [r7, #4]
 80014e2:	3304      	adds	r3, #4
 80014e4:	4618      	mov	r0, r3
 80014e6:	f7ff ffea 	bl	80014be <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
 80014ea:	687b      	ldr	r3, [r7, #4]
 80014ec:	4618      	mov	r0, r3
 80014ee:	3708      	adds	r7, #8
 80014f0:	46bd      	mov	sp, r7
 80014f2:	bd80      	pop	{r7, pc}

080014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 80014f4:	b580      	push	{r7, lr}
 80014f6:	b082      	sub	sp, #8
 80014f8:	af00      	add	r7, sp, #0
 80014fa:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 80014fc:	6878      	ldr	r0, [r7, #4]
 80014fe:	f000 f85f 	bl	80015c0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001502:	4603      	mov	r3, r0
    }
 8001504:	4618      	mov	r0, r3
 8001506:	3708      	adds	r7, #8
 8001508:	46bd      	mov	sp, r7
 800150a:	bd80      	pop	{r7, pc}

0800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>:
	}

      constexpr bool valueless_by_exception() const noexcept
      { return !this->_M_valid(); }

      constexpr size_t index() const noexcept
 800150c:	b480      	push	{r7}
 800150e:	b083      	sub	sp, #12
 8001510:	af00      	add	r7, sp, #0
 8001512:	6078      	str	r0, [r7, #4]
      {
	if (this->_M_index ==
 8001514:	687b      	ldr	r3, [r7, #4]
 8001516:	7e1b      	ldrb	r3, [r3, #24]
 8001518:	2bff      	cmp	r3, #255	; 0xff
 800151a:	d102      	bne.n	8001522 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv+0x16>
	    typename _Base::__index_type(variant_npos))
	  return variant_npos;
 800151c:	f04f 33ff 	mov.w	r3, #4294967295
 8001520:	e001      	b.n	8001526 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv+0x1a>
	return this->_M_index;
 8001522:	687b      	ldr	r3, [r7, #4]
 8001524:	7e1b      	ldrb	r3, [r3, #24]
      }
 8001526:	4618      	mov	r0, r3
 8001528:	370c      	adds	r7, #12
 800152a:	46bd      	mov	sp, r7
 800152c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001530:	4770      	bx	lr

08001532 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8001532:	b580      	push	{r7, lr}
 8001534:	b082      	sub	sp, #8
 8001536:	af00      	add	r7, sp, #0
 8001538:	7138      	strb	r0, [r7, #4]
 800153a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800153c:	6838      	ldr	r0, [r7, #0]
 800153e:	f000 fcb0 	bl	8001ea2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8001542:	4603      	mov	r3, r0
 8001544:	4618      	mov	r0, r3
 8001546:	f000 fcb7 	bl	8001eb8 <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800154a:	4603      	mov	r3, r0
 800154c:	4618      	mov	r0, r3
 800154e:	3708      	adds	r7, #8
 8001550:	46bd      	mov	sp, r7
 8001552:	bd80      	pop	{r7, pc}

08001554 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8001554:	b590      	push	{r4, r7, lr}
 8001556:	b083      	sub	sp, #12
 8001558:	af00      	add	r7, sp, #0
 800155a:	7138      	strb	r0, [r7, #4]
 800155c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800155e:	6838      	ldr	r0, [r7, #0]
 8001560:	f000 fc94 	bl	8001e8c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8001564:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8001566:	4619      	mov	r1, r3
 8001568:	4620      	mov	r0, r4
 800156a:	f7ff ffe2 	bl	8001532 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800156e:	4603      	mov	r3, r0
    }
 8001570:	4618      	mov	r0, r3
 8001572:	370c      	adds	r7, #12
 8001574:	46bd      	mov	sp, r7
 8001576:	bd90      	pop	{r4, r7, pc}

08001578 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8001578:	b590      	push	{r4, r7, lr}
 800157a:	b083      	sub	sp, #12
 800157c:	af00      	add	r7, sp, #0
 800157e:	7138      	strb	r0, [r7, #4]
 8001580:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8001582:	6838      	ldr	r0, [r7, #0]
 8001584:	f000 fc77 	bl	8001e76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8001588:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800158a:	4619      	mov	r1, r3
 800158c:	4620      	mov	r0, r4
 800158e:	f7ff ffe1 	bl	8001554 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8001592:	4603      	mov	r3, r0
    }
 8001594:	4618      	mov	r0, r3
 8001596:	370c      	adds	r7, #12
 8001598:	46bd      	mov	sp, r7
 800159a:	bd90      	pop	{r4, r7, pc}

0800159c <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800159c:	b590      	push	{r4, r7, lr}
 800159e:	b083      	sub	sp, #12
 80015a0:	af00      	add	r7, sp, #0
 80015a2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80015a4:	6878      	ldr	r0, [r7, #4]
 80015a6:	f000 fc5b 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80015aa:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80015ac:	4619      	mov	r1, r3
 80015ae:	4620      	mov	r0, r4
 80015b0:	f7ff ffe2 	bl	8001578 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80015b4:	4603      	mov	r3, r0
    }
 80015b6:	4618      	mov	r0, r3
 80015b8:	370c      	adds	r7, #12
 80015ba:	46bd      	mov	sp, r7
 80015bc:	bd90      	pop	{r4, r7, pc}
	...

080015c0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
#undef _VARIANT_RELATION_FUNCTION_TEMPLATE
    };

  template<size_t _Np, typename... _Types>
    constexpr variant_alternative_t<_Np, variant<_Types...>>&
    get(variant<_Types...>& __v)
 80015c0:	b580      	push	{r7, lr}
 80015c2:	b082      	sub	sp, #8
 80015c4:	af00      	add	r7, sp, #0
 80015c6:	6078      	str	r0, [r7, #4]
    {
      static_assert(_Np < sizeof...(_Types),
		    "The index should be in [0, number of alternatives)");
      if (__v.index() != _Np)
 80015c8:	6878      	ldr	r0, [r7, #4]
 80015ca:	f7ff ff9f 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80015ce:	4603      	mov	r3, r0
 80015d0:	2b02      	cmp	r3, #2
 80015d2:	bf14      	ite	ne
 80015d4:	2301      	movne	r3, #1
 80015d6:	2300      	moveq	r3, #0
 80015d8:	b2db      	uxtb	r3, r3
 80015da:	2b00      	cmp	r3, #0
 80015dc:	d002      	beq.n	80015e4 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80015de:	4805      	ldr	r0, [pc, #20]	; (80015f4 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 80015e0:	f7ff fd47 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80015e4:	6878      	ldr	r0, [r7, #4]
 80015e6:	f7ff ffd9 	bl	800159c <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80015ea:	4603      	mov	r3, r0
    }
 80015ec:	4618      	mov	r0, r3
 80015ee:	3708      	adds	r7, #8
 80015f0:	46bd      	mov	sp, r7
 80015f2:	bd80      	pop	{r7, pc}
 80015f4:	080271c8 	.word	0x080271c8

080015f8 <_ZN8Executor7executeEP12If_statement>:

void Executor::execute(If_statement* ifst)
{
 80015f8:	b590      	push	{r4, r7, lr}
 80015fa:	b08d      	sub	sp, #52	; 0x34
 80015fc:	af00      	add	r7, sp, #0
 80015fe:	6078      	str	r0, [r7, #4]
 8001600:	6039      	str	r1, [r7, #0]
	for(unsigned int i = 0; i < ifst->conditions.size(); ++i)
 8001602:	2300      	movs	r3, #0
 8001604:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001606:	683b      	ldr	r3, [r7, #0]
 8001608:	4618      	mov	r0, r3
 800160a:	f000 fbfd 	bl	8001e08 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 800160e:	4602      	mov	r2, r0
 8001610:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001612:	4293      	cmp	r3, r2
 8001614:	bf34      	ite	cc
 8001616:	2301      	movcc	r3, #1
 8001618:	2300      	movcs	r3, #0
 800161a:	b2db      	uxtb	r3, r3
 800161c:	2b00      	cmp	r3, #0
 800161e:	d037      	beq.n	8001690 <_ZN8Executor7executeEP12If_statement+0x98>
	{
		Symbol condition_symbol = EVALUATE(ifst->conditions[i]);
 8001620:	f00a fbfe 	bl	800be20 <_ZN21Expression_calculator12get_instanceEv>
 8001624:	4604      	mov	r4, r0
 8001626:	683b      	ldr	r3, [r7, #0]
 8001628:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800162a:	4618      	mov	r0, r3
 800162c:	f000 fbfc 	bl	8001e28 <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>
 8001630:	4603      	mov	r3, r0
 8001632:	681a      	ldr	r2, [r3, #0]
 8001634:	f107 0308 	add.w	r3, r7, #8
 8001638:	4621      	mov	r1, r4
 800163a:	4618      	mov	r0, r3
 800163c:	f00a fc84 	bl	800bf48 <_ZN21Expression_calculator8evaluateEP10Expression>
		bool condition = std::get<bool>(condition_symbol.value);
 8001640:	f107 0308 	add.w	r3, r7, #8
 8001644:	3304      	adds	r3, #4
 8001646:	4618      	mov	r0, r3
 8001648:	f7ff ff54 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 800164c:	4603      	mov	r3, r0
 800164e:	781b      	ldrb	r3, [r3, #0]
 8001650:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
		if(condition)
 8001654:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8001658:	2b00      	cmp	r3, #0
 800165a:	d00d      	beq.n	8001678 <_ZN8Executor7executeEP12If_statement+0x80>
		{
			execute(ifst->if_bodies[i]);
 800165c:	683b      	ldr	r3, [r7, #0]
 800165e:	330c      	adds	r3, #12
 8001660:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8001662:	4618      	mov	r0, r3
 8001664:	f000 fc33 	bl	8001ece <_ZNSt6vectorIP4BodySaIS1_EEixEj>
 8001668:	4603      	mov	r3, r0
 800166a:	681b      	ldr	r3, [r3, #0]
 800166c:	4619      	mov	r1, r3
 800166e:	6878      	ldr	r0, [r7, #4]
 8001670:	f7ff fe5c 	bl	800132c <_ZN8Executor7executeEP4Body>
 8001674:	2400      	movs	r4, #0
			return;
 8001676:	e000      	b.n	800167a <_ZN8Executor7executeEP12If_statement+0x82>
		Symbol condition_symbol = EVALUATE(ifst->conditions[i]);
 8001678:	2401      	movs	r4, #1
 800167a:	f107 0308 	add.w	r3, r7, #8
 800167e:	4618      	mov	r0, r3
 8001680:	f7ff ff2a 	bl	80014d8 <_ZN6SymbolD1Ev>
 8001684:	2c01      	cmp	r4, #1
 8001686:	d120      	bne.n	80016ca <_ZN8Executor7executeEP12If_statement+0xd2>
	for(unsigned int i = 0; i < ifst->conditions.size(); ++i)
 8001688:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800168a:	3301      	adds	r3, #1
 800168c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800168e:	e7ba      	b.n	8001606 <_ZN8Executor7executeEP12If_statement+0xe>
		}
	}

	if(ifst->conditions.size() < ifst->if_bodies.size())
 8001690:	683b      	ldr	r3, [r7, #0]
 8001692:	4618      	mov	r0, r3
 8001694:	f000 fbb8 	bl	8001e08 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8001698:	4604      	mov	r4, r0
 800169a:	683b      	ldr	r3, [r7, #0]
 800169c:	330c      	adds	r3, #12
 800169e:	4618      	mov	r0, r3
 80016a0:	f000 fc25 	bl	8001eee <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 80016a4:	4603      	mov	r3, r0
 80016a6:	429c      	cmp	r4, r3
 80016a8:	bf34      	ite	cc
 80016aa:	2301      	movcc	r3, #1
 80016ac:	2300      	movcs	r3, #0
 80016ae:	b2db      	uxtb	r3, r3
 80016b0:	2b00      	cmp	r3, #0
 80016b2:	d00a      	beq.n	80016ca <_ZN8Executor7executeEP12If_statement+0xd2>
	{
		execute(ifst->if_bodies.back());
 80016b4:	683b      	ldr	r3, [r7, #0]
 80016b6:	330c      	adds	r3, #12
 80016b8:	4618      	mov	r0, r3
 80016ba:	f000 fc28 	bl	8001f0e <_ZNSt6vectorIP4BodySaIS1_EE4backEv>
 80016be:	4603      	mov	r3, r0
 80016c0:	681b      	ldr	r3, [r3, #0]
 80016c2:	4619      	mov	r1, r3
 80016c4:	6878      	ldr	r0, [r7, #4]
 80016c6:	f7ff fe31 	bl	800132c <_ZN8Executor7executeEP4Body>
	}
}
 80016ca:	3734      	adds	r7, #52	; 0x34
 80016cc:	46bd      	mov	sp, r7
 80016ce:	bd90      	pop	{r4, r7, pc}

080016d0 <_ZN8Executor7executeEP15While_statement>:

void Executor::execute(While_statement* whist)
{
 80016d0:	b580      	push	{r7, lr}
 80016d2:	b08c      	sub	sp, #48	; 0x30
 80016d4:	af00      	add	r7, sp, #0
 80016d6:	6078      	str	r0, [r7, #4]
 80016d8:	6039      	str	r1, [r7, #0]
	bool condition = true;
 80016da:	2301      	movs	r3, #1
 80016dc:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	while(condition)
 80016e0:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80016e4:	2b00      	cmp	r3, #0
 80016e6:	d01f      	beq.n	8001728 <_ZN8Executor7executeEP15While_statement+0x58>
	{
		execute(whist->while_body);
 80016e8:	683b      	ldr	r3, [r7, #0]
 80016ea:	685b      	ldr	r3, [r3, #4]
 80016ec:	4619      	mov	r1, r3
 80016ee:	6878      	ldr	r0, [r7, #4]
 80016f0:	f7ff fe1c 	bl	800132c <_ZN8Executor7executeEP4Body>
		Symbol condition_symbol = EVALUATE(whist->condition);
 80016f4:	f00a fb94 	bl	800be20 <_ZN21Expression_calculator12get_instanceEv>
 80016f8:	4601      	mov	r1, r0
 80016fa:	683b      	ldr	r3, [r7, #0]
 80016fc:	681a      	ldr	r2, [r3, #0]
 80016fe:	f107 030c 	add.w	r3, r7, #12
 8001702:	4618      	mov	r0, r3
 8001704:	f00a fc20 	bl	800bf48 <_ZN21Expression_calculator8evaluateEP10Expression>
		condition = std::get<bool>(condition_symbol.value);
 8001708:	f107 030c 	add.w	r3, r7, #12
 800170c:	3304      	adds	r3, #4
 800170e:	4618      	mov	r0, r3
 8001710:	f7ff fef0 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8001714:	4603      	mov	r3, r0
 8001716:	781b      	ldrb	r3, [r3, #0]
 8001718:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		Symbol condition_symbol = EVALUATE(whist->condition);
 800171c:	f107 030c 	add.w	r3, r7, #12
 8001720:	4618      	mov	r0, r3
 8001722:	f7ff fed9 	bl	80014d8 <_ZN6SymbolD1Ev>
	while(condition)
 8001726:	e7db      	b.n	80016e0 <_ZN8Executor7executeEP15While_statement+0x10>
	}
}
 8001728:	bf00      	nop
 800172a:	3730      	adds	r7, #48	; 0x30
 800172c:	46bd      	mov	sp, r7
 800172e:	bd80      	pop	{r7, pc}

08001730 <_ZN8Executor7executeEP11Method_call>:

void Executor::execute(Method_call* mcall)
{
 8001730:	b580      	push	{r7, lr}
 8001732:	b082      	sub	sp, #8
 8001734:	af00      	add	r7, sp, #0
 8001736:	6078      	str	r0, [r7, #4]
 8001738:	6039      	str	r1, [r7, #0]
	Method_handler::run_method(mcall);
 800173a:	6838      	ldr	r0, [r7, #0]
 800173c:	f010 faf2 	bl	8011d24 <_ZN14Method_handler10run_methodEP11Method_call>
}
 8001740:	bf00      	nop
 8001742:	3708      	adds	r7, #8
 8001744:	46bd      	mov	sp, r7
 8001746:	bd80      	pop	{r7, pc}

08001748 <_ZN8Executor7executeEP13Function_call>:

void Executor::execute(Function_call* fcall)
{
 8001748:	b580      	push	{r7, lr}
 800174a:	b08a      	sub	sp, #40	; 0x28
 800174c:	af00      	add	r7, sp, #0
 800174e:	6078      	str	r0, [r7, #4]
 8001750:	6039      	str	r1, [r7, #0]
	Function_handler::run_function(fcall);
 8001752:	f107 0308 	add.w	r3, r7, #8
 8001756:	6839      	ldr	r1, [r7, #0]
 8001758:	4618      	mov	r0, r3
 800175a:	f00c fb31 	bl	800ddc0 <_ZN16Function_handler12run_functionEP13Function_call>
 800175e:	f107 0308 	add.w	r3, r7, #8
 8001762:	4618      	mov	r0, r3
 8001764:	f7ff feb8 	bl	80014d8 <_ZN6SymbolD1Ev>
}
 8001768:	bf00      	nop
 800176a:	3728      	adds	r7, #40	; 0x28
 800176c:	46bd      	mov	sp, r7
 800176e:	bd80      	pop	{r7, pc}

08001770 <_ZN8VariableC1ERKS_>:
	VARIABLE_LOCAL,
	VARIABLE_ARG,
	VARIABLE_PAR,
}variable_type;

class Variable
 8001770:	b580      	push	{r7, lr}
 8001772:	b082      	sub	sp, #8
 8001774:	af00      	add	r7, sp, #0
 8001776:	6078      	str	r0, [r7, #4]
 8001778:	6039      	str	r1, [r7, #0]
 800177a:	683b      	ldr	r3, [r7, #0]
 800177c:	781a      	ldrb	r2, [r3, #0]
 800177e:	687b      	ldr	r3, [r7, #4]
 8001780:	701a      	strb	r2, [r3, #0]
 8001782:	687b      	ldr	r3, [r7, #4]
 8001784:	1d1a      	adds	r2, r3, #4
 8001786:	683b      	ldr	r3, [r7, #0]
 8001788:	3304      	adds	r3, #4
 800178a:	4619      	mov	r1, r3
 800178c:	4610      	mov	r0, r2
 800178e:	f021 faed 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8001792:	683b      	ldr	r3, [r7, #0]
 8001794:	69da      	ldr	r2, [r3, #28]
 8001796:	687b      	ldr	r3, [r7, #4]
 8001798:	61da      	str	r2, [r3, #28]
 800179a:	687b      	ldr	r3, [r7, #4]
 800179c:	4618      	mov	r0, r3
 800179e:	3708      	adds	r7, #8
 80017a0:	46bd      	mov	sp, r7
 80017a2:	bd80      	pop	{r7, pc}

080017a4 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 80017a4:	b580      	push	{r7, lr}
 80017a6:	b082      	sub	sp, #8
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	6078      	str	r0, [r7, #4]
 80017ac:	6039      	str	r1, [r7, #0]
 80017ae:	687b      	ldr	r3, [r7, #4]
 80017b0:	683a      	ldr	r2, [r7, #0]
 80017b2:	4611      	mov	r1, r2
 80017b4:	4618      	mov	r0, r3
 80017b6:	f000 ff1d 	bl	80025f4 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>
 80017ba:	687b      	ldr	r3, [r7, #4]
 80017bc:	4618      	mov	r0, r3
 80017be:	3708      	adds	r7, #8
 80017c0:	46bd      	mov	sp, r7
 80017c2:	bd80      	pop	{r7, pc}

080017c4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 80017c4:	b580      	push	{r7, lr}
 80017c6:	b082      	sub	sp, #8
 80017c8:	af00      	add	r7, sp, #0
 80017ca:	6078      	str	r0, [r7, #4]
 80017cc:	6039      	str	r1, [r7, #0]
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	683a      	ldr	r2, [r7, #0]
 80017d2:	4611      	mov	r1, r2
 80017d4:	4618      	mov	r0, r3
 80017d6:	f7ff ffe5 	bl	80017a4 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	4618      	mov	r0, r3
 80017de:	3708      	adds	r7, #8
 80017e0:	46bd      	mov	sp, r7
 80017e2:	bd80      	pop	{r7, pc}

080017e4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSERKSA_>:
    class variant
 80017e4:	b580      	push	{r7, lr}
 80017e6:	b082      	sub	sp, #8
 80017e8:	af00      	add	r7, sp, #0
 80017ea:	6078      	str	r0, [r7, #4]
 80017ec:	6039      	str	r1, [r7, #0]
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	683a      	ldr	r2, [r7, #0]
 80017f2:	4611      	mov	r1, r2
 80017f4:	4618      	mov	r0, r3
 80017f6:	f7ff ffe5 	bl	80017c4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	4618      	mov	r0, r3
 80017fe:	3708      	adds	r7, #8
 8001800:	46bd      	mov	sp, r7
 8001802:	bd80      	pop	{r7, pc}

08001804 <_ZN6SymbolaSERKS_>:
 8001804:	b580      	push	{r7, lr}
 8001806:	b082      	sub	sp, #8
 8001808:	af00      	add	r7, sp, #0
 800180a:	6078      	str	r0, [r7, #4]
 800180c:	6039      	str	r1, [r7, #0]
 800180e:	683b      	ldr	r3, [r7, #0]
 8001810:	781a      	ldrb	r2, [r3, #0]
 8001812:	687b      	ldr	r3, [r7, #4]
 8001814:	701a      	strb	r2, [r3, #0]
 8001816:	683b      	ldr	r3, [r7, #0]
 8001818:	1d1a      	adds	r2, r3, #4
 800181a:	687b      	ldr	r3, [r7, #4]
 800181c:	3304      	adds	r3, #4
 800181e:	4611      	mov	r1, r2
 8001820:	4618      	mov	r0, r3
 8001822:	f7ff ffdf 	bl	80017e4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSERKSA_>
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	4618      	mov	r0, r3
 800182a:	3708      	adds	r7, #8
 800182c:	46bd      	mov	sp, r7
 800182e:	bd80      	pop	{r7, pc}

08001830 <_ZN8Executor7executeEP10Assignment>:

void Executor::execute(Assignment* assign)
{
 8001830:	b590      	push	{r4, r7, lr}
 8001832:	b09d      	sub	sp, #116	; 0x74
 8001834:	af00      	add	r7, sp, #0
 8001836:	6078      	str	r0, [r7, #4]
 8001838:	6039      	str	r1, [r7, #0]
	Symbol& variable = Variable_handler::get_instance().get_symbol(*assign->var);
 800183a:	f017 f837 	bl	80188ac <_ZN16Variable_handler12get_instanceEv>
 800183e:	4604      	mov	r4, r0
 8001840:	683b      	ldr	r3, [r7, #0]
 8001842:	681a      	ldr	r2, [r3, #0]
 8001844:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001848:	4611      	mov	r1, r2
 800184a:	4618      	mov	r0, r3
 800184c:	f7ff ff90 	bl	8001770 <_ZN8VariableC1ERKS_>
 8001850:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001854:	4619      	mov	r1, r3
 8001856:	4620      	mov	r0, r4
 8001858:	f017 f8fd 	bl	8018a56 <_ZN16Variable_handler10get_symbolE8Variable>
 800185c:	66f8      	str	r0, [r7, #108]	; 0x6c
 800185e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001862:	4618      	mov	r0, r3
 8001864:	f014 fe32 	bl	80164cc <_ZN8VariableD1Ev>
	Symbol value = EVALUATE(assign->value);
 8001868:	f00a fada 	bl	800be20 <_ZN21Expression_calculator12get_instanceEv>
 800186c:	4601      	mov	r1, r0
 800186e:	683b      	ldr	r3, [r7, #0]
 8001870:	685a      	ldr	r2, [r3, #4]
 8001872:	f107 0308 	add.w	r3, r7, #8
 8001876:	4618      	mov	r0, r3
 8001878:	f00a fb66 	bl	800bf48 <_ZN21Expression_calculator8evaluateEP10Expression>

	if(assign->var->index)
 800187c:	683b      	ldr	r3, [r7, #0]
 800187e:	681b      	ldr	r3, [r3, #0]
 8001880:	69db      	ldr	r3, [r3, #28]
 8001882:	2b00      	cmp	r3, #0
 8001884:	d029      	beq.n	80018da <_ZN8Executor7executeEP10Assignment+0xaa>
	{
		variable.type = SYMBOL_CONTAINER;
 8001886:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001888:	2204      	movs	r2, #4
 800188a:	701a      	strb	r2, [r3, #0]
		int idx = check_index(assign->var->index);
 800188c:	683b      	ldr	r3, [r7, #0]
 800188e:	681b      	ldr	r3, [r3, #0]
 8001890:	69db      	ldr	r3, [r3, #28]
 8001892:	4619      	mov	r1, r3
 8001894:	6878      	ldr	r0, [r7, #4]
 8001896:	f000 f879 	bl	800198c <_ZN8Executor11check_indexEP10Expression>
 800189a:	66b8      	str	r0, [r7, #104]	; 0x68
		variable.resize(idx + 1);
 800189c:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800189e:	3301      	adds	r3, #1
 80018a0:	4619      	mov	r1, r3
 80018a2:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 80018a4:	f016 f892 	bl	80179cc <_ZN6Symbol6resizeEi>
		variable[idx] = value;
 80018a8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80018ac:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 80018ae:	4618      	mov	r0, r3
 80018b0:	f015 f83a 	bl	8016928 <_ZN6SymbolC1Ei>
 80018b4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80018b8:	4619      	mov	r1, r3
 80018ba:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 80018bc:	f015 f8fe 	bl	8016abc <_ZN6SymbolixES_>
 80018c0:	4602      	mov	r2, r0
 80018c2:	f107 0308 	add.w	r3, r7, #8
 80018c6:	4619      	mov	r1, r3
 80018c8:	4610      	mov	r0, r2
 80018ca:	f7ff ff9b 	bl	8001804 <_ZN6SymbolaSERKS_>
 80018ce:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80018d2:	4618      	mov	r0, r3
 80018d4:	f7ff fe00 	bl	80014d8 <_ZN6SymbolD1Ev>
 80018d8:	e005      	b.n	80018e6 <_ZN8Executor7executeEP10Assignment+0xb6>
	}
	else
	{
		variable = value;
 80018da:	f107 0308 	add.w	r3, r7, #8
 80018de:	4619      	mov	r1, r3
 80018e0:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 80018e2:	f7ff ff8f 	bl	8001804 <_ZN6SymbolaSERKS_>
	Symbol value = EVALUATE(assign->value);
 80018e6:	f107 0308 	add.w	r3, r7, #8
 80018ea:	4618      	mov	r0, r3
 80018ec:	f7ff fdf4 	bl	80014d8 <_ZN6SymbolD1Ev>
	}
}
 80018f0:	bf00      	nop
 80018f2:	3774      	adds	r7, #116	; 0x74
 80018f4:	46bd      	mov	sp, r7
 80018f6:	bd90      	pop	{r4, r7, pc}

080018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 80018f8:	b580      	push	{r7, lr}
 80018fa:	b082      	sub	sp, #8
 80018fc:	af00      	add	r7, sp, #0
 80018fe:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8001900:	6878      	ldr	r0, [r7, #4]
 8001902:	f000 f827 	bl	8001954 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001906:	4603      	mov	r3, r0
    }
 8001908:	4618      	mov	r0, r3
 800190a:	3708      	adds	r7, #8
 800190c:	46bd      	mov	sp, r7
 800190e:	bd80      	pop	{r7, pc}

08001910 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8001910:	b580      	push	{r7, lr}
 8001912:	b082      	sub	sp, #8
 8001914:	af00      	add	r7, sp, #0
 8001916:	7138      	strb	r0, [r7, #4]
 8001918:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800191a:	6838      	ldr	r0, [r7, #0]
 800191c:	f000 faab 	bl	8001e76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8001920:	4603      	mov	r3, r0
 8001922:	4618      	mov	r0, r3
 8001924:	f000 fe7c 	bl	8002620 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8001928:	4603      	mov	r3, r0
 800192a:	4618      	mov	r0, r3
 800192c:	3708      	adds	r7, #8
 800192e:	46bd      	mov	sp, r7
 8001930:	bd80      	pop	{r7, pc}

08001932 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8001932:	b590      	push	{r4, r7, lr}
 8001934:	b083      	sub	sp, #12
 8001936:	af00      	add	r7, sp, #0
 8001938:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800193a:	6878      	ldr	r0, [r7, #4]
 800193c:	f000 fa90 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8001940:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8001942:	4619      	mov	r1, r3
 8001944:	4620      	mov	r0, r4
 8001946:	f7ff ffe3 	bl	8001910 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800194a:	4603      	mov	r3, r0
    }
 800194c:	4618      	mov	r0, r3
 800194e:	370c      	adds	r7, #12
 8001950:	46bd      	mov	sp, r7
 8001952:	bd90      	pop	{r4, r7, pc}

08001954 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8001954:	b580      	push	{r7, lr}
 8001956:	b082      	sub	sp, #8
 8001958:	af00      	add	r7, sp, #0
 800195a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800195c:	6878      	ldr	r0, [r7, #4]
 800195e:	f7ff fdd5 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8001962:	4603      	mov	r3, r0
 8001964:	2b00      	cmp	r3, #0
 8001966:	bf14      	ite	ne
 8001968:	2301      	movne	r3, #1
 800196a:	2300      	moveq	r3, #0
 800196c:	b2db      	uxtb	r3, r3
 800196e:	2b00      	cmp	r3, #0
 8001970:	d002      	beq.n	8001978 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8001972:	4805      	ldr	r0, [pc, #20]	; (8001988 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8001974:	f7ff fb7d 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8001978:	6878      	ldr	r0, [r7, #4]
 800197a:	f7ff ffda 	bl	8001932 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800197e:	4603      	mov	r3, r0
    }
 8001980:	4618      	mov	r0, r3
 8001982:	3708      	adds	r7, #8
 8001984:	46bd      	mov	sp, r7
 8001986:	bd80      	pop	{r7, pc}
 8001988:	080271c8 	.word	0x080271c8

0800198c <_ZN8Executor11check_indexEP10Expression>:

int Executor::check_index(Expression* exp)
{
 800198c:	b590      	push	{r4, r7, lr}
 800198e:	b093      	sub	sp, #76	; 0x4c
 8001990:	af00      	add	r7, sp, #0
 8001992:	6078      	str	r0, [r7, #4]
 8001994:	6039      	str	r1, [r7, #0]
	Symbol idx_symbol = EVALUATE(exp);
 8001996:	f00a fa43 	bl	800be20 <_ZN21Expression_calculator12get_instanceEv>
 800199a:	4601      	mov	r1, r0
 800199c:	f107 0308 	add.w	r3, r7, #8
 80019a0:	683a      	ldr	r2, [r7, #0]
 80019a2:	4618      	mov	r0, r3
 80019a4:	f00a fad0 	bl	800bf48 <_ZN21Expression_calculator8evaluateEP10Expression>
	int i = std::get<int>(idx_symbol.value);
 80019a8:	f107 0308 	add.w	r3, r7, #8
 80019ac:	3304      	adds	r3, #4
 80019ae:	4618      	mov	r0, r3
 80019b0:	f7ff ffa2 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80019b4:	4603      	mov	r3, r0
 80019b6:	681b      	ldr	r3, [r3, #0]
 80019b8:	647b      	str	r3, [r7, #68]	; 0x44
	if(i < 0)
 80019ba:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80019bc:	2b00      	cmp	r3, #0
 80019be:	da1b      	bge.n	80019f8 <_ZN8Executor11check_indexEP10Expression+0x6c>
	{
		Transmitter::report_error("index can not be negative");
 80019c0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80019c4:	4618      	mov	r0, r3
 80019c6:	f020 fd7b 	bl	80224c0 <_ZNSaIcEC1Ev>
 80019ca:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80019ce:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80019d2:	490f      	ldr	r1, [pc, #60]	; (8001a10 <_ZN8Executor11check_indexEP10Expression+0x84>)
 80019d4:	4618      	mov	r0, r3
 80019d6:	f000 f8a4 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80019da:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80019de:	4618      	mov	r0, r3
 80019e0:	f016 fe36 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80019e4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80019e8:	4618      	mov	r0, r3
 80019ea:	f020 fffa 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80019ee:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80019f2:	4618      	mov	r0, r3
 80019f4:	f020 fd65 	bl	80224c2 <_ZNSaIcED1Ev>
	}
	return i;
 80019f8:	6c7c      	ldr	r4, [r7, #68]	; 0x44
	Symbol idx_symbol = EVALUATE(exp);
 80019fa:	f107 0308 	add.w	r3, r7, #8
 80019fe:	4618      	mov	r0, r3
 8001a00:	f7ff fd6a 	bl	80014d8 <_ZN6SymbolD1Ev>
	return i;
 8001a04:	4623      	mov	r3, r4
}
 8001a06:	4618      	mov	r0, r3
 8001a08:	374c      	adds	r7, #76	; 0x4c
 8001a0a:	46bd      	mov	sp, r7
 8001a0c:	bd90      	pop	{r4, r7, pc}
 8001a0e:	bf00      	nop
 8001a10:	080271dc 	.word	0x080271dc

08001a14 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
 8001a14:	b480      	push	{r7}
 8001a16:	b083      	sub	sp, #12
 8001a18:	af00      	add	r7, sp, #0
 8001a1a:	6078      	str	r0, [r7, #4]
 8001a1c:	6039      	str	r1, [r7, #0]
      { return __c1 == __c2; }
 8001a1e:	687b      	ldr	r3, [r7, #4]
 8001a20:	781a      	ldrb	r2, [r3, #0]
 8001a22:	683b      	ldr	r3, [r7, #0]
 8001a24:	781b      	ldrb	r3, [r3, #0]
 8001a26:	429a      	cmp	r2, r3
 8001a28:	bf0c      	ite	eq
 8001a2a:	2301      	moveq	r3, #1
 8001a2c:	2300      	movne	r3, #0
 8001a2e:	b2db      	uxtb	r3, r3
 8001a30:	4618      	mov	r0, r3
 8001a32:	370c      	adds	r7, #12
 8001a34:	46bd      	mov	sp, r7
 8001a36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a3a:	4770      	bx	lr

08001a3c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
 8001a3c:	b580      	push	{r7, lr}
 8001a3e:	b084      	sub	sp, #16
 8001a40:	af00      	add	r7, sp, #0
 8001a42:	6078      	str	r0, [r7, #4]
      std::size_t __i = 0;
 8001a44:	2300      	movs	r3, #0
 8001a46:	60fb      	str	r3, [r7, #12]
      while (!eq(__p[__i], char_type()))
 8001a48:	687a      	ldr	r2, [r7, #4]
 8001a4a:	68fb      	ldr	r3, [r7, #12]
 8001a4c:	4413      	add	r3, r2
 8001a4e:	2200      	movs	r2, #0
 8001a50:	72fa      	strb	r2, [r7, #11]
 8001a52:	f107 020b 	add.w	r2, r7, #11
 8001a56:	4611      	mov	r1, r2
 8001a58:	4618      	mov	r0, r3
 8001a5a:	f7ff ffdb 	bl	8001a14 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
 8001a5e:	4603      	mov	r3, r0
 8001a60:	f083 0301 	eor.w	r3, r3, #1
 8001a64:	b2db      	uxtb	r3, r3
 8001a66:	2b00      	cmp	r3, #0
 8001a68:	d003      	beq.n	8001a72 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x36>
        ++__i;
 8001a6a:	68fb      	ldr	r3, [r7, #12]
 8001a6c:	3301      	adds	r3, #1
 8001a6e:	60fb      	str	r3, [r7, #12]
      while (!eq(__p[__i], char_type()))
 8001a70:	e7ea      	b.n	8001a48 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0xc>
      return __i;
 8001a72:	68fb      	ldr	r3, [r7, #12]
    }
 8001a74:	4618      	mov	r0, r3
 8001a76:	3710      	adds	r7, #16
 8001a78:	46bd      	mov	sp, r7
 8001a7a:	bd80      	pop	{r7, pc}

08001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
 8001a7c:	b580      	push	{r7, lr}
 8001a7e:	b082      	sub	sp, #8
 8001a80:	af00      	add	r7, sp, #0
 8001a82:	6078      	str	r0, [r7, #4]
 8001a84:	6878      	ldr	r0, [r7, #4]
 8001a86:	f000 fde5 	bl	8002654 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1Ev>
 8001a8a:	687b      	ldr	r3, [r7, #4]
 8001a8c:	4618      	mov	r0, r3
 8001a8e:	3708      	adds	r7, #8
 8001a90:	46bd      	mov	sp, r7
 8001a92:	bd80      	pop	{r7, pc}

08001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

      ~allocator() _GLIBCXX_NOTHROW { }
 8001a94:	b580      	push	{r7, lr}
 8001a96:	b082      	sub	sp, #8
 8001a98:	af00      	add	r7, sp, #0
 8001a9a:	6078      	str	r0, [r7, #4]
 8001a9c:	6878      	ldr	r0, [r7, #4]
 8001a9e:	f000 fde4 	bl	800266a <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEED1Ev>
 8001aa2:	687b      	ldr	r3, [r7, #4]
 8001aa4:	4618      	mov	r0, r3
 8001aa6:	3708      	adds	r7, #8
 8001aa8:	46bd      	mov	sp, r7
 8001aaa:	bd80      	pop	{r7, pc}

08001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>:
       *  Create a %map consisting of copies of the elements in the
       *  initializer_list @a __l.
       *  This is linear in N if the range is already sorted, and NlogN
       *  otherwise (where N is @a __l.size()).
       */
      map(initializer_list<value_type> __l,
 8001aac:	b5b0      	push	{r4, r5, r7, lr}
 8001aae:	b086      	sub	sp, #24
 8001ab0:	af00      	add	r7, sp, #0
 8001ab2:	60f8      	str	r0, [r7, #12]
 8001ab4:	1d38      	adds	r0, r7, #4
 8001ab6:	e880 0006 	stmia.w	r0, {r1, r2}
 8001aba:	603b      	str	r3, [r7, #0]
	  const _Compare& __comp = _Compare(),
	  const allocator_type& __a = allocator_type())
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001abc:	68fc      	ldr	r4, [r7, #12]
 8001abe:	f107 0314 	add.w	r3, r7, #20
 8001ac2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001ac4:	4618      	mov	r0, r3
 8001ac6:	f000 fddb 	bl	8002680 <_ZNSaISt4pairIKc10token_typeEEC1ERKS3_>
 8001aca:	f107 0314 	add.w	r3, r7, #20
 8001ace:	461a      	mov	r2, r3
 8001ad0:	6839      	ldr	r1, [r7, #0]
 8001ad2:	4620      	mov	r0, r4
 8001ad4:	f000 fdee 	bl	80026b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>
 8001ad8:	f107 0314 	add.w	r3, r7, #20
 8001adc:	4618      	mov	r0, r3
 8001ade:	f7ff ffd9 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001ae2:	68fc      	ldr	r4, [r7, #12]
 8001ae4:	1d3b      	adds	r3, r7, #4
 8001ae6:	4618      	mov	r0, r3
 8001ae8:	f000 fe17 	bl	800271a <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>
 8001aec:	4605      	mov	r5, r0
 8001aee:	1d3b      	adds	r3, r7, #4
 8001af0:	4618      	mov	r0, r3
 8001af2:	f000 fe1e 	bl	8002732 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE3endEv>
 8001af6:	4603      	mov	r3, r0
 8001af8:	461a      	mov	r2, r3
 8001afa:	4629      	mov	r1, r5
 8001afc:	4620      	mov	r0, r4
 8001afe:	f000 fe2a 	bl	8002756 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>
 8001b02:	68fb      	ldr	r3, [r7, #12]
 8001b04:	4618      	mov	r0, r3
 8001b06:	3718      	adds	r7, #24
 8001b08:	46bd      	mov	sp, r7
 8001b0a:	bdb0      	pop	{r4, r5, r7, pc}

08001b0c <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001b0c:	b480      	push	{r7}
 8001b0e:	b083      	sub	sp, #12
 8001b10:	af00      	add	r7, sp, #0
 8001b12:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001b14:	687b      	ldr	r3, [r7, #4]
 8001b16:	4618      	mov	r0, r3
 8001b18:	370c      	adds	r7, #12
 8001b1a:	46bd      	mov	sp, r7
 8001b1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b20:	4770      	bx	lr

08001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
#if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 8001b22:	b590      	push	{r4, r7, lr}
 8001b24:	b085      	sub	sp, #20
 8001b26:	af00      	add	r7, sp, #0
 8001b28:	60f8      	str	r0, [r7, #12]
 8001b2a:	60b9      	str	r1, [r7, #8]
 8001b2c:	607a      	str	r2, [r7, #4]
      : _M_dataplus(_M_local_data(), __a)
 8001b2e:	68fc      	ldr	r4, [r7, #12]
 8001b30:	68f8      	ldr	r0, [r7, #12]
 8001b32:	f020 fe45 	bl	80227c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
 8001b36:	4603      	mov	r3, r0
 8001b38:	687a      	ldr	r2, [r7, #4]
 8001b3a:	4619      	mov	r1, r3
 8001b3c:	4620      	mov	r0, r4
 8001b3e:	f021 f913 	bl	8022d68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
      { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 8001b42:	68bb      	ldr	r3, [r7, #8]
 8001b44:	2b00      	cmp	r3, #0
 8001b46:	d006      	beq.n	8001b56 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x34>
 8001b48:	68b8      	ldr	r0, [r7, #8]
 8001b4a:	f7ff fa6f 	bl	800102c <_ZNSt11char_traitsIcE6lengthEPKc>
 8001b4e:	4602      	mov	r2, r0
 8001b50:	68bb      	ldr	r3, [r7, #8]
 8001b52:	4413      	add	r3, r2
 8001b54:	e001      	b.n	8001b5a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x38>
 8001b56:	68bb      	ldr	r3, [r7, #8]
 8001b58:	3b01      	subs	r3, #1
 8001b5a:	461a      	mov	r2, r3
 8001b5c:	68b9      	ldr	r1, [r7, #8]
 8001b5e:	68f8      	ldr	r0, [r7, #12]
 8001b60:	f000 fd69 	bl	8002636 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>
 8001b64:	68fb      	ldr	r3, [r7, #12]
 8001b66:	4618      	mov	r0, r3
 8001b68:	3714      	adds	r7, #20
 8001b6a:	46bd      	mov	sp, r7
 8001b6c:	bd90      	pop	{r4, r7, pc}

08001b6e <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001b6e:	b480      	push	{r7}
 8001b70:	b083      	sub	sp, #12
 8001b72:	af00      	add	r7, sp, #0
 8001b74:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001b76:	687b      	ldr	r3, [r7, #4]
 8001b78:	4618      	mov	r0, r3
 8001b7a:	370c      	adds	r7, #12
 8001b7c:	46bd      	mov	sp, r7
 8001b7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b82:	4770      	bx	lr

08001b84 <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001b84:	b480      	push	{r7}
 8001b86:	b083      	sub	sp, #12
 8001b88:	af00      	add	r7, sp, #0
 8001b8a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001b8c:	687b      	ldr	r3, [r7, #4]
 8001b8e:	4618      	mov	r0, r3
 8001b90:	370c      	adds	r7, #12
 8001b92:	46bd      	mov	sp, r7
 8001b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b98:	4770      	bx	lr

08001b9a <_ZSt7forwardIRA3_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001b9a:	b480      	push	{r7}
 8001b9c:	b083      	sub	sp, #12
 8001b9e:	af00      	add	r7, sp, #0
 8001ba0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	4618      	mov	r0, r3
 8001ba6:	370c      	adds	r7, #12
 8001ba8:	46bd      	mov	sp, r7
 8001baa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bae:	4770      	bx	lr

08001bb0 <_ZSt7forwardIRA4_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001bb0:	b480      	push	{r7}
 8001bb2:	b083      	sub	sp, #12
 8001bb4:	af00      	add	r7, sp, #0
 8001bb6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	4618      	mov	r0, r3
 8001bbc:	370c      	adds	r7, #12
 8001bbe:	46bd      	mov	sp, r7
 8001bc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bc4:	4770      	bx	lr

08001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 8001bc6:	b580      	push	{r7, lr}
 8001bc8:	b082      	sub	sp, #8
 8001bca:	af00      	add	r7, sp, #0
 8001bcc:	6078      	str	r0, [r7, #4]
 8001bce:	6878      	ldr	r0, [r7, #4]
 8001bd0:	f000 fded 	bl	80027ae <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8001bd4:	687b      	ldr	r3, [r7, #4]
 8001bd6:	4618      	mov	r0, r3
 8001bd8:	3708      	adds	r7, #8
 8001bda:	46bd      	mov	sp, r7
 8001bdc:	bd80      	pop	{r7, pc}

08001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001bde:	b580      	push	{r7, lr}
 8001be0:	b082      	sub	sp, #8
 8001be2:	af00      	add	r7, sp, #0
 8001be4:	6078      	str	r0, [r7, #4]
 8001be6:	6878      	ldr	r0, [r7, #4]
 8001be8:	f000 fdec 	bl	80027c4 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	4618      	mov	r0, r3
 8001bf0:	3708      	adds	r7, #8
 8001bf2:	46bd      	mov	sp, r7
 8001bf4:	bd80      	pop	{r7, pc}

08001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>:
      map(initializer_list<value_type> __l,
 8001bf6:	b5b0      	push	{r4, r5, r7, lr}
 8001bf8:	b086      	sub	sp, #24
 8001bfa:	af00      	add	r7, sp, #0
 8001bfc:	60f8      	str	r0, [r7, #12]
 8001bfe:	1d38      	adds	r0, r7, #4
 8001c00:	e880 0006 	stmia.w	r0, {r1, r2}
 8001c04:	603b      	str	r3, [r7, #0]
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001c06:	68fc      	ldr	r4, [r7, #12]
 8001c08:	f107 0314 	add.w	r3, r7, #20
 8001c0c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001c0e:	4618      	mov	r0, r3
 8001c10:	f000 fde3 	bl	80027da <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKS9_>
 8001c14:	f107 0314 	add.w	r3, r7, #20
 8001c18:	461a      	mov	r2, r3
 8001c1a:	6839      	ldr	r1, [r7, #0]
 8001c1c:	4620      	mov	r0, r4
 8001c1e:	f000 fdf6 	bl	800280e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1ERKSD_RKSE_>
 8001c22:	f107 0314 	add.w	r3, r7, #20
 8001c26:	4618      	mov	r0, r3
 8001c28:	f7ff ffd9 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001c2c:	68fc      	ldr	r4, [r7, #12]
 8001c2e:	1d3b      	adds	r3, r7, #4
 8001c30:	4618      	mov	r0, r3
 8001c32:	f000 fe1f 	bl	8002874 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>
 8001c36:	4605      	mov	r5, r0
 8001c38:	1d3b      	adds	r3, r7, #4
 8001c3a:	4618      	mov	r0, r3
 8001c3c:	f000 fe26 	bl	800288c <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE3endEv>
 8001c40:	4603      	mov	r3, r0
 8001c42:	461a      	mov	r2, r3
 8001c44:	4629      	mov	r1, r5
 8001c46:	4620      	mov	r0, r4
 8001c48:	f000 fe35 	bl	80028b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_>
 8001c4c:	68fb      	ldr	r3, [r7, #12]
 8001c4e:	4618      	mov	r0, r3
 8001c50:	3718      	adds	r7, #24
 8001c52:	46bd      	mov	sp, r7
 8001c54:	bdb0      	pop	{r4, r5, r7, pc}

08001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 8001c56:	b580      	push	{r7, lr}
 8001c58:	b082      	sub	sp, #8
 8001c5a:	af00      	add	r7, sp, #0
 8001c5c:	6078      	str	r0, [r7, #4]
 8001c5e:	6878      	ldr	r0, [r7, #4]
 8001c60:	f000 fe55 	bl	800290e <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1Ev>
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	4618      	mov	r0, r3
 8001c68:	3708      	adds	r7, #8
 8001c6a:	46bd      	mov	sp, r7
 8001c6c:	bd80      	pop	{r7, pc}

08001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001c6e:	b580      	push	{r7, lr}
 8001c70:	b082      	sub	sp, #8
 8001c72:	af00      	add	r7, sp, #0
 8001c74:	6078      	str	r0, [r7, #4]
 8001c76:	6878      	ldr	r0, [r7, #4]
 8001c78:	f000 fe54 	bl	8002924 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEED1Ev>
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	4618      	mov	r0, r3
 8001c80:	3708      	adds	r7, #8
 8001c82:	46bd      	mov	sp, r7
 8001c84:	bd80      	pop	{r7, pc}

08001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>:
      map(initializer_list<value_type> __l,
 8001c86:	b5b0      	push	{r4, r5, r7, lr}
 8001c88:	b086      	sub	sp, #24
 8001c8a:	af00      	add	r7, sp, #0
 8001c8c:	60f8      	str	r0, [r7, #12]
 8001c8e:	1d38      	adds	r0, r7, #4
 8001c90:	e880 0006 	stmia.w	r0, {r1, r2}
 8001c94:	603b      	str	r3, [r7, #0]
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001c96:	68fc      	ldr	r4, [r7, #12]
 8001c98:	f107 0314 	add.w	r3, r7, #20
 8001c9c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001c9e:	4618      	mov	r0, r3
 8001ca0:	f000 fe4b 	bl	800293a <_ZNSaISt4pairIKc12double_tokenEEC1ERKS3_>
 8001ca4:	f107 0314 	add.w	r3, r7, #20
 8001ca8:	461a      	mov	r2, r3
 8001caa:	6839      	ldr	r1, [r7, #0]
 8001cac:	4620      	mov	r0, r4
 8001cae:	f000 fe5e 	bl	800296e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>
 8001cb2:	f107 0314 	add.w	r3, r7, #20
 8001cb6:	4618      	mov	r0, r3
 8001cb8:	f7ff ffd9 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001cbc:	68fc      	ldr	r4, [r7, #12]
 8001cbe:	1d3b      	adds	r3, r7, #4
 8001cc0:	4618      	mov	r0, r3
 8001cc2:	f000 fe87 	bl	80029d4 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>
 8001cc6:	4605      	mov	r5, r0
 8001cc8:	1d3b      	adds	r3, r7, #4
 8001cca:	4618      	mov	r0, r3
 8001ccc:	f000 fe8e 	bl	80029ec <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE3endEv>
 8001cd0:	4603      	mov	r3, r0
 8001cd2:	461a      	mov	r2, r3
 8001cd4:	4629      	mov	r1, r5
 8001cd6:	4620      	mov	r0, r4
 8001cd8:	f000 fe9c 	bl	8002a14 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>
 8001cdc:	68fb      	ldr	r3, [r7, #12]
 8001cde:	4618      	mov	r0, r3
 8001ce0:	3718      	adds	r7, #24
 8001ce2:	46bd      	mov	sp, r7
 8001ce4:	bdb0      	pop	{r4, r5, r7, pc}

08001ce6 <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>:
       *  Returns a read/write iterator that points to the first
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      iterator
      begin() _GLIBCXX_NOEXCEPT
 8001ce6:	b580      	push	{r7, lr}
 8001ce8:	b084      	sub	sp, #16
 8001cea:	af00      	add	r7, sp, #0
 8001cec:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8001cee:	687a      	ldr	r2, [r7, #4]
 8001cf0:	f107 030c 	add.w	r3, r7, #12
 8001cf4:	4611      	mov	r1, r2
 8001cf6:	4618      	mov	r0, r3
 8001cf8:	f000 feb8 	bl	8002a6c <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8001cfc:	68fb      	ldr	r3, [r7, #12]
 8001cfe:	4618      	mov	r0, r3
 8001d00:	3710      	adds	r7, #16
 8001d02:	46bd      	mov	sp, r7
 8001d04:	bd80      	pop	{r7, pc}

08001d06 <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>:
       *  Returns a read/write iterator that points one past the last
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      iterator
      end() _GLIBCXX_NOEXCEPT
 8001d06:	b580      	push	{r7, lr}
 8001d08:	b084      	sub	sp, #16
 8001d0a:	af00      	add	r7, sp, #0
 8001d0c:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8001d0e:	687b      	ldr	r3, [r7, #4]
 8001d10:	1d1a      	adds	r2, r3, #4
 8001d12:	f107 030c 	add.w	r3, r7, #12
 8001d16:	4611      	mov	r1, r2
 8001d18:	4618      	mov	r0, r3
 8001d1a:	f000 fea7 	bl	8002a6c <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8001d1e:	68fb      	ldr	r3, [r7, #12]
 8001d20:	4618      	mov	r0, r3
 8001d22:	3710      	adds	r7, #16
 8001d24:	46bd      	mov	sp, r7
 8001d26:	bd80      	pop	{r7, pc}

08001d28 <_ZN9__gnu_cxxneIPP9StatementSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8001d28:	b590      	push	{r4, r7, lr}
 8001d2a:	b083      	sub	sp, #12
 8001d2c:	af00      	add	r7, sp, #0
 8001d2e:	6078      	str	r0, [r7, #4]
 8001d30:	6039      	str	r1, [r7, #0]
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
 8001d32:	6878      	ldr	r0, [r7, #4]
 8001d34:	f000 feaa 	bl	8002a8c <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8001d38:	4603      	mov	r3, r0
 8001d3a:	681c      	ldr	r4, [r3, #0]
 8001d3c:	6838      	ldr	r0, [r7, #0]
 8001d3e:	f000 fea5 	bl	8002a8c <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8001d42:	4603      	mov	r3, r0
 8001d44:	681b      	ldr	r3, [r3, #0]
 8001d46:	429c      	cmp	r4, r3
 8001d48:	bf14      	ite	ne
 8001d4a:	2301      	movne	r3, #1
 8001d4c:	2300      	moveq	r3, #0
 8001d4e:	b2db      	uxtb	r3, r3
 8001d50:	4618      	mov	r0, r3
 8001d52:	370c      	adds	r7, #12
 8001d54:	46bd      	mov	sp, r7
 8001d56:	bd90      	pop	{r4, r7, pc}

08001d58 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8001d58:	b480      	push	{r7}
 8001d5a:	b083      	sub	sp, #12
 8001d5c:	af00      	add	r7, sp, #0
 8001d5e:	6078      	str	r0, [r7, #4]
	++_M_current;
 8001d60:	687b      	ldr	r3, [r7, #4]
 8001d62:	681b      	ldr	r3, [r3, #0]
 8001d64:	1d1a      	adds	r2, r3, #4
 8001d66:	687b      	ldr	r3, [r7, #4]
 8001d68:	601a      	str	r2, [r3, #0]
	return *this;
 8001d6a:	687b      	ldr	r3, [r7, #4]
      }
 8001d6c:	4618      	mov	r0, r3
 8001d6e:	370c      	adds	r7, #12
 8001d70:	46bd      	mov	sp, r7
 8001d72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d76:	4770      	bx	lr

08001d78 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8001d78:	b480      	push	{r7}
 8001d7a:	b083      	sub	sp, #12
 8001d7c:	af00      	add	r7, sp, #0
 8001d7e:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8001d80:	687b      	ldr	r3, [r7, #4]
 8001d82:	681b      	ldr	r3, [r3, #0]
 8001d84:	4618      	mov	r0, r3
 8001d86:	370c      	adds	r7, #12
 8001d88:	46bd      	mov	sp, r7
 8001d8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d8e:	4770      	bx	lr

08001d90 <_ZSt3getIP10AssignmentJS1_P13Function_callP11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8001d90:	b580      	push	{r7, lr}
 8001d92:	b082      	sub	sp, #8
 8001d94:	af00      	add	r7, sp, #0
 8001d96:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8001d98:	6878      	ldr	r0, [r7, #4]
 8001d9a:	f000 feb7 	bl	8002b0c <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001d9e:	4603      	mov	r3, r0
    }
 8001da0:	4618      	mov	r0, r3
 8001da2:	3708      	adds	r7, #8
 8001da4:	46bd      	mov	sp, r7
 8001da6:	bd80      	pop	{r7, pc}

08001da8 <_ZSt3getIP13Function_callJP10AssignmentS1_P11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8001da8:	b580      	push	{r7, lr}
 8001daa:	b082      	sub	sp, #8
 8001dac:	af00      	add	r7, sp, #0
 8001dae:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8001db0:	6878      	ldr	r0, [r7, #4]
 8001db2:	f000 fefb 	bl	8002bac <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001db6:	4603      	mov	r3, r0
    }
 8001db8:	4618      	mov	r0, r3
 8001dba:	3708      	adds	r7, #8
 8001dbc:	46bd      	mov	sp, r7
 8001dbe:	bd80      	pop	{r7, pc}

08001dc0 <_ZSt3getIP11Method_callJP10AssignmentP13Function_callS1_P15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8001dc0:	b580      	push	{r7, lr}
 8001dc2:	b082      	sub	sp, #8
 8001dc4:	af00      	add	r7, sp, #0
 8001dc6:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8001dc8:	6878      	ldr	r0, [r7, #4]
 8001dca:	f000 ff51 	bl	8002c70 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001dce:	4603      	mov	r3, r0
    }
 8001dd0:	4618      	mov	r0, r3
 8001dd2:	3708      	adds	r7, #8
 8001dd4:	46bd      	mov	sp, r7
 8001dd6:	bd80      	pop	{r7, pc}

08001dd8 <_ZSt3getIP15While_statementJP10AssignmentP13Function_callP11Method_callS1_P12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8001dd8:	b580      	push	{r7, lr}
 8001dda:	b082      	sub	sp, #8
 8001ddc:	af00      	add	r7, sp, #0
 8001dde:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8001de0:	6878      	ldr	r0, [r7, #4]
 8001de2:	f000 ffb9 	bl	8002d58 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001de6:	4603      	mov	r3, r0
    }
 8001de8:	4618      	mov	r0, r3
 8001dea:	3708      	adds	r7, #8
 8001dec:	46bd      	mov	sp, r7
 8001dee:	bd80      	pop	{r7, pc}

08001df0 <_ZSt3getIP12If_statementJP10AssignmentP13Function_callP11Method_callP15While_statementS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8001df0:	b580      	push	{r7, lr}
 8001df2:	b082      	sub	sp, #8
 8001df4:	af00      	add	r7, sp, #0
 8001df6:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8001df8:	6878      	ldr	r0, [r7, #4]
 8001dfa:	f001 f833 	bl	8002e64 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001dfe:	4603      	mov	r3, r0
    }
 8001e00:	4618      	mov	r0, r3
 8001e02:	3708      	adds	r7, #8
 8001e04:	46bd      	mov	sp, r7
 8001e06:	bd80      	pop	{r7, pc}

08001e08 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>:
#endif

      // [23.2.4.2] capacity
      /**  Returns the number of elements in the %vector.  */
      size_type
      size() const _GLIBCXX_NOEXCEPT
 8001e08:	b480      	push	{r7}
 8001e0a:	b083      	sub	sp, #12
 8001e0c:	af00      	add	r7, sp, #0
 8001e0e:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	685a      	ldr	r2, [r3, #4]
 8001e14:	687b      	ldr	r3, [r7, #4]
 8001e16:	681b      	ldr	r3, [r3, #0]
 8001e18:	1ad3      	subs	r3, r2, r3
 8001e1a:	109b      	asrs	r3, r3, #2
 8001e1c:	4618      	mov	r0, r3
 8001e1e:	370c      	adds	r7, #12
 8001e20:	46bd      	mov	sp, r7
 8001e22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e26:	4770      	bx	lr

08001e28 <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>:
       *  Note that data access with this operator is unchecked and
       *  out_of_range lookups are not defined. (For checked lookups
       *  see at().)
       */
      reference
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8001e28:	b480      	push	{r7}
 8001e2a:	b083      	sub	sp, #12
 8001e2c:	af00      	add	r7, sp, #0
 8001e2e:	6078      	str	r0, [r7, #4]
 8001e30:	6039      	str	r1, [r7, #0]
      {
	__glibcxx_requires_subscript(__n);
	return *(this->_M_impl._M_start + __n);
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	681a      	ldr	r2, [r3, #0]
 8001e36:	683b      	ldr	r3, [r7, #0]
 8001e38:	009b      	lsls	r3, r3, #2
 8001e3a:	4413      	add	r3, r2
      }
 8001e3c:	4618      	mov	r0, r3
 8001e3e:	370c      	adds	r7, #12
 8001e40:	46bd      	mov	sp, r7
 8001e42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e46:	4770      	bx	lr

08001e48 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
      ~_Variant_storage()
 8001e48:	b580      	push	{r7, lr}
 8001e4a:	b082      	sub	sp, #8
 8001e4c:	af00      	add	r7, sp, #0
 8001e4e:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 8001e50:	6878      	ldr	r0, [r7, #4]
 8001e52:	f001 f823 	bl	8002e9c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
 8001e56:	687b      	ldr	r3, [r7, #4]
 8001e58:	4618      	mov	r0, r3
 8001e5a:	3708      	adds	r7, #8
 8001e5c:	46bd      	mov	sp, r7
 8001e5e:	bd80      	pop	{r7, pc}

08001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001e60:	b480      	push	{r7}
 8001e62:	b083      	sub	sp, #12
 8001e64:	af00      	add	r7, sp, #0
 8001e66:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001e68:	687b      	ldr	r3, [r7, #4]
 8001e6a:	4618      	mov	r0, r3
 8001e6c:	370c      	adds	r7, #12
 8001e6e:	46bd      	mov	sp, r7
 8001e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e74:	4770      	bx	lr

08001e76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001e76:	b480      	push	{r7}
 8001e78:	b083      	sub	sp, #12
 8001e7a:	af00      	add	r7, sp, #0
 8001e7c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001e7e:	687b      	ldr	r3, [r7, #4]
 8001e80:	4618      	mov	r0, r3
 8001e82:	370c      	adds	r7, #12
 8001e84:	46bd      	mov	sp, r7
 8001e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e8a:	4770      	bx	lr

08001e8c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001e8c:	b480      	push	{r7}
 8001e8e:	b083      	sub	sp, #12
 8001e90:	af00      	add	r7, sp, #0
 8001e92:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001e94:	687b      	ldr	r3, [r7, #4]
 8001e96:	4618      	mov	r0, r3
 8001e98:	370c      	adds	r7, #12
 8001e9a:	46bd      	mov	sp, r7
 8001e9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ea0:	4770      	bx	lr

08001ea2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001ea2:	b480      	push	{r7}
 8001ea4:	b083      	sub	sp, #12
 8001ea6:	af00      	add	r7, sp, #0
 8001ea8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	4618      	mov	r0, r3
 8001eae:	370c      	adds	r7, #12
 8001eb0:	46bd      	mov	sp, r7
 8001eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eb6:	4770      	bx	lr

08001eb8 <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8001eb8:	b480      	push	{r7}
 8001eba:	b083      	sub	sp, #12
 8001ebc:	af00      	add	r7, sp, #0
 8001ebe:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	4618      	mov	r0, r3
 8001ec4:	370c      	adds	r7, #12
 8001ec6:	46bd      	mov	sp, r7
 8001ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ecc:	4770      	bx	lr

08001ece <_ZNSt6vectorIP4BodySaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8001ece:	b480      	push	{r7}
 8001ed0:	b083      	sub	sp, #12
 8001ed2:	af00      	add	r7, sp, #0
 8001ed4:	6078      	str	r0, [r7, #4]
 8001ed6:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 8001ed8:	687b      	ldr	r3, [r7, #4]
 8001eda:	681a      	ldr	r2, [r3, #0]
 8001edc:	683b      	ldr	r3, [r7, #0]
 8001ede:	009b      	lsls	r3, r3, #2
 8001ee0:	4413      	add	r3, r2
      }
 8001ee2:	4618      	mov	r0, r3
 8001ee4:	370c      	adds	r7, #12
 8001ee6:	46bd      	mov	sp, r7
 8001ee8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eec:	4770      	bx	lr

08001eee <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8001eee:	b480      	push	{r7}
 8001ef0:	b083      	sub	sp, #12
 8001ef2:	af00      	add	r7, sp, #0
 8001ef4:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8001ef6:	687b      	ldr	r3, [r7, #4]
 8001ef8:	685a      	ldr	r2, [r3, #4]
 8001efa:	687b      	ldr	r3, [r7, #4]
 8001efc:	681b      	ldr	r3, [r3, #0]
 8001efe:	1ad3      	subs	r3, r2, r3
 8001f00:	109b      	asrs	r3, r3, #2
 8001f02:	4618      	mov	r0, r3
 8001f04:	370c      	adds	r7, #12
 8001f06:	46bd      	mov	sp, r7
 8001f08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f0c:	4770      	bx	lr

08001f0e <_ZNSt6vectorIP4BodySaIS1_EE4backEv>:
      /**
       *  Returns a read/write reference to the data at the last
       *  element of the %vector.
       */
      reference
      back() _GLIBCXX_NOEXCEPT
 8001f0e:	b580      	push	{r7, lr}
 8001f10:	b084      	sub	sp, #16
 8001f12:	af00      	add	r7, sp, #0
 8001f14:	6078      	str	r0, [r7, #4]
      {
	__glibcxx_requires_nonempty();
	return *(end() - 1);
 8001f16:	6878      	ldr	r0, [r7, #4]
 8001f18:	f000 ffce 	bl	8002eb8 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 8001f1c:	4603      	mov	r3, r0
 8001f1e:	60fb      	str	r3, [r7, #12]
 8001f20:	f107 030c 	add.w	r3, r7, #12
 8001f24:	2101      	movs	r1, #1
 8001f26:	4618      	mov	r0, r3
 8001f28:	f000 ffd7 	bl	8002eda <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEmiEi>
 8001f2c:	4603      	mov	r3, r0
 8001f2e:	60bb      	str	r3, [r7, #8]
 8001f30:	f107 0308 	add.w	r3, r7, #8
 8001f34:	4618      	mov	r0, r3
 8001f36:	f000 ffe9 	bl	8002f0c <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>
 8001f3a:	4603      	mov	r3, r0
      }
 8001f3c:	4618      	mov	r0, r3
 8001f3e:	3710      	adds	r7, #16
 8001f40:	46bd      	mov	sp, r7
 8001f42:	bd80      	pop	{r7, pc}

08001f44 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8001f44:	b480      	push	{r7}
 8001f46:	b083      	sub	sp, #12
 8001f48:	af00      	add	r7, sp, #0
 8001f4a:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 8001f4c:	687b      	ldr	r3, [r7, #4]
    }
 8001f4e:	4618      	mov	r0, r3
 8001f50:	370c      	adds	r7, #12
 8001f52:	46bd      	mov	sp, r7
 8001f54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f58:	4770      	bx	lr

08001f5a <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8001f5a:	b580      	push	{r7, lr}
 8001f5c:	b082      	sub	sp, #8
 8001f5e:	af00      	add	r7, sp, #0
 8001f60:	7138      	strb	r0, [r7, #4]
 8001f62:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8001f64:	6838      	ldr	r0, [r7, #0]
 8001f66:	f000 fff3 	bl	8002f50 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8001f6a:	4603      	mov	r3, r0
 8001f6c:	4618      	mov	r0, r3
 8001f6e:	f000 fffa 	bl	8002f66 <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8001f72:	4603      	mov	r3, r0
 8001f74:	4618      	mov	r0, r3
 8001f76:	3708      	adds	r7, #8
 8001f78:	46bd      	mov	sp, r7
 8001f7a:	bd80      	pop	{r7, pc}

08001f7c <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8001f7c:	b590      	push	{r4, r7, lr}
 8001f7e:	b083      	sub	sp, #12
 8001f80:	af00      	add	r7, sp, #0
 8001f82:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8001f84:	6878      	ldr	r0, [r7, #4]
 8001f86:	f000 ffd8 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8001f8a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8001f8c:	4619      	mov	r1, r3
 8001f8e:	4620      	mov	r0, r4
 8001f90:	f7ff ffe3 	bl	8001f5a <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8001f94:	4603      	mov	r3, r0
    }
 8001f96:	4618      	mov	r0, r3
 8001f98:	370c      	adds	r7, #12
 8001f9a:	46bd      	mov	sp, r7
 8001f9c:	bd90      	pop	{r4, r7, pc}

08001f9e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8001f9e:	b580      	push	{r7, lr}
 8001fa0:	b082      	sub	sp, #8
 8001fa2:	af00      	add	r7, sp, #0
 8001fa4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8001fa6:	6878      	ldr	r0, [r7, #4]
 8001fa8:	f000 ffc7 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8001fac:	4603      	mov	r3, r0
 8001fae:	4618      	mov	r0, r3
 8001fb0:	f7ff ffe4 	bl	8001f7c <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8001fb4:	4603      	mov	r3, r0
	}
 8001fb6:	4618      	mov	r0, r3
 8001fb8:	3708      	adds	r7, #8
 8001fba:	46bd      	mov	sp, r7
 8001fbc:	bd80      	pop	{r7, pc}

08001fbe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8001fbe:	b5b0      	push	{r4, r5, r7, lr}
 8001fc0:	b084      	sub	sp, #16
 8001fc2:	af00      	add	r7, sp, #0
 8001fc4:	6078      	str	r0, [r7, #4]
 8001fc6:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8001fc8:	6878      	ldr	r0, [r7, #4]
 8001fca:	f000 ffab 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8001fce:	4604      	mov	r4, r0
 8001fd0:	6838      	ldr	r0, [r7, #0]
 8001fd2:	f000 ffb2 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8001fd6:	4603      	mov	r3, r0
 8001fd8:	4618      	mov	r0, r3
 8001fda:	f7ff ffe0 	bl	8001f9e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESQ_EEDcOSK_>
 8001fde:	4601      	mov	r1, r0
 8001fe0:	f107 030c 	add.w	r3, r7, #12
 8001fe4:	461a      	mov	r2, r3
 8001fe6:	4620      	mov	r0, r4
 8001fe8:	f000 ffc8 	bl	8002f7c <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8001fec:	462b      	mov	r3, r5
      }
 8001fee:	4618      	mov	r0, r3
 8001ff0:	3710      	adds	r7, #16
 8001ff2:	46bd      	mov	sp, r7
 8001ff4:	bdb0      	pop	{r4, r5, r7, pc}

08001ff6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8001ff6:	b5b0      	push	{r4, r5, r7, lr}
 8001ff8:	b082      	sub	sp, #8
 8001ffa:	af00      	add	r7, sp, #0
 8001ffc:	6078      	str	r0, [r7, #4]
 8001ffe:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002000:	6878      	ldr	r0, [r7, #4]
 8002002:	f000 ff8f 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002006:	4604      	mov	r4, r0
 8002008:	6838      	ldr	r0, [r7, #0]
 800200a:	f000 ff96 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800200e:	4603      	mov	r3, r0
 8002010:	4619      	mov	r1, r3
 8002012:	4620      	mov	r0, r4
 8002014:	f7ff ffd3 	bl	8001fbe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002018:	462b      	mov	r3, r5
      }
 800201a:	4618      	mov	r0, r3
 800201c:	3708      	adds	r7, #8
 800201e:	46bd      	mov	sp, r7
 8002020:	bdb0      	pop	{r4, r5, r7, pc}

08002022 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002022:	b5b0      	push	{r4, r5, r7, lr}
 8002024:	b082      	sub	sp, #8
 8002026:	af00      	add	r7, sp, #0
 8002028:	6078      	str	r0, [r7, #4]
 800202a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800202c:	6878      	ldr	r0, [r7, #4]
 800202e:	f000 ff79 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002032:	4604      	mov	r4, r0
 8002034:	6838      	ldr	r0, [r7, #0]
 8002036:	f000 ff80 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800203a:	4603      	mov	r3, r0
 800203c:	4619      	mov	r1, r3
 800203e:	4620      	mov	r0, r4
 8002040:	f7ff ffd9 	bl	8001ff6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002044:	462b      	mov	r3, r5
      }
 8002046:	4618      	mov	r0, r3
 8002048:	3708      	adds	r7, #8
 800204a:	46bd      	mov	sp, r7
 800204c:	bdb0      	pop	{r4, r5, r7, pc}

0800204e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800204e:	b580      	push	{r7, lr}
 8002050:	b082      	sub	sp, #8
 8002052:	af00      	add	r7, sp, #0
 8002054:	7138      	strb	r0, [r7, #4]
 8002056:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002058:	6838      	ldr	r0, [r7, #0]
 800205a:	f000 ffad 	bl	8002fb8 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800205e:	4603      	mov	r3, r0
 8002060:	4618      	mov	r0, r3
 8002062:	f000 ffb4 	bl	8002fce <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 8002066:	4603      	mov	r3, r0
 8002068:	4618      	mov	r0, r3
 800206a:	3708      	adds	r7, #8
 800206c:	46bd      	mov	sp, r7
 800206e:	bd80      	pop	{r7, pc}

08002070 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002070:	b590      	push	{r4, r7, lr}
 8002072:	b083      	sub	sp, #12
 8002074:	af00      	add	r7, sp, #0
 8002076:	7138      	strb	r0, [r7, #4]
 8002078:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800207a:	6838      	ldr	r0, [r7, #0]
 800207c:	f000 ff68 	bl	8002f50 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002080:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002082:	4619      	mov	r1, r3
 8002084:	4620      	mov	r0, r4
 8002086:	f7ff ffe2 	bl	800204e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800208a:	4603      	mov	r3, r0
    }
 800208c:	4618      	mov	r0, r3
 800208e:	370c      	adds	r7, #12
 8002090:	46bd      	mov	sp, r7
 8002092:	bd90      	pop	{r4, r7, pc}

08002094 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002094:	b590      	push	{r4, r7, lr}
 8002096:	b083      	sub	sp, #12
 8002098:	af00      	add	r7, sp, #0
 800209a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800209c:	6878      	ldr	r0, [r7, #4]
 800209e:	f000 ff4c 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80020a2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80020a4:	4619      	mov	r1, r3
 80020a6:	4620      	mov	r0, r4
 80020a8:	f7ff ffe2 	bl	8002070 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80020ac:	4603      	mov	r3, r0
    }
 80020ae:	4618      	mov	r0, r3
 80020b0:	370c      	adds	r7, #12
 80020b2:	46bd      	mov	sp, r7
 80020b4:	bd90      	pop	{r4, r7, pc}

080020b6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80020b6:	b580      	push	{r7, lr}
 80020b8:	b082      	sub	sp, #8
 80020ba:	af00      	add	r7, sp, #0
 80020bc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80020be:	6878      	ldr	r0, [r7, #4]
 80020c0:	f000 ff3b 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80020c4:	4603      	mov	r3, r0
 80020c6:	4618      	mov	r0, r3
 80020c8:	f7ff ffe4 	bl	8002094 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80020cc:	4603      	mov	r3, r0
	}
 80020ce:	4618      	mov	r0, r3
 80020d0:	3708      	adds	r7, #8
 80020d2:	46bd      	mov	sp, r7
 80020d4:	bd80      	pop	{r7, pc}

080020d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80020d6:	b5b0      	push	{r4, r5, r7, lr}
 80020d8:	b084      	sub	sp, #16
 80020da:	af00      	add	r7, sp, #0
 80020dc:	6078      	str	r0, [r7, #4]
 80020de:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80020e0:	6878      	ldr	r0, [r7, #4]
 80020e2:	f000 ff1f 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80020e6:	4604      	mov	r4, r0
 80020e8:	6838      	ldr	r0, [r7, #0]
 80020ea:	f000 ff26 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80020ee:	4603      	mov	r3, r0
 80020f0:	4618      	mov	r0, r3
 80020f2:	f7ff ffe0 	bl	80020b6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESQ_EEDcOSK_>
 80020f6:	4601      	mov	r1, r0
 80020f8:	f107 030c 	add.w	r3, r7, #12
 80020fc:	461a      	mov	r2, r3
 80020fe:	4620      	mov	r0, r4
 8002100:	f000 ff70 	bl	8002fe4 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002104:	462b      	mov	r3, r5
      }
 8002106:	4618      	mov	r0, r3
 8002108:	3710      	adds	r7, #16
 800210a:	46bd      	mov	sp, r7
 800210c:	bdb0      	pop	{r4, r5, r7, pc}

0800210e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800210e:	b5b0      	push	{r4, r5, r7, lr}
 8002110:	b082      	sub	sp, #8
 8002112:	af00      	add	r7, sp, #0
 8002114:	6078      	str	r0, [r7, #4]
 8002116:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002118:	6878      	ldr	r0, [r7, #4]
 800211a:	f000 ff03 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800211e:	4604      	mov	r4, r0
 8002120:	6838      	ldr	r0, [r7, #0]
 8002122:	f000 ff0a 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002126:	4603      	mov	r3, r0
 8002128:	4619      	mov	r1, r3
 800212a:	4620      	mov	r0, r4
 800212c:	f7ff ffd3 	bl	80020d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002130:	462b      	mov	r3, r5
      }
 8002132:	4618      	mov	r0, r3
 8002134:	3708      	adds	r7, #8
 8002136:	46bd      	mov	sp, r7
 8002138:	bdb0      	pop	{r4, r5, r7, pc}

0800213a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800213a:	b5b0      	push	{r4, r5, r7, lr}
 800213c:	b082      	sub	sp, #8
 800213e:	af00      	add	r7, sp, #0
 8002140:	6078      	str	r0, [r7, #4]
 8002142:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002144:	6878      	ldr	r0, [r7, #4]
 8002146:	f000 feed 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800214a:	4604      	mov	r4, r0
 800214c:	6838      	ldr	r0, [r7, #0]
 800214e:	f000 fef4 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002152:	4603      	mov	r3, r0
 8002154:	4619      	mov	r1, r3
 8002156:	4620      	mov	r0, r4
 8002158:	f7ff ffd9 	bl	800210e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 800215c:	462b      	mov	r3, r5
      }
 800215e:	4618      	mov	r0, r3
 8002160:	3708      	adds	r7, #8
 8002162:	46bd      	mov	sp, r7
 8002164:	bdb0      	pop	{r4, r5, r7, pc}

08002166 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002166:	b580      	push	{r7, lr}
 8002168:	b082      	sub	sp, #8
 800216a:	af00      	add	r7, sp, #0
 800216c:	7138      	strb	r0, [r7, #4]
 800216e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002170:	6838      	ldr	r0, [r7, #0]
 8002172:	f000 ff55 	bl	8003020 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002176:	4603      	mov	r3, r0
 8002178:	4618      	mov	r0, r3
 800217a:	f000 ff5c 	bl	8003036 <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800217e:	4603      	mov	r3, r0
 8002180:	4618      	mov	r0, r3
 8002182:	3708      	adds	r7, #8
 8002184:	46bd      	mov	sp, r7
 8002186:	bd80      	pop	{r7, pc}

08002188 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002188:	b590      	push	{r4, r7, lr}
 800218a:	b083      	sub	sp, #12
 800218c:	af00      	add	r7, sp, #0
 800218e:	7138      	strb	r0, [r7, #4]
 8002190:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002192:	6838      	ldr	r0, [r7, #0]
 8002194:	f000 ff10 	bl	8002fb8 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002198:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800219a:	4619      	mov	r1, r3
 800219c:	4620      	mov	r0, r4
 800219e:	f7ff ffe2 	bl	8002166 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80021a2:	4603      	mov	r3, r0
    }
 80021a4:	4618      	mov	r0, r3
 80021a6:	370c      	adds	r7, #12
 80021a8:	46bd      	mov	sp, r7
 80021aa:	bd90      	pop	{r4, r7, pc}

080021ac <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80021ac:	b590      	push	{r4, r7, lr}
 80021ae:	b083      	sub	sp, #12
 80021b0:	af00      	add	r7, sp, #0
 80021b2:	7138      	strb	r0, [r7, #4]
 80021b4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80021b6:	6838      	ldr	r0, [r7, #0]
 80021b8:	f000 feca 	bl	8002f50 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80021bc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80021be:	4619      	mov	r1, r3
 80021c0:	4620      	mov	r0, r4
 80021c2:	f7ff ffe1 	bl	8002188 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80021c6:	4603      	mov	r3, r0
    }
 80021c8:	4618      	mov	r0, r3
 80021ca:	370c      	adds	r7, #12
 80021cc:	46bd      	mov	sp, r7
 80021ce:	bd90      	pop	{r4, r7, pc}

080021d0 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80021d0:	b590      	push	{r4, r7, lr}
 80021d2:	b083      	sub	sp, #12
 80021d4:	af00      	add	r7, sp, #0
 80021d6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80021d8:	6878      	ldr	r0, [r7, #4]
 80021da:	f000 feae 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80021de:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80021e0:	4619      	mov	r1, r3
 80021e2:	4620      	mov	r0, r4
 80021e4:	f7ff ffe2 	bl	80021ac <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80021e8:	4603      	mov	r3, r0
    }
 80021ea:	4618      	mov	r0, r3
 80021ec:	370c      	adds	r7, #12
 80021ee:	46bd      	mov	sp, r7
 80021f0:	bd90      	pop	{r4, r7, pc}

080021f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80021f2:	b580      	push	{r7, lr}
 80021f4:	b082      	sub	sp, #8
 80021f6:	af00      	add	r7, sp, #0
 80021f8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80021fa:	6878      	ldr	r0, [r7, #4]
 80021fc:	f000 fe9d 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002200:	4603      	mov	r3, r0
 8002202:	4618      	mov	r0, r3
 8002204:	f7ff ffe4 	bl	80021d0 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002208:	4603      	mov	r3, r0
	}
 800220a:	4618      	mov	r0, r3
 800220c:	3708      	adds	r7, #8
 800220e:	46bd      	mov	sp, r7
 8002210:	bd80      	pop	{r7, pc}

08002212 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002212:	b5b0      	push	{r4, r5, r7, lr}
 8002214:	b084      	sub	sp, #16
 8002216:	af00      	add	r7, sp, #0
 8002218:	6078      	str	r0, [r7, #4]
 800221a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800221c:	6878      	ldr	r0, [r7, #4]
 800221e:	f000 fe81 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002222:	4604      	mov	r4, r0
 8002224:	6838      	ldr	r0, [r7, #0]
 8002226:	f000 fe88 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800222a:	4603      	mov	r3, r0
 800222c:	4618      	mov	r0, r3
 800222e:	f7ff ffe0 	bl	80021f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESQ_EEDcOSK_>
 8002232:	4601      	mov	r1, r0
 8002234:	f107 030c 	add.w	r3, r7, #12
 8002238:	461a      	mov	r2, r3
 800223a:	4620      	mov	r0, r4
 800223c:	f000 ff06 	bl	800304c <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002240:	462b      	mov	r3, r5
      }
 8002242:	4618      	mov	r0, r3
 8002244:	3710      	adds	r7, #16
 8002246:	46bd      	mov	sp, r7
 8002248:	bdb0      	pop	{r4, r5, r7, pc}

0800224a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800224a:	b5b0      	push	{r4, r5, r7, lr}
 800224c:	b082      	sub	sp, #8
 800224e:	af00      	add	r7, sp, #0
 8002250:	6078      	str	r0, [r7, #4]
 8002252:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002254:	6878      	ldr	r0, [r7, #4]
 8002256:	f000 fe65 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800225a:	4604      	mov	r4, r0
 800225c:	6838      	ldr	r0, [r7, #0]
 800225e:	f000 fe6c 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002262:	4603      	mov	r3, r0
 8002264:	4619      	mov	r1, r3
 8002266:	4620      	mov	r0, r4
 8002268:	f7ff ffd3 	bl	8002212 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 800226c:	462b      	mov	r3, r5
      }
 800226e:	4618      	mov	r0, r3
 8002270:	3708      	adds	r7, #8
 8002272:	46bd      	mov	sp, r7
 8002274:	bdb0      	pop	{r4, r5, r7, pc}

08002276 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002276:	b5b0      	push	{r4, r5, r7, lr}
 8002278:	b082      	sub	sp, #8
 800227a:	af00      	add	r7, sp, #0
 800227c:	6078      	str	r0, [r7, #4]
 800227e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002280:	6878      	ldr	r0, [r7, #4]
 8002282:	f000 fe4f 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002286:	4604      	mov	r4, r0
 8002288:	6838      	ldr	r0, [r7, #0]
 800228a:	f000 fe56 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800228e:	4603      	mov	r3, r0
 8002290:	4619      	mov	r1, r3
 8002292:	4620      	mov	r0, r4
 8002294:	f7ff ffd9 	bl	800224a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002298:	462b      	mov	r3, r5
      }
 800229a:	4618      	mov	r0, r3
 800229c:	3708      	adds	r7, #8
 800229e:	46bd      	mov	sp, r7
 80022a0:	bdb0      	pop	{r4, r5, r7, pc}

080022a2 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80022a2:	b580      	push	{r7, lr}
 80022a4:	b082      	sub	sp, #8
 80022a6:	af00      	add	r7, sp, #0
 80022a8:	7138      	strb	r0, [r7, #4]
 80022aa:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80022ac:	6838      	ldr	r0, [r7, #0]
 80022ae:	f000 feeb 	bl	8003088 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80022b2:	4603      	mov	r3, r0
 80022b4:	4618      	mov	r0, r3
 80022b6:	f000 fef2 	bl	800309e <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 80022ba:	4603      	mov	r3, r0
 80022bc:	4618      	mov	r0, r3
 80022be:	3708      	adds	r7, #8
 80022c0:	46bd      	mov	sp, r7
 80022c2:	bd80      	pop	{r7, pc}

080022c4 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80022c4:	b590      	push	{r4, r7, lr}
 80022c6:	b083      	sub	sp, #12
 80022c8:	af00      	add	r7, sp, #0
 80022ca:	7138      	strb	r0, [r7, #4]
 80022cc:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80022ce:	6838      	ldr	r0, [r7, #0]
 80022d0:	f000 fea6 	bl	8003020 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80022d4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80022d6:	4619      	mov	r1, r3
 80022d8:	4620      	mov	r0, r4
 80022da:	f7ff ffe2 	bl	80022a2 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80022de:	4603      	mov	r3, r0
    }
 80022e0:	4618      	mov	r0, r3
 80022e2:	370c      	adds	r7, #12
 80022e4:	46bd      	mov	sp, r7
 80022e6:	bd90      	pop	{r4, r7, pc}

080022e8 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80022e8:	b590      	push	{r4, r7, lr}
 80022ea:	b083      	sub	sp, #12
 80022ec:	af00      	add	r7, sp, #0
 80022ee:	7138      	strb	r0, [r7, #4]
 80022f0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80022f2:	6838      	ldr	r0, [r7, #0]
 80022f4:	f000 fe60 	bl	8002fb8 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80022f8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80022fa:	4619      	mov	r1, r3
 80022fc:	4620      	mov	r0, r4
 80022fe:	f7ff ffe1 	bl	80022c4 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002302:	4603      	mov	r3, r0
    }
 8002304:	4618      	mov	r0, r3
 8002306:	370c      	adds	r7, #12
 8002308:	46bd      	mov	sp, r7
 800230a:	bd90      	pop	{r4, r7, pc}

0800230c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800230c:	b590      	push	{r4, r7, lr}
 800230e:	b083      	sub	sp, #12
 8002310:	af00      	add	r7, sp, #0
 8002312:	7138      	strb	r0, [r7, #4]
 8002314:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002316:	6838      	ldr	r0, [r7, #0]
 8002318:	f000 fe1a 	bl	8002f50 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800231c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800231e:	4619      	mov	r1, r3
 8002320:	4620      	mov	r0, r4
 8002322:	f7ff ffe1 	bl	80022e8 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002326:	4603      	mov	r3, r0
    }
 8002328:	4618      	mov	r0, r3
 800232a:	370c      	adds	r7, #12
 800232c:	46bd      	mov	sp, r7
 800232e:	bd90      	pop	{r4, r7, pc}

08002330 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002330:	b590      	push	{r4, r7, lr}
 8002332:	b083      	sub	sp, #12
 8002334:	af00      	add	r7, sp, #0
 8002336:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002338:	6878      	ldr	r0, [r7, #4]
 800233a:	f000 fdfe 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800233e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002340:	4619      	mov	r1, r3
 8002342:	4620      	mov	r0, r4
 8002344:	f7ff ffe2 	bl	800230c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002348:	4603      	mov	r3, r0
    }
 800234a:	4618      	mov	r0, r3
 800234c:	370c      	adds	r7, #12
 800234e:	46bd      	mov	sp, r7
 8002350:	bd90      	pop	{r4, r7, pc}

08002352 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002352:	b580      	push	{r7, lr}
 8002354:	b082      	sub	sp, #8
 8002356:	af00      	add	r7, sp, #0
 8002358:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800235a:	6878      	ldr	r0, [r7, #4]
 800235c:	f000 fded 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002360:	4603      	mov	r3, r0
 8002362:	4618      	mov	r0, r3
 8002364:	f7ff ffe4 	bl	8002330 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002368:	4603      	mov	r3, r0
	}
 800236a:	4618      	mov	r0, r3
 800236c:	3708      	adds	r7, #8
 800236e:	46bd      	mov	sp, r7
 8002370:	bd80      	pop	{r7, pc}

08002372 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002372:	b5b0      	push	{r4, r5, r7, lr}
 8002374:	b084      	sub	sp, #16
 8002376:	af00      	add	r7, sp, #0
 8002378:	6078      	str	r0, [r7, #4]
 800237a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800237c:	6878      	ldr	r0, [r7, #4]
 800237e:	f000 fdd1 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002382:	4604      	mov	r4, r0
 8002384:	6838      	ldr	r0, [r7, #0]
 8002386:	f000 fdd8 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800238a:	4603      	mov	r3, r0
 800238c:	4618      	mov	r0, r3
 800238e:	f7ff ffe0 	bl	8002352 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESQ_EEDcOSK_>
 8002392:	4601      	mov	r1, r0
 8002394:	f107 030c 	add.w	r3, r7, #12
 8002398:	461a      	mov	r2, r3
 800239a:	4620      	mov	r0, r4
 800239c:	f000 fe8c 	bl	80030b8 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 80023a0:	462b      	mov	r3, r5
      }
 80023a2:	4618      	mov	r0, r3
 80023a4:	3710      	adds	r7, #16
 80023a6:	46bd      	mov	sp, r7
 80023a8:	bdb0      	pop	{r4, r5, r7, pc}

080023aa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80023aa:	b5b0      	push	{r4, r5, r7, lr}
 80023ac:	b082      	sub	sp, #8
 80023ae:	af00      	add	r7, sp, #0
 80023b0:	6078      	str	r0, [r7, #4]
 80023b2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80023b4:	6878      	ldr	r0, [r7, #4]
 80023b6:	f000 fdb5 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80023ba:	4604      	mov	r4, r0
 80023bc:	6838      	ldr	r0, [r7, #0]
 80023be:	f000 fdbc 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80023c2:	4603      	mov	r3, r0
 80023c4:	4619      	mov	r1, r3
 80023c6:	4620      	mov	r0, r4
 80023c8:	f7ff ffd3 	bl	8002372 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 80023cc:	462b      	mov	r3, r5
      }
 80023ce:	4618      	mov	r0, r3
 80023d0:	3708      	adds	r7, #8
 80023d2:	46bd      	mov	sp, r7
 80023d4:	bdb0      	pop	{r4, r5, r7, pc}

080023d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80023d6:	b5b0      	push	{r4, r5, r7, lr}
 80023d8:	b082      	sub	sp, #8
 80023da:	af00      	add	r7, sp, #0
 80023dc:	6078      	str	r0, [r7, #4]
 80023de:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80023e0:	6878      	ldr	r0, [r7, #4]
 80023e2:	f000 fd9f 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80023e6:	4604      	mov	r4, r0
 80023e8:	6838      	ldr	r0, [r7, #0]
 80023ea:	f000 fda6 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80023ee:	4603      	mov	r3, r0
 80023f0:	4619      	mov	r1, r3
 80023f2:	4620      	mov	r0, r4
 80023f4:	f7ff ffd9 	bl	80023aa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 80023f8:	462b      	mov	r3, r5
      }
 80023fa:	4618      	mov	r0, r3
 80023fc:	3708      	adds	r7, #8
 80023fe:	46bd      	mov	sp, r7
 8002400:	bdb0      	pop	{r4, r5, r7, pc}

08002402 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002402:	b580      	push	{r7, lr}
 8002404:	b082      	sub	sp, #8
 8002406:	af00      	add	r7, sp, #0
 8002408:	7138      	strb	r0, [r7, #4]
 800240a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800240c:	6838      	ldr	r0, [r7, #0]
 800240e:	f000 fe71 	bl	80030f4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8002412:	4603      	mov	r3, r0
 8002414:	4618      	mov	r0, r3
 8002416:	f000 fe78 	bl	800310a <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 800241a:	4603      	mov	r3, r0
 800241c:	4618      	mov	r0, r3
 800241e:	3708      	adds	r7, #8
 8002420:	46bd      	mov	sp, r7
 8002422:	bd80      	pop	{r7, pc}

08002424 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002424:	b590      	push	{r4, r7, lr}
 8002426:	b083      	sub	sp, #12
 8002428:	af00      	add	r7, sp, #0
 800242a:	7138      	strb	r0, [r7, #4]
 800242c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800242e:	6838      	ldr	r0, [r7, #0]
 8002430:	f000 fe2a 	bl	8003088 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002434:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002436:	4619      	mov	r1, r3
 8002438:	4620      	mov	r0, r4
 800243a:	f7ff ffe2 	bl	8002402 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800243e:	4603      	mov	r3, r0
    }
 8002440:	4618      	mov	r0, r3
 8002442:	370c      	adds	r7, #12
 8002444:	46bd      	mov	sp, r7
 8002446:	bd90      	pop	{r4, r7, pc}

08002448 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002448:	b590      	push	{r4, r7, lr}
 800244a:	b083      	sub	sp, #12
 800244c:	af00      	add	r7, sp, #0
 800244e:	7138      	strb	r0, [r7, #4]
 8002450:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002452:	6838      	ldr	r0, [r7, #0]
 8002454:	f000 fde4 	bl	8003020 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002458:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800245a:	4619      	mov	r1, r3
 800245c:	4620      	mov	r0, r4
 800245e:	f7ff ffe1 	bl	8002424 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002462:	4603      	mov	r3, r0
    }
 8002464:	4618      	mov	r0, r3
 8002466:	370c      	adds	r7, #12
 8002468:	46bd      	mov	sp, r7
 800246a:	bd90      	pop	{r4, r7, pc}

0800246c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800246c:	b590      	push	{r4, r7, lr}
 800246e:	b083      	sub	sp, #12
 8002470:	af00      	add	r7, sp, #0
 8002472:	7138      	strb	r0, [r7, #4]
 8002474:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002476:	6838      	ldr	r0, [r7, #0]
 8002478:	f000 fd9e 	bl	8002fb8 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800247c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800247e:	4619      	mov	r1, r3
 8002480:	4620      	mov	r0, r4
 8002482:	f7ff ffe1 	bl	8002448 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002486:	4603      	mov	r3, r0
    }
 8002488:	4618      	mov	r0, r3
 800248a:	370c      	adds	r7, #12
 800248c:	46bd      	mov	sp, r7
 800248e:	bd90      	pop	{r4, r7, pc}

08002490 <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002490:	b590      	push	{r4, r7, lr}
 8002492:	b083      	sub	sp, #12
 8002494:	af00      	add	r7, sp, #0
 8002496:	7138      	strb	r0, [r7, #4]
 8002498:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800249a:	6838      	ldr	r0, [r7, #0]
 800249c:	f000 fd58 	bl	8002f50 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80024a0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80024a2:	4619      	mov	r1, r3
 80024a4:	4620      	mov	r0, r4
 80024a6:	f7ff ffe1 	bl	800246c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80024aa:	4603      	mov	r3, r0
    }
 80024ac:	4618      	mov	r0, r3
 80024ae:	370c      	adds	r7, #12
 80024b0:	46bd      	mov	sp, r7
 80024b2:	bd90      	pop	{r4, r7, pc}

080024b4 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80024b4:	b590      	push	{r4, r7, lr}
 80024b6:	b083      	sub	sp, #12
 80024b8:	af00      	add	r7, sp, #0
 80024ba:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80024bc:	6878      	ldr	r0, [r7, #4]
 80024be:	f000 fd3c 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80024c2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80024c4:	4619      	mov	r1, r3
 80024c6:	4620      	mov	r0, r4
 80024c8:	f7ff ffe2 	bl	8002490 <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80024cc:	4603      	mov	r3, r0
    }
 80024ce:	4618      	mov	r0, r3
 80024d0:	370c      	adds	r7, #12
 80024d2:	46bd      	mov	sp, r7
 80024d4:	bd90      	pop	{r4, r7, pc}

080024d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80024d6:	b580      	push	{r7, lr}
 80024d8:	b082      	sub	sp, #8
 80024da:	af00      	add	r7, sp, #0
 80024dc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80024de:	6878      	ldr	r0, [r7, #4]
 80024e0:	f000 fd2b 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80024e4:	4603      	mov	r3, r0
 80024e6:	4618      	mov	r0, r3
 80024e8:	f7ff ffe4 	bl	80024b4 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80024ec:	4603      	mov	r3, r0
	}
 80024ee:	4618      	mov	r0, r3
 80024f0:	3708      	adds	r7, #8
 80024f2:	46bd      	mov	sp, r7
 80024f4:	bd80      	pop	{r7, pc}

080024f6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80024f6:	b5b0      	push	{r4, r5, r7, lr}
 80024f8:	b084      	sub	sp, #16
 80024fa:	af00      	add	r7, sp, #0
 80024fc:	6078      	str	r0, [r7, #4]
 80024fe:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002500:	6878      	ldr	r0, [r7, #4]
 8002502:	f000 fd0f 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002506:	4604      	mov	r4, r0
 8002508:	6838      	ldr	r0, [r7, #0]
 800250a:	f000 fd16 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800250e:	4603      	mov	r3, r0
 8002510:	4618      	mov	r0, r3
 8002512:	f7ff ffe0 	bl	80024d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESQ_EEDcOSK_>
 8002516:	4601      	mov	r1, r0
 8002518:	f107 030c 	add.w	r3, r7, #12
 800251c:	461a      	mov	r2, r3
 800251e:	4620      	mov	r0, r4
 8002520:	f000 fe00 	bl	8003124 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002524:	462b      	mov	r3, r5
      }
 8002526:	4618      	mov	r0, r3
 8002528:	3710      	adds	r7, #16
 800252a:	46bd      	mov	sp, r7
 800252c:	bdb0      	pop	{r4, r5, r7, pc}

0800252e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800252e:	b5b0      	push	{r4, r5, r7, lr}
 8002530:	b082      	sub	sp, #8
 8002532:	af00      	add	r7, sp, #0
 8002534:	6078      	str	r0, [r7, #4]
 8002536:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002538:	6878      	ldr	r0, [r7, #4]
 800253a:	f000 fcf3 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800253e:	4604      	mov	r4, r0
 8002540:	6838      	ldr	r0, [r7, #0]
 8002542:	f000 fcfa 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002546:	4603      	mov	r3, r0
 8002548:	4619      	mov	r1, r3
 800254a:	4620      	mov	r0, r4
 800254c:	f7ff ffd3 	bl	80024f6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002550:	462b      	mov	r3, r5
      }
 8002552:	4618      	mov	r0, r3
 8002554:	3708      	adds	r7, #8
 8002556:	46bd      	mov	sp, r7
 8002558:	bdb0      	pop	{r4, r5, r7, pc}

0800255a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800255a:	b5b0      	push	{r4, r5, r7, lr}
 800255c:	b082      	sub	sp, #8
 800255e:	af00      	add	r7, sp, #0
 8002560:	6078      	str	r0, [r7, #4]
 8002562:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002564:	6878      	ldr	r0, [r7, #4]
 8002566:	f000 fcdd 	bl	8002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800256a:	4604      	mov	r4, r0
 800256c:	6838      	ldr	r0, [r7, #0]
 800256e:	f000 fce4 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002572:	4603      	mov	r3, r0
 8002574:	4619      	mov	r1, r3
 8002576:	4620      	mov	r0, r4
 8002578:	f7ff ffd9 	bl	800252e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 800257c:	462b      	mov	r3, r5
      }
 800257e:	4618      	mov	r0, r3
 8002580:	3708      	adds	r7, #8
 8002582:	46bd      	mov	sp, r7
 8002584:	bdb0      	pop	{r4, r5, r7, pc}

08002586 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSR_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8002586:	b580      	push	{r7, lr}
 8002588:	b082      	sub	sp, #8
 800258a:	af00      	add	r7, sp, #0
 800258c:	6078      	str	r0, [r7, #4]
 800258e:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8002590:	683b      	ldr	r3, [r7, #0]
 8002592:	009b      	lsls	r3, r3, #2
 8002594:	687a      	ldr	r2, [r7, #4]
 8002596:	4413      	add	r3, r2
 8002598:	4618      	mov	r0, r3
 800259a:	f000 fde1 	bl	8003160 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 800259e:	4603      	mov	r3, r0
	}
 80025a0:	4618      	mov	r0, r3
 80025a2:	3708      	adds	r7, #8
 80025a4:	46bd      	mov	sp, r7
 80025a6:	bd80      	pop	{r7, pc}

080025a8 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>:

  template<bool __use_index,
	   bool __same_return_types,
	   typename _Visitor, typename... _Variants>
    constexpr decltype(auto)
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 80025a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80025aa:	b085      	sub	sp, #20
 80025ac:	af00      	add	r7, sp, #0
 80025ae:	6078      	str	r0, [r7, #4]
 80025b0:	6039      	str	r1, [r7, #0]

      using _Result_type = typename std::conditional_t<__use_index,
	__detail::__variant::__variant_idx_cookie,
	_Deduced_type>::type;

      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 80025b2:	4b0f      	ldr	r3, [pc, #60]	; (80025f0 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_+0x48>)
 80025b4:	60fb      	str	r3, [r7, #12]
	__same_return_types,
	_Result_type, _Visitor&&, _Variants&&...>::_S_vtable;

      auto __func_ptr = __vtable._M_access(__variants.index()...);
 80025b6:	6838      	ldr	r0, [r7, #0]
 80025b8:	f7fe ffa8 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80025bc:	4603      	mov	r3, r0
 80025be:	4619      	mov	r1, r3
 80025c0:	68f8      	ldr	r0, [r7, #12]
 80025c2:	f7ff ffe0 	bl	8002586 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSR_jDpT_>
 80025c6:	4603      	mov	r3, r0
 80025c8:	681b      	ldr	r3, [r3, #0]
 80025ca:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 80025cc:	68bc      	ldr	r4, [r7, #8]
 80025ce:	6878      	ldr	r0, [r7, #4]
 80025d0:	f000 fdd1 	bl	8003176 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80025d4:	4605      	mov	r5, r0
 80025d6:	6838      	ldr	r0, [r7, #0]
 80025d8:	f000 fcaf 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80025dc:	4603      	mov	r3, r0
 80025de:	4619      	mov	r1, r3
 80025e0:	4628      	mov	r0, r5
 80025e2:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 80025e4:	4633      	mov	r3, r6
    }
 80025e6:	4618      	mov	r0, r3
 80025e8:	3714      	adds	r7, #20
 80025ea:	46bd      	mov	sp, r7
 80025ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80025ee:	bf00      	nop
 80025f0:	08027dcc 	.word	0x08027dcc

080025f4 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>:
      operator=(const _Copy_assign_base& __rhs)
 80025f4:	b580      	push	{r7, lr}
 80025f6:	b084      	sub	sp, #16
 80025f8:	af00      	add	r7, sp, #0
 80025fa:	6078      	str	r0, [r7, #4]
 80025fc:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80025fe:	687b      	ldr	r3, [r7, #4]
 8002600:	60fb      	str	r3, [r7, #12]
 8002602:	6838      	ldr	r0, [r7, #0]
 8002604:	f7ff fc9e 	bl	8001f44 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8002608:	4602      	mov	r2, r0
 800260a:	f107 030c 	add.w	r3, r7, #12
 800260e:	4611      	mov	r1, r2
 8002610:	4618      	mov	r0, r3
 8002612:	f7ff ffc9 	bl	80025a8 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>
	return *this;
 8002616:	687b      	ldr	r3, [r7, #4]
      }
 8002618:	4618      	mov	r0, r3
 800261a:	3710      	adds	r7, #16
 800261c:	46bd      	mov	sp, r7
 800261e:	bd80      	pop	{r7, pc}

08002620 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8002620:	b480      	push	{r7}
 8002622:	b083      	sub	sp, #12
 8002624:	af00      	add	r7, sp, #0
 8002626:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	4618      	mov	r0, r3
 800262c:	370c      	adds	r7, #12
 800262e:	46bd      	mov	sp, r7
 8002630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002634:	4770      	bx	lr

08002636 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>:
        _M_construct(_InIterator __beg, _InIterator __end)
 8002636:	b580      	push	{r7, lr}
 8002638:	b084      	sub	sp, #16
 800263a:	af00      	add	r7, sp, #0
 800263c:	60f8      	str	r0, [r7, #12]
 800263e:	60b9      	str	r1, [r7, #8]
 8002640:	607a      	str	r2, [r7, #4]
	  _M_construct_aux(__beg, __end, _Integral());
 8002642:	687a      	ldr	r2, [r7, #4]
 8002644:	68b9      	ldr	r1, [r7, #8]
 8002646:	68f8      	ldr	r0, [r7, #12]
 8002648:	f000 fda0 	bl	800318c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type>
        }
 800264c:	bf00      	nop
 800264e:	3710      	adds	r7, #16
 8002650:	46bd      	mov	sp, r7
 8002652:	bd80      	pop	{r7, pc}

08002654 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002654:	b480      	push	{r7}
 8002656:	b083      	sub	sp, #12
 8002658:	af00      	add	r7, sp, #0
 800265a:	6078      	str	r0, [r7, #4]
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	4618      	mov	r0, r3
 8002660:	370c      	adds	r7, #12
 8002662:	46bd      	mov	sp, r7
 8002664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002668:	4770      	bx	lr

0800266a <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800266a:	b480      	push	{r7}
 800266c:	b083      	sub	sp, #12
 800266e:	af00      	add	r7, sp, #0
 8002670:	6078      	str	r0, [r7, #4]
 8002672:	687b      	ldr	r3, [r7, #4]
 8002674:	4618      	mov	r0, r3
 8002676:	370c      	adds	r7, #12
 8002678:	46bd      	mov	sp, r7
 800267a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800267e:	4770      	bx	lr

08002680 <_ZNSaISt4pairIKc10token_typeEEC1ERKS3_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8002680:	b580      	push	{r7, lr}
 8002682:	b082      	sub	sp, #8
 8002684:	af00      	add	r7, sp, #0
 8002686:	6078      	str	r0, [r7, #4]
 8002688:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 800268a:	6839      	ldr	r1, [r7, #0]
 800268c:	6878      	ldr	r0, [r7, #4]
 800268e:	f000 fd8e 	bl	80031ae <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1ERKS5_>
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	4618      	mov	r0, r3
 8002696:	3708      	adds	r7, #8
 8002698:	46bd      	mov	sp, r7
 800269a:	bd80      	pop	{r7, pc}

0800269c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
 800269c:	b580      	push	{r7, lr}
 800269e:	b082      	sub	sp, #8
 80026a0:	af00      	add	r7, sp, #0
 80026a2:	6078      	str	r0, [r7, #4]
 80026a4:	6878      	ldr	r0, [r7, #4]
 80026a6:	f000 fd9b 	bl	80031e0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	4618      	mov	r0, r3
 80026ae:	3708      	adds	r7, #8
 80026b0:	46bd      	mov	sp, r7
 80026b2:	bd80      	pop	{r7, pc}

080026b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>:
      _Rb_tree() { }
#else
      _Rb_tree() = default;
#endif

      _Rb_tree(const _Compare& __comp,
 80026b4:	b590      	push	{r4, r7, lr}
 80026b6:	b087      	sub	sp, #28
 80026b8:	af00      	add	r7, sp, #0
 80026ba:	60f8      	str	r0, [r7, #12]
 80026bc:	60b9      	str	r1, [r7, #8]
 80026be:	607a      	str	r2, [r7, #4]
	       const allocator_type& __a = allocator_type())
      : _M_impl(__comp, _Node_allocator(__a)) { }
 80026c0:	68fc      	ldr	r4, [r7, #12]
 80026c2:	f107 0314 	add.w	r3, r7, #20
 80026c6:	6879      	ldr	r1, [r7, #4]
 80026c8:	4618      	mov	r0, r3
 80026ca:	f000 fd7c 	bl	80031c6 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1IS3_EERKSaIT_E>
 80026ce:	f107 0314 	add.w	r3, r7, #20
 80026d2:	461a      	mov	r2, r3
 80026d4:	68b9      	ldr	r1, [r7, #8]
 80026d6:	4620      	mov	r0, r4
 80026d8:	f000 fd8e 	bl	80031f8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>
 80026dc:	f107 0314 	add.w	r3, r7, #20
 80026e0:	4618      	mov	r0, r3
 80026e2:	f000 fd7d 	bl	80031e0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 80026e6:	68fb      	ldr	r3, [r7, #12]
 80026e8:	4618      	mov	r0, r3
 80026ea:	371c      	adds	r7, #28
 80026ec:	46bd      	mov	sp, r7
 80026ee:	bd90      	pop	{r4, r7, pc}

080026f0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 80026f0:	b580      	push	{r7, lr}
 80026f2:	b082      	sub	sp, #8
 80026f4:	af00      	add	r7, sp, #0
 80026f6:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 80026f8:	6878      	ldr	r0, [r7, #4]
 80026fa:	f000 fdb9 	bl	8003270 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 80026fe:	4603      	mov	r3, r0
 8002700:	4619      	mov	r1, r3
 8002702:	6878      	ldr	r0, [r7, #4]
 8002704:	f000 fd95 	bl	8003232 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	4618      	mov	r0, r3
 800270c:	f7ff ffc6 	bl	800269c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	4618      	mov	r0, r3
 8002714:	3708      	adds	r7, #8
 8002716:	46bd      	mov	sp, r7
 8002718:	bd80      	pop	{r7, pc}

0800271a <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
 800271a:	b480      	push	{r7}
 800271c:	b083      	sub	sp, #12
 800271e:	af00      	add	r7, sp, #0
 8002720:	6078      	str	r0, [r7, #4]
 8002722:	687b      	ldr	r3, [r7, #4]
 8002724:	681b      	ldr	r3, [r3, #0]
 8002726:	4618      	mov	r0, r3
 8002728:	370c      	adds	r7, #12
 800272a:	46bd      	mov	sp, r7
 800272c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002730:	4770      	bx	lr

08002732 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
 8002732:	b590      	push	{r4, r7, lr}
 8002734:	b083      	sub	sp, #12
 8002736:	af00      	add	r7, sp, #0
 8002738:	6078      	str	r0, [r7, #4]
 800273a:	6878      	ldr	r0, [r7, #4]
 800273c:	f7ff ffed 	bl	800271a <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>
 8002740:	4604      	mov	r4, r0
 8002742:	6878      	ldr	r0, [r7, #4]
 8002744:	f000 fda0 	bl	8003288 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE4sizeEv>
 8002748:	4603      	mov	r3, r0
 800274a:	005b      	lsls	r3, r3, #1
 800274c:	4423      	add	r3, r4
 800274e:	4618      	mov	r0, r3
 8002750:	370c      	adds	r7, #12
 8002752:	46bd      	mov	sp, r7
 8002754:	bd90      	pop	{r4, r7, pc}

08002756 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>:
	using __same_value_type
	  = is_same<value_type, typename iterator_traits<_Iter>::value_type>;

      template<typename _InputIterator>
	__enable_if_t<__same_value_type<_InputIterator>::value>
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 8002756:	b580      	push	{r7, lr}
 8002758:	b088      	sub	sp, #32
 800275a:	af00      	add	r7, sp, #0
 800275c:	60f8      	str	r0, [r7, #12]
 800275e:	60b9      	str	r1, [r7, #8]
 8002760:	607a      	str	r2, [r7, #4]
	{
	  _Alloc_node __an(*this);
 8002762:	f107 0314 	add.w	r3, r7, #20
 8002766:	68f9      	ldr	r1, [r7, #12]
 8002768:	4618      	mov	r0, r3
 800276a:	f000 fd99 	bl	80032a0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>
	  for (; __first != __last; ++__first)
 800276e:	68ba      	ldr	r2, [r7, #8]
 8002770:	687b      	ldr	r3, [r7, #4]
 8002772:	429a      	cmp	r2, r3
 8002774:	d017      	beq.n	80027a6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 8002776:	68f8      	ldr	r0, [r7, #12]
 8002778:	f000 fda1 	bl	80032be <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800277c:	4603      	mov	r3, r0
 800277e:	61fb      	str	r3, [r7, #28]
 8002780:	f107 021c 	add.w	r2, r7, #28
 8002784:	f107 0318 	add.w	r3, r7, #24
 8002788:	4611      	mov	r1, r2
 800278a:	4618      	mov	r0, r3
 800278c:	f000 fda8 	bl	80032e0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1ERKSt17_Rb_tree_iteratorIS3_E>
 8002790:	f107 0314 	add.w	r3, r7, #20
 8002794:	68ba      	ldr	r2, [r7, #8]
 8002796:	69b9      	ldr	r1, [r7, #24]
 8002798:	68f8      	ldr	r0, [r7, #12]
 800279a:	f000 fdb1 	bl	8003300 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>
	  for (; __first != __last; ++__first)
 800279e:	68bb      	ldr	r3, [r7, #8]
 80027a0:	3302      	adds	r3, #2
 80027a2:	60bb      	str	r3, [r7, #8]
 80027a4:	e7e3      	b.n	800276e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x18>
	}
 80027a6:	bf00      	nop
 80027a8:	3720      	adds	r7, #32
 80027aa:	46bd      	mov	sp, r7
 80027ac:	bd80      	pop	{r7, pc}

080027ae <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80027ae:	b480      	push	{r7}
 80027b0:	b083      	sub	sp, #12
 80027b2:	af00      	add	r7, sp, #0
 80027b4:	6078      	str	r0, [r7, #4]
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	4618      	mov	r0, r3
 80027ba:	370c      	adds	r7, #12
 80027bc:	46bd      	mov	sp, r7
 80027be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027c2:	4770      	bx	lr

080027c4 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80027c4:	b480      	push	{r7}
 80027c6:	b083      	sub	sp, #12
 80027c8:	af00      	add	r7, sp, #0
 80027ca:	6078      	str	r0, [r7, #4]
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	4618      	mov	r0, r3
 80027d0:	370c      	adds	r7, #12
 80027d2:	46bd      	mov	sp, r7
 80027d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027d8:	4770      	bx	lr

080027da <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKS9_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80027da:	b580      	push	{r7, lr}
 80027dc:	b082      	sub	sp, #8
 80027de:	af00      	add	r7, sp, #0
 80027e0:	6078      	str	r0, [r7, #4]
 80027e2:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80027e4:	6839      	ldr	r1, [r7, #0]
 80027e6:	6878      	ldr	r0, [r7, #4]
 80027e8:	f000 fdbd 	bl	8003366 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSB_>
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	4618      	mov	r0, r3
 80027f0:	3708      	adds	r7, #8
 80027f2:	46bd      	mov	sp, r7
 80027f4:	bd80      	pop	{r7, pc}

080027f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>:
	struct _Rb_tree_impl
 80027f6:	b580      	push	{r7, lr}
 80027f8:	b082      	sub	sp, #8
 80027fa:	af00      	add	r7, sp, #0
 80027fc:	6078      	str	r0, [r7, #4]
 80027fe:	6878      	ldr	r0, [r7, #4]
 8002800:	f000 fdca 	bl	8003398 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 8002804:	687b      	ldr	r3, [r7, #4]
 8002806:	4618      	mov	r0, r3
 8002808:	3708      	adds	r7, #8
 800280a:	46bd      	mov	sp, r7
 800280c:	bd80      	pop	{r7, pc}

0800280e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1ERKSD_RKSE_>:
      _Rb_tree(const _Compare& __comp,
 800280e:	b590      	push	{r4, r7, lr}
 8002810:	b087      	sub	sp, #28
 8002812:	af00      	add	r7, sp, #0
 8002814:	60f8      	str	r0, [r7, #12]
 8002816:	60b9      	str	r1, [r7, #8]
 8002818:	607a      	str	r2, [r7, #4]
      : _M_impl(__comp, _Node_allocator(__a)) { }
 800281a:	68fc      	ldr	r4, [r7, #12]
 800281c:	f107 0314 	add.w	r3, r7, #20
 8002820:	6879      	ldr	r1, [r7, #4]
 8002822:	4618      	mov	r0, r3
 8002824:	f000 fdab 	bl	800337e <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1IS9_EERKSaIT_E>
 8002828:	f107 0314 	add.w	r3, r7, #20
 800282c:	461a      	mov	r2, r3
 800282e:	68b9      	ldr	r1, [r7, #8]
 8002830:	4620      	mov	r0, r4
 8002832:	f000 fdbd 	bl	80033b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1ERKSD_OSaISt13_Rb_tree_nodeIS9_EE>
 8002836:	f107 0314 	add.w	r3, r7, #20
 800283a:	4618      	mov	r0, r3
 800283c:	f000 fdac 	bl	8003398 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 8002840:	68fb      	ldr	r3, [r7, #12]
 8002842:	4618      	mov	r0, r3
 8002844:	371c      	adds	r7, #28
 8002846:	46bd      	mov	sp, r7
 8002848:	bd90      	pop	{r4, r7, pc}

0800284a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 800284a:	b580      	push	{r7, lr}
 800284c:	b082      	sub	sp, #8
 800284e:	af00      	add	r7, sp, #0
 8002850:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 8002852:	6878      	ldr	r0, [r7, #4]
 8002854:	f000 fde8 	bl	8003428 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8002858:	4603      	mov	r3, r0
 800285a:	4619      	mov	r1, r3
 800285c:	6878      	ldr	r0, [r7, #4]
 800285e:	f000 fdc4 	bl	80033ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	4618      	mov	r0, r3
 8002866:	f7ff ffc6 	bl	80027f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>
 800286a:	687b      	ldr	r3, [r7, #4]
 800286c:	4618      	mov	r0, r3
 800286e:	3708      	adds	r7, #8
 8002870:	46bd      	mov	sp, r7
 8002872:	bd80      	pop	{r7, pc}

08002874 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>:
      begin() const noexcept { return _M_array; }
 8002874:	b480      	push	{r7}
 8002876:	b083      	sub	sp, #12
 8002878:	af00      	add	r7, sp, #0
 800287a:	6078      	str	r0, [r7, #4]
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	681b      	ldr	r3, [r3, #0]
 8002880:	4618      	mov	r0, r3
 8002882:	370c      	adds	r7, #12
 8002884:	46bd      	mov	sp, r7
 8002886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800288a:	4770      	bx	lr

0800288c <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE3endEv>:
      end() const noexcept { return begin() + size(); }
 800288c:	b590      	push	{r4, r7, lr}
 800288e:	b083      	sub	sp, #12
 8002890:	af00      	add	r7, sp, #0
 8002892:	6078      	str	r0, [r7, #4]
 8002894:	6878      	ldr	r0, [r7, #4]
 8002896:	f7ff ffed 	bl	8002874 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>
 800289a:	4604      	mov	r4, r0
 800289c:	6878      	ldr	r0, [r7, #4]
 800289e:	f000 fdcf 	bl	8003440 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE4sizeEv>
 80028a2:	4602      	mov	r2, r0
 80028a4:	4613      	mov	r3, r2
 80028a6:	00db      	lsls	r3, r3, #3
 80028a8:	1a9b      	subs	r3, r3, r2
 80028aa:	009b      	lsls	r3, r3, #2
 80028ac:	4423      	add	r3, r4
 80028ae:	4618      	mov	r0, r3
 80028b0:	370c      	adds	r7, #12
 80028b2:	46bd      	mov	sp, r7
 80028b4:	bd90      	pop	{r4, r7, pc}

080028b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 80028b6:	b580      	push	{r7, lr}
 80028b8:	b088      	sub	sp, #32
 80028ba:	af00      	add	r7, sp, #0
 80028bc:	60f8      	str	r0, [r7, #12]
 80028be:	60b9      	str	r1, [r7, #8]
 80028c0:	607a      	str	r2, [r7, #4]
	  _Alloc_node __an(*this);
 80028c2:	f107 0314 	add.w	r3, r7, #20
 80028c6:	68f9      	ldr	r1, [r7, #12]
 80028c8:	4618      	mov	r0, r3
 80028ca:	f000 fdc5 	bl	8003458 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>
	  for (; __first != __last; ++__first)
 80028ce:	68ba      	ldr	r2, [r7, #8]
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	429a      	cmp	r2, r3
 80028d4:	d017      	beq.n	8002906 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 80028d6:	68f8      	ldr	r0, [r7, #12]
 80028d8:	f000 fdcd 	bl	8003476 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 80028dc:	4603      	mov	r3, r0
 80028de:	61fb      	str	r3, [r7, #28]
 80028e0:	f107 021c 	add.w	r2, r7, #28
 80028e4:	f107 0318 	add.w	r3, r7, #24
 80028e8:	4611      	mov	r1, r2
 80028ea:	4618      	mov	r0, r3
 80028ec:	f000 fdd4 	bl	8003498 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSt17_Rb_tree_iteratorIS9_E>
 80028f0:	f107 0314 	add.w	r3, r7, #20
 80028f4:	68ba      	ldr	r2, [r7, #8]
 80028f6:	69b9      	ldr	r1, [r7, #24]
 80028f8:	68f8      	ldr	r0, [r7, #12]
 80028fa:	f000 fddd 	bl	80034b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_>
	  for (; __first != __last; ++__first)
 80028fe:	68bb      	ldr	r3, [r7, #8]
 8002900:	331c      	adds	r3, #28
 8002902:	60bb      	str	r3, [r7, #8]
 8002904:	e7e3      	b.n	80028ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_+0x18>
	}
 8002906:	bf00      	nop
 8002908:	3720      	adds	r7, #32
 800290a:	46bd      	mov	sp, r7
 800290c:	bd80      	pop	{r7, pc}

0800290e <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800290e:	b480      	push	{r7}
 8002910:	b083      	sub	sp, #12
 8002912:	af00      	add	r7, sp, #0
 8002914:	6078      	str	r0, [r7, #4]
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	4618      	mov	r0, r3
 800291a:	370c      	adds	r7, #12
 800291c:	46bd      	mov	sp, r7
 800291e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002922:	4770      	bx	lr

08002924 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002924:	b480      	push	{r7}
 8002926:	b083      	sub	sp, #12
 8002928:	af00      	add	r7, sp, #0
 800292a:	6078      	str	r0, [r7, #4]
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	4618      	mov	r0, r3
 8002930:	370c      	adds	r7, #12
 8002932:	46bd      	mov	sp, r7
 8002934:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002938:	4770      	bx	lr

0800293a <_ZNSaISt4pairIKc12double_tokenEEC1ERKS3_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800293a:	b580      	push	{r7, lr}
 800293c:	b082      	sub	sp, #8
 800293e:	af00      	add	r7, sp, #0
 8002940:	6078      	str	r0, [r7, #4]
 8002942:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8002944:	6839      	ldr	r1, [r7, #0]
 8002946:	6878      	ldr	r0, [r7, #4]
 8002948:	f000 fde9 	bl	800351e <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1ERKS5_>
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	4618      	mov	r0, r3
 8002950:	3708      	adds	r7, #8
 8002952:	46bd      	mov	sp, r7
 8002954:	bd80      	pop	{r7, pc}

08002956 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>:
	struct _Rb_tree_impl
 8002956:	b580      	push	{r7, lr}
 8002958:	b082      	sub	sp, #8
 800295a:	af00      	add	r7, sp, #0
 800295c:	6078      	str	r0, [r7, #4]
 800295e:	6878      	ldr	r0, [r7, #4]
 8002960:	f000 fdf6 	bl	8003550 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 8002964:	687b      	ldr	r3, [r7, #4]
 8002966:	4618      	mov	r0, r3
 8002968:	3708      	adds	r7, #8
 800296a:	46bd      	mov	sp, r7
 800296c:	bd80      	pop	{r7, pc}

0800296e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>:
      _Rb_tree(const _Compare& __comp,
 800296e:	b590      	push	{r4, r7, lr}
 8002970:	b087      	sub	sp, #28
 8002972:	af00      	add	r7, sp, #0
 8002974:	60f8      	str	r0, [r7, #12]
 8002976:	60b9      	str	r1, [r7, #8]
 8002978:	607a      	str	r2, [r7, #4]
      : _M_impl(__comp, _Node_allocator(__a)) { }
 800297a:	68fc      	ldr	r4, [r7, #12]
 800297c:	f107 0314 	add.w	r3, r7, #20
 8002980:	6879      	ldr	r1, [r7, #4]
 8002982:	4618      	mov	r0, r3
 8002984:	f000 fdd7 	bl	8003536 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1IS3_EERKSaIT_E>
 8002988:	f107 0314 	add.w	r3, r7, #20
 800298c:	461a      	mov	r2, r3
 800298e:	68b9      	ldr	r1, [r7, #8]
 8002990:	4620      	mov	r0, r4
 8002992:	f000 fde9 	bl	8003568 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>
 8002996:	f107 0314 	add.w	r3, r7, #20
 800299a:	4618      	mov	r0, r3
 800299c:	f000 fdd8 	bl	8003550 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 80029a0:	68fb      	ldr	r3, [r7, #12]
 80029a2:	4618      	mov	r0, r3
 80029a4:	371c      	adds	r7, #28
 80029a6:	46bd      	mov	sp, r7
 80029a8:	bd90      	pop	{r4, r7, pc}

080029aa <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 80029aa:	b580      	push	{r7, lr}
 80029ac:	b082      	sub	sp, #8
 80029ae:	af00      	add	r7, sp, #0
 80029b0:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 80029b2:	6878      	ldr	r0, [r7, #4]
 80029b4:	f000 fe14 	bl	80035e0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 80029b8:	4603      	mov	r3, r0
 80029ba:	4619      	mov	r1, r3
 80029bc:	6878      	ldr	r0, [r7, #4]
 80029be:	f000 fdf0 	bl	80035a2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	4618      	mov	r0, r3
 80029c6:	f7ff ffc6 	bl	8002956 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	4618      	mov	r0, r3
 80029ce:	3708      	adds	r7, #8
 80029d0:	46bd      	mov	sp, r7
 80029d2:	bd80      	pop	{r7, pc}

080029d4 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>:
      begin() const noexcept { return _M_array; }
 80029d4:	b480      	push	{r7}
 80029d6:	b083      	sub	sp, #12
 80029d8:	af00      	add	r7, sp, #0
 80029da:	6078      	str	r0, [r7, #4]
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	4618      	mov	r0, r3
 80029e2:	370c      	adds	r7, #12
 80029e4:	46bd      	mov	sp, r7
 80029e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ea:	4770      	bx	lr

080029ec <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE3endEv>:
      end() const noexcept { return begin() + size(); }
 80029ec:	b590      	push	{r4, r7, lr}
 80029ee:	b083      	sub	sp, #12
 80029f0:	af00      	add	r7, sp, #0
 80029f2:	6078      	str	r0, [r7, #4]
 80029f4:	6878      	ldr	r0, [r7, #4]
 80029f6:	f7ff ffed 	bl	80029d4 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>
 80029fa:	4604      	mov	r4, r0
 80029fc:	6878      	ldr	r0, [r7, #4]
 80029fe:	f000 fdfb 	bl	80035f8 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE4sizeEv>
 8002a02:	4602      	mov	r2, r0
 8002a04:	4613      	mov	r3, r2
 8002a06:	005b      	lsls	r3, r3, #1
 8002a08:	4413      	add	r3, r2
 8002a0a:	4423      	add	r3, r4
 8002a0c:	4618      	mov	r0, r3
 8002a0e:	370c      	adds	r7, #12
 8002a10:	46bd      	mov	sp, r7
 8002a12:	bd90      	pop	{r4, r7, pc}

08002a14 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 8002a14:	b580      	push	{r7, lr}
 8002a16:	b088      	sub	sp, #32
 8002a18:	af00      	add	r7, sp, #0
 8002a1a:	60f8      	str	r0, [r7, #12]
 8002a1c:	60b9      	str	r1, [r7, #8]
 8002a1e:	607a      	str	r2, [r7, #4]
	  _Alloc_node __an(*this);
 8002a20:	f107 0314 	add.w	r3, r7, #20
 8002a24:	68f9      	ldr	r1, [r7, #12]
 8002a26:	4618      	mov	r0, r3
 8002a28:	f000 fdf2 	bl	8003610 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>
	  for (; __first != __last; ++__first)
 8002a2c:	68ba      	ldr	r2, [r7, #8]
 8002a2e:	687b      	ldr	r3, [r7, #4]
 8002a30:	429a      	cmp	r2, r3
 8002a32:	d017      	beq.n	8002a64 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 8002a34:	68f8      	ldr	r0, [r7, #12]
 8002a36:	f000 fdfa 	bl	800362e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8002a3a:	4603      	mov	r3, r0
 8002a3c:	61fb      	str	r3, [r7, #28]
 8002a3e:	f107 021c 	add.w	r2, r7, #28
 8002a42:	f107 0318 	add.w	r3, r7, #24
 8002a46:	4611      	mov	r1, r2
 8002a48:	4618      	mov	r0, r3
 8002a4a:	f000 fe01 	bl	8003650 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1ERKSt17_Rb_tree_iteratorIS3_E>
 8002a4e:	f107 0314 	add.w	r3, r7, #20
 8002a52:	68ba      	ldr	r2, [r7, #8]
 8002a54:	69b9      	ldr	r1, [r7, #24]
 8002a56:	68f8      	ldr	r0, [r7, #12]
 8002a58:	f000 fe0a 	bl	8003670 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>
	  for (; __first != __last; ++__first)
 8002a5c:	68bb      	ldr	r3, [r7, #8]
 8002a5e:	3303      	adds	r3, #3
 8002a60:	60bb      	str	r3, [r7, #8]
 8002a62:	e7e3      	b.n	8002a2c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x18>
	}
 8002a64:	bf00      	nop
 8002a66:	3720      	adds	r7, #32
 8002a68:	46bd      	mov	sp, r7
 8002a6a:	bd80      	pop	{r7, pc}

08002a6c <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8002a6c:	b480      	push	{r7}
 8002a6e:	b083      	sub	sp, #12
 8002a70:	af00      	add	r7, sp, #0
 8002a72:	6078      	str	r0, [r7, #4]
 8002a74:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8002a76:	683b      	ldr	r3, [r7, #0]
 8002a78:	681a      	ldr	r2, [r3, #0]
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	601a      	str	r2, [r3, #0]
 8002a7e:	687b      	ldr	r3, [r7, #4]
 8002a80:	4618      	mov	r0, r3
 8002a82:	370c      	adds	r7, #12
 8002a84:	46bd      	mov	sp, r7
 8002a86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a8a:	4770      	bx	lr

08002a8c <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8002a8c:	b480      	push	{r7}
 8002a8e:	b083      	sub	sp, #12
 8002a90:	af00      	add	r7, sp, #0
 8002a92:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	4618      	mov	r0, r3
 8002a98:	370c      	adds	r7, #12
 8002a9a:	46bd      	mov	sp, r7
 8002a9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002aa0:	4770      	bx	lr

08002aa2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>:
      constexpr size_t index() const noexcept
 8002aa2:	b480      	push	{r7}
 8002aa4:	b083      	sub	sp, #12
 8002aa6:	af00      	add	r7, sp, #0
 8002aa8:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 8002aaa:	687b      	ldr	r3, [r7, #4]
 8002aac:	791b      	ldrb	r3, [r3, #4]
 8002aae:	2bff      	cmp	r3, #255	; 0xff
 8002ab0:	d102      	bne.n	8002ab8 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv+0x16>
	  return variant_npos;
 8002ab2:	f04f 33ff 	mov.w	r3, #4294967295
 8002ab6:	e001      	b.n	8002abc <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv+0x1a>
	return this->_M_index;
 8002ab8:	687b      	ldr	r3, [r7, #4]
 8002aba:	791b      	ldrb	r3, [r3, #4]
      }
 8002abc:	4618      	mov	r0, r3
 8002abe:	370c      	adds	r7, #12
 8002ac0:	46bd      	mov	sp, r7
 8002ac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ac6:	4770      	bx	lr

08002ac8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002ac8:	b580      	push	{r7, lr}
 8002aca:	b082      	sub	sp, #8
 8002acc:	af00      	add	r7, sp, #0
 8002ace:	7138      	strb	r0, [r7, #4]
 8002ad0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002ad2:	6838      	ldr	r0, [r7, #0]
 8002ad4:	f000 fe0a 	bl	80036ec <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002ad8:	4603      	mov	r3, r0
 8002ada:	4618      	mov	r0, r3
 8002adc:	f000 fe11 	bl	8003702 <_ZNRSt8__detail9__variant14_UninitializedIP10AssignmentLb1EE6_M_getEv>
 8002ae0:	4603      	mov	r3, r0
 8002ae2:	4618      	mov	r0, r3
 8002ae4:	3708      	adds	r7, #8
 8002ae6:	46bd      	mov	sp, r7
 8002ae8:	bd80      	pop	{r7, pc}

08002aea <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002aea:	b590      	push	{r4, r7, lr}
 8002aec:	b083      	sub	sp, #12
 8002aee:	af00      	add	r7, sp, #0
 8002af0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002af2:	6878      	ldr	r0, [r7, #4]
 8002af4:	f000 fdef 	bl	80036d6 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002af8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002afa:	4619      	mov	r1, r3
 8002afc:	4620      	mov	r0, r4
 8002afe:	f7ff ffe3 	bl	8002ac8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002b02:	4603      	mov	r3, r0
    }
 8002b04:	4618      	mov	r0, r3
 8002b06:	370c      	adds	r7, #12
 8002b08:	46bd      	mov	sp, r7
 8002b0a:	bd90      	pop	{r4, r7, pc}

08002b0c <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8002b0c:	b580      	push	{r7, lr}
 8002b0e:	b082      	sub	sp, #8
 8002b10:	af00      	add	r7, sp, #0
 8002b12:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8002b14:	6878      	ldr	r0, [r7, #4]
 8002b16:	f7ff ffc4 	bl	8002aa2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8002b1a:	4603      	mov	r3, r0
 8002b1c:	2b00      	cmp	r3, #0
 8002b1e:	bf14      	ite	ne
 8002b20:	2301      	movne	r3, #1
 8002b22:	2300      	moveq	r3, #0
 8002b24:	b2db      	uxtb	r3, r3
 8002b26:	2b00      	cmp	r3, #0
 8002b28:	d002      	beq.n	8002b30 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8002b2a:	4805      	ldr	r0, [pc, #20]	; (8002b40 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8002b2c:	f7fe faa1 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8002b30:	6878      	ldr	r0, [r7, #4]
 8002b32:	f7ff ffda 	bl	8002aea <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8002b36:	4603      	mov	r3, r0
    }
 8002b38:	4618      	mov	r0, r3
 8002b3a:	3708      	adds	r7, #8
 8002b3c:	46bd      	mov	sp, r7
 8002b3e:	bd80      	pop	{r7, pc}
 8002b40:	080271c8 	.word	0x080271c8

08002b44 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002b44:	b580      	push	{r7, lr}
 8002b46:	b082      	sub	sp, #8
 8002b48:	af00      	add	r7, sp, #0
 8002b4a:	7138      	strb	r0, [r7, #4]
 8002b4c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002b4e:	6838      	ldr	r0, [r7, #0]
 8002b50:	f000 fde2 	bl	8003718 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002b54:	4603      	mov	r3, r0
 8002b56:	4618      	mov	r0, r3
 8002b58:	f000 fde9 	bl	800372e <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>
 8002b5c:	4603      	mov	r3, r0
 8002b5e:	4618      	mov	r0, r3
 8002b60:	3708      	adds	r7, #8
 8002b62:	46bd      	mov	sp, r7
 8002b64:	bd80      	pop	{r7, pc}

08002b66 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002b66:	b590      	push	{r4, r7, lr}
 8002b68:	b083      	sub	sp, #12
 8002b6a:	af00      	add	r7, sp, #0
 8002b6c:	7138      	strb	r0, [r7, #4]
 8002b6e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002b70:	6838      	ldr	r0, [r7, #0]
 8002b72:	f000 fdbb 	bl	80036ec <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002b76:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002b78:	4619      	mov	r1, r3
 8002b7a:	4620      	mov	r0, r4
 8002b7c:	f7ff ffe2 	bl	8002b44 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002b80:	4603      	mov	r3, r0
    }
 8002b82:	4618      	mov	r0, r3
 8002b84:	370c      	adds	r7, #12
 8002b86:	46bd      	mov	sp, r7
 8002b88:	bd90      	pop	{r4, r7, pc}

08002b8a <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002b8a:	b590      	push	{r4, r7, lr}
 8002b8c:	b083      	sub	sp, #12
 8002b8e:	af00      	add	r7, sp, #0
 8002b90:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002b92:	6878      	ldr	r0, [r7, #4]
 8002b94:	f000 fd9f 	bl	80036d6 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002b98:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002b9a:	4619      	mov	r1, r3
 8002b9c:	4620      	mov	r0, r4
 8002b9e:	f7ff ffe2 	bl	8002b66 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002ba2:	4603      	mov	r3, r0
    }
 8002ba4:	4618      	mov	r0, r3
 8002ba6:	370c      	adds	r7, #12
 8002ba8:	46bd      	mov	sp, r7
 8002baa:	bd90      	pop	{r4, r7, pc}

08002bac <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8002bac:	b580      	push	{r7, lr}
 8002bae:	b082      	sub	sp, #8
 8002bb0:	af00      	add	r7, sp, #0
 8002bb2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8002bb4:	6878      	ldr	r0, [r7, #4]
 8002bb6:	f7ff ff74 	bl	8002aa2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8002bba:	4603      	mov	r3, r0
 8002bbc:	2b01      	cmp	r3, #1
 8002bbe:	bf14      	ite	ne
 8002bc0:	2301      	movne	r3, #1
 8002bc2:	2300      	moveq	r3, #0
 8002bc4:	b2db      	uxtb	r3, r3
 8002bc6:	2b00      	cmp	r3, #0
 8002bc8:	d002      	beq.n	8002bd0 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8002bca:	4805      	ldr	r0, [pc, #20]	; (8002be0 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8002bcc:	f7fe fa51 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8002bd0:	6878      	ldr	r0, [r7, #4]
 8002bd2:	f7ff ffda 	bl	8002b8a <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8002bd6:	4603      	mov	r3, r0
    }
 8002bd8:	4618      	mov	r0, r3
 8002bda:	3708      	adds	r7, #8
 8002bdc:	46bd      	mov	sp, r7
 8002bde:	bd80      	pop	{r7, pc}
 8002be0:	080271c8 	.word	0x080271c8

08002be4 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002be4:	b580      	push	{r7, lr}
 8002be6:	b082      	sub	sp, #8
 8002be8:	af00      	add	r7, sp, #0
 8002bea:	7138      	strb	r0, [r7, #4]
 8002bec:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002bee:	6838      	ldr	r0, [r7, #0]
 8002bf0:	f000 fda8 	bl	8003744 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8002bf4:	4603      	mov	r3, r0
 8002bf6:	4618      	mov	r0, r3
 8002bf8:	f000 fdaf 	bl	800375a <_ZNRSt8__detail9__variant14_UninitializedIP11Method_callLb1EE6_M_getEv>
 8002bfc:	4603      	mov	r3, r0
 8002bfe:	4618      	mov	r0, r3
 8002c00:	3708      	adds	r7, #8
 8002c02:	46bd      	mov	sp, r7
 8002c04:	bd80      	pop	{r7, pc}

08002c06 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002c06:	b590      	push	{r4, r7, lr}
 8002c08:	b083      	sub	sp, #12
 8002c0a:	af00      	add	r7, sp, #0
 8002c0c:	7138      	strb	r0, [r7, #4]
 8002c0e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002c10:	6838      	ldr	r0, [r7, #0]
 8002c12:	f000 fd81 	bl	8003718 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002c16:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002c18:	4619      	mov	r1, r3
 8002c1a:	4620      	mov	r0, r4
 8002c1c:	f7ff ffe2 	bl	8002be4 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002c20:	4603      	mov	r3, r0
    }
 8002c22:	4618      	mov	r0, r3
 8002c24:	370c      	adds	r7, #12
 8002c26:	46bd      	mov	sp, r7
 8002c28:	bd90      	pop	{r4, r7, pc}

08002c2a <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002c2a:	b590      	push	{r4, r7, lr}
 8002c2c:	b083      	sub	sp, #12
 8002c2e:	af00      	add	r7, sp, #0
 8002c30:	7138      	strb	r0, [r7, #4]
 8002c32:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002c34:	6838      	ldr	r0, [r7, #0]
 8002c36:	f000 fd59 	bl	80036ec <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002c3a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002c3c:	4619      	mov	r1, r3
 8002c3e:	4620      	mov	r0, r4
 8002c40:	f7ff ffe1 	bl	8002c06 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002c44:	4603      	mov	r3, r0
    }
 8002c46:	4618      	mov	r0, r3
 8002c48:	370c      	adds	r7, #12
 8002c4a:	46bd      	mov	sp, r7
 8002c4c:	bd90      	pop	{r4, r7, pc}

08002c4e <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002c4e:	b590      	push	{r4, r7, lr}
 8002c50:	b083      	sub	sp, #12
 8002c52:	af00      	add	r7, sp, #0
 8002c54:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002c56:	6878      	ldr	r0, [r7, #4]
 8002c58:	f000 fd3d 	bl	80036d6 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002c5c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002c5e:	4619      	mov	r1, r3
 8002c60:	4620      	mov	r0, r4
 8002c62:	f7ff ffe2 	bl	8002c2a <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002c66:	4603      	mov	r3, r0
    }
 8002c68:	4618      	mov	r0, r3
 8002c6a:	370c      	adds	r7, #12
 8002c6c:	46bd      	mov	sp, r7
 8002c6e:	bd90      	pop	{r4, r7, pc}

08002c70 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8002c70:	b580      	push	{r7, lr}
 8002c72:	b082      	sub	sp, #8
 8002c74:	af00      	add	r7, sp, #0
 8002c76:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8002c78:	6878      	ldr	r0, [r7, #4]
 8002c7a:	f7ff ff12 	bl	8002aa2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8002c7e:	4603      	mov	r3, r0
 8002c80:	2b02      	cmp	r3, #2
 8002c82:	bf14      	ite	ne
 8002c84:	2301      	movne	r3, #1
 8002c86:	2300      	moveq	r3, #0
 8002c88:	b2db      	uxtb	r3, r3
 8002c8a:	2b00      	cmp	r3, #0
 8002c8c:	d002      	beq.n	8002c94 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8002c8e:	4805      	ldr	r0, [pc, #20]	; (8002ca4 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8002c90:	f7fe f9ef 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8002c94:	6878      	ldr	r0, [r7, #4]
 8002c96:	f7ff ffda 	bl	8002c4e <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8002c9a:	4603      	mov	r3, r0
    }
 8002c9c:	4618      	mov	r0, r3
 8002c9e:	3708      	adds	r7, #8
 8002ca0:	46bd      	mov	sp, r7
 8002ca2:	bd80      	pop	{r7, pc}
 8002ca4:	080271c8 	.word	0x080271c8

08002ca8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002ca8:	b580      	push	{r7, lr}
 8002caa:	b082      	sub	sp, #8
 8002cac:	af00      	add	r7, sp, #0
 8002cae:	7138      	strb	r0, [r7, #4]
 8002cb0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002cb2:	6838      	ldr	r0, [r7, #0]
 8002cb4:	f000 fd5c 	bl	8003770 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8002cb8:	4603      	mov	r3, r0
 8002cba:	4618      	mov	r0, r3
 8002cbc:	f000 fd63 	bl	8003786 <_ZNRSt8__detail9__variant14_UninitializedIP15While_statementLb1EE6_M_getEv>
 8002cc0:	4603      	mov	r3, r0
 8002cc2:	4618      	mov	r0, r3
 8002cc4:	3708      	adds	r7, #8
 8002cc6:	46bd      	mov	sp, r7
 8002cc8:	bd80      	pop	{r7, pc}

08002cca <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002cca:	b590      	push	{r4, r7, lr}
 8002ccc:	b083      	sub	sp, #12
 8002cce:	af00      	add	r7, sp, #0
 8002cd0:	7138      	strb	r0, [r7, #4]
 8002cd2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002cd4:	6838      	ldr	r0, [r7, #0]
 8002cd6:	f000 fd35 	bl	8003744 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8002cda:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002cdc:	4619      	mov	r1, r3
 8002cde:	4620      	mov	r0, r4
 8002ce0:	f7ff ffe2 	bl	8002ca8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002ce4:	4603      	mov	r3, r0
    }
 8002ce6:	4618      	mov	r0, r3
 8002ce8:	370c      	adds	r7, #12
 8002cea:	46bd      	mov	sp, r7
 8002cec:	bd90      	pop	{r4, r7, pc}

08002cee <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002cee:	b590      	push	{r4, r7, lr}
 8002cf0:	b083      	sub	sp, #12
 8002cf2:	af00      	add	r7, sp, #0
 8002cf4:	7138      	strb	r0, [r7, #4]
 8002cf6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002cf8:	6838      	ldr	r0, [r7, #0]
 8002cfa:	f000 fd0d 	bl	8003718 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002cfe:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002d00:	4619      	mov	r1, r3
 8002d02:	4620      	mov	r0, r4
 8002d04:	f7ff ffe1 	bl	8002cca <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002d08:	4603      	mov	r3, r0
    }
 8002d0a:	4618      	mov	r0, r3
 8002d0c:	370c      	adds	r7, #12
 8002d0e:	46bd      	mov	sp, r7
 8002d10:	bd90      	pop	{r4, r7, pc}

08002d12 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002d12:	b590      	push	{r4, r7, lr}
 8002d14:	b083      	sub	sp, #12
 8002d16:	af00      	add	r7, sp, #0
 8002d18:	7138      	strb	r0, [r7, #4]
 8002d1a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002d1c:	6838      	ldr	r0, [r7, #0]
 8002d1e:	f000 fce5 	bl	80036ec <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002d22:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002d24:	4619      	mov	r1, r3
 8002d26:	4620      	mov	r0, r4
 8002d28:	f7ff ffe1 	bl	8002cee <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002d2c:	4603      	mov	r3, r0
    }
 8002d2e:	4618      	mov	r0, r3
 8002d30:	370c      	adds	r7, #12
 8002d32:	46bd      	mov	sp, r7
 8002d34:	bd90      	pop	{r4, r7, pc}

08002d36 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002d36:	b590      	push	{r4, r7, lr}
 8002d38:	b083      	sub	sp, #12
 8002d3a:	af00      	add	r7, sp, #0
 8002d3c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002d3e:	6878      	ldr	r0, [r7, #4]
 8002d40:	f000 fcc9 	bl	80036d6 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002d44:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002d46:	4619      	mov	r1, r3
 8002d48:	4620      	mov	r0, r4
 8002d4a:	f7ff ffe2 	bl	8002d12 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002d4e:	4603      	mov	r3, r0
    }
 8002d50:	4618      	mov	r0, r3
 8002d52:	370c      	adds	r7, #12
 8002d54:	46bd      	mov	sp, r7
 8002d56:	bd90      	pop	{r4, r7, pc}

08002d58 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8002d58:	b580      	push	{r7, lr}
 8002d5a:	b082      	sub	sp, #8
 8002d5c:	af00      	add	r7, sp, #0
 8002d5e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8002d60:	6878      	ldr	r0, [r7, #4]
 8002d62:	f7ff fe9e 	bl	8002aa2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8002d66:	4603      	mov	r3, r0
 8002d68:	2b03      	cmp	r3, #3
 8002d6a:	bf14      	ite	ne
 8002d6c:	2301      	movne	r3, #1
 8002d6e:	2300      	moveq	r3, #0
 8002d70:	b2db      	uxtb	r3, r3
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d002      	beq.n	8002d7c <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8002d76:	4805      	ldr	r0, [pc, #20]	; (8002d8c <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8002d78:	f7fe f97b 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8002d7c:	6878      	ldr	r0, [r7, #4]
 8002d7e:	f7ff ffda 	bl	8002d36 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8002d82:	4603      	mov	r3, r0
    }
 8002d84:	4618      	mov	r0, r3
 8002d86:	3708      	adds	r7, #8
 8002d88:	46bd      	mov	sp, r7
 8002d8a:	bd80      	pop	{r7, pc}
 8002d8c:	080271c8 	.word	0x080271c8

08002d90 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002d90:	b580      	push	{r7, lr}
 8002d92:	b082      	sub	sp, #8
 8002d94:	af00      	add	r7, sp, #0
 8002d96:	7138      	strb	r0, [r7, #4]
 8002d98:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002d9a:	6838      	ldr	r0, [r7, #0]
 8002d9c:	f000 fcfe 	bl	800379c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP12If_statementEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8002da0:	4603      	mov	r3, r0
 8002da2:	4618      	mov	r0, r3
 8002da4:	f000 fd05 	bl	80037b2 <_ZNRSt8__detail9__variant14_UninitializedIP12If_statementLb1EE6_M_getEv>
 8002da8:	4603      	mov	r3, r0
 8002daa:	4618      	mov	r0, r3
 8002dac:	3708      	adds	r7, #8
 8002dae:	46bd      	mov	sp, r7
 8002db0:	bd80      	pop	{r7, pc}

08002db2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002db2:	b590      	push	{r4, r7, lr}
 8002db4:	b083      	sub	sp, #12
 8002db6:	af00      	add	r7, sp, #0
 8002db8:	7138      	strb	r0, [r7, #4]
 8002dba:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002dbc:	6838      	ldr	r0, [r7, #0]
 8002dbe:	f000 fcd7 	bl	8003770 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8002dc2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002dc4:	4619      	mov	r1, r3
 8002dc6:	4620      	mov	r0, r4
 8002dc8:	f7ff ffe2 	bl	8002d90 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002dcc:	4603      	mov	r3, r0
    }
 8002dce:	4618      	mov	r0, r3
 8002dd0:	370c      	adds	r7, #12
 8002dd2:	46bd      	mov	sp, r7
 8002dd4:	bd90      	pop	{r4, r7, pc}

08002dd6 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002dd6:	b590      	push	{r4, r7, lr}
 8002dd8:	b083      	sub	sp, #12
 8002dda:	af00      	add	r7, sp, #0
 8002ddc:	7138      	strb	r0, [r7, #4]
 8002dde:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002de0:	6838      	ldr	r0, [r7, #0]
 8002de2:	f000 fcaf 	bl	8003744 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8002de6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002de8:	4619      	mov	r1, r3
 8002dea:	4620      	mov	r0, r4
 8002dec:	f7ff ffe1 	bl	8002db2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002df0:	4603      	mov	r3, r0
    }
 8002df2:	4618      	mov	r0, r3
 8002df4:	370c      	adds	r7, #12
 8002df6:	46bd      	mov	sp, r7
 8002df8:	bd90      	pop	{r4, r7, pc}

08002dfa <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002dfa:	b590      	push	{r4, r7, lr}
 8002dfc:	b083      	sub	sp, #12
 8002dfe:	af00      	add	r7, sp, #0
 8002e00:	7138      	strb	r0, [r7, #4]
 8002e02:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002e04:	6838      	ldr	r0, [r7, #0]
 8002e06:	f000 fc87 	bl	8003718 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002e0a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002e0c:	4619      	mov	r1, r3
 8002e0e:	4620      	mov	r0, r4
 8002e10:	f7ff ffe1 	bl	8002dd6 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002e14:	4603      	mov	r3, r0
    }
 8002e16:	4618      	mov	r0, r3
 8002e18:	370c      	adds	r7, #12
 8002e1a:	46bd      	mov	sp, r7
 8002e1c:	bd90      	pop	{r4, r7, pc}

08002e1e <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002e1e:	b590      	push	{r4, r7, lr}
 8002e20:	b083      	sub	sp, #12
 8002e22:	af00      	add	r7, sp, #0
 8002e24:	7138      	strb	r0, [r7, #4]
 8002e26:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002e28:	6838      	ldr	r0, [r7, #0]
 8002e2a:	f000 fc5f 	bl	80036ec <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002e2e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002e30:	4619      	mov	r1, r3
 8002e32:	4620      	mov	r0, r4
 8002e34:	f7ff ffe1 	bl	8002dfa <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002e38:	4603      	mov	r3, r0
    }
 8002e3a:	4618      	mov	r0, r3
 8002e3c:	370c      	adds	r7, #12
 8002e3e:	46bd      	mov	sp, r7
 8002e40:	bd90      	pop	{r4, r7, pc}

08002e42 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002e42:	b590      	push	{r4, r7, lr}
 8002e44:	b083      	sub	sp, #12
 8002e46:	af00      	add	r7, sp, #0
 8002e48:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002e4a:	6878      	ldr	r0, [r7, #4]
 8002e4c:	f000 fc43 	bl	80036d6 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002e50:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002e52:	4619      	mov	r1, r3
 8002e54:	4620      	mov	r0, r4
 8002e56:	f7ff ffe2 	bl	8002e1e <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002e5a:	4603      	mov	r3, r0
    }
 8002e5c:	4618      	mov	r0, r3
 8002e5e:	370c      	adds	r7, #12
 8002e60:	46bd      	mov	sp, r7
 8002e62:	bd90      	pop	{r4, r7, pc}

08002e64 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8002e64:	b580      	push	{r7, lr}
 8002e66:	b082      	sub	sp, #8
 8002e68:	af00      	add	r7, sp, #0
 8002e6a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8002e6c:	6878      	ldr	r0, [r7, #4]
 8002e6e:	f7ff fe18 	bl	8002aa2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8002e72:	4603      	mov	r3, r0
 8002e74:	2b04      	cmp	r3, #4
 8002e76:	bf14      	ite	ne
 8002e78:	2301      	movne	r3, #1
 8002e7a:	2300      	moveq	r3, #0
 8002e7c:	b2db      	uxtb	r3, r3
 8002e7e:	2b00      	cmp	r3, #0
 8002e80:	d002      	beq.n	8002e88 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8002e82:	4805      	ldr	r0, [pc, #20]	; (8002e98 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8002e84:	f7fe f8f5 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8002e88:	6878      	ldr	r0, [r7, #4]
 8002e8a:	f7ff ffda 	bl	8002e42 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8002e8e:	4603      	mov	r3, r0
    }
 8002e90:	4618      	mov	r0, r3
 8002e92:	3708      	adds	r7, #8
 8002e94:	46bd      	mov	sp, r7
 8002e96:	bd80      	pop	{r7, pc}
 8002e98:	080271c8 	.word	0x080271c8

08002e9c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>:
      void _M_reset()
 8002e9c:	b580      	push	{r7, lr}
 8002e9e:	b082      	sub	sp, #8
 8002ea0:	af00      	add	r7, sp, #0
 8002ea2:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 8002ea4:	6878      	ldr	r0, [r7, #4]
 8002ea6:	f000 ff75 	bl	8003d94 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEv>
	_M_index = variant_npos;
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	22ff      	movs	r2, #255	; 0xff
 8002eae:	761a      	strb	r2, [r3, #24]
      }
 8002eb0:	bf00      	nop
 8002eb2:	3708      	adds	r7, #8
 8002eb4:	46bd      	mov	sp, r7
 8002eb6:	bd80      	pop	{r7, pc}

08002eb8 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8002eb8:	b580      	push	{r7, lr}
 8002eba:	b084      	sub	sp, #16
 8002ebc:	af00      	add	r7, sp, #0
 8002ebe:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	1d1a      	adds	r2, r3, #4
 8002ec4:	f107 030c 	add.w	r3, r7, #12
 8002ec8:	4611      	mov	r1, r2
 8002eca:	4618      	mov	r0, r3
 8002ecc:	f000 ff74 	bl	8003db8 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8002ed0:	68fb      	ldr	r3, [r7, #12]
 8002ed2:	4618      	mov	r0, r3
 8002ed4:	3710      	adds	r7, #16
 8002ed6:	46bd      	mov	sp, r7
 8002ed8:	bd80      	pop	{r7, pc}

08002eda <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 8002eda:	b580      	push	{r7, lr}
 8002edc:	b084      	sub	sp, #16
 8002ede:	af00      	add	r7, sp, #0
 8002ee0:	6078      	str	r0, [r7, #4]
 8002ee2:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	681a      	ldr	r2, [r3, #0]
 8002ee8:	683b      	ldr	r3, [r7, #0]
 8002eea:	009b      	lsls	r3, r3, #2
 8002eec:	425b      	negs	r3, r3
 8002eee:	4413      	add	r3, r2
 8002ef0:	60fb      	str	r3, [r7, #12]
 8002ef2:	f107 020c 	add.w	r2, r7, #12
 8002ef6:	f107 0308 	add.w	r3, r7, #8
 8002efa:	4611      	mov	r1, r2
 8002efc:	4618      	mov	r0, r3
 8002efe:	f000 ff5b 	bl	8003db8 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8002f02:	68bb      	ldr	r3, [r7, #8]
 8002f04:	4618      	mov	r0, r3
 8002f06:	3710      	adds	r7, #16
 8002f08:	46bd      	mov	sp, r7
 8002f0a:	bd80      	pop	{r7, pc}

08002f0c <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8002f0c:	b480      	push	{r7}
 8002f0e:	b083      	sub	sp, #12
 8002f10:	af00      	add	r7, sp, #0
 8002f12:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	4618      	mov	r0, r3
 8002f1a:	370c      	adds	r7, #12
 8002f1c:	46bd      	mov	sp, r7
 8002f1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f22:	4770      	bx	lr

08002f24 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8002f24:	b480      	push	{r7}
 8002f26:	b083      	sub	sp, #12
 8002f28:	af00      	add	r7, sp, #0
 8002f2a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8002f2c:	687b      	ldr	r3, [r7, #4]
 8002f2e:	4618      	mov	r0, r3
 8002f30:	370c      	adds	r7, #12
 8002f32:	46bd      	mov	sp, r7
 8002f34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f38:	4770      	bx	lr

08002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8002f3a:	b480      	push	{r7}
 8002f3c:	b083      	sub	sp, #12
 8002f3e:	af00      	add	r7, sp, #0
 8002f40:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8002f42:	687b      	ldr	r3, [r7, #4]
 8002f44:	4618      	mov	r0, r3
 8002f46:	370c      	adds	r7, #12
 8002f48:	46bd      	mov	sp, r7
 8002f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f4e:	4770      	bx	lr

08002f50 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8002f50:	b480      	push	{r7}
 8002f52:	b083      	sub	sp, #12
 8002f54:	af00      	add	r7, sp, #0
 8002f56:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	4618      	mov	r0, r3
 8002f5c:	370c      	adds	r7, #12
 8002f5e:	46bd      	mov	sp, r7
 8002f60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f64:	4770      	bx	lr

08002f66 <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8002f66:	b480      	push	{r7}
 8002f68:	b083      	sub	sp, #12
 8002f6a:	af00      	add	r7, sp, #0
 8002f6c:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	4618      	mov	r0, r3
 8002f72:	370c      	adds	r7, #12
 8002f74:	46bd      	mov	sp, r7
 8002f76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f7a:	4770      	bx	lr

08002f7c <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    { return (*std::forward<_Tp>(__t)).*__f; }

  /// Invoke a callable object.
  template<typename _Callable, typename... _Args>
    constexpr typename __invoke_result<_Callable, _Args...>::type
    __invoke(_Callable&& __fn, _Args&&... __args)
 8002f7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002f80:	b084      	sub	sp, #16
 8002f82:	af00      	add	r7, sp, #0
 8002f84:	60f8      	str	r0, [r7, #12]
 8002f86:	60b9      	str	r1, [r7, #8]
 8002f88:	607a      	str	r2, [r7, #4]
    noexcept(__is_nothrow_invocable<_Callable, _Args...>::value)
    {
      using __result = __invoke_result<_Callable, _Args...>;
      using __type = typename __result::type;
      using __tag = typename __result::__invoke_type;
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8002f8a:	68f8      	ldr	r0, [r7, #12]
 8002f8c:	f000 f8f3 	bl	8003176 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002f90:	4604      	mov	r4, r0
 8002f92:	68b8      	ldr	r0, [r7, #8]
 8002f94:	f000 ff20 	bl	8003dd8 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8002f98:	4605      	mov	r5, r0
 8002f9a:	6878      	ldr	r0, [r7, #4]
 8002f9c:	f000 ff27 	bl	8003dee <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8002fa0:	4603      	mov	r3, r0
 8002fa2:	462a      	mov	r2, r5
 8002fa4:	4621      	mov	r1, r4
 8002fa6:	4630      	mov	r0, r6
 8002fa8:	f000 ff2c 	bl	8003e04 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 8002fac:	4643      	mov	r3, r8
    }
 8002fae:	4618      	mov	r0, r3
 8002fb0:	3710      	adds	r7, #16
 8002fb2:	46bd      	mov	sp, r7
 8002fb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002fb8 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8002fb8:	b480      	push	{r7}
 8002fba:	b083      	sub	sp, #12
 8002fbc:	af00      	add	r7, sp, #0
 8002fbe:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	4618      	mov	r0, r3
 8002fc4:	370c      	adds	r7, #12
 8002fc6:	46bd      	mov	sp, r7
 8002fc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fcc:	4770      	bx	lr

08002fce <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8002fce:	b480      	push	{r7}
 8002fd0:	b083      	sub	sp, #12
 8002fd2:	af00      	add	r7, sp, #0
 8002fd4:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	4618      	mov	r0, r3
 8002fda:	370c      	adds	r7, #12
 8002fdc:	46bd      	mov	sp, r7
 8002fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fe2:	4770      	bx	lr

08002fe4 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8002fe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002fe8:	b084      	sub	sp, #16
 8002fea:	af00      	add	r7, sp, #0
 8002fec:	60f8      	str	r0, [r7, #12]
 8002fee:	60b9      	str	r1, [r7, #8]
 8002ff0:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8002ff2:	68f8      	ldr	r0, [r7, #12]
 8002ff4:	f000 f8bf 	bl	8003176 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002ff8:	4604      	mov	r4, r0
 8002ffa:	68b8      	ldr	r0, [r7, #8]
 8002ffc:	f000 ff20 	bl	8003e40 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8003000:	4605      	mov	r5, r0
 8003002:	6878      	ldr	r0, [r7, #4]
 8003004:	f000 ff27 	bl	8003e56 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003008:	4603      	mov	r3, r0
 800300a:	462a      	mov	r2, r5
 800300c:	4621      	mov	r1, r4
 800300e:	4630      	mov	r0, r6
 8003010:	f000 ff2c 	bl	8003e6c <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 8003014:	4643      	mov	r3, r8
    }
 8003016:	4618      	mov	r0, r3
 8003018:	3710      	adds	r7, #16
 800301a:	46bd      	mov	sp, r7
 800301c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003020 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003020:	b480      	push	{r7}
 8003022:	b083      	sub	sp, #12
 8003024:	af00      	add	r7, sp, #0
 8003026:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003028:	687b      	ldr	r3, [r7, #4]
 800302a:	4618      	mov	r0, r3
 800302c:	370c      	adds	r7, #12
 800302e:	46bd      	mov	sp, r7
 8003030:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003034:	4770      	bx	lr

08003036 <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8003036:	b480      	push	{r7}
 8003038:	b083      	sub	sp, #12
 800303a:	af00      	add	r7, sp, #0
 800303c:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	4618      	mov	r0, r3
 8003042:	370c      	adds	r7, #12
 8003044:	46bd      	mov	sp, r7
 8003046:	f85d 7b04 	ldr.w	r7, [sp], #4
 800304a:	4770      	bx	lr

0800304c <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800304c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003050:	b084      	sub	sp, #16
 8003052:	af00      	add	r7, sp, #0
 8003054:	60f8      	str	r0, [r7, #12]
 8003056:	60b9      	str	r1, [r7, #8]
 8003058:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800305a:	68f8      	ldr	r0, [r7, #12]
 800305c:	f000 f88b 	bl	8003176 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003060:	4604      	mov	r4, r0
 8003062:	68b8      	ldr	r0, [r7, #8]
 8003064:	f000 ff20 	bl	8003ea8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8003068:	4605      	mov	r5, r0
 800306a:	6878      	ldr	r0, [r7, #4]
 800306c:	f000 ff27 	bl	8003ebe <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003070:	4603      	mov	r3, r0
 8003072:	462a      	mov	r2, r5
 8003074:	4621      	mov	r1, r4
 8003076:	4630      	mov	r0, r6
 8003078:	f000 ff2c 	bl	8003ed4 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 800307c:	4643      	mov	r3, r8
    }
 800307e:	4618      	mov	r0, r3
 8003080:	3710      	adds	r7, #16
 8003082:	46bd      	mov	sp, r7
 8003084:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003088 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003088:	b480      	push	{r7}
 800308a:	b083      	sub	sp, #12
 800308c:	af00      	add	r7, sp, #0
 800308e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	4618      	mov	r0, r3
 8003094:	370c      	adds	r7, #12
 8003096:	46bd      	mov	sp, r7
 8003098:	f85d 7b04 	ldr.w	r7, [sp], #4
 800309c:	4770      	bx	lr

0800309e <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 800309e:	b580      	push	{r7, lr}
 80030a0:	b082      	sub	sp, #8
 80030a2:	af00      	add	r7, sp, #0
 80030a4:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	4618      	mov	r0, r3
 80030aa:	f000 ff31 	bl	8003f10 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 80030ae:	4603      	mov	r3, r0
 80030b0:	4618      	mov	r0, r3
 80030b2:	3708      	adds	r7, #8
 80030b4:	46bd      	mov	sp, r7
 80030b6:	bd80      	pop	{r7, pc}

080030b8 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80030b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80030bc:	b084      	sub	sp, #16
 80030be:	af00      	add	r7, sp, #0
 80030c0:	60f8      	str	r0, [r7, #12]
 80030c2:	60b9      	str	r1, [r7, #8]
 80030c4:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80030c6:	68f8      	ldr	r0, [r7, #12]
 80030c8:	f000 f855 	bl	8003176 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80030cc:	4604      	mov	r4, r0
 80030ce:	68b8      	ldr	r0, [r7, #8]
 80030d0:	f000 ff2a 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80030d4:	4605      	mov	r5, r0
 80030d6:	6878      	ldr	r0, [r7, #4]
 80030d8:	f000 ff31 	bl	8003f3e <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80030dc:	4603      	mov	r3, r0
 80030de:	462a      	mov	r2, r5
 80030e0:	4621      	mov	r1, r4
 80030e2:	4630      	mov	r0, r6
 80030e4:	f000 ff36 	bl	8003f54 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKS9_St17integral_constantIjLj3EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 80030e8:	4643      	mov	r3, r8
    }
 80030ea:	4618      	mov	r0, r3
 80030ec:	3710      	adds	r7, #16
 80030ee:	46bd      	mov	sp, r7
 80030f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080030f4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80030f4:	b480      	push	{r7}
 80030f6:	b083      	sub	sp, #12
 80030f8:	af00      	add	r7, sp, #0
 80030fa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	4618      	mov	r0, r3
 8003100:	370c      	adds	r7, #12
 8003102:	46bd      	mov	sp, r7
 8003104:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003108:	4770      	bx	lr

0800310a <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 800310a:	b580      	push	{r7, lr}
 800310c:	b082      	sub	sp, #8
 800310e:	af00      	add	r7, sp, #0
 8003110:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	4618      	mov	r0, r3
 8003116:	f000 ff3b 	bl	8003f90 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 800311a:	4603      	mov	r3, r0
 800311c:	4618      	mov	r0, r3
 800311e:	3708      	adds	r7, #8
 8003120:	46bd      	mov	sp, r7
 8003122:	bd80      	pop	{r7, pc}

08003124 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8003124:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003128:	b084      	sub	sp, #16
 800312a:	af00      	add	r7, sp, #0
 800312c:	60f8      	str	r0, [r7, #12]
 800312e:	60b9      	str	r1, [r7, #8]
 8003130:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8003132:	68f8      	ldr	r0, [r7, #12]
 8003134:	f000 f81f 	bl	8003176 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003138:	4604      	mov	r4, r0
 800313a:	68b8      	ldr	r0, [r7, #8]
 800313c:	f000 ff34 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003140:	4605      	mov	r5, r0
 8003142:	6878      	ldr	r0, [r7, #4]
 8003144:	f000 ff3b 	bl	8003fbe <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003148:	4603      	mov	r3, r0
 800314a:	462a      	mov	r2, r5
 800314c:	4621      	mov	r1, r4
 800314e:	4630      	mov	r0, r6
 8003150:	f000 ff40 	bl	8003fd4 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKSD_St17integral_constantIjLj4EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 8003154:	4643      	mov	r3, r8
    }
 8003156:	4618      	mov	r0, r3
 8003158:	3710      	adds	r7, #16
 800315a:	46bd      	mov	sp, r7
 800315c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003160 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8003160:	b480      	push	{r7}
 8003162:	b083      	sub	sp, #12
 8003164:	af00      	add	r7, sp, #0
 8003166:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	4618      	mov	r0, r3
 800316c:	370c      	adds	r7, #12
 800316e:	46bd      	mov	sp, r7
 8003170:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003174:	4770      	bx	lr

08003176 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003176:	b480      	push	{r7}
 8003178:	b083      	sub	sp, #12
 800317a:	af00      	add	r7, sp, #0
 800317c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	4618      	mov	r0, r3
 8003182:	370c      	adds	r7, #12
 8003184:	46bd      	mov	sp, r7
 8003186:	f85d 7b04 	ldr.w	r7, [sp], #4
 800318a:	4770      	bx	lr

0800318c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type>:
        _M_construct_aux(_InIterator __beg, _InIterator __end,
 800318c:	b590      	push	{r4, r7, lr}
 800318e:	b087      	sub	sp, #28
 8003190:	af00      	add	r7, sp, #0
 8003192:	60f8      	str	r0, [r7, #12]
 8003194:	60b9      	str	r1, [r7, #8]
 8003196:	607a      	str	r2, [r7, #4]
 8003198:	703b      	strb	r3, [r7, #0]
          _M_construct(__beg, __end, _Tag());
 800319a:	4623      	mov	r3, r4
 800319c:	687a      	ldr	r2, [r7, #4]
 800319e:	68b9      	ldr	r1, [r7, #8]
 80031a0:	68f8      	ldr	r0, [r7, #12]
 80031a2:	f000 ff49 	bl	8004038 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
	}
 80031a6:	bf00      	nop
 80031a8:	371c      	adds	r7, #28
 80031aa:	46bd      	mov	sp, r7
 80031ac:	bd90      	pop	{r4, r7, pc}

080031ae <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1ERKS5_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 80031ae:	b480      	push	{r7}
 80031b0:	b083      	sub	sp, #12
 80031b2:	af00      	add	r7, sp, #0
 80031b4:	6078      	str	r0, [r7, #4]
 80031b6:	6039      	str	r1, [r7, #0]
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	4618      	mov	r0, r3
 80031bc:	370c      	adds	r7, #12
 80031be:	46bd      	mov	sp, r7
 80031c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031c4:	4770      	bx	lr

080031c6 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1IS3_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 80031c6:	b580      	push	{r7, lr}
 80031c8:	b082      	sub	sp, #8
 80031ca:	af00      	add	r7, sp, #0
 80031cc:	6078      	str	r0, [r7, #4]
 80031ce:	6039      	str	r1, [r7, #0]
 80031d0:	6878      	ldr	r0, [r7, #4]
 80031d2:	f000 ff79 	bl	80040c8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1Ev>
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	4618      	mov	r0, r3
 80031da:	3708      	adds	r7, #8
 80031dc:	46bd      	mov	sp, r7
 80031de:	bd80      	pop	{r7, pc}

080031e0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 80031e0:	b580      	push	{r7, lr}
 80031e2:	b082      	sub	sp, #8
 80031e4:	af00      	add	r7, sp, #0
 80031e6:	6078      	str	r0, [r7, #4]
 80031e8:	6878      	ldr	r0, [r7, #4]
 80031ea:	f000 ff78 	bl	80040de <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	4618      	mov	r0, r3
 80031f2:	3708      	adds	r7, #8
 80031f4:	46bd      	mov	sp, r7
 80031f6:	bd80      	pop	{r7, pc}

080031f8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 80031f8:	b580      	push	{r7, lr}
 80031fa:	b084      	sub	sp, #16
 80031fc:	af00      	add	r7, sp, #0
 80031fe:	60f8      	str	r0, [r7, #12]
 8003200:	60b9      	str	r1, [r7, #8]
 8003202:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 8003204:	6878      	ldr	r0, [r7, #4]
 8003206:	f000 ff75 	bl	80040f4 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEEONSt16remove_referenceIT_E4typeEOS9_>
 800320a:	4603      	mov	r3, r0
 800320c:	4619      	mov	r1, r3
 800320e:	68f8      	ldr	r0, [r7, #12]
 8003210:	f000 ff7b 	bl	800410a <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS5_>
 8003214:	68fb      	ldr	r3, [r7, #12]
 8003216:	68b9      	ldr	r1, [r7, #8]
 8003218:	4618      	mov	r0, r3
 800321a:	f000 ff84 	bl	8004126 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>
 800321e:	68fb      	ldr	r3, [r7, #12]
 8003220:	3304      	adds	r3, #4
 8003222:	4618      	mov	r0, r3
 8003224:	f7fd ff2b 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8003228:	68fb      	ldr	r3, [r7, #12]
 800322a:	4618      	mov	r0, r3
 800322c:	3710      	adds	r7, #16
 800322e:	46bd      	mov	sp, r7
 8003230:	bd80      	pop	{r7, pc}

08003232 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8003232:	b580      	push	{r7, lr}
 8003234:	b084      	sub	sp, #16
 8003236:	af00      	add	r7, sp, #0
 8003238:	6078      	str	r0, [r7, #4]
 800323a:	6039      	str	r1, [r7, #0]
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
 800323c:	683b      	ldr	r3, [r7, #0]
 800323e:	2b00      	cmp	r3, #0
 8003240:	d012      	beq.n	8003268 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x36>
	{
	  _M_erase(_S_right(__x));
 8003242:	6838      	ldr	r0, [r7, #0]
 8003244:	f000 ff7b 	bl	800413e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8003248:	4603      	mov	r3, r0
 800324a:	4619      	mov	r1, r3
 800324c:	6878      	ldr	r0, [r7, #4]
 800324e:	f7ff fff0 	bl	8003232 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
	  _Link_type __y = _S_left(__x);
 8003252:	6838      	ldr	r0, [r7, #0]
 8003254:	f000 ff7f 	bl	8004156 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8003258:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 800325a:	6839      	ldr	r1, [r7, #0]
 800325c:	6878      	ldr	r0, [r7, #4]
 800325e:	f000 ff86 	bl	800416e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>
	  __x = __y;
 8003262:	68fb      	ldr	r3, [r7, #12]
 8003264:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8003266:	e7e9      	b.n	800323c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0xa>
	}
    }
 8003268:	bf00      	nop
 800326a:	3710      	adds	r7, #16
 800326c:	46bd      	mov	sp, r7
 800326e:	bd80      	pop	{r7, pc}

08003270 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8003270:	b480      	push	{r7}
 8003272:	b083      	sub	sp, #12
 8003274:	af00      	add	r7, sp, #0
 8003276:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	689b      	ldr	r3, [r3, #8]
 800327c:	4618      	mov	r0, r3
 800327e:	370c      	adds	r7, #12
 8003280:	46bd      	mov	sp, r7
 8003282:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003286:	4770      	bx	lr

08003288 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE4sizeEv>:
      size() const noexcept { return _M_len; }
 8003288:	b480      	push	{r7}
 800328a:	b083      	sub	sp, #12
 800328c:	af00      	add	r7, sp, #0
 800328e:	6078      	str	r0, [r7, #4]
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	685b      	ldr	r3, [r3, #4]
 8003294:	4618      	mov	r0, r3
 8003296:	370c      	adds	r7, #12
 8003298:	46bd      	mov	sp, r7
 800329a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800329e:	4770      	bx	lr

080032a0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>:
	_Alloc_node(_Rb_tree& __t)
 80032a0:	b480      	push	{r7}
 80032a2:	b083      	sub	sp, #12
 80032a4:	af00      	add	r7, sp, #0
 80032a6:	6078      	str	r0, [r7, #4]
 80032a8:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	683a      	ldr	r2, [r7, #0]
 80032ae:	601a      	str	r2, [r3, #0]
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	4618      	mov	r0, r3
 80032b4:	370c      	adds	r7, #12
 80032b6:	46bd      	mov	sp, r7
 80032b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032bc:	4770      	bx	lr

080032be <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 80032be:	b580      	push	{r7, lr}
 80032c0:	b084      	sub	sp, #16
 80032c2:	af00      	add	r7, sp, #0
 80032c4:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	1d1a      	adds	r2, r3, #4
 80032ca:	f107 030c 	add.w	r3, r7, #12
 80032ce:	4611      	mov	r1, r2
 80032d0:	4618      	mov	r0, r3
 80032d2:	f000 ff5d 	bl	8004190 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 80032d6:	68fb      	ldr	r3, [r7, #12]
 80032d8:	4618      	mov	r0, r3
 80032da:	3710      	adds	r7, #16
 80032dc:	46bd      	mov	sp, r7
 80032de:	bd80      	pop	{r7, pc}

080032e0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1ERKSt17_Rb_tree_iteratorIS3_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 80032e0:	b480      	push	{r7}
 80032e2:	b083      	sub	sp, #12
 80032e4:	af00      	add	r7, sp, #0
 80032e6:	6078      	str	r0, [r7, #4]
 80032e8:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 80032ea:	683b      	ldr	r3, [r7, #0]
 80032ec:	681a      	ldr	r2, [r3, #0]
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	601a      	str	r2, [r3, #0]
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	4618      	mov	r0, r3
 80032f6:	370c      	adds	r7, #12
 80032f8:	46bd      	mov	sp, r7
 80032fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032fe:	4770      	bx	lr

08003300 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>:
    template<typename _Arg, typename _NodeGen>
#else
    template<typename _NodeGen>
#endif
      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8003300:	b5b0      	push	{r4, r5, r7, lr}
 8003302:	b08a      	sub	sp, #40	; 0x28
 8003304:	af02      	add	r7, sp, #8
 8003306:	60f8      	str	r0, [r7, #12]
 8003308:	60b9      	str	r1, [r7, #8]
 800330a:	607a      	str	r2, [r7, #4]
 800330c:	603b      	str	r3, [r7, #0]
			const _Val& __v,
#endif
			_NodeGen& __node_gen)
    {
      pair<_Base_ptr, _Base_ptr> __res
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 800330e:	f107 0318 	add.w	r3, r7, #24
 8003312:	6879      	ldr	r1, [r7, #4]
 8003314:	4618      	mov	r0, r3
 8003316:	f001 f86d 	bl	80043f4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 800331a:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 800331c:	f107 0010 	add.w	r0, r7, #16
 8003320:	68ba      	ldr	r2, [r7, #8]
 8003322:	68f9      	ldr	r1, [r7, #12]
 8003324:	f000 ff43 	bl	80041ae <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>

      if (__res.second)
 8003328:	697b      	ldr	r3, [r7, #20]
 800332a:	2b00      	cmp	r3, #0
 800332c:	d00f      	beq.n	800334e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x4e>
	return _M_insert_(__res.first, __res.second,
			  _GLIBCXX_FORWARD(_Arg, __v),
			  __node_gen);
 800332e:	693c      	ldr	r4, [r7, #16]
 8003330:	697d      	ldr	r5, [r7, #20]
 8003332:	6878      	ldr	r0, [r7, #4]
 8003334:	f001 f86a 	bl	800440c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003338:	4602      	mov	r2, r0
 800333a:	683b      	ldr	r3, [r7, #0]
 800333c:	9300      	str	r3, [sp, #0]
 800333e:	4613      	mov	r3, r2
 8003340:	462a      	mov	r2, r5
 8003342:	4621      	mov	r1, r4
 8003344:	68f8      	ldr	r0, [r7, #12]
 8003346:	f001 f86c 	bl	8004422 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>
 800334a:	4603      	mov	r3, r0
 800334c:	e007      	b.n	800335e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x5e>
      return iterator(__res.first);
 800334e:	693a      	ldr	r2, [r7, #16]
 8003350:	f107 031c 	add.w	r3, r7, #28
 8003354:	4611      	mov	r1, r2
 8003356:	4618      	mov	r0, r3
 8003358:	f000 ff1a 	bl	8004190 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 800335c:	69fb      	ldr	r3, [r7, #28]
    }
 800335e:	4618      	mov	r0, r3
 8003360:	3720      	adds	r7, #32
 8003362:	46bd      	mov	sp, r7
 8003364:	bdb0      	pop	{r4, r5, r7, pc}

08003366 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSB_>:
 8003366:	b480      	push	{r7}
 8003368:	b083      	sub	sp, #12
 800336a:	af00      	add	r7, sp, #0
 800336c:	6078      	str	r0, [r7, #4]
 800336e:	6039      	str	r1, [r7, #0]
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	4618      	mov	r0, r3
 8003374:	370c      	adds	r7, #12
 8003376:	46bd      	mov	sp, r7
 8003378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800337c:	4770      	bx	lr

0800337e <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1IS9_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 800337e:	b580      	push	{r7, lr}
 8003380:	b082      	sub	sp, #8
 8003382:	af00      	add	r7, sp, #0
 8003384:	6078      	str	r0, [r7, #4]
 8003386:	6039      	str	r1, [r7, #0]
 8003388:	6878      	ldr	r0, [r7, #4]
 800338a:	f001 f893 	bl	80044b4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1Ev>
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	4618      	mov	r0, r3
 8003392:	3708      	adds	r7, #8
 8003394:	46bd      	mov	sp, r7
 8003396:	bd80      	pop	{r7, pc}

08003398 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8003398:	b580      	push	{r7, lr}
 800339a:	b082      	sub	sp, #8
 800339c:	af00      	add	r7, sp, #0
 800339e:	6078      	str	r0, [r7, #4]
 80033a0:	6878      	ldr	r0, [r7, #4]
 80033a2:	f001 f892 	bl	80044ca <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	4618      	mov	r0, r3
 80033aa:	3708      	adds	r7, #8
 80033ac:	46bd      	mov	sp, r7
 80033ae:	bd80      	pop	{r7, pc}

080033b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1ERKSD_OSaISt13_Rb_tree_nodeIS9_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 80033b0:	b580      	push	{r7, lr}
 80033b2:	b084      	sub	sp, #16
 80033b4:	af00      	add	r7, sp, #0
 80033b6:	60f8      	str	r0, [r7, #12]
 80033b8:	60b9      	str	r1, [r7, #8]
 80033ba:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 80033bc:	6878      	ldr	r0, [r7, #4]
 80033be:	f001 f88f 	bl	80044e0 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEEONSt16remove_referenceIT_E4typeEOSF_>
 80033c2:	4603      	mov	r3, r0
 80033c4:	4619      	mov	r1, r3
 80033c6:	68f8      	ldr	r0, [r7, #12]
 80033c8:	f001 f895 	bl	80044f6 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSB_>
 80033cc:	68fb      	ldr	r3, [r7, #12]
 80033ce:	68b9      	ldr	r1, [r7, #8]
 80033d0:	4618      	mov	r0, r3
 80033d2:	f001 f89e 	bl	8004512 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_>
 80033d6:	68fb      	ldr	r3, [r7, #12]
 80033d8:	3304      	adds	r3, #4
 80033da:	4618      	mov	r0, r3
 80033dc:	f7fd fe4f 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 80033e0:	68fb      	ldr	r3, [r7, #12]
 80033e2:	4618      	mov	r0, r3
 80033e4:	3710      	adds	r7, #16
 80033e6:	46bd      	mov	sp, r7
 80033e8:	bd80      	pop	{r7, pc}

080033ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80033ea:	b580      	push	{r7, lr}
 80033ec:	b084      	sub	sp, #16
 80033ee:	af00      	add	r7, sp, #0
 80033f0:	6078      	str	r0, [r7, #4]
 80033f2:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 80033f4:	683b      	ldr	r3, [r7, #0]
 80033f6:	2b00      	cmp	r3, #0
 80033f8:	d012      	beq.n	8003420 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0x36>
	  _M_erase(_S_right(__x));
 80033fa:	6838      	ldr	r0, [r7, #0]
 80033fc:	f001 f895 	bl	800452a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8003400:	4603      	mov	r3, r0
 8003402:	4619      	mov	r1, r3
 8003404:	6878      	ldr	r0, [r7, #4]
 8003406:	f7ff fff0 	bl	80033ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
	  _Link_type __y = _S_left(__x);
 800340a:	6838      	ldr	r0, [r7, #0]
 800340c:	f001 f899 	bl	8004542 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8003410:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8003412:	6839      	ldr	r1, [r7, #0]
 8003414:	6878      	ldr	r0, [r7, #4]
 8003416:	f001 f8a0 	bl	800455a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	  __x = __y;
 800341a:	68fb      	ldr	r3, [r7, #12]
 800341c:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800341e:	e7e9      	b.n	80033f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0xa>
    }
 8003420:	bf00      	nop
 8003422:	3710      	adds	r7, #16
 8003424:	46bd      	mov	sp, r7
 8003426:	bd80      	pop	{r7, pc}

08003428 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8003428:	b480      	push	{r7}
 800342a:	b083      	sub	sp, #12
 800342c:	af00      	add	r7, sp, #0
 800342e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	689b      	ldr	r3, [r3, #8]
 8003434:	4618      	mov	r0, r3
 8003436:	370c      	adds	r7, #12
 8003438:	46bd      	mov	sp, r7
 800343a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800343e:	4770      	bx	lr

08003440 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE4sizeEv>:
 8003440:	b480      	push	{r7}
 8003442:	b083      	sub	sp, #12
 8003444:	af00      	add	r7, sp, #0
 8003446:	6078      	str	r0, [r7, #4]
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	685b      	ldr	r3, [r3, #4]
 800344c:	4618      	mov	r0, r3
 800344e:	370c      	adds	r7, #12
 8003450:	46bd      	mov	sp, r7
 8003452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003456:	4770      	bx	lr

08003458 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>:
	_Alloc_node(_Rb_tree& __t)
 8003458:	b480      	push	{r7}
 800345a:	b083      	sub	sp, #12
 800345c:	af00      	add	r7, sp, #0
 800345e:	6078      	str	r0, [r7, #4]
 8003460:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	683a      	ldr	r2, [r7, #0]
 8003466:	601a      	str	r2, [r3, #0]
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	4618      	mov	r0, r3
 800346c:	370c      	adds	r7, #12
 800346e:	46bd      	mov	sp, r7
 8003470:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003474:	4770      	bx	lr

08003476 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8003476:	b580      	push	{r7, lr}
 8003478:	b084      	sub	sp, #16
 800347a:	af00      	add	r7, sp, #0
 800347c:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	1d1a      	adds	r2, r3, #4
 8003482:	f107 030c 	add.w	r3, r7, #12
 8003486:	4611      	mov	r1, r2
 8003488:	4618      	mov	r0, r3
 800348a:	f001 f877 	bl	800457c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	4618      	mov	r0, r3
 8003492:	3710      	adds	r7, #16
 8003494:	46bd      	mov	sp, r7
 8003496:	bd80      	pop	{r7, pc}

08003498 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSt17_Rb_tree_iteratorIS9_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8003498:	b480      	push	{r7}
 800349a:	b083      	sub	sp, #12
 800349c:	af00      	add	r7, sp, #0
 800349e:	6078      	str	r0, [r7, #4]
 80034a0:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 80034a2:	683b      	ldr	r3, [r7, #0]
 80034a4:	681a      	ldr	r2, [r3, #0]
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	601a      	str	r2, [r3, #0]
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	4618      	mov	r0, r3
 80034ae:	370c      	adds	r7, #12
 80034b0:	46bd      	mov	sp, r7
 80034b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034b6:	4770      	bx	lr

080034b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80034b8:	b5b0      	push	{r4, r5, r7, lr}
 80034ba:	b08a      	sub	sp, #40	; 0x28
 80034bc:	af02      	add	r7, sp, #8
 80034be:	60f8      	str	r0, [r7, #12]
 80034c0:	60b9      	str	r1, [r7, #8]
 80034c2:	607a      	str	r2, [r7, #4]
 80034c4:	603b      	str	r3, [r7, #0]
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 80034c6:	f107 0318 	add.w	r3, r7, #24
 80034ca:	6879      	ldr	r1, [r7, #4]
 80034cc:	4618      	mov	r0, r3
 80034ce:	f001 f987 	bl	80047e0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 80034d2:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 80034d4:	f107 0010 	add.w	r0, r7, #16
 80034d8:	68ba      	ldr	r2, [r7, #8]
 80034da:	68f9      	ldr	r1, [r7, #12]
 80034dc:	f001 f85d 	bl	800459a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>
      if (__res.second)
 80034e0:	697b      	ldr	r3, [r7, #20]
 80034e2:	2b00      	cmp	r3, #0
 80034e4:	d00f      	beq.n	8003506 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_+0x4e>
			  __node_gen);
 80034e6:	693c      	ldr	r4, [r7, #16]
 80034e8:	697d      	ldr	r5, [r7, #20]
 80034ea:	6878      	ldr	r0, [r7, #4]
 80034ec:	f001 f984 	bl	80047f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 80034f0:	4602      	mov	r2, r0
 80034f2:	683b      	ldr	r3, [r7, #0]
 80034f4:	9300      	str	r3, [sp, #0]
 80034f6:	4613      	mov	r3, r2
 80034f8:	462a      	mov	r2, r5
 80034fa:	4621      	mov	r1, r4
 80034fc:	68f8      	ldr	r0, [r7, #12]
 80034fe:	f001 f986 	bl	800480e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_>
 8003502:	4603      	mov	r3, r0
 8003504:	e007      	b.n	8003516 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_+0x5e>
      return iterator(__res.first);
 8003506:	693a      	ldr	r2, [r7, #16]
 8003508:	f107 031c 	add.w	r3, r7, #28
 800350c:	4611      	mov	r1, r2
 800350e:	4618      	mov	r0, r3
 8003510:	f001 f834 	bl	800457c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8003514:	69fb      	ldr	r3, [r7, #28]
    }
 8003516:	4618      	mov	r0, r3
 8003518:	3720      	adds	r7, #32
 800351a:	46bd      	mov	sp, r7
 800351c:	bdb0      	pop	{r4, r5, r7, pc}

0800351e <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1ERKS5_>:
 800351e:	b480      	push	{r7}
 8003520:	b083      	sub	sp, #12
 8003522:	af00      	add	r7, sp, #0
 8003524:	6078      	str	r0, [r7, #4]
 8003526:	6039      	str	r1, [r7, #0]
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	4618      	mov	r0, r3
 800352c:	370c      	adds	r7, #12
 800352e:	46bd      	mov	sp, r7
 8003530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003534:	4770      	bx	lr

08003536 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1IS3_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 8003536:	b580      	push	{r7, lr}
 8003538:	b082      	sub	sp, #8
 800353a:	af00      	add	r7, sp, #0
 800353c:	6078      	str	r0, [r7, #4]
 800353e:	6039      	str	r1, [r7, #0]
 8003540:	6878      	ldr	r0, [r7, #4]
 8003542:	f001 f9ad 	bl	80048a0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1Ev>
 8003546:	687b      	ldr	r3, [r7, #4]
 8003548:	4618      	mov	r0, r3
 800354a:	3708      	adds	r7, #8
 800354c:	46bd      	mov	sp, r7
 800354e:	bd80      	pop	{r7, pc}

08003550 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8003550:	b580      	push	{r7, lr}
 8003552:	b082      	sub	sp, #8
 8003554:	af00      	add	r7, sp, #0
 8003556:	6078      	str	r0, [r7, #4]
 8003558:	6878      	ldr	r0, [r7, #4]
 800355a:	f001 f9ac 	bl	80048b6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	4618      	mov	r0, r3
 8003562:	3708      	adds	r7, #8
 8003564:	46bd      	mov	sp, r7
 8003566:	bd80      	pop	{r7, pc}

08003568 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 8003568:	b580      	push	{r7, lr}
 800356a:	b084      	sub	sp, #16
 800356c:	af00      	add	r7, sp, #0
 800356e:	60f8      	str	r0, [r7, #12]
 8003570:	60b9      	str	r1, [r7, #8]
 8003572:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 8003574:	6878      	ldr	r0, [r7, #4]
 8003576:	f001 f9a9 	bl	80048cc <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEEONSt16remove_referenceIT_E4typeEOS9_>
 800357a:	4603      	mov	r3, r0
 800357c:	4619      	mov	r1, r3
 800357e:	68f8      	ldr	r0, [r7, #12]
 8003580:	f001 f9af 	bl	80048e2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS5_>
 8003584:	68fb      	ldr	r3, [r7, #12]
 8003586:	68b9      	ldr	r1, [r7, #8]
 8003588:	4618      	mov	r0, r3
 800358a:	f000 fdcc 	bl	8004126 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>
 800358e:	68fb      	ldr	r3, [r7, #12]
 8003590:	3304      	adds	r3, #4
 8003592:	4618      	mov	r0, r3
 8003594:	f7fd fd73 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8003598:	68fb      	ldr	r3, [r7, #12]
 800359a:	4618      	mov	r0, r3
 800359c:	3710      	adds	r7, #16
 800359e:	46bd      	mov	sp, r7
 80035a0:	bd80      	pop	{r7, pc}

080035a2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80035a2:	b580      	push	{r7, lr}
 80035a4:	b084      	sub	sp, #16
 80035a6:	af00      	add	r7, sp, #0
 80035a8:	6078      	str	r0, [r7, #4]
 80035aa:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 80035ac:	683b      	ldr	r3, [r7, #0]
 80035ae:	2b00      	cmp	r3, #0
 80035b0:	d012      	beq.n	80035d8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x36>
	  _M_erase(_S_right(__x));
 80035b2:	6838      	ldr	r0, [r7, #0]
 80035b4:	f001 f9a3 	bl	80048fe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 80035b8:	4603      	mov	r3, r0
 80035ba:	4619      	mov	r1, r3
 80035bc:	6878      	ldr	r0, [r7, #4]
 80035be:	f7ff fff0 	bl	80035a2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
	  _Link_type __y = _S_left(__x);
 80035c2:	6838      	ldr	r0, [r7, #0]
 80035c4:	f001 f9a7 	bl	8004916 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 80035c8:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 80035ca:	6839      	ldr	r1, [r7, #0]
 80035cc:	6878      	ldr	r0, [r7, #4]
 80035ce:	f001 f9ae 	bl	800492e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>
	  __x = __y;
 80035d2:	68fb      	ldr	r3, [r7, #12]
 80035d4:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80035d6:	e7e9      	b.n	80035ac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0xa>
    }
 80035d8:	bf00      	nop
 80035da:	3710      	adds	r7, #16
 80035dc:	46bd      	mov	sp, r7
 80035de:	bd80      	pop	{r7, pc}

080035e0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 80035e0:	b480      	push	{r7}
 80035e2:	b083      	sub	sp, #12
 80035e4:	af00      	add	r7, sp, #0
 80035e6:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	689b      	ldr	r3, [r3, #8]
 80035ec:	4618      	mov	r0, r3
 80035ee:	370c      	adds	r7, #12
 80035f0:	46bd      	mov	sp, r7
 80035f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035f6:	4770      	bx	lr

080035f8 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE4sizeEv>:
 80035f8:	b480      	push	{r7}
 80035fa:	b083      	sub	sp, #12
 80035fc:	af00      	add	r7, sp, #0
 80035fe:	6078      	str	r0, [r7, #4]
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	685b      	ldr	r3, [r3, #4]
 8003604:	4618      	mov	r0, r3
 8003606:	370c      	adds	r7, #12
 8003608:	46bd      	mov	sp, r7
 800360a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800360e:	4770      	bx	lr

08003610 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>:
	_Alloc_node(_Rb_tree& __t)
 8003610:	b480      	push	{r7}
 8003612:	b083      	sub	sp, #12
 8003614:	af00      	add	r7, sp, #0
 8003616:	6078      	str	r0, [r7, #4]
 8003618:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	683a      	ldr	r2, [r7, #0]
 800361e:	601a      	str	r2, [r3, #0]
 8003620:	687b      	ldr	r3, [r7, #4]
 8003622:	4618      	mov	r0, r3
 8003624:	370c      	adds	r7, #12
 8003626:	46bd      	mov	sp, r7
 8003628:	f85d 7b04 	ldr.w	r7, [sp], #4
 800362c:	4770      	bx	lr

0800362e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800362e:	b580      	push	{r7, lr}
 8003630:	b084      	sub	sp, #16
 8003632:	af00      	add	r7, sp, #0
 8003634:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	1d1a      	adds	r2, r3, #4
 800363a:	f107 030c 	add.w	r3, r7, #12
 800363e:	4611      	mov	r1, r2
 8003640:	4618      	mov	r0, r3
 8003642:	f001 f985 	bl	8004950 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8003646:	68fb      	ldr	r3, [r7, #12]
 8003648:	4618      	mov	r0, r3
 800364a:	3710      	adds	r7, #16
 800364c:	46bd      	mov	sp, r7
 800364e:	bd80      	pop	{r7, pc}

08003650 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1ERKSt17_Rb_tree_iteratorIS3_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8003650:	b480      	push	{r7}
 8003652:	b083      	sub	sp, #12
 8003654:	af00      	add	r7, sp, #0
 8003656:	6078      	str	r0, [r7, #4]
 8003658:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 800365a:	683b      	ldr	r3, [r7, #0]
 800365c:	681a      	ldr	r2, [r3, #0]
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	601a      	str	r2, [r3, #0]
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	4618      	mov	r0, r3
 8003666:	370c      	adds	r7, #12
 8003668:	46bd      	mov	sp, r7
 800366a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800366e:	4770      	bx	lr

08003670 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8003670:	b5b0      	push	{r4, r5, r7, lr}
 8003672:	b08a      	sub	sp, #40	; 0x28
 8003674:	af02      	add	r7, sp, #8
 8003676:	60f8      	str	r0, [r7, #12]
 8003678:	60b9      	str	r1, [r7, #8]
 800367a:	607a      	str	r2, [r7, #4]
 800367c:	603b      	str	r3, [r7, #0]
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 800367e:	f107 0318 	add.w	r3, r7, #24
 8003682:	6879      	ldr	r1, [r7, #4]
 8003684:	4618      	mov	r0, r3
 8003686:	f001 fa95 	bl	8004bb4 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 800368a:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 800368c:	f107 0010 	add.w	r0, r7, #16
 8003690:	68ba      	ldr	r2, [r7, #8]
 8003692:	68f9      	ldr	r1, [r7, #12]
 8003694:	f001 f96b 	bl	800496e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>
      if (__res.second)
 8003698:	697b      	ldr	r3, [r7, #20]
 800369a:	2b00      	cmp	r3, #0
 800369c:	d00f      	beq.n	80036be <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x4e>
			  __node_gen);
 800369e:	693c      	ldr	r4, [r7, #16]
 80036a0:	697d      	ldr	r5, [r7, #20]
 80036a2:	6878      	ldr	r0, [r7, #4]
 80036a4:	f001 fa92 	bl	8004bcc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 80036a8:	4602      	mov	r2, r0
 80036aa:	683b      	ldr	r3, [r7, #0]
 80036ac:	9300      	str	r3, [sp, #0]
 80036ae:	4613      	mov	r3, r2
 80036b0:	462a      	mov	r2, r5
 80036b2:	4621      	mov	r1, r4
 80036b4:	68f8      	ldr	r0, [r7, #12]
 80036b6:	f001 fa94 	bl	8004be2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>
 80036ba:	4603      	mov	r3, r0
 80036bc:	e007      	b.n	80036ce <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x5e>
      return iterator(__res.first);
 80036be:	693a      	ldr	r2, [r7, #16]
 80036c0:	f107 031c 	add.w	r3, r7, #28
 80036c4:	4611      	mov	r1, r2
 80036c6:	4618      	mov	r0, r3
 80036c8:	f001 f942 	bl	8004950 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 80036cc:	69fb      	ldr	r3, [r7, #28]
    }
 80036ce:	4618      	mov	r0, r3
 80036d0:	3720      	adds	r7, #32
 80036d2:	46bd      	mov	sp, r7
 80036d4:	bdb0      	pop	{r4, r5, r7, pc}

080036d6 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80036d6:	b480      	push	{r7}
 80036d8:	b083      	sub	sp, #12
 80036da:	af00      	add	r7, sp, #0
 80036dc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	4618      	mov	r0, r3
 80036e2:	370c      	adds	r7, #12
 80036e4:	46bd      	mov	sp, r7
 80036e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036ea:	4770      	bx	lr

080036ec <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80036ec:	b480      	push	{r7}
 80036ee:	b083      	sub	sp, #12
 80036f0:	af00      	add	r7, sp, #0
 80036f2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	4618      	mov	r0, r3
 80036f8:	370c      	adds	r7, #12
 80036fa:	46bd      	mov	sp, r7
 80036fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003700:	4770      	bx	lr

08003702 <_ZNRSt8__detail9__variant14_UninitializedIP10AssignmentLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8003702:	b480      	push	{r7}
 8003704:	b083      	sub	sp, #12
 8003706:	af00      	add	r7, sp, #0
 8003708:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800370a:	687b      	ldr	r3, [r7, #4]
 800370c:	4618      	mov	r0, r3
 800370e:	370c      	adds	r7, #12
 8003710:	46bd      	mov	sp, r7
 8003712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003716:	4770      	bx	lr

08003718 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003718:	b480      	push	{r7}
 800371a:	b083      	sub	sp, #12
 800371c:	af00      	add	r7, sp, #0
 800371e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	4618      	mov	r0, r3
 8003724:	370c      	adds	r7, #12
 8003726:	46bd      	mov	sp, r7
 8003728:	f85d 7b04 	ldr.w	r7, [sp], #4
 800372c:	4770      	bx	lr

0800372e <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800372e:	b480      	push	{r7}
 8003730:	b083      	sub	sp, #12
 8003732:	af00      	add	r7, sp, #0
 8003734:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	4618      	mov	r0, r3
 800373a:	370c      	adds	r7, #12
 800373c:	46bd      	mov	sp, r7
 800373e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003742:	4770      	bx	lr

08003744 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003744:	b480      	push	{r7}
 8003746:	b083      	sub	sp, #12
 8003748:	af00      	add	r7, sp, #0
 800374a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800374c:	687b      	ldr	r3, [r7, #4]
 800374e:	4618      	mov	r0, r3
 8003750:	370c      	adds	r7, #12
 8003752:	46bd      	mov	sp, r7
 8003754:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003758:	4770      	bx	lr

0800375a <_ZNRSt8__detail9__variant14_UninitializedIP11Method_callLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800375a:	b480      	push	{r7}
 800375c:	b083      	sub	sp, #12
 800375e:	af00      	add	r7, sp, #0
 8003760:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	4618      	mov	r0, r3
 8003766:	370c      	adds	r7, #12
 8003768:	46bd      	mov	sp, r7
 800376a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800376e:	4770      	bx	lr

08003770 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003770:	b480      	push	{r7}
 8003772:	b083      	sub	sp, #12
 8003774:	af00      	add	r7, sp, #0
 8003776:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	4618      	mov	r0, r3
 800377c:	370c      	adds	r7, #12
 800377e:	46bd      	mov	sp, r7
 8003780:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003784:	4770      	bx	lr

08003786 <_ZNRSt8__detail9__variant14_UninitializedIP15While_statementLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8003786:	b480      	push	{r7}
 8003788:	b083      	sub	sp, #12
 800378a:	af00      	add	r7, sp, #0
 800378c:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800378e:	687b      	ldr	r3, [r7, #4]
 8003790:	4618      	mov	r0, r3
 8003792:	370c      	adds	r7, #12
 8003794:	46bd      	mov	sp, r7
 8003796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800379a:	4770      	bx	lr

0800379c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP12If_statementEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800379c:	b480      	push	{r7}
 800379e:	b083      	sub	sp, #12
 80037a0:	af00      	add	r7, sp, #0
 80037a2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	4618      	mov	r0, r3
 80037a8:	370c      	adds	r7, #12
 80037aa:	46bd      	mov	sp, r7
 80037ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037b0:	4770      	bx	lr

080037b2 <_ZNRSt8__detail9__variant14_UninitializedIP12If_statementLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 80037b2:	b480      	push	{r7}
 80037b4:	b083      	sub	sp, #12
 80037b6:	af00      	add	r7, sp, #0
 80037b8:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 80037ba:	687b      	ldr	r3, [r7, #4]
 80037bc:	4618      	mov	r0, r3
 80037be:	370c      	adds	r7, #12
 80037c0:	46bd      	mov	sp, r7
 80037c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037c6:	4770      	bx	lr

080037c8 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant16_Variant_storageILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 80037c8:	b480      	push	{r7}
 80037ca:	b083      	sub	sp, #12
 80037cc:	af00      	add	r7, sp, #0
 80037ce:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 80037d0:	687b      	ldr	r3, [r7, #4]
    }
 80037d2:	4618      	mov	r0, r3
 80037d4:	370c      	adds	r7, #12
 80037d6:	46bd      	mov	sp, r7
 80037d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037dc:	4770      	bx	lr

080037de <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80037de:	b580      	push	{r7, lr}
 80037e0:	b082      	sub	sp, #8
 80037e2:	af00      	add	r7, sp, #0
 80037e4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80037e6:	6878      	ldr	r0, [r7, #4]
 80037e8:	f7fe fb3a 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80037ec:	4603      	mov	r3, r0
 80037ee:	4618      	mov	r0, r3
 80037f0:	f7fe f89f 	bl	8001932 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80037f4:	4603      	mov	r3, r0
	}
 80037f6:	4618      	mov	r0, r3
 80037f8:	3708      	adds	r7, #8
 80037fa:	46bd      	mov	sp, r7
 80037fc:	bd80      	pop	{r7, pc}

080037fe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80037fe:	b5b0      	push	{r4, r5, r7, lr}
 8003800:	b082      	sub	sp, #8
 8003802:	af00      	add	r7, sp, #0
 8003804:	6078      	str	r0, [r7, #4]
 8003806:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8003808:	6878      	ldr	r0, [r7, #4]
 800380a:	f001 fa33 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800380e:	4604      	mov	r4, r0
 8003810:	6838      	ldr	r0, [r7, #0]
 8003812:	f7fe fb25 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003816:	4603      	mov	r3, r0
 8003818:	4618      	mov	r0, r3
 800381a:	f7ff ffe0 	bl	80037de <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>
 800381e:	4603      	mov	r3, r0
 8003820:	4619      	mov	r1, r3
 8003822:	4620      	mov	r0, r4
 8003824:	f001 fa31 	bl	8004c8a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8003828:	462b      	mov	r3, r5
      }
 800382a:	4618      	mov	r0, r3
 800382c:	3708      	adds	r7, #8
 800382e:	46bd      	mov	sp, r7
 8003830:	bdb0      	pop	{r4, r5, r7, pc}

08003832 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003832:	b5b0      	push	{r4, r5, r7, lr}
 8003834:	b082      	sub	sp, #8
 8003836:	af00      	add	r7, sp, #0
 8003838:	6078      	str	r0, [r7, #4]
 800383a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800383c:	6878      	ldr	r0, [r7, #4]
 800383e:	f001 fa19 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003842:	4604      	mov	r4, r0
 8003844:	6838      	ldr	r0, [r7, #0]
 8003846:	f7fe fb0b 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800384a:	4603      	mov	r3, r0
 800384c:	4619      	mov	r1, r3
 800384e:	4620      	mov	r0, r4
 8003850:	f7ff ffd5 	bl	80037fe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003854:	462b      	mov	r3, r5
      }
 8003856:	4618      	mov	r0, r3
 8003858:	3708      	adds	r7, #8
 800385a:	46bd      	mov	sp, r7
 800385c:	bdb0      	pop	{r4, r5, r7, pc}

0800385e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800385e:	b5b0      	push	{r4, r5, r7, lr}
 8003860:	b082      	sub	sp, #8
 8003862:	af00      	add	r7, sp, #0
 8003864:	6078      	str	r0, [r7, #4]
 8003866:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8003868:	6878      	ldr	r0, [r7, #4]
 800386a:	f001 fa03 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800386e:	4604      	mov	r4, r0
 8003870:	6838      	ldr	r0, [r7, #0]
 8003872:	f7fe faf5 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003876:	4603      	mov	r3, r0
 8003878:	4619      	mov	r1, r3
 800387a:	4620      	mov	r0, r4
 800387c:	f7ff ffd9 	bl	8003832 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003880:	462b      	mov	r3, r5
      }
 8003882:	4618      	mov	r0, r3
 8003884:	3708      	adds	r7, #8
 8003886:	46bd      	mov	sp, r7
 8003888:	bdb0      	pop	{r4, r5, r7, pc}

0800388a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800388a:	b580      	push	{r7, lr}
 800388c:	b082      	sub	sp, #8
 800388e:	af00      	add	r7, sp, #0
 8003890:	7138      	strb	r0, [r7, #4]
 8003892:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003894:	6838      	ldr	r0, [r7, #0]
 8003896:	f7fe faf9 	bl	8001e8c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800389a:	4603      	mov	r3, r0
 800389c:	4618      	mov	r0, r3
 800389e:	f001 fa0b 	bl	8004cb8 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 80038a2:	4603      	mov	r3, r0
 80038a4:	4618      	mov	r0, r3
 80038a6:	3708      	adds	r7, #8
 80038a8:	46bd      	mov	sp, r7
 80038aa:	bd80      	pop	{r7, pc}

080038ac <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80038ac:	b590      	push	{r4, r7, lr}
 80038ae:	b083      	sub	sp, #12
 80038b0:	af00      	add	r7, sp, #0
 80038b2:	7138      	strb	r0, [r7, #4]
 80038b4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80038b6:	6838      	ldr	r0, [r7, #0]
 80038b8:	f7fe fadd 	bl	8001e76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80038bc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80038be:	4619      	mov	r1, r3
 80038c0:	4620      	mov	r0, r4
 80038c2:	f7ff ffe2 	bl	800388a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80038c6:	4603      	mov	r3, r0
    }
 80038c8:	4618      	mov	r0, r3
 80038ca:	370c      	adds	r7, #12
 80038cc:	46bd      	mov	sp, r7
 80038ce:	bd90      	pop	{r4, r7, pc}

080038d0 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80038d0:	b590      	push	{r4, r7, lr}
 80038d2:	b083      	sub	sp, #12
 80038d4:	af00      	add	r7, sp, #0
 80038d6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80038d8:	6878      	ldr	r0, [r7, #4]
 80038da:	f7fe fac1 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80038de:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80038e0:	4619      	mov	r1, r3
 80038e2:	4620      	mov	r0, r4
 80038e4:	f7ff ffe2 	bl	80038ac <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80038e8:	4603      	mov	r3, r0
    }
 80038ea:	4618      	mov	r0, r3
 80038ec:	370c      	adds	r7, #12
 80038ee:	46bd      	mov	sp, r7
 80038f0:	bd90      	pop	{r4, r7, pc}

080038f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80038f2:	b580      	push	{r7, lr}
 80038f4:	b082      	sub	sp, #8
 80038f6:	af00      	add	r7, sp, #0
 80038f8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80038fa:	6878      	ldr	r0, [r7, #4]
 80038fc:	f7fe fab0 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003900:	4603      	mov	r3, r0
 8003902:	4618      	mov	r0, r3
 8003904:	f7ff ffe4 	bl	80038d0 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8003908:	4603      	mov	r3, r0
	}
 800390a:	4618      	mov	r0, r3
 800390c:	3708      	adds	r7, #8
 800390e:	46bd      	mov	sp, r7
 8003910:	bd80      	pop	{r7, pc}

08003912 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8003912:	b5b0      	push	{r4, r5, r7, lr}
 8003914:	b082      	sub	sp, #8
 8003916:	af00      	add	r7, sp, #0
 8003918:	6078      	str	r0, [r7, #4]
 800391a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800391c:	6878      	ldr	r0, [r7, #4]
 800391e:	f001 f9a9 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003922:	4604      	mov	r4, r0
 8003924:	6838      	ldr	r0, [r7, #0]
 8003926:	f7fe fa9b 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800392a:	4603      	mov	r3, r0
 800392c:	4618      	mov	r0, r3
 800392e:	f7ff ffe0 	bl	80038f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>
 8003932:	4603      	mov	r3, r0
 8003934:	4619      	mov	r1, r3
 8003936:	4620      	mov	r0, r4
 8003938:	f001 f9c9 	bl	8004cce <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800393c:	462b      	mov	r3, r5
      }
 800393e:	4618      	mov	r0, r3
 8003940:	3708      	adds	r7, #8
 8003942:	46bd      	mov	sp, r7
 8003944:	bdb0      	pop	{r4, r5, r7, pc}

08003946 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003946:	b5b0      	push	{r4, r5, r7, lr}
 8003948:	b082      	sub	sp, #8
 800394a:	af00      	add	r7, sp, #0
 800394c:	6078      	str	r0, [r7, #4]
 800394e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8003950:	6878      	ldr	r0, [r7, #4]
 8003952:	f001 f98f 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003956:	4604      	mov	r4, r0
 8003958:	6838      	ldr	r0, [r7, #0]
 800395a:	f7fe fa81 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800395e:	4603      	mov	r3, r0
 8003960:	4619      	mov	r1, r3
 8003962:	4620      	mov	r0, r4
 8003964:	f7ff ffd5 	bl	8003912 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003968:	462b      	mov	r3, r5
      }
 800396a:	4618      	mov	r0, r3
 800396c:	3708      	adds	r7, #8
 800396e:	46bd      	mov	sp, r7
 8003970:	bdb0      	pop	{r4, r5, r7, pc}

08003972 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003972:	b5b0      	push	{r4, r5, r7, lr}
 8003974:	b082      	sub	sp, #8
 8003976:	af00      	add	r7, sp, #0
 8003978:	6078      	str	r0, [r7, #4]
 800397a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800397c:	6878      	ldr	r0, [r7, #4]
 800397e:	f001 f979 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003982:	4604      	mov	r4, r0
 8003984:	6838      	ldr	r0, [r7, #0]
 8003986:	f7fe fa6b 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800398a:	4603      	mov	r3, r0
 800398c:	4619      	mov	r1, r3
 800398e:	4620      	mov	r0, r4
 8003990:	f7ff ffd9 	bl	8003946 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003994:	462b      	mov	r3, r5
      }
 8003996:	4618      	mov	r0, r3
 8003998:	3708      	adds	r7, #8
 800399a:	46bd      	mov	sp, r7
 800399c:	bdb0      	pop	{r4, r5, r7, pc}

0800399e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800399e:	b580      	push	{r7, lr}
 80039a0:	b082      	sub	sp, #8
 80039a2:	af00      	add	r7, sp, #0
 80039a4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80039a6:	6878      	ldr	r0, [r7, #4]
 80039a8:	f7fe fa5a 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80039ac:	4603      	mov	r3, r0
 80039ae:	4618      	mov	r0, r3
 80039b0:	f7fd fdf4 	bl	800159c <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80039b4:	4603      	mov	r3, r0
	}
 80039b6:	4618      	mov	r0, r3
 80039b8:	3708      	adds	r7, #8
 80039ba:	46bd      	mov	sp, r7
 80039bc:	bd80      	pop	{r7, pc}

080039be <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80039be:	b5b0      	push	{r4, r5, r7, lr}
 80039c0:	b082      	sub	sp, #8
 80039c2:	af00      	add	r7, sp, #0
 80039c4:	6078      	str	r0, [r7, #4]
 80039c6:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80039c8:	6878      	ldr	r0, [r7, #4]
 80039ca:	f001 f953 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80039ce:	4604      	mov	r4, r0
 80039d0:	6838      	ldr	r0, [r7, #0]
 80039d2:	f7fe fa45 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80039d6:	4603      	mov	r3, r0
 80039d8:	4618      	mov	r0, r3
 80039da:	f7ff ffe0 	bl	800399e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>
 80039de:	4603      	mov	r3, r0
 80039e0:	4619      	mov	r1, r3
 80039e2:	4620      	mov	r0, r4
 80039e4:	f001 f98a 	bl	8004cfc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 80039e8:	462b      	mov	r3, r5
      }
 80039ea:	4618      	mov	r0, r3
 80039ec:	3708      	adds	r7, #8
 80039ee:	46bd      	mov	sp, r7
 80039f0:	bdb0      	pop	{r4, r5, r7, pc}

080039f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80039f2:	b5b0      	push	{r4, r5, r7, lr}
 80039f4:	b082      	sub	sp, #8
 80039f6:	af00      	add	r7, sp, #0
 80039f8:	6078      	str	r0, [r7, #4]
 80039fa:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80039fc:	6878      	ldr	r0, [r7, #4]
 80039fe:	f001 f939 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003a02:	4604      	mov	r4, r0
 8003a04:	6838      	ldr	r0, [r7, #0]
 8003a06:	f7fe fa2b 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003a0a:	4603      	mov	r3, r0
 8003a0c:	4619      	mov	r1, r3
 8003a0e:	4620      	mov	r0, r4
 8003a10:	f7ff ffd5 	bl	80039be <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003a14:	462b      	mov	r3, r5
      }
 8003a16:	4618      	mov	r0, r3
 8003a18:	3708      	adds	r7, #8
 8003a1a:	46bd      	mov	sp, r7
 8003a1c:	bdb0      	pop	{r4, r5, r7, pc}

08003a1e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003a1e:	b5b0      	push	{r4, r5, r7, lr}
 8003a20:	b082      	sub	sp, #8
 8003a22:	af00      	add	r7, sp, #0
 8003a24:	6078      	str	r0, [r7, #4]
 8003a26:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8003a28:	6878      	ldr	r0, [r7, #4]
 8003a2a:	f001 f923 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003a2e:	4604      	mov	r4, r0
 8003a30:	6838      	ldr	r0, [r7, #0]
 8003a32:	f7fe fa15 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003a36:	4603      	mov	r3, r0
 8003a38:	4619      	mov	r1, r3
 8003a3a:	4620      	mov	r0, r4
 8003a3c:	f7ff ffd9 	bl	80039f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003a40:	462b      	mov	r3, r5
      }
 8003a42:	4618      	mov	r0, r3
 8003a44:	3708      	adds	r7, #8
 8003a46:	46bd      	mov	sp, r7
 8003a48:	bdb0      	pop	{r4, r5, r7, pc}

08003a4a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003a4a:	b580      	push	{r7, lr}
 8003a4c:	b082      	sub	sp, #8
 8003a4e:	af00      	add	r7, sp, #0
 8003a50:	7138      	strb	r0, [r7, #4]
 8003a52:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003a54:	6838      	ldr	r0, [r7, #0]
 8003a56:	f001 f968 	bl	8004d2a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003a5a:	4603      	mov	r3, r0
 8003a5c:	4618      	mov	r0, r3
 8003a5e:	f001 f96f 	bl	8004d40 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8003a62:	4603      	mov	r3, r0
 8003a64:	4618      	mov	r0, r3
 8003a66:	3708      	adds	r7, #8
 8003a68:	46bd      	mov	sp, r7
 8003a6a:	bd80      	pop	{r7, pc}

08003a6c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003a6c:	b590      	push	{r4, r7, lr}
 8003a6e:	b083      	sub	sp, #12
 8003a70:	af00      	add	r7, sp, #0
 8003a72:	7138      	strb	r0, [r7, #4]
 8003a74:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003a76:	6838      	ldr	r0, [r7, #0]
 8003a78:	f7fe fa13 	bl	8001ea2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003a7c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003a7e:	4619      	mov	r1, r3
 8003a80:	4620      	mov	r0, r4
 8003a82:	f7ff ffe2 	bl	8003a4a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003a86:	4603      	mov	r3, r0
    }
 8003a88:	4618      	mov	r0, r3
 8003a8a:	370c      	adds	r7, #12
 8003a8c:	46bd      	mov	sp, r7
 8003a8e:	bd90      	pop	{r4, r7, pc}

08003a90 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003a90:	b590      	push	{r4, r7, lr}
 8003a92:	b083      	sub	sp, #12
 8003a94:	af00      	add	r7, sp, #0
 8003a96:	7138      	strb	r0, [r7, #4]
 8003a98:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003a9a:	6838      	ldr	r0, [r7, #0]
 8003a9c:	f7fe f9f6 	bl	8001e8c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003aa0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003aa2:	4619      	mov	r1, r3
 8003aa4:	4620      	mov	r0, r4
 8003aa6:	f7ff ffe1 	bl	8003a6c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003aaa:	4603      	mov	r3, r0
    }
 8003aac:	4618      	mov	r0, r3
 8003aae:	370c      	adds	r7, #12
 8003ab0:	46bd      	mov	sp, r7
 8003ab2:	bd90      	pop	{r4, r7, pc}

08003ab4 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003ab4:	b590      	push	{r4, r7, lr}
 8003ab6:	b083      	sub	sp, #12
 8003ab8:	af00      	add	r7, sp, #0
 8003aba:	7138      	strb	r0, [r7, #4]
 8003abc:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003abe:	6838      	ldr	r0, [r7, #0]
 8003ac0:	f7fe f9d9 	bl	8001e76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003ac4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003ac6:	4619      	mov	r1, r3
 8003ac8:	4620      	mov	r0, r4
 8003aca:	f7ff ffe1 	bl	8003a90 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003ace:	4603      	mov	r3, r0
    }
 8003ad0:	4618      	mov	r0, r3
 8003ad2:	370c      	adds	r7, #12
 8003ad4:	46bd      	mov	sp, r7
 8003ad6:	bd90      	pop	{r4, r7, pc}

08003ad8 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003ad8:	b590      	push	{r4, r7, lr}
 8003ada:	b083      	sub	sp, #12
 8003adc:	af00      	add	r7, sp, #0
 8003ade:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003ae0:	6878      	ldr	r0, [r7, #4]
 8003ae2:	f7fe f9bd 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003ae6:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003ae8:	4619      	mov	r1, r3
 8003aea:	4620      	mov	r0, r4
 8003aec:	f7ff ffe2 	bl	8003ab4 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003af0:	4603      	mov	r3, r0
    }
 8003af2:	4618      	mov	r0, r3
 8003af4:	370c      	adds	r7, #12
 8003af6:	46bd      	mov	sp, r7
 8003af8:	bd90      	pop	{r4, r7, pc}

08003afa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8003afa:	b580      	push	{r7, lr}
 8003afc:	b082      	sub	sp, #8
 8003afe:	af00      	add	r7, sp, #0
 8003b00:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8003b02:	6878      	ldr	r0, [r7, #4]
 8003b04:	f7fe f9ac 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003b08:	4603      	mov	r3, r0
 8003b0a:	4618      	mov	r0, r3
 8003b0c:	f7ff ffe4 	bl	8003ad8 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8003b10:	4603      	mov	r3, r0
	}
 8003b12:	4618      	mov	r0, r3
 8003b14:	3708      	adds	r7, #8
 8003b16:	46bd      	mov	sp, r7
 8003b18:	bd80      	pop	{r7, pc}

08003b1a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8003b1a:	b5b0      	push	{r4, r5, r7, lr}
 8003b1c:	b082      	sub	sp, #8
 8003b1e:	af00      	add	r7, sp, #0
 8003b20:	6078      	str	r0, [r7, #4]
 8003b22:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8003b24:	6878      	ldr	r0, [r7, #4]
 8003b26:	f001 f8a5 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003b2a:	4604      	mov	r4, r0
 8003b2c:	6838      	ldr	r0, [r7, #0]
 8003b2e:	f7fe f997 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003b32:	4603      	mov	r3, r0
 8003b34:	4618      	mov	r0, r3
 8003b36:	f7ff ffe0 	bl	8003afa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>
 8003b3a:	4603      	mov	r3, r0
 8003b3c:	4619      	mov	r1, r3
 8003b3e:	4620      	mov	r0, r4
 8003b40:	f001 f90b 	bl	8004d5a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8003b44:	462b      	mov	r3, r5
      }
 8003b46:	4618      	mov	r0, r3
 8003b48:	3708      	adds	r7, #8
 8003b4a:	46bd      	mov	sp, r7
 8003b4c:	bdb0      	pop	{r4, r5, r7, pc}

08003b4e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003b4e:	b5b0      	push	{r4, r5, r7, lr}
 8003b50:	b082      	sub	sp, #8
 8003b52:	af00      	add	r7, sp, #0
 8003b54:	6078      	str	r0, [r7, #4]
 8003b56:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8003b58:	6878      	ldr	r0, [r7, #4]
 8003b5a:	f001 f88b 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003b5e:	4604      	mov	r4, r0
 8003b60:	6838      	ldr	r0, [r7, #0]
 8003b62:	f7fe f97d 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003b66:	4603      	mov	r3, r0
 8003b68:	4619      	mov	r1, r3
 8003b6a:	4620      	mov	r0, r4
 8003b6c:	f7ff ffd5 	bl	8003b1a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003b70:	462b      	mov	r3, r5
      }
 8003b72:	4618      	mov	r0, r3
 8003b74:	3708      	adds	r7, #8
 8003b76:	46bd      	mov	sp, r7
 8003b78:	bdb0      	pop	{r4, r5, r7, pc}

08003b7a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003b7a:	b5b0      	push	{r4, r5, r7, lr}
 8003b7c:	b082      	sub	sp, #8
 8003b7e:	af00      	add	r7, sp, #0
 8003b80:	6078      	str	r0, [r7, #4]
 8003b82:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8003b84:	6878      	ldr	r0, [r7, #4]
 8003b86:	f001 f875 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003b8a:	4604      	mov	r4, r0
 8003b8c:	6838      	ldr	r0, [r7, #0]
 8003b8e:	f7fe f967 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003b92:	4603      	mov	r3, r0
 8003b94:	4619      	mov	r1, r3
 8003b96:	4620      	mov	r0, r4
 8003b98:	f7ff ffd9 	bl	8003b4e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003b9c:	462b      	mov	r3, r5
      }
 8003b9e:	4618      	mov	r0, r3
 8003ba0:	3708      	adds	r7, #8
 8003ba2:	46bd      	mov	sp, r7
 8003ba4:	bdb0      	pop	{r4, r5, r7, pc}

08003ba6 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003ba6:	b580      	push	{r7, lr}
 8003ba8:	b082      	sub	sp, #8
 8003baa:	af00      	add	r7, sp, #0
 8003bac:	7138      	strb	r0, [r7, #4]
 8003bae:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003bb0:	6838      	ldr	r0, [r7, #0]
 8003bb2:	f001 f8e9 	bl	8004d88 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8003bb6:	4603      	mov	r3, r0
 8003bb8:	4618      	mov	r0, r3
 8003bba:	f001 f8f0 	bl	8004d9e <_ZNRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 8003bbe:	4603      	mov	r3, r0
 8003bc0:	4618      	mov	r0, r3
 8003bc2:	3708      	adds	r7, #8
 8003bc4:	46bd      	mov	sp, r7
 8003bc6:	bd80      	pop	{r7, pc}

08003bc8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003bc8:	b590      	push	{r4, r7, lr}
 8003bca:	b083      	sub	sp, #12
 8003bcc:	af00      	add	r7, sp, #0
 8003bce:	7138      	strb	r0, [r7, #4]
 8003bd0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003bd2:	6838      	ldr	r0, [r7, #0]
 8003bd4:	f001 f8a9 	bl	8004d2a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003bd8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003bda:	4619      	mov	r1, r3
 8003bdc:	4620      	mov	r0, r4
 8003bde:	f7ff ffe2 	bl	8003ba6 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003be2:	4603      	mov	r3, r0
    }
 8003be4:	4618      	mov	r0, r3
 8003be6:	370c      	adds	r7, #12
 8003be8:	46bd      	mov	sp, r7
 8003bea:	bd90      	pop	{r4, r7, pc}

08003bec <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003bec:	b590      	push	{r4, r7, lr}
 8003bee:	b083      	sub	sp, #12
 8003bf0:	af00      	add	r7, sp, #0
 8003bf2:	7138      	strb	r0, [r7, #4]
 8003bf4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003bf6:	6838      	ldr	r0, [r7, #0]
 8003bf8:	f7fe f953 	bl	8001ea2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003bfc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003bfe:	4619      	mov	r1, r3
 8003c00:	4620      	mov	r0, r4
 8003c02:	f7ff ffe1 	bl	8003bc8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003c06:	4603      	mov	r3, r0
    }
 8003c08:	4618      	mov	r0, r3
 8003c0a:	370c      	adds	r7, #12
 8003c0c:	46bd      	mov	sp, r7
 8003c0e:	bd90      	pop	{r4, r7, pc}

08003c10 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003c10:	b590      	push	{r4, r7, lr}
 8003c12:	b083      	sub	sp, #12
 8003c14:	af00      	add	r7, sp, #0
 8003c16:	7138      	strb	r0, [r7, #4]
 8003c18:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003c1a:	6838      	ldr	r0, [r7, #0]
 8003c1c:	f7fe f936 	bl	8001e8c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003c20:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003c22:	4619      	mov	r1, r3
 8003c24:	4620      	mov	r0, r4
 8003c26:	f7ff ffe1 	bl	8003bec <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003c2a:	4603      	mov	r3, r0
    }
 8003c2c:	4618      	mov	r0, r3
 8003c2e:	370c      	adds	r7, #12
 8003c30:	46bd      	mov	sp, r7
 8003c32:	bd90      	pop	{r4, r7, pc}

08003c34 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003c34:	b590      	push	{r4, r7, lr}
 8003c36:	b083      	sub	sp, #12
 8003c38:	af00      	add	r7, sp, #0
 8003c3a:	7138      	strb	r0, [r7, #4]
 8003c3c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003c3e:	6838      	ldr	r0, [r7, #0]
 8003c40:	f7fe f919 	bl	8001e76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003c44:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003c46:	4619      	mov	r1, r3
 8003c48:	4620      	mov	r0, r4
 8003c4a:	f7ff ffe1 	bl	8003c10 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003c4e:	4603      	mov	r3, r0
    }
 8003c50:	4618      	mov	r0, r3
 8003c52:	370c      	adds	r7, #12
 8003c54:	46bd      	mov	sp, r7
 8003c56:	bd90      	pop	{r4, r7, pc}

08003c58 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003c58:	b590      	push	{r4, r7, lr}
 8003c5a:	b083      	sub	sp, #12
 8003c5c:	af00      	add	r7, sp, #0
 8003c5e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003c60:	6878      	ldr	r0, [r7, #4]
 8003c62:	f7fe f8fd 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003c66:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003c68:	4619      	mov	r1, r3
 8003c6a:	4620      	mov	r0, r4
 8003c6c:	f7ff ffe2 	bl	8003c34 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003c70:	4603      	mov	r3, r0
    }
 8003c72:	4618      	mov	r0, r3
 8003c74:	370c      	adds	r7, #12
 8003c76:	46bd      	mov	sp, r7
 8003c78:	bd90      	pop	{r4, r7, pc}

08003c7a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8003c7a:	b580      	push	{r7, lr}
 8003c7c:	b082      	sub	sp, #8
 8003c7e:	af00      	add	r7, sp, #0
 8003c80:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8003c82:	6878      	ldr	r0, [r7, #4]
 8003c84:	f7fe f8ec 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003c88:	4603      	mov	r3, r0
 8003c8a:	4618      	mov	r0, r3
 8003c8c:	f7ff ffe4 	bl	8003c58 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8003c90:	4603      	mov	r3, r0
	}
 8003c92:	4618      	mov	r0, r3
 8003c94:	3708      	adds	r7, #8
 8003c96:	46bd      	mov	sp, r7
 8003c98:	bd80      	pop	{r7, pc}

08003c9a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8003c9a:	b5b0      	push	{r4, r5, r7, lr}
 8003c9c:	b082      	sub	sp, #8
 8003c9e:	af00      	add	r7, sp, #0
 8003ca0:	6078      	str	r0, [r7, #4]
 8003ca2:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8003ca4:	6878      	ldr	r0, [r7, #4]
 8003ca6:	f000 ffe5 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003caa:	4604      	mov	r4, r0
 8003cac:	6838      	ldr	r0, [r7, #0]
 8003cae:	f7fe f8d7 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003cb2:	4603      	mov	r3, r0
 8003cb4:	4618      	mov	r0, r3
 8003cb6:	f7ff ffe0 	bl	8003c7a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>
 8003cba:	4603      	mov	r3, r0
 8003cbc:	4619      	mov	r1, r3
 8003cbe:	4620      	mov	r0, r4
 8003cc0:	f001 f87a 	bl	8004db8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8003cc4:	462b      	mov	r3, r5
      }
 8003cc6:	4618      	mov	r0, r3
 8003cc8:	3708      	adds	r7, #8
 8003cca:	46bd      	mov	sp, r7
 8003ccc:	bdb0      	pop	{r4, r5, r7, pc}

08003cce <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003cce:	b5b0      	push	{r4, r5, r7, lr}
 8003cd0:	b082      	sub	sp, #8
 8003cd2:	af00      	add	r7, sp, #0
 8003cd4:	6078      	str	r0, [r7, #4]
 8003cd6:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8003cd8:	6878      	ldr	r0, [r7, #4]
 8003cda:	f000 ffcb 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003cde:	4604      	mov	r4, r0
 8003ce0:	6838      	ldr	r0, [r7, #0]
 8003ce2:	f7fe f8bd 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003ce6:	4603      	mov	r3, r0
 8003ce8:	4619      	mov	r1, r3
 8003cea:	4620      	mov	r0, r4
 8003cec:	f7ff ffd5 	bl	8003c9a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003cf0:	462b      	mov	r3, r5
      }
 8003cf2:	4618      	mov	r0, r3
 8003cf4:	3708      	adds	r7, #8
 8003cf6:	46bd      	mov	sp, r7
 8003cf8:	bdb0      	pop	{r4, r5, r7, pc}

08003cfa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003cfa:	b5b0      	push	{r4, r5, r7, lr}
 8003cfc:	b082      	sub	sp, #8
 8003cfe:	af00      	add	r7, sp, #0
 8003d00:	6078      	str	r0, [r7, #4]
 8003d02:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8003d04:	6878      	ldr	r0, [r7, #4]
 8003d06:	f000 ffb5 	bl	8004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003d0a:	4604      	mov	r4, r0
 8003d0c:	6838      	ldr	r0, [r7, #0]
 8003d0e:	f7fe f8a7 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003d12:	4603      	mov	r3, r0
 8003d14:	4619      	mov	r1, r3
 8003d16:	4620      	mov	r0, r4
 8003d18:	f7ff ffd9 	bl	8003cce <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003d1c:	462b      	mov	r3, r5
      }
 8003d1e:	4618      	mov	r0, r3
 8003d20:	3708      	adds	r7, #8
 8003d22:	46bd      	mov	sp, r7
 8003d24:	bdb0      	pop	{r4, r5, r7, pc}

08003d26 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSN_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8003d26:	b580      	push	{r7, lr}
 8003d28:	b082      	sub	sp, #8
 8003d2a:	af00      	add	r7, sp, #0
 8003d2c:	6078      	str	r0, [r7, #4]
 8003d2e:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8003d30:	683b      	ldr	r3, [r7, #0]
 8003d32:	009b      	lsls	r3, r3, #2
 8003d34:	687a      	ldr	r2, [r7, #4]
 8003d36:	4413      	add	r3, r2
 8003d38:	4618      	mov	r0, r3
 8003d3a:	f001 f854 	bl	8004de6 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 8003d3e:	4603      	mov	r3, r0
	}
 8003d40:	4618      	mov	r0, r3
 8003d42:	3708      	adds	r7, #8
 8003d44:	46bd      	mov	sp, r7
 8003d46:	bd80      	pop	{r7, pc}

08003d48 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8003d48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003d4a:	b085      	sub	sp, #20
 8003d4c:	af00      	add	r7, sp, #0
 8003d4e:	6078      	str	r0, [r7, #4]
 8003d50:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8003d52:	4b0f      	ldr	r3, [pc, #60]	; (8003d90 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_+0x48>)
 8003d54:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8003d56:	6838      	ldr	r0, [r7, #0]
 8003d58:	f7fd fbd8 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8003d5c:	4603      	mov	r3, r0
 8003d5e:	4619      	mov	r1, r3
 8003d60:	68f8      	ldr	r0, [r7, #12]
 8003d62:	f7ff ffe0 	bl	8003d26 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSN_jDpT_>
 8003d66:	4603      	mov	r3, r0
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8003d6c:	68bc      	ldr	r4, [r7, #8]
 8003d6e:	6878      	ldr	r0, [r7, #4]
 8003d70:	f001 f844 	bl	8004dfc <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003d74:	4605      	mov	r5, r0
 8003d76:	6838      	ldr	r0, [r7, #0]
 8003d78:	f7fe f872 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003d7c:	4603      	mov	r3, r0
 8003d7e:	4619      	mov	r1, r3
 8003d80:	4628      	mov	r0, r5
 8003d82:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8003d84:	4633      	mov	r3, r6
    }
 8003d86:	4618      	mov	r0, r3
 8003d88:	3714      	adds	r7, #20
 8003d8a:	46bd      	mov	sp, r7
 8003d8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003d8e:	bf00      	nop
 8003d90:	08027de0 	.word	0x08027de0

08003d94 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 8003d94:	b580      	push	{r7, lr}
 8003d96:	b084      	sub	sp, #16
 8003d98:	af00      	add	r7, sp, #0
 8003d9a:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 8003d9c:	6878      	ldr	r0, [r7, #4]
 8003d9e:	f7ff fd13 	bl	80037c8 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant16_Variant_storageILb0EJifbS5_S9_EEEEDcOT0_>
 8003da2:	4602      	mov	r2, r0
 8003da4:	f107 030c 	add.w	r3, r7, #12
 8003da8:	4611      	mov	r1, r2
 8003daa:	4618      	mov	r0, r3
 8003dac:	f7ff ffcc 	bl	8003d48 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>
      }
 8003db0:	bf00      	nop
 8003db2:	3710      	adds	r7, #16
 8003db4:	46bd      	mov	sp, r7
 8003db6:	bd80      	pop	{r7, pc}

08003db8 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8003db8:	b480      	push	{r7}
 8003dba:	b083      	sub	sp, #12
 8003dbc:	af00      	add	r7, sp, #0
 8003dbe:	6078      	str	r0, [r7, #4]
 8003dc0:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8003dc2:	683b      	ldr	r3, [r7, #0]
 8003dc4:	681a      	ldr	r2, [r3, #0]
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	601a      	str	r2, [r3, #0]
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	4618      	mov	r0, r3
 8003dce:	370c      	adds	r7, #12
 8003dd0:	46bd      	mov	sp, r7
 8003dd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dd6:	4770      	bx	lr

08003dd8 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003dd8:	b480      	push	{r7}
 8003dda:	b083      	sub	sp, #12
 8003ddc:	af00      	add	r7, sp, #0
 8003dde:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	4618      	mov	r0, r3
 8003de4:	370c      	adds	r7, #12
 8003de6:	46bd      	mov	sp, r7
 8003de8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dec:	4770      	bx	lr

08003dee <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003dee:	b480      	push	{r7}
 8003df0:	b083      	sub	sp, #12
 8003df2:	af00      	add	r7, sp, #0
 8003df4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003df6:	687b      	ldr	r3, [r7, #4]
 8003df8:	4618      	mov	r0, r3
 8003dfa:	370c      	adds	r7, #12
 8003dfc:	46bd      	mov	sp, r7
 8003dfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e02:	4770      	bx	lr

08003e04 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8003e04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e08:	b084      	sub	sp, #16
 8003e0a:	af00      	add	r7, sp, #0
 8003e0c:	7338      	strb	r0, [r7, #12]
 8003e0e:	60b9      	str	r1, [r7, #8]
 8003e10:	607a      	str	r2, [r7, #4]
 8003e12:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8003e14:	68b8      	ldr	r0, [r7, #8]
 8003e16:	f7ff f9ae 	bl	8003176 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003e1a:	4604      	mov	r4, r0
 8003e1c:	6878      	ldr	r0, [r7, #4]
 8003e1e:	f7ff ffdb 	bl	8003dd8 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8003e22:	4605      	mov	r5, r0
 8003e24:	6838      	ldr	r0, [r7, #0]
 8003e26:	f7ff ffe2 	bl	8003dee <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003e2a:	4632      	mov	r2, r6
 8003e2c:	4629      	mov	r1, r5
 8003e2e:	4620      	mov	r0, r4
 8003e30:	f000 ffef 	bl	8004e12 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_>
 8003e34:	4643      	mov	r3, r8
 8003e36:	4618      	mov	r0, r3
 8003e38:	3710      	adds	r7, #16
 8003e3a:	46bd      	mov	sp, r7
 8003e3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003e40 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003e40:	b480      	push	{r7}
 8003e42:	b083      	sub	sp, #12
 8003e44:	af00      	add	r7, sp, #0
 8003e46:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	4618      	mov	r0, r3
 8003e4c:	370c      	adds	r7, #12
 8003e4e:	46bd      	mov	sp, r7
 8003e50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e54:	4770      	bx	lr

08003e56 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003e56:	b480      	push	{r7}
 8003e58:	b083      	sub	sp, #12
 8003e5a:	af00      	add	r7, sp, #0
 8003e5c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	4618      	mov	r0, r3
 8003e62:	370c      	adds	r7, #12
 8003e64:	46bd      	mov	sp, r7
 8003e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e6a:	4770      	bx	lr

08003e6c <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8003e6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e70:	b084      	sub	sp, #16
 8003e72:	af00      	add	r7, sp, #0
 8003e74:	7338      	strb	r0, [r7, #12]
 8003e76:	60b9      	str	r1, [r7, #8]
 8003e78:	607a      	str	r2, [r7, #4]
 8003e7a:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8003e7c:	68b8      	ldr	r0, [r7, #8]
 8003e7e:	f7ff f97a 	bl	8003176 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003e82:	4604      	mov	r4, r0
 8003e84:	6878      	ldr	r0, [r7, #4]
 8003e86:	f7ff ffdb 	bl	8003e40 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8003e8a:	4605      	mov	r5, r0
 8003e8c:	6838      	ldr	r0, [r7, #0]
 8003e8e:	f7ff ffe2 	bl	8003e56 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003e92:	4632      	mov	r2, r6
 8003e94:	4629      	mov	r1, r5
 8003e96:	4620      	mov	r0, r4
 8003e98:	f001 f80a 	bl	8004eb0 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_>
 8003e9c:	4643      	mov	r3, r8
 8003e9e:	4618      	mov	r0, r3
 8003ea0:	3710      	adds	r7, #16
 8003ea2:	46bd      	mov	sp, r7
 8003ea4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003ea8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003ea8:	b480      	push	{r7}
 8003eaa:	b083      	sub	sp, #12
 8003eac:	af00      	add	r7, sp, #0
 8003eae:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	4618      	mov	r0, r3
 8003eb4:	370c      	adds	r7, #12
 8003eb6:	46bd      	mov	sp, r7
 8003eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ebc:	4770      	bx	lr

08003ebe <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003ebe:	b480      	push	{r7}
 8003ec0:	b083      	sub	sp, #12
 8003ec2:	af00      	add	r7, sp, #0
 8003ec4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	4618      	mov	r0, r3
 8003eca:	370c      	adds	r7, #12
 8003ecc:	46bd      	mov	sp, r7
 8003ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ed2:	4770      	bx	lr

08003ed4 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8003ed4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ed8:	b084      	sub	sp, #16
 8003eda:	af00      	add	r7, sp, #0
 8003edc:	7338      	strb	r0, [r7, #12]
 8003ede:	60b9      	str	r1, [r7, #8]
 8003ee0:	607a      	str	r2, [r7, #4]
 8003ee2:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8003ee4:	68b8      	ldr	r0, [r7, #8]
 8003ee6:	f7ff f946 	bl	8003176 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003eea:	4604      	mov	r4, r0
 8003eec:	6878      	ldr	r0, [r7, #4]
 8003eee:	f7ff ffdb 	bl	8003ea8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8003ef2:	4605      	mov	r5, r0
 8003ef4:	6838      	ldr	r0, [r7, #0]
 8003ef6:	f7ff ffe2 	bl	8003ebe <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003efa:	4632      	mov	r2, r6
 8003efc:	4629      	mov	r1, r5
 8003efe:	4620      	mov	r0, r4
 8003f00:	f001 f825 	bl	8004f4e <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_>
 8003f04:	4643      	mov	r3, r8
 8003f06:	4618      	mov	r0, r3
 8003f08:	3710      	adds	r7, #16
 8003f0a:	46bd      	mov	sp, r7
 8003f0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003f10 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _Tp*
      _M_ptr() noexcept
      { return static_cast<_Tp*>(_M_addr()); }

      const _Tp*
      _M_ptr() const noexcept
 8003f10:	b580      	push	{r7, lr}
 8003f12:	b082      	sub	sp, #8
 8003f14:	af00      	add	r7, sp, #0
 8003f16:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8003f18:	6878      	ldr	r0, [r7, #4]
 8003f1a:	f001 f868 	bl	8004fee <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
 8003f1e:	4603      	mov	r3, r0
 8003f20:	4618      	mov	r0, r3
 8003f22:	3708      	adds	r7, #8
 8003f24:	46bd      	mov	sp, r7
 8003f26:	bd80      	pop	{r7, pc}

08003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003f28:	b480      	push	{r7}
 8003f2a:	b083      	sub	sp, #12
 8003f2c:	af00      	add	r7, sp, #0
 8003f2e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	4618      	mov	r0, r3
 8003f34:	370c      	adds	r7, #12
 8003f36:	46bd      	mov	sp, r7
 8003f38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f3c:	4770      	bx	lr

08003f3e <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003f3e:	b480      	push	{r7}
 8003f40:	b083      	sub	sp, #12
 8003f42:	af00      	add	r7, sp, #0
 8003f44:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	4618      	mov	r0, r3
 8003f4a:	370c      	adds	r7, #12
 8003f4c:	46bd      	mov	sp, r7
 8003f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f52:	4770      	bx	lr

08003f54 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKS9_St17integral_constantIjLj3EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8003f54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f58:	b084      	sub	sp, #16
 8003f5a:	af00      	add	r7, sp, #0
 8003f5c:	7338      	strb	r0, [r7, #12]
 8003f5e:	60b9      	str	r1, [r7, #8]
 8003f60:	607a      	str	r2, [r7, #4]
 8003f62:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8003f64:	68b8      	ldr	r0, [r7, #8]
 8003f66:	f7ff f906 	bl	8003176 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003f6a:	4604      	mov	r4, r0
 8003f6c:	6878      	ldr	r0, [r7, #4]
 8003f6e:	f7ff ffdb 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8003f72:	4605      	mov	r5, r0
 8003f74:	6838      	ldr	r0, [r7, #0]
 8003f76:	f7ff ffe2 	bl	8003f3e <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003f7a:	4632      	mov	r2, r6
 8003f7c:	4629      	mov	r1, r5
 8003f7e:	4620      	mov	r0, r4
 8003f80:	f001 f840 	bl	8005004 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_>
 8003f84:	4643      	mov	r3, r8
 8003f86:	4618      	mov	r0, r3
 8003f88:	3710      	adds	r7, #16
 8003f8a:	46bd      	mov	sp, r7
 8003f8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003f90 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8003f90:	b580      	push	{r7, lr}
 8003f92:	b082      	sub	sp, #8
 8003f94:	af00      	add	r7, sp, #0
 8003f96:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8003f98:	6878      	ldr	r0, [r7, #4]
 8003f9a:	f001 f8b7 	bl	800510c <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>
 8003f9e:	4603      	mov	r3, r0
 8003fa0:	4618      	mov	r0, r3
 8003fa2:	3708      	adds	r7, #8
 8003fa4:	46bd      	mov	sp, r7
 8003fa6:	bd80      	pop	{r7, pc}

08003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003fa8:	b480      	push	{r7}
 8003faa:	b083      	sub	sp, #12
 8003fac:	af00      	add	r7, sp, #0
 8003fae:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003fb0:	687b      	ldr	r3, [r7, #4]
 8003fb2:	4618      	mov	r0, r3
 8003fb4:	370c      	adds	r7, #12
 8003fb6:	46bd      	mov	sp, r7
 8003fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fbc:	4770      	bx	lr

08003fbe <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003fbe:	b480      	push	{r7}
 8003fc0:	b083      	sub	sp, #12
 8003fc2:	af00      	add	r7, sp, #0
 8003fc4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003fc6:	687b      	ldr	r3, [r7, #4]
 8003fc8:	4618      	mov	r0, r3
 8003fca:	370c      	adds	r7, #12
 8003fcc:	46bd      	mov	sp, r7
 8003fce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fd2:	4770      	bx	lr

08003fd4 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKSD_St17integral_constantIjLj4EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8003fd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003fd8:	b084      	sub	sp, #16
 8003fda:	af00      	add	r7, sp, #0
 8003fdc:	7338      	strb	r0, [r7, #12]
 8003fde:	60b9      	str	r1, [r7, #8]
 8003fe0:	607a      	str	r2, [r7, #4]
 8003fe2:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8003fe4:	68b8      	ldr	r0, [r7, #8]
 8003fe6:	f7ff f8c6 	bl	8003176 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003fea:	4604      	mov	r4, r0
 8003fec:	6878      	ldr	r0, [r7, #4]
 8003fee:	f7ff ffdb 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003ff2:	4605      	mov	r5, r0
 8003ff4:	6838      	ldr	r0, [r7, #0]
 8003ff6:	f7ff ffe2 	bl	8003fbe <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003ffa:	4632      	mov	r2, r6
 8003ffc:	4629      	mov	r1, r5
 8003ffe:	4620      	mov	r0, r4
 8004000:	f001 f88f 	bl	8005122 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_>
 8004004:	4643      	mov	r3, r8
 8004006:	4618      	mov	r0, r3
 8004008:	3710      	adds	r7, #16
 800400a:	46bd      	mov	sp, r7
 800400c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004010 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
   *  and are constant time.  For other %iterator classes they are linear time.
  */
  template<typename _InputIterator>
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
 8004010:	b5b0      	push	{r4, r5, r7, lr}
 8004012:	b082      	sub	sp, #8
 8004014:	af00      	add	r7, sp, #0
 8004016:	6078      	str	r0, [r7, #4]
 8004018:	6039      	str	r1, [r7, #0]
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
 800401a:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 800401c:	1d3b      	adds	r3, r7, #4
 800401e:	4618      	mov	r0, r3
 8004020:	f001 f8e8 	bl	80051f4 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
 8004024:	462a      	mov	r2, r5
 8004026:	6839      	ldr	r1, [r7, #0]
 8004028:	4620      	mov	r0, r4
 800402a:	f001 f8ed 	bl	8005208 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
 800402e:	4603      	mov	r3, r0
    }
 8004030:	4618      	mov	r0, r3
 8004032:	3708      	adds	r7, #8
 8004034:	46bd      	mov	sp, r7
 8004036:	bdb0      	pop	{r4, r5, r7, pc}

08004038 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      }

  template<typename _CharT, typename _Traits, typename _Alloc>
    template<typename _InIterator>
      void
      basic_string<_CharT, _Traits, _Alloc>::
 8004038:	b580      	push	{r7, lr}
 800403a:	b086      	sub	sp, #24
 800403c:	af00      	add	r7, sp, #0
 800403e:	60f8      	str	r0, [r7, #12]
 8004040:	60b9      	str	r1, [r7, #8]
 8004042:	607a      	str	r2, [r7, #4]
 8004044:	703b      	strb	r3, [r7, #0]
      _M_construct(_InIterator __beg, _InIterator __end,
		   std::forward_iterator_tag)
      {
	// NB: Not required, but considered best practice.
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 8004046:	68b8      	ldr	r0, [r7, #8]
 8004048:	f001 f8c4 	bl	80051d4 <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_>
 800404c:	4603      	mov	r3, r0
 800404e:	2b00      	cmp	r3, #0
 8004050:	d005      	beq.n	800405e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x26>
 8004052:	68ba      	ldr	r2, [r7, #8]
 8004054:	687b      	ldr	r3, [r7, #4]
 8004056:	429a      	cmp	r2, r3
 8004058:	d001      	beq.n	800405e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x26>
 800405a:	2301      	movs	r3, #1
 800405c:	e000      	b.n	8004060 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x28>
 800405e:	2300      	movs	r3, #0
 8004060:	2b00      	cmp	r3, #0
 8004062:	d002      	beq.n	800406a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x32>
	  std::__throw_logic_error(__N("basic_string::"
 8004064:	4817      	ldr	r0, [pc, #92]	; (80040c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x8c>)
 8004066:	f01e fae2 	bl	802262e <_ZSt19__throw_logic_errorPKc>
				       "_M_construct null not valid"));

	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 800406a:	6879      	ldr	r1, [r7, #4]
 800406c:	68b8      	ldr	r0, [r7, #8]
 800406e:	f7ff ffcf 	bl	8004010 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
 8004072:	4603      	mov	r3, r0
 8004074:	617b      	str	r3, [r7, #20]

	if (__dnew > size_type(_S_local_capacity))
 8004076:	697b      	ldr	r3, [r7, #20]
 8004078:	2b0f      	cmp	r3, #15
 800407a:	d910      	bls.n	800409e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x66>
	  {
	    _M_data(_M_create(__dnew, size_type(0)));
 800407c:	f107 0314 	add.w	r3, r7, #20
 8004080:	2200      	movs	r2, #0
 8004082:	4619      	mov	r1, r3
 8004084:	68f8      	ldr	r0, [r7, #12]
 8004086:	f01e fba5 	bl	80227d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 800408a:	4603      	mov	r3, r0
 800408c:	4619      	mov	r1, r3
 800408e:	68f8      	ldr	r0, [r7, #12]
 8004090:	f01e fb92 	bl	80227b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
 8004094:	697b      	ldr	r3, [r7, #20]
 8004096:	4619      	mov	r1, r3
 8004098:	68f8      	ldr	r0, [r7, #12]
 800409a:	f01e fb93 	bl	80227c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>
	  }

	// Check for out_of_range and length_error exceptions.
	__try
	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 800409e:	68f8      	ldr	r0, [r7, #12]
 80040a0:	f01e fb8c 	bl	80227bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
 80040a4:	4603      	mov	r3, r0
 80040a6:	687a      	ldr	r2, [r7, #4]
 80040a8:	68b9      	ldr	r1, [r7, #8]
 80040aa:	4618      	mov	r0, r3
 80040ac:	f01e fbfc 	bl	80228a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
	  {
	    _M_dispose();
	    __throw_exception_again;
	  }

	_M_set_length(__dnew);
 80040b0:	697b      	ldr	r3, [r7, #20]
 80040b2:	4619      	mov	r1, r3
 80040b4:	68f8      	ldr	r0, [r7, #12]
 80040b6:	f01e fb87 	bl	80227c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>
      }
 80040ba:	bf00      	nop
 80040bc:	3718      	adds	r7, #24
 80040be:	46bd      	mov	sp, r7
 80040c0:	bd80      	pop	{r7, pc}
 80040c2:	bf00      	nop
 80040c4:	080271f8 	.word	0x080271f8

080040c8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80040c8:	b480      	push	{r7}
 80040ca:	b083      	sub	sp, #12
 80040cc:	af00      	add	r7, sp, #0
 80040ce:	6078      	str	r0, [r7, #4]
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	4618      	mov	r0, r3
 80040d4:	370c      	adds	r7, #12
 80040d6:	46bd      	mov	sp, r7
 80040d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040dc:	4770      	bx	lr

080040de <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80040de:	b480      	push	{r7}
 80040e0:	b083      	sub	sp, #12
 80040e2:	af00      	add	r7, sp, #0
 80040e4:	6078      	str	r0, [r7, #4]
 80040e6:	687b      	ldr	r3, [r7, #4]
 80040e8:	4618      	mov	r0, r3
 80040ea:	370c      	adds	r7, #12
 80040ec:	46bd      	mov	sp, r7
 80040ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040f2:	4770      	bx	lr

080040f4 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEEONSt16remove_referenceIT_E4typeEOS9_>:
   *  @param  __t  A thing of arbitrary type.
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
 80040f4:	b480      	push	{r7}
 80040f6:	b083      	sub	sp, #12
 80040f8:	af00      	add	r7, sp, #0
 80040fa:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	4618      	mov	r0, r3
 8004100:	370c      	adds	r7, #12
 8004102:	46bd      	mov	sp, r7
 8004104:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004108:	4770      	bx	lr

0800410a <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800410a:	b580      	push	{r7, lr}
 800410c:	b082      	sub	sp, #8
 800410e:	af00      	add	r7, sp, #0
 8004110:	6078      	str	r0, [r7, #4]
 8004112:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8004114:	6839      	ldr	r1, [r7, #0]
 8004116:	6878      	ldr	r0, [r7, #4]
 8004118:	f001 f885 	bl	8005226 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS7_>
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	4618      	mov	r0, r3
 8004120:	3708      	adds	r7, #8
 8004122:	46bd      	mov	sp, r7
 8004124:	bd80      	pop	{r7, pc}

08004126 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
 8004126:	b480      	push	{r7}
 8004128:	b083      	sub	sp, #12
 800412a:	af00      	add	r7, sp, #0
 800412c:	6078      	str	r0, [r7, #4]
 800412e:	6039      	str	r1, [r7, #0]
      { }
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	4618      	mov	r0, r3
 8004134:	370c      	adds	r7, #12
 8004136:	46bd      	mov	sp, r7
 8004138:	f85d 7b04 	ldr.w	r7, [sp], #4
 800413c:	4770      	bx	lr

0800413e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800413e:	b480      	push	{r7}
 8004140:	b083      	sub	sp, #12
 8004142:	af00      	add	r7, sp, #0
 8004144:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	68db      	ldr	r3, [r3, #12]
 800414a:	4618      	mov	r0, r3
 800414c:	370c      	adds	r7, #12
 800414e:	46bd      	mov	sp, r7
 8004150:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004154:	4770      	bx	lr

08004156 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8004156:	b480      	push	{r7}
 8004158:	b083      	sub	sp, #12
 800415a:	af00      	add	r7, sp, #0
 800415c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	689b      	ldr	r3, [r3, #8]
 8004162:	4618      	mov	r0, r3
 8004164:	370c      	adds	r7, #12
 8004166:	46bd      	mov	sp, r7
 8004168:	f85d 7b04 	ldr.w	r7, [sp], #4
 800416c:	4770      	bx	lr

0800416e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800416e:	b580      	push	{r7, lr}
 8004170:	b082      	sub	sp, #8
 8004172:	af00      	add	r7, sp, #0
 8004174:	6078      	str	r0, [r7, #4]
 8004176:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8004178:	6839      	ldr	r1, [r7, #0]
 800417a:	6878      	ldr	r0, [r7, #4]
 800417c:	f001 f85f 	bl	800523e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>
	_M_put_node(__p);
 8004180:	6839      	ldr	r1, [r7, #0]
 8004182:	6878      	ldr	r0, [r7, #4]
 8004184:	f001 f870 	bl	8005268 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>
      }
 8004188:	bf00      	nop
 800418a:	3708      	adds	r7, #8
 800418c:	46bd      	mov	sp, r7
 800418e:	bd80      	pop	{r7, pc}

08004190 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8004190:	b480      	push	{r7}
 8004192:	b083      	sub	sp, #12
 8004194:	af00      	add	r7, sp, #0
 8004196:	6078      	str	r0, [r7, #4]
 8004198:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800419a:	687b      	ldr	r3, [r7, #4]
 800419c:	683a      	ldr	r2, [r7, #0]
 800419e:	601a      	str	r2, [r3, #0]
 80041a0:	687b      	ldr	r3, [r7, #4]
 80041a2:	4618      	mov	r0, r3
 80041a4:	370c      	adds	r7, #12
 80041a6:	46bd      	mov	sp, r7
 80041a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041ac:	4770      	bx	lr

080041ae <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80041ae:	b590      	push	{r4, r7, lr}
 80041b0:	b08d      	sub	sp, #52	; 0x34
 80041b2:	af00      	add	r7, sp, #0
 80041b4:	60f8      	str	r0, [r7, #12]
 80041b6:	60b9      	str	r1, [r7, #8]
 80041b8:	607a      	str	r2, [r7, #4]
 80041ba:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 80041bc:	1d3b      	adds	r3, r7, #4
 80041be:	4618      	mov	r0, r3
 80041c0:	f001 f864 	bl	800528c <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEE13_M_const_castEv>
 80041c4:	4603      	mov	r3, r0
 80041c6:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 80041c8:	69bc      	ldr	r4, [r7, #24]
 80041ca:	68b8      	ldr	r0, [r7, #8]
 80041cc:	f001 f86f 	bl	80052ae <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 80041d0:	4603      	mov	r3, r0
 80041d2:	429c      	cmp	r4, r3
 80041d4:	bf0c      	ite	eq
 80041d6:	2301      	moveq	r3, #1
 80041d8:	2300      	movne	r3, #0
 80041da:	b2db      	uxtb	r3, r3
 80041dc:	2b00      	cmp	r3, #0
 80041de:	d030      	beq.n	8004242 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x94>
	  if (size() > 0
 80041e0:	68b8      	ldr	r0, [r7, #8]
 80041e2:	f001 f870 	bl	80052c6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>
 80041e6:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 80041e8:	2b00      	cmp	r3, #0
 80041ea:	d013      	beq.n	8004214 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 80041ec:	68bc      	ldr	r4, [r7, #8]
 80041ee:	68b8      	ldr	r0, [r7, #8]
 80041f0:	f001 f875 	bl	80052de <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80041f4:	4603      	mov	r3, r0
 80041f6:	681b      	ldr	r3, [r3, #0]
 80041f8:	4618      	mov	r0, r3
 80041fa:	f001 f87c 	bl	80052f6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80041fe:	4603      	mov	r3, r0
 8004200:	683a      	ldr	r2, [r7, #0]
 8004202:	4619      	mov	r1, r3
 8004204:	4620      	mov	r0, r4
 8004206:	f001 f882 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 800420a:	4603      	mov	r3, r0
 800420c:	2b00      	cmp	r3, #0
 800420e:	d001      	beq.n	8004214 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 8004210:	2301      	movs	r3, #1
 8004212:	e000      	b.n	8004216 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x68>
 8004214:	2300      	movs	r3, #0
	  if (size() > 0
 8004216:	2b00      	cmp	r3, #0
 8004218:	d00c      	beq.n	8004234 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x86>
	    return _Res(0, _M_rightmost());
 800421a:	2300      	movs	r3, #0
 800421c:	61fb      	str	r3, [r7, #28]
 800421e:	68b8      	ldr	r0, [r7, #8]
 8004220:	f001 f85d 	bl	80052de <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8004224:	4602      	mov	r2, r0
 8004226:	f107 031c 	add.w	r3, r7, #28
 800422a:	4619      	mov	r1, r3
 800422c:	68f8      	ldr	r0, [r7, #12]
 800422e:	f001 f883 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8004232:	e0db      	b.n	80043ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8004234:	68fb      	ldr	r3, [r7, #12]
 8004236:	683a      	ldr	r2, [r7, #0]
 8004238:	68b9      	ldr	r1, [r7, #8]
 800423a:	4618      	mov	r0, r3
 800423c:	f001 f892 	bl	8005364 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8004240:	e0d4      	b.n	80043ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8004242:	68bc      	ldr	r4, [r7, #8]
 8004244:	69bb      	ldr	r3, [r7, #24]
 8004246:	4618      	mov	r0, r3
 8004248:	f001 f855 	bl	80052f6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800424c:	4603      	mov	r3, r0
 800424e:	461a      	mov	r2, r3
 8004250:	6839      	ldr	r1, [r7, #0]
 8004252:	4620      	mov	r0, r4
 8004254:	f001 f85b 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 8004258:	4603      	mov	r3, r0
 800425a:	2b00      	cmp	r3, #0
 800425c:	d057      	beq.n	800430e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x160>
	  iterator __before = __pos;
 800425e:	69bb      	ldr	r3, [r7, #24]
 8004260:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8004262:	69bc      	ldr	r4, [r7, #24]
 8004264:	68b8      	ldr	r0, [r7, #8]
 8004266:	f001 f902 	bl	800546e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 800426a:	4603      	mov	r3, r0
 800426c:	681b      	ldr	r3, [r3, #0]
 800426e:	429c      	cmp	r4, r3
 8004270:	bf0c      	ite	eq
 8004272:	2301      	moveq	r3, #1
 8004274:	2300      	movne	r3, #0
 8004276:	b2db      	uxtb	r3, r3
 8004278:	2b00      	cmp	r3, #0
 800427a:	d00d      	beq.n	8004298 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 800427c:	68b8      	ldr	r0, [r7, #8]
 800427e:	f001 f8f6 	bl	800546e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8004282:	4604      	mov	r4, r0
 8004284:	68b8      	ldr	r0, [r7, #8]
 8004286:	f001 f8f2 	bl	800546e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 800428a:	4603      	mov	r3, r0
 800428c:	461a      	mov	r2, r3
 800428e:	4621      	mov	r1, r4
 8004290:	68f8      	ldr	r0, [r7, #12]
 8004292:	f001 f8f8 	bl	8005486 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8004296:	e0a9      	b.n	80043ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8004298:	68bc      	ldr	r4, [r7, #8]
 800429a:	f107 0314 	add.w	r3, r7, #20
 800429e:	4618      	mov	r0, r3
 80042a0:	f001 f90a 	bl	80054b8 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>
 80042a4:	4603      	mov	r3, r0
 80042a6:	681b      	ldr	r3, [r3, #0]
 80042a8:	4618      	mov	r0, r3
 80042aa:	f001 f824 	bl	80052f6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80042ae:	4603      	mov	r3, r0
 80042b0:	683a      	ldr	r2, [r7, #0]
 80042b2:	4619      	mov	r1, r3
 80042b4:	4620      	mov	r0, r4
 80042b6:	f001 f82a 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 80042ba:	4603      	mov	r3, r0
 80042bc:	2b00      	cmp	r3, #0
 80042be:	d01f      	beq.n	8004300 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x152>
	      if (_S_right(__before._M_node) == 0)
 80042c0:	697b      	ldr	r3, [r7, #20]
 80042c2:	4618      	mov	r0, r3
 80042c4:	f7ff ff3b 	bl	800413e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 80042c8:	4603      	mov	r3, r0
 80042ca:	2b00      	cmp	r3, #0
 80042cc:	bf0c      	ite	eq
 80042ce:	2301      	moveq	r3, #1
 80042d0:	2300      	movne	r3, #0
 80042d2:	b2db      	uxtb	r3, r3
 80042d4:	2b00      	cmp	r3, #0
 80042d6:	d00a      	beq.n	80042ee <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x140>
		return _Res(0, __before._M_node);
 80042d8:	2300      	movs	r3, #0
 80042da:	623b      	str	r3, [r7, #32]
 80042dc:	f107 0214 	add.w	r2, r7, #20
 80042e0:	f107 0320 	add.w	r3, r7, #32
 80042e4:	4619      	mov	r1, r3
 80042e6:	68f8      	ldr	r0, [r7, #12]
 80042e8:	f001 f826 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80042ec:	e07e      	b.n	80043ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 80042ee:	f107 0218 	add.w	r2, r7, #24
 80042f2:	f107 0318 	add.w	r3, r7, #24
 80042f6:	4619      	mov	r1, r3
 80042f8:	68f8      	ldr	r0, [r7, #12]
 80042fa:	f001 f8c4 	bl	8005486 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80042fe:	e075      	b.n	80043ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8004300:	68fb      	ldr	r3, [r7, #12]
 8004302:	683a      	ldr	r2, [r7, #0]
 8004304:	68b9      	ldr	r1, [r7, #8]
 8004306:	4618      	mov	r0, r3
 8004308:	f001 f82c 	bl	8005364 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 800430c:	e06e      	b.n	80043ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 800430e:	68bc      	ldr	r4, [r7, #8]
 8004310:	69bb      	ldr	r3, [r7, #24]
 8004312:	4618      	mov	r0, r3
 8004314:	f000 ffef 	bl	80052f6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004318:	4603      	mov	r3, r0
 800431a:	683a      	ldr	r2, [r7, #0]
 800431c:	4619      	mov	r1, r3
 800431e:	4620      	mov	r0, r4
 8004320:	f000 fff5 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 8004324:	4603      	mov	r3, r0
 8004326:	2b00      	cmp	r3, #0
 8004328:	d056      	beq.n	80043d8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x22a>
	  iterator __after = __pos;
 800432a:	69bb      	ldr	r3, [r7, #24]
 800432c:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 800432e:	69bc      	ldr	r4, [r7, #24]
 8004330:	68b8      	ldr	r0, [r7, #8]
 8004332:	f000 ffd4 	bl	80052de <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8004336:	4603      	mov	r3, r0
 8004338:	681b      	ldr	r3, [r3, #0]
 800433a:	429c      	cmp	r4, r3
 800433c:	bf0c      	ite	eq
 800433e:	2301      	moveq	r3, #1
 8004340:	2300      	movne	r3, #0
 8004342:	b2db      	uxtb	r3, r3
 8004344:	2b00      	cmp	r3, #0
 8004346:	d00c      	beq.n	8004362 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x1b4>
	    return _Res(0, _M_rightmost());
 8004348:	2300      	movs	r3, #0
 800434a:	627b      	str	r3, [r7, #36]	; 0x24
 800434c:	68b8      	ldr	r0, [r7, #8]
 800434e:	f000 ffc6 	bl	80052de <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8004352:	4602      	mov	r2, r0
 8004354:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004358:	4619      	mov	r1, r3
 800435a:	68f8      	ldr	r0, [r7, #12]
 800435c:	f000 ffec 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8004360:	e044      	b.n	80043ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8004362:	68bc      	ldr	r4, [r7, #8]
 8004364:	f107 0310 	add.w	r3, r7, #16
 8004368:	4618      	mov	r0, r3
 800436a:	f001 f8b6 	bl	80054da <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEppEv>
 800436e:	4603      	mov	r3, r0
 8004370:	681b      	ldr	r3, [r3, #0]
 8004372:	4618      	mov	r0, r3
 8004374:	f000 ffbf 	bl	80052f6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004378:	4603      	mov	r3, r0
 800437a:	461a      	mov	r2, r3
 800437c:	6839      	ldr	r1, [r7, #0]
 800437e:	4620      	mov	r0, r4
 8004380:	f000 ffc5 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 8004384:	4603      	mov	r3, r0
 8004386:	2b00      	cmp	r3, #0
 8004388:	d01f      	beq.n	80043ca <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 800438a:	69bb      	ldr	r3, [r7, #24]
 800438c:	4618      	mov	r0, r3
 800438e:	f7ff fed6 	bl	800413e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8004392:	4603      	mov	r3, r0
 8004394:	2b00      	cmp	r3, #0
 8004396:	bf0c      	ite	eq
 8004398:	2301      	moveq	r3, #1
 800439a:	2300      	movne	r3, #0
 800439c:	b2db      	uxtb	r3, r3
 800439e:	2b00      	cmp	r3, #0
 80043a0:	d00a      	beq.n	80043b8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x20a>
		return _Res(0, __pos._M_node);
 80043a2:	2300      	movs	r3, #0
 80043a4:	62bb      	str	r3, [r7, #40]	; 0x28
 80043a6:	f107 0218 	add.w	r2, r7, #24
 80043aa:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80043ae:	4619      	mov	r1, r3
 80043b0:	68f8      	ldr	r0, [r7, #12]
 80043b2:	f000 ffc1 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80043b6:	e019      	b.n	80043ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 80043b8:	f107 0210 	add.w	r2, r7, #16
 80043bc:	f107 0310 	add.w	r3, r7, #16
 80043c0:	4619      	mov	r1, r3
 80043c2:	68f8      	ldr	r0, [r7, #12]
 80043c4:	f001 f85f 	bl	8005486 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80043c8:	e010      	b.n	80043ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80043ca:	68fb      	ldr	r3, [r7, #12]
 80043cc:	683a      	ldr	r2, [r7, #0]
 80043ce:	68b9      	ldr	r1, [r7, #8]
 80043d0:	4618      	mov	r0, r3
 80043d2:	f000 ffc7 	bl	8005364 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 80043d6:	e009      	b.n	80043ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	return _Res(__pos._M_node, 0);
 80043d8:	2300      	movs	r3, #0
 80043da:	62fb      	str	r3, [r7, #44]	; 0x2c
 80043dc:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80043e0:	f107 0318 	add.w	r3, r7, #24
 80043e4:	4619      	mov	r1, r3
 80043e6:	68f8      	ldr	r0, [r7, #12]
 80043e8:	f001 f888 	bl	80054fc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80043ec:	68f8      	ldr	r0, [r7, #12]
 80043ee:	3734      	adds	r7, #52	; 0x34
 80043f0:	46bd      	mov	sp, r7
 80043f2:	bd90      	pop	{r4, r7, pc}

080043f4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
 80043f4:	b480      	push	{r7}
 80043f6:	b083      	sub	sp, #12
 80043f8:	af00      	add	r7, sp, #0
 80043fa:	6078      	str	r0, [r7, #4]
 80043fc:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 80043fe:	683b      	ldr	r3, [r7, #0]
 8004400:	4618      	mov	r0, r3
 8004402:	370c      	adds	r7, #12
 8004404:	46bd      	mov	sp, r7
 8004406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800440a:	4770      	bx	lr

0800440c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800440c:	b480      	push	{r7}
 800440e:	b083      	sub	sp, #12
 8004410:	af00      	add	r7, sp, #0
 8004412:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	4618      	mov	r0, r3
 8004418:	370c      	adds	r7, #12
 800441a:	46bd      	mov	sp, r7
 800441c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004420:	4770      	bx	lr

08004422 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8004422:	b5b0      	push	{r4, r5, r7, lr}
 8004424:	b088      	sub	sp, #32
 8004426:	af00      	add	r7, sp, #0
 8004428:	60f8      	str	r0, [r7, #12]
 800442a:	60b9      	str	r1, [r7, #8]
 800442c:	607a      	str	r2, [r7, #4]
 800442e:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8004430:	68bb      	ldr	r3, [r7, #8]
 8004432:	2b00      	cmp	r3, #0
 8004434:	d11a      	bne.n	800446c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8004436:	68f8      	ldr	r0, [r7, #12]
 8004438:	f000 ff39 	bl	80052ae <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 800443c:	4602      	mov	r2, r0
 800443e:	687b      	ldr	r3, [r7, #4]
 8004440:	4293      	cmp	r3, r2
 8004442:	d013      	beq.n	800446c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8004444:	68fc      	ldr	r4, [r7, #12]
 8004446:	f107 0310 	add.w	r3, r7, #16
 800444a:	6839      	ldr	r1, [r7, #0]
 800444c:	4618      	mov	r0, r3
 800444e:	f7ff ffd1 	bl	80043f4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 8004452:	4605      	mov	r5, r0
 8004454:	6878      	ldr	r0, [r7, #4]
 8004456:	f000 ff4e 	bl	80052f6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800445a:	4603      	mov	r3, r0
 800445c:	461a      	mov	r2, r3
 800445e:	4629      	mov	r1, r5
 8004460:	4620      	mov	r0, r4
 8004462:	f000 ff54 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 8004466:	4603      	mov	r3, r0
 8004468:	2b00      	cmp	r3, #0
 800446a:	d001      	beq.n	8004470 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4e>
 800446c:	2301      	movs	r3, #1
 800446e:	e000      	b.n	8004472 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x50>
 8004470:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8004472:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8004474:	6838      	ldr	r0, [r7, #0]
 8004476:	f7ff ffc9 	bl	800440c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 800447a:	4603      	mov	r3, r0
 800447c:	4619      	mov	r1, r3
 800447e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004480:	f001 f852 	bl	8005528 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>
 8004484:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8004486:	68fb      	ldr	r3, [r7, #12]
 8004488:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 800448a:	7ff8      	ldrb	r0, [r7, #31]
 800448c:	687a      	ldr	r2, [r7, #4]
 800448e:	69b9      	ldr	r1, [r7, #24]
 8004490:	f01e f86e 	bl	8022570 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8004494:	68fb      	ldr	r3, [r7, #12]
 8004496:	695b      	ldr	r3, [r3, #20]
 8004498:	1c5a      	adds	r2, r3, #1
 800449a:	68fb      	ldr	r3, [r7, #12]
 800449c:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 800449e:	f107 0314 	add.w	r3, r7, #20
 80044a2:	69b9      	ldr	r1, [r7, #24]
 80044a4:	4618      	mov	r0, r3
 80044a6:	f7ff fe73 	bl	8004190 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 80044aa:	697b      	ldr	r3, [r7, #20]
      }
 80044ac:	4618      	mov	r0, r3
 80044ae:	3720      	adds	r7, #32
 80044b0:	46bd      	mov	sp, r7
 80044b2:	bdb0      	pop	{r4, r5, r7, pc}

080044b4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80044b4:	b480      	push	{r7}
 80044b6:	b083      	sub	sp, #12
 80044b8:	af00      	add	r7, sp, #0
 80044ba:	6078      	str	r0, [r7, #4]
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	4618      	mov	r0, r3
 80044c0:	370c      	adds	r7, #12
 80044c2:	46bd      	mov	sp, r7
 80044c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044c8:	4770      	bx	lr

080044ca <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80044ca:	b480      	push	{r7}
 80044cc:	b083      	sub	sp, #12
 80044ce:	af00      	add	r7, sp, #0
 80044d0:	6078      	str	r0, [r7, #4]
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	4618      	mov	r0, r3
 80044d6:	370c      	adds	r7, #12
 80044d8:	46bd      	mov	sp, r7
 80044da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044de:	4770      	bx	lr

080044e0 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEEONSt16remove_referenceIT_E4typeEOSF_>:
    move(_Tp&& __t) noexcept
 80044e0:	b480      	push	{r7}
 80044e2:	b083      	sub	sp, #12
 80044e4:	af00      	add	r7, sp, #0
 80044e6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	4618      	mov	r0, r3
 80044ec:	370c      	adds	r7, #12
 80044ee:	46bd      	mov	sp, r7
 80044f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044f4:	4770      	bx	lr

080044f6 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSB_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80044f6:	b580      	push	{r7, lr}
 80044f8:	b082      	sub	sp, #8
 80044fa:	af00      	add	r7, sp, #0
 80044fc:	6078      	str	r0, [r7, #4]
 80044fe:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8004500:	6839      	ldr	r1, [r7, #0]
 8004502:	6878      	ldr	r0, [r7, #4]
 8004504:	f001 f824 	bl	8005550 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSD_>
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	4618      	mov	r0, r3
 800450c:	3708      	adds	r7, #8
 800450e:	46bd      	mov	sp, r7
 8004510:	bd80      	pop	{r7, pc}

08004512 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
 8004512:	b480      	push	{r7}
 8004514:	b083      	sub	sp, #12
 8004516:	af00      	add	r7, sp, #0
 8004518:	6078      	str	r0, [r7, #4]
 800451a:	6039      	str	r1, [r7, #0]
      { }
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	4618      	mov	r0, r3
 8004520:	370c      	adds	r7, #12
 8004522:	46bd      	mov	sp, r7
 8004524:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004528:	4770      	bx	lr

0800452a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800452a:	b480      	push	{r7}
 800452c:	b083      	sub	sp, #12
 800452e:	af00      	add	r7, sp, #0
 8004530:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8004532:	687b      	ldr	r3, [r7, #4]
 8004534:	68db      	ldr	r3, [r3, #12]
 8004536:	4618      	mov	r0, r3
 8004538:	370c      	adds	r7, #12
 800453a:	46bd      	mov	sp, r7
 800453c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004540:	4770      	bx	lr

08004542 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8004542:	b480      	push	{r7}
 8004544:	b083      	sub	sp, #12
 8004546:	af00      	add	r7, sp, #0
 8004548:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	689b      	ldr	r3, [r3, #8]
 800454e:	4618      	mov	r0, r3
 8004550:	370c      	adds	r7, #12
 8004552:	46bd      	mov	sp, r7
 8004554:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004558:	4770      	bx	lr

0800455a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800455a:	b580      	push	{r7, lr}
 800455c:	b082      	sub	sp, #8
 800455e:	af00      	add	r7, sp, #0
 8004560:	6078      	str	r0, [r7, #4]
 8004562:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8004564:	6839      	ldr	r1, [r7, #0]
 8004566:	6878      	ldr	r0, [r7, #4]
 8004568:	f000 fffe 	bl	8005568 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>
	_M_put_node(__p);
 800456c:	6839      	ldr	r1, [r7, #0]
 800456e:	6878      	ldr	r0, [r7, #4]
 8004570:	f001 f80f 	bl	8005592 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>
      }
 8004574:	bf00      	nop
 8004576:	3708      	adds	r7, #8
 8004578:	46bd      	mov	sp, r7
 800457a:	bd80      	pop	{r7, pc}

0800457c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800457c:	b480      	push	{r7}
 800457e:	b083      	sub	sp, #12
 8004580:	af00      	add	r7, sp, #0
 8004582:	6078      	str	r0, [r7, #4]
 8004584:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	683a      	ldr	r2, [r7, #0]
 800458a:	601a      	str	r2, [r3, #0]
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	4618      	mov	r0, r3
 8004590:	370c      	adds	r7, #12
 8004592:	46bd      	mov	sp, r7
 8004594:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004598:	4770      	bx	lr

0800459a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800459a:	b590      	push	{r4, r7, lr}
 800459c:	b08d      	sub	sp, #52	; 0x34
 800459e:	af00      	add	r7, sp, #0
 80045a0:	60f8      	str	r0, [r7, #12]
 80045a2:	60b9      	str	r1, [r7, #8]
 80045a4:	607a      	str	r2, [r7, #4]
 80045a6:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 80045a8:	1d3b      	adds	r3, r7, #4
 80045aa:	4618      	mov	r0, r3
 80045ac:	f001 f803 	bl	80055b6 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE13_M_const_castEv>
 80045b0:	4603      	mov	r3, r0
 80045b2:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 80045b4:	69bc      	ldr	r4, [r7, #24]
 80045b6:	68b8      	ldr	r0, [r7, #8]
 80045b8:	f001 f80e 	bl	80055d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 80045bc:	4603      	mov	r3, r0
 80045be:	429c      	cmp	r4, r3
 80045c0:	bf0c      	ite	eq
 80045c2:	2301      	moveq	r3, #1
 80045c4:	2300      	movne	r3, #0
 80045c6:	b2db      	uxtb	r3, r3
 80045c8:	2b00      	cmp	r3, #0
 80045ca:	d030      	beq.n	800462e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x94>
	  if (size() > 0
 80045cc:	68b8      	ldr	r0, [r7, #8]
 80045ce:	f001 f80f 	bl	80055f0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>
 80045d2:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	d013      	beq.n	8004600 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 80045d8:	68bc      	ldr	r4, [r7, #8]
 80045da:	68b8      	ldr	r0, [r7, #8]
 80045dc:	f001 f814 	bl	8005608 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80045e0:	4603      	mov	r3, r0
 80045e2:	681b      	ldr	r3, [r3, #0]
 80045e4:	4618      	mov	r0, r3
 80045e6:	f001 f81b 	bl	8005620 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80045ea:	4603      	mov	r3, r0
 80045ec:	683a      	ldr	r2, [r7, #0]
 80045ee:	4619      	mov	r1, r3
 80045f0:	4620      	mov	r0, r4
 80045f2:	f001 f821 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80045f6:	4603      	mov	r3, r0
 80045f8:	2b00      	cmp	r3, #0
 80045fa:	d001      	beq.n	8004600 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 80045fc:	2301      	movs	r3, #1
 80045fe:	e000      	b.n	8004602 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x68>
 8004600:	2300      	movs	r3, #0
	  if (size() > 0
 8004602:	2b00      	cmp	r3, #0
 8004604:	d00c      	beq.n	8004620 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x86>
	    return _Res(0, _M_rightmost());
 8004606:	2300      	movs	r3, #0
 8004608:	61fb      	str	r3, [r7, #28]
 800460a:	68b8      	ldr	r0, [r7, #8]
 800460c:	f000 fffc 	bl	8005608 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8004610:	4602      	mov	r2, r0
 8004612:	f107 031c 	add.w	r3, r7, #28
 8004616:	4619      	mov	r1, r3
 8004618:	68f8      	ldr	r0, [r7, #12]
 800461a:	f000 fe8d 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 800461e:	e0db      	b.n	80047d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8004620:	68fb      	ldr	r3, [r7, #12]
 8004622:	683a      	ldr	r2, [r7, #0]
 8004624:	68b9      	ldr	r1, [r7, #8]
 8004626:	4618      	mov	r0, r3
 8004628:	f001 f815 	bl	8005656 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 800462c:	e0d4      	b.n	80047d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 800462e:	68bc      	ldr	r4, [r7, #8]
 8004630:	69bb      	ldr	r3, [r7, #24]
 8004632:	4618      	mov	r0, r3
 8004634:	f000 fff4 	bl	8005620 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004638:	4603      	mov	r3, r0
 800463a:	461a      	mov	r2, r3
 800463c:	6839      	ldr	r1, [r7, #0]
 800463e:	4620      	mov	r0, r4
 8004640:	f000 fffa 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8004644:	4603      	mov	r3, r0
 8004646:	2b00      	cmp	r3, #0
 8004648:	d057      	beq.n	80046fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x160>
	  iterator __before = __pos;
 800464a:	69bb      	ldr	r3, [r7, #24]
 800464c:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 800464e:	69bc      	ldr	r4, [r7, #24]
 8004650:	68b8      	ldr	r0, [r7, #8]
 8004652:	f001 f885 	bl	8005760 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8004656:	4603      	mov	r3, r0
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	429c      	cmp	r4, r3
 800465c:	bf0c      	ite	eq
 800465e:	2301      	moveq	r3, #1
 8004660:	2300      	movne	r3, #0
 8004662:	b2db      	uxtb	r3, r3
 8004664:	2b00      	cmp	r3, #0
 8004666:	d00d      	beq.n	8004684 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 8004668:	68b8      	ldr	r0, [r7, #8]
 800466a:	f001 f879 	bl	8005760 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 800466e:	4604      	mov	r4, r0
 8004670:	68b8      	ldr	r0, [r7, #8]
 8004672:	f001 f875 	bl	8005760 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8004676:	4603      	mov	r3, r0
 8004678:	461a      	mov	r2, r3
 800467a:	4621      	mov	r1, r4
 800467c:	68f8      	ldr	r0, [r7, #12]
 800467e:	f000 ff02 	bl	8005486 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8004682:	e0a9      	b.n	80047d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8004684:	68bc      	ldr	r4, [r7, #8]
 8004686:	f107 0314 	add.w	r3, r7, #20
 800468a:	4618      	mov	r0, r3
 800468c:	f001 f874 	bl	8005778 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>
 8004690:	4603      	mov	r3, r0
 8004692:	681b      	ldr	r3, [r3, #0]
 8004694:	4618      	mov	r0, r3
 8004696:	f000 ffc3 	bl	8005620 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800469a:	4603      	mov	r3, r0
 800469c:	683a      	ldr	r2, [r7, #0]
 800469e:	4619      	mov	r1, r3
 80046a0:	4620      	mov	r0, r4
 80046a2:	f000 ffc9 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80046a6:	4603      	mov	r3, r0
 80046a8:	2b00      	cmp	r3, #0
 80046aa:	d01f      	beq.n	80046ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x152>
	      if (_S_right(__before._M_node) == 0)
 80046ac:	697b      	ldr	r3, [r7, #20]
 80046ae:	4618      	mov	r0, r3
 80046b0:	f7ff ff3b 	bl	800452a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 80046b4:	4603      	mov	r3, r0
 80046b6:	2b00      	cmp	r3, #0
 80046b8:	bf0c      	ite	eq
 80046ba:	2301      	moveq	r3, #1
 80046bc:	2300      	movne	r3, #0
 80046be:	b2db      	uxtb	r3, r3
 80046c0:	2b00      	cmp	r3, #0
 80046c2:	d00a      	beq.n	80046da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x140>
		return _Res(0, __before._M_node);
 80046c4:	2300      	movs	r3, #0
 80046c6:	623b      	str	r3, [r7, #32]
 80046c8:	f107 0214 	add.w	r2, r7, #20
 80046cc:	f107 0320 	add.w	r3, r7, #32
 80046d0:	4619      	mov	r1, r3
 80046d2:	68f8      	ldr	r0, [r7, #12]
 80046d4:	f000 fe30 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80046d8:	e07e      	b.n	80047d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 80046da:	f107 0218 	add.w	r2, r7, #24
 80046de:	f107 0318 	add.w	r3, r7, #24
 80046e2:	4619      	mov	r1, r3
 80046e4:	68f8      	ldr	r0, [r7, #12]
 80046e6:	f000 fece 	bl	8005486 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80046ea:	e075      	b.n	80047d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80046ec:	68fb      	ldr	r3, [r7, #12]
 80046ee:	683a      	ldr	r2, [r7, #0]
 80046f0:	68b9      	ldr	r1, [r7, #8]
 80046f2:	4618      	mov	r0, r3
 80046f4:	f000 ffaf 	bl	8005656 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80046f8:	e06e      	b.n	80047d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 80046fa:	68bc      	ldr	r4, [r7, #8]
 80046fc:	69bb      	ldr	r3, [r7, #24]
 80046fe:	4618      	mov	r0, r3
 8004700:	f000 ff8e 	bl	8005620 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004704:	4603      	mov	r3, r0
 8004706:	683a      	ldr	r2, [r7, #0]
 8004708:	4619      	mov	r1, r3
 800470a:	4620      	mov	r0, r4
 800470c:	f000 ff94 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8004710:	4603      	mov	r3, r0
 8004712:	2b00      	cmp	r3, #0
 8004714:	d056      	beq.n	80047c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x22a>
	  iterator __after = __pos;
 8004716:	69bb      	ldr	r3, [r7, #24]
 8004718:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 800471a:	69bc      	ldr	r4, [r7, #24]
 800471c:	68b8      	ldr	r0, [r7, #8]
 800471e:	f000 ff73 	bl	8005608 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8004722:	4603      	mov	r3, r0
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	429c      	cmp	r4, r3
 8004728:	bf0c      	ite	eq
 800472a:	2301      	moveq	r3, #1
 800472c:	2300      	movne	r3, #0
 800472e:	b2db      	uxtb	r3, r3
 8004730:	2b00      	cmp	r3, #0
 8004732:	d00c      	beq.n	800474e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x1b4>
	    return _Res(0, _M_rightmost());
 8004734:	2300      	movs	r3, #0
 8004736:	627b      	str	r3, [r7, #36]	; 0x24
 8004738:	68b8      	ldr	r0, [r7, #8]
 800473a:	f000 ff65 	bl	8005608 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 800473e:	4602      	mov	r2, r0
 8004740:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004744:	4619      	mov	r1, r3
 8004746:	68f8      	ldr	r0, [r7, #12]
 8004748:	f000 fdf6 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 800474c:	e044      	b.n	80047d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 800474e:	68bc      	ldr	r4, [r7, #8]
 8004750:	f107 0310 	add.w	r3, r7, #16
 8004754:	4618      	mov	r0, r3
 8004756:	f001 f820 	bl	800579a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEppEv>
 800475a:	4603      	mov	r3, r0
 800475c:	681b      	ldr	r3, [r3, #0]
 800475e:	4618      	mov	r0, r3
 8004760:	f000 ff5e 	bl	8005620 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004764:	4603      	mov	r3, r0
 8004766:	461a      	mov	r2, r3
 8004768:	6839      	ldr	r1, [r7, #0]
 800476a:	4620      	mov	r0, r4
 800476c:	f000 ff64 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8004770:	4603      	mov	r3, r0
 8004772:	2b00      	cmp	r3, #0
 8004774:	d01f      	beq.n	80047b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 8004776:	69bb      	ldr	r3, [r7, #24]
 8004778:	4618      	mov	r0, r3
 800477a:	f7ff fed6 	bl	800452a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 800477e:	4603      	mov	r3, r0
 8004780:	2b00      	cmp	r3, #0
 8004782:	bf0c      	ite	eq
 8004784:	2301      	moveq	r3, #1
 8004786:	2300      	movne	r3, #0
 8004788:	b2db      	uxtb	r3, r3
 800478a:	2b00      	cmp	r3, #0
 800478c:	d00a      	beq.n	80047a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x20a>
		return _Res(0, __pos._M_node);
 800478e:	2300      	movs	r3, #0
 8004790:	62bb      	str	r3, [r7, #40]	; 0x28
 8004792:	f107 0218 	add.w	r2, r7, #24
 8004796:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800479a:	4619      	mov	r1, r3
 800479c:	68f8      	ldr	r0, [r7, #12]
 800479e:	f000 fdcb 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80047a2:	e019      	b.n	80047d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 80047a4:	f107 0210 	add.w	r2, r7, #16
 80047a8:	f107 0310 	add.w	r3, r7, #16
 80047ac:	4619      	mov	r1, r3
 80047ae:	68f8      	ldr	r0, [r7, #12]
 80047b0:	f000 fe69 	bl	8005486 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80047b4:	e010      	b.n	80047d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80047b6:	68fb      	ldr	r3, [r7, #12]
 80047b8:	683a      	ldr	r2, [r7, #0]
 80047ba:	68b9      	ldr	r1, [r7, #8]
 80047bc:	4618      	mov	r0, r3
 80047be:	f000 ff4a 	bl	8005656 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80047c2:	e009      	b.n	80047d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	return _Res(__pos._M_node, 0);
 80047c4:	2300      	movs	r3, #0
 80047c6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80047c8:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80047cc:	f107 0318 	add.w	r3, r7, #24
 80047d0:	4619      	mov	r1, r3
 80047d2:	68f8      	ldr	r0, [r7, #12]
 80047d4:	f000 fe92 	bl	80054fc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80047d8:	68f8      	ldr	r0, [r7, #12]
 80047da:	3734      	adds	r7, #52	; 0x34
 80047dc:	46bd      	mov	sp, r7
 80047de:	bd90      	pop	{r4, r7, pc}

080047e0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>:
      operator()(const _Pair& __x) const
 80047e0:	b480      	push	{r7}
 80047e2:	b083      	sub	sp, #12
 80047e4:	af00      	add	r7, sp, #0
 80047e6:	6078      	str	r0, [r7, #4]
 80047e8:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 80047ea:	683b      	ldr	r3, [r7, #0]
 80047ec:	4618      	mov	r0, r3
 80047ee:	370c      	adds	r7, #12
 80047f0:	46bd      	mov	sp, r7
 80047f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047f6:	4770      	bx	lr

080047f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80047f8:	b480      	push	{r7}
 80047fa:	b083      	sub	sp, #12
 80047fc:	af00      	add	r7, sp, #0
 80047fe:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	4618      	mov	r0, r3
 8004804:	370c      	adds	r7, #12
 8004806:	46bd      	mov	sp, r7
 8004808:	f85d 7b04 	ldr.w	r7, [sp], #4
 800480c:	4770      	bx	lr

0800480e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800480e:	b5b0      	push	{r4, r5, r7, lr}
 8004810:	b088      	sub	sp, #32
 8004812:	af00      	add	r7, sp, #0
 8004814:	60f8      	str	r0, [r7, #12]
 8004816:	60b9      	str	r1, [r7, #8]
 8004818:	607a      	str	r2, [r7, #4]
 800481a:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 800481c:	68bb      	ldr	r3, [r7, #8]
 800481e:	2b00      	cmp	r3, #0
 8004820:	d11a      	bne.n	8004858 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8004822:	68f8      	ldr	r0, [r7, #12]
 8004824:	f000 fed8 	bl	80055d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8004828:	4602      	mov	r2, r0
 800482a:	687b      	ldr	r3, [r7, #4]
 800482c:	4293      	cmp	r3, r2
 800482e:	d013      	beq.n	8004858 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8004830:	68fc      	ldr	r4, [r7, #12]
 8004832:	f107 0310 	add.w	r3, r7, #16
 8004836:	6839      	ldr	r1, [r7, #0]
 8004838:	4618      	mov	r0, r3
 800483a:	f7ff ffd1 	bl	80047e0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 800483e:	4605      	mov	r5, r0
 8004840:	6878      	ldr	r0, [r7, #4]
 8004842:	f000 feed 	bl	8005620 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004846:	4603      	mov	r3, r0
 8004848:	461a      	mov	r2, r3
 800484a:	4629      	mov	r1, r5
 800484c:	4620      	mov	r0, r4
 800484e:	f000 fef3 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8004852:	4603      	mov	r3, r0
 8004854:	2b00      	cmp	r3, #0
 8004856:	d001      	beq.n	800485c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4e>
 8004858:	2301      	movs	r3, #1
 800485a:	e000      	b.n	800485e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x50>
 800485c:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 800485e:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8004860:	6838      	ldr	r0, [r7, #0]
 8004862:	f7ff ffc9 	bl	80047f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8004866:	4603      	mov	r3, r0
 8004868:	4619      	mov	r1, r3
 800486a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800486c:	f000 ffa6 	bl	80057bc <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIRKS9_EEPSt13_Rb_tree_nodeIS9_EOT_>
 8004870:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8004872:	68fb      	ldr	r3, [r7, #12]
 8004874:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8004876:	7ff8      	ldrb	r0, [r7, #31]
 8004878:	687a      	ldr	r2, [r7, #4]
 800487a:	69b9      	ldr	r1, [r7, #24]
 800487c:	f01d fe78 	bl	8022570 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8004880:	68fb      	ldr	r3, [r7, #12]
 8004882:	695b      	ldr	r3, [r3, #20]
 8004884:	1c5a      	adds	r2, r3, #1
 8004886:	68fb      	ldr	r3, [r7, #12]
 8004888:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 800488a:	f107 0314 	add.w	r3, r7, #20
 800488e:	69b9      	ldr	r1, [r7, #24]
 8004890:	4618      	mov	r0, r3
 8004892:	f7ff fe73 	bl	800457c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8004896:	697b      	ldr	r3, [r7, #20]
      }
 8004898:	4618      	mov	r0, r3
 800489a:	3720      	adds	r7, #32
 800489c:	46bd      	mov	sp, r7
 800489e:	bdb0      	pop	{r4, r5, r7, pc}

080048a0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80048a0:	b480      	push	{r7}
 80048a2:	b083      	sub	sp, #12
 80048a4:	af00      	add	r7, sp, #0
 80048a6:	6078      	str	r0, [r7, #4]
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	4618      	mov	r0, r3
 80048ac:	370c      	adds	r7, #12
 80048ae:	46bd      	mov	sp, r7
 80048b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048b4:	4770      	bx	lr

080048b6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80048b6:	b480      	push	{r7}
 80048b8:	b083      	sub	sp, #12
 80048ba:	af00      	add	r7, sp, #0
 80048bc:	6078      	str	r0, [r7, #4]
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	4618      	mov	r0, r3
 80048c2:	370c      	adds	r7, #12
 80048c4:	46bd      	mov	sp, r7
 80048c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048ca:	4770      	bx	lr

080048cc <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
 80048cc:	b480      	push	{r7}
 80048ce:	b083      	sub	sp, #12
 80048d0:	af00      	add	r7, sp, #0
 80048d2:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80048d4:	687b      	ldr	r3, [r7, #4]
 80048d6:	4618      	mov	r0, r3
 80048d8:	370c      	adds	r7, #12
 80048da:	46bd      	mov	sp, r7
 80048dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048e0:	4770      	bx	lr

080048e2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80048e2:	b580      	push	{r7, lr}
 80048e4:	b082      	sub	sp, #8
 80048e6:	af00      	add	r7, sp, #0
 80048e8:	6078      	str	r0, [r7, #4]
 80048ea:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80048ec:	6839      	ldr	r1, [r7, #0]
 80048ee:	6878      	ldr	r0, [r7, #4]
 80048f0:	f000 ff78 	bl	80057e4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS7_>
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	4618      	mov	r0, r3
 80048f8:	3708      	adds	r7, #8
 80048fa:	46bd      	mov	sp, r7
 80048fc:	bd80      	pop	{r7, pc}

080048fe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80048fe:	b480      	push	{r7}
 8004900:	b083      	sub	sp, #12
 8004902:	af00      	add	r7, sp, #0
 8004904:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8004906:	687b      	ldr	r3, [r7, #4]
 8004908:	68db      	ldr	r3, [r3, #12]
 800490a:	4618      	mov	r0, r3
 800490c:	370c      	adds	r7, #12
 800490e:	46bd      	mov	sp, r7
 8004910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004914:	4770      	bx	lr

08004916 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8004916:	b480      	push	{r7}
 8004918:	b083      	sub	sp, #12
 800491a:	af00      	add	r7, sp, #0
 800491c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800491e:	687b      	ldr	r3, [r7, #4]
 8004920:	689b      	ldr	r3, [r3, #8]
 8004922:	4618      	mov	r0, r3
 8004924:	370c      	adds	r7, #12
 8004926:	46bd      	mov	sp, r7
 8004928:	f85d 7b04 	ldr.w	r7, [sp], #4
 800492c:	4770      	bx	lr

0800492e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800492e:	b580      	push	{r7, lr}
 8004930:	b082      	sub	sp, #8
 8004932:	af00      	add	r7, sp, #0
 8004934:	6078      	str	r0, [r7, #4]
 8004936:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8004938:	6839      	ldr	r1, [r7, #0]
 800493a:	6878      	ldr	r0, [r7, #4]
 800493c:	f000 ff5e 	bl	80057fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>
	_M_put_node(__p);
 8004940:	6839      	ldr	r1, [r7, #0]
 8004942:	6878      	ldr	r0, [r7, #4]
 8004944:	f000 ff6f 	bl	8005826 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>
      }
 8004948:	bf00      	nop
 800494a:	3708      	adds	r7, #8
 800494c:	46bd      	mov	sp, r7
 800494e:	bd80      	pop	{r7, pc}

08004950 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8004950:	b480      	push	{r7}
 8004952:	b083      	sub	sp, #12
 8004954:	af00      	add	r7, sp, #0
 8004956:	6078      	str	r0, [r7, #4]
 8004958:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800495a:	687b      	ldr	r3, [r7, #4]
 800495c:	683a      	ldr	r2, [r7, #0]
 800495e:	601a      	str	r2, [r3, #0]
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	4618      	mov	r0, r3
 8004964:	370c      	adds	r7, #12
 8004966:	46bd      	mov	sp, r7
 8004968:	f85d 7b04 	ldr.w	r7, [sp], #4
 800496c:	4770      	bx	lr

0800496e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800496e:	b590      	push	{r4, r7, lr}
 8004970:	b08d      	sub	sp, #52	; 0x34
 8004972:	af00      	add	r7, sp, #0
 8004974:	60f8      	str	r0, [r7, #12]
 8004976:	60b9      	str	r1, [r7, #8]
 8004978:	607a      	str	r2, [r7, #4]
 800497a:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 800497c:	1d3b      	adds	r3, r7, #4
 800497e:	4618      	mov	r0, r3
 8004980:	f000 ff63 	bl	800584a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEE13_M_const_castEv>
 8004984:	4603      	mov	r3, r0
 8004986:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8004988:	69bc      	ldr	r4, [r7, #24]
 800498a:	68b8      	ldr	r0, [r7, #8]
 800498c:	f000 ff6e 	bl	800586c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8004990:	4603      	mov	r3, r0
 8004992:	429c      	cmp	r4, r3
 8004994:	bf0c      	ite	eq
 8004996:	2301      	moveq	r3, #1
 8004998:	2300      	movne	r3, #0
 800499a:	b2db      	uxtb	r3, r3
 800499c:	2b00      	cmp	r3, #0
 800499e:	d030      	beq.n	8004a02 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x94>
	  if (size() > 0
 80049a0:	68b8      	ldr	r0, [r7, #8]
 80049a2:	f000 ff6f 	bl	8005884 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>
 80049a6:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 80049a8:	2b00      	cmp	r3, #0
 80049aa:	d013      	beq.n	80049d4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 80049ac:	68bc      	ldr	r4, [r7, #8]
 80049ae:	68b8      	ldr	r0, [r7, #8]
 80049b0:	f000 ff74 	bl	800589c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80049b4:	4603      	mov	r3, r0
 80049b6:	681b      	ldr	r3, [r3, #0]
 80049b8:	4618      	mov	r0, r3
 80049ba:	f000 ff7b 	bl	80058b4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80049be:	4603      	mov	r3, r0
 80049c0:	683a      	ldr	r2, [r7, #0]
 80049c2:	4619      	mov	r1, r3
 80049c4:	4620      	mov	r0, r4
 80049c6:	f000 fca2 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 80049ca:	4603      	mov	r3, r0
 80049cc:	2b00      	cmp	r3, #0
 80049ce:	d001      	beq.n	80049d4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 80049d0:	2301      	movs	r3, #1
 80049d2:	e000      	b.n	80049d6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x68>
 80049d4:	2300      	movs	r3, #0
	  if (size() > 0
 80049d6:	2b00      	cmp	r3, #0
 80049d8:	d00c      	beq.n	80049f4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x86>
	    return _Res(0, _M_rightmost());
 80049da:	2300      	movs	r3, #0
 80049dc:	61fb      	str	r3, [r7, #28]
 80049de:	68b8      	ldr	r0, [r7, #8]
 80049e0:	f000 ff5c 	bl	800589c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80049e4:	4602      	mov	r2, r0
 80049e6:	f107 031c 	add.w	r3, r7, #28
 80049ea:	4619      	mov	r1, r3
 80049ec:	68f8      	ldr	r0, [r7, #12]
 80049ee:	f000 fca3 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80049f2:	e0db      	b.n	8004bac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80049f4:	68fb      	ldr	r3, [r7, #12]
 80049f6:	683a      	ldr	r2, [r7, #0]
 80049f8:	68b9      	ldr	r1, [r7, #8]
 80049fa:	4618      	mov	r0, r3
 80049fc:	f000 ff66 	bl	80058cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8004a00:	e0d4      	b.n	8004bac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8004a02:	68bc      	ldr	r4, [r7, #8]
 8004a04:	69bb      	ldr	r3, [r7, #24]
 8004a06:	4618      	mov	r0, r3
 8004a08:	f000 ff54 	bl	80058b4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004a0c:	4603      	mov	r3, r0
 8004a0e:	461a      	mov	r2, r3
 8004a10:	6839      	ldr	r1, [r7, #0]
 8004a12:	4620      	mov	r0, r4
 8004a14:	f000 fc7b 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 8004a18:	4603      	mov	r3, r0
 8004a1a:	2b00      	cmp	r3, #0
 8004a1c:	d057      	beq.n	8004ace <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x160>
	  iterator __before = __pos;
 8004a1e:	69bb      	ldr	r3, [r7, #24]
 8004a20:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8004a22:	69bc      	ldr	r4, [r7, #24]
 8004a24:	68b8      	ldr	r0, [r7, #8]
 8004a26:	f000 ffd6 	bl	80059d6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8004a2a:	4603      	mov	r3, r0
 8004a2c:	681b      	ldr	r3, [r3, #0]
 8004a2e:	429c      	cmp	r4, r3
 8004a30:	bf0c      	ite	eq
 8004a32:	2301      	moveq	r3, #1
 8004a34:	2300      	movne	r3, #0
 8004a36:	b2db      	uxtb	r3, r3
 8004a38:	2b00      	cmp	r3, #0
 8004a3a:	d00d      	beq.n	8004a58 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 8004a3c:	68b8      	ldr	r0, [r7, #8]
 8004a3e:	f000 ffca 	bl	80059d6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8004a42:	4604      	mov	r4, r0
 8004a44:	68b8      	ldr	r0, [r7, #8]
 8004a46:	f000 ffc6 	bl	80059d6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8004a4a:	4603      	mov	r3, r0
 8004a4c:	461a      	mov	r2, r3
 8004a4e:	4621      	mov	r1, r4
 8004a50:	68f8      	ldr	r0, [r7, #12]
 8004a52:	f000 fd18 	bl	8005486 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8004a56:	e0a9      	b.n	8004bac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8004a58:	68bc      	ldr	r4, [r7, #8]
 8004a5a:	f107 0314 	add.w	r3, r7, #20
 8004a5e:	4618      	mov	r0, r3
 8004a60:	f000 ffc5 	bl	80059ee <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>
 8004a64:	4603      	mov	r3, r0
 8004a66:	681b      	ldr	r3, [r3, #0]
 8004a68:	4618      	mov	r0, r3
 8004a6a:	f000 ff23 	bl	80058b4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004a6e:	4603      	mov	r3, r0
 8004a70:	683a      	ldr	r2, [r7, #0]
 8004a72:	4619      	mov	r1, r3
 8004a74:	4620      	mov	r0, r4
 8004a76:	f000 fc4a 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 8004a7a:	4603      	mov	r3, r0
 8004a7c:	2b00      	cmp	r3, #0
 8004a7e:	d01f      	beq.n	8004ac0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8004a80:	697b      	ldr	r3, [r7, #20]
 8004a82:	4618      	mov	r0, r3
 8004a84:	f7ff ff3b 	bl	80048fe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8004a88:	4603      	mov	r3, r0
 8004a8a:	2b00      	cmp	r3, #0
 8004a8c:	bf0c      	ite	eq
 8004a8e:	2301      	moveq	r3, #1
 8004a90:	2300      	movne	r3, #0
 8004a92:	b2db      	uxtb	r3, r3
 8004a94:	2b00      	cmp	r3, #0
 8004a96:	d00a      	beq.n	8004aae <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x140>
		return _Res(0, __before._M_node);
 8004a98:	2300      	movs	r3, #0
 8004a9a:	623b      	str	r3, [r7, #32]
 8004a9c:	f107 0214 	add.w	r2, r7, #20
 8004aa0:	f107 0320 	add.w	r3, r7, #32
 8004aa4:	4619      	mov	r1, r3
 8004aa6:	68f8      	ldr	r0, [r7, #12]
 8004aa8:	f000 fc46 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8004aac:	e07e      	b.n	8004bac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 8004aae:	f107 0218 	add.w	r2, r7, #24
 8004ab2:	f107 0318 	add.w	r3, r7, #24
 8004ab6:	4619      	mov	r1, r3
 8004ab8:	68f8      	ldr	r0, [r7, #12]
 8004aba:	f000 fce4 	bl	8005486 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8004abe:	e075      	b.n	8004bac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8004ac0:	68fb      	ldr	r3, [r7, #12]
 8004ac2:	683a      	ldr	r2, [r7, #0]
 8004ac4:	68b9      	ldr	r1, [r7, #8]
 8004ac6:	4618      	mov	r0, r3
 8004ac8:	f000 ff00 	bl	80058cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8004acc:	e06e      	b.n	8004bac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 8004ace:	68bc      	ldr	r4, [r7, #8]
 8004ad0:	69bb      	ldr	r3, [r7, #24]
 8004ad2:	4618      	mov	r0, r3
 8004ad4:	f000 feee 	bl	80058b4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004ad8:	4603      	mov	r3, r0
 8004ada:	683a      	ldr	r2, [r7, #0]
 8004adc:	4619      	mov	r1, r3
 8004ade:	4620      	mov	r0, r4
 8004ae0:	f000 fc15 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 8004ae4:	4603      	mov	r3, r0
 8004ae6:	2b00      	cmp	r3, #0
 8004ae8:	d056      	beq.n	8004b98 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x22a>
	  iterator __after = __pos;
 8004aea:	69bb      	ldr	r3, [r7, #24]
 8004aec:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 8004aee:	69bc      	ldr	r4, [r7, #24]
 8004af0:	68b8      	ldr	r0, [r7, #8]
 8004af2:	f000 fed3 	bl	800589c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8004af6:	4603      	mov	r3, r0
 8004af8:	681b      	ldr	r3, [r3, #0]
 8004afa:	429c      	cmp	r4, r3
 8004afc:	bf0c      	ite	eq
 8004afe:	2301      	moveq	r3, #1
 8004b00:	2300      	movne	r3, #0
 8004b02:	b2db      	uxtb	r3, r3
 8004b04:	2b00      	cmp	r3, #0
 8004b06:	d00c      	beq.n	8004b22 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x1b4>
	    return _Res(0, _M_rightmost());
 8004b08:	2300      	movs	r3, #0
 8004b0a:	627b      	str	r3, [r7, #36]	; 0x24
 8004b0c:	68b8      	ldr	r0, [r7, #8]
 8004b0e:	f000 fec5 	bl	800589c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8004b12:	4602      	mov	r2, r0
 8004b14:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004b18:	4619      	mov	r1, r3
 8004b1a:	68f8      	ldr	r0, [r7, #12]
 8004b1c:	f000 fc0c 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8004b20:	e044      	b.n	8004bac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8004b22:	68bc      	ldr	r4, [r7, #8]
 8004b24:	f107 0310 	add.w	r3, r7, #16
 8004b28:	4618      	mov	r0, r3
 8004b2a:	f000 ff71 	bl	8005a10 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEppEv>
 8004b2e:	4603      	mov	r3, r0
 8004b30:	681b      	ldr	r3, [r3, #0]
 8004b32:	4618      	mov	r0, r3
 8004b34:	f000 febe 	bl	80058b4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004b38:	4603      	mov	r3, r0
 8004b3a:	461a      	mov	r2, r3
 8004b3c:	6839      	ldr	r1, [r7, #0]
 8004b3e:	4620      	mov	r0, r4
 8004b40:	f000 fbe5 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 8004b44:	4603      	mov	r3, r0
 8004b46:	2b00      	cmp	r3, #0
 8004b48:	d01f      	beq.n	8004b8a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 8004b4a:	69bb      	ldr	r3, [r7, #24]
 8004b4c:	4618      	mov	r0, r3
 8004b4e:	f7ff fed6 	bl	80048fe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8004b52:	4603      	mov	r3, r0
 8004b54:	2b00      	cmp	r3, #0
 8004b56:	bf0c      	ite	eq
 8004b58:	2301      	moveq	r3, #1
 8004b5a:	2300      	movne	r3, #0
 8004b5c:	b2db      	uxtb	r3, r3
 8004b5e:	2b00      	cmp	r3, #0
 8004b60:	d00a      	beq.n	8004b78 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x20a>
		return _Res(0, __pos._M_node);
 8004b62:	2300      	movs	r3, #0
 8004b64:	62bb      	str	r3, [r7, #40]	; 0x28
 8004b66:	f107 0218 	add.w	r2, r7, #24
 8004b6a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8004b6e:	4619      	mov	r1, r3
 8004b70:	68f8      	ldr	r0, [r7, #12]
 8004b72:	f000 fbe1 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8004b76:	e019      	b.n	8004bac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8004b78:	f107 0210 	add.w	r2, r7, #16
 8004b7c:	f107 0310 	add.w	r3, r7, #16
 8004b80:	4619      	mov	r1, r3
 8004b82:	68f8      	ldr	r0, [r7, #12]
 8004b84:	f000 fc7f 	bl	8005486 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8004b88:	e010      	b.n	8004bac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8004b8a:	68fb      	ldr	r3, [r7, #12]
 8004b8c:	683a      	ldr	r2, [r7, #0]
 8004b8e:	68b9      	ldr	r1, [r7, #8]
 8004b90:	4618      	mov	r0, r3
 8004b92:	f000 fe9b 	bl	80058cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8004b96:	e009      	b.n	8004bac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	return _Res(__pos._M_node, 0);
 8004b98:	2300      	movs	r3, #0
 8004b9a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004b9c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004ba0:	f107 0318 	add.w	r3, r7, #24
 8004ba4:	4619      	mov	r1, r3
 8004ba6:	68f8      	ldr	r0, [r7, #12]
 8004ba8:	f000 fca8 	bl	80054fc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8004bac:	68f8      	ldr	r0, [r7, #12]
 8004bae:	3734      	adds	r7, #52	; 0x34
 8004bb0:	46bd      	mov	sp, r7
 8004bb2:	bd90      	pop	{r4, r7, pc}

08004bb4 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>:
      operator()(const _Pair& __x) const
 8004bb4:	b480      	push	{r7}
 8004bb6:	b083      	sub	sp, #12
 8004bb8:	af00      	add	r7, sp, #0
 8004bba:	6078      	str	r0, [r7, #4]
 8004bbc:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8004bbe:	683b      	ldr	r3, [r7, #0]
 8004bc0:	4618      	mov	r0, r3
 8004bc2:	370c      	adds	r7, #12
 8004bc4:	46bd      	mov	sp, r7
 8004bc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bca:	4770      	bx	lr

08004bcc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004bcc:	b480      	push	{r7}
 8004bce:	b083      	sub	sp, #12
 8004bd0:	af00      	add	r7, sp, #0
 8004bd2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004bd4:	687b      	ldr	r3, [r7, #4]
 8004bd6:	4618      	mov	r0, r3
 8004bd8:	370c      	adds	r7, #12
 8004bda:	46bd      	mov	sp, r7
 8004bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004be0:	4770      	bx	lr

08004be2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8004be2:	b5b0      	push	{r4, r5, r7, lr}
 8004be4:	b088      	sub	sp, #32
 8004be6:	af00      	add	r7, sp, #0
 8004be8:	60f8      	str	r0, [r7, #12]
 8004bea:	60b9      	str	r1, [r7, #8]
 8004bec:	607a      	str	r2, [r7, #4]
 8004bee:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8004bf0:	68bb      	ldr	r3, [r7, #8]
 8004bf2:	2b00      	cmp	r3, #0
 8004bf4:	d11a      	bne.n	8004c2c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8004bf6:	68f8      	ldr	r0, [r7, #12]
 8004bf8:	f000 fe38 	bl	800586c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8004bfc:	4602      	mov	r2, r0
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	4293      	cmp	r3, r2
 8004c02:	d013      	beq.n	8004c2c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8004c04:	68fc      	ldr	r4, [r7, #12]
 8004c06:	f107 0310 	add.w	r3, r7, #16
 8004c0a:	6839      	ldr	r1, [r7, #0]
 8004c0c:	4618      	mov	r0, r3
 8004c0e:	f7ff ffd1 	bl	8004bb4 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 8004c12:	4605      	mov	r5, r0
 8004c14:	6878      	ldr	r0, [r7, #4]
 8004c16:	f000 fe4d 	bl	80058b4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004c1a:	4603      	mov	r3, r0
 8004c1c:	461a      	mov	r2, r3
 8004c1e:	4629      	mov	r1, r5
 8004c20:	4620      	mov	r0, r4
 8004c22:	f000 fb74 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 8004c26:	4603      	mov	r3, r0
 8004c28:	2b00      	cmp	r3, #0
 8004c2a:	d001      	beq.n	8004c30 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4e>
 8004c2c:	2301      	movs	r3, #1
 8004c2e:	e000      	b.n	8004c32 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x50>
 8004c30:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8004c32:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8004c34:	6838      	ldr	r0, [r7, #0]
 8004c36:	f7ff ffc9 	bl	8004bcc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8004c3a:	4603      	mov	r3, r0
 8004c3c:	4619      	mov	r1, r3
 8004c3e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004c40:	f000 fef7 	bl	8005a32 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>
 8004c44:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8004c46:	68fb      	ldr	r3, [r7, #12]
 8004c48:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8004c4a:	7ff8      	ldrb	r0, [r7, #31]
 8004c4c:	687a      	ldr	r2, [r7, #4]
 8004c4e:	69b9      	ldr	r1, [r7, #24]
 8004c50:	f01d fc8e 	bl	8022570 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8004c54:	68fb      	ldr	r3, [r7, #12]
 8004c56:	695b      	ldr	r3, [r3, #20]
 8004c58:	1c5a      	adds	r2, r3, #1
 8004c5a:	68fb      	ldr	r3, [r7, #12]
 8004c5c:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 8004c5e:	f107 0314 	add.w	r3, r7, #20
 8004c62:	69b9      	ldr	r1, [r7, #24]
 8004c64:	4618      	mov	r0, r3
 8004c66:	f7ff fe73 	bl	8004950 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8004c6a:	697b      	ldr	r3, [r7, #20]
      }
 8004c6c:	4618      	mov	r0, r3
 8004c6e:	3720      	adds	r7, #32
 8004c70:	46bd      	mov	sp, r7
 8004c72:	bdb0      	pop	{r4, r5, r7, pc}

08004c74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004c74:	b480      	push	{r7}
 8004c76:	b083      	sub	sp, #12
 8004c78:	af00      	add	r7, sp, #0
 8004c7a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004c7c:	687b      	ldr	r3, [r7, #4]
 8004c7e:	4618      	mov	r0, r3
 8004c80:	370c      	adds	r7, #12
 8004c82:	46bd      	mov	sp, r7
 8004c84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c88:	4770      	bx	lr

08004c8a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004c8a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004c8c:	b083      	sub	sp, #12
 8004c8e:	af00      	add	r7, sp, #0
 8004c90:	6078      	str	r0, [r7, #4]
 8004c92:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004c94:	6878      	ldr	r0, [r7, #4]
 8004c96:	f000 f8b1 	bl	8004dfc <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004c9a:	4604      	mov	r4, r0
 8004c9c:	6838      	ldr	r0, [r7, #0]
 8004c9e:	f000 fedc 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8004ca2:	4603      	mov	r3, r0
 8004ca4:	461a      	mov	r2, r3
 8004ca6:	4621      	mov	r1, r4
 8004ca8:	4628      	mov	r0, r5
 8004caa:	f000 fee1 	bl	8005a70 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8004cae:	4633      	mov	r3, r6
    }
 8004cb0:	4618      	mov	r0, r3
 8004cb2:	370c      	adds	r7, #12
 8004cb4:	46bd      	mov	sp, r7
 8004cb6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004cb8 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8004cb8:	b480      	push	{r7}
 8004cba:	b083      	sub	sp, #12
 8004cbc:	af00      	add	r7, sp, #0
 8004cbe:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8004cc0:	687b      	ldr	r3, [r7, #4]
 8004cc2:	4618      	mov	r0, r3
 8004cc4:	370c      	adds	r7, #12
 8004cc6:	46bd      	mov	sp, r7
 8004cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ccc:	4770      	bx	lr

08004cce <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004cce:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004cd0:	b083      	sub	sp, #12
 8004cd2:	af00      	add	r7, sp, #0
 8004cd4:	6078      	str	r0, [r7, #4]
 8004cd6:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004cd8:	6878      	ldr	r0, [r7, #4]
 8004cda:	f000 f88f 	bl	8004dfc <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004cde:	4604      	mov	r4, r0
 8004ce0:	6838      	ldr	r0, [r7, #0]
 8004ce2:	f000 fedc 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8004ce6:	4603      	mov	r3, r0
 8004ce8:	461a      	mov	r2, r3
 8004cea:	4621      	mov	r1, r4
 8004cec:	4628      	mov	r0, r5
 8004cee:	f000 fee1 	bl	8005ab4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8004cf2:	4633      	mov	r3, r6
    }
 8004cf4:	4618      	mov	r0, r3
 8004cf6:	370c      	adds	r7, #12
 8004cf8:	46bd      	mov	sp, r7
 8004cfa:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004cfc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004cfe:	b083      	sub	sp, #12
 8004d00:	af00      	add	r7, sp, #0
 8004d02:	6078      	str	r0, [r7, #4]
 8004d04:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004d06:	6878      	ldr	r0, [r7, #4]
 8004d08:	f000 f878 	bl	8004dfc <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004d0c:	4604      	mov	r4, r0
 8004d0e:	6838      	ldr	r0, [r7, #0]
 8004d10:	f000 fee7 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8004d14:	4603      	mov	r3, r0
 8004d16:	461a      	mov	r2, r3
 8004d18:	4621      	mov	r1, r4
 8004d1a:	4628      	mov	r0, r5
 8004d1c:	f000 feec 	bl	8005af8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8004d20:	4633      	mov	r3, r6
    }
 8004d22:	4618      	mov	r0, r3
 8004d24:	370c      	adds	r7, #12
 8004d26:	46bd      	mov	sp, r7
 8004d28:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004d2a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004d2a:	b480      	push	{r7}
 8004d2c:	b083      	sub	sp, #12
 8004d2e:	af00      	add	r7, sp, #0
 8004d30:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	4618      	mov	r0, r3
 8004d36:	370c      	adds	r7, #12
 8004d38:	46bd      	mov	sp, r7
 8004d3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d3e:	4770      	bx	lr

08004d40 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8004d40:	b580      	push	{r7, lr}
 8004d42:	b082      	sub	sp, #8
 8004d44:	af00      	add	r7, sp, #0
 8004d46:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	4618      	mov	r0, r3
 8004d4c:	f000 feeb 	bl	8005b26 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 8004d50:	4603      	mov	r3, r0
 8004d52:	4618      	mov	r0, r3
 8004d54:	3708      	adds	r7, #8
 8004d56:	46bd      	mov	sp, r7
 8004d58:	bd80      	pop	{r7, pc}

08004d5a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004d5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d5c:	b083      	sub	sp, #12
 8004d5e:	af00      	add	r7, sp, #0
 8004d60:	6078      	str	r0, [r7, #4]
 8004d62:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004d64:	6878      	ldr	r0, [r7, #4]
 8004d66:	f000 f849 	bl	8004dfc <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004d6a:	4604      	mov	r4, r0
 8004d6c:	6838      	ldr	r0, [r7, #0]
 8004d6e:	f000 fee6 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8004d72:	4603      	mov	r3, r0
 8004d74:	461a      	mov	r2, r3
 8004d76:	4621      	mov	r1, r4
 8004d78:	4628      	mov	r0, r5
 8004d7a:	f000 feeb 	bl	8005b54 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8004d7e:	4633      	mov	r3, r6
    }
 8004d80:	4618      	mov	r0, r3
 8004d82:	370c      	adds	r7, #12
 8004d84:	46bd      	mov	sp, r7
 8004d86:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004d88 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004d88:	b480      	push	{r7}
 8004d8a:	b083      	sub	sp, #12
 8004d8c:	af00      	add	r7, sp, #0
 8004d8e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	4618      	mov	r0, r3
 8004d94:	370c      	adds	r7, #12
 8004d96:	46bd      	mov	sp, r7
 8004d98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d9c:	4770      	bx	lr

08004d9e <_ZNRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8004d9e:	b580      	push	{r7, lr}
 8004da0:	b082      	sub	sp, #8
 8004da2:	af00      	add	r7, sp, #0
 8004da4:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8004da6:	687b      	ldr	r3, [r7, #4]
 8004da8:	4618      	mov	r0, r3
 8004daa:	f000 feea 	bl	8005b82 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 8004dae:	4603      	mov	r3, r0
 8004db0:	4618      	mov	r0, r3
 8004db2:	3708      	adds	r7, #8
 8004db4:	46bd      	mov	sp, r7
 8004db6:	bd80      	pop	{r7, pc}

08004db8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004db8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004dba:	b083      	sub	sp, #12
 8004dbc:	af00      	add	r7, sp, #0
 8004dbe:	6078      	str	r0, [r7, #4]
 8004dc0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004dc2:	6878      	ldr	r0, [r7, #4]
 8004dc4:	f000 f81a 	bl	8004dfc <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004dc8:	4604      	mov	r4, r0
 8004dca:	6838      	ldr	r0, [r7, #0]
 8004dcc:	f000 fee5 	bl	8005b9a <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8004dd0:	4603      	mov	r3, r0
 8004dd2:	461a      	mov	r2, r3
 8004dd4:	4621      	mov	r1, r4
 8004dd6:	4628      	mov	r0, r5
 8004dd8:	f000 feea 	bl	8005bb0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8004ddc:	4633      	mov	r3, r6
    }
 8004dde:	4618      	mov	r0, r3
 8004de0:	370c      	adds	r7, #12
 8004de2:	46bd      	mov	sp, r7
 8004de4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004de6 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8004de6:	b480      	push	{r7}
 8004de8:	b083      	sub	sp, #12
 8004dea:	af00      	add	r7, sp, #0
 8004dec:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8004dee:	687b      	ldr	r3, [r7, #4]
 8004df0:	4618      	mov	r0, r3
 8004df2:	370c      	adds	r7, #12
 8004df4:	46bd      	mov	sp, r7
 8004df6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dfa:	4770      	bx	lr

08004dfc <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004dfc:	b480      	push	{r7}
 8004dfe:	b083      	sub	sp, #12
 8004e00:	af00      	add	r7, sp, #0
 8004e02:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	4618      	mov	r0, r3
 8004e08:	370c      	adds	r7, #12
 8004e0a:	46bd      	mov	sp, r7
 8004e0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e10:	4770      	bx	lr

08004e12 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004e12:	b5b0      	push	{r4, r5, r7, lr}
 8004e14:	b084      	sub	sp, #16
 8004e16:	af00      	add	r7, sp, #0
 8004e18:	60f8      	str	r0, [r7, #12]
 8004e1a:	60b9      	str	r1, [r7, #8]
 8004e1c:	713a      	strb	r2, [r7, #4]
 8004e1e:	68fb      	ldr	r3, [r7, #12]
 8004e20:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8004e22:	7e1b      	ldrb	r3, [r3, #24]
 8004e24:	461c      	mov	r4, r3
 8004e26:	1d3b      	adds	r3, r7, #4
 8004e28:	4618      	mov	r0, r3
 8004e2a:	f000 f825 	bl	8004e78 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8004e2e:	4603      	mov	r3, r0
 8004e30:	429c      	cmp	r4, r3
 8004e32:	bf0c      	ite	eq
 8004e34:	2301      	moveq	r3, #1
 8004e36:	2300      	movne	r3, #0
 8004e38:	b2db      	uxtb	r3, r3
 8004e3a:	2b00      	cmp	r3, #0
 8004e3c:	d009      	beq.n	8004e52 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_+0x40>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8004e3e:	68bb      	ldr	r3, [r7, #8]
 8004e40:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004e42:	68fb      	ldr	r3, [r7, #12]
 8004e44:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8004e46:	4618      	mov	r0, r3
 8004e48:	f000 f821 	bl	8004e8e <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8004e4c:	4603      	mov	r3, r0
 8004e4e:	601c      	str	r4, [r3, #0]
	    return {};
 8004e50:	e00d      	b.n	8004e6e <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_+0x5c>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004e52:	68fb      	ldr	r3, [r7, #12]
 8004e54:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 8004e56:	461c      	mov	r4, r3
 8004e58:	1d3b      	adds	r3, r7, #4
 8004e5a:	4618      	mov	r0, r3
 8004e5c:	f000 f80c 	bl	8004e78 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8004e60:	4603      	mov	r3, r0
 8004e62:	b29b      	uxth	r3, r3
 8004e64:	68ba      	ldr	r2, [r7, #8]
 8004e66:	4619      	mov	r1, r3
 8004e68:	4620      	mov	r0, r4
 8004e6a:	f000 fec3 	bl	8005bf4 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIiEEvtRKT_>
	    return {};
 8004e6e:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004e70:	4618      	mov	r0, r3
 8004e72:	3710      	adds	r7, #16
 8004e74:	46bd      	mov	sp, r7
 8004e76:	bdb0      	pop	{r4, r5, r7, pc}

08004e78 <_ZNKSt17integral_constantIjLj0EEcvjEv>:
    struct integral_constant
    {
      static constexpr _Tp                  value = __v;
      typedef _Tp                           value_type;
      typedef integral_constant<_Tp, __v>   type;
      constexpr operator value_type() const noexcept { return value; }
 8004e78:	b480      	push	{r7}
 8004e7a:	b083      	sub	sp, #12
 8004e7c:	af00      	add	r7, sp, #0
 8004e7e:	6078      	str	r0, [r7, #4]
 8004e80:	2300      	movs	r3, #0
 8004e82:	4618      	mov	r0, r3
 8004e84:	370c      	adds	r7, #12
 8004e86:	46bd      	mov	sp, r7
 8004e88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e8c:	4770      	bx	lr

08004e8e <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8004e8e:	b590      	push	{r4, r7, lr}
 8004e90:	b083      	sub	sp, #12
 8004e92:	af00      	add	r7, sp, #0
 8004e94:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8004e96:	6878      	ldr	r0, [r7, #4]
 8004e98:	f000 fea1 	bl	8005bde <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004e9c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8004e9e:	4619      	mov	r1, r3
 8004ea0:	4620      	mov	r0, r4
 8004ea2:	f7fc fd35 	bl	8001910 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8004ea6:	4603      	mov	r3, r0
    }
 8004ea8:	4618      	mov	r0, r3
 8004eaa:	370c      	adds	r7, #12
 8004eac:	46bd      	mov	sp, r7
 8004eae:	bd90      	pop	{r4, r7, pc}

08004eb0 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004eb0:	b5b0      	push	{r4, r5, r7, lr}
 8004eb2:	b084      	sub	sp, #16
 8004eb4:	af00      	add	r7, sp, #0
 8004eb6:	60f8      	str	r0, [r7, #12]
 8004eb8:	60b9      	str	r1, [r7, #8]
 8004eba:	713a      	strb	r2, [r7, #4]
 8004ebc:	68fb      	ldr	r3, [r7, #12]
 8004ebe:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8004ec0:	7e1b      	ldrb	r3, [r3, #24]
 8004ec2:	461c      	mov	r4, r3
 8004ec4:	1d3b      	adds	r3, r7, #4
 8004ec6:	4618      	mov	r0, r3
 8004ec8:	f000 f825 	bl	8004f16 <_ZNKSt17integral_constantIjLj1EEcvjEv>
 8004ecc:	4603      	mov	r3, r0
 8004ece:	429c      	cmp	r4, r3
 8004ed0:	bf0c      	ite	eq
 8004ed2:	2301      	moveq	r3, #1
 8004ed4:	2300      	movne	r3, #0
 8004ed6:	b2db      	uxtb	r3, r3
 8004ed8:	2b00      	cmp	r3, #0
 8004eda:	d009      	beq.n	8004ef0 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_+0x40>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8004edc:	68bb      	ldr	r3, [r7, #8]
 8004ede:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004ee0:	68fb      	ldr	r3, [r7, #12]
 8004ee2:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8004ee4:	4618      	mov	r0, r3
 8004ee6:	f000 f821 	bl	8004f2c <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8004eea:	4603      	mov	r3, r0
 8004eec:	601c      	str	r4, [r3, #0]
	    return {};
 8004eee:	e00d      	b.n	8004f0c <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_+0x5c>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004ef0:	68fb      	ldr	r3, [r7, #12]
 8004ef2:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 8004ef4:	461c      	mov	r4, r3
 8004ef6:	1d3b      	adds	r3, r7, #4
 8004ef8:	4618      	mov	r0, r3
 8004efa:	f000 f80c 	bl	8004f16 <_ZNKSt17integral_constantIjLj1EEcvjEv>
 8004efe:	4603      	mov	r3, r0
 8004f00:	b29b      	uxth	r3, r3
 8004f02:	68ba      	ldr	r2, [r7, #8]
 8004f04:	4619      	mov	r1, r3
 8004f06:	4620      	mov	r0, r4
 8004f08:	f000 fe8b 	bl	8005c22 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIfEEvtRKT_>
	    return {};
 8004f0c:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004f0e:	4618      	mov	r0, r3
 8004f10:	3710      	adds	r7, #16
 8004f12:	46bd      	mov	sp, r7
 8004f14:	bdb0      	pop	{r4, r5, r7, pc}

08004f16 <_ZNKSt17integral_constantIjLj1EEcvjEv>:
 8004f16:	b480      	push	{r7}
 8004f18:	b083      	sub	sp, #12
 8004f1a:	af00      	add	r7, sp, #0
 8004f1c:	6078      	str	r0, [r7, #4]
 8004f1e:	2301      	movs	r3, #1
 8004f20:	4618      	mov	r0, r3
 8004f22:	370c      	adds	r7, #12
 8004f24:	46bd      	mov	sp, r7
 8004f26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f2a:	4770      	bx	lr

08004f2c <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8004f2c:	b590      	push	{r4, r7, lr}
 8004f2e:	b083      	sub	sp, #12
 8004f30:	af00      	add	r7, sp, #0
 8004f32:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8004f34:	6878      	ldr	r0, [r7, #4]
 8004f36:	f000 fe52 	bl	8005bde <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004f3a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8004f3c:	4619      	mov	r1, r3
 8004f3e:	4620      	mov	r0, r4
 8004f40:	f7fe fcb4 	bl	80038ac <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004f44:	4603      	mov	r3, r0
    }
 8004f46:	4618      	mov	r0, r3
 8004f48:	370c      	adds	r7, #12
 8004f4a:	46bd      	mov	sp, r7
 8004f4c:	bd90      	pop	{r4, r7, pc}

08004f4e <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004f4e:	b5b0      	push	{r4, r5, r7, lr}
 8004f50:	b084      	sub	sp, #16
 8004f52:	af00      	add	r7, sp, #0
 8004f54:	60f8      	str	r0, [r7, #12]
 8004f56:	60b9      	str	r1, [r7, #8]
 8004f58:	713a      	strb	r2, [r7, #4]
 8004f5a:	68fb      	ldr	r3, [r7, #12]
 8004f5c:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8004f5e:	7e1b      	ldrb	r3, [r3, #24]
 8004f60:	461c      	mov	r4, r3
 8004f62:	1d3b      	adds	r3, r7, #4
 8004f64:	4618      	mov	r0, r3
 8004f66:	f000 f826 	bl	8004fb6 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8004f6a:	4603      	mov	r3, r0
 8004f6c:	429c      	cmp	r4, r3
 8004f6e:	bf0c      	ite	eq
 8004f70:	2301      	moveq	r3, #1
 8004f72:	2300      	movne	r3, #0
 8004f74:	b2db      	uxtb	r3, r3
 8004f76:	2b00      	cmp	r3, #0
 8004f78:	d00a      	beq.n	8004f90 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_+0x42>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8004f7a:	68bb      	ldr	r3, [r7, #8]
 8004f7c:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004f7e:	68fb      	ldr	r3, [r7, #12]
 8004f80:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8004f82:	4618      	mov	r0, r3
 8004f84:	f000 f822 	bl	8004fcc <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8004f88:	4603      	mov	r3, r0
 8004f8a:	4622      	mov	r2, r4
 8004f8c:	701a      	strb	r2, [r3, #0]
	    return {};
 8004f8e:	e00d      	b.n	8004fac <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_+0x5e>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004f90:	68fb      	ldr	r3, [r7, #12]
 8004f92:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 8004f94:	461c      	mov	r4, r3
 8004f96:	1d3b      	adds	r3, r7, #4
 8004f98:	4618      	mov	r0, r3
 8004f9a:	f000 f80c 	bl	8004fb6 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8004f9e:	4603      	mov	r3, r0
 8004fa0:	b29b      	uxth	r3, r3
 8004fa2:	68ba      	ldr	r2, [r7, #8]
 8004fa4:	4619      	mov	r1, r3
 8004fa6:	4620      	mov	r0, r4
 8004fa8:	f000 fe52 	bl	8005c50 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIbEEvtRKT_>
	    return {};
 8004fac:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004fae:	4618      	mov	r0, r3
 8004fb0:	3710      	adds	r7, #16
 8004fb2:	46bd      	mov	sp, r7
 8004fb4:	bdb0      	pop	{r4, r5, r7, pc}

08004fb6 <_ZNKSt17integral_constantIjLj2EEcvjEv>:
 8004fb6:	b480      	push	{r7}
 8004fb8:	b083      	sub	sp, #12
 8004fba:	af00      	add	r7, sp, #0
 8004fbc:	6078      	str	r0, [r7, #4]
 8004fbe:	2302      	movs	r3, #2
 8004fc0:	4618      	mov	r0, r3
 8004fc2:	370c      	adds	r7, #12
 8004fc4:	46bd      	mov	sp, r7
 8004fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fca:	4770      	bx	lr

08004fcc <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8004fcc:	b590      	push	{r4, r7, lr}
 8004fce:	b083      	sub	sp, #12
 8004fd0:	af00      	add	r7, sp, #0
 8004fd2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8004fd4:	6878      	ldr	r0, [r7, #4]
 8004fd6:	f000 fe02 	bl	8005bde <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004fda:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8004fdc:	4619      	mov	r1, r3
 8004fde:	4620      	mov	r0, r4
 8004fe0:	f7fc faca 	bl	8001578 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004fe4:	4603      	mov	r3, r0
    }
 8004fe6:	4618      	mov	r0, r3
 8004fe8:	370c      	adds	r7, #12
 8004fea:	46bd      	mov	sp, r7
 8004fec:	bd90      	pop	{r4, r7, pc}

08004fee <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() const noexcept
 8004fee:	b480      	push	{r7}
 8004ff0:	b083      	sub	sp, #12
 8004ff2:	af00      	add	r7, sp, #0
 8004ff4:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8004ff6:	687b      	ldr	r3, [r7, #4]
 8004ff8:	4618      	mov	r0, r3
 8004ffa:	370c      	adds	r7, #12
 8004ffc:	46bd      	mov	sp, r7
 8004ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005002:	4770      	bx	lr

08005004 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005004:	b5b0      	push	{r4, r5, r7, lr}
 8005006:	b08c      	sub	sp, #48	; 0x30
 8005008:	af00      	add	r7, sp, #0
 800500a:	60f8      	str	r0, [r7, #12]
 800500c:	60b9      	str	r1, [r7, #8]
 800500e:	713a      	strb	r2, [r7, #4]
 8005010:	68fb      	ldr	r3, [r7, #12]
 8005012:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8005014:	7e1b      	ldrb	r3, [r3, #24]
 8005016:	461c      	mov	r4, r3
 8005018:	1d3b      	adds	r3, r7, #4
 800501a:	4618      	mov	r0, r3
 800501c:	f000 f82f 	bl	800507e <_ZNKSt17integral_constantIjLj3EEcvjEv>
 8005020:	4603      	mov	r3, r0
 8005022:	429c      	cmp	r4, r3
 8005024:	bf0c      	ite	eq
 8005026:	2301      	moveq	r3, #1
 8005028:	2300      	movne	r3, #0
 800502a:	b2db      	uxtb	r3, r3
 800502c:	2b00      	cmp	r3, #0
 800502e:	d00a      	beq.n	8005046 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_+0x42>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005030:	68fb      	ldr	r3, [r7, #12]
 8005032:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8005034:	4618      	mov	r0, r3
 8005036:	f000 f82d 	bl	8005094 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 800503a:	4603      	mov	r3, r0
 800503c:	68b9      	ldr	r1, [r7, #8]
 800503e:	4618      	mov	r0, r3
 8005040:	f01d fcd5 	bl	80229ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	    return {};
 8005044:	e016      	b.n	8005074 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_+0x70>
			= variant<_Types...>(__rhs_mem);
 8005046:	f107 0314 	add.w	r3, r7, #20
 800504a:	68b9      	ldr	r1, [r7, #8]
 800504c:	4618      	mov	r0, r3
 800504e:	f000 fe2f 	bl	8005cb0 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS5_vvS5_vEEOT_>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005052:	68fb      	ldr	r3, [r7, #12]
 8005054:	681b      	ldr	r3, [r3, #0]
		      __variant_cast<_Types...>(*this)
 8005056:	4618      	mov	r0, r3
 8005058:	f000 f82d 	bl	80050b6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 800505c:	4602      	mov	r2, r0
			= variant<_Types...>(__rhs_mem);
 800505e:	f107 0314 	add.w	r3, r7, #20
 8005062:	4619      	mov	r1, r3
 8005064:	4610      	mov	r0, r2
 8005066:	f000 f841 	bl	80050ec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 800506a:	f107 0314 	add.w	r3, r7, #20
 800506e:	4618      	mov	r0, r3
 8005070:	f7fc fa25 	bl	80014be <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
	    return {};
 8005074:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005076:	4618      	mov	r0, r3
 8005078:	3730      	adds	r7, #48	; 0x30
 800507a:	46bd      	mov	sp, r7
 800507c:	bdb0      	pop	{r4, r5, r7, pc}

0800507e <_ZNKSt17integral_constantIjLj3EEcvjEv>:
 800507e:	b480      	push	{r7}
 8005080:	b083      	sub	sp, #12
 8005082:	af00      	add	r7, sp, #0
 8005084:	6078      	str	r0, [r7, #4]
 8005086:	2303      	movs	r3, #3
 8005088:	4618      	mov	r0, r3
 800508a:	370c      	adds	r7, #12
 800508c:	46bd      	mov	sp, r7
 800508e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005092:	4770      	bx	lr

08005094 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8005094:	b590      	push	{r4, r7, lr}
 8005096:	b083      	sub	sp, #12
 8005098:	af00      	add	r7, sp, #0
 800509a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800509c:	6878      	ldr	r0, [r7, #4]
 800509e:	f000 fd9e 	bl	8005bde <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80050a2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80050a4:	4619      	mov	r1, r3
 80050a6:	4620      	mov	r0, r4
 80050a8:	f7fe fd04 	bl	8003ab4 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80050ac:	4603      	mov	r3, r0
    }
 80050ae:	4618      	mov	r0, r3
 80050b0:	370c      	adds	r7, #12
 80050b2:	46bd      	mov	sp, r7
 80050b4:	bd90      	pop	{r4, r7, pc}

080050b6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 80050b6:	b480      	push	{r7}
 80050b8:	b083      	sub	sp, #12
 80050ba:	af00      	add	r7, sp, #0
 80050bc:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 80050be:	687b      	ldr	r3, [r7, #4]
    }
 80050c0:	4618      	mov	r0, r3
 80050c2:	370c      	adds	r7, #12
 80050c4:	46bd      	mov	sp, r7
 80050c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050ca:	4770      	bx	lr

080050cc <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 80050cc:	b580      	push	{r7, lr}
 80050ce:	b082      	sub	sp, #8
 80050d0:	af00      	add	r7, sp, #0
 80050d2:	6078      	str	r0, [r7, #4]
 80050d4:	6039      	str	r1, [r7, #0]
 80050d6:	687b      	ldr	r3, [r7, #4]
 80050d8:	683a      	ldr	r2, [r7, #0]
 80050da:	4611      	mov	r1, r2
 80050dc:	4618      	mov	r0, r3
 80050de:	f000 fff5 	bl	80060cc <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	4618      	mov	r0, r3
 80050e6:	3708      	adds	r7, #8
 80050e8:	46bd      	mov	sp, r7
 80050ea:	bd80      	pop	{r7, pc}

080050ec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>:
    class variant
 80050ec:	b580      	push	{r7, lr}
 80050ee:	b082      	sub	sp, #8
 80050f0:	af00      	add	r7, sp, #0
 80050f2:	6078      	str	r0, [r7, #4]
 80050f4:	6039      	str	r1, [r7, #0]
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	683a      	ldr	r2, [r7, #0]
 80050fa:	4611      	mov	r1, r2
 80050fc:	4618      	mov	r0, r3
 80050fe:	f7ff ffe5 	bl	80050cc <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	4618      	mov	r0, r3
 8005106:	3708      	adds	r7, #8
 8005108:	46bd      	mov	sp, r7
 800510a:	bd80      	pop	{r7, pc}

0800510c <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>:
      _M_addr() const noexcept
 800510c:	b480      	push	{r7}
 800510e:	b083      	sub	sp, #12
 8005110:	af00      	add	r7, sp, #0
 8005112:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	4618      	mov	r0, r3
 8005118:	370c      	adds	r7, #12
 800511a:	46bd      	mov	sp, r7
 800511c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005120:	4770      	bx	lr

08005122 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005122:	b5b0      	push	{r4, r5, r7, lr}
 8005124:	b08c      	sub	sp, #48	; 0x30
 8005126:	af00      	add	r7, sp, #0
 8005128:	60f8      	str	r0, [r7, #12]
 800512a:	60b9      	str	r1, [r7, #8]
 800512c:	713a      	strb	r2, [r7, #4]
 800512e:	68fb      	ldr	r3, [r7, #12]
 8005130:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8005132:	7e1b      	ldrb	r3, [r3, #24]
 8005134:	461c      	mov	r4, r3
 8005136:	1d3b      	adds	r3, r7, #4
 8005138:	4618      	mov	r0, r3
 800513a:	f000 f82f 	bl	800519c <_ZNKSt17integral_constantIjLj4EEcvjEv>
 800513e:	4603      	mov	r3, r0
 8005140:	429c      	cmp	r4, r3
 8005142:	bf0c      	ite	eq
 8005144:	2301      	moveq	r3, #1
 8005146:	2300      	movne	r3, #0
 8005148:	b2db      	uxtb	r3, r3
 800514a:	2b00      	cmp	r3, #0
 800514c:	d00a      	beq.n	8005164 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_+0x42>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800514e:	68fb      	ldr	r3, [r7, #12]
 8005150:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8005152:	4618      	mov	r0, r3
 8005154:	f000 f82d 	bl	80051b2 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8005158:	4603      	mov	r3, r0
 800515a:	68b9      	ldr	r1, [r7, #8]
 800515c:	4618      	mov	r0, r3
 800515e:	f000 ffd3 	bl	8006108 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_>
	    return {};
 8005162:	e016      	b.n	8005192 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_+0x70>
			= variant<_Types...>(__rhs_mem);
 8005164:	f107 0314 	add.w	r3, r7, #20
 8005168:	68b9      	ldr	r1, [r7, #8]
 800516a:	4618      	mov	r0, r3
 800516c:	f001 f8da 	bl	8006324 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS9_vvS9_vEEOT_>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005170:	68fb      	ldr	r3, [r7, #12]
 8005172:	681b      	ldr	r3, [r3, #0]
		      __variant_cast<_Types...>(*this)
 8005174:	4618      	mov	r0, r3
 8005176:	f7ff ff9e 	bl	80050b6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 800517a:	4602      	mov	r2, r0
			= variant<_Types...>(__rhs_mem);
 800517c:	f107 0314 	add.w	r3, r7, #20
 8005180:	4619      	mov	r1, r3
 8005182:	4610      	mov	r0, r2
 8005184:	f7ff ffb2 	bl	80050ec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 8005188:	f107 0314 	add.w	r3, r7, #20
 800518c:	4618      	mov	r0, r3
 800518e:	f7fc f996 	bl	80014be <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
	    return {};
 8005192:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005194:	4618      	mov	r0, r3
 8005196:	3730      	adds	r7, #48	; 0x30
 8005198:	46bd      	mov	sp, r7
 800519a:	bdb0      	pop	{r4, r5, r7, pc}

0800519c <_ZNKSt17integral_constantIjLj4EEcvjEv>:
 800519c:	b480      	push	{r7}
 800519e:	b083      	sub	sp, #12
 80051a0:	af00      	add	r7, sp, #0
 80051a2:	6078      	str	r0, [r7, #4]
 80051a4:	2304      	movs	r3, #4
 80051a6:	4618      	mov	r0, r3
 80051a8:	370c      	adds	r7, #12
 80051aa:	46bd      	mov	sp, r7
 80051ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051b0:	4770      	bx	lr

080051b2 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80051b2:	b590      	push	{r4, r7, lr}
 80051b4:	b083      	sub	sp, #12
 80051b6:	af00      	add	r7, sp, #0
 80051b8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80051ba:	6878      	ldr	r0, [r7, #4]
 80051bc:	f000 fd0f 	bl	8005bde <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80051c0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80051c2:	4619      	mov	r1, r3
 80051c4:	4620      	mov	r0, r4
 80051c6:	f7fe fd35 	bl	8003c34 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80051ca:	4603      	mov	r3, r0
    }
 80051cc:	4618      	mov	r0, r3
 80051ce:	370c      	adds	r7, #12
 80051d0:	46bd      	mov	sp, r7
 80051d2:	bd90      	pop	{r4, r7, pc}

080051d4 <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_>:


  // For use in string and vstring.
  template<typename _Type>
    inline bool
    __is_null_pointer(_Type* __ptr)
 80051d4:	b480      	push	{r7}
 80051d6:	b083      	sub	sp, #12
 80051d8:	af00      	add	r7, sp, #0
 80051da:	6078      	str	r0, [r7, #4]
    { return __ptr == 0; }
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	2b00      	cmp	r3, #0
 80051e0:	bf0c      	ite	eq
 80051e2:	2301      	moveq	r3, #1
 80051e4:	2300      	movne	r3, #0
 80051e6:	b2db      	uxtb	r3, r3
 80051e8:	4618      	mov	r0, r3
 80051ea:	370c      	adds	r7, #12
 80051ec:	46bd      	mov	sp, r7
 80051ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051f2:	4770      	bx	lr

080051f4 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
 80051f4:	b480      	push	{r7}
 80051f6:	b083      	sub	sp, #12
 80051f8:	af00      	add	r7, sp, #0
 80051fa:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 80051fc:	4618      	mov	r0, r3
 80051fe:	370c      	adds	r7, #12
 8005200:	46bd      	mov	sp, r7
 8005202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005206:	4770      	bx	lr

08005208 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 8005208:	b480      	push	{r7}
 800520a:	b085      	sub	sp, #20
 800520c:	af00      	add	r7, sp, #0
 800520e:	60f8      	str	r0, [r7, #12]
 8005210:	60b9      	str	r1, [r7, #8]
 8005212:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 8005214:	68ba      	ldr	r2, [r7, #8]
 8005216:	68fb      	ldr	r3, [r7, #12]
 8005218:	1ad3      	subs	r3, r2, r3
    }
 800521a:	4618      	mov	r0, r3
 800521c:	3714      	adds	r7, #20
 800521e:	46bd      	mov	sp, r7
 8005220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005224:	4770      	bx	lr

08005226 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS7_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 8005226:	b480      	push	{r7}
 8005228:	b083      	sub	sp, #12
 800522a:	af00      	add	r7, sp, #0
 800522c:	6078      	str	r0, [r7, #4]
 800522e:	6039      	str	r1, [r7, #0]
 8005230:	687b      	ldr	r3, [r7, #4]
 8005232:	4618      	mov	r0, r3
 8005234:	370c      	adds	r7, #12
 8005236:	46bd      	mov	sp, r7
 8005238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800523c:	4770      	bx	lr

0800523e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800523e:	b590      	push	{r4, r7, lr}
 8005240:	b083      	sub	sp, #12
 8005242:	af00      	add	r7, sp, #0
 8005244:	6078      	str	r0, [r7, #4]
 8005246:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8005248:	6878      	ldr	r0, [r7, #4]
 800524a:	f001 f87e 	bl	800634a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 800524e:	4604      	mov	r4, r0
 8005250:	6838      	ldr	r0, [r7, #0]
 8005252:	f001 f885 	bl	8006360 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 8005256:	4603      	mov	r3, r0
 8005258:	4619      	mov	r1, r3
 800525a:	4620      	mov	r0, r4
 800525c:	f001 f88e 	bl	800637c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE7destroyIS4_EEvRS6_PT_>
      }
 8005260:	bf00      	nop
 8005262:	370c      	adds	r7, #12
 8005264:	46bd      	mov	sp, r7
 8005266:	bd90      	pop	{r4, r7, pc}

08005268 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8005268:	b580      	push	{r7, lr}
 800526a:	b082      	sub	sp, #8
 800526c:	af00      	add	r7, sp, #0
 800526e:	6078      	str	r0, [r7, #4]
 8005270:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8005272:	6878      	ldr	r0, [r7, #4]
 8005274:	f001 f869 	bl	800634a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8005278:	4603      	mov	r3, r0
 800527a:	2201      	movs	r2, #1
 800527c:	6839      	ldr	r1, [r7, #0]
 800527e:	4618      	mov	r0, r3
 8005280:	f001 f889 	bl	8006396 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE10deallocateERS6_PS5_j>
 8005284:	bf00      	nop
 8005286:	3708      	adds	r7, #8
 8005288:	46bd      	mov	sp, r7
 800528a:	bd80      	pop	{r7, pc}

0800528c <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 800528c:	b580      	push	{r7, lr}
 800528e:	b084      	sub	sp, #16
 8005290:	af00      	add	r7, sp, #0
 8005292:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8005294:	687b      	ldr	r3, [r7, #4]
 8005296:	681a      	ldr	r2, [r3, #0]
 8005298:	f107 030c 	add.w	r3, r7, #12
 800529c:	4611      	mov	r1, r2
 800529e:	4618      	mov	r0, r3
 80052a0:	f7fe ff76 	bl	8004190 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 80052a4:	68fb      	ldr	r3, [r7, #12]
 80052a6:	4618      	mov	r0, r3
 80052a8:	3710      	adds	r7, #16
 80052aa:	46bd      	mov	sp, r7
 80052ac:	bd80      	pop	{r7, pc}

080052ae <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 80052ae:	b480      	push	{r7}
 80052b0:	b083      	sub	sp, #12
 80052b2:	af00      	add	r7, sp, #0
 80052b4:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 80052b6:	687b      	ldr	r3, [r7, #4]
 80052b8:	3304      	adds	r3, #4
 80052ba:	4618      	mov	r0, r3
 80052bc:	370c      	adds	r7, #12
 80052be:	46bd      	mov	sp, r7
 80052c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052c4:	4770      	bx	lr

080052c6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 80052c6:	b480      	push	{r7}
 80052c8:	b083      	sub	sp, #12
 80052ca:	af00      	add	r7, sp, #0
 80052cc:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 80052ce:	687b      	ldr	r3, [r7, #4]
 80052d0:	695b      	ldr	r3, [r3, #20]
 80052d2:	4618      	mov	r0, r3
 80052d4:	370c      	adds	r7, #12
 80052d6:	46bd      	mov	sp, r7
 80052d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052dc:	4770      	bx	lr

080052de <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 80052de:	b480      	push	{r7}
 80052e0:	b083      	sub	sp, #12
 80052e2:	af00      	add	r7, sp, #0
 80052e4:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 80052e6:	687b      	ldr	r3, [r7, #4]
 80052e8:	3310      	adds	r3, #16
 80052ea:	4618      	mov	r0, r3
 80052ec:	370c      	adds	r7, #12
 80052ee:	46bd      	mov	sp, r7
 80052f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052f4:	4770      	bx	lr

080052f6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 80052f6:	b580      	push	{r7, lr}
 80052f8:	b082      	sub	sp, #8
 80052fa:	af00      	add	r7, sp, #0
 80052fc:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 80052fe:	6878      	ldr	r0, [r7, #4]
 8005300:	f001 f858 	bl	80063b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8005304:	4603      	mov	r3, r0
 8005306:	4618      	mov	r0, r3
 8005308:	3708      	adds	r7, #8
 800530a:	46bd      	mov	sp, r7
 800530c:	bd80      	pop	{r7, pc}

0800530e <_ZNKSt4lessIcEclERKcS2_>:
      operator()(const _Tp& __x, const _Tp& __y) const
 800530e:	b480      	push	{r7}
 8005310:	b085      	sub	sp, #20
 8005312:	af00      	add	r7, sp, #0
 8005314:	60f8      	str	r0, [r7, #12]
 8005316:	60b9      	str	r1, [r7, #8]
 8005318:	607a      	str	r2, [r7, #4]
      { return __x < __y; }
 800531a:	68bb      	ldr	r3, [r7, #8]
 800531c:	781a      	ldrb	r2, [r3, #0]
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	781b      	ldrb	r3, [r3, #0]
 8005322:	429a      	cmp	r2, r3
 8005324:	bf34      	ite	cc
 8005326:	2301      	movcc	r3, #1
 8005328:	2300      	movcs	r3, #0
 800532a:	b2db      	uxtb	r3, r3
 800532c:	4618      	mov	r0, r3
 800532e:	3714      	adds	r7, #20
 8005330:	46bd      	mov	sp, r7
 8005332:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005336:	4770      	bx	lr

08005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>:
       constexpr pair(const _T1& __x, _U2&& __y)
 8005338:	b580      	push	{r7, lr}
 800533a:	b084      	sub	sp, #16
 800533c:	af00      	add	r7, sp, #0
 800533e:	60f8      	str	r0, [r7, #12]
 8005340:	60b9      	str	r1, [r7, #8]
 8005342:	607a      	str	r2, [r7, #4]
       : first(__x), second(std::forward<_U2>(__y)) { }
 8005344:	68bb      	ldr	r3, [r7, #8]
 8005346:	681a      	ldr	r2, [r3, #0]
 8005348:	68fb      	ldr	r3, [r7, #12]
 800534a:	601a      	str	r2, [r3, #0]
 800534c:	6878      	ldr	r0, [r7, #4]
 800534e:	f001 f844 	bl	80063da <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8005352:	4603      	mov	r3, r0
 8005354:	681a      	ldr	r2, [r3, #0]
 8005356:	68fb      	ldr	r3, [r7, #12]
 8005358:	605a      	str	r2, [r3, #4]
 800535a:	68fb      	ldr	r3, [r7, #12]
 800535c:	4618      	mov	r0, r3
 800535e:	3710      	adds	r7, #16
 8005360:	46bd      	mov	sp, r7
 8005362:	bd80      	pop	{r7, pc}

08005364 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8005364:	b590      	push	{r4, r7, lr}
 8005366:	b08b      	sub	sp, #44	; 0x2c
 8005368:	af00      	add	r7, sp, #0
 800536a:	60f8      	str	r0, [r7, #12]
 800536c:	60b9      	str	r1, [r7, #8]
 800536e:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8005370:	68b8      	ldr	r0, [r7, #8]
 8005372:	f7fd ff7d 	bl	8003270 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8005376:	4603      	mov	r3, r0
 8005378:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 800537a:	68b8      	ldr	r0, [r7, #8]
 800537c:	f7ff ff97 	bl	80052ae <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8005380:	4603      	mov	r3, r0
 8005382:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8005384:	2301      	movs	r3, #1
 8005386:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 800538a:	69bb      	ldr	r3, [r7, #24]
 800538c:	2b00      	cmp	r3, #0
 800538e:	d020      	beq.n	80053d2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6e>
	  __y = __x;
 8005390:	69bb      	ldr	r3, [r7, #24]
 8005392:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8005394:	68bc      	ldr	r4, [r7, #8]
 8005396:	69bb      	ldr	r3, [r7, #24]
 8005398:	4618      	mov	r0, r3
 800539a:	f001 f80b 	bl	80063b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 800539e:	4603      	mov	r3, r0
 80053a0:	461a      	mov	r2, r3
 80053a2:	6879      	ldr	r1, [r7, #4]
 80053a4:	4620      	mov	r0, r4
 80053a6:	f7ff ffb2 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 80053aa:	4603      	mov	r3, r0
 80053ac:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 80053b0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80053b4:	2b00      	cmp	r3, #0
 80053b6:	d005      	beq.n	80053c4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x60>
 80053b8:	69bb      	ldr	r3, [r7, #24]
 80053ba:	4618      	mov	r0, r3
 80053bc:	f7fe fecb 	bl	8004156 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 80053c0:	4603      	mov	r3, r0
 80053c2:	e004      	b.n	80053ce <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6a>
 80053c4:	69bb      	ldr	r3, [r7, #24]
 80053c6:	4618      	mov	r0, r3
 80053c8:	f7fe feb9 	bl	800413e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 80053cc:	4603      	mov	r3, r0
 80053ce:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 80053d0:	e7db      	b.n	800538a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x26>
      iterator __j = iterator(__y);
 80053d2:	697a      	ldr	r2, [r7, #20]
 80053d4:	f107 0310 	add.w	r3, r7, #16
 80053d8:	4611      	mov	r1, r2
 80053da:	4618      	mov	r0, r3
 80053dc:	f7fe fed8 	bl	8004190 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 80053e0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80053e4:	2b00      	cmp	r3, #0
 80053e6:	d01d      	beq.n	8005424 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xc0>
	  if (__j == begin())
 80053e8:	68b8      	ldr	r0, [r7, #8]
 80053ea:	f001 f801 	bl	80063f0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>
 80053ee:	4603      	mov	r3, r0
 80053f0:	61fb      	str	r3, [r7, #28]
 80053f2:	f107 021c 	add.w	r2, r7, #28
 80053f6:	f107 0310 	add.w	r3, r7, #16
 80053fa:	4611      	mov	r1, r2
 80053fc:	4618      	mov	r0, r3
 80053fe:	f001 f808 	bl	8006412 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc10token_typeEES6_>
 8005402:	4603      	mov	r3, r0
 8005404:	2b00      	cmp	r3, #0
 8005406:	d008      	beq.n	800541a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xb6>
	    return _Res(__x, __y);
 8005408:	f107 0214 	add.w	r2, r7, #20
 800540c:	f107 0318 	add.w	r3, r7, #24
 8005410:	4619      	mov	r1, r3
 8005412:	68f8      	ldr	r0, [r7, #12]
 8005414:	f001 f811 	bl	800643a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>
 8005418:	e025      	b.n	8005466 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
	    --__j;
 800541a:	f107 0310 	add.w	r3, r7, #16
 800541e:	4618      	mov	r0, r3
 8005420:	f000 f84a 	bl	80054b8 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8005424:	68bc      	ldr	r4, [r7, #8]
 8005426:	693b      	ldr	r3, [r7, #16]
 8005428:	4618      	mov	r0, r3
 800542a:	f7ff ff64 	bl	80052f6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800542e:	4603      	mov	r3, r0
 8005430:	687a      	ldr	r2, [r7, #4]
 8005432:	4619      	mov	r1, r3
 8005434:	4620      	mov	r0, r4
 8005436:	f7ff ff6a 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 800543a:	4603      	mov	r3, r0
 800543c:	2b00      	cmp	r3, #0
 800543e:	d008      	beq.n	8005452 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xee>
	return _Res(__x, __y);
 8005440:	f107 0214 	add.w	r2, r7, #20
 8005444:	f107 0318 	add.w	r3, r7, #24
 8005448:	4619      	mov	r1, r3
 800544a:	68f8      	ldr	r0, [r7, #12]
 800544c:	f000 fff5 	bl	800643a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>
 8005450:	e009      	b.n	8005466 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
      return _Res(__j._M_node, 0);
 8005452:	2300      	movs	r3, #0
 8005454:	623b      	str	r3, [r7, #32]
 8005456:	f107 0220 	add.w	r2, r7, #32
 800545a:	f107 0310 	add.w	r3, r7, #16
 800545e:	4619      	mov	r1, r3
 8005460:	68f8      	ldr	r0, [r7, #12]
 8005462:	f000 f84b 	bl	80054fc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8005466:	68f8      	ldr	r0, [r7, #12]
 8005468:	372c      	adds	r7, #44	; 0x2c
 800546a:	46bd      	mov	sp, r7
 800546c:	bd90      	pop	{r4, r7, pc}

0800546e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 800546e:	b480      	push	{r7}
 8005470:	b083      	sub	sp, #12
 8005472:	af00      	add	r7, sp, #0
 8005474:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	330c      	adds	r3, #12
 800547a:	4618      	mov	r0, r3
 800547c:	370c      	adds	r7, #12
 800547e:	46bd      	mov	sp, r7
 8005480:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005484:	4770      	bx	lr

08005486 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8005486:	b580      	push	{r7, lr}
 8005488:	b084      	sub	sp, #16
 800548a:	af00      	add	r7, sp, #0
 800548c:	60f8      	str	r0, [r7, #12]
 800548e:	60b9      	str	r1, [r7, #8]
 8005490:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8005492:	68b8      	ldr	r0, [r7, #8]
 8005494:	f000 ffa1 	bl	80063da <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8005498:	4603      	mov	r3, r0
 800549a:	681a      	ldr	r2, [r3, #0]
 800549c:	68fb      	ldr	r3, [r7, #12]
 800549e:	601a      	str	r2, [r3, #0]
 80054a0:	6878      	ldr	r0, [r7, #4]
 80054a2:	f000 ff9a 	bl	80063da <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 80054a6:	4603      	mov	r3, r0
 80054a8:	681a      	ldr	r2, [r3, #0]
 80054aa:	68fb      	ldr	r3, [r7, #12]
 80054ac:	605a      	str	r2, [r3, #4]
 80054ae:	68fb      	ldr	r3, [r7, #12]
 80054b0:	4618      	mov	r0, r3
 80054b2:	3710      	adds	r7, #16
 80054b4:	46bd      	mov	sp, r7
 80054b6:	bd80      	pop	{r7, pc}

080054b8 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 80054b8:	b580      	push	{r7, lr}
 80054ba:	b082      	sub	sp, #8
 80054bc:	af00      	add	r7, sp, #0
 80054be:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 80054c0:	687b      	ldr	r3, [r7, #4]
 80054c2:	681b      	ldr	r3, [r3, #0]
 80054c4:	4618      	mov	r0, r3
 80054c6:	f01d f851 	bl	802256c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 80054ca:	4602      	mov	r2, r0
 80054cc:	687b      	ldr	r3, [r7, #4]
 80054ce:	601a      	str	r2, [r3, #0]
	return *this;
 80054d0:	687b      	ldr	r3, [r7, #4]
      }
 80054d2:	4618      	mov	r0, r3
 80054d4:	3708      	adds	r7, #8
 80054d6:	46bd      	mov	sp, r7
 80054d8:	bd80      	pop	{r7, pc}

080054da <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 80054da:	b580      	push	{r7, lr}
 80054dc:	b082      	sub	sp, #8
 80054de:	af00      	add	r7, sp, #0
 80054e0:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 80054e2:	687b      	ldr	r3, [r7, #4]
 80054e4:	681b      	ldr	r3, [r3, #0]
 80054e6:	4618      	mov	r0, r3
 80054e8:	f01d f82d 	bl	8022546 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 80054ec:	4602      	mov	r2, r0
 80054ee:	687b      	ldr	r3, [r7, #4]
 80054f0:	601a      	str	r2, [r3, #0]
	return *this;
 80054f2:	687b      	ldr	r3, [r7, #4]
      }
 80054f4:	4618      	mov	r0, r3
 80054f6:	3708      	adds	r7, #8
 80054f8:	46bd      	mov	sp, r7
 80054fa:	bd80      	pop	{r7, pc}

080054fc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 80054fc:	b580      	push	{r7, lr}
 80054fe:	b084      	sub	sp, #16
 8005500:	af00      	add	r7, sp, #0
 8005502:	60f8      	str	r0, [r7, #12]
 8005504:	60b9      	str	r1, [r7, #8]
 8005506:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 8005508:	68b8      	ldr	r0, [r7, #8]
 800550a:	f000 ff66 	bl	80063da <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 800550e:	4603      	mov	r3, r0
 8005510:	681a      	ldr	r2, [r3, #0]
 8005512:	68fb      	ldr	r3, [r7, #12]
 8005514:	601a      	str	r2, [r3, #0]
 8005516:	687b      	ldr	r3, [r7, #4]
 8005518:	681a      	ldr	r2, [r3, #0]
 800551a:	68fb      	ldr	r3, [r7, #12]
 800551c:	605a      	str	r2, [r3, #4]
 800551e:	68fb      	ldr	r3, [r7, #12]
 8005520:	4618      	mov	r0, r3
 8005522:	3710      	adds	r7, #16
 8005524:	46bd      	mov	sp, r7
 8005526:	bd80      	pop	{r7, pc}

08005528 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>:
	  operator()(_Arg&& __arg) const
 8005528:	b590      	push	{r4, r7, lr}
 800552a:	b083      	sub	sp, #12
 800552c:	af00      	add	r7, sp, #0
 800552e:	6078      	str	r0, [r7, #4]
 8005530:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8005532:	687b      	ldr	r3, [r7, #4]
 8005534:	681c      	ldr	r4, [r3, #0]
 8005536:	6838      	ldr	r0, [r7, #0]
 8005538:	f7fe ff68 	bl	800440c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 800553c:	4603      	mov	r3, r0
 800553e:	4619      	mov	r1, r3
 8005540:	4620      	mov	r0, r4
 8005542:	f000 ff93 	bl	800646c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>
 8005546:	4603      	mov	r3, r0
 8005548:	4618      	mov	r0, r3
 800554a:	370c      	adds	r7, #12
 800554c:	46bd      	mov	sp, r7
 800554e:	bd90      	pop	{r4, r7, pc}

08005550 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSD_>:
 8005550:	b480      	push	{r7}
 8005552:	b083      	sub	sp, #12
 8005554:	af00      	add	r7, sp, #0
 8005556:	6078      	str	r0, [r7, #4]
 8005558:	6039      	str	r1, [r7, #0]
 800555a:	687b      	ldr	r3, [r7, #4]
 800555c:	4618      	mov	r0, r3
 800555e:	370c      	adds	r7, #12
 8005560:	46bd      	mov	sp, r7
 8005562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005566:	4770      	bx	lr

08005568 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8005568:	b590      	push	{r4, r7, lr}
 800556a:	b083      	sub	sp, #12
 800556c:	af00      	add	r7, sp, #0
 800556e:	6078      	str	r0, [r7, #4]
 8005570:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8005572:	6878      	ldr	r0, [r7, #4]
 8005574:	f000 ff91 	bl	800649a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8005578:	4604      	mov	r4, r0
 800557a:	6838      	ldr	r0, [r7, #0]
 800557c:	f000 ff98 	bl	80064b0 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8005580:	4603      	mov	r3, r0
 8005582:	4619      	mov	r1, r3
 8005584:	4620      	mov	r0, r4
 8005586:	f000 ffa1 	bl	80064cc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE7destroyISA_EEvRSC_PT_>
      }
 800558a:	bf00      	nop
 800558c:	370c      	adds	r7, #12
 800558e:	46bd      	mov	sp, r7
 8005590:	bd90      	pop	{r4, r7, pc}

08005592 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8005592:	b580      	push	{r7, lr}
 8005594:	b082      	sub	sp, #8
 8005596:	af00      	add	r7, sp, #0
 8005598:	6078      	str	r0, [r7, #4]
 800559a:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 800559c:	6878      	ldr	r0, [r7, #4]
 800559e:	f000 ff7c 	bl	800649a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 80055a2:	4603      	mov	r3, r0
 80055a4:	2201      	movs	r2, #1
 80055a6:	6839      	ldr	r1, [r7, #0]
 80055a8:	4618      	mov	r0, r3
 80055aa:	f000 ff9c 	bl	80064e6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE10deallocateERSC_PSB_j>
 80055ae:	bf00      	nop
 80055b0:	3708      	adds	r7, #8
 80055b2:	46bd      	mov	sp, r7
 80055b4:	bd80      	pop	{r7, pc}

080055b6 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 80055b6:	b580      	push	{r7, lr}
 80055b8:	b084      	sub	sp, #16
 80055ba:	af00      	add	r7, sp, #0
 80055bc:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 80055be:	687b      	ldr	r3, [r7, #4]
 80055c0:	681a      	ldr	r2, [r3, #0]
 80055c2:	f107 030c 	add.w	r3, r7, #12
 80055c6:	4611      	mov	r1, r2
 80055c8:	4618      	mov	r0, r3
 80055ca:	f7fe ffd7 	bl	800457c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 80055ce:	68fb      	ldr	r3, [r7, #12]
 80055d0:	4618      	mov	r0, r3
 80055d2:	3710      	adds	r7, #16
 80055d4:	46bd      	mov	sp, r7
 80055d6:	bd80      	pop	{r7, pc}

080055d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 80055d8:	b480      	push	{r7}
 80055da:	b083      	sub	sp, #12
 80055dc:	af00      	add	r7, sp, #0
 80055de:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	3304      	adds	r3, #4
 80055e4:	4618      	mov	r0, r3
 80055e6:	370c      	adds	r7, #12
 80055e8:	46bd      	mov	sp, r7
 80055ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055ee:	4770      	bx	lr

080055f0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 80055f0:	b480      	push	{r7}
 80055f2:	b083      	sub	sp, #12
 80055f4:	af00      	add	r7, sp, #0
 80055f6:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 80055f8:	687b      	ldr	r3, [r7, #4]
 80055fa:	695b      	ldr	r3, [r3, #20]
 80055fc:	4618      	mov	r0, r3
 80055fe:	370c      	adds	r7, #12
 8005600:	46bd      	mov	sp, r7
 8005602:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005606:	4770      	bx	lr

08005608 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8005608:	b480      	push	{r7}
 800560a:	b083      	sub	sp, #12
 800560c:	af00      	add	r7, sp, #0
 800560e:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8005610:	687b      	ldr	r3, [r7, #4]
 8005612:	3310      	adds	r3, #16
 8005614:	4618      	mov	r0, r3
 8005616:	370c      	adds	r7, #12
 8005618:	46bd      	mov	sp, r7
 800561a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800561e:	4770      	bx	lr

08005620 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8005620:	b580      	push	{r7, lr}
 8005622:	b082      	sub	sp, #8
 8005624:	af00      	add	r7, sp, #0
 8005626:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8005628:	6878      	ldr	r0, [r7, #4]
 800562a:	f000 ff6b 	bl	8006504 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 800562e:	4603      	mov	r3, r0
 8005630:	4618      	mov	r0, r3
 8005632:	3708      	adds	r7, #8
 8005634:	46bd      	mov	sp, r7
 8005636:	bd80      	pop	{r7, pc}

08005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
      operator()(const _Tp& __x, const _Tp& __y) const
 8005638:	b580      	push	{r7, lr}
 800563a:	b084      	sub	sp, #16
 800563c:	af00      	add	r7, sp, #0
 800563e:	60f8      	str	r0, [r7, #12]
 8005640:	60b9      	str	r1, [r7, #8]
 8005642:	607a      	str	r2, [r7, #4]
      { return __x < __y; }
 8005644:	6879      	ldr	r1, [r7, #4]
 8005646:	68b8      	ldr	r0, [r7, #8]
 8005648:	f000 ff6f 	bl	800652a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
 800564c:	4603      	mov	r3, r0
 800564e:	4618      	mov	r0, r3
 8005650:	3710      	adds	r7, #16
 8005652:	46bd      	mov	sp, r7
 8005654:	bd80      	pop	{r7, pc}

08005656 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8005656:	b590      	push	{r4, r7, lr}
 8005658:	b08b      	sub	sp, #44	; 0x2c
 800565a:	af00      	add	r7, sp, #0
 800565c:	60f8      	str	r0, [r7, #12]
 800565e:	60b9      	str	r1, [r7, #8]
 8005660:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8005662:	68b8      	ldr	r0, [r7, #8]
 8005664:	f7fd fee0 	bl	8003428 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8005668:	4603      	mov	r3, r0
 800566a:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 800566c:	68b8      	ldr	r0, [r7, #8]
 800566e:	f7ff ffb3 	bl	80055d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8005672:	4603      	mov	r3, r0
 8005674:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8005676:	2301      	movs	r3, #1
 8005678:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 800567c:	69bb      	ldr	r3, [r7, #24]
 800567e:	2b00      	cmp	r3, #0
 8005680:	d020      	beq.n	80056c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 8005682:	69bb      	ldr	r3, [r7, #24]
 8005684:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8005686:	68bc      	ldr	r4, [r7, #8]
 8005688:	69bb      	ldr	r3, [r7, #24]
 800568a:	4618      	mov	r0, r3
 800568c:	f000 ff3a 	bl	8006504 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8005690:	4603      	mov	r3, r0
 8005692:	461a      	mov	r2, r3
 8005694:	6879      	ldr	r1, [r7, #4]
 8005696:	4620      	mov	r0, r4
 8005698:	f7ff ffce 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800569c:	4603      	mov	r3, r0
 800569e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 80056a2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80056a6:	2b00      	cmp	r3, #0
 80056a8:	d005      	beq.n	80056b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x60>
 80056aa:	69bb      	ldr	r3, [r7, #24]
 80056ac:	4618      	mov	r0, r3
 80056ae:	f7fe ff48 	bl	8004542 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 80056b2:	4603      	mov	r3, r0
 80056b4:	e004      	b.n	80056c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6a>
 80056b6:	69bb      	ldr	r3, [r7, #24]
 80056b8:	4618      	mov	r0, r3
 80056ba:	f7fe ff36 	bl	800452a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 80056be:	4603      	mov	r3, r0
 80056c0:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 80056c2:	e7db      	b.n	800567c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 80056c4:	697a      	ldr	r2, [r7, #20]
 80056c6:	f107 0310 	add.w	r3, r7, #16
 80056ca:	4611      	mov	r1, r2
 80056cc:	4618      	mov	r0, r3
 80056ce:	f7fe ff55 	bl	800457c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 80056d2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80056d6:	2b00      	cmp	r3, #0
 80056d8:	d01d      	beq.n	8005716 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 80056da:	68b8      	ldr	r0, [r7, #8]
 80056dc:	f000 ff35 	bl	800654a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 80056e0:	4603      	mov	r3, r0
 80056e2:	61fb      	str	r3, [r7, #28]
 80056e4:	f107 021c 	add.w	r2, r7, #28
 80056e8:	f107 0310 	add.w	r3, r7, #16
 80056ec:	4611      	mov	r1, r2
 80056ee:	4618      	mov	r0, r3
 80056f0:	f000 ff3c 	bl	800656c <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 80056f4:	4603      	mov	r3, r0
 80056f6:	2b00      	cmp	r3, #0
 80056f8:	d008      	beq.n	800570c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 80056fa:	f107 0214 	add.w	r2, r7, #20
 80056fe:	f107 0318 	add.w	r3, r7, #24
 8005702:	4619      	mov	r1, r3
 8005704:	68f8      	ldr	r0, [r7, #12]
 8005706:	f000 ff45 	bl	8006594 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>
 800570a:	e025      	b.n	8005758 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 800570c:	f107 0310 	add.w	r3, r7, #16
 8005710:	4618      	mov	r0, r3
 8005712:	f000 f831 	bl	8005778 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8005716:	68bc      	ldr	r4, [r7, #8]
 8005718:	693b      	ldr	r3, [r7, #16]
 800571a:	4618      	mov	r0, r3
 800571c:	f7ff ff80 	bl	8005620 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005720:	4603      	mov	r3, r0
 8005722:	687a      	ldr	r2, [r7, #4]
 8005724:	4619      	mov	r1, r3
 8005726:	4620      	mov	r0, r4
 8005728:	f7ff ff86 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800572c:	4603      	mov	r3, r0
 800572e:	2b00      	cmp	r3, #0
 8005730:	d008      	beq.n	8005744 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 8005732:	f107 0214 	add.w	r2, r7, #20
 8005736:	f107 0318 	add.w	r3, r7, #24
 800573a:	4619      	mov	r1, r3
 800573c:	68f8      	ldr	r0, [r7, #12]
 800573e:	f000 ff29 	bl	8006594 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>
 8005742:	e009      	b.n	8005758 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 8005744:	2300      	movs	r3, #0
 8005746:	623b      	str	r3, [r7, #32]
 8005748:	f107 0220 	add.w	r2, r7, #32
 800574c:	f107 0310 	add.w	r3, r7, #16
 8005750:	4619      	mov	r1, r3
 8005752:	68f8      	ldr	r0, [r7, #12]
 8005754:	f7ff fed2 	bl	80054fc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8005758:	68f8      	ldr	r0, [r7, #12]
 800575a:	372c      	adds	r7, #44	; 0x2c
 800575c:	46bd      	mov	sp, r7
 800575e:	bd90      	pop	{r4, r7, pc}

08005760 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8005760:	b480      	push	{r7}
 8005762:	b083      	sub	sp, #12
 8005764:	af00      	add	r7, sp, #0
 8005766:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	330c      	adds	r3, #12
 800576c:	4618      	mov	r0, r3
 800576e:	370c      	adds	r7, #12
 8005770:	46bd      	mov	sp, r7
 8005772:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005776:	4770      	bx	lr

08005778 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8005778:	b580      	push	{r7, lr}
 800577a:	b082      	sub	sp, #8
 800577c:	af00      	add	r7, sp, #0
 800577e:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8005780:	687b      	ldr	r3, [r7, #4]
 8005782:	681b      	ldr	r3, [r3, #0]
 8005784:	4618      	mov	r0, r3
 8005786:	f01c fef1 	bl	802256c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 800578a:	4602      	mov	r2, r0
 800578c:	687b      	ldr	r3, [r7, #4]
 800578e:	601a      	str	r2, [r3, #0]
	return *this;
 8005790:	687b      	ldr	r3, [r7, #4]
      }
 8005792:	4618      	mov	r0, r3
 8005794:	3708      	adds	r7, #8
 8005796:	46bd      	mov	sp, r7
 8005798:	bd80      	pop	{r7, pc}

0800579a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800579a:	b580      	push	{r7, lr}
 800579c:	b082      	sub	sp, #8
 800579e:	af00      	add	r7, sp, #0
 80057a0:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 80057a2:	687b      	ldr	r3, [r7, #4]
 80057a4:	681b      	ldr	r3, [r3, #0]
 80057a6:	4618      	mov	r0, r3
 80057a8:	f01c fecd 	bl	8022546 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 80057ac:	4602      	mov	r2, r0
 80057ae:	687b      	ldr	r3, [r7, #4]
 80057b0:	601a      	str	r2, [r3, #0]
	return *this;
 80057b2:	687b      	ldr	r3, [r7, #4]
      }
 80057b4:	4618      	mov	r0, r3
 80057b6:	3708      	adds	r7, #8
 80057b8:	46bd      	mov	sp, r7
 80057ba:	bd80      	pop	{r7, pc}

080057bc <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIRKS9_EEPSt13_Rb_tree_nodeIS9_EOT_>:
	  operator()(_Arg&& __arg) const
 80057bc:	b590      	push	{r4, r7, lr}
 80057be:	b083      	sub	sp, #12
 80057c0:	af00      	add	r7, sp, #0
 80057c2:	6078      	str	r0, [r7, #4]
 80057c4:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 80057c6:	687b      	ldr	r3, [r7, #4]
 80057c8:	681c      	ldr	r4, [r3, #0]
 80057ca:	6838      	ldr	r0, [r7, #0]
 80057cc:	f7ff f814 	bl	80047f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 80057d0:	4603      	mov	r3, r0
 80057d2:	4619      	mov	r1, r3
 80057d4:	4620      	mov	r0, r4
 80057d6:	f000 fef6 	bl	80065c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 80057da:	4603      	mov	r3, r0
 80057dc:	4618      	mov	r0, r3
 80057de:	370c      	adds	r7, #12
 80057e0:	46bd      	mov	sp, r7
 80057e2:	bd90      	pop	{r4, r7, pc}

080057e4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS7_>:
 80057e4:	b480      	push	{r7}
 80057e6:	b083      	sub	sp, #12
 80057e8:	af00      	add	r7, sp, #0
 80057ea:	6078      	str	r0, [r7, #4]
 80057ec:	6039      	str	r1, [r7, #0]
 80057ee:	687b      	ldr	r3, [r7, #4]
 80057f0:	4618      	mov	r0, r3
 80057f2:	370c      	adds	r7, #12
 80057f4:	46bd      	mov	sp, r7
 80057f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057fa:	4770      	bx	lr

080057fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80057fc:	b590      	push	{r4, r7, lr}
 80057fe:	b083      	sub	sp, #12
 8005800:	af00      	add	r7, sp, #0
 8005802:	6078      	str	r0, [r7, #4]
 8005804:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8005806:	6878      	ldr	r0, [r7, #4]
 8005808:	f000 fef4 	bl	80065f4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 800580c:	4604      	mov	r4, r0
 800580e:	6838      	ldr	r0, [r7, #0]
 8005810:	f000 fefb 	bl	800660a <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 8005814:	4603      	mov	r3, r0
 8005816:	4619      	mov	r1, r3
 8005818:	4620      	mov	r0, r4
 800581a:	f000 ff04 	bl	8006626 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE7destroyIS4_EEvRS6_PT_>
      }
 800581e:	bf00      	nop
 8005820:	370c      	adds	r7, #12
 8005822:	46bd      	mov	sp, r7
 8005824:	bd90      	pop	{r4, r7, pc}

08005826 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8005826:	b580      	push	{r7, lr}
 8005828:	b082      	sub	sp, #8
 800582a:	af00      	add	r7, sp, #0
 800582c:	6078      	str	r0, [r7, #4]
 800582e:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8005830:	6878      	ldr	r0, [r7, #4]
 8005832:	f000 fedf 	bl	80065f4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8005836:	4603      	mov	r3, r0
 8005838:	2201      	movs	r2, #1
 800583a:	6839      	ldr	r1, [r7, #0]
 800583c:	4618      	mov	r0, r3
 800583e:	f000 feff 	bl	8006640 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE10deallocateERS6_PS5_j>
 8005842:	bf00      	nop
 8005844:	3708      	adds	r7, #8
 8005846:	46bd      	mov	sp, r7
 8005848:	bd80      	pop	{r7, pc}

0800584a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 800584a:	b580      	push	{r7, lr}
 800584c:	b084      	sub	sp, #16
 800584e:	af00      	add	r7, sp, #0
 8005850:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	681a      	ldr	r2, [r3, #0]
 8005856:	f107 030c 	add.w	r3, r7, #12
 800585a:	4611      	mov	r1, r2
 800585c:	4618      	mov	r0, r3
 800585e:	f7ff f877 	bl	8004950 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8005862:	68fb      	ldr	r3, [r7, #12]
 8005864:	4618      	mov	r0, r3
 8005866:	3710      	adds	r7, #16
 8005868:	46bd      	mov	sp, r7
 800586a:	bd80      	pop	{r7, pc}

0800586c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 800586c:	b480      	push	{r7}
 800586e:	b083      	sub	sp, #12
 8005870:	af00      	add	r7, sp, #0
 8005872:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8005874:	687b      	ldr	r3, [r7, #4]
 8005876:	3304      	adds	r3, #4
 8005878:	4618      	mov	r0, r3
 800587a:	370c      	adds	r7, #12
 800587c:	46bd      	mov	sp, r7
 800587e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005882:	4770      	bx	lr

08005884 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8005884:	b480      	push	{r7}
 8005886:	b083      	sub	sp, #12
 8005888:	af00      	add	r7, sp, #0
 800588a:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	695b      	ldr	r3, [r3, #20]
 8005890:	4618      	mov	r0, r3
 8005892:	370c      	adds	r7, #12
 8005894:	46bd      	mov	sp, r7
 8005896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800589a:	4770      	bx	lr

0800589c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 800589c:	b480      	push	{r7}
 800589e:	b083      	sub	sp, #12
 80058a0:	af00      	add	r7, sp, #0
 80058a2:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 80058a4:	687b      	ldr	r3, [r7, #4]
 80058a6:	3310      	adds	r3, #16
 80058a8:	4618      	mov	r0, r3
 80058aa:	370c      	adds	r7, #12
 80058ac:	46bd      	mov	sp, r7
 80058ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058b2:	4770      	bx	lr

080058b4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 80058b4:	b580      	push	{r7, lr}
 80058b6:	b082      	sub	sp, #8
 80058b8:	af00      	add	r7, sp, #0
 80058ba:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 80058bc:	6878      	ldr	r0, [r7, #4]
 80058be:	f000 fece 	bl	800665e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 80058c2:	4603      	mov	r3, r0
 80058c4:	4618      	mov	r0, r3
 80058c6:	3708      	adds	r7, #8
 80058c8:	46bd      	mov	sp, r7
 80058ca:	bd80      	pop	{r7, pc}

080058cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80058cc:	b590      	push	{r4, r7, lr}
 80058ce:	b08b      	sub	sp, #44	; 0x2c
 80058d0:	af00      	add	r7, sp, #0
 80058d2:	60f8      	str	r0, [r7, #12]
 80058d4:	60b9      	str	r1, [r7, #8]
 80058d6:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 80058d8:	68b8      	ldr	r0, [r7, #8]
 80058da:	f7fd fe81 	bl	80035e0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 80058de:	4603      	mov	r3, r0
 80058e0:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 80058e2:	68b8      	ldr	r0, [r7, #8]
 80058e4:	f7ff ffc2 	bl	800586c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 80058e8:	4603      	mov	r3, r0
 80058ea:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 80058ec:	2301      	movs	r3, #1
 80058ee:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 80058f2:	69bb      	ldr	r3, [r7, #24]
 80058f4:	2b00      	cmp	r3, #0
 80058f6:	d020      	beq.n	800593a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6e>
	  __y = __x;
 80058f8:	69bb      	ldr	r3, [r7, #24]
 80058fa:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 80058fc:	68bc      	ldr	r4, [r7, #8]
 80058fe:	69bb      	ldr	r3, [r7, #24]
 8005900:	4618      	mov	r0, r3
 8005902:	f000 feac 	bl	800665e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8005906:	4603      	mov	r3, r0
 8005908:	461a      	mov	r2, r3
 800590a:	6879      	ldr	r1, [r7, #4]
 800590c:	4620      	mov	r0, r4
 800590e:	f7ff fcfe 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 8005912:	4603      	mov	r3, r0
 8005914:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8005918:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800591c:	2b00      	cmp	r3, #0
 800591e:	d005      	beq.n	800592c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x60>
 8005920:	69bb      	ldr	r3, [r7, #24]
 8005922:	4618      	mov	r0, r3
 8005924:	f7fe fff7 	bl	8004916 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8005928:	4603      	mov	r3, r0
 800592a:	e004      	b.n	8005936 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6a>
 800592c:	69bb      	ldr	r3, [r7, #24]
 800592e:	4618      	mov	r0, r3
 8005930:	f7fe ffe5 	bl	80048fe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8005934:	4603      	mov	r3, r0
 8005936:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8005938:	e7db      	b.n	80058f2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x26>
      iterator __j = iterator(__y);
 800593a:	697a      	ldr	r2, [r7, #20]
 800593c:	f107 0310 	add.w	r3, r7, #16
 8005940:	4611      	mov	r1, r2
 8005942:	4618      	mov	r0, r3
 8005944:	f7ff f804 	bl	8004950 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8005948:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800594c:	2b00      	cmp	r3, #0
 800594e:	d01d      	beq.n	800598c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xc0>
	  if (__j == begin())
 8005950:	68b8      	ldr	r0, [r7, #8]
 8005952:	f000 fe97 	bl	8006684 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>
 8005956:	4603      	mov	r3, r0
 8005958:	61fb      	str	r3, [r7, #28]
 800595a:	f107 021c 	add.w	r2, r7, #28
 800595e:	f107 0310 	add.w	r3, r7, #16
 8005962:	4611      	mov	r1, r2
 8005964:	4618      	mov	r0, r3
 8005966:	f000 fe9e 	bl	80066a6 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEES6_>
 800596a:	4603      	mov	r3, r0
 800596c:	2b00      	cmp	r3, #0
 800596e:	d008      	beq.n	8005982 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xb6>
	    return _Res(__x, __y);
 8005970:	f107 0214 	add.w	r2, r7, #20
 8005974:	f107 0318 	add.w	r3, r7, #24
 8005978:	4619      	mov	r1, r3
 800597a:	68f8      	ldr	r0, [r7, #12]
 800597c:	f000 fea7 	bl	80066ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>
 8005980:	e025      	b.n	80059ce <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
	    --__j;
 8005982:	f107 0310 	add.w	r3, r7, #16
 8005986:	4618      	mov	r0, r3
 8005988:	f000 f831 	bl	80059ee <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 800598c:	68bc      	ldr	r4, [r7, #8]
 800598e:	693b      	ldr	r3, [r7, #16]
 8005990:	4618      	mov	r0, r3
 8005992:	f7ff ff8f 	bl	80058b4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005996:	4603      	mov	r3, r0
 8005998:	687a      	ldr	r2, [r7, #4]
 800599a:	4619      	mov	r1, r3
 800599c:	4620      	mov	r0, r4
 800599e:	f7ff fcb6 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 80059a2:	4603      	mov	r3, r0
 80059a4:	2b00      	cmp	r3, #0
 80059a6:	d008      	beq.n	80059ba <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xee>
	return _Res(__x, __y);
 80059a8:	f107 0214 	add.w	r2, r7, #20
 80059ac:	f107 0318 	add.w	r3, r7, #24
 80059b0:	4619      	mov	r1, r3
 80059b2:	68f8      	ldr	r0, [r7, #12]
 80059b4:	f000 fe8b 	bl	80066ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>
 80059b8:	e009      	b.n	80059ce <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
      return _Res(__j._M_node, 0);
 80059ba:	2300      	movs	r3, #0
 80059bc:	623b      	str	r3, [r7, #32]
 80059be:	f107 0220 	add.w	r2, r7, #32
 80059c2:	f107 0310 	add.w	r3, r7, #16
 80059c6:	4619      	mov	r1, r3
 80059c8:	68f8      	ldr	r0, [r7, #12]
 80059ca:	f7ff fd97 	bl	80054fc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80059ce:	68f8      	ldr	r0, [r7, #12]
 80059d0:	372c      	adds	r7, #44	; 0x2c
 80059d2:	46bd      	mov	sp, r7
 80059d4:	bd90      	pop	{r4, r7, pc}

080059d6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 80059d6:	b480      	push	{r7}
 80059d8:	b083      	sub	sp, #12
 80059da:	af00      	add	r7, sp, #0
 80059dc:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 80059de:	687b      	ldr	r3, [r7, #4]
 80059e0:	330c      	adds	r3, #12
 80059e2:	4618      	mov	r0, r3
 80059e4:	370c      	adds	r7, #12
 80059e6:	46bd      	mov	sp, r7
 80059e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059ec:	4770      	bx	lr

080059ee <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 80059ee:	b580      	push	{r7, lr}
 80059f0:	b082      	sub	sp, #8
 80059f2:	af00      	add	r7, sp, #0
 80059f4:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 80059f6:	687b      	ldr	r3, [r7, #4]
 80059f8:	681b      	ldr	r3, [r3, #0]
 80059fa:	4618      	mov	r0, r3
 80059fc:	f01c fdb6 	bl	802256c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8005a00:	4602      	mov	r2, r0
 8005a02:	687b      	ldr	r3, [r7, #4]
 8005a04:	601a      	str	r2, [r3, #0]
	return *this;
 8005a06:	687b      	ldr	r3, [r7, #4]
      }
 8005a08:	4618      	mov	r0, r3
 8005a0a:	3708      	adds	r7, #8
 8005a0c:	46bd      	mov	sp, r7
 8005a0e:	bd80      	pop	{r7, pc}

08005a10 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8005a10:	b580      	push	{r7, lr}
 8005a12:	b082      	sub	sp, #8
 8005a14:	af00      	add	r7, sp, #0
 8005a16:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	681b      	ldr	r3, [r3, #0]
 8005a1c:	4618      	mov	r0, r3
 8005a1e:	f01c fd92 	bl	8022546 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8005a22:	4602      	mov	r2, r0
 8005a24:	687b      	ldr	r3, [r7, #4]
 8005a26:	601a      	str	r2, [r3, #0]
	return *this;
 8005a28:	687b      	ldr	r3, [r7, #4]
      }
 8005a2a:	4618      	mov	r0, r3
 8005a2c:	3708      	adds	r7, #8
 8005a2e:	46bd      	mov	sp, r7
 8005a30:	bd80      	pop	{r7, pc}

08005a32 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>:
	  operator()(_Arg&& __arg) const
 8005a32:	b590      	push	{r4, r7, lr}
 8005a34:	b083      	sub	sp, #12
 8005a36:	af00      	add	r7, sp, #0
 8005a38:	6078      	str	r0, [r7, #4]
 8005a3a:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8005a3c:	687b      	ldr	r3, [r7, #4]
 8005a3e:	681c      	ldr	r4, [r3, #0]
 8005a40:	6838      	ldr	r0, [r7, #0]
 8005a42:	f7ff f8c3 	bl	8004bcc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8005a46:	4603      	mov	r3, r0
 8005a48:	4619      	mov	r1, r3
 8005a4a:	4620      	mov	r0, r4
 8005a4c:	f000 fe58 	bl	8006700 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>
 8005a50:	4603      	mov	r3, r0
 8005a52:	4618      	mov	r0, r3
 8005a54:	370c      	adds	r7, #12
 8005a56:	46bd      	mov	sp, r7
 8005a58:	bd90      	pop	{r4, r7, pc}

08005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005a5a:	b480      	push	{r7}
 8005a5c:	b083      	sub	sp, #12
 8005a5e:	af00      	add	r7, sp, #0
 8005a60:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005a62:	687b      	ldr	r3, [r7, #4]
 8005a64:	4618      	mov	r0, r3
 8005a66:	370c      	adds	r7, #12
 8005a68:	46bd      	mov	sp, r7
 8005a6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a6e:	4770      	bx	lr

08005a70 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005a70:	b5b0      	push	{r4, r5, r7, lr}
 8005a72:	b084      	sub	sp, #16
 8005a74:	af00      	add	r7, sp, #0
 8005a76:	7338      	strb	r0, [r7, #12]
 8005a78:	60b9      	str	r1, [r7, #8]
 8005a7a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005a7c:	68b8      	ldr	r0, [r7, #8]
 8005a7e:	f7ff f9bd 	bl	8004dfc <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005a82:	4604      	mov	r4, r0
 8005a84:	6878      	ldr	r0, [r7, #4]
 8005a86:	f7ff ffe8 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8005a8a:	4603      	mov	r3, r0
 8005a8c:	4619      	mov	r1, r3
 8005a8e:	4620      	mov	r0, r4
 8005a90:	f000 fe4d 	bl	800672e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>
 8005a94:	462b      	mov	r3, r5
 8005a96:	4618      	mov	r0, r3
 8005a98:	3710      	adds	r7, #16
 8005a9a:	46bd      	mov	sp, r7
 8005a9c:	bdb0      	pop	{r4, r5, r7, pc}

08005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005a9e:	b480      	push	{r7}
 8005aa0:	b083      	sub	sp, #12
 8005aa2:	af00      	add	r7, sp, #0
 8005aa4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005aa6:	687b      	ldr	r3, [r7, #4]
 8005aa8:	4618      	mov	r0, r3
 8005aaa:	370c      	adds	r7, #12
 8005aac:	46bd      	mov	sp, r7
 8005aae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ab2:	4770      	bx	lr

08005ab4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005ab4:	b5b0      	push	{r4, r5, r7, lr}
 8005ab6:	b084      	sub	sp, #16
 8005ab8:	af00      	add	r7, sp, #0
 8005aba:	7338      	strb	r0, [r7, #12]
 8005abc:	60b9      	str	r1, [r7, #8]
 8005abe:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005ac0:	68b8      	ldr	r0, [r7, #8]
 8005ac2:	f7ff f99b 	bl	8004dfc <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005ac6:	4604      	mov	r4, r0
 8005ac8:	6878      	ldr	r0, [r7, #4]
 8005aca:	f7ff ffe8 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8005ace:	4603      	mov	r3, r0
 8005ad0:	4619      	mov	r1, r3
 8005ad2:	4620      	mov	r0, r4
 8005ad4:	f000 fe3c 	bl	8006750 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>
 8005ad8:	462b      	mov	r3, r5
 8005ada:	4618      	mov	r0, r3
 8005adc:	3710      	adds	r7, #16
 8005ade:	46bd      	mov	sp, r7
 8005ae0:	bdb0      	pop	{r4, r5, r7, pc}

08005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005ae2:	b480      	push	{r7}
 8005ae4:	b083      	sub	sp, #12
 8005ae6:	af00      	add	r7, sp, #0
 8005ae8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005aea:	687b      	ldr	r3, [r7, #4]
 8005aec:	4618      	mov	r0, r3
 8005aee:	370c      	adds	r7, #12
 8005af0:	46bd      	mov	sp, r7
 8005af2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005af6:	4770      	bx	lr

08005af8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005af8:	b5b0      	push	{r4, r5, r7, lr}
 8005afa:	b084      	sub	sp, #16
 8005afc:	af00      	add	r7, sp, #0
 8005afe:	7338      	strb	r0, [r7, #12]
 8005b00:	60b9      	str	r1, [r7, #8]
 8005b02:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005b04:	68b8      	ldr	r0, [r7, #8]
 8005b06:	f7ff f979 	bl	8004dfc <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005b0a:	4604      	mov	r4, r0
 8005b0c:	6878      	ldr	r0, [r7, #4]
 8005b0e:	f7ff ffe8 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8005b12:	4603      	mov	r3, r0
 8005b14:	4619      	mov	r1, r3
 8005b16:	4620      	mov	r0, r4
 8005b18:	f000 fe2b 	bl	8006772 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>
 8005b1c:	462b      	mov	r3, r5
 8005b1e:	4618      	mov	r0, r3
 8005b20:	3710      	adds	r7, #16
 8005b22:	46bd      	mov	sp, r7
 8005b24:	bdb0      	pop	{r4, r5, r7, pc}

08005b26 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 8005b26:	b580      	push	{r7, lr}
 8005b28:	b082      	sub	sp, #8
 8005b2a:	af00      	add	r7, sp, #0
 8005b2c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8005b2e:	6878      	ldr	r0, [r7, #4]
 8005b30:	f000 fe30 	bl	8006794 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
 8005b34:	4603      	mov	r3, r0
 8005b36:	4618      	mov	r0, r3
 8005b38:	3708      	adds	r7, #8
 8005b3a:	46bd      	mov	sp, r7
 8005b3c:	bd80      	pop	{r7, pc}

08005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005b3e:	b480      	push	{r7}
 8005b40:	b083      	sub	sp, #12
 8005b42:	af00      	add	r7, sp, #0
 8005b44:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	4618      	mov	r0, r3
 8005b4a:	370c      	adds	r7, #12
 8005b4c:	46bd      	mov	sp, r7
 8005b4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b52:	4770      	bx	lr

08005b54 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005b54:	b5b0      	push	{r4, r5, r7, lr}
 8005b56:	b084      	sub	sp, #16
 8005b58:	af00      	add	r7, sp, #0
 8005b5a:	7338      	strb	r0, [r7, #12]
 8005b5c:	60b9      	str	r1, [r7, #8]
 8005b5e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005b60:	68b8      	ldr	r0, [r7, #8]
 8005b62:	f7ff f94b 	bl	8004dfc <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005b66:	4604      	mov	r4, r0
 8005b68:	6878      	ldr	r0, [r7, #4]
 8005b6a:	f7ff ffe8 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8005b6e:	4603      	mov	r3, r0
 8005b70:	4619      	mov	r1, r3
 8005b72:	4620      	mov	r0, r4
 8005b74:	f000 fe19 	bl	80067aa <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>
 8005b78:	462b      	mov	r3, r5
 8005b7a:	4618      	mov	r0, r3
 8005b7c:	3710      	adds	r7, #16
 8005b7e:	46bd      	mov	sp, r7
 8005b80:	bdb0      	pop	{r4, r5, r7, pc}

08005b82 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>:
      _M_ptr() noexcept
 8005b82:	b580      	push	{r7, lr}
 8005b84:	b082      	sub	sp, #8
 8005b86:	af00      	add	r7, sp, #0
 8005b88:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8005b8a:	6878      	ldr	r0, [r7, #4]
 8005b8c:	f000 fe1e 	bl	80067cc <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>
 8005b90:	4603      	mov	r3, r0
 8005b92:	4618      	mov	r0, r3
 8005b94:	3708      	adds	r7, #8
 8005b96:	46bd      	mov	sp, r7
 8005b98:	bd80      	pop	{r7, pc}

08005b9a <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005b9a:	b480      	push	{r7}
 8005b9c:	b083      	sub	sp, #12
 8005b9e:	af00      	add	r7, sp, #0
 8005ba0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	4618      	mov	r0, r3
 8005ba6:	370c      	adds	r7, #12
 8005ba8:	46bd      	mov	sp, r7
 8005baa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bae:	4770      	bx	lr

08005bb0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005bb0:	b5b0      	push	{r4, r5, r7, lr}
 8005bb2:	b084      	sub	sp, #16
 8005bb4:	af00      	add	r7, sp, #0
 8005bb6:	7338      	strb	r0, [r7, #12]
 8005bb8:	60b9      	str	r1, [r7, #8]
 8005bba:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005bbc:	68b8      	ldr	r0, [r7, #8]
 8005bbe:	f7ff f91d 	bl	8004dfc <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005bc2:	4604      	mov	r4, r0
 8005bc4:	6878      	ldr	r0, [r7, #4]
 8005bc6:	f7ff ffe8 	bl	8005b9a <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8005bca:	4603      	mov	r3, r0
 8005bcc:	4619      	mov	r1, r3
 8005bce:	4620      	mov	r0, r4
 8005bd0:	f000 fe07 	bl	80067e2 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>
 8005bd4:	462b      	mov	r3, r5
 8005bd6:	4618      	mov	r0, r3
 8005bd8:	3710      	adds	r7, #16
 8005bda:	46bd      	mov	sp, r7
 8005bdc:	bdb0      	pop	{r4, r5, r7, pc}

08005bde <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005bde:	b480      	push	{r7}
 8005be0:	b083      	sub	sp, #12
 8005be2:	af00      	add	r7, sp, #0
 8005be4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005be6:	687b      	ldr	r3, [r7, #4]
 8005be8:	4618      	mov	r0, r3
 8005bea:	370c      	adds	r7, #12
 8005bec:	46bd      	mov	sp, r7
 8005bee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bf2:	4770      	bx	lr

08005bf4 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIiEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 8005bf4:	b580      	push	{r7, lr}
 8005bf6:	b084      	sub	sp, #16
 8005bf8:	af00      	add	r7, sp, #0
 8005bfa:	60f8      	str	r0, [r7, #12]
 8005bfc:	460b      	mov	r3, r1
 8005bfe:	607a      	str	r2, [r7, #4]
 8005c00:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 8005c02:	68fb      	ldr	r3, [r7, #12]
 8005c04:	4618      	mov	r0, r3
 8005c06:	f7fd f949 	bl	8002e9c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 8005c0a:	6879      	ldr	r1, [r7, #4]
 8005c0c:	68f8      	ldr	r0, [r7, #12]
 8005c0e:	f000 fe10 	bl	8006832 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 8005c12:	897b      	ldrh	r3, [r7, #10]
 8005c14:	b2da      	uxtb	r2, r3
 8005c16:	68fb      	ldr	r3, [r7, #12]
 8005c18:	761a      	strb	r2, [r3, #24]
	}
 8005c1a:	bf00      	nop
 8005c1c:	3710      	adds	r7, #16
 8005c1e:	46bd      	mov	sp, r7
 8005c20:	bd80      	pop	{r7, pc}

08005c22 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIfEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 8005c22:	b580      	push	{r7, lr}
 8005c24:	b084      	sub	sp, #16
 8005c26:	af00      	add	r7, sp, #0
 8005c28:	60f8      	str	r0, [r7, #12]
 8005c2a:	460b      	mov	r3, r1
 8005c2c:	607a      	str	r2, [r7, #4]
 8005c2e:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 8005c30:	68fb      	ldr	r3, [r7, #12]
 8005c32:	4618      	mov	r0, r3
 8005c34:	f7fd f932 	bl	8002e9c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 8005c38:	6879      	ldr	r1, [r7, #4]
 8005c3a:	68f8      	ldr	r0, [r7, #12]
 8005c3c:	f000 fe13 	bl	8006866 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 8005c40:	897b      	ldrh	r3, [r7, #10]
 8005c42:	b2da      	uxtb	r2, r3
 8005c44:	68fb      	ldr	r3, [r7, #12]
 8005c46:	761a      	strb	r2, [r3, #24]
	}
 8005c48:	bf00      	nop
 8005c4a:	3710      	adds	r7, #16
 8005c4c:	46bd      	mov	sp, r7
 8005c4e:	bd80      	pop	{r7, pc}

08005c50 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIbEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 8005c50:	b580      	push	{r7, lr}
 8005c52:	b084      	sub	sp, #16
 8005c54:	af00      	add	r7, sp, #0
 8005c56:	60f8      	str	r0, [r7, #12]
 8005c58:	460b      	mov	r3, r1
 8005c5a:	607a      	str	r2, [r7, #4]
 8005c5c:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 8005c5e:	68fb      	ldr	r3, [r7, #12]
 8005c60:	4618      	mov	r0, r3
 8005c62:	f7fd f91b 	bl	8002e9c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 8005c66:	6879      	ldr	r1, [r7, #4]
 8005c68:	68f8      	ldr	r0, [r7, #12]
 8005c6a:	f000 fe16 	bl	800689a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 8005c6e:	897b      	ldrh	r3, [r7, #10]
 8005c70:	b2da      	uxtb	r2, r3
 8005c72:	68fb      	ldr	r3, [r7, #12]
 8005c74:	761a      	strb	r2, [r3, #24]
	}
 8005c76:	bf00      	nop
 8005c78:	3710      	adds	r7, #16
 8005c7a:	46bd      	mov	sp, r7
 8005c7c:	bd80      	pop	{r7, pc}

08005c7e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRKS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 8005c7e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c80:	b085      	sub	sp, #20
 8005c82:	af00      	add	r7, sp, #0
 8005c84:	60f8      	str	r0, [r7, #12]
 8005c86:	7239      	strb	r1, [r7, #8]
 8005c88:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 8005c8a:	68fc      	ldr	r4, [r7, #12]
 8005c8c:	6878      	ldr	r0, [r7, #4]
 8005c8e:	f7fe f94b 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8005c92:	4603      	mov	r3, r0
 8005c94:	461a      	mov	r2, r3
 8005c96:	4631      	mov	r1, r6
 8005c98:	4620      	mov	r0, r4
 8005c9a:	f000 fe5d 	bl	8006958 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8005c9e:	4629      	mov	r1, r5
 8005ca0:	68f8      	ldr	r0, [r7, #12]
 8005ca2:	f000 fe6e 	bl	8006982 <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 8005ca6:	68fb      	ldr	r3, [r7, #12]
 8005ca8:	4618      	mov	r0, r3
 8005caa:	3714      	adds	r7, #20
 8005cac:	46bd      	mov	sp, r7
 8005cae:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005cb0 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS5_vvS5_vEEOT_>:
	variant(_Tp&& __t)
 8005cb0:	b590      	push	{r4, r7, lr}
 8005cb2:	b083      	sub	sp, #12
 8005cb4:	af00      	add	r7, sp, #0
 8005cb6:	6078      	str	r0, [r7, #4]
 8005cb8:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 8005cba:	6838      	ldr	r0, [r7, #0]
 8005cbc:	f7fe f934 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8005cc0:	4603      	mov	r3, r0
 8005cc2:	461a      	mov	r2, r3
 8005cc4:	4621      	mov	r1, r4
 8005cc6:	6878      	ldr	r0, [r7, #4]
 8005cc8:	f7ff ffd9 	bl	8005c7e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRKS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	4618      	mov	r0, r3
 8005cd0:	370c      	adds	r7, #12
 8005cd2:	46bd      	mov	sp, r7
 8005cd4:	bd90      	pop	{r4, r7, pc}

08005cd6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8005cd6:	b480      	push	{r7}
 8005cd8:	b083      	sub	sp, #12
 8005cda:	af00      	add	r7, sp, #0
 8005cdc:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8005cde:	687b      	ldr	r3, [r7, #4]
    }
 8005ce0:	4618      	mov	r0, r3
 8005ce2:	370c      	adds	r7, #12
 8005ce4:	46bd      	mov	sp, r7
 8005ce6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cea:	4770      	bx	lr

08005cec <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8005cec:	b580      	push	{r7, lr}
 8005cee:	b082      	sub	sp, #8
 8005cf0:	af00      	add	r7, sp, #0
 8005cf2:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8005cf4:	6878      	ldr	r0, [r7, #4]
 8005cf6:	f7fc f8b3 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005cfa:	4603      	mov	r3, r0
 8005cfc:	4618      	mov	r0, r3
 8005cfe:	f7fb fe18 	bl	8001932 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8005d02:	4603      	mov	r3, r0
	}
 8005d04:	4618      	mov	r0, r3
 8005d06:	3708      	adds	r7, #8
 8005d08:	46bd      	mov	sp, r7
 8005d0a:	bd80      	pop	{r7, pc}

08005d0c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8005d0c:	b5b0      	push	{r4, r5, r7, lr}
 8005d0e:	b084      	sub	sp, #16
 8005d10:	af00      	add	r7, sp, #0
 8005d12:	6078      	str	r0, [r7, #4]
 8005d14:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005d16:	6878      	ldr	r0, [r7, #4]
 8005d18:	f000 fe3f 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005d1c:	4604      	mov	r4, r0
 8005d1e:	6838      	ldr	r0, [r7, #0]
 8005d20:	f7fc f89e 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005d24:	4603      	mov	r3, r0
 8005d26:	4618      	mov	r0, r3
 8005d28:	f7ff ffe0 	bl	8005cec <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESO_EEDcOSJ_>
 8005d2c:	4601      	mov	r1, r0
 8005d2e:	f107 030c 	add.w	r3, r7, #12
 8005d32:	461a      	mov	r2, r3
 8005d34:	4620      	mov	r0, r4
 8005d36:	f000 fe3b 	bl	80069b0 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 8005d3a:	462b      	mov	r3, r5
      }
 8005d3c:	4618      	mov	r0, r3
 8005d3e:	3710      	adds	r7, #16
 8005d40:	46bd      	mov	sp, r7
 8005d42:	bdb0      	pop	{r4, r5, r7, pc}

08005d44 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005d44:	b5b0      	push	{r4, r5, r7, lr}
 8005d46:	b082      	sub	sp, #8
 8005d48:	af00      	add	r7, sp, #0
 8005d4a:	6078      	str	r0, [r7, #4]
 8005d4c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005d4e:	6878      	ldr	r0, [r7, #4]
 8005d50:	f000 fe23 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005d54:	4604      	mov	r4, r0
 8005d56:	6838      	ldr	r0, [r7, #0]
 8005d58:	f7fc f882 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005d5c:	4603      	mov	r3, r0
 8005d5e:	4619      	mov	r1, r3
 8005d60:	4620      	mov	r0, r4
 8005d62:	f7ff ffd3 	bl	8005d0c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005d66:	462b      	mov	r3, r5
      }
 8005d68:	4618      	mov	r0, r3
 8005d6a:	3708      	adds	r7, #8
 8005d6c:	46bd      	mov	sp, r7
 8005d6e:	bdb0      	pop	{r4, r5, r7, pc}

08005d70 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005d70:	b5b0      	push	{r4, r5, r7, lr}
 8005d72:	b082      	sub	sp, #8
 8005d74:	af00      	add	r7, sp, #0
 8005d76:	6078      	str	r0, [r7, #4]
 8005d78:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005d7a:	6878      	ldr	r0, [r7, #4]
 8005d7c:	f000 fe0d 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005d80:	4604      	mov	r4, r0
 8005d82:	6838      	ldr	r0, [r7, #0]
 8005d84:	f7fc f86c 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005d88:	4603      	mov	r3, r0
 8005d8a:	4619      	mov	r1, r3
 8005d8c:	4620      	mov	r0, r4
 8005d8e:	f7ff ffd9 	bl	8005d44 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005d92:	462b      	mov	r3, r5
      }
 8005d94:	4618      	mov	r0, r3
 8005d96:	3708      	adds	r7, #8
 8005d98:	46bd      	mov	sp, r7
 8005d9a:	bdb0      	pop	{r4, r5, r7, pc}

08005d9c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8005d9c:	b580      	push	{r7, lr}
 8005d9e:	b082      	sub	sp, #8
 8005da0:	af00      	add	r7, sp, #0
 8005da2:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8005da4:	6878      	ldr	r0, [r7, #4]
 8005da6:	f7fc f85b 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005daa:	4603      	mov	r3, r0
 8005dac:	4618      	mov	r0, r3
 8005dae:	f7fd fd8f 	bl	80038d0 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8005db2:	4603      	mov	r3, r0
	}
 8005db4:	4618      	mov	r0, r3
 8005db6:	3708      	adds	r7, #8
 8005db8:	46bd      	mov	sp, r7
 8005dba:	bd80      	pop	{r7, pc}

08005dbc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8005dbc:	b5b0      	push	{r4, r5, r7, lr}
 8005dbe:	b084      	sub	sp, #16
 8005dc0:	af00      	add	r7, sp, #0
 8005dc2:	6078      	str	r0, [r7, #4]
 8005dc4:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005dc6:	6878      	ldr	r0, [r7, #4]
 8005dc8:	f000 fde7 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005dcc:	4604      	mov	r4, r0
 8005dce:	6838      	ldr	r0, [r7, #0]
 8005dd0:	f7fc f846 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005dd4:	4603      	mov	r3, r0
 8005dd6:	4618      	mov	r0, r3
 8005dd8:	f7ff ffe0 	bl	8005d9c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESO_EEDcOSJ_>
 8005ddc:	4601      	mov	r1, r0
 8005dde:	f107 030c 	add.w	r3, r7, #12
 8005de2:	461a      	mov	r2, r3
 8005de4:	4620      	mov	r0, r4
 8005de6:	f000 fe01 	bl	80069ec <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 8005dea:	462b      	mov	r3, r5
      }
 8005dec:	4618      	mov	r0, r3
 8005dee:	3710      	adds	r7, #16
 8005df0:	46bd      	mov	sp, r7
 8005df2:	bdb0      	pop	{r4, r5, r7, pc}

08005df4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005df4:	b5b0      	push	{r4, r5, r7, lr}
 8005df6:	b082      	sub	sp, #8
 8005df8:	af00      	add	r7, sp, #0
 8005dfa:	6078      	str	r0, [r7, #4]
 8005dfc:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005dfe:	6878      	ldr	r0, [r7, #4]
 8005e00:	f000 fdcb 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005e04:	4604      	mov	r4, r0
 8005e06:	6838      	ldr	r0, [r7, #0]
 8005e08:	f7fc f82a 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005e0c:	4603      	mov	r3, r0
 8005e0e:	4619      	mov	r1, r3
 8005e10:	4620      	mov	r0, r4
 8005e12:	f7ff ffd3 	bl	8005dbc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005e16:	462b      	mov	r3, r5
      }
 8005e18:	4618      	mov	r0, r3
 8005e1a:	3708      	adds	r7, #8
 8005e1c:	46bd      	mov	sp, r7
 8005e1e:	bdb0      	pop	{r4, r5, r7, pc}

08005e20 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005e20:	b5b0      	push	{r4, r5, r7, lr}
 8005e22:	b082      	sub	sp, #8
 8005e24:	af00      	add	r7, sp, #0
 8005e26:	6078      	str	r0, [r7, #4]
 8005e28:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005e2a:	6878      	ldr	r0, [r7, #4]
 8005e2c:	f000 fdb5 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005e30:	4604      	mov	r4, r0
 8005e32:	6838      	ldr	r0, [r7, #0]
 8005e34:	f7fc f814 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005e38:	4603      	mov	r3, r0
 8005e3a:	4619      	mov	r1, r3
 8005e3c:	4620      	mov	r0, r4
 8005e3e:	f7ff ffd9 	bl	8005df4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005e42:	462b      	mov	r3, r5
      }
 8005e44:	4618      	mov	r0, r3
 8005e46:	3708      	adds	r7, #8
 8005e48:	46bd      	mov	sp, r7
 8005e4a:	bdb0      	pop	{r4, r5, r7, pc}

08005e4c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8005e4c:	b580      	push	{r7, lr}
 8005e4e:	b082      	sub	sp, #8
 8005e50:	af00      	add	r7, sp, #0
 8005e52:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8005e54:	6878      	ldr	r0, [r7, #4]
 8005e56:	f7fc f803 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005e5a:	4603      	mov	r3, r0
 8005e5c:	4618      	mov	r0, r3
 8005e5e:	f7fb fb9d 	bl	800159c <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8005e62:	4603      	mov	r3, r0
	}
 8005e64:	4618      	mov	r0, r3
 8005e66:	3708      	adds	r7, #8
 8005e68:	46bd      	mov	sp, r7
 8005e6a:	bd80      	pop	{r7, pc}

08005e6c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8005e6c:	b5b0      	push	{r4, r5, r7, lr}
 8005e6e:	b084      	sub	sp, #16
 8005e70:	af00      	add	r7, sp, #0
 8005e72:	6078      	str	r0, [r7, #4]
 8005e74:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005e76:	6878      	ldr	r0, [r7, #4]
 8005e78:	f000 fd8f 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005e7c:	4604      	mov	r4, r0
 8005e7e:	6838      	ldr	r0, [r7, #0]
 8005e80:	f7fb ffee 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005e84:	4603      	mov	r3, r0
 8005e86:	4618      	mov	r0, r3
 8005e88:	f7ff ffe0 	bl	8005e4c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESO_EEDcOSJ_>
 8005e8c:	4601      	mov	r1, r0
 8005e8e:	f107 030c 	add.w	r3, r7, #12
 8005e92:	461a      	mov	r2, r3
 8005e94:	4620      	mov	r0, r4
 8005e96:	f000 fdc7 	bl	8006a28 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 8005e9a:	462b      	mov	r3, r5
      }
 8005e9c:	4618      	mov	r0, r3
 8005e9e:	3710      	adds	r7, #16
 8005ea0:	46bd      	mov	sp, r7
 8005ea2:	bdb0      	pop	{r4, r5, r7, pc}

08005ea4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005ea4:	b5b0      	push	{r4, r5, r7, lr}
 8005ea6:	b082      	sub	sp, #8
 8005ea8:	af00      	add	r7, sp, #0
 8005eaa:	6078      	str	r0, [r7, #4]
 8005eac:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005eae:	6878      	ldr	r0, [r7, #4]
 8005eb0:	f000 fd73 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005eb4:	4604      	mov	r4, r0
 8005eb6:	6838      	ldr	r0, [r7, #0]
 8005eb8:	f7fb ffd2 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005ebc:	4603      	mov	r3, r0
 8005ebe:	4619      	mov	r1, r3
 8005ec0:	4620      	mov	r0, r4
 8005ec2:	f7ff ffd3 	bl	8005e6c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005ec6:	462b      	mov	r3, r5
      }
 8005ec8:	4618      	mov	r0, r3
 8005eca:	3708      	adds	r7, #8
 8005ecc:	46bd      	mov	sp, r7
 8005ece:	bdb0      	pop	{r4, r5, r7, pc}

08005ed0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005ed0:	b5b0      	push	{r4, r5, r7, lr}
 8005ed2:	b082      	sub	sp, #8
 8005ed4:	af00      	add	r7, sp, #0
 8005ed6:	6078      	str	r0, [r7, #4]
 8005ed8:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005eda:	6878      	ldr	r0, [r7, #4]
 8005edc:	f000 fd5d 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005ee0:	4604      	mov	r4, r0
 8005ee2:	6838      	ldr	r0, [r7, #0]
 8005ee4:	f7fb ffbc 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005ee8:	4603      	mov	r3, r0
 8005eea:	4619      	mov	r1, r3
 8005eec:	4620      	mov	r0, r4
 8005eee:	f7ff ffd9 	bl	8005ea4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005ef2:	462b      	mov	r3, r5
      }
 8005ef4:	4618      	mov	r0, r3
 8005ef6:	3708      	adds	r7, #8
 8005ef8:	46bd      	mov	sp, r7
 8005efa:	bdb0      	pop	{r4, r5, r7, pc}

08005efc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8005efc:	b580      	push	{r7, lr}
 8005efe:	b082      	sub	sp, #8
 8005f00:	af00      	add	r7, sp, #0
 8005f02:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8005f04:	6878      	ldr	r0, [r7, #4]
 8005f06:	f7fb ffab 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005f0a:	4603      	mov	r3, r0
 8005f0c:	4618      	mov	r0, r3
 8005f0e:	f7fd fde3 	bl	8003ad8 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8005f12:	4603      	mov	r3, r0
	}
 8005f14:	4618      	mov	r0, r3
 8005f16:	3708      	adds	r7, #8
 8005f18:	46bd      	mov	sp, r7
 8005f1a:	bd80      	pop	{r7, pc}

08005f1c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8005f1c:	b5b0      	push	{r4, r5, r7, lr}
 8005f1e:	b084      	sub	sp, #16
 8005f20:	af00      	add	r7, sp, #0
 8005f22:	6078      	str	r0, [r7, #4]
 8005f24:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005f26:	6878      	ldr	r0, [r7, #4]
 8005f28:	f000 fd37 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005f2c:	4604      	mov	r4, r0
 8005f2e:	6838      	ldr	r0, [r7, #0]
 8005f30:	f7fb ff96 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005f34:	4603      	mov	r3, r0
 8005f36:	4618      	mov	r0, r3
 8005f38:	f7ff ffe0 	bl	8005efc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESO_EEDcOSJ_>
 8005f3c:	4601      	mov	r1, r0
 8005f3e:	f107 030c 	add.w	r3, r7, #12
 8005f42:	461a      	mov	r2, r3
 8005f44:	4620      	mov	r0, r4
 8005f46:	f000 fd8d 	bl	8006a64 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 8005f4a:	462b      	mov	r3, r5
      }
 8005f4c:	4618      	mov	r0, r3
 8005f4e:	3710      	adds	r7, #16
 8005f50:	46bd      	mov	sp, r7
 8005f52:	bdb0      	pop	{r4, r5, r7, pc}

08005f54 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005f54:	b5b0      	push	{r4, r5, r7, lr}
 8005f56:	b082      	sub	sp, #8
 8005f58:	af00      	add	r7, sp, #0
 8005f5a:	6078      	str	r0, [r7, #4]
 8005f5c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005f5e:	6878      	ldr	r0, [r7, #4]
 8005f60:	f000 fd1b 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005f64:	4604      	mov	r4, r0
 8005f66:	6838      	ldr	r0, [r7, #0]
 8005f68:	f7fb ff7a 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005f6c:	4603      	mov	r3, r0
 8005f6e:	4619      	mov	r1, r3
 8005f70:	4620      	mov	r0, r4
 8005f72:	f7ff ffd3 	bl	8005f1c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005f76:	462b      	mov	r3, r5
      }
 8005f78:	4618      	mov	r0, r3
 8005f7a:	3708      	adds	r7, #8
 8005f7c:	46bd      	mov	sp, r7
 8005f7e:	bdb0      	pop	{r4, r5, r7, pc}

08005f80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005f80:	b5b0      	push	{r4, r5, r7, lr}
 8005f82:	b082      	sub	sp, #8
 8005f84:	af00      	add	r7, sp, #0
 8005f86:	6078      	str	r0, [r7, #4]
 8005f88:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005f8a:	6878      	ldr	r0, [r7, #4]
 8005f8c:	f000 fd05 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005f90:	4604      	mov	r4, r0
 8005f92:	6838      	ldr	r0, [r7, #0]
 8005f94:	f7fb ff64 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005f98:	4603      	mov	r3, r0
 8005f9a:	4619      	mov	r1, r3
 8005f9c:	4620      	mov	r0, r4
 8005f9e:	f7ff ffd9 	bl	8005f54 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005fa2:	462b      	mov	r3, r5
      }
 8005fa4:	4618      	mov	r0, r3
 8005fa6:	3708      	adds	r7, #8
 8005fa8:	46bd      	mov	sp, r7
 8005faa:	bdb0      	pop	{r4, r5, r7, pc}

08005fac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8005fac:	b580      	push	{r7, lr}
 8005fae:	b082      	sub	sp, #8
 8005fb0:	af00      	add	r7, sp, #0
 8005fb2:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8005fb4:	6878      	ldr	r0, [r7, #4]
 8005fb6:	f7fb ff53 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005fba:	4603      	mov	r3, r0
 8005fbc:	4618      	mov	r0, r3
 8005fbe:	f7fd fe4b 	bl	8003c58 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8005fc2:	4603      	mov	r3, r0
	}
 8005fc4:	4618      	mov	r0, r3
 8005fc6:	3708      	adds	r7, #8
 8005fc8:	46bd      	mov	sp, r7
 8005fca:	bd80      	pop	{r7, pc}

08005fcc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8005fcc:	b5b0      	push	{r4, r5, r7, lr}
 8005fce:	b084      	sub	sp, #16
 8005fd0:	af00      	add	r7, sp, #0
 8005fd2:	6078      	str	r0, [r7, #4]
 8005fd4:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005fd6:	6878      	ldr	r0, [r7, #4]
 8005fd8:	f000 fcdf 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005fdc:	4604      	mov	r4, r0
 8005fde:	6838      	ldr	r0, [r7, #0]
 8005fe0:	f7fb ff3e 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005fe4:	4603      	mov	r3, r0
 8005fe6:	4618      	mov	r0, r3
 8005fe8:	f7ff ffe0 	bl	8005fac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESO_EEDcOSJ_>
 8005fec:	4601      	mov	r1, r0
 8005fee:	f107 030c 	add.w	r3, r7, #12
 8005ff2:	461a      	mov	r2, r3
 8005ff4:	4620      	mov	r0, r4
 8005ff6:	f000 fd53 	bl	8006aa0 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 8005ffa:	462b      	mov	r3, r5
      }
 8005ffc:	4618      	mov	r0, r3
 8005ffe:	3710      	adds	r7, #16
 8006000:	46bd      	mov	sp, r7
 8006002:	bdb0      	pop	{r4, r5, r7, pc}

08006004 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8006004:	b5b0      	push	{r4, r5, r7, lr}
 8006006:	b082      	sub	sp, #8
 8006008:	af00      	add	r7, sp, #0
 800600a:	6078      	str	r0, [r7, #4]
 800600c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800600e:	6878      	ldr	r0, [r7, #4]
 8006010:	f000 fcc3 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006014:	4604      	mov	r4, r0
 8006016:	6838      	ldr	r0, [r7, #0]
 8006018:	f7fb ff22 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800601c:	4603      	mov	r3, r0
 800601e:	4619      	mov	r1, r3
 8006020:	4620      	mov	r0, r4
 8006022:	f7ff ffd3 	bl	8005fcc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8006026:	462b      	mov	r3, r5
      }
 8006028:	4618      	mov	r0, r3
 800602a:	3708      	adds	r7, #8
 800602c:	46bd      	mov	sp, r7
 800602e:	bdb0      	pop	{r4, r5, r7, pc}

08006030 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8006030:	b5b0      	push	{r4, r5, r7, lr}
 8006032:	b082      	sub	sp, #8
 8006034:	af00      	add	r7, sp, #0
 8006036:	6078      	str	r0, [r7, #4]
 8006038:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800603a:	6878      	ldr	r0, [r7, #4]
 800603c:	f000 fcad 	bl	800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006040:	4604      	mov	r4, r0
 8006042:	6838      	ldr	r0, [r7, #0]
 8006044:	f7fb ff0c 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8006048:	4603      	mov	r3, r0
 800604a:	4619      	mov	r1, r3
 800604c:	4620      	mov	r0, r4
 800604e:	f7ff ffd9 	bl	8006004 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8006052:	462b      	mov	r3, r5
      }
 8006054:	4618      	mov	r0, r3
 8006056:	3708      	adds	r7, #8
 8006058:	46bd      	mov	sp, r7
 800605a:	bdb0      	pop	{r4, r5, r7, pc}

0800605c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSP_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 800605c:	b580      	push	{r7, lr}
 800605e:	b082      	sub	sp, #8
 8006060:	af00      	add	r7, sp, #0
 8006062:	6078      	str	r0, [r7, #4]
 8006064:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8006066:	683b      	ldr	r3, [r7, #0]
 8006068:	009b      	lsls	r3, r3, #2
 800606a:	687a      	ldr	r2, [r7, #4]
 800606c:	4413      	add	r3, r2
 800606e:	4618      	mov	r0, r3
 8006070:	f000 fd34 	bl	8006adc <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 8006074:	4603      	mov	r3, r0
	}
 8006076:	4618      	mov	r0, r3
 8006078:	3708      	adds	r7, #8
 800607a:	46bd      	mov	sp, r7
 800607c:	bd80      	pop	{r7, pc}
	...

08006080 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8006080:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006082:	b085      	sub	sp, #20
 8006084:	af00      	add	r7, sp, #0
 8006086:	6078      	str	r0, [r7, #4]
 8006088:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800608a:	4b0f      	ldr	r3, [pc, #60]	; (80060c8 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_+0x48>)
 800608c:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800608e:	6838      	ldr	r0, [r7, #0]
 8006090:	f7fb fa3c 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8006094:	4603      	mov	r3, r0
 8006096:	4619      	mov	r1, r3
 8006098:	68f8      	ldr	r0, [r7, #12]
 800609a:	f7ff ffdf 	bl	800605c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSP_jDpT_>
 800609e:	4603      	mov	r3, r0
 80060a0:	681b      	ldr	r3, [r3, #0]
 80060a2:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 80060a4:	68bc      	ldr	r4, [r7, #8]
 80060a6:	6878      	ldr	r0, [r7, #4]
 80060a8:	f000 fd23 	bl	8006af2 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80060ac:	4605      	mov	r5, r0
 80060ae:	6838      	ldr	r0, [r7, #0]
 80060b0:	f7fb fed6 	bl	8001e60 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80060b4:	4603      	mov	r3, r0
 80060b6:	4619      	mov	r1, r3
 80060b8:	4628      	mov	r0, r5
 80060ba:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 80060bc:	4633      	mov	r3, r6
    }
 80060be:	4618      	mov	r0, r3
 80060c0:	3714      	adds	r7, #20
 80060c2:	46bd      	mov	sp, r7
 80060c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80060c6:	bf00      	nop
 80060c8:	08027df4 	.word	0x08027df4

080060cc <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>:
      operator=(_Move_assign_base&& __rhs)
 80060cc:	b580      	push	{r7, lr}
 80060ce:	b084      	sub	sp, #16
 80060d0:	af00      	add	r7, sp, #0
 80060d2:	6078      	str	r0, [r7, #4]
 80060d4:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	60fb      	str	r3, [r7, #12]
 80060da:	6838      	ldr	r0, [r7, #0]
 80060dc:	f7ff fdfb 	bl	8005cd6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 80060e0:	4602      	mov	r2, r0
 80060e2:	f107 030c 	add.w	r3, r7, #12
 80060e6:	4611      	mov	r1, r2
 80060e8:	4618      	mov	r0, r3
 80060ea:	f7ff ffc9 	bl	8006080 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>
	return *this;
 80060ee:	687b      	ldr	r3, [r7, #4]
      }
 80060f0:	4618      	mov	r0, r3
 80060f2:	3710      	adds	r7, #16
 80060f4:	46bd      	mov	sp, r7
 80060f6:	bd80      	pop	{r7, pc}

080060f8 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E27_S_propagate_on_copy_assignEv>:
    static constexpr bool _S_propagate_on_copy_assign()
 80060f8:	b480      	push	{r7}
 80060fa:	af00      	add	r7, sp, #0
    { return _Base_type::propagate_on_container_copy_assignment::value; }
 80060fc:	2300      	movs	r3, #0
 80060fe:	4618      	mov	r0, r3
 8006100:	46bd      	mov	sp, r7
 8006102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006106:	4770      	bx	lr

08006108 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_>:
      return __first;
    }

  template<typename _Tp, typename _Alloc>
    vector<_Tp, _Alloc>&
    vector<_Tp, _Alloc>::
 8006108:	b5f0      	push	{r4, r5, r6, r7, lr}
 800610a:	b085      	sub	sp, #20
 800610c:	af00      	add	r7, sp, #0
 800610e:	6078      	str	r0, [r7, #4]
 8006110:	6039      	str	r1, [r7, #0]
    operator=(const vector<_Tp, _Alloc>& __x)
    {
      if (&__x != this)
 8006112:	683a      	ldr	r2, [r7, #0]
 8006114:	687b      	ldr	r3, [r7, #4]
 8006116:	429a      	cmp	r2, r3
 8006118:	f000 80e6 	beq.w	80062e8 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1e0>
	{
	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
#if __cplusplus >= 201103L
	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 800611c:	f7ff ffec 	bl	80060f8 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E27_S_propagate_on_copy_assignEv>
 8006120:	4603      	mov	r3, r0
 8006122:	2b00      	cmp	r3, #0
 8006124:	d043      	beq.n	80061ae <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0xa6>
	    {
	      if (!_Alloc_traits::_S_always_equal()
 8006126:	f7fb f8af 	bl	8001288 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E15_S_always_equalEv>
 800612a:	4603      	mov	r3, r0
 800612c:	f083 0301 	eor.w	r3, r3, #1
 8006130:	b2db      	uxtb	r3, r3
	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 8006132:	2b00      	cmp	r3, #0
 8006134:	d012      	beq.n	800615c <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x54>
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	4618      	mov	r0, r3
 800613a:	f000 fce5 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800613e:	4604      	mov	r4, r0
 8006140:	683b      	ldr	r3, [r7, #0]
 8006142:	4618      	mov	r0, r3
 8006144:	f000 fceb 	bl	8006b1e <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8006148:	4603      	mov	r3, r0
 800614a:	4619      	mov	r1, r3
 800614c:	4620      	mov	r0, r4
 800614e:	f000 fcf1 	bl	8006b34 <_ZStneRKSaI6SymbolES2_>
 8006152:	4603      	mov	r3, r0
 8006154:	2b00      	cmp	r3, #0
 8006156:	d001      	beq.n	800615c <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x54>
 8006158:	2301      	movs	r3, #1
 800615a:	e000      	b.n	800615e <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x56>
 800615c:	2300      	movs	r3, #0
	      if (!_Alloc_traits::_S_always_equal()
 800615e:	2b00      	cmp	r3, #0
 8006160:	d017      	beq.n	8006192 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x8a>
	        {
		  // replacement allocator cannot free existing storage
		  this->clear();
 8006162:	6878      	ldr	r0, [r7, #4]
 8006164:	f000 fcf2 	bl	8006b4c <_ZNSt6vectorI6SymbolSaIS0_EE5clearEv>
		  _M_deallocate(this->_M_impl._M_start,
 8006168:	6878      	ldr	r0, [r7, #4]
 800616a:	687b      	ldr	r3, [r7, #4]
 800616c:	6819      	ldr	r1, [r3, #0]
				this->_M_impl._M_end_of_storage
 800616e:	687b      	ldr	r3, [r7, #4]
 8006170:	689a      	ldr	r2, [r3, #8]
				- this->_M_impl._M_start);
 8006172:	687b      	ldr	r3, [r7, #4]
 8006174:	681b      	ldr	r3, [r3, #0]
 8006176:	1ad3      	subs	r3, r2, r3
 8006178:	115b      	asrs	r3, r3, #5
		  _M_deallocate(this->_M_impl._M_start,
 800617a:	461a      	mov	r2, r3
 800617c:	f000 fcf4 	bl	8006b68 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
		  this->_M_impl._M_start = nullptr;
 8006180:	687b      	ldr	r3, [r7, #4]
 8006182:	2200      	movs	r2, #0
 8006184:	601a      	str	r2, [r3, #0]
		  this->_M_impl._M_finish = nullptr;
 8006186:	687b      	ldr	r3, [r7, #4]
 8006188:	2200      	movs	r2, #0
 800618a:	605a      	str	r2, [r3, #4]
		  this->_M_impl._M_end_of_storage = nullptr;
 800618c:	687b      	ldr	r3, [r7, #4]
 800618e:	2200      	movs	r2, #0
 8006190:	609a      	str	r2, [r3, #8]
		}
	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 8006192:	687b      	ldr	r3, [r7, #4]
 8006194:	4618      	mov	r0, r3
 8006196:	f000 fcb7 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800619a:	4604      	mov	r4, r0
 800619c:	683b      	ldr	r3, [r7, #0]
 800619e:	4618      	mov	r0, r3
 80061a0:	f000 fcbd 	bl	8006b1e <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80061a4:	4603      	mov	r3, r0
 80061a6:	4619      	mov	r1, r3
 80061a8:	4620      	mov	r0, r4
 80061aa:	f000 fcf0 	bl	8006b8e <_ZSt15__alloc_on_copyISaI6SymbolEEvRT_RKS2_>
				   __x._M_get_Tp_allocator());
	    }
#endif
	  const size_type __xlen = __x.size();
 80061ae:	6838      	ldr	r0, [r7, #0]
 80061b0:	f000 fcfb 	bl	8006baa <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 80061b4:	60f8      	str	r0, [r7, #12]
	  if (__xlen > capacity())
 80061b6:	6878      	ldr	r0, [r7, #4]
 80061b8:	f000 fd07 	bl	8006bca <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>
 80061bc:	4602      	mov	r2, r0
 80061be:	68fb      	ldr	r3, [r7, #12]
 80061c0:	4293      	cmp	r3, r2
 80061c2:	bf8c      	ite	hi
 80061c4:	2301      	movhi	r3, #1
 80061c6:	2300      	movls	r3, #0
 80061c8:	b2db      	uxtb	r3, r3
 80061ca:	2b00      	cmp	r3, #0
 80061cc:	d032      	beq.n	8006234 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x12c>
	    {
	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 80061ce:	6838      	ldr	r0, [r7, #0]
 80061d0:	f000 fd0b 	bl	8006bea <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 80061d4:	4604      	mov	r4, r0
 80061d6:	6838      	ldr	r0, [r7, #0]
 80061d8:	f000 fd1b 	bl	8006c12 <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 80061dc:	4603      	mov	r3, r0
 80061de:	4622      	mov	r2, r4
 80061e0:	68f9      	ldr	r1, [r7, #12]
 80061e2:	6878      	ldr	r0, [r7, #4]
 80061e4:	f000 fd29 	bl	8006c3a <_ZNSt6vectorI6SymbolSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_>
 80061e8:	60b8      	str	r0, [r7, #8]
						   __x.end());
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80061ea:	687b      	ldr	r3, [r7, #4]
 80061ec:	681c      	ldr	r4, [r3, #0]
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	685d      	ldr	r5, [r3, #4]
			    _M_get_Tp_allocator());
 80061f2:	687b      	ldr	r3, [r7, #4]
 80061f4:	4618      	mov	r0, r3
 80061f6:	f000 fc87 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80061fa:	4603      	mov	r3, r0
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80061fc:	461a      	mov	r2, r3
 80061fe:	4629      	mov	r1, r5
 8006200:	4620      	mov	r0, r4
 8006202:	f000 fd36 	bl	8006c72 <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
	      _M_deallocate(this->_M_impl._M_start,
 8006206:	6878      	ldr	r0, [r7, #4]
 8006208:	687b      	ldr	r3, [r7, #4]
 800620a:	6819      	ldr	r1, [r3, #0]
			    this->_M_impl._M_end_of_storage
 800620c:	687b      	ldr	r3, [r7, #4]
 800620e:	689a      	ldr	r2, [r3, #8]
			    - this->_M_impl._M_start);
 8006210:	687b      	ldr	r3, [r7, #4]
 8006212:	681b      	ldr	r3, [r3, #0]
 8006214:	1ad3      	subs	r3, r2, r3
 8006216:	115b      	asrs	r3, r3, #5
	      _M_deallocate(this->_M_impl._M_start,
 8006218:	461a      	mov	r2, r3
 800621a:	f000 fca5 	bl	8006b68 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
	      this->_M_impl._M_start = __tmp;
 800621e:	687b      	ldr	r3, [r7, #4]
 8006220:	68ba      	ldr	r2, [r7, #8]
 8006222:	601a      	str	r2, [r3, #0]
	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 8006224:	687b      	ldr	r3, [r7, #4]
 8006226:	681a      	ldr	r2, [r3, #0]
 8006228:	68fb      	ldr	r3, [r7, #12]
 800622a:	015b      	lsls	r3, r3, #5
 800622c:	441a      	add	r2, r3
 800622e:	687b      	ldr	r3, [r7, #4]
 8006230:	609a      	str	r2, [r3, #8]
 8006232:	e052      	b.n	80062da <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1d2>
	    }
	  else if (size() >= __xlen)
 8006234:	6878      	ldr	r0, [r7, #4]
 8006236:	f000 fcb8 	bl	8006baa <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 800623a:	4602      	mov	r2, r0
 800623c:	68fb      	ldr	r3, [r7, #12]
 800623e:	4293      	cmp	r3, r2
 8006240:	bf94      	ite	ls
 8006242:	2301      	movls	r3, #1
 8006244:	2300      	movhi	r3, #0
 8006246:	b2db      	uxtb	r3, r3
 8006248:	2b00      	cmp	r3, #0
 800624a:	d020      	beq.n	800628e <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x186>
	    {
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 800624c:	6838      	ldr	r0, [r7, #0]
 800624e:	f000 fccc 	bl	8006bea <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 8006252:	4604      	mov	r4, r0
 8006254:	6838      	ldr	r0, [r7, #0]
 8006256:	f000 fcdc 	bl	8006c12 <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 800625a:	4605      	mov	r5, r0
 800625c:	6878      	ldr	r0, [r7, #4]
 800625e:	f000 fd16 	bl	8006c8e <_ZNSt6vectorI6SymbolSaIS0_EE5beginEv>
 8006262:	4603      	mov	r3, r0
 8006264:	461a      	mov	r2, r3
 8006266:	4629      	mov	r1, r5
 8006268:	4620      	mov	r0, r4
 800626a:	f000 fd20 	bl	8006cae <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_>
 800626e:	4604      	mov	r4, r0
 8006270:	6878      	ldr	r0, [r7, #4]
 8006272:	f000 fd34 	bl	8006cde <_ZNSt6vectorI6SymbolSaIS0_EE3endEv>
 8006276:	4605      	mov	r5, r0
			    end(), _M_get_Tp_allocator());
 8006278:	687b      	ldr	r3, [r7, #4]
 800627a:	4618      	mov	r0, r3
 800627c:	f000 fc44 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8006280:	4603      	mov	r3, r0
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 8006282:	461a      	mov	r2, r3
 8006284:	4629      	mov	r1, r5
 8006286:	4620      	mov	r0, r4
 8006288:	f000 fd3a 	bl	8006d00 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E>
 800628c:	e025      	b.n	80062da <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1d2>
	    }
	  else
	    {
	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 800628e:	683b      	ldr	r3, [r7, #0]
 8006290:	681d      	ldr	r5, [r3, #0]
 8006292:	683b      	ldr	r3, [r7, #0]
 8006294:	681c      	ldr	r4, [r3, #0]
 8006296:	6878      	ldr	r0, [r7, #4]
 8006298:	f000 fc87 	bl	8006baa <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 800629c:	4603      	mov	r3, r0
 800629e:	015b      	lsls	r3, r3, #5
 80062a0:	18e1      	adds	r1, r4, r3
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	681b      	ldr	r3, [r3, #0]
 80062a6:	461a      	mov	r2, r3
 80062a8:	4628      	mov	r0, r5
 80062aa:	f000 fd37 	bl	8006d1c <_ZSt4copyIP6SymbolS1_ET0_T_S3_S2_>
			this->_M_impl._M_start);
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 80062ae:	683b      	ldr	r3, [r7, #0]
 80062b0:	681c      	ldr	r4, [r3, #0]
 80062b2:	6878      	ldr	r0, [r7, #4]
 80062b4:	f000 fc79 	bl	8006baa <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 80062b8:	4603      	mov	r3, r0
 80062ba:	015b      	lsls	r3, r3, #5
 80062bc:	441c      	add	r4, r3
					  __x._M_impl._M_finish,
 80062be:	683b      	ldr	r3, [r7, #0]
 80062c0:	685d      	ldr	r5, [r3, #4]
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 80062c2:	687b      	ldr	r3, [r7, #4]
 80062c4:	685e      	ldr	r6, [r3, #4]
					  this->_M_impl._M_finish,
					  _M_get_Tp_allocator());
 80062c6:	687b      	ldr	r3, [r7, #4]
 80062c8:	4618      	mov	r0, r3
 80062ca:	f000 fc1d 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80062ce:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 80062d0:	4632      	mov	r2, r6
 80062d2:	4629      	mov	r1, r5
 80062d4:	4620      	mov	r0, r4
 80062d6:	f000 fd39 	bl	8006d4c <_ZSt22__uninitialized_copy_aIP6SymbolS1_S0_ET0_T_S3_S2_RSaIT1_E>
	    }
	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 80062da:	687b      	ldr	r3, [r7, #4]
 80062dc:	681a      	ldr	r2, [r3, #0]
 80062de:	68fb      	ldr	r3, [r7, #12]
 80062e0:	015b      	lsls	r3, r3, #5
 80062e2:	441a      	add	r2, r3
 80062e4:	687b      	ldr	r3, [r7, #4]
 80062e6:	605a      	str	r2, [r3, #4]
	}
      return *this;
 80062e8:	687b      	ldr	r3, [r7, #4]
    }
 80062ea:	4618      	mov	r0, r3
 80062ec:	3714      	adds	r7, #20
 80062ee:	46bd      	mov	sp, r7
 80062f0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080062f2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj4EJRKS9_ES9_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 80062f2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80062f4:	b085      	sub	sp, #20
 80062f6:	af00      	add	r7, sp, #0
 80062f8:	60f8      	str	r0, [r7, #12]
 80062fa:	7239      	strb	r1, [r7, #8]
 80062fc:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 80062fe:	68fc      	ldr	r4, [r7, #12]
 8006300:	6878      	ldr	r0, [r7, #4]
 8006302:	f7fd fe51 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8006306:	4603      	mov	r3, r0
 8006308:	461a      	mov	r2, r3
 800630a:	4631      	mov	r1, r6
 800630c:	4620      	mov	r0, r4
 800630e:	f000 fd72 	bl	8006df6 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8006312:	4629      	mov	r1, r5
 8006314:	68f8      	ldr	r0, [r7, #12]
 8006316:	f000 fb34 	bl	8006982 <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 800631a:	68fb      	ldr	r3, [r7, #12]
 800631c:	4618      	mov	r0, r3
 800631e:	3714      	adds	r7, #20
 8006320:	46bd      	mov	sp, r7
 8006322:	bdf0      	pop	{r4, r5, r6, r7, pc}

08006324 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS9_vvS9_vEEOT_>:
	variant(_Tp&& __t)
 8006324:	b590      	push	{r4, r7, lr}
 8006326:	b083      	sub	sp, #12
 8006328:	af00      	add	r7, sp, #0
 800632a:	6078      	str	r0, [r7, #4]
 800632c:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 800632e:	6838      	ldr	r0, [r7, #0]
 8006330:	f7fd fe3a 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8006334:	4603      	mov	r3, r0
 8006336:	461a      	mov	r2, r3
 8006338:	4621      	mov	r1, r4
 800633a:	6878      	ldr	r0, [r7, #4]
 800633c:	f7ff ffd9 	bl	80062f2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj4EJRKS9_ES9_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8006340:	687b      	ldr	r3, [r7, #4]
 8006342:	4618      	mov	r0, r3
 8006344:	370c      	adds	r7, #12
 8006346:	46bd      	mov	sp, r7
 8006348:	bd90      	pop	{r4, r7, pc}

0800634a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 800634a:	b480      	push	{r7}
 800634c:	b083      	sub	sp, #12
 800634e:	af00      	add	r7, sp, #0
 8006350:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	4618      	mov	r0, r3
 8006356:	370c      	adds	r7, #12
 8006358:	46bd      	mov	sp, r7
 800635a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800635e:	4770      	bx	lr

08006360 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>:
      _M_valptr()
 8006360:	b580      	push	{r7, lr}
 8006362:	b082      	sub	sp, #8
 8006364:	af00      	add	r7, sp, #0
 8006366:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8006368:	687b      	ldr	r3, [r7, #4]
 800636a:	3310      	adds	r3, #16
 800636c:	4618      	mov	r0, r3
 800636e:	f000 fd57 	bl	8006e20 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>
 8006372:	4603      	mov	r3, r0
 8006374:	4618      	mov	r0, r3
 8006376:	3708      	adds	r7, #8
 8006378:	46bd      	mov	sp, r7
 800637a:	bd80      	pop	{r7, pc}

0800637c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE7destroyIS4_EEvRS6_PT_>:
       *
       *  Calls @c __a.destroy(__p).
      */
      template<typename _Up>
	static void
	destroy(allocator_type& __a, _Up* __p)
 800637c:	b580      	push	{r7, lr}
 800637e:	b082      	sub	sp, #8
 8006380:	af00      	add	r7, sp, #0
 8006382:	6078      	str	r0, [r7, #4]
 8006384:	6039      	str	r1, [r7, #0]
	noexcept(noexcept(__a.destroy(__p)))
	{ __a.destroy(__p); }
 8006386:	6839      	ldr	r1, [r7, #0]
 8006388:	6878      	ldr	r0, [r7, #4]
 800638a:	f000 fd55 	bl	8006e38 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE7destroyIS5_EEvPT_>
 800638e:	bf00      	nop
 8006390:	3708      	adds	r7, #8
 8006392:	46bd      	mov	sp, r7
 8006394:	bd80      	pop	{r7, pc}

08006396 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8006396:	b580      	push	{r7, lr}
 8006398:	b084      	sub	sp, #16
 800639a:	af00      	add	r7, sp, #0
 800639c:	60f8      	str	r0, [r7, #12]
 800639e:	60b9      	str	r1, [r7, #8]
 80063a0:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80063a2:	687a      	ldr	r2, [r7, #4]
 80063a4:	68b9      	ldr	r1, [r7, #8]
 80063a6:	68f8      	ldr	r0, [r7, #12]
 80063a8:	f000 fd51 	bl	8006e4e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE10deallocateEPS6_j>
 80063ac:	bf00      	nop
 80063ae:	3710      	adds	r7, #16
 80063b0:	46bd      	mov	sp, r7
 80063b2:	bd80      	pop	{r7, pc}

080063b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>:
      _S_key(_Const_Link_type __x)
 80063b4:	b580      	push	{r7, lr}
 80063b6:	b084      	sub	sp, #16
 80063b8:	af00      	add	r7, sp, #0
 80063ba:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 80063bc:	6878      	ldr	r0, [r7, #4]
 80063be:	f000 fd52 	bl	8006e66 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 80063c2:	4602      	mov	r2, r0
 80063c4:	f107 030c 	add.w	r3, r7, #12
 80063c8:	4611      	mov	r1, r2
 80063ca:	4618      	mov	r0, r3
 80063cc:	f7fe f812 	bl	80043f4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 80063d0:	4603      	mov	r3, r0
      }
 80063d2:	4618      	mov	r0, r3
 80063d4:	3710      	adds	r7, #16
 80063d6:	46bd      	mov	sp, r7
 80063d8:	bd80      	pop	{r7, pc}

080063da <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80063da:	b480      	push	{r7}
 80063dc:	b083      	sub	sp, #12
 80063de:	af00      	add	r7, sp, #0
 80063e0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80063e2:	687b      	ldr	r3, [r7, #4]
 80063e4:	4618      	mov	r0, r3
 80063e6:	370c      	adds	r7, #12
 80063e8:	46bd      	mov	sp, r7
 80063ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063ee:	4770      	bx	lr

080063f0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80063f0:	b580      	push	{r7, lr}
 80063f2:	b084      	sub	sp, #16
 80063f4:	af00      	add	r7, sp, #0
 80063f6:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 80063f8:	687b      	ldr	r3, [r7, #4]
 80063fa:	68da      	ldr	r2, [r3, #12]
 80063fc:	f107 030c 	add.w	r3, r7, #12
 8006400:	4611      	mov	r1, r2
 8006402:	4618      	mov	r0, r3
 8006404:	f7fd fec4 	bl	8004190 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8006408:	68fb      	ldr	r3, [r7, #12]
 800640a:	4618      	mov	r0, r3
 800640c:	3710      	adds	r7, #16
 800640e:	46bd      	mov	sp, r7
 8006410:	bd80      	pop	{r7, pc}

08006412 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc10token_typeEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8006412:	b480      	push	{r7}
 8006414:	b083      	sub	sp, #12
 8006416:	af00      	add	r7, sp, #0
 8006418:	6078      	str	r0, [r7, #4]
 800641a:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 800641c:	687b      	ldr	r3, [r7, #4]
 800641e:	681a      	ldr	r2, [r3, #0]
 8006420:	683b      	ldr	r3, [r7, #0]
 8006422:	681b      	ldr	r3, [r3, #0]
 8006424:	429a      	cmp	r2, r3
 8006426:	bf0c      	ite	eq
 8006428:	2301      	moveq	r3, #1
 800642a:	2300      	movne	r3, #0
 800642c:	b2db      	uxtb	r3, r3
 800642e:	4618      	mov	r0, r3
 8006430:	370c      	adds	r7, #12
 8006432:	46bd      	mov	sp, r7
 8006434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006438:	4770      	bx	lr

0800643a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 800643a:	b580      	push	{r7, lr}
 800643c:	b084      	sub	sp, #16
 800643e:	af00      	add	r7, sp, #0
 8006440:	60f8      	str	r0, [r7, #12]
 8006442:	60b9      	str	r1, [r7, #8]
 8006444:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8006446:	68b8      	ldr	r0, [r7, #8]
 8006448:	f000 fd1b 	bl	8006e82 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc10token_typeEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800644c:	4603      	mov	r3, r0
 800644e:	681a      	ldr	r2, [r3, #0]
 8006450:	68fb      	ldr	r3, [r7, #12]
 8006452:	601a      	str	r2, [r3, #0]
 8006454:	6878      	ldr	r0, [r7, #4]
 8006456:	f7ff ffc0 	bl	80063da <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 800645a:	4603      	mov	r3, r0
 800645c:	681a      	ldr	r2, [r3, #0]
 800645e:	68fb      	ldr	r3, [r7, #12]
 8006460:	605a      	str	r2, [r3, #4]
 8006462:	68fb      	ldr	r3, [r7, #12]
 8006464:	4618      	mov	r0, r3
 8006466:	3710      	adds	r7, #16
 8006468:	46bd      	mov	sp, r7
 800646a:	bd80      	pop	{r7, pc}

0800646c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_create_node(_Args&&... __args)
 800646c:	b580      	push	{r7, lr}
 800646e:	b084      	sub	sp, #16
 8006470:	af00      	add	r7, sp, #0
 8006472:	6078      	str	r0, [r7, #4]
 8006474:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8006476:	6878      	ldr	r0, [r7, #4]
 8006478:	f000 fd0e 	bl	8006e98 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>
 800647c:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 800647e:	6838      	ldr	r0, [r7, #0]
 8006480:	f7fd ffc4 	bl	800440c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8006484:	4603      	mov	r3, r0
 8006486:	461a      	mov	r2, r3
 8006488:	68f9      	ldr	r1, [r7, #12]
 800648a:	6878      	ldr	r0, [r7, #4]
 800648c:	f000 fd15 	bl	8006eba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>
	  return __tmp;
 8006490:	68fb      	ldr	r3, [r7, #12]
	}
 8006492:	4618      	mov	r0, r3
 8006494:	3710      	adds	r7, #16
 8006496:	46bd      	mov	sp, r7
 8006498:	bd80      	pop	{r7, pc}

0800649a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 800649a:	b480      	push	{r7}
 800649c:	b083      	sub	sp, #12
 800649e:	af00      	add	r7, sp, #0
 80064a0:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80064a2:	687b      	ldr	r3, [r7, #4]
 80064a4:	4618      	mov	r0, r3
 80064a6:	370c      	adds	r7, #12
 80064a8:	46bd      	mov	sp, r7
 80064aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064ae:	4770      	bx	lr

080064b0 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>:
      _M_valptr()
 80064b0:	b580      	push	{r7, lr}
 80064b2:	b082      	sub	sp, #8
 80064b4:	af00      	add	r7, sp, #0
 80064b6:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80064b8:	687b      	ldr	r3, [r7, #4]
 80064ba:	3310      	adds	r3, #16
 80064bc:	4618      	mov	r0, r3
 80064be:	f000 fd1c 	bl	8006efa <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>
 80064c2:	4603      	mov	r3, r0
 80064c4:	4618      	mov	r0, r3
 80064c6:	3708      	adds	r7, #8
 80064c8:	46bd      	mov	sp, r7
 80064ca:	bd80      	pop	{r7, pc}

080064cc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE7destroyISA_EEvRSC_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 80064cc:	b580      	push	{r7, lr}
 80064ce:	b082      	sub	sp, #8
 80064d0:	af00      	add	r7, sp, #0
 80064d2:	6078      	str	r0, [r7, #4]
 80064d4:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 80064d6:	6839      	ldr	r1, [r7, #0]
 80064d8:	6878      	ldr	r0, [r7, #4]
 80064da:	f000 fd1a 	bl	8006f12 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE7destroyISB_EEvPT_>
 80064de:	bf00      	nop
 80064e0:	3708      	adds	r7, #8
 80064e2:	46bd      	mov	sp, r7
 80064e4:	bd80      	pop	{r7, pc}

080064e6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE10deallocateERSC_PSB_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 80064e6:	b580      	push	{r7, lr}
 80064e8:	b084      	sub	sp, #16
 80064ea:	af00      	add	r7, sp, #0
 80064ec:	60f8      	str	r0, [r7, #12]
 80064ee:	60b9      	str	r1, [r7, #8]
 80064f0:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80064f2:	687a      	ldr	r2, [r7, #4]
 80064f4:	68b9      	ldr	r1, [r7, #8]
 80064f6:	68f8      	ldr	r0, [r7, #12]
 80064f8:	f000 fd17 	bl	8006f2a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE10deallocateEPSC_j>
 80064fc:	bf00      	nop
 80064fe:	3710      	adds	r7, #16
 8006500:	46bd      	mov	sp, r7
 8006502:	bd80      	pop	{r7, pc}

08006504 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>:
      _S_key(_Const_Link_type __x)
 8006504:	b580      	push	{r7, lr}
 8006506:	b084      	sub	sp, #16
 8006508:	af00      	add	r7, sp, #0
 800650a:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 800650c:	6878      	ldr	r0, [r7, #4]
 800650e:	f000 fd18 	bl	8006f42 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8006512:	4602      	mov	r2, r0
 8006514:	f107 030c 	add.w	r3, r7, #12
 8006518:	4611      	mov	r1, r2
 800651a:	4618      	mov	r0, r3
 800651c:	f7fe f960 	bl	80047e0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 8006520:	4603      	mov	r3, r0
      }
 8006522:	4618      	mov	r0, r3
 8006524:	3710      	adds	r7, #16
 8006526:	46bd      	mov	sp, r7
 8006528:	bd80      	pop	{r7, pc}

0800652a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 800652a:	b580      	push	{r7, lr}
 800652c:	b082      	sub	sp, #8
 800652e:	af00      	add	r7, sp, #0
 8006530:	6078      	str	r0, [r7, #4]
 8006532:	6039      	str	r1, [r7, #0]
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
 8006534:	6839      	ldr	r1, [r7, #0]
 8006536:	6878      	ldr	r0, [r7, #4]
 8006538:	f01c fbf4 	bl	8022d24 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
 800653c:	4603      	mov	r3, r0
 800653e:	0fdb      	lsrs	r3, r3, #31
 8006540:	b2db      	uxtb	r3, r3
 8006542:	4618      	mov	r0, r3
 8006544:	3708      	adds	r7, #8
 8006546:	46bd      	mov	sp, r7
 8006548:	bd80      	pop	{r7, pc}

0800654a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800654a:	b580      	push	{r7, lr}
 800654c:	b084      	sub	sp, #16
 800654e:	af00      	add	r7, sp, #0
 8006550:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 8006552:	687b      	ldr	r3, [r7, #4]
 8006554:	68da      	ldr	r2, [r3, #12]
 8006556:	f107 030c 	add.w	r3, r7, #12
 800655a:	4611      	mov	r1, r2
 800655c:	4618      	mov	r0, r3
 800655e:	f7fe f80d 	bl	800457c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8006562:	68fb      	ldr	r3, [r7, #12]
 8006564:	4618      	mov	r0, r3
 8006566:	3710      	adds	r7, #16
 8006568:	46bd      	mov	sp, r7
 800656a:	bd80      	pop	{r7, pc}

0800656c <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800656c:	b480      	push	{r7}
 800656e:	b083      	sub	sp, #12
 8006570:	af00      	add	r7, sp, #0
 8006572:	6078      	str	r0, [r7, #4]
 8006574:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8006576:	687b      	ldr	r3, [r7, #4]
 8006578:	681a      	ldr	r2, [r3, #0]
 800657a:	683b      	ldr	r3, [r7, #0]
 800657c:	681b      	ldr	r3, [r3, #0]
 800657e:	429a      	cmp	r2, r3
 8006580:	bf0c      	ite	eq
 8006582:	2301      	moveq	r3, #1
 8006584:	2300      	movne	r3, #0
 8006586:	b2db      	uxtb	r3, r3
 8006588:	4618      	mov	r0, r3
 800658a:	370c      	adds	r7, #12
 800658c:	46bd      	mov	sp, r7
 800658e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006592:	4770      	bx	lr

08006594 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8006594:	b580      	push	{r7, lr}
 8006596:	b084      	sub	sp, #16
 8006598:	af00      	add	r7, sp, #0
 800659a:	60f8      	str	r0, [r7, #12]
 800659c:	60b9      	str	r1, [r7, #8]
 800659e:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80065a0:	68b8      	ldr	r0, [r7, #8]
 80065a2:	f000 fcdc 	bl	8006f5e <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEOT_RNSt16remove_referenceISE_E4typeE>
 80065a6:	4603      	mov	r3, r0
 80065a8:	681a      	ldr	r2, [r3, #0]
 80065aa:	68fb      	ldr	r3, [r7, #12]
 80065ac:	601a      	str	r2, [r3, #0]
 80065ae:	6878      	ldr	r0, [r7, #4]
 80065b0:	f7ff ff13 	bl	80063da <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 80065b4:	4603      	mov	r3, r0
 80065b6:	681a      	ldr	r2, [r3, #0]
 80065b8:	68fb      	ldr	r3, [r7, #12]
 80065ba:	605a      	str	r2, [r3, #4]
 80065bc:	68fb      	ldr	r3, [r7, #12]
 80065be:	4618      	mov	r0, r3
 80065c0:	3710      	adds	r7, #16
 80065c2:	46bd      	mov	sp, r7
 80065c4:	bd80      	pop	{r7, pc}

080065c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 80065c6:	b580      	push	{r7, lr}
 80065c8:	b084      	sub	sp, #16
 80065ca:	af00      	add	r7, sp, #0
 80065cc:	6078      	str	r0, [r7, #4]
 80065ce:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 80065d0:	6878      	ldr	r0, [r7, #4]
 80065d2:	f000 fccf 	bl	8006f74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 80065d6:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 80065d8:	6838      	ldr	r0, [r7, #0]
 80065da:	f7fe f90d 	bl	80047f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 80065de:	4603      	mov	r3, r0
 80065e0:	461a      	mov	r2, r3
 80065e2:	68f9      	ldr	r1, [r7, #12]
 80065e4:	6878      	ldr	r0, [r7, #4]
 80065e6:	f000 fcd6 	bl	8006f96 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 80065ea:	68fb      	ldr	r3, [r7, #12]
	}
 80065ec:	4618      	mov	r0, r3
 80065ee:	3710      	adds	r7, #16
 80065f0:	46bd      	mov	sp, r7
 80065f2:	bd80      	pop	{r7, pc}

080065f4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 80065f4:	b480      	push	{r7}
 80065f6:	b083      	sub	sp, #12
 80065f8:	af00      	add	r7, sp, #0
 80065fa:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80065fc:	687b      	ldr	r3, [r7, #4]
 80065fe:	4618      	mov	r0, r3
 8006600:	370c      	adds	r7, #12
 8006602:	46bd      	mov	sp, r7
 8006604:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006608:	4770      	bx	lr

0800660a <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>:
      _M_valptr()
 800660a:	b580      	push	{r7, lr}
 800660c:	b082      	sub	sp, #8
 800660e:	af00      	add	r7, sp, #0
 8006610:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8006612:	687b      	ldr	r3, [r7, #4]
 8006614:	3310      	adds	r3, #16
 8006616:	4618      	mov	r0, r3
 8006618:	f000 fcdd 	bl	8006fd6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>
 800661c:	4603      	mov	r3, r0
 800661e:	4618      	mov	r0, r3
 8006620:	3708      	adds	r7, #8
 8006622:	46bd      	mov	sp, r7
 8006624:	bd80      	pop	{r7, pc}

08006626 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE7destroyIS4_EEvRS6_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 8006626:	b580      	push	{r7, lr}
 8006628:	b082      	sub	sp, #8
 800662a:	af00      	add	r7, sp, #0
 800662c:	6078      	str	r0, [r7, #4]
 800662e:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 8006630:	6839      	ldr	r1, [r7, #0]
 8006632:	6878      	ldr	r0, [r7, #4]
 8006634:	f000 fcdb 	bl	8006fee <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE7destroyIS5_EEvPT_>
 8006638:	bf00      	nop
 800663a:	3708      	adds	r7, #8
 800663c:	46bd      	mov	sp, r7
 800663e:	bd80      	pop	{r7, pc}

08006640 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8006640:	b580      	push	{r7, lr}
 8006642:	b084      	sub	sp, #16
 8006644:	af00      	add	r7, sp, #0
 8006646:	60f8      	str	r0, [r7, #12]
 8006648:	60b9      	str	r1, [r7, #8]
 800664a:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800664c:	687a      	ldr	r2, [r7, #4]
 800664e:	68b9      	ldr	r1, [r7, #8]
 8006650:	68f8      	ldr	r0, [r7, #12]
 8006652:	f000 fcd7 	bl	8007004 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE10deallocateEPS6_j>
 8006656:	bf00      	nop
 8006658:	3710      	adds	r7, #16
 800665a:	46bd      	mov	sp, r7
 800665c:	bd80      	pop	{r7, pc}

0800665e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>:
      _S_key(_Const_Link_type __x)
 800665e:	b580      	push	{r7, lr}
 8006660:	b084      	sub	sp, #16
 8006662:	af00      	add	r7, sp, #0
 8006664:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8006666:	6878      	ldr	r0, [r7, #4]
 8006668:	f000 fcd8 	bl	800701c <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 800666c:	4602      	mov	r2, r0
 800666e:	f107 030c 	add.w	r3, r7, #12
 8006672:	4611      	mov	r1, r2
 8006674:	4618      	mov	r0, r3
 8006676:	f7fe fa9d 	bl	8004bb4 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 800667a:	4603      	mov	r3, r0
      }
 800667c:	4618      	mov	r0, r3
 800667e:	3710      	adds	r7, #16
 8006680:	46bd      	mov	sp, r7
 8006682:	bd80      	pop	{r7, pc}

08006684 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8006684:	b580      	push	{r7, lr}
 8006686:	b084      	sub	sp, #16
 8006688:	af00      	add	r7, sp, #0
 800668a:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 800668c:	687b      	ldr	r3, [r7, #4]
 800668e:	68da      	ldr	r2, [r3, #12]
 8006690:	f107 030c 	add.w	r3, r7, #12
 8006694:	4611      	mov	r1, r2
 8006696:	4618      	mov	r0, r3
 8006698:	f7fe f95a 	bl	8004950 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 800669c:	68fb      	ldr	r3, [r7, #12]
 800669e:	4618      	mov	r0, r3
 80066a0:	3710      	adds	r7, #16
 80066a2:	46bd      	mov	sp, r7
 80066a4:	bd80      	pop	{r7, pc}

080066a6 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 80066a6:	b480      	push	{r7}
 80066a8:	b083      	sub	sp, #12
 80066aa:	af00      	add	r7, sp, #0
 80066ac:	6078      	str	r0, [r7, #4]
 80066ae:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 80066b0:	687b      	ldr	r3, [r7, #4]
 80066b2:	681a      	ldr	r2, [r3, #0]
 80066b4:	683b      	ldr	r3, [r7, #0]
 80066b6:	681b      	ldr	r3, [r3, #0]
 80066b8:	429a      	cmp	r2, r3
 80066ba:	bf0c      	ite	eq
 80066bc:	2301      	moveq	r3, #1
 80066be:	2300      	movne	r3, #0
 80066c0:	b2db      	uxtb	r3, r3
 80066c2:	4618      	mov	r0, r3
 80066c4:	370c      	adds	r7, #12
 80066c6:	46bd      	mov	sp, r7
 80066c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066cc:	4770      	bx	lr

080066ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80066ce:	b580      	push	{r7, lr}
 80066d0:	b084      	sub	sp, #16
 80066d2:	af00      	add	r7, sp, #0
 80066d4:	60f8      	str	r0, [r7, #12]
 80066d6:	60b9      	str	r1, [r7, #8]
 80066d8:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80066da:	68b8      	ldr	r0, [r7, #8]
 80066dc:	f000 fcac 	bl	8007038 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80066e0:	4603      	mov	r3, r0
 80066e2:	681a      	ldr	r2, [r3, #0]
 80066e4:	68fb      	ldr	r3, [r7, #12]
 80066e6:	601a      	str	r2, [r3, #0]
 80066e8:	6878      	ldr	r0, [r7, #4]
 80066ea:	f7ff fe76 	bl	80063da <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 80066ee:	4603      	mov	r3, r0
 80066f0:	681a      	ldr	r2, [r3, #0]
 80066f2:	68fb      	ldr	r3, [r7, #12]
 80066f4:	605a      	str	r2, [r3, #4]
 80066f6:	68fb      	ldr	r3, [r7, #12]
 80066f8:	4618      	mov	r0, r3
 80066fa:	3710      	adds	r7, #16
 80066fc:	46bd      	mov	sp, r7
 80066fe:	bd80      	pop	{r7, pc}

08006700 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8006700:	b580      	push	{r7, lr}
 8006702:	b084      	sub	sp, #16
 8006704:	af00      	add	r7, sp, #0
 8006706:	6078      	str	r0, [r7, #4]
 8006708:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 800670a:	6878      	ldr	r0, [r7, #4]
 800670c:	f000 fc9f 	bl	800704e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>
 8006710:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8006712:	6838      	ldr	r0, [r7, #0]
 8006714:	f7fe fa5a 	bl	8004bcc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8006718:	4603      	mov	r3, r0
 800671a:	461a      	mov	r2, r3
 800671c:	68f9      	ldr	r1, [r7, #12]
 800671e:	6878      	ldr	r0, [r7, #4]
 8006720:	f000 fca6 	bl	8007070 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>
	  return __tmp;
 8006724:	68fb      	ldr	r3, [r7, #12]
	}
 8006726:	4618      	mov	r0, r3
 8006728:	3710      	adds	r7, #16
 800672a:	46bd      	mov	sp, r7
 800672c:	bd80      	pop	{r7, pc}

0800672e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>:
	__do_visit([](auto&& __this_mem) mutable
 800672e:	b590      	push	{r4, r7, lr}
 8006730:	b083      	sub	sp, #12
 8006732:	af00      	add	r7, sp, #0
 8006734:	6078      	str	r0, [r7, #4]
 8006736:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8006738:	6838      	ldr	r0, [r7, #0]
 800673a:	f000 fcb9 	bl	80070b0 <_ZSt11__addressofIiEPT_RS0_>
 800673e:	4603      	mov	r3, r0
 8006740:	4618      	mov	r0, r3
 8006742:	f000 fcc0 	bl	80070c6 <_ZSt8_DestroyIiEvPT_>
	    return {};
 8006746:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8006748:	4618      	mov	r0, r3
 800674a:	370c      	adds	r7, #12
 800674c:	46bd      	mov	sp, r7
 800674e:	bd90      	pop	{r4, r7, pc}

08006750 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>:
 8006750:	b590      	push	{r4, r7, lr}
 8006752:	b083      	sub	sp, #12
 8006754:	af00      	add	r7, sp, #0
 8006756:	6078      	str	r0, [r7, #4]
 8006758:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800675a:	6838      	ldr	r0, [r7, #0]
 800675c:	f000 fcbd 	bl	80070da <_ZSt11__addressofIfEPT_RS0_>
 8006760:	4603      	mov	r3, r0
 8006762:	4618      	mov	r0, r3
 8006764:	f000 fcc4 	bl	80070f0 <_ZSt8_DestroyIfEvPT_>
	    return {};
 8006768:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800676a:	4618      	mov	r0, r3
 800676c:	370c      	adds	r7, #12
 800676e:	46bd      	mov	sp, r7
 8006770:	bd90      	pop	{r4, r7, pc}

08006772 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>:
 8006772:	b590      	push	{r4, r7, lr}
 8006774:	b083      	sub	sp, #12
 8006776:	af00      	add	r7, sp, #0
 8006778:	6078      	str	r0, [r7, #4]
 800677a:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800677c:	6838      	ldr	r0, [r7, #0]
 800677e:	f000 fcc1 	bl	8007104 <_ZSt11__addressofIbEPT_RS0_>
 8006782:	4603      	mov	r3, r0
 8006784:	4618      	mov	r0, r3
 8006786:	f000 fcc8 	bl	800711a <_ZSt8_DestroyIbEvPT_>
	    return {};
 800678a:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800678c:	4618      	mov	r0, r3
 800678e:	370c      	adds	r7, #12
 8006790:	46bd      	mov	sp, r7
 8006792:	bd90      	pop	{r4, r7, pc}

08006794 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() noexcept
 8006794:	b480      	push	{r7}
 8006796:	b083      	sub	sp, #12
 8006798:	af00      	add	r7, sp, #0
 800679a:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	4618      	mov	r0, r3
 80067a0:	370c      	adds	r7, #12
 80067a2:	46bd      	mov	sp, r7
 80067a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067a8:	4770      	bx	lr

080067aa <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>:
 80067aa:	b590      	push	{r4, r7, lr}
 80067ac:	b083      	sub	sp, #12
 80067ae:	af00      	add	r7, sp, #0
 80067b0:	6078      	str	r0, [r7, #4]
 80067b2:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80067b4:	6838      	ldr	r0, [r7, #0]
 80067b6:	f000 fcba 	bl	800712e <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 80067ba:	4603      	mov	r3, r0
 80067bc:	4618      	mov	r0, r3
 80067be:	f000 fcc1 	bl	8007144 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 80067c2:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80067c4:	4618      	mov	r0, r3
 80067c6:	370c      	adds	r7, #12
 80067c8:	46bd      	mov	sp, r7
 80067ca:	bd90      	pop	{r4, r7, pc}

080067cc <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>:
      _M_addr() noexcept
 80067cc:	b480      	push	{r7}
 80067ce:	b083      	sub	sp, #12
 80067d0:	af00      	add	r7, sp, #0
 80067d2:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 80067d4:	687b      	ldr	r3, [r7, #4]
 80067d6:	4618      	mov	r0, r3
 80067d8:	370c      	adds	r7, #12
 80067da:	46bd      	mov	sp, r7
 80067dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067e0:	4770      	bx	lr

080067e2 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>:
 80067e2:	b590      	push	{r4, r7, lr}
 80067e4:	b083      	sub	sp, #12
 80067e6:	af00      	add	r7, sp, #0
 80067e8:	6078      	str	r0, [r7, #4]
 80067ea:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80067ec:	6838      	ldr	r0, [r7, #0]
 80067ee:	f000 fcb4 	bl	800715a <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 80067f2:	4603      	mov	r3, r0
 80067f4:	4618      	mov	r0, r3
 80067f6:	f000 fcbb 	bl	8007170 <_ZSt8_DestroyISt6vectorI6SymbolSaIS1_EEEvPT_>
	    return {};
 80067fa:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80067fc:	4618      	mov	r0, r3
 80067fe:	370c      	adds	r7, #12
 8006800:	46bd      	mov	sp, r7
 8006802:	bd90      	pop	{r4, r7, pc}

08006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>:
   *  @param  __r  Reference to an object or function.
   *  @return   The actual address.
  */
  template<typename _Tp>
    inline _GLIBCXX17_CONSTEXPR _Tp*
    addressof(_Tp& __r) noexcept
 8006804:	b580      	push	{r7, lr}
 8006806:	b082      	sub	sp, #8
 8006808:	af00      	add	r7, sp, #0
 800680a:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800680c:	6878      	ldr	r0, [r7, #4]
 800680e:	f000 f805 	bl	800681c <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8006812:	4603      	mov	r3, r0
 8006814:	4618      	mov	r0, r3
 8006816:	3708      	adds	r7, #8
 8006818:	46bd      	mov	sp, r7
 800681a:	bd80      	pop	{r7, pc}

0800681c <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800681c:	b480      	push	{r7}
 800681e:	b083      	sub	sp, #12
 8006820:	af00      	add	r7, sp, #0
 8006822:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8006824:	687b      	ldr	r3, [r7, #4]
 8006826:	4618      	mov	r0, r3
 8006828:	370c      	adds	r7, #12
 800682a:	46bd      	mov	sp, r7
 800682c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006830:	4770      	bx	lr

08006832 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8006832:	b590      	push	{r4, r7, lr}
 8006834:	b085      	sub	sp, #20
 8006836:	af00      	add	r7, sp, #0
 8006838:	6078      	str	r0, [r7, #4]
 800683a:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800683c:	687b      	ldr	r3, [r7, #4]
 800683e:	4618      	mov	r0, r3
 8006840:	f7ff ffe0 	bl	8006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8006844:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8006846:	6838      	ldr	r0, [r7, #0]
 8006848:	f7fd fac6 	bl	8003dd8 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800684c:	4603      	mov	r3, r0
        ::new (__storage)
 800684e:	681c      	ldr	r4, [r3, #0]
 8006850:	68fb      	ldr	r3, [r7, #12]
 8006852:	4619      	mov	r1, r3
 8006854:	2004      	movs	r0, #4
 8006856:	f7fa fc00 	bl	800105a <_ZnwjPv>
 800685a:	4603      	mov	r3, r0
 800685c:	601c      	str	r4, [r3, #0]
    }
 800685e:	bf00      	nop
 8006860:	3714      	adds	r7, #20
 8006862:	46bd      	mov	sp, r7
 8006864:	bd90      	pop	{r4, r7, pc}

08006866 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8006866:	b590      	push	{r4, r7, lr}
 8006868:	b085      	sub	sp, #20
 800686a:	af00      	add	r7, sp, #0
 800686c:	6078      	str	r0, [r7, #4]
 800686e:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8006870:	687b      	ldr	r3, [r7, #4]
 8006872:	4618      	mov	r0, r3
 8006874:	f7ff ffc6 	bl	8006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8006878:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800687a:	6838      	ldr	r0, [r7, #0]
 800687c:	f7fd fae0 	bl	8003e40 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8006880:	4603      	mov	r3, r0
        ::new (__storage)
 8006882:	681c      	ldr	r4, [r3, #0]
 8006884:	68fb      	ldr	r3, [r7, #12]
 8006886:	4619      	mov	r1, r3
 8006888:	2004      	movs	r0, #4
 800688a:	f7fa fbe6 	bl	800105a <_ZnwjPv>
 800688e:	4603      	mov	r3, r0
 8006890:	601c      	str	r4, [r3, #0]
    }
 8006892:	bf00      	nop
 8006894:	3714      	adds	r7, #20
 8006896:	46bd      	mov	sp, r7
 8006898:	bd90      	pop	{r4, r7, pc}

0800689a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800689a:	b590      	push	{r4, r7, lr}
 800689c:	b085      	sub	sp, #20
 800689e:	af00      	add	r7, sp, #0
 80068a0:	6078      	str	r0, [r7, #4]
 80068a2:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80068a4:	687b      	ldr	r3, [r7, #4]
 80068a6:	4618      	mov	r0, r3
 80068a8:	f7ff ffac 	bl	8006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 80068ac:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80068ae:	6838      	ldr	r0, [r7, #0]
 80068b0:	f7fd fafa 	bl	8003ea8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 80068b4:	4603      	mov	r3, r0
        ::new (__storage)
 80068b6:	781c      	ldrb	r4, [r3, #0]
 80068b8:	68fb      	ldr	r3, [r7, #12]
 80068ba:	4619      	mov	r1, r3
 80068bc:	2001      	movs	r0, #1
 80068be:	f7fa fbcc 	bl	800105a <_ZnwjPv>
 80068c2:	4603      	mov	r3, r0
 80068c4:	4622      	mov	r2, r4
 80068c6:	701a      	strb	r2, [r3, #0]
    }
 80068c8:	bf00      	nop
 80068ca:	3714      	adds	r7, #20
 80068cc:	46bd      	mov	sp, r7
 80068ce:	bd90      	pop	{r4, r7, pc}

080068d0 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80068d0:	b590      	push	{r4, r7, lr}
 80068d2:	b085      	sub	sp, #20
 80068d4:	af00      	add	r7, sp, #0
 80068d6:	60f8      	str	r0, [r7, #12]
 80068d8:	7239      	strb	r1, [r7, #8]
 80068da:	607a      	str	r2, [r7, #4]
 80068dc:	68fb      	ldr	r3, [r7, #12]
 80068de:	687a      	ldr	r2, [r7, #4]
 80068e0:	4621      	mov	r1, r4
 80068e2:	4618      	mov	r0, r3
 80068e4:	f000 fcc0 	bl	8007268 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 80068e8:	68fb      	ldr	r3, [r7, #12]
 80068ea:	4618      	mov	r0, r3
 80068ec:	3714      	adds	r7, #20
 80068ee:	46bd      	mov	sp, r7
 80068f0:	bd90      	pop	{r4, r7, pc}

080068f2 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80068f2:	b590      	push	{r4, r7, lr}
 80068f4:	b085      	sub	sp, #20
 80068f6:	af00      	add	r7, sp, #0
 80068f8:	60f8      	str	r0, [r7, #12]
 80068fa:	7239      	strb	r1, [r7, #8]
 80068fc:	607a      	str	r2, [r7, #4]
 80068fe:	68fb      	ldr	r3, [r7, #12]
 8006900:	687a      	ldr	r2, [r7, #4]
 8006902:	4621      	mov	r1, r4
 8006904:	4618      	mov	r0, r3
 8006906:	f7ff ffe3 	bl	80068d0 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 800690a:	68fb      	ldr	r3, [r7, #12]
 800690c:	4618      	mov	r0, r3
 800690e:	3714      	adds	r7, #20
 8006910:	46bd      	mov	sp, r7
 8006912:	bd90      	pop	{r4, r7, pc}

08006914 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8006914:	b590      	push	{r4, r7, lr}
 8006916:	b085      	sub	sp, #20
 8006918:	af00      	add	r7, sp, #0
 800691a:	60f8      	str	r0, [r7, #12]
 800691c:	7239      	strb	r1, [r7, #8]
 800691e:	607a      	str	r2, [r7, #4]
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	687a      	ldr	r2, [r7, #4]
 8006924:	4621      	mov	r1, r4
 8006926:	4618      	mov	r0, r3
 8006928:	f7ff ffe3 	bl	80068f2 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 800692c:	68fb      	ldr	r3, [r7, #12]
 800692e:	4618      	mov	r0, r3
 8006930:	3714      	adds	r7, #20
 8006932:	46bd      	mov	sp, r7
 8006934:	bd90      	pop	{r4, r7, pc}

08006936 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8006936:	b590      	push	{r4, r7, lr}
 8006938:	b085      	sub	sp, #20
 800693a:	af00      	add	r7, sp, #0
 800693c:	60f8      	str	r0, [r7, #12]
 800693e:	7239      	strb	r1, [r7, #8]
 8006940:	607a      	str	r2, [r7, #4]
 8006942:	68fb      	ldr	r3, [r7, #12]
 8006944:	687a      	ldr	r2, [r7, #4]
 8006946:	4621      	mov	r1, r4
 8006948:	4618      	mov	r0, r3
 800694a:	f7ff ffe3 	bl	8006914 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 800694e:	68fb      	ldr	r3, [r7, #12]
 8006950:	4618      	mov	r0, r3
 8006952:	3714      	adds	r7, #20
 8006954:	46bd      	mov	sp, r7
 8006956:	bd90      	pop	{r4, r7, pc}

08006958 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8006958:	b5b0      	push	{r4, r5, r7, lr}
 800695a:	b084      	sub	sp, #16
 800695c:	af00      	add	r7, sp, #0
 800695e:	60f8      	str	r0, [r7, #12]
 8006960:	7239      	strb	r1, [r7, #8]
 8006962:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 8006964:	68fc      	ldr	r4, [r7, #12]
 8006966:	6878      	ldr	r0, [r7, #4]
 8006968:	f7fd fade 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800696c:	4603      	mov	r3, r0
 800696e:	461a      	mov	r2, r3
 8006970:	4629      	mov	r1, r5
 8006972:	4620      	mov	r0, r4
 8006974:	f7ff ffdf 	bl	8006936 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8006978:	68fb      	ldr	r3, [r7, #12]
 800697a:	4618      	mov	r0, r3
 800697c:	3710      	adds	r7, #16
 800697e:	46bd      	mov	sp, r7
 8006980:	bdb0      	pop	{r4, r5, r7, pc}

08006982 <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>:
    _Enable_default_constructor&
    operator=(_Enable_default_constructor&&) noexcept = default;

    // Can be used in other ctors.
    constexpr explicit
    _Enable_default_constructor(_Enable_default_constructor_tag) { }
 8006982:	b480      	push	{r7}
 8006984:	b083      	sub	sp, #12
 8006986:	af00      	add	r7, sp, #0
 8006988:	6078      	str	r0, [r7, #4]
 800698a:	7039      	strb	r1, [r7, #0]
 800698c:	687b      	ldr	r3, [r7, #4]
 800698e:	4618      	mov	r0, r3
 8006990:	370c      	adds	r7, #12
 8006992:	46bd      	mov	sp, r7
 8006994:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006998:	4770      	bx	lr

0800699a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800699a:	b480      	push	{r7}
 800699c:	b083      	sub	sp, #12
 800699e:	af00      	add	r7, sp, #0
 80069a0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80069a2:	687b      	ldr	r3, [r7, #4]
 80069a4:	4618      	mov	r0, r3
 80069a6:	370c      	adds	r7, #12
 80069a8:	46bd      	mov	sp, r7
 80069aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069ae:	4770      	bx	lr

080069b0 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80069b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80069b4:	b084      	sub	sp, #16
 80069b6:	af00      	add	r7, sp, #0
 80069b8:	60f8      	str	r0, [r7, #12]
 80069ba:	60b9      	str	r1, [r7, #8]
 80069bc:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80069be:	68f8      	ldr	r0, [r7, #12]
 80069c0:	f000 f897 	bl	8006af2 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80069c4:	4604      	mov	r4, r0
 80069c6:	68b8      	ldr	r0, [r7, #8]
 80069c8:	f7ff f847 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80069cc:	4605      	mov	r5, r0
 80069ce:	6878      	ldr	r0, [r7, #4]
 80069d0:	f7fd fa0d 	bl	8003dee <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80069d4:	4603      	mov	r3, r0
 80069d6:	462a      	mov	r2, r5
 80069d8:	4621      	mov	r1, r4
 80069da:	4630      	mov	r0, r6
 80069dc:	f000 fc5c 	bl	8007298 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 80069e0:	4643      	mov	r3, r8
    }
 80069e2:	4618      	mov	r0, r3
 80069e4:	3710      	adds	r7, #16
 80069e6:	46bd      	mov	sp, r7
 80069e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080069ec <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80069ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80069f0:	b084      	sub	sp, #16
 80069f2:	af00      	add	r7, sp, #0
 80069f4:	60f8      	str	r0, [r7, #12]
 80069f6:	60b9      	str	r1, [r7, #8]
 80069f8:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80069fa:	68f8      	ldr	r0, [r7, #12]
 80069fc:	f000 f879 	bl	8006af2 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006a00:	4604      	mov	r4, r0
 8006a02:	68b8      	ldr	r0, [r7, #8]
 8006a04:	f7ff f84b 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8006a08:	4605      	mov	r5, r0
 8006a0a:	6878      	ldr	r0, [r7, #4]
 8006a0c:	f7fd fa23 	bl	8003e56 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8006a10:	4603      	mov	r3, r0
 8006a12:	462a      	mov	r2, r5
 8006a14:	4621      	mov	r1, r4
 8006a16:	4630      	mov	r0, r6
 8006a18:	f000 fc5c 	bl	80072d4 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8006a1c:	4643      	mov	r3, r8
    }
 8006a1e:	4618      	mov	r0, r3
 8006a20:	3710      	adds	r7, #16
 8006a22:	46bd      	mov	sp, r7
 8006a24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006a28 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8006a28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006a2c:	b084      	sub	sp, #16
 8006a2e:	af00      	add	r7, sp, #0
 8006a30:	60f8      	str	r0, [r7, #12]
 8006a32:	60b9      	str	r1, [r7, #8]
 8006a34:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8006a36:	68f8      	ldr	r0, [r7, #12]
 8006a38:	f000 f85b 	bl	8006af2 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006a3c:	4604      	mov	r4, r0
 8006a3e:	68b8      	ldr	r0, [r7, #8]
 8006a40:	f7ff f84f 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8006a44:	4605      	mov	r5, r0
 8006a46:	6878      	ldr	r0, [r7, #4]
 8006a48:	f7fd fa39 	bl	8003ebe <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8006a4c:	4603      	mov	r3, r0
 8006a4e:	462a      	mov	r2, r5
 8006a50:	4621      	mov	r1, r4
 8006a52:	4630      	mov	r0, r6
 8006a54:	f000 fc5c 	bl	8007310 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8006a58:	4643      	mov	r3, r8
    }
 8006a5a:	4618      	mov	r0, r3
 8006a5c:	3710      	adds	r7, #16
 8006a5e:	46bd      	mov	sp, r7
 8006a60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006a64 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8006a64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006a68:	b084      	sub	sp, #16
 8006a6a:	af00      	add	r7, sp, #0
 8006a6c:	60f8      	str	r0, [r7, #12]
 8006a6e:	60b9      	str	r1, [r7, #8]
 8006a70:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8006a72:	68f8      	ldr	r0, [r7, #12]
 8006a74:	f000 f83d 	bl	8006af2 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006a78:	4604      	mov	r4, r0
 8006a7a:	68b8      	ldr	r0, [r7, #8]
 8006a7c:	f7ff f85f 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8006a80:	4605      	mov	r5, r0
 8006a82:	6878      	ldr	r0, [r7, #4]
 8006a84:	f7fd fa5b 	bl	8003f3e <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8006a88:	4603      	mov	r3, r0
 8006a8a:	462a      	mov	r2, r5
 8006a8c:	4621      	mov	r1, r4
 8006a8e:	4630      	mov	r0, r6
 8006a90:	f000 fc5c 	bl	800734c <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRS9_St17integral_constantIjLj3EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8006a94:	4643      	mov	r3, r8
    }
 8006a96:	4618      	mov	r0, r3
 8006a98:	3710      	adds	r7, #16
 8006a9a:	46bd      	mov	sp, r7
 8006a9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006aa0 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8006aa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006aa4:	b084      	sub	sp, #16
 8006aa6:	af00      	add	r7, sp, #0
 8006aa8:	60f8      	str	r0, [r7, #12]
 8006aaa:	60b9      	str	r1, [r7, #8]
 8006aac:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8006aae:	68f8      	ldr	r0, [r7, #12]
 8006ab0:	f000 f81f 	bl	8006af2 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006ab4:	4604      	mov	r4, r0
 8006ab6:	68b8      	ldr	r0, [r7, #8]
 8006ab8:	f7ff f86f 	bl	8005b9a <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8006abc:	4605      	mov	r5, r0
 8006abe:	6878      	ldr	r0, [r7, #4]
 8006ac0:	f7fd fa7d 	bl	8003fbe <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8006ac4:	4603      	mov	r3, r0
 8006ac6:	462a      	mov	r2, r5
 8006ac8:	4621      	mov	r1, r4
 8006aca:	4630      	mov	r0, r6
 8006acc:	f000 fc5c 	bl	8007388 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRSD_St17integral_constantIjLj4EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8006ad0:	4643      	mov	r3, r8
    }
 8006ad2:	4618      	mov	r0, r3
 8006ad4:	3710      	adds	r7, #16
 8006ad6:	46bd      	mov	sp, r7
 8006ad8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006adc <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8006adc:	b480      	push	{r7}
 8006ade:	b083      	sub	sp, #12
 8006ae0:	af00      	add	r7, sp, #0
 8006ae2:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8006ae4:	687b      	ldr	r3, [r7, #4]
 8006ae6:	4618      	mov	r0, r3
 8006ae8:	370c      	adds	r7, #12
 8006aea:	46bd      	mov	sp, r7
 8006aec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006af0:	4770      	bx	lr

08006af2 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8006af2:	b480      	push	{r7}
 8006af4:	b083      	sub	sp, #12
 8006af6:	af00      	add	r7, sp, #0
 8006af8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	4618      	mov	r0, r3
 8006afe:	370c      	adds	r7, #12
 8006b00:	46bd      	mov	sp, r7
 8006b02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b06:	4770      	bx	lr

08006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8006b08:	b480      	push	{r7}
 8006b0a:	b083      	sub	sp, #12
 8006b0c:	af00      	add	r7, sp, #0
 8006b0e:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	4618      	mov	r0, r3
 8006b14:	370c      	adds	r7, #12
 8006b16:	46bd      	mov	sp, r7
 8006b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b1c:	4770      	bx	lr

08006b1e <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8006b1e:	b480      	push	{r7}
 8006b20:	b083      	sub	sp, #12
 8006b22:	af00      	add	r7, sp, #0
 8006b24:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8006b26:	687b      	ldr	r3, [r7, #4]
 8006b28:	4618      	mov	r0, r3
 8006b2a:	370c      	adds	r7, #12
 8006b2c:	46bd      	mov	sp, r7
 8006b2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b32:	4770      	bx	lr

08006b34 <_ZStneRKSaI6SymbolES2_>:
      friend bool
      operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW
      { return true; }

      friend bool
      operator!=(const allocator&, const allocator&) _GLIBCXX_NOTHROW
 8006b34:	b480      	push	{r7}
 8006b36:	b083      	sub	sp, #12
 8006b38:	af00      	add	r7, sp, #0
 8006b3a:	6078      	str	r0, [r7, #4]
 8006b3c:	6039      	str	r1, [r7, #0]
      { return false; }
 8006b3e:	2300      	movs	r3, #0
 8006b40:	4618      	mov	r0, r3
 8006b42:	370c      	adds	r7, #12
 8006b44:	46bd      	mov	sp, r7
 8006b46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b4a:	4770      	bx	lr

08006b4c <_ZNSt6vectorI6SymbolSaIS0_EE5clearEv>:
       *  elements, and that if the elements themselves are pointers, the
       *  pointed-to memory is not touched in any way.  Managing the pointer is
       *  the user's responsibility.
       */
      void
      clear() _GLIBCXX_NOEXCEPT
 8006b4c:	b580      	push	{r7, lr}
 8006b4e:	b082      	sub	sp, #8
 8006b50:	af00      	add	r7, sp, #0
 8006b52:	6078      	str	r0, [r7, #4]
      { _M_erase_at_end(this->_M_impl._M_start); }
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	681b      	ldr	r3, [r3, #0]
 8006b58:	4619      	mov	r1, r3
 8006b5a:	6878      	ldr	r0, [r7, #4]
 8006b5c:	f000 fc32 	bl	80073c4 <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_>
 8006b60:	bf00      	nop
 8006b62:	3708      	adds	r7, #8
 8006b64:	46bd      	mov	sp, r7
 8006b66:	bd80      	pop	{r7, pc}

08006b68 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 8006b68:	b580      	push	{r7, lr}
 8006b6a:	b084      	sub	sp, #16
 8006b6c:	af00      	add	r7, sp, #0
 8006b6e:	60f8      	str	r0, [r7, #12]
 8006b70:	60b9      	str	r1, [r7, #8]
 8006b72:	607a      	str	r2, [r7, #4]
	if (__p)
 8006b74:	68bb      	ldr	r3, [r7, #8]
 8006b76:	2b00      	cmp	r3, #0
 8006b78:	d005      	beq.n	8006b86 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8006b7a:	68fb      	ldr	r3, [r7, #12]
 8006b7c:	687a      	ldr	r2, [r7, #4]
 8006b7e:	68b9      	ldr	r1, [r7, #8]
 8006b80:	4618      	mov	r0, r3
 8006b82:	f000 fc40 	bl	8007406 <_ZNSt16allocator_traitsISaI6SymbolEE10deallocateERS1_PS0_j>
      }
 8006b86:	bf00      	nop
 8006b88:	3710      	adds	r7, #16
 8006b8a:	46bd      	mov	sp, r7
 8006b8c:	bd80      	pop	{r7, pc}

08006b8e <_ZSt15__alloc_on_copyISaI6SymbolEEvRT_RKS2_>:
    inline void
    __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
    { }

  template<typename _Alloc>
    inline void __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 8006b8e:	b580      	push	{r7, lr}
 8006b90:	b084      	sub	sp, #16
 8006b92:	af00      	add	r7, sp, #0
 8006b94:	6078      	str	r0, [r7, #4]
 8006b96:	6039      	str	r1, [r7, #0]
    {
      typedef allocator_traits<_Alloc> __traits;
      typedef typename __traits::propagate_on_container_copy_assignment __pocca;
      __do_alloc_on_copy(__one, __two, __pocca());
 8006b98:	461a      	mov	r2, r3
 8006b9a:	6839      	ldr	r1, [r7, #0]
 8006b9c:	6878      	ldr	r0, [r7, #4]
 8006b9e:	f000 fc41 	bl	8007424 <_ZSt18__do_alloc_on_copyISaI6SymbolEEvRT_RKS2_St17integral_constantIbLb0EE>
    }
 8006ba2:	bf00      	nop
 8006ba4:	3710      	adds	r7, #16
 8006ba6:	46bd      	mov	sp, r7
 8006ba8:	bd80      	pop	{r7, pc}

08006baa <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8006baa:	b480      	push	{r7}
 8006bac:	b083      	sub	sp, #12
 8006bae:	af00      	add	r7, sp, #0
 8006bb0:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8006bb2:	687b      	ldr	r3, [r7, #4]
 8006bb4:	685a      	ldr	r2, [r3, #4]
 8006bb6:	687b      	ldr	r3, [r7, #4]
 8006bb8:	681b      	ldr	r3, [r3, #0]
 8006bba:	1ad3      	subs	r3, r2, r3
 8006bbc:	115b      	asrs	r3, r3, #5
 8006bbe:	4618      	mov	r0, r3
 8006bc0:	370c      	adds	r7, #12
 8006bc2:	46bd      	mov	sp, r7
 8006bc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bc8:	4770      	bx	lr

08006bca <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
 8006bca:	b480      	push	{r7}
 8006bcc:	b083      	sub	sp, #12
 8006bce:	af00      	add	r7, sp, #0
 8006bd0:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_end_of_storage
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	689a      	ldr	r2, [r3, #8]
			 - this->_M_impl._M_start); }
 8006bd6:	687b      	ldr	r3, [r7, #4]
 8006bd8:	681b      	ldr	r3, [r3, #0]
 8006bda:	1ad3      	subs	r3, r2, r3
 8006bdc:	115b      	asrs	r3, r3, #5
 8006bde:	4618      	mov	r0, r3
 8006be0:	370c      	adds	r7, #12
 8006be2:	46bd      	mov	sp, r7
 8006be4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006be8:	4770      	bx	lr

08006bea <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 8006bea:	b580      	push	{r7, lr}
 8006bec:	b084      	sub	sp, #16
 8006bee:	af00      	add	r7, sp, #0
 8006bf0:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 8006bf2:	687b      	ldr	r3, [r7, #4]
 8006bf4:	681b      	ldr	r3, [r3, #0]
 8006bf6:	60fb      	str	r3, [r7, #12]
 8006bf8:	f107 020c 	add.w	r2, r7, #12
 8006bfc:	f107 0308 	add.w	r3, r7, #8
 8006c00:	4611      	mov	r1, r2
 8006c02:	4618      	mov	r0, r3
 8006c04:	f000 fc1a 	bl	800743c <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>
 8006c08:	68bb      	ldr	r3, [r7, #8]
 8006c0a:	4618      	mov	r0, r3
 8006c0c:	3710      	adds	r7, #16
 8006c0e:	46bd      	mov	sp, r7
 8006c10:	bd80      	pop	{r7, pc}

08006c12 <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 8006c12:	b580      	push	{r7, lr}
 8006c14:	b084      	sub	sp, #16
 8006c16:	af00      	add	r7, sp, #0
 8006c18:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 8006c1a:	687b      	ldr	r3, [r7, #4]
 8006c1c:	685b      	ldr	r3, [r3, #4]
 8006c1e:	60fb      	str	r3, [r7, #12]
 8006c20:	f107 020c 	add.w	r2, r7, #12
 8006c24:	f107 0308 	add.w	r3, r7, #8
 8006c28:	4611      	mov	r1, r2
 8006c2a:	4618      	mov	r0, r3
 8006c2c:	f000 fc06 	bl	800743c <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>
 8006c30:	68bb      	ldr	r3, [r7, #8]
 8006c32:	4618      	mov	r0, r3
 8006c34:	3710      	adds	r7, #16
 8006c36:	46bd      	mov	sp, r7
 8006c38:	bd80      	pop	{r7, pc}

08006c3a <_ZNSt6vectorI6SymbolSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_>:
       *  Memory expansion handler.  Uses the member allocation function to
       *  obtain @a n bytes of memory, and then copies [first,last) into it.
       */
      template<typename _ForwardIterator>
	pointer
	_M_allocate_and_copy(size_type __n,
 8006c3a:	b580      	push	{r7, lr}
 8006c3c:	b086      	sub	sp, #24
 8006c3e:	af00      	add	r7, sp, #0
 8006c40:	60f8      	str	r0, [r7, #12]
 8006c42:	60b9      	str	r1, [r7, #8]
 8006c44:	607a      	str	r2, [r7, #4]
 8006c46:	603b      	str	r3, [r7, #0]
			     _ForwardIterator __first, _ForwardIterator __last)
	{
	  pointer __result = this->_M_allocate(__n);
 8006c48:	68fb      	ldr	r3, [r7, #12]
 8006c4a:	68b9      	ldr	r1, [r7, #8]
 8006c4c:	4618      	mov	r0, r3
 8006c4e:	f000 fc05 	bl	800745c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 8006c52:	6178      	str	r0, [r7, #20]
	  __try
	    {
	      std::__uninitialized_copy_a(__first, __last, __result,
					  _M_get_Tp_allocator());
 8006c54:	68fb      	ldr	r3, [r7, #12]
 8006c56:	4618      	mov	r0, r3
 8006c58:	f7ff ff56 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8006c5c:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__first, __last, __result,
 8006c5e:	697a      	ldr	r2, [r7, #20]
 8006c60:	6839      	ldr	r1, [r7, #0]
 8006c62:	6878      	ldr	r0, [r7, #4]
 8006c64:	f000 fc0e 	bl	8007484 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>
	      return __result;
 8006c68:	697b      	ldr	r3, [r7, #20]
	  __catch(...)
	    {
	      _M_deallocate(__result, __n);
	      __throw_exception_again;
	    }
	}
 8006c6a:	4618      	mov	r0, r3
 8006c6c:	3718      	adds	r7, #24
 8006c6e:	46bd      	mov	sp, r7
 8006c70:	bd80      	pop	{r7, pc}

08006c72 <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>:
	__traits::destroy(__alloc, std::__addressof(*__first));
    }

  template<typename _ForwardIterator, typename _Tp>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8006c72:	b580      	push	{r7, lr}
 8006c74:	b084      	sub	sp, #16
 8006c76:	af00      	add	r7, sp, #0
 8006c78:	60f8      	str	r0, [r7, #12]
 8006c7a:	60b9      	str	r1, [r7, #8]
 8006c7c:	607a      	str	r2, [r7, #4]
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
 8006c7e:	68b9      	ldr	r1, [r7, #8]
 8006c80:	68f8      	ldr	r0, [r7, #12]
 8006c82:	f000 fc10 	bl	80074a6 <_ZSt8_DestroyIP6SymbolEvT_S2_>
    }
 8006c86:	bf00      	nop
 8006c88:	3710      	adds	r7, #16
 8006c8a:	46bd      	mov	sp, r7
 8006c8c:	bd80      	pop	{r7, pc}

08006c8e <_ZNSt6vectorI6SymbolSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8006c8e:	b580      	push	{r7, lr}
 8006c90:	b084      	sub	sp, #16
 8006c92:	af00      	add	r7, sp, #0
 8006c94:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8006c96:	687a      	ldr	r2, [r7, #4]
 8006c98:	f107 030c 	add.w	r3, r7, #12
 8006c9c:	4611      	mov	r1, r2
 8006c9e:	4618      	mov	r0, r3
 8006ca0:	f000 fc0e 	bl	80074c0 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 8006ca4:	68fb      	ldr	r3, [r7, #12]
 8006ca6:	4618      	mov	r0, r3
 8006ca8:	3710      	adds	r7, #16
 8006caa:	46bd      	mov	sp, r7
 8006cac:	bd80      	pop	{r7, pc}

08006cae <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_>:
   *  Note that the end of the output range is permitted to be contained
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    inline _OI
    copy(_II __first, _II __last, _OI __result)
 8006cae:	b590      	push	{r4, r7, lr}
 8006cb0:	b085      	sub	sp, #20
 8006cb2:	af00      	add	r7, sp, #0
 8006cb4:	60f8      	str	r0, [r7, #12]
 8006cb6:	60b9      	str	r1, [r7, #8]
 8006cb8:	607a      	str	r2, [r7, #4]
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::value_type>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a2<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 8006cba:	68f8      	ldr	r0, [r7, #12]
 8006cbc:	f000 fc10 	bl	80074e0 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>
 8006cc0:	4604      	mov	r4, r0
 8006cc2:	68b8      	ldr	r0, [r7, #8]
 8006cc4:	f000 fc0c 	bl	80074e0 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>
 8006cc8:	4603      	mov	r3, r0
 8006cca:	687a      	ldr	r2, [r7, #4]
 8006ccc:	4619      	mov	r1, r3
 8006cce:	4620      	mov	r0, r4
 8006cd0:	f000 fc11 	bl	80074f6 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_>
 8006cd4:	4603      	mov	r3, r0
    }
 8006cd6:	4618      	mov	r0, r3
 8006cd8:	3714      	adds	r7, #20
 8006cda:	46bd      	mov	sp, r7
 8006cdc:	bd90      	pop	{r4, r7, pc}

08006cde <_ZNSt6vectorI6SymbolSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8006cde:	b580      	push	{r7, lr}
 8006ce0:	b084      	sub	sp, #16
 8006ce2:	af00      	add	r7, sp, #0
 8006ce4:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8006ce6:	687b      	ldr	r3, [r7, #4]
 8006ce8:	1d1a      	adds	r2, r3, #4
 8006cea:	f107 030c 	add.w	r3, r7, #12
 8006cee:	4611      	mov	r1, r2
 8006cf0:	4618      	mov	r0, r3
 8006cf2:	f000 fbe5 	bl	80074c0 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 8006cf6:	68fb      	ldr	r3, [r7, #12]
 8006cf8:	4618      	mov	r0, r3
 8006cfa:	3710      	adds	r7, #16
 8006cfc:	46bd      	mov	sp, r7
 8006cfe:	bd80      	pop	{r7, pc}

08006d00 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8006d00:	b580      	push	{r7, lr}
 8006d02:	b084      	sub	sp, #16
 8006d04:	af00      	add	r7, sp, #0
 8006d06:	60f8      	str	r0, [r7, #12]
 8006d08:	60b9      	str	r1, [r7, #8]
 8006d0a:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8006d0c:	68b9      	ldr	r1, [r7, #8]
 8006d0e:	68f8      	ldr	r0, [r7, #12]
 8006d10:	f000 fc12 	bl	8007538 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEEEvT_S8_>
    }
 8006d14:	bf00      	nop
 8006d16:	3710      	adds	r7, #16
 8006d18:	46bd      	mov	sp, r7
 8006d1a:	bd80      	pop	{r7, pc}

08006d1c <_ZSt4copyIP6SymbolS1_ET0_T_S3_S2_>:
    copy(_II __first, _II __last, _OI __result)
 8006d1c:	b590      	push	{r4, r7, lr}
 8006d1e:	b085      	sub	sp, #20
 8006d20:	af00      	add	r7, sp, #0
 8006d22:	60f8      	str	r0, [r7, #12]
 8006d24:	60b9      	str	r1, [r7, #8]
 8006d26:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 8006d28:	68f8      	ldr	r0, [r7, #12]
 8006d2a:	f000 fc12 	bl	8007552 <_ZSt12__miter_baseIP6SymbolET_S2_>
 8006d2e:	4604      	mov	r4, r0
 8006d30:	68b8      	ldr	r0, [r7, #8]
 8006d32:	f000 fc0e 	bl	8007552 <_ZSt12__miter_baseIP6SymbolET_S2_>
 8006d36:	4603      	mov	r3, r0
 8006d38:	687a      	ldr	r2, [r7, #4]
 8006d3a:	4619      	mov	r1, r3
 8006d3c:	4620      	mov	r0, r4
 8006d3e:	f000 fc13 	bl	8007568 <_ZSt14__copy_move_a2ILb0EP6SymbolS1_ET1_T0_S3_S2_>
 8006d42:	4603      	mov	r3, r0
    }
 8006d44:	4618      	mov	r0, r3
 8006d46:	3714      	adds	r7, #20
 8006d48:	46bd      	mov	sp, r7
 8006d4a:	bd90      	pop	{r4, r7, pc}

08006d4c <_ZSt22__uninitialized_copy_aIP6SymbolS1_S0_ET0_T_S3_S2_RSaIT1_E>:
	}
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 8006d4c:	b580      	push	{r7, lr}
 8006d4e:	b084      	sub	sp, #16
 8006d50:	af00      	add	r7, sp, #0
 8006d52:	60f8      	str	r0, [r7, #12]
 8006d54:	60b9      	str	r1, [r7, #8]
 8006d56:	607a      	str	r2, [r7, #4]
 8006d58:	603b      	str	r3, [r7, #0]
			   _ForwardIterator __result, allocator<_Tp>&)
    { return std::uninitialized_copy(__first, __last, __result); }
 8006d5a:	687a      	ldr	r2, [r7, #4]
 8006d5c:	68b9      	ldr	r1, [r7, #8]
 8006d5e:	68f8      	ldr	r0, [r7, #12]
 8006d60:	f000 fc25 	bl	80075ae <_ZSt18uninitialized_copyIP6SymbolS1_ET0_T_S3_S2_>
 8006d64:	4603      	mov	r3, r0
 8006d66:	4618      	mov	r0, r3
 8006d68:	3710      	adds	r7, #16
 8006d6a:	46bd      	mov	sp, r7
 8006d6c:	bd80      	pop	{r7, pc}

08006d6e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8006d6e:	b590      	push	{r4, r7, lr}
 8006d70:	b085      	sub	sp, #20
 8006d72:	af00      	add	r7, sp, #0
 8006d74:	60f8      	str	r0, [r7, #12]
 8006d76:	7239      	strb	r1, [r7, #8]
 8006d78:	607a      	str	r2, [r7, #4]
 8006d7a:	68fb      	ldr	r3, [r7, #12]
 8006d7c:	687a      	ldr	r2, [r7, #4]
 8006d7e:	4621      	mov	r1, r4
 8006d80:	4618      	mov	r0, r3
 8006d82:	f000 fcac 	bl	80076de <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8006d86:	68fb      	ldr	r3, [r7, #12]
 8006d88:	4618      	mov	r0, r3
 8006d8a:	3714      	adds	r7, #20
 8006d8c:	46bd      	mov	sp, r7
 8006d8e:	bd90      	pop	{r4, r7, pc}

08006d90 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8006d90:	b590      	push	{r4, r7, lr}
 8006d92:	b085      	sub	sp, #20
 8006d94:	af00      	add	r7, sp, #0
 8006d96:	60f8      	str	r0, [r7, #12]
 8006d98:	7239      	strb	r1, [r7, #8]
 8006d9a:	607a      	str	r2, [r7, #4]
 8006d9c:	68fb      	ldr	r3, [r7, #12]
 8006d9e:	687a      	ldr	r2, [r7, #4]
 8006da0:	4621      	mov	r1, r4
 8006da2:	4618      	mov	r0, r3
 8006da4:	f7ff ffe3 	bl	8006d6e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8006da8:	68fb      	ldr	r3, [r7, #12]
 8006daa:	4618      	mov	r0, r3
 8006dac:	3714      	adds	r7, #20
 8006dae:	46bd      	mov	sp, r7
 8006db0:	bd90      	pop	{r4, r7, pc}

08006db2 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8006db2:	b590      	push	{r4, r7, lr}
 8006db4:	b085      	sub	sp, #20
 8006db6:	af00      	add	r7, sp, #0
 8006db8:	60f8      	str	r0, [r7, #12]
 8006dba:	7239      	strb	r1, [r7, #8]
 8006dbc:	607a      	str	r2, [r7, #4]
 8006dbe:	68fb      	ldr	r3, [r7, #12]
 8006dc0:	687a      	ldr	r2, [r7, #4]
 8006dc2:	4621      	mov	r1, r4
 8006dc4:	4618      	mov	r0, r3
 8006dc6:	f7ff ffe3 	bl	8006d90 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8006dca:	68fb      	ldr	r3, [r7, #12]
 8006dcc:	4618      	mov	r0, r3
 8006dce:	3714      	adds	r7, #20
 8006dd0:	46bd      	mov	sp, r7
 8006dd2:	bd90      	pop	{r4, r7, pc}

08006dd4 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8006dd4:	b590      	push	{r4, r7, lr}
 8006dd6:	b085      	sub	sp, #20
 8006dd8:	af00      	add	r7, sp, #0
 8006dda:	60f8      	str	r0, [r7, #12]
 8006ddc:	7239      	strb	r1, [r7, #8]
 8006dde:	607a      	str	r2, [r7, #4]
 8006de0:	68fb      	ldr	r3, [r7, #12]
 8006de2:	687a      	ldr	r2, [r7, #4]
 8006de4:	4621      	mov	r1, r4
 8006de6:	4618      	mov	r0, r3
 8006de8:	f7ff ffe3 	bl	8006db2 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8006dec:	68fb      	ldr	r3, [r7, #12]
 8006dee:	4618      	mov	r0, r3
 8006df0:	3714      	adds	r7, #20
 8006df2:	46bd      	mov	sp, r7
 8006df4:	bd90      	pop	{r4, r7, pc}

08006df6 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8006df6:	b5b0      	push	{r4, r5, r7, lr}
 8006df8:	b084      	sub	sp, #16
 8006dfa:	af00      	add	r7, sp, #0
 8006dfc:	60f8      	str	r0, [r7, #12]
 8006dfe:	7239      	strb	r1, [r7, #8]
 8006e00:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 8006e02:	68fc      	ldr	r4, [r7, #12]
 8006e04:	6878      	ldr	r0, [r7, #4]
 8006e06:	f7fd f8cf 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8006e0a:	4603      	mov	r3, r0
 8006e0c:	461a      	mov	r2, r3
 8006e0e:	4629      	mov	r1, r5
 8006e10:	4620      	mov	r0, r4
 8006e12:	f7ff ffdf 	bl	8006dd4 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8006e16:	68fb      	ldr	r3, [r7, #12]
 8006e18:	4618      	mov	r0, r3
 8006e1a:	3710      	adds	r7, #16
 8006e1c:	46bd      	mov	sp, r7
 8006e1e:	bdb0      	pop	{r4, r5, r7, pc}

08006e20 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>:
      _M_ptr() noexcept
 8006e20:	b580      	push	{r7, lr}
 8006e22:	b082      	sub	sp, #8
 8006e24:	af00      	add	r7, sp, #0
 8006e26:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8006e28:	6878      	ldr	r0, [r7, #4]
 8006e2a:	f000 fc70 	bl	800770e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>
 8006e2e:	4603      	mov	r3, r0
 8006e30:	4618      	mov	r0, r3
 8006e32:	3708      	adds	r7, #8
 8006e34:	46bd      	mov	sp, r7
 8006e36:	bd80      	pop	{r7, pc}

08006e38 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE7destroyIS5_EEvPT_>:
			    _Up(std::forward<_Args>(__args)...)))
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }

      template<typename _Up>
	void
	destroy(_Up* __p)
 8006e38:	b480      	push	{r7}
 8006e3a:	b083      	sub	sp, #12
 8006e3c:	af00      	add	r7, sp, #0
 8006e3e:	6078      	str	r0, [r7, #4]
 8006e40:	6039      	str	r1, [r7, #0]
	noexcept(noexcept( __p->~_Up()))
	{ __p->~_Up(); }
 8006e42:	bf00      	nop
 8006e44:	370c      	adds	r7, #12
 8006e46:	46bd      	mov	sp, r7
 8006e48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e4c:	4770      	bx	lr

08006e4e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 8006e4e:	b580      	push	{r7, lr}
 8006e50:	b084      	sub	sp, #16
 8006e52:	af00      	add	r7, sp, #0
 8006e54:	60f8      	str	r0, [r7, #12]
 8006e56:	60b9      	str	r1, [r7, #8]
 8006e58:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8006e5a:	68b8      	ldr	r0, [r7, #8]
 8006e5c:	f01b fb0c 	bl	8022478 <_ZdlPv>
      }
 8006e60:	3710      	adds	r7, #16
 8006e62:	46bd      	mov	sp, r7
 8006e64:	bd80      	pop	{r7, pc}

08006e66 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>:
      _M_valptr() const
 8006e66:	b580      	push	{r7, lr}
 8006e68:	b082      	sub	sp, #8
 8006e6a:	af00      	add	r7, sp, #0
 8006e6c:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8006e6e:	687b      	ldr	r3, [r7, #4]
 8006e70:	3310      	adds	r3, #16
 8006e72:	4618      	mov	r0, r3
 8006e74:	f000 fc56 	bl	8007724 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>
 8006e78:	4603      	mov	r3, r0
 8006e7a:	4618      	mov	r0, r3
 8006e7c:	3708      	adds	r7, #8
 8006e7e:	46bd      	mov	sp, r7
 8006e80:	bd80      	pop	{r7, pc}

08006e82 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc10token_typeEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8006e82:	b480      	push	{r7}
 8006e84:	b083      	sub	sp, #12
 8006e86:	af00      	add	r7, sp, #0
 8006e88:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8006e8a:	687b      	ldr	r3, [r7, #4]
 8006e8c:	4618      	mov	r0, r3
 8006e8e:	370c      	adds	r7, #12
 8006e90:	46bd      	mov	sp, r7
 8006e92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e96:	4770      	bx	lr

08006e98 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>:
      _M_get_node()
 8006e98:	b580      	push	{r7, lr}
 8006e9a:	b082      	sub	sp, #8
 8006e9c:	af00      	add	r7, sp, #0
 8006e9e:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 8006ea0:	6878      	ldr	r0, [r7, #4]
 8006ea2:	f7ff fa52 	bl	800634a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8006ea6:	4603      	mov	r3, r0
 8006ea8:	2101      	movs	r1, #1
 8006eaa:	4618      	mov	r0, r3
 8006eac:	f000 fc46 	bl	800773c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE8allocateERS6_j>
 8006eb0:	4603      	mov	r3, r0
 8006eb2:	4618      	mov	r0, r3
 8006eb4:	3708      	adds	r7, #8
 8006eb6:	46bd      	mov	sp, r7
 8006eb8:	bd80      	pop	{r7, pc}

08006eba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8006eba:	b5b0      	push	{r4, r5, r7, lr}
 8006ebc:	b084      	sub	sp, #16
 8006ebe:	af00      	add	r7, sp, #0
 8006ec0:	60f8      	str	r0, [r7, #12]
 8006ec2:	60b9      	str	r1, [r7, #8]
 8006ec4:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8006ec6:	68bb      	ldr	r3, [r7, #8]
 8006ec8:	4619      	mov	r1, r3
 8006eca:	2014      	movs	r0, #20
 8006ecc:	f7fa f8c5 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8006ed0:	68f8      	ldr	r0, [r7, #12]
 8006ed2:	f7ff fa3a 	bl	800634a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8006ed6:	4604      	mov	r4, r0
 8006ed8:	68b8      	ldr	r0, [r7, #8]
 8006eda:	f7ff fa41 	bl	8006360 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 8006ede:	4605      	mov	r5, r0
 8006ee0:	6878      	ldr	r0, [r7, #4]
 8006ee2:	f7fd fa93 	bl	800440c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8006ee6:	4603      	mov	r3, r0
 8006ee8:	461a      	mov	r2, r3
 8006eea:	4629      	mov	r1, r5
 8006eec:	4620      	mov	r0, r4
 8006eee:	f000 fc34 	bl	800775a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>
	}
 8006ef2:	bf00      	nop
 8006ef4:	3710      	adds	r7, #16
 8006ef6:	46bd      	mov	sp, r7
 8006ef8:	bdb0      	pop	{r4, r5, r7, pc}

08006efa <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>:
      _M_ptr() noexcept
 8006efa:	b580      	push	{r7, lr}
 8006efc:	b082      	sub	sp, #8
 8006efe:	af00      	add	r7, sp, #0
 8006f00:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8006f02:	6878      	ldr	r0, [r7, #4]
 8006f04:	f000 fc3c 	bl	8007780 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>
 8006f08:	4603      	mov	r3, r0
 8006f0a:	4618      	mov	r0, r3
 8006f0c:	3708      	adds	r7, #8
 8006f0e:	46bd      	mov	sp, r7
 8006f10:	bd80      	pop	{r7, pc}

08006f12 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE7destroyISB_EEvPT_>:
	destroy(_Up* __p)
 8006f12:	b580      	push	{r7, lr}
 8006f14:	b082      	sub	sp, #8
 8006f16:	af00      	add	r7, sp, #0
 8006f18:	6078      	str	r0, [r7, #4]
 8006f1a:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8006f1c:	6838      	ldr	r0, [r7, #0]
 8006f1e:	f7fa f8de 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8006f22:	bf00      	nop
 8006f24:	3708      	adds	r7, #8
 8006f26:	46bd      	mov	sp, r7
 8006f28:	bd80      	pop	{r7, pc}

08006f2a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE10deallocateEPSC_j>:
      deallocate(pointer __p, size_type)
 8006f2a:	b580      	push	{r7, lr}
 8006f2c:	b084      	sub	sp, #16
 8006f2e:	af00      	add	r7, sp, #0
 8006f30:	60f8      	str	r0, [r7, #12]
 8006f32:	60b9      	str	r1, [r7, #8]
 8006f34:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8006f36:	68b8      	ldr	r0, [r7, #8]
 8006f38:	f01b fa9e 	bl	8022478 <_ZdlPv>
      }
 8006f3c:	3710      	adds	r7, #16
 8006f3e:	46bd      	mov	sp, r7
 8006f40:	bd80      	pop	{r7, pc}

08006f42 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>:
      _M_valptr() const
 8006f42:	b580      	push	{r7, lr}
 8006f44:	b082      	sub	sp, #8
 8006f46:	af00      	add	r7, sp, #0
 8006f48:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8006f4a:	687b      	ldr	r3, [r7, #4]
 8006f4c:	3310      	adds	r3, #16
 8006f4e:	4618      	mov	r0, r3
 8006f50:	f000 fc21 	bl	8007796 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>
 8006f54:	4603      	mov	r3, r0
 8006f56:	4618      	mov	r0, r3
 8006f58:	3708      	adds	r7, #8
 8006f5a:	46bd      	mov	sp, r7
 8006f5c:	bd80      	pop	{r7, pc}

08006f5e <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8006f5e:	b480      	push	{r7}
 8006f60:	b083      	sub	sp, #12
 8006f62:	af00      	add	r7, sp, #0
 8006f64:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8006f66:	687b      	ldr	r3, [r7, #4]
 8006f68:	4618      	mov	r0, r3
 8006f6a:	370c      	adds	r7, #12
 8006f6c:	46bd      	mov	sp, r7
 8006f6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f72:	4770      	bx	lr

08006f74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>:
      _M_get_node()
 8006f74:	b580      	push	{r7, lr}
 8006f76:	b082      	sub	sp, #8
 8006f78:	af00      	add	r7, sp, #0
 8006f7a:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 8006f7c:	6878      	ldr	r0, [r7, #4]
 8006f7e:	f7ff fa8c 	bl	800649a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8006f82:	4603      	mov	r3, r0
 8006f84:	2101      	movs	r1, #1
 8006f86:	4618      	mov	r0, r3
 8006f88:	f000 fc11 	bl	80077ae <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE8allocateERSC_j>
 8006f8c:	4603      	mov	r3, r0
 8006f8e:	4618      	mov	r0, r3
 8006f90:	3708      	adds	r7, #8
 8006f92:	46bd      	mov	sp, r7
 8006f94:	bd80      	pop	{r7, pc}

08006f96 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8006f96:	b5b0      	push	{r4, r5, r7, lr}
 8006f98:	b084      	sub	sp, #16
 8006f9a:	af00      	add	r7, sp, #0
 8006f9c:	60f8      	str	r0, [r7, #12]
 8006f9e:	60b9      	str	r1, [r7, #8]
 8006fa0:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8006fa2:	68bb      	ldr	r3, [r7, #8]
 8006fa4:	4619      	mov	r1, r3
 8006fa6:	202c      	movs	r0, #44	; 0x2c
 8006fa8:	f7fa f857 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8006fac:	68f8      	ldr	r0, [r7, #12]
 8006fae:	f7ff fa74 	bl	800649a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8006fb2:	4604      	mov	r4, r0
 8006fb4:	68b8      	ldr	r0, [r7, #8]
 8006fb6:	f7ff fa7b 	bl	80064b0 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8006fba:	4605      	mov	r5, r0
 8006fbc:	6878      	ldr	r0, [r7, #4]
 8006fbe:	f7fd fc1b 	bl	80047f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8006fc2:	4603      	mov	r3, r0
 8006fc4:	461a      	mov	r2, r3
 8006fc6:	4629      	mov	r1, r5
 8006fc8:	4620      	mov	r0, r4
 8006fca:	f000 fbff 	bl	80077cc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE9constructISA_JRKSA_EEEvRSC_PT_DpOT0_>
	}
 8006fce:	bf00      	nop
 8006fd0:	3710      	adds	r7, #16
 8006fd2:	46bd      	mov	sp, r7
 8006fd4:	bdb0      	pop	{r4, r5, r7, pc}

08006fd6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>:
      _M_ptr() noexcept
 8006fd6:	b580      	push	{r7, lr}
 8006fd8:	b082      	sub	sp, #8
 8006fda:	af00      	add	r7, sp, #0
 8006fdc:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8006fde:	6878      	ldr	r0, [r7, #4]
 8006fe0:	f000 fc07 	bl	80077f2 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>
 8006fe4:	4603      	mov	r3, r0
 8006fe6:	4618      	mov	r0, r3
 8006fe8:	3708      	adds	r7, #8
 8006fea:	46bd      	mov	sp, r7
 8006fec:	bd80      	pop	{r7, pc}

08006fee <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE7destroyIS5_EEvPT_>:
	destroy(_Up* __p)
 8006fee:	b480      	push	{r7}
 8006ff0:	b083      	sub	sp, #12
 8006ff2:	af00      	add	r7, sp, #0
 8006ff4:	6078      	str	r0, [r7, #4]
 8006ff6:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8006ff8:	bf00      	nop
 8006ffa:	370c      	adds	r7, #12
 8006ffc:	46bd      	mov	sp, r7
 8006ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007002:	4770      	bx	lr

08007004 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 8007004:	b580      	push	{r7, lr}
 8007006:	b084      	sub	sp, #16
 8007008:	af00      	add	r7, sp, #0
 800700a:	60f8      	str	r0, [r7, #12]
 800700c:	60b9      	str	r1, [r7, #8]
 800700e:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8007010:	68b8      	ldr	r0, [r7, #8]
 8007012:	f01b fa31 	bl	8022478 <_ZdlPv>
      }
 8007016:	3710      	adds	r7, #16
 8007018:	46bd      	mov	sp, r7
 800701a:	bd80      	pop	{r7, pc}

0800701c <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>:
      _M_valptr() const
 800701c:	b580      	push	{r7, lr}
 800701e:	b082      	sub	sp, #8
 8007020:	af00      	add	r7, sp, #0
 8007022:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8007024:	687b      	ldr	r3, [r7, #4]
 8007026:	3310      	adds	r3, #16
 8007028:	4618      	mov	r0, r3
 800702a:	f000 fbed 	bl	8007808 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>
 800702e:	4603      	mov	r3, r0
 8007030:	4618      	mov	r0, r3
 8007032:	3708      	adds	r7, #8
 8007034:	46bd      	mov	sp, r7
 8007036:	bd80      	pop	{r7, pc}

08007038 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007038:	b480      	push	{r7}
 800703a:	b083      	sub	sp, #12
 800703c:	af00      	add	r7, sp, #0
 800703e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007040:	687b      	ldr	r3, [r7, #4]
 8007042:	4618      	mov	r0, r3
 8007044:	370c      	adds	r7, #12
 8007046:	46bd      	mov	sp, r7
 8007048:	f85d 7b04 	ldr.w	r7, [sp], #4
 800704c:	4770      	bx	lr

0800704e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>:
      _M_get_node()
 800704e:	b580      	push	{r7, lr}
 8007050:	b082      	sub	sp, #8
 8007052:	af00      	add	r7, sp, #0
 8007054:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 8007056:	6878      	ldr	r0, [r7, #4]
 8007058:	f7ff facc 	bl	80065f4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 800705c:	4603      	mov	r3, r0
 800705e:	2101      	movs	r1, #1
 8007060:	4618      	mov	r0, r3
 8007062:	f000 fbdd 	bl	8007820 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE8allocateERS6_j>
 8007066:	4603      	mov	r3, r0
 8007068:	4618      	mov	r0, r3
 800706a:	3708      	adds	r7, #8
 800706c:	46bd      	mov	sp, r7
 800706e:	bd80      	pop	{r7, pc}

08007070 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8007070:	b5b0      	push	{r4, r5, r7, lr}
 8007072:	b084      	sub	sp, #16
 8007074:	af00      	add	r7, sp, #0
 8007076:	60f8      	str	r0, [r7, #12]
 8007078:	60b9      	str	r1, [r7, #8]
 800707a:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 800707c:	68bb      	ldr	r3, [r7, #8]
 800707e:	4619      	mov	r1, r3
 8007080:	2014      	movs	r0, #20
 8007082:	f7f9 ffea 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8007086:	68f8      	ldr	r0, [r7, #12]
 8007088:	f7ff fab4 	bl	80065f4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 800708c:	4604      	mov	r4, r0
 800708e:	68b8      	ldr	r0, [r7, #8]
 8007090:	f7ff fabb 	bl	800660a <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 8007094:	4605      	mov	r5, r0
 8007096:	6878      	ldr	r0, [r7, #4]
 8007098:	f7fd fd98 	bl	8004bcc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 800709c:	4603      	mov	r3, r0
 800709e:	461a      	mov	r2, r3
 80070a0:	4629      	mov	r1, r5
 80070a2:	4620      	mov	r0, r4
 80070a4:	f000 fbcb 	bl	800783e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>
	}
 80070a8:	bf00      	nop
 80070aa:	3710      	adds	r7, #16
 80070ac:	46bd      	mov	sp, r7
 80070ae:	bdb0      	pop	{r4, r5, r7, pc}

080070b0 <_ZSt11__addressofIiEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80070b0:	b480      	push	{r7}
 80070b2:	b083      	sub	sp, #12
 80070b4:	af00      	add	r7, sp, #0
 80070b6:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80070b8:	687b      	ldr	r3, [r7, #4]
 80070ba:	4618      	mov	r0, r3
 80070bc:	370c      	adds	r7, #12
 80070be:	46bd      	mov	sp, r7
 80070c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070c4:	4770      	bx	lr

080070c6 <_ZSt8_DestroyIiEvPT_>:
    _Destroy(_Tp* __pointer)
 80070c6:	b480      	push	{r7}
 80070c8:	b083      	sub	sp, #12
 80070ca:	af00      	add	r7, sp, #0
 80070cc:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80070ce:	bf00      	nop
 80070d0:	370c      	adds	r7, #12
 80070d2:	46bd      	mov	sp, r7
 80070d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070d8:	4770      	bx	lr

080070da <_ZSt11__addressofIfEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80070da:	b480      	push	{r7}
 80070dc:	b083      	sub	sp, #12
 80070de:	af00      	add	r7, sp, #0
 80070e0:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	4618      	mov	r0, r3
 80070e6:	370c      	adds	r7, #12
 80070e8:	46bd      	mov	sp, r7
 80070ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070ee:	4770      	bx	lr

080070f0 <_ZSt8_DestroyIfEvPT_>:
    _Destroy(_Tp* __pointer)
 80070f0:	b480      	push	{r7}
 80070f2:	b083      	sub	sp, #12
 80070f4:	af00      	add	r7, sp, #0
 80070f6:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80070f8:	bf00      	nop
 80070fa:	370c      	adds	r7, #12
 80070fc:	46bd      	mov	sp, r7
 80070fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007102:	4770      	bx	lr

08007104 <_ZSt11__addressofIbEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8007104:	b480      	push	{r7}
 8007106:	b083      	sub	sp, #12
 8007108:	af00      	add	r7, sp, #0
 800710a:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800710c:	687b      	ldr	r3, [r7, #4]
 800710e:	4618      	mov	r0, r3
 8007110:	370c      	adds	r7, #12
 8007112:	46bd      	mov	sp, r7
 8007114:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007118:	4770      	bx	lr

0800711a <_ZSt8_DestroyIbEvPT_>:
    _Destroy(_Tp* __pointer)
 800711a:	b480      	push	{r7}
 800711c:	b083      	sub	sp, #12
 800711e:	af00      	add	r7, sp, #0
 8007120:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8007122:	bf00      	nop
 8007124:	370c      	adds	r7, #12
 8007126:	46bd      	mov	sp, r7
 8007128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800712c:	4770      	bx	lr

0800712e <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800712e:	b480      	push	{r7}
 8007130:	b083      	sub	sp, #12
 8007132:	af00      	add	r7, sp, #0
 8007134:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8007136:	687b      	ldr	r3, [r7, #4]
 8007138:	4618      	mov	r0, r3
 800713a:	370c      	adds	r7, #12
 800713c:	46bd      	mov	sp, r7
 800713e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007142:	4770      	bx	lr

08007144 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>:
    _Destroy(_Tp* __pointer)
 8007144:	b580      	push	{r7, lr}
 8007146:	b082      	sub	sp, #8
 8007148:	af00      	add	r7, sp, #0
 800714a:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800714c:	6878      	ldr	r0, [r7, #4]
 800714e:	f01b fc48 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8007152:	bf00      	nop
 8007154:	3708      	adds	r7, #8
 8007156:	46bd      	mov	sp, r7
 8007158:	bd80      	pop	{r7, pc}

0800715a <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800715a:	b480      	push	{r7}
 800715c:	b083      	sub	sp, #12
 800715e:	af00      	add	r7, sp, #0
 8007160:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	4618      	mov	r0, r3
 8007166:	370c      	adds	r7, #12
 8007168:	46bd      	mov	sp, r7
 800716a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800716e:	4770      	bx	lr

08007170 <_ZSt8_DestroyISt6vectorI6SymbolSaIS1_EEEvPT_>:
    _Destroy(_Tp* __pointer)
 8007170:	b580      	push	{r7, lr}
 8007172:	b082      	sub	sp, #8
 8007174:	af00      	add	r7, sp, #0
 8007176:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8007178:	6878      	ldr	r0, [r7, #4]
 800717a:	f000 fb73 	bl	8007864 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
 800717e:	bf00      	nop
 8007180:	3708      	adds	r7, #8
 8007182:	46bd      	mov	sp, r7
 8007184:	bd80      	pop	{r7, pc}

08007186 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8007186:	b590      	push	{r4, r7, lr}
 8007188:	b085      	sub	sp, #20
 800718a:	af00      	add	r7, sp, #0
 800718c:	60f8      	str	r0, [r7, #12]
 800718e:	7239      	strb	r1, [r7, #8]
 8007190:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 8007192:	6878      	ldr	r0, [r7, #4]
 8007194:	f7fc fec8 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8007198:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 800719a:	68fb      	ldr	r3, [r7, #12]
 800719c:	4618      	mov	r0, r3
 800719e:	f000 fb7c 	bl	800789a <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 80071a2:	4603      	mov	r3, r0
 80071a4:	4619      	mov	r1, r3
 80071a6:	2018      	movs	r0, #24
 80071a8:	f7f9 ff57 	bl	800105a <_ZnwjPv>
 80071ac:	4603      	mov	r3, r0
 80071ae:	4621      	mov	r1, r4
 80071b0:	4618      	mov	r0, r3
 80071b2:	f01b fddb 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	}
 80071b6:	68fb      	ldr	r3, [r7, #12]
 80071b8:	4618      	mov	r0, r3
 80071ba:	3714      	adds	r7, #20
 80071bc:	46bd      	mov	sp, r7
 80071be:	bd90      	pop	{r4, r7, pc}

080071c0 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 80071c0:	b5b0      	push	{r4, r5, r7, lr}
 80071c2:	b084      	sub	sp, #16
 80071c4:	af00      	add	r7, sp, #0
 80071c6:	60f8      	str	r0, [r7, #12]
 80071c8:	7239      	strb	r1, [r7, #8]
 80071ca:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 80071cc:	68fc      	ldr	r4, [r7, #12]
 80071ce:	6878      	ldr	r0, [r7, #4]
 80071d0:	f7fc feaa 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80071d4:	4603      	mov	r3, r0
 80071d6:	461a      	mov	r2, r3
 80071d8:	4629      	mov	r1, r5
 80071da:	4620      	mov	r0, r4
 80071dc:	f7ff ffd3 	bl	8007186 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 80071e0:	68fb      	ldr	r3, [r7, #12]
 80071e2:	4618      	mov	r0, r3
 80071e4:	3710      	adds	r7, #16
 80071e6:	46bd      	mov	sp, r7
 80071e8:	bdb0      	pop	{r4, r5, r7, pc}

080071ea <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80071ea:	b5b0      	push	{r4, r5, r7, lr}
 80071ec:	b084      	sub	sp, #16
 80071ee:	af00      	add	r7, sp, #0
 80071f0:	60f8      	str	r0, [r7, #12]
 80071f2:	7239      	strb	r1, [r7, #8]
 80071f4:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80071f6:	68fc      	ldr	r4, [r7, #12]
 80071f8:	6878      	ldr	r0, [r7, #4]
 80071fa:	f7fc fe95 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80071fe:	4603      	mov	r3, r0
 8007200:	461a      	mov	r2, r3
 8007202:	4629      	mov	r1, r5
 8007204:	4620      	mov	r0, r4
 8007206:	f7ff ffdb 	bl	80071c0 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800720a:	68fb      	ldr	r3, [r7, #12]
 800720c:	4618      	mov	r0, r3
 800720e:	3710      	adds	r7, #16
 8007210:	46bd      	mov	sp, r7
 8007212:	bdb0      	pop	{r4, r5, r7, pc}

08007214 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8007214:	b5b0      	push	{r4, r5, r7, lr}
 8007216:	b084      	sub	sp, #16
 8007218:	af00      	add	r7, sp, #0
 800721a:	60f8      	str	r0, [r7, #12]
 800721c:	7239      	strb	r1, [r7, #8]
 800721e:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8007220:	68fc      	ldr	r4, [r7, #12]
 8007222:	6878      	ldr	r0, [r7, #4]
 8007224:	f7fc fe80 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8007228:	4603      	mov	r3, r0
 800722a:	461a      	mov	r2, r3
 800722c:	4629      	mov	r1, r5
 800722e:	4620      	mov	r0, r4
 8007230:	f7ff ffdb 	bl	80071ea <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8007234:	68fb      	ldr	r3, [r7, #12]
 8007236:	4618      	mov	r0, r3
 8007238:	3710      	adds	r7, #16
 800723a:	46bd      	mov	sp, r7
 800723c:	bdb0      	pop	{r4, r5, r7, pc}

0800723e <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800723e:	b5b0      	push	{r4, r5, r7, lr}
 8007240:	b084      	sub	sp, #16
 8007242:	af00      	add	r7, sp, #0
 8007244:	60f8      	str	r0, [r7, #12]
 8007246:	7239      	strb	r1, [r7, #8]
 8007248:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800724a:	68fc      	ldr	r4, [r7, #12]
 800724c:	6878      	ldr	r0, [r7, #4]
 800724e:	f7fc fe6b 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8007252:	4603      	mov	r3, r0
 8007254:	461a      	mov	r2, r3
 8007256:	4629      	mov	r1, r5
 8007258:	4620      	mov	r0, r4
 800725a:	f7ff ffdb 	bl	8007214 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800725e:	68fb      	ldr	r3, [r7, #12]
 8007260:	4618      	mov	r0, r3
 8007262:	3710      	adds	r7, #16
 8007264:	46bd      	mov	sp, r7
 8007266:	bdb0      	pop	{r4, r5, r7, pc}

08007268 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8007268:	b5b0      	push	{r4, r5, r7, lr}
 800726a:	b084      	sub	sp, #16
 800726c:	af00      	add	r7, sp, #0
 800726e:	60f8      	str	r0, [r7, #12]
 8007270:	7239      	strb	r1, [r7, #8]
 8007272:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 8007274:	68fc      	ldr	r4, [r7, #12]
 8007276:	6878      	ldr	r0, [r7, #4]
 8007278:	f7fc fe56 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800727c:	4603      	mov	r3, r0
 800727e:	461a      	mov	r2, r3
 8007280:	4629      	mov	r1, r5
 8007282:	4620      	mov	r0, r4
 8007284:	f7ff ffdb 	bl	800723e <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8007288:	68fb      	ldr	r3, [r7, #12]
 800728a:	2203      	movs	r2, #3
 800728c:	761a      	strb	r2, [r3, #24]
	{ }
 800728e:	68fb      	ldr	r3, [r7, #12]
 8007290:	4618      	mov	r0, r3
 8007292:	3710      	adds	r7, #16
 8007294:	46bd      	mov	sp, r7
 8007296:	bdb0      	pop	{r4, r5, r7, pc}

08007298 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8007298:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800729c:	b084      	sub	sp, #16
 800729e:	af00      	add	r7, sp, #0
 80072a0:	7338      	strb	r0, [r7, #12]
 80072a2:	60b9      	str	r1, [r7, #8]
 80072a4:	607a      	str	r2, [r7, #4]
 80072a6:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80072a8:	68b8      	ldr	r0, [r7, #8]
 80072aa:	f7ff fc22 	bl	8006af2 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80072ae:	4604      	mov	r4, r0
 80072b0:	6878      	ldr	r0, [r7, #4]
 80072b2:	f7fe fbd2 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80072b6:	4605      	mov	r5, r0
 80072b8:	6838      	ldr	r0, [r7, #0]
 80072ba:	f7fc fd98 	bl	8003dee <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80072be:	4632      	mov	r2, r6
 80072c0:	4629      	mov	r1, r5
 80072c2:	4620      	mov	r0, r4
 80072c4:	f000 faf5 	bl	80078b2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_>
 80072c8:	4643      	mov	r3, r8
 80072ca:	4618      	mov	r0, r3
 80072cc:	3710      	adds	r7, #16
 80072ce:	46bd      	mov	sp, r7
 80072d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080072d4 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80072d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072d8:	b084      	sub	sp, #16
 80072da:	af00      	add	r7, sp, #0
 80072dc:	7338      	strb	r0, [r7, #12]
 80072de:	60b9      	str	r1, [r7, #8]
 80072e0:	607a      	str	r2, [r7, #4]
 80072e2:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80072e4:	68b8      	ldr	r0, [r7, #8]
 80072e6:	f7ff fc04 	bl	8006af2 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80072ea:	4604      	mov	r4, r0
 80072ec:	6878      	ldr	r0, [r7, #4]
 80072ee:	f7fe fbd6 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80072f2:	4605      	mov	r5, r0
 80072f4:	6838      	ldr	r0, [r7, #0]
 80072f6:	f7fc fdae 	bl	8003e56 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80072fa:	4632      	mov	r2, r6
 80072fc:	4629      	mov	r1, r5
 80072fe:	4620      	mov	r0, r4
 8007300:	f000 fb1e 	bl	8007940 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_>
 8007304:	4643      	mov	r3, r8
 8007306:	4618      	mov	r0, r3
 8007308:	3710      	adds	r7, #16
 800730a:	46bd      	mov	sp, r7
 800730c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007310 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8007310:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007314:	b084      	sub	sp, #16
 8007316:	af00      	add	r7, sp, #0
 8007318:	7338      	strb	r0, [r7, #12]
 800731a:	60b9      	str	r1, [r7, #8]
 800731c:	607a      	str	r2, [r7, #4]
 800731e:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8007320:	68b8      	ldr	r0, [r7, #8]
 8007322:	f7ff fbe6 	bl	8006af2 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8007326:	4604      	mov	r4, r0
 8007328:	6878      	ldr	r0, [r7, #4]
 800732a:	f7fe fbda 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800732e:	4605      	mov	r5, r0
 8007330:	6838      	ldr	r0, [r7, #0]
 8007332:	f7fc fdc4 	bl	8003ebe <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8007336:	4632      	mov	r2, r6
 8007338:	4629      	mov	r1, r5
 800733a:	4620      	mov	r0, r4
 800733c:	f000 fb47 	bl	80079ce <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_>
 8007340:	4643      	mov	r3, r8
 8007342:	4618      	mov	r0, r3
 8007344:	3710      	adds	r7, #16
 8007346:	46bd      	mov	sp, r7
 8007348:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800734c <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRS9_St17integral_constantIjLj3EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800734c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007350:	b084      	sub	sp, #16
 8007352:	af00      	add	r7, sp, #0
 8007354:	7338      	strb	r0, [r7, #12]
 8007356:	60b9      	str	r1, [r7, #8]
 8007358:	607a      	str	r2, [r7, #4]
 800735a:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800735c:	68b8      	ldr	r0, [r7, #8]
 800735e:	f7ff fbc8 	bl	8006af2 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8007362:	4604      	mov	r4, r0
 8007364:	6878      	ldr	r0, [r7, #4]
 8007366:	f7fe fbea 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800736a:	4605      	mov	r5, r0
 800736c:	6838      	ldr	r0, [r7, #0]
 800736e:	f7fc fde6 	bl	8003f3e <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8007372:	4632      	mov	r2, r6
 8007374:	4629      	mov	r1, r5
 8007376:	4620      	mov	r0, r4
 8007378:	f000 fb71 	bl	8007a5e <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_>
 800737c:	4643      	mov	r3, r8
 800737e:	4618      	mov	r0, r3
 8007380:	3710      	adds	r7, #16
 8007382:	46bd      	mov	sp, r7
 8007384:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007388 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRSD_St17integral_constantIjLj4EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8007388:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800738c:	b084      	sub	sp, #16
 800738e:	af00      	add	r7, sp, #0
 8007390:	7338      	strb	r0, [r7, #12]
 8007392:	60b9      	str	r1, [r7, #8]
 8007394:	607a      	str	r2, [r7, #4]
 8007396:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8007398:	68b8      	ldr	r0, [r7, #8]
 800739a:	f7ff fbaa 	bl	8006af2 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 800739e:	4604      	mov	r4, r0
 80073a0:	6878      	ldr	r0, [r7, #4]
 80073a2:	f7fe fbfa 	bl	8005b9a <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 80073a6:	4605      	mov	r5, r0
 80073a8:	6838      	ldr	r0, [r7, #0]
 80073aa:	f7fc fe08 	bl	8003fbe <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80073ae:	4632      	mov	r2, r6
 80073b0:	4629      	mov	r1, r5
 80073b2:	4620      	mov	r0, r4
 80073b4:	f000 fb9c 	bl	8007af0 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_>
 80073b8:	4643      	mov	r3, r8
 80073ba:	4618      	mov	r0, r3
 80073bc:	3710      	adds	r7, #16
 80073be:	46bd      	mov	sp, r7
 80073c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080073c4 <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_>:
      // Internal erase functions follow.

      // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
      // _M_assign_aux.
      void
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
 80073c4:	b590      	push	{r4, r7, lr}
 80073c6:	b085      	sub	sp, #20
 80073c8:	af00      	add	r7, sp, #0
 80073ca:	6078      	str	r0, [r7, #4]
 80073cc:	6039      	str	r1, [r7, #0]
      {
	if (size_type __n = this->_M_impl._M_finish - __pos)
 80073ce:	687b      	ldr	r3, [r7, #4]
 80073d0:	685a      	ldr	r2, [r3, #4]
 80073d2:	683b      	ldr	r3, [r7, #0]
 80073d4:	1ad3      	subs	r3, r2, r3
 80073d6:	115b      	asrs	r3, r3, #5
 80073d8:	60fb      	str	r3, [r7, #12]
 80073da:	68fb      	ldr	r3, [r7, #12]
 80073dc:	2b00      	cmp	r3, #0
 80073de:	d00e      	beq.n	80073fe <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_+0x3a>
	  {
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 80073e0:	687b      	ldr	r3, [r7, #4]
 80073e2:	685c      	ldr	r4, [r3, #4]
			  _M_get_Tp_allocator());
 80073e4:	687b      	ldr	r3, [r7, #4]
 80073e6:	4618      	mov	r0, r3
 80073e8:	f7ff fb8e 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80073ec:	4603      	mov	r3, r0
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 80073ee:	461a      	mov	r2, r3
 80073f0:	4621      	mov	r1, r4
 80073f2:	6838      	ldr	r0, [r7, #0]
 80073f4:	f7ff fc3d 	bl	8006c72 <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
 80073f8:	687b      	ldr	r3, [r7, #4]
 80073fa:	683a      	ldr	r2, [r7, #0]
 80073fc:	605a      	str	r2, [r3, #4]
	    _GLIBCXX_ASAN_ANNOTATE_SHRINK(__n);
	  }
      }
 80073fe:	bf00      	nop
 8007400:	3714      	adds	r7, #20
 8007402:	46bd      	mov	sp, r7
 8007404:	bd90      	pop	{r4, r7, pc}

08007406 <_ZNSt16allocator_traitsISaI6SymbolEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8007406:	b580      	push	{r7, lr}
 8007408:	b084      	sub	sp, #16
 800740a:	af00      	add	r7, sp, #0
 800740c:	60f8      	str	r0, [r7, #12]
 800740e:	60b9      	str	r1, [r7, #8]
 8007410:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8007412:	687a      	ldr	r2, [r7, #4]
 8007414:	68b9      	ldr	r1, [r7, #8]
 8007416:	68f8      	ldr	r0, [r7, #12]
 8007418:	f000 fbb3 	bl	8007b82 <_ZN9__gnu_cxx13new_allocatorI6SymbolE10deallocateEPS1_j>
 800741c:	bf00      	nop
 800741e:	3710      	adds	r7, #16
 8007420:	46bd      	mov	sp, r7
 8007422:	bd80      	pop	{r7, pc}

08007424 <_ZSt18__do_alloc_on_copyISaI6SymbolEEvRT_RKS2_St17integral_constantIbLb0EE>:
    __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 8007424:	b480      	push	{r7}
 8007426:	b085      	sub	sp, #20
 8007428:	af00      	add	r7, sp, #0
 800742a:	60f8      	str	r0, [r7, #12]
 800742c:	60b9      	str	r1, [r7, #8]
 800742e:	713a      	strb	r2, [r7, #4]
    { }
 8007430:	bf00      	nop
 8007432:	3714      	adds	r7, #20
 8007434:	46bd      	mov	sp, r7
 8007436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800743a:	4770      	bx	lr

0800743c <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800743c:	b480      	push	{r7}
 800743e:	b083      	sub	sp, #12
 8007440:	af00      	add	r7, sp, #0
 8007442:	6078      	str	r0, [r7, #4]
 8007444:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8007446:	683b      	ldr	r3, [r7, #0]
 8007448:	681a      	ldr	r2, [r3, #0]
 800744a:	687b      	ldr	r3, [r7, #4]
 800744c:	601a      	str	r2, [r3, #0]
 800744e:	687b      	ldr	r3, [r7, #4]
 8007450:	4618      	mov	r0, r3
 8007452:	370c      	adds	r7, #12
 8007454:	46bd      	mov	sp, r7
 8007456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800745a:	4770      	bx	lr

0800745c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 800745c:	b580      	push	{r7, lr}
 800745e:	b082      	sub	sp, #8
 8007460:	af00      	add	r7, sp, #0
 8007462:	6078      	str	r0, [r7, #4]
 8007464:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8007466:	683b      	ldr	r3, [r7, #0]
 8007468:	2b00      	cmp	r3, #0
 800746a:	d006      	beq.n	800747a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj+0x1e>
 800746c:	687b      	ldr	r3, [r7, #4]
 800746e:	6839      	ldr	r1, [r7, #0]
 8007470:	4618      	mov	r0, r3
 8007472:	f000 fb92 	bl	8007b9a <_ZNSt16allocator_traitsISaI6SymbolEE8allocateERS1_j>
 8007476:	4603      	mov	r3, r0
 8007478:	e000      	b.n	800747c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj+0x20>
 800747a:	2300      	movs	r3, #0
      }
 800747c:	4618      	mov	r0, r3
 800747e:	3708      	adds	r7, #8
 8007480:	46bd      	mov	sp, r7
 8007482:	bd80      	pop	{r7, pc}

08007484 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 8007484:	b580      	push	{r7, lr}
 8007486:	b084      	sub	sp, #16
 8007488:	af00      	add	r7, sp, #0
 800748a:	60f8      	str	r0, [r7, #12]
 800748c:	60b9      	str	r1, [r7, #8]
 800748e:	607a      	str	r2, [r7, #4]
 8007490:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 8007492:	687a      	ldr	r2, [r7, #4]
 8007494:	68b9      	ldr	r1, [r7, #8]
 8007496:	68f8      	ldr	r0, [r7, #12]
 8007498:	f000 fb8e 	bl	8007bb8 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_>
 800749c:	4603      	mov	r3, r0
 800749e:	4618      	mov	r0, r3
 80074a0:	3710      	adds	r7, #16
 80074a2:	46bd      	mov	sp, r7
 80074a4:	bd80      	pop	{r7, pc}

080074a6 <_ZSt8_DestroyIP6SymbolEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 80074a6:	b580      	push	{r7, lr}
 80074a8:	b082      	sub	sp, #8
 80074aa:	af00      	add	r7, sp, #0
 80074ac:	6078      	str	r0, [r7, #4]
 80074ae:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 80074b0:	6839      	ldr	r1, [r7, #0]
 80074b2:	6878      	ldr	r0, [r7, #4]
 80074b4:	f000 fb92 	bl	8007bdc <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_>
    }
 80074b8:	bf00      	nop
 80074ba:	3708      	adds	r7, #8
 80074bc:	46bd      	mov	sp, r7
 80074be:	bd80      	pop	{r7, pc}

080074c0 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 80074c0:	b480      	push	{r7}
 80074c2:	b083      	sub	sp, #12
 80074c4:	af00      	add	r7, sp, #0
 80074c6:	6078      	str	r0, [r7, #4]
 80074c8:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 80074ca:	683b      	ldr	r3, [r7, #0]
 80074cc:	681a      	ldr	r2, [r3, #0]
 80074ce:	687b      	ldr	r3, [r7, #4]
 80074d0:	601a      	str	r2, [r3, #0]
 80074d2:	687b      	ldr	r3, [r7, #4]
 80074d4:	4618      	mov	r0, r3
 80074d6:	370c      	adds	r7, #12
 80074d8:	46bd      	mov	sp, r7
 80074da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074de:	4770      	bx	lr

080074e0 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>:

  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    inline _Iterator
    __miter_base(_Iterator __it)
 80074e0:	b480      	push	{r7}
 80074e2:	b083      	sub	sp, #12
 80074e4:	af00      	add	r7, sp, #0
 80074e6:	6078      	str	r0, [r7, #4]
    { return __it; }
 80074e8:	687b      	ldr	r3, [r7, #4]
 80074ea:	4618      	mov	r0, r3
 80074ec:	370c      	adds	r7, #12
 80074ee:	46bd      	mov	sp, r7
 80074f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074f4:	4770      	bx	lr

080074f6 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 80074f6:	b5b0      	push	{r4, r5, r7, lr}
 80074f8:	b084      	sub	sp, #16
 80074fa:	af00      	add	r7, sp, #0
 80074fc:	60f8      	str	r0, [r7, #12]
 80074fe:	60b9      	str	r1, [r7, #8]
 8007500:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 8007502:	68f8      	ldr	r0, [r7, #12]
 8007504:	f000 fb82 	bl	8007c0c <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>
 8007508:	4604      	mov	r4, r0
 800750a:	68b8      	ldr	r0, [r7, #8]
 800750c:	f000 fb7e 	bl	8007c0c <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>
 8007510:	4605      	mov	r5, r0
 8007512:	6878      	ldr	r0, [r7, #4]
 8007514:	f000 fb88 	bl	8007c28 <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 8007518:	4603      	mov	r3, r0
 800751a:	461a      	mov	r2, r3
 800751c:	4629      	mov	r1, r5
 800751e:	4620      	mov	r0, r4
 8007520:	f000 fb90 	bl	8007c44 <_ZSt13__copy_move_aILb0EPK6SymbolPS0_ET1_T0_S5_S4_>
 8007524:	4603      	mov	r3, r0
 8007526:	4619      	mov	r1, r3
 8007528:	6878      	ldr	r0, [r7, #4]
 800752a:	f000 fb9d 	bl	8007c68 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_>
 800752e:	4603      	mov	r3, r0
    }
 8007530:	4618      	mov	r0, r3
 8007532:	3710      	adds	r7, #16
 8007534:	46bd      	mov	sp, r7
 8007536:	bdb0      	pop	{r4, r5, r7, pc}

08007538 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEEEvT_S8_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8007538:	b580      	push	{r7, lr}
 800753a:	b082      	sub	sp, #8
 800753c:	af00      	add	r7, sp, #0
 800753e:	6078      	str	r0, [r7, #4]
 8007540:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8007542:	6839      	ldr	r1, [r7, #0]
 8007544:	6878      	ldr	r0, [r7, #4]
 8007546:	f000 fba6 	bl	8007c96 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_>
    }
 800754a:	bf00      	nop
 800754c:	3708      	adds	r7, #8
 800754e:	46bd      	mov	sp, r7
 8007550:	bd80      	pop	{r7, pc}

08007552 <_ZSt12__miter_baseIP6SymbolET_S2_>:
    __miter_base(_Iterator __it)
 8007552:	b480      	push	{r7}
 8007554:	b083      	sub	sp, #12
 8007556:	af00      	add	r7, sp, #0
 8007558:	6078      	str	r0, [r7, #4]
    { return __it; }
 800755a:	687b      	ldr	r3, [r7, #4]
 800755c:	4618      	mov	r0, r3
 800755e:	370c      	adds	r7, #12
 8007560:	46bd      	mov	sp, r7
 8007562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007566:	4770      	bx	lr

08007568 <_ZSt14__copy_move_a2ILb0EP6SymbolS1_ET1_T0_S3_S2_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 8007568:	b5b0      	push	{r4, r5, r7, lr}
 800756a:	b084      	sub	sp, #16
 800756c:	af00      	add	r7, sp, #0
 800756e:	60f8      	str	r0, [r7, #12]
 8007570:	60b9      	str	r1, [r7, #8]
 8007572:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 8007574:	68f8      	ldr	r0, [r7, #12]
 8007576:	f000 fbb1 	bl	8007cdc <_ZSt12__niter_baseIP6SymbolET_S2_>
 800757a:	4604      	mov	r4, r0
 800757c:	68b8      	ldr	r0, [r7, #8]
 800757e:	f000 fbad 	bl	8007cdc <_ZSt12__niter_baseIP6SymbolET_S2_>
 8007582:	4605      	mov	r5, r0
 8007584:	687b      	ldr	r3, [r7, #4]
 8007586:	4618      	mov	r0, r3
 8007588:	f000 fba8 	bl	8007cdc <_ZSt12__niter_baseIP6SymbolET_S2_>
 800758c:	4603      	mov	r3, r0
 800758e:	461a      	mov	r2, r3
 8007590:	4629      	mov	r1, r5
 8007592:	4620      	mov	r0, r4
 8007594:	f000 fbad 	bl	8007cf2 <_ZSt13__copy_move_aILb0EP6SymbolS1_ET1_T0_S3_S2_>
 8007598:	4602      	mov	r2, r0
 800759a:	1d3b      	adds	r3, r7, #4
 800759c:	4611      	mov	r1, r2
 800759e:	4618      	mov	r0, r3
 80075a0:	f000 fbb9 	bl	8007d16 <_ZSt12__niter_wrapIP6SymbolET_RKS2_S2_>
 80075a4:	4603      	mov	r3, r0
    }
 80075a6:	4618      	mov	r0, r3
 80075a8:	3710      	adds	r7, #16
 80075aa:	46bd      	mov	sp, r7
 80075ac:	bdb0      	pop	{r4, r5, r7, pc}

080075ae <_ZSt18uninitialized_copyIP6SymbolS1_ET0_T_S3_S2_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 80075ae:	b580      	push	{r7, lr}
 80075b0:	b086      	sub	sp, #24
 80075b2:	af00      	add	r7, sp, #0
 80075b4:	60f8      	str	r0, [r7, #12]
 80075b6:	60b9      	str	r1, [r7, #8]
 80075b8:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 80075ba:	2301      	movs	r3, #1
 80075bc:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 80075be:	687a      	ldr	r2, [r7, #4]
 80075c0:	68b9      	ldr	r1, [r7, #8]
 80075c2:	68f8      	ldr	r0, [r7, #12]
 80075c4:	f000 fbb3 	bl	8007d2e <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_>
 80075c8:	4603      	mov	r3, r0
    }
 80075ca:	4618      	mov	r0, r3
 80075cc:	3718      	adds	r7, #24
 80075ce:	46bd      	mov	sp, r7
 80075d0:	bd80      	pop	{r7, pc}

080075d2 <_ZNSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 80075d2:	b590      	push	{r4, r7, lr}
 80075d4:	b085      	sub	sp, #20
 80075d6:	af00      	add	r7, sp, #0
 80075d8:	60f8      	str	r0, [r7, #12]
 80075da:	7239      	strb	r1, [r7, #8]
 80075dc:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 80075de:	6878      	ldr	r0, [r7, #4]
 80075e0:	f7fc fce2 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 80075e4:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 80075e6:	68fb      	ldr	r3, [r7, #12]
 80075e8:	4618      	mov	r0, r3
 80075ea:	f000 fbc0 	bl	8007d6e <_ZSt9addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>
 80075ee:	4603      	mov	r3, r0
 80075f0:	4619      	mov	r1, r3
 80075f2:	200c      	movs	r0, #12
 80075f4:	f7f9 fd31 	bl	800105a <_ZnwjPv>
 80075f8:	4603      	mov	r3, r0
 80075fa:	4621      	mov	r1, r4
 80075fc:	4618      	mov	r0, r3
 80075fe:	f000 fbc2 	bl	8007d86 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
	}
 8007602:	68fb      	ldr	r3, [r7, #12]
 8007604:	4618      	mov	r0, r3
 8007606:	3714      	adds	r7, #20
 8007608:	46bd      	mov	sp, r7
 800760a:	bd90      	pop	{r4, r7, pc}

0800760c <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 800760c:	b5b0      	push	{r4, r5, r7, lr}
 800760e:	b084      	sub	sp, #16
 8007610:	af00      	add	r7, sp, #0
 8007612:	60f8      	str	r0, [r7, #12]
 8007614:	7239      	strb	r1, [r7, #8]
 8007616:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8007618:	68fc      	ldr	r4, [r7, #12]
 800761a:	6878      	ldr	r0, [r7, #4]
 800761c:	f7fc fcc4 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007620:	4603      	mov	r3, r0
 8007622:	461a      	mov	r2, r3
 8007624:	4629      	mov	r1, r5
 8007626:	4620      	mov	r0, r4
 8007628:	f7ff ffd3 	bl	80075d2 <_ZNSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800762c:	68fb      	ldr	r3, [r7, #12]
 800762e:	4618      	mov	r0, r3
 8007630:	3710      	adds	r7, #16
 8007632:	46bd      	mov	sp, r7
 8007634:	bdb0      	pop	{r4, r5, r7, pc}

08007636 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8007636:	b5b0      	push	{r4, r5, r7, lr}
 8007638:	b084      	sub	sp, #16
 800763a:	af00      	add	r7, sp, #0
 800763c:	60f8      	str	r0, [r7, #12]
 800763e:	7239      	strb	r1, [r7, #8]
 8007640:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8007642:	68fc      	ldr	r4, [r7, #12]
 8007644:	6878      	ldr	r0, [r7, #4]
 8007646:	f7fc fcaf 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800764a:	4603      	mov	r3, r0
 800764c:	461a      	mov	r2, r3
 800764e:	4629      	mov	r1, r5
 8007650:	4620      	mov	r0, r4
 8007652:	f7ff ffdb 	bl	800760c <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8007656:	68fb      	ldr	r3, [r7, #12]
 8007658:	4618      	mov	r0, r3
 800765a:	3710      	adds	r7, #16
 800765c:	46bd      	mov	sp, r7
 800765e:	bdb0      	pop	{r4, r5, r7, pc}

08007660 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8007660:	b5b0      	push	{r4, r5, r7, lr}
 8007662:	b084      	sub	sp, #16
 8007664:	af00      	add	r7, sp, #0
 8007666:	60f8      	str	r0, [r7, #12]
 8007668:	7239      	strb	r1, [r7, #8]
 800766a:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800766c:	68fc      	ldr	r4, [r7, #12]
 800766e:	6878      	ldr	r0, [r7, #4]
 8007670:	f7fc fc9a 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007674:	4603      	mov	r3, r0
 8007676:	461a      	mov	r2, r3
 8007678:	4629      	mov	r1, r5
 800767a:	4620      	mov	r0, r4
 800767c:	f7ff ffdb 	bl	8007636 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8007680:	68fb      	ldr	r3, [r7, #12]
 8007682:	4618      	mov	r0, r3
 8007684:	3710      	adds	r7, #16
 8007686:	46bd      	mov	sp, r7
 8007688:	bdb0      	pop	{r4, r5, r7, pc}

0800768a <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800768a:	b5b0      	push	{r4, r5, r7, lr}
 800768c:	b084      	sub	sp, #16
 800768e:	af00      	add	r7, sp, #0
 8007690:	60f8      	str	r0, [r7, #12]
 8007692:	7239      	strb	r1, [r7, #8]
 8007694:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8007696:	68fc      	ldr	r4, [r7, #12]
 8007698:	6878      	ldr	r0, [r7, #4]
 800769a:	f7fc fc85 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800769e:	4603      	mov	r3, r0
 80076a0:	461a      	mov	r2, r3
 80076a2:	4629      	mov	r1, r5
 80076a4:	4620      	mov	r0, r4
 80076a6:	f7ff ffdb 	bl	8007660 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80076aa:	68fb      	ldr	r3, [r7, #12]
 80076ac:	4618      	mov	r0, r3
 80076ae:	3710      	adds	r7, #16
 80076b0:	46bd      	mov	sp, r7
 80076b2:	bdb0      	pop	{r4, r5, r7, pc}

080076b4 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80076b4:	b5b0      	push	{r4, r5, r7, lr}
 80076b6:	b084      	sub	sp, #16
 80076b8:	af00      	add	r7, sp, #0
 80076ba:	60f8      	str	r0, [r7, #12]
 80076bc:	7239      	strb	r1, [r7, #8]
 80076be:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80076c0:	68fc      	ldr	r4, [r7, #12]
 80076c2:	6878      	ldr	r0, [r7, #4]
 80076c4:	f7fc fc70 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 80076c8:	4603      	mov	r3, r0
 80076ca:	461a      	mov	r2, r3
 80076cc:	4629      	mov	r1, r5
 80076ce:	4620      	mov	r0, r4
 80076d0:	f7ff ffdb 	bl	800768a <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80076d4:	68fb      	ldr	r3, [r7, #12]
 80076d6:	4618      	mov	r0, r3
 80076d8:	3710      	adds	r7, #16
 80076da:	46bd      	mov	sp, r7
 80076dc:	bdb0      	pop	{r4, r5, r7, pc}

080076de <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 80076de:	b5b0      	push	{r4, r5, r7, lr}
 80076e0:	b084      	sub	sp, #16
 80076e2:	af00      	add	r7, sp, #0
 80076e4:	60f8      	str	r0, [r7, #12]
 80076e6:	7239      	strb	r1, [r7, #8]
 80076e8:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 80076ea:	68fc      	ldr	r4, [r7, #12]
 80076ec:	6878      	ldr	r0, [r7, #4]
 80076ee:	f7fc fc5b 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 80076f2:	4603      	mov	r3, r0
 80076f4:	461a      	mov	r2, r3
 80076f6:	4629      	mov	r1, r5
 80076f8:	4620      	mov	r0, r4
 80076fa:	f7ff ffdb 	bl	80076b4 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 80076fe:	68fb      	ldr	r3, [r7, #12]
 8007700:	2204      	movs	r2, #4
 8007702:	761a      	strb	r2, [r3, #24]
	{ }
 8007704:	68fb      	ldr	r3, [r7, #12]
 8007706:	4618      	mov	r0, r3
 8007708:	3710      	adds	r7, #16
 800770a:	46bd      	mov	sp, r7
 800770c:	bdb0      	pop	{r4, r5, r7, pc}

0800770e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>:
      _M_addr() noexcept
 800770e:	b480      	push	{r7}
 8007710:	b083      	sub	sp, #12
 8007712:	af00      	add	r7, sp, #0
 8007714:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8007716:	687b      	ldr	r3, [r7, #4]
 8007718:	4618      	mov	r0, r3
 800771a:	370c      	adds	r7, #12
 800771c:	46bd      	mov	sp, r7
 800771e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007722:	4770      	bx	lr

08007724 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8007724:	b580      	push	{r7, lr}
 8007726:	b082      	sub	sp, #8
 8007728:	af00      	add	r7, sp, #0
 800772a:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 800772c:	6878      	ldr	r0, [r7, #4]
 800772e:	f000 fb67 	bl	8007e00 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>
 8007732:	4603      	mov	r3, r0
 8007734:	4618      	mov	r0, r3
 8007736:	3708      	adds	r7, #8
 8007738:	46bd      	mov	sp, r7
 800773a:	bd80      	pop	{r7, pc}

0800773c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 800773c:	b580      	push	{r7, lr}
 800773e:	b082      	sub	sp, #8
 8007740:	af00      	add	r7, sp, #0
 8007742:	6078      	str	r0, [r7, #4]
 8007744:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8007746:	2200      	movs	r2, #0
 8007748:	6839      	ldr	r1, [r7, #0]
 800774a:	6878      	ldr	r0, [r7, #4]
 800774c:	f000 fb63 	bl	8007e16 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv>
 8007750:	4603      	mov	r3, r0
 8007752:	4618      	mov	r0, r3
 8007754:	3708      	adds	r7, #8
 8007756:	46bd      	mov	sp, r7
 8007758:	bd80      	pop	{r7, pc}

0800775a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 800775a:	b580      	push	{r7, lr}
 800775c:	b084      	sub	sp, #16
 800775e:	af00      	add	r7, sp, #0
 8007760:	60f8      	str	r0, [r7, #12]
 8007762:	60b9      	str	r1, [r7, #8]
 8007764:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8007766:	6878      	ldr	r0, [r7, #4]
 8007768:	f7fc fe50 	bl	800440c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 800776c:	4603      	mov	r3, r0
 800776e:	461a      	mov	r2, r3
 8007770:	68b9      	ldr	r1, [r7, #8]
 8007772:	68f8      	ldr	r0, [r7, #12]
 8007774:	f000 fb71 	bl	8007e5a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>
 8007778:	bf00      	nop
 800777a:	3710      	adds	r7, #16
 800777c:	46bd      	mov	sp, r7
 800777e:	bd80      	pop	{r7, pc}

08007780 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>:
      _M_addr() noexcept
 8007780:	b480      	push	{r7}
 8007782:	b083      	sub	sp, #12
 8007784:	af00      	add	r7, sp, #0
 8007786:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8007788:	687b      	ldr	r3, [r7, #4]
 800778a:	4618      	mov	r0, r3
 800778c:	370c      	adds	r7, #12
 800778e:	46bd      	mov	sp, r7
 8007790:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007794:	4770      	bx	lr

08007796 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8007796:	b580      	push	{r7, lr}
 8007798:	b082      	sub	sp, #8
 800779a:	af00      	add	r7, sp, #0
 800779c:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 800779e:	6878      	ldr	r0, [r7, #4]
 80077a0:	f000 fb73 	bl	8007e8a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>
 80077a4:	4603      	mov	r3, r0
 80077a6:	4618      	mov	r0, r3
 80077a8:	3708      	adds	r7, #8
 80077aa:	46bd      	mov	sp, r7
 80077ac:	bd80      	pop	{r7, pc}

080077ae <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE8allocateERSC_j>:
      allocate(allocator_type& __a, size_type __n)
 80077ae:	b580      	push	{r7, lr}
 80077b0:	b082      	sub	sp, #8
 80077b2:	af00      	add	r7, sp, #0
 80077b4:	6078      	str	r0, [r7, #4]
 80077b6:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 80077b8:	2200      	movs	r2, #0
 80077ba:	6839      	ldr	r1, [r7, #0]
 80077bc:	6878      	ldr	r0, [r7, #4]
 80077be:	f000 fb6f 	bl	8007ea0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv>
 80077c2:	4603      	mov	r3, r0
 80077c4:	4618      	mov	r0, r3
 80077c6:	3708      	adds	r7, #8
 80077c8:	46bd      	mov	sp, r7
 80077ca:	bd80      	pop	{r7, pc}

080077cc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE9constructISA_JRKSA_EEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80077cc:	b580      	push	{r7, lr}
 80077ce:	b084      	sub	sp, #16
 80077d0:	af00      	add	r7, sp, #0
 80077d2:	60f8      	str	r0, [r7, #12]
 80077d4:	60b9      	str	r1, [r7, #8]
 80077d6:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 80077d8:	6878      	ldr	r0, [r7, #4]
 80077da:	f7fd f80d 	bl	80047f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 80077de:	4603      	mov	r3, r0
 80077e0:	461a      	mov	r2, r3
 80077e2:	68b9      	ldr	r1, [r7, #8]
 80077e4:	68f8      	ldr	r0, [r7, #12]
 80077e6:	f000 fb90 	bl	8007f0a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE9constructISB_JRKSB_EEEvPT_DpOT0_>
 80077ea:	bf00      	nop
 80077ec:	3710      	adds	r7, #16
 80077ee:	46bd      	mov	sp, r7
 80077f0:	bd80      	pop	{r7, pc}

080077f2 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>:
      _M_addr() noexcept
 80077f2:	b480      	push	{r7}
 80077f4:	b083      	sub	sp, #12
 80077f6:	af00      	add	r7, sp, #0
 80077f8:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 80077fa:	687b      	ldr	r3, [r7, #4]
 80077fc:	4618      	mov	r0, r3
 80077fe:	370c      	adds	r7, #12
 8007800:	46bd      	mov	sp, r7
 8007802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007806:	4770      	bx	lr

08007808 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8007808:	b580      	push	{r7, lr}
 800780a:	b082      	sub	sp, #8
 800780c:	af00      	add	r7, sp, #0
 800780e:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8007810:	6878      	ldr	r0, [r7, #4]
 8007812:	f000 fb92 	bl	8007f3a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>
 8007816:	4603      	mov	r3, r0
 8007818:	4618      	mov	r0, r3
 800781a:	3708      	adds	r7, #8
 800781c:	46bd      	mov	sp, r7
 800781e:	bd80      	pop	{r7, pc}

08007820 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 8007820:	b580      	push	{r7, lr}
 8007822:	b082      	sub	sp, #8
 8007824:	af00      	add	r7, sp, #0
 8007826:	6078      	str	r0, [r7, #4]
 8007828:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800782a:	2200      	movs	r2, #0
 800782c:	6839      	ldr	r1, [r7, #0]
 800782e:	6878      	ldr	r0, [r7, #4]
 8007830:	f000 fb8e 	bl	8007f50 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv>
 8007834:	4603      	mov	r3, r0
 8007836:	4618      	mov	r0, r3
 8007838:	3708      	adds	r7, #8
 800783a:	46bd      	mov	sp, r7
 800783c:	bd80      	pop	{r7, pc}

0800783e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 800783e:	b580      	push	{r7, lr}
 8007840:	b084      	sub	sp, #16
 8007842:	af00      	add	r7, sp, #0
 8007844:	60f8      	str	r0, [r7, #12]
 8007846:	60b9      	str	r1, [r7, #8]
 8007848:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 800784a:	6878      	ldr	r0, [r7, #4]
 800784c:	f7fd f9be 	bl	8004bcc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007850:	4603      	mov	r3, r0
 8007852:	461a      	mov	r2, r3
 8007854:	68b9      	ldr	r1, [r7, #8]
 8007856:	68f8      	ldr	r0, [r7, #12]
 8007858:	f000 fb9c 	bl	8007f94 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>
 800785c:	bf00      	nop
 800785e:	3710      	adds	r7, #16
 8007860:	46bd      	mov	sp, r7
 8007862:	bd80      	pop	{r7, pc}

08007864 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8007864:	b5b0      	push	{r4, r5, r7, lr}
 8007866:	b082      	sub	sp, #8
 8007868:	af00      	add	r7, sp, #0
 800786a:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800786c:	687b      	ldr	r3, [r7, #4]
 800786e:	681c      	ldr	r4, [r3, #0]
 8007870:	687b      	ldr	r3, [r7, #4]
 8007872:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8007874:	687b      	ldr	r3, [r7, #4]
 8007876:	4618      	mov	r0, r3
 8007878:	f7ff f946 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800787c:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800787e:	461a      	mov	r2, r3
 8007880:	4629      	mov	r1, r5
 8007882:	4620      	mov	r0, r4
 8007884:	f7ff f9f5 	bl	8006c72 <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
      }
 8007888:	687b      	ldr	r3, [r7, #4]
 800788a:	4618      	mov	r0, r3
 800788c:	f000 fba7 	bl	8007fde <_ZNSt12_Vector_baseI6SymbolSaIS0_EED1Ev>
 8007890:	687b      	ldr	r3, [r7, #4]
 8007892:	4618      	mov	r0, r3
 8007894:	3708      	adds	r7, #8
 8007896:	46bd      	mov	sp, r7
 8007898:	bdb0      	pop	{r4, r5, r7, pc}

0800789a <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>:
    addressof(_Tp& __r) noexcept
 800789a:	b580      	push	{r7, lr}
 800789c:	b082      	sub	sp, #8
 800789e:	af00      	add	r7, sp, #0
 80078a0:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 80078a2:	6878      	ldr	r0, [r7, #4]
 80078a4:	f000 fbb4 	bl	8008010 <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 80078a8:	4603      	mov	r3, r0
 80078aa:	4618      	mov	r0, r3
 80078ac:	3708      	adds	r7, #8
 80078ae:	46bd      	mov	sp, r7
 80078b0:	bd80      	pop	{r7, pc}

080078b2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80078b2:	b5b0      	push	{r4, r5, r7, lr}
 80078b4:	b084      	sub	sp, #16
 80078b6:	af00      	add	r7, sp, #0
 80078b8:	60f8      	str	r0, [r7, #12]
 80078ba:	60b9      	str	r1, [r7, #8]
 80078bc:	713a      	strb	r2, [r7, #4]
 80078be:	68fb      	ldr	r3, [r7, #12]
 80078c0:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80078c2:	7e1b      	ldrb	r3, [r3, #24]
 80078c4:	461c      	mov	r4, r3
 80078c6:	1d3b      	adds	r3, r7, #4
 80078c8:	4618      	mov	r0, r3
 80078ca:	f7fd fad5 	bl	8004e78 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 80078ce:	4603      	mov	r3, r0
 80078d0:	429c      	cmp	r4, r3
 80078d2:	bf0c      	ite	eq
 80078d4:	2301      	moveq	r3, #1
 80078d6:	2300      	movne	r3, #0
 80078d8:	b2db      	uxtb	r3, r3
 80078da:	2b00      	cmp	r3, #0
 80078dc:	d00c      	beq.n	80078f8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80078de:	68b8      	ldr	r0, [r7, #8]
 80078e0:	f000 fbac 	bl	800803c <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 80078e4:	4603      	mov	r3, r0
 80078e6:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80078e8:	68fb      	ldr	r3, [r7, #12]
 80078ea:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80078ec:	4618      	mov	r0, r3
 80078ee:	f000 f816 	bl	800791e <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 80078f2:	4603      	mov	r3, r0
 80078f4:	601c      	str	r4, [r3, #0]
	    return {};
 80078f6:	e00d      	b.n	8007914 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80078f8:	68fb      	ldr	r3, [r7, #12]
 80078fa:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 80078fc:	4618      	mov	r0, r3
 80078fe:	f7fe f9ea 	bl	8005cd6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8007902:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8007904:	68b8      	ldr	r0, [r7, #8]
 8007906:	f000 fb99 	bl	800803c <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 800790a:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800790c:	4619      	mov	r1, r3
 800790e:	4620      	mov	r0, r4
 8007910:	f000 fb9f 	bl	8008052 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8007914:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007916:	4618      	mov	r0, r3
 8007918:	3710      	adds	r7, #16
 800791a:	46bd      	mov	sp, r7
 800791c:	bdb0      	pop	{r4, r5, r7, pc}

0800791e <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800791e:	b590      	push	{r4, r7, lr}
 8007920:	b083      	sub	sp, #12
 8007922:	af00      	add	r7, sp, #0
 8007924:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8007926:	6878      	ldr	r0, [r7, #4]
 8007928:	f000 fb7d 	bl	8008026 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800792c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800792e:	4619      	mov	r1, r3
 8007930:	4620      	mov	r0, r4
 8007932:	f7f9 ffed 	bl	8001910 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8007936:	4603      	mov	r3, r0
    }
 8007938:	4618      	mov	r0, r3
 800793a:	370c      	adds	r7, #12
 800793c:	46bd      	mov	sp, r7
 800793e:	bd90      	pop	{r4, r7, pc}

08007940 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007940:	b5b0      	push	{r4, r5, r7, lr}
 8007942:	b084      	sub	sp, #16
 8007944:	af00      	add	r7, sp, #0
 8007946:	60f8      	str	r0, [r7, #12]
 8007948:	60b9      	str	r1, [r7, #8]
 800794a:	713a      	strb	r2, [r7, #4]
 800794c:	68fb      	ldr	r3, [r7, #12]
 800794e:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8007950:	7e1b      	ldrb	r3, [r3, #24]
 8007952:	461c      	mov	r4, r3
 8007954:	1d3b      	adds	r3, r7, #4
 8007956:	4618      	mov	r0, r3
 8007958:	f7fd fadd 	bl	8004f16 <_ZNKSt17integral_constantIjLj1EEcvjEv>
 800795c:	4603      	mov	r3, r0
 800795e:	429c      	cmp	r4, r3
 8007960:	bf0c      	ite	eq
 8007962:	2301      	moveq	r3, #1
 8007964:	2300      	movne	r3, #0
 8007966:	b2db      	uxtb	r3, r3
 8007968:	2b00      	cmp	r3, #0
 800796a:	d00c      	beq.n	8007986 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800796c:	68b8      	ldr	r0, [r7, #8]
 800796e:	f000 fb89 	bl	8008084 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 8007972:	4603      	mov	r3, r0
 8007974:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007976:	68fb      	ldr	r3, [r7, #12]
 8007978:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800797a:	4618      	mov	r0, r3
 800797c:	f000 f816 	bl	80079ac <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8007980:	4603      	mov	r3, r0
 8007982:	601c      	str	r4, [r3, #0]
	    return {};
 8007984:	e00d      	b.n	80079a2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007986:	68fb      	ldr	r3, [r7, #12]
 8007988:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 800798a:	4618      	mov	r0, r3
 800798c:	f7fe f9a3 	bl	8005cd6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8007990:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8007992:	68b8      	ldr	r0, [r7, #8]
 8007994:	f000 fb76 	bl	8008084 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 8007998:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800799a:	4619      	mov	r1, r3
 800799c:	4620      	mov	r0, r4
 800799e:	f000 fb7c 	bl	800809a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 80079a2:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80079a4:	4618      	mov	r0, r3
 80079a6:	3710      	adds	r7, #16
 80079a8:	46bd      	mov	sp, r7
 80079aa:	bdb0      	pop	{r4, r5, r7, pc}

080079ac <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80079ac:	b590      	push	{r4, r7, lr}
 80079ae:	b083      	sub	sp, #12
 80079b0:	af00      	add	r7, sp, #0
 80079b2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80079b4:	6878      	ldr	r0, [r7, #4]
 80079b6:	f000 fb36 	bl	8008026 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80079ba:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80079bc:	4619      	mov	r1, r3
 80079be:	4620      	mov	r0, r4
 80079c0:	f7fb ff74 	bl	80038ac <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80079c4:	4603      	mov	r3, r0
    }
 80079c6:	4618      	mov	r0, r3
 80079c8:	370c      	adds	r7, #12
 80079ca:	46bd      	mov	sp, r7
 80079cc:	bd90      	pop	{r4, r7, pc}

080079ce <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80079ce:	b5b0      	push	{r4, r5, r7, lr}
 80079d0:	b084      	sub	sp, #16
 80079d2:	af00      	add	r7, sp, #0
 80079d4:	60f8      	str	r0, [r7, #12]
 80079d6:	60b9      	str	r1, [r7, #8]
 80079d8:	713a      	strb	r2, [r7, #4]
 80079da:	68fb      	ldr	r3, [r7, #12]
 80079dc:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80079de:	7e1b      	ldrb	r3, [r3, #24]
 80079e0:	461c      	mov	r4, r3
 80079e2:	1d3b      	adds	r3, r7, #4
 80079e4:	4618      	mov	r0, r3
 80079e6:	f7fd fae6 	bl	8004fb6 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 80079ea:	4603      	mov	r3, r0
 80079ec:	429c      	cmp	r4, r3
 80079ee:	bf0c      	ite	eq
 80079f0:	2301      	moveq	r3, #1
 80079f2:	2300      	movne	r3, #0
 80079f4:	b2db      	uxtb	r3, r3
 80079f6:	2b00      	cmp	r3, #0
 80079f8:	d00d      	beq.n	8007a16 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_+0x48>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80079fa:	68b8      	ldr	r0, [r7, #8]
 80079fc:	f000 fb66 	bl	80080cc <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8007a00:	4603      	mov	r3, r0
 8007a02:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007a04:	68fb      	ldr	r3, [r7, #12]
 8007a06:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8007a08:	4618      	mov	r0, r3
 8007a0a:	f000 f817 	bl	8007a3c <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8007a0e:	4603      	mov	r3, r0
 8007a10:	4622      	mov	r2, r4
 8007a12:	701a      	strb	r2, [r3, #0]
	    return {};
 8007a14:	e00d      	b.n	8007a32 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_+0x64>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007a16:	68fb      	ldr	r3, [r7, #12]
 8007a18:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8007a1a:	4618      	mov	r0, r3
 8007a1c:	f7fe f95b 	bl	8005cd6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8007a20:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8007a22:	68b8      	ldr	r0, [r7, #8]
 8007a24:	f000 fb52 	bl	80080cc <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8007a28:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8007a2a:	4619      	mov	r1, r3
 8007a2c:	4620      	mov	r0, r4
 8007a2e:	f000 fb58 	bl	80080e2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8007a32:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007a34:	4618      	mov	r0, r3
 8007a36:	3710      	adds	r7, #16
 8007a38:	46bd      	mov	sp, r7
 8007a3a:	bdb0      	pop	{r4, r5, r7, pc}

08007a3c <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8007a3c:	b590      	push	{r4, r7, lr}
 8007a3e:	b083      	sub	sp, #12
 8007a40:	af00      	add	r7, sp, #0
 8007a42:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8007a44:	6878      	ldr	r0, [r7, #4]
 8007a46:	f000 faee 	bl	8008026 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007a4a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8007a4c:	4619      	mov	r1, r3
 8007a4e:	4620      	mov	r0, r4
 8007a50:	f7f9 fd92 	bl	8001578 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007a54:	4603      	mov	r3, r0
    }
 8007a56:	4618      	mov	r0, r3
 8007a58:	370c      	adds	r7, #12
 8007a5a:	46bd      	mov	sp, r7
 8007a5c:	bd90      	pop	{r4, r7, pc}

08007a5e <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007a5e:	b5b0      	push	{r4, r5, r7, lr}
 8007a60:	b084      	sub	sp, #16
 8007a62:	af00      	add	r7, sp, #0
 8007a64:	60f8      	str	r0, [r7, #12]
 8007a66:	60b9      	str	r1, [r7, #8]
 8007a68:	713a      	strb	r2, [r7, #4]
 8007a6a:	68fb      	ldr	r3, [r7, #12]
 8007a6c:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8007a6e:	7e1b      	ldrb	r3, [r3, #24]
 8007a70:	461c      	mov	r4, r3
 8007a72:	1d3b      	adds	r3, r7, #4
 8007a74:	4618      	mov	r0, r3
 8007a76:	f7fd fb02 	bl	800507e <_ZNKSt17integral_constantIjLj3EEcvjEv>
 8007a7a:	4603      	mov	r3, r0
 8007a7c:	429c      	cmp	r4, r3
 8007a7e:	bf0c      	ite	eq
 8007a80:	2301      	moveq	r3, #1
 8007a82:	2300      	movne	r3, #0
 8007a84:	b2db      	uxtb	r3, r3
 8007a86:	2b00      	cmp	r3, #0
 8007a88:	d00e      	beq.n	8007aa8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8007a8a:	68b8      	ldr	r0, [r7, #8]
 8007a8c:	f000 fb42 	bl	8008114 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8007a90:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007a92:	68fb      	ldr	r3, [r7, #12]
 8007a94:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8007a96:	4618      	mov	r0, r3
 8007a98:	f000 f819 	bl	8007ace <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8007a9c:	4603      	mov	r3, r0
 8007a9e:	4621      	mov	r1, r4
 8007aa0:	4618      	mov	r0, r3
 8007aa2:	f01a ffaa 	bl	80229fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
	    return {};
 8007aa6:	e00d      	b.n	8007ac4 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007aa8:	68fb      	ldr	r3, [r7, #12]
 8007aaa:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8007aac:	4618      	mov	r0, r3
 8007aae:	f7fe f912 	bl	8005cd6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8007ab2:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8007ab4:	68b8      	ldr	r0, [r7, #8]
 8007ab6:	f000 fb2d 	bl	8008114 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8007aba:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8007abc:	4619      	mov	r1, r3
 8007abe:	4620      	mov	r0, r4
 8007ac0:	f000 fb33 	bl	800812a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8007ac4:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007ac6:	4618      	mov	r0, r3
 8007ac8:	3710      	adds	r7, #16
 8007aca:	46bd      	mov	sp, r7
 8007acc:	bdb0      	pop	{r4, r5, r7, pc}

08007ace <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8007ace:	b590      	push	{r4, r7, lr}
 8007ad0:	b083      	sub	sp, #12
 8007ad2:	af00      	add	r7, sp, #0
 8007ad4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8007ad6:	6878      	ldr	r0, [r7, #4]
 8007ad8:	f000 faa5 	bl	8008026 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007adc:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8007ade:	4619      	mov	r1, r3
 8007ae0:	4620      	mov	r0, r4
 8007ae2:	f7fb ffe7 	bl	8003ab4 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007ae6:	4603      	mov	r3, r0
    }
 8007ae8:	4618      	mov	r0, r3
 8007aea:	370c      	adds	r7, #12
 8007aec:	46bd      	mov	sp, r7
 8007aee:	bd90      	pop	{r4, r7, pc}

08007af0 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007af0:	b5b0      	push	{r4, r5, r7, lr}
 8007af2:	b084      	sub	sp, #16
 8007af4:	af00      	add	r7, sp, #0
 8007af6:	60f8      	str	r0, [r7, #12]
 8007af8:	60b9      	str	r1, [r7, #8]
 8007afa:	713a      	strb	r2, [r7, #4]
 8007afc:	68fb      	ldr	r3, [r7, #12]
 8007afe:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8007b00:	7e1b      	ldrb	r3, [r3, #24]
 8007b02:	461c      	mov	r4, r3
 8007b04:	1d3b      	adds	r3, r7, #4
 8007b06:	4618      	mov	r0, r3
 8007b08:	f7fd fb48 	bl	800519c <_ZNKSt17integral_constantIjLj4EEcvjEv>
 8007b0c:	4603      	mov	r3, r0
 8007b0e:	429c      	cmp	r4, r3
 8007b10:	bf0c      	ite	eq
 8007b12:	2301      	moveq	r3, #1
 8007b14:	2300      	movne	r3, #0
 8007b16:	b2db      	uxtb	r3, r3
 8007b18:	2b00      	cmp	r3, #0
 8007b1a:	d00e      	beq.n	8007b3a <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8007b1c:	68b8      	ldr	r0, [r7, #8]
 8007b1e:	f000 fb1d 	bl	800815c <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 8007b22:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007b24:	68fb      	ldr	r3, [r7, #12]
 8007b26:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8007b28:	4618      	mov	r0, r3
 8007b2a:	f000 f819 	bl	8007b60 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8007b2e:	4603      	mov	r3, r0
 8007b30:	4621      	mov	r1, r4
 8007b32:	4618      	mov	r0, r3
 8007b34:	f000 fb1d 	bl	8008172 <_ZNSt6vectorI6SymbolSaIS0_EEaSEOS2_>
	    return {};
 8007b38:	e00d      	b.n	8007b56 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007b3a:	68fb      	ldr	r3, [r7, #12]
 8007b3c:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8007b3e:	4618      	mov	r0, r3
 8007b40:	f7fe f8c9 	bl	8005cd6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8007b44:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8007b46:	68b8      	ldr	r0, [r7, #8]
 8007b48:	f000 fb08 	bl	800815c <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 8007b4c:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8007b4e:	4619      	mov	r1, r3
 8007b50:	4620      	mov	r0, r4
 8007b52:	f000 fb23 	bl	800819c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8007b56:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007b58:	4618      	mov	r0, r3
 8007b5a:	3710      	adds	r7, #16
 8007b5c:	46bd      	mov	sp, r7
 8007b5e:	bdb0      	pop	{r4, r5, r7, pc}

08007b60 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8007b60:	b590      	push	{r4, r7, lr}
 8007b62:	b083      	sub	sp, #12
 8007b64:	af00      	add	r7, sp, #0
 8007b66:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8007b68:	6878      	ldr	r0, [r7, #4]
 8007b6a:	f000 fa5c 	bl	8008026 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007b6e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8007b70:	4619      	mov	r1, r3
 8007b72:	4620      	mov	r0, r4
 8007b74:	f7fc f85e 	bl	8003c34 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007b78:	4603      	mov	r3, r0
    }
 8007b7a:	4618      	mov	r0, r3
 8007b7c:	370c      	adds	r7, #12
 8007b7e:	46bd      	mov	sp, r7
 8007b80:	bd90      	pop	{r4, r7, pc}

08007b82 <_ZN9__gnu_cxx13new_allocatorI6SymbolE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 8007b82:	b580      	push	{r7, lr}
 8007b84:	b084      	sub	sp, #16
 8007b86:	af00      	add	r7, sp, #0
 8007b88:	60f8      	str	r0, [r7, #12]
 8007b8a:	60b9      	str	r1, [r7, #8]
 8007b8c:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8007b8e:	68b8      	ldr	r0, [r7, #8]
 8007b90:	f01a fc72 	bl	8022478 <_ZdlPv>
      }
 8007b94:	3710      	adds	r7, #16
 8007b96:	46bd      	mov	sp, r7
 8007b98:	bd80      	pop	{r7, pc}

08007b9a <_ZNSt16allocator_traitsISaI6SymbolEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 8007b9a:	b580      	push	{r7, lr}
 8007b9c:	b082      	sub	sp, #8
 8007b9e:	af00      	add	r7, sp, #0
 8007ba0:	6078      	str	r0, [r7, #4]
 8007ba2:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8007ba4:	2200      	movs	r2, #0
 8007ba6:	6839      	ldr	r1, [r7, #0]
 8007ba8:	6878      	ldr	r0, [r7, #4]
 8007baa:	f000 fb10 	bl	80081ce <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv>
 8007bae:	4603      	mov	r3, r0
 8007bb0:	4618      	mov	r0, r3
 8007bb2:	3708      	adds	r7, #8
 8007bb4:	46bd      	mov	sp, r7
 8007bb6:	bd80      	pop	{r7, pc}

08007bb8 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 8007bb8:	b580      	push	{r7, lr}
 8007bba:	b086      	sub	sp, #24
 8007bbc:	af00      	add	r7, sp, #0
 8007bbe:	60f8      	str	r0, [r7, #12]
 8007bc0:	60b9      	str	r1, [r7, #8]
 8007bc2:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 8007bc4:	2301      	movs	r3, #1
 8007bc6:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 8007bc8:	687a      	ldr	r2, [r7, #4]
 8007bca:	68b9      	ldr	r1, [r7, #8]
 8007bcc:	68f8      	ldr	r0, [r7, #12]
 8007bce:	f000 fb1d 	bl	800820c <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_>
 8007bd2:	4603      	mov	r3, r0
    }
 8007bd4:	4618      	mov	r0, r3
 8007bd6:	3718      	adds	r7, #24
 8007bd8:	46bd      	mov	sp, r7
 8007bda:	bd80      	pop	{r7, pc}

08007bdc <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_>:
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 8007bdc:	b580      	push	{r7, lr}
 8007bde:	b082      	sub	sp, #8
 8007be0:	af00      	add	r7, sp, #0
 8007be2:	6078      	str	r0, [r7, #4]
 8007be4:	6039      	str	r1, [r7, #0]
	  for (; __first != __last; ++__first)
 8007be6:	687a      	ldr	r2, [r7, #4]
 8007be8:	683b      	ldr	r3, [r7, #0]
 8007bea:	429a      	cmp	r2, r3
 8007bec:	d00a      	beq.n	8007c04 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_+0x28>
	    std::_Destroy(std::__addressof(*__first));
 8007bee:	6878      	ldr	r0, [r7, #4]
 8007bf0:	f000 fb3b 	bl	800826a <_ZSt11__addressofI6SymbolEPT_RS1_>
 8007bf4:	4603      	mov	r3, r0
 8007bf6:	4618      	mov	r0, r3
 8007bf8:	f000 fb42 	bl	8008280 <_ZSt8_DestroyI6SymbolEvPT_>
	  for (; __first != __last; ++__first)
 8007bfc:	687b      	ldr	r3, [r7, #4]
 8007bfe:	3320      	adds	r3, #32
 8007c00:	607b      	str	r3, [r7, #4]
 8007c02:	e7f0      	b.n	8007be6 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_+0xa>
	}
 8007c04:	bf00      	nop
 8007c06:	3708      	adds	r7, #8
 8007c08:	46bd      	mov	sp, r7
 8007c0a:	bd80      	pop	{r7, pc}

08007c0c <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>:
{
_GLIBCXX_BEGIN_NAMESPACE_VERSION

  template<typename _Iterator, typename _Container>
    _Iterator
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 8007c0c:	b580      	push	{r7, lr}
 8007c0e:	b082      	sub	sp, #8
 8007c10:	af00      	add	r7, sp, #0
 8007c12:	6078      	str	r0, [r7, #4]
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it.base(); }
 8007c14:	1d3b      	adds	r3, r7, #4
 8007c16:	4618      	mov	r0, r3
 8007c18:	f000 fb3d 	bl	8008296 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 8007c1c:	4603      	mov	r3, r0
 8007c1e:	681b      	ldr	r3, [r3, #0]
 8007c20:	4618      	mov	r0, r3
 8007c22:	3708      	adds	r7, #8
 8007c24:	46bd      	mov	sp, r7
 8007c26:	bd80      	pop	{r7, pc}

08007c28 <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 8007c28:	b580      	push	{r7, lr}
 8007c2a:	b082      	sub	sp, #8
 8007c2c:	af00      	add	r7, sp, #0
 8007c2e:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 8007c30:	1d3b      	adds	r3, r7, #4
 8007c32:	4618      	mov	r0, r3
 8007c34:	f000 fb3a 	bl	80082ac <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 8007c38:	4603      	mov	r3, r0
 8007c3a:	681b      	ldr	r3, [r3, #0]
 8007c3c:	4618      	mov	r0, r3
 8007c3e:	3708      	adds	r7, #8
 8007c40:	46bd      	mov	sp, r7
 8007c42:	bd80      	pop	{r7, pc}

08007c44 <_ZSt13__copy_move_aILb0EPK6SymbolPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 8007c44:	b580      	push	{r7, lr}
 8007c46:	b086      	sub	sp, #24
 8007c48:	af00      	add	r7, sp, #0
 8007c4a:	60f8      	str	r0, [r7, #12]
 8007c4c:	60b9      	str	r1, [r7, #8]
 8007c4e:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 8007c50:	2300      	movs	r3, #0
 8007c52:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 8007c54:	687a      	ldr	r2, [r7, #4]
 8007c56:	68b9      	ldr	r1, [r7, #8]
 8007c58:	68f8      	ldr	r0, [r7, #12]
 8007c5a:	f000 fb32 	bl	80082c2 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_>
 8007c5e:	4603      	mov	r3, r0
    }
 8007c60:	4618      	mov	r0, r3
 8007c62:	3718      	adds	r7, #24
 8007c64:	46bd      	mov	sp, r7
 8007c66:	bd80      	pop	{r7, pc}

08007c68 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_>:
    __niter_wrap(_From __from, _To __res)
 8007c68:	b580      	push	{r7, lr}
 8007c6a:	b082      	sub	sp, #8
 8007c6c:	af00      	add	r7, sp, #0
 8007c6e:	6078      	str	r0, [r7, #4]
 8007c70:	6039      	str	r1, [r7, #0]
    { return __from + (__res - std::__niter_base(__from)); }
 8007c72:	6878      	ldr	r0, [r7, #4]
 8007c74:	f7ff ffd8 	bl	8007c28 <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 8007c78:	4602      	mov	r2, r0
 8007c7a:	683b      	ldr	r3, [r7, #0]
 8007c7c:	1a9b      	subs	r3, r3, r2
 8007c7e:	115b      	asrs	r3, r3, #5
 8007c80:	461a      	mov	r2, r3
 8007c82:	1d3b      	adds	r3, r7, #4
 8007c84:	4611      	mov	r1, r2
 8007c86:	4618      	mov	r0, r3
 8007c88:	f000 fb3c 	bl	8008304 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEplEi>
 8007c8c:	4603      	mov	r3, r0
 8007c8e:	4618      	mov	r0, r3
 8007c90:	3708      	adds	r7, #8
 8007c92:	46bd      	mov	sp, r7
 8007c94:	bd80      	pop	{r7, pc}

08007c96 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_>:
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 8007c96:	b580      	push	{r7, lr}
 8007c98:	b082      	sub	sp, #8
 8007c9a:	af00      	add	r7, sp, #0
 8007c9c:	6078      	str	r0, [r7, #4]
 8007c9e:	6039      	str	r1, [r7, #0]
	  for (; __first != __last; ++__first)
 8007ca0:	463a      	mov	r2, r7
 8007ca2:	1d3b      	adds	r3, r7, #4
 8007ca4:	4611      	mov	r1, r2
 8007ca6:	4618      	mov	r0, r3
 8007ca8:	f000 fb44 	bl	8008334 <_ZN9__gnu_cxxneIP6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
 8007cac:	4603      	mov	r3, r0
 8007cae:	2b00      	cmp	r3, #0
 8007cb0:	d010      	beq.n	8007cd4 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_+0x3e>
	    std::_Destroy(std::__addressof(*__first));
 8007cb2:	1d3b      	adds	r3, r7, #4
 8007cb4:	4618      	mov	r0, r3
 8007cb6:	f000 fb66 	bl	8008386 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEdeEv>
 8007cba:	4603      	mov	r3, r0
 8007cbc:	4618      	mov	r0, r3
 8007cbe:	f000 fad4 	bl	800826a <_ZSt11__addressofI6SymbolEPT_RS1_>
 8007cc2:	4603      	mov	r3, r0
 8007cc4:	4618      	mov	r0, r3
 8007cc6:	f000 fadb 	bl	8008280 <_ZSt8_DestroyI6SymbolEvPT_>
	  for (; __first != __last; ++__first)
 8007cca:	1d3b      	adds	r3, r7, #4
 8007ccc:	4618      	mov	r0, r3
 8007cce:	f000 fb49 	bl	8008364 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEppEv>
 8007cd2:	e7e5      	b.n	8007ca0 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_+0xa>
	}
 8007cd4:	bf00      	nop
 8007cd6:	3708      	adds	r7, #8
 8007cd8:	46bd      	mov	sp, r7
 8007cda:	bd80      	pop	{r7, pc}

08007cdc <_ZSt12__niter_baseIP6SymbolET_S2_>:
    __niter_base(_Iterator __it)
 8007cdc:	b480      	push	{r7}
 8007cde:	b083      	sub	sp, #12
 8007ce0:	af00      	add	r7, sp, #0
 8007ce2:	6078      	str	r0, [r7, #4]
    { return __it; }
 8007ce4:	687b      	ldr	r3, [r7, #4]
 8007ce6:	4618      	mov	r0, r3
 8007ce8:	370c      	adds	r7, #12
 8007cea:	46bd      	mov	sp, r7
 8007cec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cf0:	4770      	bx	lr

08007cf2 <_ZSt13__copy_move_aILb0EP6SymbolS1_ET1_T0_S3_S2_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 8007cf2:	b580      	push	{r7, lr}
 8007cf4:	b086      	sub	sp, #24
 8007cf6:	af00      	add	r7, sp, #0
 8007cf8:	60f8      	str	r0, [r7, #12]
 8007cfa:	60b9      	str	r1, [r7, #8]
 8007cfc:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 8007cfe:	2300      	movs	r3, #0
 8007d00:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 8007d02:	687a      	ldr	r2, [r7, #4]
 8007d04:	68b9      	ldr	r1, [r7, #8]
 8007d06:	68f8      	ldr	r0, [r7, #12]
 8007d08:	f000 fb49 	bl	800839e <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_>
 8007d0c:	4603      	mov	r3, r0
    }
 8007d0e:	4618      	mov	r0, r3
 8007d10:	3718      	adds	r7, #24
 8007d12:	46bd      	mov	sp, r7
 8007d14:	bd80      	pop	{r7, pc}

08007d16 <_ZSt12__niter_wrapIP6SymbolET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 8007d16:	b480      	push	{r7}
 8007d18:	b083      	sub	sp, #12
 8007d1a:	af00      	add	r7, sp, #0
 8007d1c:	6078      	str	r0, [r7, #4]
 8007d1e:	6039      	str	r1, [r7, #0]
    { return __res; }
 8007d20:	683b      	ldr	r3, [r7, #0]
 8007d22:	4618      	mov	r0, r3
 8007d24:	370c      	adds	r7, #12
 8007d26:	46bd      	mov	sp, r7
 8007d28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d2c:	4770      	bx	lr

08007d2e <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 8007d2e:	b580      	push	{r7, lr}
 8007d30:	b086      	sub	sp, #24
 8007d32:	af00      	add	r7, sp, #0
 8007d34:	60f8      	str	r0, [r7, #12]
 8007d36:	60b9      	str	r1, [r7, #8]
 8007d38:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 8007d3a:	687b      	ldr	r3, [r7, #4]
 8007d3c:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 8007d3e:	68fa      	ldr	r2, [r7, #12]
 8007d40:	68bb      	ldr	r3, [r7, #8]
 8007d42:	429a      	cmp	r2, r3
 8007d44:	d00e      	beq.n	8007d64 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_+0x36>
		std::_Construct(std::__addressof(*__cur), *__first);
 8007d46:	6978      	ldr	r0, [r7, #20]
 8007d48:	f000 fa8f 	bl	800826a <_ZSt11__addressofI6SymbolEPT_RS1_>
 8007d4c:	4603      	mov	r3, r0
 8007d4e:	68f9      	ldr	r1, [r7, #12]
 8007d50:	4618      	mov	r0, r3
 8007d52:	f000 fbab 	bl	80084ac <_ZSt10_ConstructI6SymbolJRS0_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 8007d56:	68fb      	ldr	r3, [r7, #12]
 8007d58:	3320      	adds	r3, #32
 8007d5a:	60fb      	str	r3, [r7, #12]
 8007d5c:	697b      	ldr	r3, [r7, #20]
 8007d5e:	3320      	adds	r3, #32
 8007d60:	617b      	str	r3, [r7, #20]
 8007d62:	e7ec      	b.n	8007d3e <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_+0x10>
	      return __cur;
 8007d64:	697b      	ldr	r3, [r7, #20]
	}
 8007d66:	4618      	mov	r0, r3
 8007d68:	3718      	adds	r7, #24
 8007d6a:	46bd      	mov	sp, r7
 8007d6c:	bd80      	pop	{r7, pc}

08007d6e <_ZSt9addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>:
    addressof(_Tp& __r) noexcept
 8007d6e:	b580      	push	{r7, lr}
 8007d70:	b082      	sub	sp, #8
 8007d72:	af00      	add	r7, sp, #0
 8007d74:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8007d76:	6878      	ldr	r0, [r7, #4]
 8007d78:	f000 fbaf 	bl	80084da <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>
 8007d7c:	4603      	mov	r3, r0
 8007d7e:	4618      	mov	r0, r3
 8007d80:	3708      	adds	r7, #8
 8007d82:	46bd      	mov	sp, r7
 8007d84:	bd80      	pop	{r7, pc}

08007d86 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>:
      vector(const vector& __x)
 8007d86:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d88:	b085      	sub	sp, #20
 8007d8a:	af00      	add	r7, sp, #0
 8007d8c:	6078      	str	r0, [r7, #4]
 8007d8e:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 8007d90:	687c      	ldr	r4, [r7, #4]
 8007d92:	6838      	ldr	r0, [r7, #0]
 8007d94:	f7fe ff09 	bl	8006baa <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 8007d98:	4605      	mov	r5, r0
 8007d9a:	683b      	ldr	r3, [r7, #0]
 8007d9c:	4618      	mov	r0, r3
 8007d9e:	f7fe febe 	bl	8006b1e <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007da2:	4602      	mov	r2, r0
 8007da4:	f107 030c 	add.w	r3, r7, #12
 8007da8:	4611      	mov	r1, r2
 8007daa:	4618      	mov	r0, r3
 8007dac:	f000 fba0 	bl	80084f0 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E17_S_select_on_copyERKS2_>
 8007db0:	f107 030c 	add.w	r3, r7, #12
 8007db4:	461a      	mov	r2, r3
 8007db6:	4629      	mov	r1, r5
 8007db8:	4620      	mov	r0, r4
 8007dba:	f000 fbb3 	bl	8008524 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EjRKS1_>
 8007dbe:	f107 030c 	add.w	r3, r7, #12
 8007dc2:	4618      	mov	r0, r3
 8007dc4:	f000 fba2 	bl	800850c <_ZNSaI6SymbolED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 8007dc8:	6838      	ldr	r0, [r7, #0]
 8007dca:	f7fe ff0e 	bl	8006bea <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 8007dce:	4605      	mov	r5, r0
 8007dd0:	6838      	ldr	r0, [r7, #0]
 8007dd2:	f7fe ff1e 	bl	8006c12 <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 8007dd6:	4606      	mov	r6, r0
 8007dd8:	687b      	ldr	r3, [r7, #4]
 8007dda:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 8007ddc:	687b      	ldr	r3, [r7, #4]
 8007dde:	4618      	mov	r0, r3
 8007de0:	f7fe fe92 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007de4:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 8007de6:	4622      	mov	r2, r4
 8007de8:	4631      	mov	r1, r6
 8007dea:	4628      	mov	r0, r5
 8007dec:	f7ff fb4a 	bl	8007484 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>
 8007df0:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 8007df2:	687b      	ldr	r3, [r7, #4]
 8007df4:	605a      	str	r2, [r3, #4]
      }
 8007df6:	687b      	ldr	r3, [r7, #4]
 8007df8:	4618      	mov	r0, r3
 8007dfa:	3714      	adds	r7, #20
 8007dfc:	46bd      	mov	sp, r7
 8007dfe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007e00 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>:
      _M_addr() const noexcept
 8007e00:	b480      	push	{r7}
 8007e02:	b083      	sub	sp, #12
 8007e04:	af00      	add	r7, sp, #0
 8007e06:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8007e08:	687b      	ldr	r3, [r7, #4]
 8007e0a:	4618      	mov	r0, r3
 8007e0c:	370c      	adds	r7, #12
 8007e0e:	46bd      	mov	sp, r7
 8007e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e14:	4770      	bx	lr

08007e16 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8007e16:	b580      	push	{r7, lr}
 8007e18:	b084      	sub	sp, #16
 8007e1a:	af00      	add	r7, sp, #0
 8007e1c:	60f8      	str	r0, [r7, #12]
 8007e1e:	60b9      	str	r1, [r7, #8]
 8007e20:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8007e22:	68f8      	ldr	r0, [r7, #12]
 8007e24:	f000 fb92 	bl	800854c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv>
 8007e28:	4602      	mov	r2, r0
 8007e2a:	68bb      	ldr	r3, [r7, #8]
 8007e2c:	4293      	cmp	r3, r2
 8007e2e:	bf8c      	ite	hi
 8007e30:	2301      	movhi	r3, #1
 8007e32:	2300      	movls	r3, #0
 8007e34:	b2db      	uxtb	r3, r3
 8007e36:	2b00      	cmp	r3, #0
 8007e38:	d001      	beq.n	8007e3e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8007e3a:	f01a fbf5 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8007e3e:	68ba      	ldr	r2, [r7, #8]
 8007e40:	4613      	mov	r3, r2
 8007e42:	009b      	lsls	r3, r3, #2
 8007e44:	4413      	add	r3, r2
 8007e46:	009b      	lsls	r3, r3, #2
 8007e48:	4618      	mov	r0, r3
 8007e4a:	f01a fb28 	bl	802249e <_Znwj>
 8007e4e:	4603      	mov	r3, r0
 8007e50:	bf00      	nop
      }
 8007e52:	4618      	mov	r0, r3
 8007e54:	3710      	adds	r7, #16
 8007e56:	46bd      	mov	sp, r7
 8007e58:	bd80      	pop	{r7, pc}

08007e5a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8007e5a:	b590      	push	{r4, r7, lr}
 8007e5c:	b085      	sub	sp, #20
 8007e5e:	af00      	add	r7, sp, #0
 8007e60:	60f8      	str	r0, [r7, #12]
 8007e62:	60b9      	str	r1, [r7, #8]
 8007e64:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8007e66:	6878      	ldr	r0, [r7, #4]
 8007e68:	f7fc fad0 	bl	800440c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007e6c:	4604      	mov	r4, r0
 8007e6e:	68bb      	ldr	r3, [r7, #8]
 8007e70:	4619      	mov	r1, r3
 8007e72:	2002      	movs	r0, #2
 8007e74:	f7f9 f8f1 	bl	800105a <_ZnwjPv>
 8007e78:	4603      	mov	r3, r0
 8007e7a:	461a      	mov	r2, r3
 8007e7c:	4623      	mov	r3, r4
 8007e7e:	881b      	ldrh	r3, [r3, #0]
 8007e80:	8013      	strh	r3, [r2, #0]
 8007e82:	bf00      	nop
 8007e84:	3714      	adds	r7, #20
 8007e86:	46bd      	mov	sp, r7
 8007e88:	bd90      	pop	{r4, r7, pc}

08007e8a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>:
      _M_addr() const noexcept
 8007e8a:	b480      	push	{r7}
 8007e8c:	b083      	sub	sp, #12
 8007e8e:	af00      	add	r7, sp, #0
 8007e90:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8007e92:	687b      	ldr	r3, [r7, #4]
 8007e94:	4618      	mov	r0, r3
 8007e96:	370c      	adds	r7, #12
 8007e98:	46bd      	mov	sp, r7
 8007e9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e9e:	4770      	bx	lr

08007ea0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8007ea0:	b580      	push	{r7, lr}
 8007ea2:	b084      	sub	sp, #16
 8007ea4:	af00      	add	r7, sp, #0
 8007ea6:	60f8      	str	r0, [r7, #12]
 8007ea8:	60b9      	str	r1, [r7, #8]
 8007eaa:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8007eac:	68f8      	ldr	r0, [r7, #12]
 8007eae:	f000 fb5b 	bl	8008568 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv>
 8007eb2:	4602      	mov	r2, r0
 8007eb4:	68bb      	ldr	r3, [r7, #8]
 8007eb6:	4293      	cmp	r3, r2
 8007eb8:	bf8c      	ite	hi
 8007eba:	2301      	movhi	r3, #1
 8007ebc:	2300      	movls	r3, #0
 8007ebe:	b2db      	uxtb	r3, r3
 8007ec0:	2b00      	cmp	r3, #0
 8007ec2:	d001      	beq.n	8007ec8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8007ec4:	f01a fbb0 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8007ec8:	68bb      	ldr	r3, [r7, #8]
 8007eca:	222c      	movs	r2, #44	; 0x2c
 8007ecc:	fb02 f303 	mul.w	r3, r2, r3
 8007ed0:	4618      	mov	r0, r3
 8007ed2:	f01a fae4 	bl	802249e <_Znwj>
 8007ed6:	4603      	mov	r3, r0
 8007ed8:	bf00      	nop
      }
 8007eda:	4618      	mov	r0, r3
 8007edc:	3710      	adds	r7, #16
 8007ede:	46bd      	mov	sp, r7
 8007ee0:	bd80      	pop	{r7, pc}

08007ee2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1ERKS8_>:
      constexpr pair(const pair&) = default;
 8007ee2:	b580      	push	{r7, lr}
 8007ee4:	b082      	sub	sp, #8
 8007ee6:	af00      	add	r7, sp, #0
 8007ee8:	6078      	str	r0, [r7, #4]
 8007eea:	6039      	str	r1, [r7, #0]
 8007eec:	687b      	ldr	r3, [r7, #4]
 8007eee:	683a      	ldr	r2, [r7, #0]
 8007ef0:	4611      	mov	r1, r2
 8007ef2:	4618      	mov	r0, r3
 8007ef4:	f01a ff3a 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8007ef8:	683b      	ldr	r3, [r7, #0]
 8007efa:	7e1a      	ldrb	r2, [r3, #24]
 8007efc:	687b      	ldr	r3, [r7, #4]
 8007efe:	761a      	strb	r2, [r3, #24]
 8007f00:	687b      	ldr	r3, [r7, #4]
 8007f02:	4618      	mov	r0, r3
 8007f04:	3708      	adds	r7, #8
 8007f06:	46bd      	mov	sp, r7
 8007f08:	bd80      	pop	{r7, pc}

08007f0a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE9constructISB_JRKSB_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8007f0a:	b590      	push	{r4, r7, lr}
 8007f0c:	b085      	sub	sp, #20
 8007f0e:	af00      	add	r7, sp, #0
 8007f10:	60f8      	str	r0, [r7, #12]
 8007f12:	60b9      	str	r1, [r7, #8]
 8007f14:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8007f16:	6878      	ldr	r0, [r7, #4]
 8007f18:	f7fc fc6e 	bl	80047f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8007f1c:	4604      	mov	r4, r0
 8007f1e:	68bb      	ldr	r3, [r7, #8]
 8007f20:	4619      	mov	r1, r3
 8007f22:	201c      	movs	r0, #28
 8007f24:	f7f9 f899 	bl	800105a <_ZnwjPv>
 8007f28:	4603      	mov	r3, r0
 8007f2a:	4621      	mov	r1, r4
 8007f2c:	4618      	mov	r0, r3
 8007f2e:	f7ff ffd8 	bl	8007ee2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1ERKS8_>
 8007f32:	bf00      	nop
 8007f34:	3714      	adds	r7, #20
 8007f36:	46bd      	mov	sp, r7
 8007f38:	bd90      	pop	{r4, r7, pc}

08007f3a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>:
      _M_addr() const noexcept
 8007f3a:	b480      	push	{r7}
 8007f3c:	b083      	sub	sp, #12
 8007f3e:	af00      	add	r7, sp, #0
 8007f40:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8007f42:	687b      	ldr	r3, [r7, #4]
 8007f44:	4618      	mov	r0, r3
 8007f46:	370c      	adds	r7, #12
 8007f48:	46bd      	mov	sp, r7
 8007f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f4e:	4770      	bx	lr

08007f50 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8007f50:	b580      	push	{r7, lr}
 8007f52:	b084      	sub	sp, #16
 8007f54:	af00      	add	r7, sp, #0
 8007f56:	60f8      	str	r0, [r7, #12]
 8007f58:	60b9      	str	r1, [r7, #8]
 8007f5a:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8007f5c:	68f8      	ldr	r0, [r7, #12]
 8007f5e:	f000 fb11 	bl	8008584 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv>
 8007f62:	4602      	mov	r2, r0
 8007f64:	68bb      	ldr	r3, [r7, #8]
 8007f66:	4293      	cmp	r3, r2
 8007f68:	bf8c      	ite	hi
 8007f6a:	2301      	movhi	r3, #1
 8007f6c:	2300      	movls	r3, #0
 8007f6e:	b2db      	uxtb	r3, r3
 8007f70:	2b00      	cmp	r3, #0
 8007f72:	d001      	beq.n	8007f78 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8007f74:	f01a fb58 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8007f78:	68ba      	ldr	r2, [r7, #8]
 8007f7a:	4613      	mov	r3, r2
 8007f7c:	009b      	lsls	r3, r3, #2
 8007f7e:	4413      	add	r3, r2
 8007f80:	009b      	lsls	r3, r3, #2
 8007f82:	4618      	mov	r0, r3
 8007f84:	f01a fa8b 	bl	802249e <_Znwj>
 8007f88:	4603      	mov	r3, r0
 8007f8a:	bf00      	nop
      }
 8007f8c:	4618      	mov	r0, r3
 8007f8e:	3710      	adds	r7, #16
 8007f90:	46bd      	mov	sp, r7
 8007f92:	bd80      	pop	{r7, pc}

08007f94 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8007f94:	b590      	push	{r4, r7, lr}
 8007f96:	b085      	sub	sp, #20
 8007f98:	af00      	add	r7, sp, #0
 8007f9a:	60f8      	str	r0, [r7, #12]
 8007f9c:	60b9      	str	r1, [r7, #8]
 8007f9e:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8007fa0:	6878      	ldr	r0, [r7, #4]
 8007fa2:	f7fc fe13 	bl	8004bcc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007fa6:	4604      	mov	r4, r0
 8007fa8:	68bb      	ldr	r3, [r7, #8]
 8007faa:	4619      	mov	r1, r3
 8007fac:	2003      	movs	r0, #3
 8007fae:	f7f9 f854 	bl	800105a <_ZnwjPv>
 8007fb2:	4603      	mov	r3, r0
 8007fb4:	4622      	mov	r2, r4
 8007fb6:	8811      	ldrh	r1, [r2, #0]
 8007fb8:	7892      	ldrb	r2, [r2, #2]
 8007fba:	8019      	strh	r1, [r3, #0]
 8007fbc:	709a      	strb	r2, [r3, #2]
 8007fbe:	bf00      	nop
 8007fc0:	3714      	adds	r7, #20
 8007fc2:	46bd      	mov	sp, r7
 8007fc4:	bd90      	pop	{r4, r7, pc}

08007fc6 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8007fc6:	b580      	push	{r7, lr}
 8007fc8:	b082      	sub	sp, #8
 8007fca:	af00      	add	r7, sp, #0
 8007fcc:	6078      	str	r0, [r7, #4]
 8007fce:	6878      	ldr	r0, [r7, #4]
 8007fd0:	f000 fa9c 	bl	800850c <_ZNSaI6SymbolED1Ev>
 8007fd4:	687b      	ldr	r3, [r7, #4]
 8007fd6:	4618      	mov	r0, r3
 8007fd8:	3708      	adds	r7, #8
 8007fda:	46bd      	mov	sp, r7
 8007fdc:	bd80      	pop	{r7, pc}

08007fde <_ZNSt12_Vector_baseI6SymbolSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8007fde:	b580      	push	{r7, lr}
 8007fe0:	b082      	sub	sp, #8
 8007fe2:	af00      	add	r7, sp, #0
 8007fe4:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8007fe6:	687b      	ldr	r3, [r7, #4]
 8007fe8:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8007fea:	687b      	ldr	r3, [r7, #4]
 8007fec:	689a      	ldr	r2, [r3, #8]
 8007fee:	687b      	ldr	r3, [r7, #4]
 8007ff0:	681b      	ldr	r3, [r3, #0]
 8007ff2:	1ad3      	subs	r3, r2, r3
 8007ff4:	115b      	asrs	r3, r3, #5
	_M_deallocate(_M_impl._M_start,
 8007ff6:	461a      	mov	r2, r3
 8007ff8:	6878      	ldr	r0, [r7, #4]
 8007ffa:	f7fe fdb5 	bl	8006b68 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
      }
 8007ffe:	687b      	ldr	r3, [r7, #4]
 8008000:	4618      	mov	r0, r3
 8008002:	f7ff ffe0 	bl	8007fc6 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implD1Ev>
 8008006:	687b      	ldr	r3, [r7, #4]
 8008008:	4618      	mov	r0, r3
 800800a:	3708      	adds	r7, #8
 800800c:	46bd      	mov	sp, r7
 800800e:	bd80      	pop	{r7, pc}

08008010 <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8008010:	b480      	push	{r7}
 8008012:	b083      	sub	sp, #12
 8008014:	af00      	add	r7, sp, #0
 8008016:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8008018:	687b      	ldr	r3, [r7, #4]
 800801a:	4618      	mov	r0, r3
 800801c:	370c      	adds	r7, #12
 800801e:	46bd      	mov	sp, r7
 8008020:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008024:	4770      	bx	lr

08008026 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008026:	b480      	push	{r7}
 8008028:	b083      	sub	sp, #12
 800802a:	af00      	add	r7, sp, #0
 800802c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800802e:	687b      	ldr	r3, [r7, #4]
 8008030:	4618      	mov	r0, r3
 8008032:	370c      	adds	r7, #12
 8008034:	46bd      	mov	sp, r7
 8008036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800803a:	4770      	bx	lr

0800803c <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 800803c:	b480      	push	{r7}
 800803e:	b083      	sub	sp, #12
 8008040:	af00      	add	r7, sp, #0
 8008042:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8008044:	687b      	ldr	r3, [r7, #4]
 8008046:	4618      	mov	r0, r3
 8008048:	370c      	adds	r7, #12
 800804a:	46bd      	mov	sp, r7
 800804c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008050:	4770      	bx	lr

08008052 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8008052:	b580      	push	{r7, lr}
 8008054:	b082      	sub	sp, #8
 8008056:	af00      	add	r7, sp, #0
 8008058:	6078      	str	r0, [r7, #4]
 800805a:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800805c:	687b      	ldr	r3, [r7, #4]
 800805e:	4618      	mov	r0, r3
 8008060:	f7fa ff1c 	bl	8002e9c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8008064:	6838      	ldr	r0, [r7, #0]
 8008066:	f000 fa9b 	bl	80085a0 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800806a:	4603      	mov	r3, r0
 800806c:	4619      	mov	r1, r3
 800806e:	6878      	ldr	r0, [r7, #4]
 8008070:	f000 faa1 	bl	80085b6 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8008074:	6878      	ldr	r0, [r7, #4]
 8008076:	f7f9 fc6d 	bl	8001954 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800807a:	4603      	mov	r3, r0
	}
 800807c:	4618      	mov	r0, r3
 800807e:	3708      	adds	r7, #8
 8008080:	46bd      	mov	sp, r7
 8008082:	bd80      	pop	{r7, pc}

08008084 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 8008084:	b480      	push	{r7}
 8008086:	b083      	sub	sp, #12
 8008088:	af00      	add	r7, sp, #0
 800808a:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800808c:	687b      	ldr	r3, [r7, #4]
 800808e:	4618      	mov	r0, r3
 8008090:	370c      	adds	r7, #12
 8008092:	46bd      	mov	sp, r7
 8008094:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008098:	4770      	bx	lr

0800809a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 800809a:	b580      	push	{r7, lr}
 800809c:	b082      	sub	sp, #8
 800809e:	af00      	add	r7, sp, #0
 80080a0:	6078      	str	r0, [r7, #4]
 80080a2:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80080a4:	687b      	ldr	r3, [r7, #4]
 80080a6:	4618      	mov	r0, r3
 80080a8:	f7fa fef8 	bl	8002e9c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80080ac:	6838      	ldr	r0, [r7, #0]
 80080ae:	f000 faa1 	bl	80085f4 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 80080b2:	4603      	mov	r3, r0
 80080b4:	4619      	mov	r1, r3
 80080b6:	6878      	ldr	r0, [r7, #4]
 80080b8:	f000 faa7 	bl	800860a <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80080bc:	6878      	ldr	r0, [r7, #4]
 80080be:	f000 fac3 	bl	8008648 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80080c2:	4603      	mov	r3, r0
	}
 80080c4:	4618      	mov	r0, r3
 80080c6:	3708      	adds	r7, #8
 80080c8:	46bd      	mov	sp, r7
 80080ca:	bd80      	pop	{r7, pc}

080080cc <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 80080cc:	b480      	push	{r7}
 80080ce:	b083      	sub	sp, #12
 80080d0:	af00      	add	r7, sp, #0
 80080d2:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80080d4:	687b      	ldr	r3, [r7, #4]
 80080d6:	4618      	mov	r0, r3
 80080d8:	370c      	adds	r7, #12
 80080da:	46bd      	mov	sp, r7
 80080dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080e0:	4770      	bx	lr

080080e2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 80080e2:	b580      	push	{r7, lr}
 80080e4:	b082      	sub	sp, #8
 80080e6:	af00      	add	r7, sp, #0
 80080e8:	6078      	str	r0, [r7, #4]
 80080ea:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80080ec:	687b      	ldr	r3, [r7, #4]
 80080ee:	4618      	mov	r0, r3
 80080f0:	f7fa fed4 	bl	8002e9c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80080f4:	6838      	ldr	r0, [r7, #0]
 80080f6:	f000 fac3 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 80080fa:	4603      	mov	r3, r0
 80080fc:	4619      	mov	r1, r3
 80080fe:	6878      	ldr	r0, [r7, #4]
 8008100:	f000 fac9 	bl	8008696 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8008104:	6878      	ldr	r0, [r7, #4]
 8008106:	f7f9 fa5b 	bl	80015c0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800810a:	4603      	mov	r3, r0
	}
 800810c:	4618      	mov	r0, r3
 800810e:	3708      	adds	r7, #8
 8008110:	46bd      	mov	sp, r7
 8008112:	bd80      	pop	{r7, pc}

08008114 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
 8008114:	b480      	push	{r7}
 8008116:	b083      	sub	sp, #12
 8008118:	af00      	add	r7, sp, #0
 800811a:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800811c:	687b      	ldr	r3, [r7, #4]
 800811e:	4618      	mov	r0, r3
 8008120:	370c      	adds	r7, #12
 8008122:	46bd      	mov	sp, r7
 8008124:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008128:	4770      	bx	lr

0800812a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 800812a:	b580      	push	{r7, lr}
 800812c:	b082      	sub	sp, #8
 800812e:	af00      	add	r7, sp, #0
 8008130:	6078      	str	r0, [r7, #4]
 8008132:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8008134:	687b      	ldr	r3, [r7, #4]
 8008136:	4618      	mov	r0, r3
 8008138:	f7fa feb0 	bl	8002e9c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800813c:	6838      	ldr	r0, [r7, #0]
 800813e:	f000 faca 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008142:	4603      	mov	r3, r0
 8008144:	4619      	mov	r1, r3
 8008146:	6878      	ldr	r0, [r7, #4]
 8008148:	f000 fad0 	bl	80086ec <_ZSt28__variant_construct_by_indexILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800814c:	6878      	ldr	r0, [r7, #4]
 800814e:	f000 faef 	bl	8008730 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8008152:	4603      	mov	r3, r0
	}
 8008154:	4618      	mov	r0, r3
 8008156:	3708      	adds	r7, #8
 8008158:	46bd      	mov	sp, r7
 800815a:	bd80      	pop	{r7, pc}

0800815c <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
 800815c:	b480      	push	{r7}
 800815e:	b083      	sub	sp, #12
 8008160:	af00      	add	r7, sp, #0
 8008162:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8008164:	687b      	ldr	r3, [r7, #4]
 8008166:	4618      	mov	r0, r3
 8008168:	370c      	adds	r7, #12
 800816a:	46bd      	mov	sp, r7
 800816c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008170:	4770      	bx	lr

08008172 <_ZNSt6vectorI6SymbolSaIS0_EEaSEOS2_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 8008172:	b590      	push	{r4, r7, lr}
 8008174:	b085      	sub	sp, #20
 8008176:	af00      	add	r7, sp, #0
 8008178:	6078      	str	r0, [r7, #4]
 800817a:	6039      	str	r1, [r7, #0]
	constexpr bool __move_storage =
 800817c:	2301      	movs	r3, #1
 800817e:	73fb      	strb	r3, [r7, #15]
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 8008180:	6838      	ldr	r0, [r7, #0]
 8008182:	f7ff ffeb 	bl	800815c <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 8008186:	4603      	mov	r3, r0
 8008188:	4622      	mov	r2, r4
 800818a:	4619      	mov	r1, r3
 800818c:	6878      	ldr	r0, [r7, #4]
 800818e:	f000 faeb 	bl	8008768 <_ZNSt6vectorI6SymbolSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE>
	return *this;
 8008192:	687b      	ldr	r3, [r7, #4]
      }
 8008194:	4618      	mov	r0, r3
 8008196:	3714      	adds	r7, #20
 8008198:	46bd      	mov	sp, r7
 800819a:	bd90      	pop	{r4, r7, pc}

0800819c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 800819c:	b580      	push	{r7, lr}
 800819e:	b082      	sub	sp, #8
 80081a0:	af00      	add	r7, sp, #0
 80081a2:	6078      	str	r0, [r7, #4]
 80081a4:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80081a6:	687b      	ldr	r3, [r7, #4]
 80081a8:	4618      	mov	r0, r3
 80081aa:	f7fa fe77 	bl	8002e9c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80081ae:	6838      	ldr	r0, [r7, #0]
 80081b0:	f000 fb18 	bl	80087e4 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 80081b4:	4603      	mov	r3, r0
 80081b6:	4619      	mov	r1, r3
 80081b8:	6878      	ldr	r0, [r7, #4]
 80081ba:	f000 fb3e 	bl	800883a <_ZSt28__variant_construct_by_indexILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80081be:	6878      	ldr	r0, [r7, #4]
 80081c0:	f000 fb5c 	bl	800887c <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80081c4:	4603      	mov	r3, r0
	}
 80081c6:	4618      	mov	r0, r3
 80081c8:	3708      	adds	r7, #8
 80081ca:	46bd      	mov	sp, r7
 80081cc:	bd80      	pop	{r7, pc}

080081ce <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80081ce:	b580      	push	{r7, lr}
 80081d0:	b084      	sub	sp, #16
 80081d2:	af00      	add	r7, sp, #0
 80081d4:	60f8      	str	r0, [r7, #12]
 80081d6:	60b9      	str	r1, [r7, #8]
 80081d8:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 80081da:	68f8      	ldr	r0, [r7, #12]
 80081dc:	f000 fb6a 	bl	80088b4 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>
 80081e0:	4602      	mov	r2, r0
 80081e2:	68bb      	ldr	r3, [r7, #8]
 80081e4:	4293      	cmp	r3, r2
 80081e6:	bf8c      	ite	hi
 80081e8:	2301      	movhi	r3, #1
 80081ea:	2300      	movls	r3, #0
 80081ec:	b2db      	uxtb	r3, r3
 80081ee:	2b00      	cmp	r3, #0
 80081f0:	d001      	beq.n	80081f6 <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80081f2:	f01a fa19 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80081f6:	68bb      	ldr	r3, [r7, #8]
 80081f8:	015b      	lsls	r3, r3, #5
 80081fa:	4618      	mov	r0, r3
 80081fc:	f01a f94f 	bl	802249e <_Znwj>
 8008200:	4603      	mov	r3, r0
 8008202:	bf00      	nop
      }
 8008204:	4618      	mov	r0, r3
 8008206:	3710      	adds	r7, #16
 8008208:	46bd      	mov	sp, r7
 800820a:	bd80      	pop	{r7, pc}

0800820c <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 800820c:	b590      	push	{r4, r7, lr}
 800820e:	b087      	sub	sp, #28
 8008210:	af00      	add	r7, sp, #0
 8008212:	60f8      	str	r0, [r7, #12]
 8008214:	60b9      	str	r1, [r7, #8]
 8008216:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 8008218:	687b      	ldr	r3, [r7, #4]
 800821a:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 800821c:	f107 0208 	add.w	r2, r7, #8
 8008220:	f107 030c 	add.w	r3, r7, #12
 8008224:	4611      	mov	r1, r2
 8008226:	4618      	mov	r0, r3
 8008228:	f000 fb50 	bl	80088cc <_ZN9__gnu_cxxneIPK6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800822c:	4603      	mov	r3, r0
 800822e:	2b00      	cmp	r3, #0
 8008230:	d016      	beq.n	8008260 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_+0x54>
		std::_Construct(std::__addressof(*__cur), *__first);
 8008232:	6978      	ldr	r0, [r7, #20]
 8008234:	f000 f819 	bl	800826a <_ZSt11__addressofI6SymbolEPT_RS1_>
 8008238:	4604      	mov	r4, r0
 800823a:	f107 030c 	add.w	r3, r7, #12
 800823e:	4618      	mov	r0, r3
 8008240:	f000 fb6d 	bl	800891e <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEdeEv>
 8008244:	4603      	mov	r3, r0
 8008246:	4619      	mov	r1, r3
 8008248:	4620      	mov	r0, r4
 800824a:	f000 fb74 	bl	8008936 <_ZSt10_ConstructI6SymbolJRKS0_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 800824e:	f107 030c 	add.w	r3, r7, #12
 8008252:	4618      	mov	r0, r3
 8008254:	f000 fb52 	bl	80088fc <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEppEv>
 8008258:	697b      	ldr	r3, [r7, #20]
 800825a:	3320      	adds	r3, #32
 800825c:	617b      	str	r3, [r7, #20]
 800825e:	e7dd      	b.n	800821c <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_+0x10>
	      return __cur;
 8008260:	697b      	ldr	r3, [r7, #20]
	}
 8008262:	4618      	mov	r0, r3
 8008264:	371c      	adds	r7, #28
 8008266:	46bd      	mov	sp, r7
 8008268:	bd90      	pop	{r4, r7, pc}

0800826a <_ZSt11__addressofI6SymbolEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800826a:	b480      	push	{r7}
 800826c:	b083      	sub	sp, #12
 800826e:	af00      	add	r7, sp, #0
 8008270:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8008272:	687b      	ldr	r3, [r7, #4]
 8008274:	4618      	mov	r0, r3
 8008276:	370c      	adds	r7, #12
 8008278:	46bd      	mov	sp, r7
 800827a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800827e:	4770      	bx	lr

08008280 <_ZSt8_DestroyI6SymbolEvPT_>:
    _Destroy(_Tp* __pointer)
 8008280:	b580      	push	{r7, lr}
 8008282:	b082      	sub	sp, #8
 8008284:	af00      	add	r7, sp, #0
 8008286:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8008288:	6878      	ldr	r0, [r7, #4]
 800828a:	f7f9 f925 	bl	80014d8 <_ZN6SymbolD1Ev>
 800828e:	bf00      	nop
 8008290:	3708      	adds	r7, #8
 8008292:	46bd      	mov	sp, r7
 8008294:	bd80      	pop	{r7, pc}

08008296 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8008296:	b480      	push	{r7}
 8008298:	b083      	sub	sp, #12
 800829a:	af00      	add	r7, sp, #0
 800829c:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800829e:	687b      	ldr	r3, [r7, #4]
 80082a0:	4618      	mov	r0, r3
 80082a2:	370c      	adds	r7, #12
 80082a4:	46bd      	mov	sp, r7
 80082a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082aa:	4770      	bx	lr

080082ac <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 80082ac:	b480      	push	{r7}
 80082ae:	b083      	sub	sp, #12
 80082b0:	af00      	add	r7, sp, #0
 80082b2:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 80082b4:	687b      	ldr	r3, [r7, #4]
 80082b6:	4618      	mov	r0, r3
 80082b8:	370c      	adds	r7, #12
 80082ba:	46bd      	mov	sp, r7
 80082bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082c0:	4770      	bx	lr

080082c2 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_>:
	__copy_m(_II __first, _II __last, _OI __result)
 80082c2:	b580      	push	{r7, lr}
 80082c4:	b086      	sub	sp, #24
 80082c6:	af00      	add	r7, sp, #0
 80082c8:	60f8      	str	r0, [r7, #12]
 80082ca:	60b9      	str	r1, [r7, #8]
 80082cc:	607a      	str	r2, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 80082ce:	68ba      	ldr	r2, [r7, #8]
 80082d0:	68fb      	ldr	r3, [r7, #12]
 80082d2:	1ad3      	subs	r3, r2, r3
 80082d4:	115b      	asrs	r3, r3, #5
 80082d6:	617b      	str	r3, [r7, #20]
 80082d8:	697b      	ldr	r3, [r7, #20]
 80082da:	2b00      	cmp	r3, #0
 80082dc:	dd0d      	ble.n	80082fa <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_+0x38>
	      *__result = *__first;
 80082de:	68f9      	ldr	r1, [r7, #12]
 80082e0:	6878      	ldr	r0, [r7, #4]
 80082e2:	f7f9 fa8f 	bl	8001804 <_ZN6SymbolaSERKS_>
	      ++__first;
 80082e6:	68fb      	ldr	r3, [r7, #12]
 80082e8:	3320      	adds	r3, #32
 80082ea:	60fb      	str	r3, [r7, #12]
	      ++__result;
 80082ec:	687b      	ldr	r3, [r7, #4]
 80082ee:	3320      	adds	r3, #32
 80082f0:	607b      	str	r3, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 80082f2:	697b      	ldr	r3, [r7, #20]
 80082f4:	3b01      	subs	r3, #1
 80082f6:	617b      	str	r3, [r7, #20]
 80082f8:	e7ee      	b.n	80082d8 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_+0x16>
	  return __result;
 80082fa:	687b      	ldr	r3, [r7, #4]
	}
 80082fc:	4618      	mov	r0, r3
 80082fe:	3718      	adds	r7, #24
 8008300:	46bd      	mov	sp, r7
 8008302:	bd80      	pop	{r7, pc}

08008304 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEplEi>:
      operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 8008304:	b580      	push	{r7, lr}
 8008306:	b084      	sub	sp, #16
 8008308:	af00      	add	r7, sp, #0
 800830a:	6078      	str	r0, [r7, #4]
 800830c:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current + __n); }
 800830e:	687b      	ldr	r3, [r7, #4]
 8008310:	681a      	ldr	r2, [r3, #0]
 8008312:	683b      	ldr	r3, [r7, #0]
 8008314:	015b      	lsls	r3, r3, #5
 8008316:	4413      	add	r3, r2
 8008318:	60fb      	str	r3, [r7, #12]
 800831a:	f107 020c 	add.w	r2, r7, #12
 800831e:	f107 0308 	add.w	r3, r7, #8
 8008322:	4611      	mov	r1, r2
 8008324:	4618      	mov	r0, r3
 8008326:	f7ff f8cb 	bl	80074c0 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 800832a:	68bb      	ldr	r3, [r7, #8]
 800832c:	4618      	mov	r0, r3
 800832e:	3710      	adds	r7, #16
 8008330:	46bd      	mov	sp, r7
 8008332:	bd80      	pop	{r7, pc}

08008334 <_ZN9__gnu_cxxneIP6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8008334:	b590      	push	{r4, r7, lr}
 8008336:	b083      	sub	sp, #12
 8008338:	af00      	add	r7, sp, #0
 800833a:	6078      	str	r0, [r7, #4]
 800833c:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800833e:	6878      	ldr	r0, [r7, #4]
 8008340:	f7ff ffb4 	bl	80082ac <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 8008344:	4603      	mov	r3, r0
 8008346:	681c      	ldr	r4, [r3, #0]
 8008348:	6838      	ldr	r0, [r7, #0]
 800834a:	f7ff ffaf 	bl	80082ac <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 800834e:	4603      	mov	r3, r0
 8008350:	681b      	ldr	r3, [r3, #0]
 8008352:	429c      	cmp	r4, r3
 8008354:	bf14      	ite	ne
 8008356:	2301      	movne	r3, #1
 8008358:	2300      	moveq	r3, #0
 800835a:	b2db      	uxtb	r3, r3
 800835c:	4618      	mov	r0, r3
 800835e:	370c      	adds	r7, #12
 8008360:	46bd      	mov	sp, r7
 8008362:	bd90      	pop	{r4, r7, pc}

08008364 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8008364:	b480      	push	{r7}
 8008366:	b083      	sub	sp, #12
 8008368:	af00      	add	r7, sp, #0
 800836a:	6078      	str	r0, [r7, #4]
	++_M_current;
 800836c:	687b      	ldr	r3, [r7, #4]
 800836e:	681b      	ldr	r3, [r3, #0]
 8008370:	f103 0220 	add.w	r2, r3, #32
 8008374:	687b      	ldr	r3, [r7, #4]
 8008376:	601a      	str	r2, [r3, #0]
	return *this;
 8008378:	687b      	ldr	r3, [r7, #4]
      }
 800837a:	4618      	mov	r0, r3
 800837c:	370c      	adds	r7, #12
 800837e:	46bd      	mov	sp, r7
 8008380:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008384:	4770      	bx	lr

08008386 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8008386:	b480      	push	{r7}
 8008388:	b083      	sub	sp, #12
 800838a:	af00      	add	r7, sp, #0
 800838c:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800838e:	687b      	ldr	r3, [r7, #4]
 8008390:	681b      	ldr	r3, [r3, #0]
 8008392:	4618      	mov	r0, r3
 8008394:	370c      	adds	r7, #12
 8008396:	46bd      	mov	sp, r7
 8008398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800839c:	4770      	bx	lr

0800839e <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_>:
	__copy_m(_II __first, _II __last, _OI __result)
 800839e:	b580      	push	{r7, lr}
 80083a0:	b086      	sub	sp, #24
 80083a2:	af00      	add	r7, sp, #0
 80083a4:	60f8      	str	r0, [r7, #12]
 80083a6:	60b9      	str	r1, [r7, #8]
 80083a8:	607a      	str	r2, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 80083aa:	68ba      	ldr	r2, [r7, #8]
 80083ac:	68fb      	ldr	r3, [r7, #12]
 80083ae:	1ad3      	subs	r3, r2, r3
 80083b0:	115b      	asrs	r3, r3, #5
 80083b2:	617b      	str	r3, [r7, #20]
 80083b4:	697b      	ldr	r3, [r7, #20]
 80083b6:	2b00      	cmp	r3, #0
 80083b8:	dd0d      	ble.n	80083d6 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_+0x38>
	      *__result = *__first;
 80083ba:	68f9      	ldr	r1, [r7, #12]
 80083bc:	6878      	ldr	r0, [r7, #4]
 80083be:	f7f9 fa21 	bl	8001804 <_ZN6SymbolaSERKS_>
	      ++__first;
 80083c2:	68fb      	ldr	r3, [r7, #12]
 80083c4:	3320      	adds	r3, #32
 80083c6:	60fb      	str	r3, [r7, #12]
	      ++__result;
 80083c8:	687b      	ldr	r3, [r7, #4]
 80083ca:	3320      	adds	r3, #32
 80083cc:	607b      	str	r3, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 80083ce:	697b      	ldr	r3, [r7, #20]
 80083d0:	3b01      	subs	r3, #1
 80083d2:	617b      	str	r3, [r7, #20]
 80083d4:	e7ee      	b.n	80083b4 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_+0x16>
	  return __result;
 80083d6:	687b      	ldr	r3, [r7, #4]
	}
 80083d8:	4618      	mov	r0, r3
 80083da:	3718      	adds	r7, #24
 80083dc:	46bd      	mov	sp, r7
 80083de:	bd80      	pop	{r7, pc}

080083e0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Move_ctor_base(const _Move_ctor_base&) = default;
 80083e0:	b580      	push	{r7, lr}
 80083e2:	b082      	sub	sp, #8
 80083e4:	af00      	add	r7, sp, #0
 80083e6:	6078      	str	r0, [r7, #4]
 80083e8:	6039      	str	r1, [r7, #0]
 80083ea:	687b      	ldr	r3, [r7, #4]
 80083ec:	683a      	ldr	r2, [r7, #0]
 80083ee:	4611      	mov	r1, r2
 80083f0:	4618      	mov	r0, r3
 80083f2:	f000 fac2 	bl	800897a <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 80083f6:	687b      	ldr	r3, [r7, #4]
 80083f8:	4618      	mov	r0, r3
 80083fa:	3708      	adds	r7, #8
 80083fc:	46bd      	mov	sp, r7
 80083fe:	bd80      	pop	{r7, pc}

08008400 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Copy_assign_base(const _Copy_assign_base&) = default;
 8008400:	b580      	push	{r7, lr}
 8008402:	b082      	sub	sp, #8
 8008404:	af00      	add	r7, sp, #0
 8008406:	6078      	str	r0, [r7, #4]
 8008408:	6039      	str	r1, [r7, #0]
 800840a:	687b      	ldr	r3, [r7, #4]
 800840c:	683a      	ldr	r2, [r7, #0]
 800840e:	4611      	mov	r1, r2
 8008410:	4618      	mov	r0, r3
 8008412:	f7ff ffe5 	bl	80083e0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 8008416:	687b      	ldr	r3, [r7, #4]
 8008418:	4618      	mov	r0, r3
 800841a:	3708      	adds	r7, #8
 800841c:	46bd      	mov	sp, r7
 800841e:	bd80      	pop	{r7, pc}

08008420 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Move_assign_base(const _Move_assign_base&) = default;
 8008420:	b580      	push	{r7, lr}
 8008422:	b082      	sub	sp, #8
 8008424:	af00      	add	r7, sp, #0
 8008426:	6078      	str	r0, [r7, #4]
 8008428:	6039      	str	r1, [r7, #0]
 800842a:	687b      	ldr	r3, [r7, #4]
 800842c:	683a      	ldr	r2, [r7, #0]
 800842e:	4611      	mov	r1, r2
 8008430:	4618      	mov	r0, r3
 8008432:	f7ff ffe5 	bl	8008400 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 8008436:	687b      	ldr	r3, [r7, #4]
 8008438:	4618      	mov	r0, r3
 800843a:	3708      	adds	r7, #8
 800843c:	46bd      	mov	sp, r7
 800843e:	bd80      	pop	{r7, pc}

08008440 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Variant_base(const _Variant_base&) = default;
 8008440:	b580      	push	{r7, lr}
 8008442:	b082      	sub	sp, #8
 8008444:	af00      	add	r7, sp, #0
 8008446:	6078      	str	r0, [r7, #4]
 8008448:	6039      	str	r1, [r7, #0]
 800844a:	687b      	ldr	r3, [r7, #4]
 800844c:	683a      	ldr	r2, [r7, #0]
 800844e:	4611      	mov	r1, r2
 8008450:	4618      	mov	r0, r3
 8008452:	f7ff ffe5 	bl	8008420 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 8008456:	687b      	ldr	r3, [r7, #4]
 8008458:	4618      	mov	r0, r3
 800845a:	3708      	adds	r7, #8
 800845c:	46bd      	mov	sp, r7
 800845e:	bd80      	pop	{r7, pc}

08008460 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ERKSA_>:
      variant(const variant& __rhs) = default;
 8008460:	b580      	push	{r7, lr}
 8008462:	b082      	sub	sp, #8
 8008464:	af00      	add	r7, sp, #0
 8008466:	6078      	str	r0, [r7, #4]
 8008468:	6039      	str	r1, [r7, #0]
 800846a:	687b      	ldr	r3, [r7, #4]
 800846c:	683a      	ldr	r2, [r7, #0]
 800846e:	4611      	mov	r1, r2
 8008470:	4618      	mov	r0, r3
 8008472:	f7ff ffe5 	bl	8008440 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 8008476:	687b      	ldr	r3, [r7, #4]
 8008478:	4618      	mov	r0, r3
 800847a:	3708      	adds	r7, #8
 800847c:	46bd      	mov	sp, r7
 800847e:	bd80      	pop	{r7, pc}

08008480 <_ZN6SymbolC1ERKS_>:
 8008480:	b580      	push	{r7, lr}
 8008482:	b082      	sub	sp, #8
 8008484:	af00      	add	r7, sp, #0
 8008486:	6078      	str	r0, [r7, #4]
 8008488:	6039      	str	r1, [r7, #0]
 800848a:	683b      	ldr	r3, [r7, #0]
 800848c:	781a      	ldrb	r2, [r3, #0]
 800848e:	687b      	ldr	r3, [r7, #4]
 8008490:	701a      	strb	r2, [r3, #0]
 8008492:	687b      	ldr	r3, [r7, #4]
 8008494:	1d1a      	adds	r2, r3, #4
 8008496:	683b      	ldr	r3, [r7, #0]
 8008498:	3304      	adds	r3, #4
 800849a:	4619      	mov	r1, r3
 800849c:	4610      	mov	r0, r2
 800849e:	f7ff ffdf 	bl	8008460 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ERKSA_>
 80084a2:	687b      	ldr	r3, [r7, #4]
 80084a4:	4618      	mov	r0, r3
 80084a6:	3708      	adds	r7, #8
 80084a8:	46bd      	mov	sp, r7
 80084aa:	bd80      	pop	{r7, pc}

080084ac <_ZSt10_ConstructI6SymbolJRS0_EEvPT_DpOT0_>:
    _Construct(_T1* __p, _Args&&... __args)
 80084ac:	b590      	push	{r4, r7, lr}
 80084ae:	b083      	sub	sp, #12
 80084b0:	af00      	add	r7, sp, #0
 80084b2:	6078      	str	r0, [r7, #4]
 80084b4:	6039      	str	r1, [r7, #0]
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 80084b6:	6838      	ldr	r0, [r7, #0]
 80084b8:	f000 fa54 	bl	8008964 <_ZSt7forwardIR6SymbolEOT_RNSt16remove_referenceIS2_E4typeE>
 80084bc:	4604      	mov	r4, r0
 80084be:	687b      	ldr	r3, [r7, #4]
 80084c0:	4619      	mov	r1, r3
 80084c2:	2020      	movs	r0, #32
 80084c4:	f7f8 fdc9 	bl	800105a <_ZnwjPv>
 80084c8:	4603      	mov	r3, r0
 80084ca:	4621      	mov	r1, r4
 80084cc:	4618      	mov	r0, r3
 80084ce:	f7ff ffd7 	bl	8008480 <_ZN6SymbolC1ERKS_>
 80084d2:	bf00      	nop
 80084d4:	370c      	adds	r7, #12
 80084d6:	46bd      	mov	sp, r7
 80084d8:	bd90      	pop	{r4, r7, pc}

080084da <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80084da:	b480      	push	{r7}
 80084dc:	b083      	sub	sp, #12
 80084de:	af00      	add	r7, sp, #0
 80084e0:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80084e2:	687b      	ldr	r3, [r7, #4]
 80084e4:	4618      	mov	r0, r3
 80084e6:	370c      	adds	r7, #12
 80084e8:	46bd      	mov	sp, r7
 80084ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084ee:	4770      	bx	lr

080084f0 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E17_S_select_on_copyERKS2_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 80084f0:	b580      	push	{r7, lr}
 80084f2:	b082      	sub	sp, #8
 80084f4:	af00      	add	r7, sp, #0
 80084f6:	6078      	str	r0, [r7, #4]
 80084f8:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 80084fa:	687b      	ldr	r3, [r7, #4]
 80084fc:	6839      	ldr	r1, [r7, #0]
 80084fe:	4618      	mov	r0, r3
 8008500:	f000 fa4d 	bl	800899e <_ZNSt16allocator_traitsISaI6SymbolEE37select_on_container_copy_constructionERKS1_>
 8008504:	6878      	ldr	r0, [r7, #4]
 8008506:	3708      	adds	r7, #8
 8008508:	46bd      	mov	sp, r7
 800850a:	bd80      	pop	{r7, pc}

0800850c <_ZNSaI6SymbolED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 800850c:	b580      	push	{r7, lr}
 800850e:	b082      	sub	sp, #8
 8008510:	af00      	add	r7, sp, #0
 8008512:	6078      	str	r0, [r7, #4]
 8008514:	6878      	ldr	r0, [r7, #4]
 8008516:	f000 fa4f 	bl	80089b8 <_ZN9__gnu_cxx13new_allocatorI6SymbolED1Ev>
 800851a:	687b      	ldr	r3, [r7, #4]
 800851c:	4618      	mov	r0, r3
 800851e:	3708      	adds	r7, #8
 8008520:	46bd      	mov	sp, r7
 8008522:	bd80      	pop	{r7, pc}

08008524 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EjRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 8008524:	b580      	push	{r7, lr}
 8008526:	b084      	sub	sp, #16
 8008528:	af00      	add	r7, sp, #0
 800852a:	60f8      	str	r0, [r7, #12]
 800852c:	60b9      	str	r1, [r7, #8]
 800852e:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 8008530:	68fb      	ldr	r3, [r7, #12]
 8008532:	6879      	ldr	r1, [r7, #4]
 8008534:	4618      	mov	r0, r3
 8008536:	f000 fa4a 	bl	80089ce <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
 800853a:	68b9      	ldr	r1, [r7, #8]
 800853c:	68f8      	ldr	r0, [r7, #12]
 800853e:	f000 fa58 	bl	80089f2 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_M_create_storageEj>
 8008542:	68fb      	ldr	r3, [r7, #12]
 8008544:	4618      	mov	r0, r3
 8008546:	3710      	adds	r7, #16
 8008548:	46bd      	mov	sp, r7
 800854a:	bd80      	pop	{r7, pc}

0800854c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 800854c:	b480      	push	{r7}
 800854e:	b083      	sub	sp, #12
 8008550:	af00      	add	r7, sp, #0
 8008552:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8008554:	4b03      	ldr	r3, [pc, #12]	; (8008564 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv+0x18>)
      }
 8008556:	4618      	mov	r0, r3
 8008558:	370c      	adds	r7, #12
 800855a:	46bd      	mov	sp, r7
 800855c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008560:	4770      	bx	lr
 8008562:	bf00      	nop
 8008564:	06666666 	.word	0x06666666

08008568 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8008568:	b480      	push	{r7}
 800856a:	b083      	sub	sp, #12
 800856c:	af00      	add	r7, sp, #0
 800856e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8008570:	4b03      	ldr	r3, [pc, #12]	; (8008580 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv+0x18>)
      }
 8008572:	4618      	mov	r0, r3
 8008574:	370c      	adds	r7, #12
 8008576:	46bd      	mov	sp, r7
 8008578:	f85d 7b04 	ldr.w	r7, [sp], #4
 800857c:	4770      	bx	lr
 800857e:	bf00      	nop
 8008580:	02e8ba2e 	.word	0x02e8ba2e

08008584 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8008584:	b480      	push	{r7}
 8008586:	b083      	sub	sp, #12
 8008588:	af00      	add	r7, sp, #0
 800858a:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 800858c:	4b03      	ldr	r3, [pc, #12]	; (800859c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv+0x18>)
      }
 800858e:	4618      	mov	r0, r3
 8008590:	370c      	adds	r7, #12
 8008592:	46bd      	mov	sp, r7
 8008594:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008598:	4770      	bx	lr
 800859a:	bf00      	nop
 800859c:	06666666 	.word	0x06666666

080085a0 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80085a0:	b480      	push	{r7}
 80085a2:	b083      	sub	sp, #12
 80085a4:	af00      	add	r7, sp, #0
 80085a6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80085a8:	687b      	ldr	r3, [r7, #4]
 80085aa:	4618      	mov	r0, r3
 80085ac:	370c      	adds	r7, #12
 80085ae:	46bd      	mov	sp, r7
 80085b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085b4:	4770      	bx	lr

080085b6 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80085b6:	b590      	push	{r4, r7, lr}
 80085b8:	b085      	sub	sp, #20
 80085ba:	af00      	add	r7, sp, #0
 80085bc:	6078      	str	r0, [r7, #4]
 80085be:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80085c0:	687b      	ldr	r3, [r7, #4]
 80085c2:	2200      	movs	r2, #0
 80085c4:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80085c6:	6878      	ldr	r0, [r7, #4]
 80085c8:	f7f9 f9b3 	bl	8001932 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80085cc:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80085ce:	6838      	ldr	r0, [r7, #0]
 80085d0:	f7ff ffe6 	bl	80085a0 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 80085d4:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80085d6:	681c      	ldr	r4, [r3, #0]
 80085d8:	68f8      	ldr	r0, [r7, #12]
 80085da:	f000 fa25 	bl	8008a28 <_ZSt9addressofIiEPT_RS0_>
 80085de:	4603      	mov	r3, r0
 80085e0:	4619      	mov	r1, r3
 80085e2:	2004      	movs	r0, #4
 80085e4:	f7f8 fd39 	bl	800105a <_ZnwjPv>
 80085e8:	4603      	mov	r3, r0
 80085ea:	601c      	str	r4, [r3, #0]
    }
 80085ec:	bf00      	nop
 80085ee:	3714      	adds	r7, #20
 80085f0:	46bd      	mov	sp, r7
 80085f2:	bd90      	pop	{r4, r7, pc}

080085f4 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80085f4:	b480      	push	{r7}
 80085f6:	b083      	sub	sp, #12
 80085f8:	af00      	add	r7, sp, #0
 80085fa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80085fc:	687b      	ldr	r3, [r7, #4]
 80085fe:	4618      	mov	r0, r3
 8008600:	370c      	adds	r7, #12
 8008602:	46bd      	mov	sp, r7
 8008604:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008608:	4770      	bx	lr

0800860a <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800860a:	b590      	push	{r4, r7, lr}
 800860c:	b085      	sub	sp, #20
 800860e:	af00      	add	r7, sp, #0
 8008610:	6078      	str	r0, [r7, #4]
 8008612:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8008614:	687b      	ldr	r3, [r7, #4]
 8008616:	2201      	movs	r2, #1
 8008618:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800861a:	6878      	ldr	r0, [r7, #4]
 800861c:	f7fb f958 	bl	80038d0 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008620:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8008622:	6838      	ldr	r0, [r7, #0]
 8008624:	f7ff ffe6 	bl	80085f4 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8008628:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800862a:	681c      	ldr	r4, [r3, #0]
 800862c:	68f8      	ldr	r0, [r7, #12]
 800862e:	f000 fa07 	bl	8008a40 <_ZSt9addressofIfEPT_RS0_>
 8008632:	4603      	mov	r3, r0
 8008634:	4619      	mov	r1, r3
 8008636:	2004      	movs	r0, #4
 8008638:	f7f8 fd0f 	bl	800105a <_ZnwjPv>
 800863c:	4603      	mov	r3, r0
 800863e:	601c      	str	r4, [r3, #0]
    }
 8008640:	bf00      	nop
 8008642:	3714      	adds	r7, #20
 8008644:	46bd      	mov	sp, r7
 8008646:	bd90      	pop	{r4, r7, pc}

08008648 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8008648:	b580      	push	{r7, lr}
 800864a:	b082      	sub	sp, #8
 800864c:	af00      	add	r7, sp, #0
 800864e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8008650:	6878      	ldr	r0, [r7, #4]
 8008652:	f7f8 ff5b 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8008656:	4603      	mov	r3, r0
 8008658:	2b01      	cmp	r3, #1
 800865a:	bf14      	ite	ne
 800865c:	2301      	movne	r3, #1
 800865e:	2300      	moveq	r3, #0
 8008660:	b2db      	uxtb	r3, r3
 8008662:	2b00      	cmp	r3, #0
 8008664:	d002      	beq.n	800866c <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8008666:	4805      	ldr	r0, [pc, #20]	; (800867c <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8008668:	f7f8 fd03 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800866c:	6878      	ldr	r0, [r7, #4]
 800866e:	f7fb f92f 	bl	80038d0 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008672:	4603      	mov	r3, r0
    }
 8008674:	4618      	mov	r0, r3
 8008676:	3708      	adds	r7, #8
 8008678:	46bd      	mov	sp, r7
 800867a:	bd80      	pop	{r7, pc}
 800867c:	080271c8 	.word	0x080271c8

08008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008680:	b480      	push	{r7}
 8008682:	b083      	sub	sp, #12
 8008684:	af00      	add	r7, sp, #0
 8008686:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008688:	687b      	ldr	r3, [r7, #4]
 800868a:	4618      	mov	r0, r3
 800868c:	370c      	adds	r7, #12
 800868e:	46bd      	mov	sp, r7
 8008690:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008694:	4770      	bx	lr

08008696 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8008696:	b590      	push	{r4, r7, lr}
 8008698:	b085      	sub	sp, #20
 800869a:	af00      	add	r7, sp, #0
 800869c:	6078      	str	r0, [r7, #4]
 800869e:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80086a0:	687b      	ldr	r3, [r7, #4]
 80086a2:	2202      	movs	r2, #2
 80086a4:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80086a6:	6878      	ldr	r0, [r7, #4]
 80086a8:	f7f8 ff78 	bl	800159c <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80086ac:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80086ae:	6838      	ldr	r0, [r7, #0]
 80086b0:	f7ff ffe6 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 80086b4:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80086b6:	781c      	ldrb	r4, [r3, #0]
 80086b8:	68f8      	ldr	r0, [r7, #12]
 80086ba:	f000 f9cd 	bl	8008a58 <_ZSt9addressofIbEPT_RS0_>
 80086be:	4603      	mov	r3, r0
 80086c0:	4619      	mov	r1, r3
 80086c2:	2001      	movs	r0, #1
 80086c4:	f7f8 fcc9 	bl	800105a <_ZnwjPv>
 80086c8:	4603      	mov	r3, r0
 80086ca:	4622      	mov	r2, r4
 80086cc:	701a      	strb	r2, [r3, #0]
    }
 80086ce:	bf00      	nop
 80086d0:	3714      	adds	r7, #20
 80086d2:	46bd      	mov	sp, r7
 80086d4:	bd90      	pop	{r4, r7, pc}

080086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80086d6:	b480      	push	{r7}
 80086d8:	b083      	sub	sp, #12
 80086da:	af00      	add	r7, sp, #0
 80086dc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80086de:	687b      	ldr	r3, [r7, #4]
 80086e0:	4618      	mov	r0, r3
 80086e2:	370c      	adds	r7, #12
 80086e4:	46bd      	mov	sp, r7
 80086e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086ea:	4770      	bx	lr

080086ec <_ZSt28__variant_construct_by_indexILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80086ec:	b590      	push	{r4, r7, lr}
 80086ee:	b085      	sub	sp, #20
 80086f0:	af00      	add	r7, sp, #0
 80086f2:	6078      	str	r0, [r7, #4]
 80086f4:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80086f6:	687b      	ldr	r3, [r7, #4]
 80086f8:	2203      	movs	r2, #3
 80086fa:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80086fc:	6878      	ldr	r0, [r7, #4]
 80086fe:	f7fb f9eb 	bl	8003ad8 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008702:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8008704:	6838      	ldr	r0, [r7, #0]
 8008706:	f7ff ffe6 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800870a:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 800870c:	68f8      	ldr	r0, [r7, #12]
 800870e:	f000 f9af 	bl	8008a70 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8008712:	4603      	mov	r3, r0
 8008714:	4619      	mov	r1, r3
 8008716:	2018      	movs	r0, #24
 8008718:	f7f8 fc9f 	bl	800105a <_ZnwjPv>
 800871c:	4603      	mov	r3, r0
 800871e:	4621      	mov	r1, r4
 8008720:	4618      	mov	r0, r3
 8008722:	f01a f944 	bl	80229ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 8008726:	bf00      	nop
 8008728:	3714      	adds	r7, #20
 800872a:	46bd      	mov	sp, r7
 800872c:	bd90      	pop	{r4, r7, pc}
	...

08008730 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8008730:	b580      	push	{r7, lr}
 8008732:	b082      	sub	sp, #8
 8008734:	af00      	add	r7, sp, #0
 8008736:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8008738:	6878      	ldr	r0, [r7, #4]
 800873a:	f7f8 fee7 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 800873e:	4603      	mov	r3, r0
 8008740:	2b03      	cmp	r3, #3
 8008742:	bf14      	ite	ne
 8008744:	2301      	movne	r3, #1
 8008746:	2300      	moveq	r3, #0
 8008748:	b2db      	uxtb	r3, r3
 800874a:	2b00      	cmp	r3, #0
 800874c:	d002      	beq.n	8008754 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800874e:	4805      	ldr	r0, [pc, #20]	; (8008764 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8008750:	f7f8 fc8f 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8008754:	6878      	ldr	r0, [r7, #4]
 8008756:	f7fb f9bf 	bl	8003ad8 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800875a:	4603      	mov	r3, r0
    }
 800875c:	4618      	mov	r0, r3
 800875e:	3708      	adds	r7, #8
 8008760:	46bd      	mov	sp, r7
 8008762:	bd80      	pop	{r7, pc}
 8008764:	080271c8 	.word	0x080271c8

08008768 <_ZNSt6vectorI6SymbolSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE>:
    private:
      // Constant-time move assignment when source object's memory can be
      // moved, either because the source's allocator will move too
      // or because the allocators are equal.
      void
      _M_move_assign(vector&& __x, true_type) noexcept
 8008768:	b590      	push	{r4, r7, lr}
 800876a:	b089      	sub	sp, #36	; 0x24
 800876c:	af00      	add	r7, sp, #0
 800876e:	60f8      	str	r0, [r7, #12]
 8008770:	60b9      	str	r1, [r7, #8]
 8008772:	713a      	strb	r2, [r7, #4]
      {
	vector __tmp(get_allocator());
 8008774:	68fa      	ldr	r2, [r7, #12]
 8008776:	f107 031c 	add.w	r3, r7, #28
 800877a:	4611      	mov	r1, r2
 800877c:	4618      	mov	r0, r3
 800877e:	f000 f983 	bl	8008a88 <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE13get_allocatorEv>
 8008782:	f107 021c 	add.w	r2, r7, #28
 8008786:	f107 0310 	add.w	r3, r7, #16
 800878a:	4611      	mov	r1, r2
 800878c:	4618      	mov	r0, r3
 800878e:	f000 f98c 	bl	8008aaa <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS1_>
 8008792:	f107 031c 	add.w	r3, r7, #28
 8008796:	4618      	mov	r0, r3
 8008798:	f7ff feb8 	bl	800850c <_ZNSaI6SymbolED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
 800879c:	68fb      	ldr	r3, [r7, #12]
 800879e:	68ba      	ldr	r2, [r7, #8]
 80087a0:	4611      	mov	r1, r2
 80087a2:	4618      	mov	r0, r3
 80087a4:	f000 f990 	bl	8008ac8 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
 80087a8:	68ba      	ldr	r2, [r7, #8]
 80087aa:	f107 0310 	add.w	r3, r7, #16
 80087ae:	4611      	mov	r1, r2
 80087b0:	4618      	mov	r0, r3
 80087b2:	f000 f989 	bl	8008ac8 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
 80087b6:	68fb      	ldr	r3, [r7, #12]
 80087b8:	4618      	mov	r0, r3
 80087ba:	f7fe f9a5 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80087be:	4604      	mov	r4, r0
 80087c0:	68bb      	ldr	r3, [r7, #8]
 80087c2:	4618      	mov	r0, r3
 80087c4:	f7fe f9a0 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80087c8:	4603      	mov	r3, r0
 80087ca:	4619      	mov	r1, r3
 80087cc:	4620      	mov	r0, r4
 80087ce:	f000 f999 	bl	8008b04 <_ZSt15__alloc_on_moveISaI6SymbolEEvRT_S3_>
	vector __tmp(get_allocator());
 80087d2:	f107 0310 	add.w	r3, r7, #16
 80087d6:	4618      	mov	r0, r3
 80087d8:	f7ff f844 	bl	8007864 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
      }
 80087dc:	bf00      	nop
 80087de:	3724      	adds	r7, #36	; 0x24
 80087e0:	46bd      	mov	sp, r7
 80087e2:	bd90      	pop	{r4, r7, pc}

080087e4 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80087e4:	b480      	push	{r7}
 80087e6:	b083      	sub	sp, #12
 80087e8:	af00      	add	r7, sp, #0
 80087ea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80087ec:	687b      	ldr	r3, [r7, #4]
 80087ee:	4618      	mov	r0, r3
 80087f0:	370c      	adds	r7, #12
 80087f2:	46bd      	mov	sp, r7
 80087f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087f8:	4770      	bx	lr

080087fa <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EOS2_>:
      _Vector_base(_Vector_base&&) = default;
 80087fa:	b580      	push	{r7, lr}
 80087fc:	b082      	sub	sp, #8
 80087fe:	af00      	add	r7, sp, #0
 8008800:	6078      	str	r0, [r7, #4]
 8008802:	6039      	str	r1, [r7, #0]
 8008804:	687b      	ldr	r3, [r7, #4]
 8008806:	683a      	ldr	r2, [r7, #0]
 8008808:	4611      	mov	r1, r2
 800880a:	4618      	mov	r0, r3
 800880c:	f000 f994 	bl	8008b38 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1EOS3_>
 8008810:	687b      	ldr	r3, [r7, #4]
 8008812:	4618      	mov	r0, r3
 8008814:	3708      	adds	r7, #8
 8008816:	46bd      	mov	sp, r7
 8008818:	bd80      	pop	{r7, pc}

0800881a <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>:
      vector(vector&&) noexcept = default;
 800881a:	b580      	push	{r7, lr}
 800881c:	b082      	sub	sp, #8
 800881e:	af00      	add	r7, sp, #0
 8008820:	6078      	str	r0, [r7, #4]
 8008822:	6039      	str	r1, [r7, #0]
 8008824:	687b      	ldr	r3, [r7, #4]
 8008826:	683a      	ldr	r2, [r7, #0]
 8008828:	4611      	mov	r1, r2
 800882a:	4618      	mov	r0, r3
 800882c:	f7ff ffe5 	bl	80087fa <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EOS2_>
 8008830:	687b      	ldr	r3, [r7, #4]
 8008832:	4618      	mov	r0, r3
 8008834:	3708      	adds	r7, #8
 8008836:	46bd      	mov	sp, r7
 8008838:	bd80      	pop	{r7, pc}

0800883a <_ZSt28__variant_construct_by_indexILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800883a:	b590      	push	{r4, r7, lr}
 800883c:	b085      	sub	sp, #20
 800883e:	af00      	add	r7, sp, #0
 8008840:	6078      	str	r0, [r7, #4]
 8008842:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8008844:	687b      	ldr	r3, [r7, #4]
 8008846:	2204      	movs	r2, #4
 8008848:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800884a:	6878      	ldr	r0, [r7, #4]
 800884c:	f7fb fa04 	bl	8003c58 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008850:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8008852:	6838      	ldr	r0, [r7, #0]
 8008854:	f7ff ffc6 	bl	80087e4 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 8008858:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 800885a:	68f8      	ldr	r0, [r7, #12]
 800885c:	f000 f960 	bl	8008b20 <_ZSt9addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 8008860:	4603      	mov	r3, r0
 8008862:	4619      	mov	r1, r3
 8008864:	200c      	movs	r0, #12
 8008866:	f7f8 fbf8 	bl	800105a <_ZnwjPv>
 800886a:	4603      	mov	r3, r0
 800886c:	4621      	mov	r1, r4
 800886e:	4618      	mov	r0, r3
 8008870:	f7ff ffd3 	bl	800881a <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>
    }
 8008874:	bf00      	nop
 8008876:	3714      	adds	r7, #20
 8008878:	46bd      	mov	sp, r7
 800887a:	bd90      	pop	{r4, r7, pc}

0800887c <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800887c:	b580      	push	{r7, lr}
 800887e:	b082      	sub	sp, #8
 8008880:	af00      	add	r7, sp, #0
 8008882:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8008884:	6878      	ldr	r0, [r7, #4]
 8008886:	f7f8 fe41 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 800888a:	4603      	mov	r3, r0
 800888c:	2b04      	cmp	r3, #4
 800888e:	bf14      	ite	ne
 8008890:	2301      	movne	r3, #1
 8008892:	2300      	moveq	r3, #0
 8008894:	b2db      	uxtb	r3, r3
 8008896:	2b00      	cmp	r3, #0
 8008898:	d002      	beq.n	80088a0 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800889a:	4805      	ldr	r0, [pc, #20]	; (80088b0 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800889c:	f7f8 fbe9 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80088a0:	6878      	ldr	r0, [r7, #4]
 80088a2:	f7fb f9d9 	bl	8003c58 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80088a6:	4603      	mov	r3, r0
    }
 80088a8:	4618      	mov	r0, r3
 80088aa:	3708      	adds	r7, #8
 80088ac:	46bd      	mov	sp, r7
 80088ae:	bd80      	pop	{r7, pc}
 80088b0:	080271c8 	.word	0x080271c8

080088b4 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 80088b4:	b480      	push	{r7}
 80088b6:	b083      	sub	sp, #12
 80088b8:	af00      	add	r7, sp, #0
 80088ba:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 80088bc:	f06f 437c 	mvn.w	r3, #4227858432	; 0xfc000000
      }
 80088c0:	4618      	mov	r0, r3
 80088c2:	370c      	adds	r7, #12
 80088c4:	46bd      	mov	sp, r7
 80088c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088ca:	4770      	bx	lr

080088cc <_ZN9__gnu_cxxneIPK6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 80088cc:	b590      	push	{r4, r7, lr}
 80088ce:	b083      	sub	sp, #12
 80088d0:	af00      	add	r7, sp, #0
 80088d2:	6078      	str	r0, [r7, #4]
 80088d4:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 80088d6:	6878      	ldr	r0, [r7, #4]
 80088d8:	f7ff fcdd 	bl	8008296 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 80088dc:	4603      	mov	r3, r0
 80088de:	681c      	ldr	r4, [r3, #0]
 80088e0:	6838      	ldr	r0, [r7, #0]
 80088e2:	f7ff fcd8 	bl	8008296 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 80088e6:	4603      	mov	r3, r0
 80088e8:	681b      	ldr	r3, [r3, #0]
 80088ea:	429c      	cmp	r4, r3
 80088ec:	bf14      	ite	ne
 80088ee:	2301      	movne	r3, #1
 80088f0:	2300      	moveq	r3, #0
 80088f2:	b2db      	uxtb	r3, r3
 80088f4:	4618      	mov	r0, r3
 80088f6:	370c      	adds	r7, #12
 80088f8:	46bd      	mov	sp, r7
 80088fa:	bd90      	pop	{r4, r7, pc}

080088fc <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 80088fc:	b480      	push	{r7}
 80088fe:	b083      	sub	sp, #12
 8008900:	af00      	add	r7, sp, #0
 8008902:	6078      	str	r0, [r7, #4]
	++_M_current;
 8008904:	687b      	ldr	r3, [r7, #4]
 8008906:	681b      	ldr	r3, [r3, #0]
 8008908:	f103 0220 	add.w	r2, r3, #32
 800890c:	687b      	ldr	r3, [r7, #4]
 800890e:	601a      	str	r2, [r3, #0]
	return *this;
 8008910:	687b      	ldr	r3, [r7, #4]
      }
 8008912:	4618      	mov	r0, r3
 8008914:	370c      	adds	r7, #12
 8008916:	46bd      	mov	sp, r7
 8008918:	f85d 7b04 	ldr.w	r7, [sp], #4
 800891c:	4770      	bx	lr

0800891e <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800891e:	b480      	push	{r7}
 8008920:	b083      	sub	sp, #12
 8008922:	af00      	add	r7, sp, #0
 8008924:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8008926:	687b      	ldr	r3, [r7, #4]
 8008928:	681b      	ldr	r3, [r3, #0]
 800892a:	4618      	mov	r0, r3
 800892c:	370c      	adds	r7, #12
 800892e:	46bd      	mov	sp, r7
 8008930:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008934:	4770      	bx	lr

08008936 <_ZSt10_ConstructI6SymbolJRKS0_EEvPT_DpOT0_>:
    _Construct(_T1* __p, _Args&&... __args)
 8008936:	b590      	push	{r4, r7, lr}
 8008938:	b083      	sub	sp, #12
 800893a:	af00      	add	r7, sp, #0
 800893c:	6078      	str	r0, [r7, #4]
 800893e:	6039      	str	r1, [r7, #0]
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 8008940:	6838      	ldr	r0, [r7, #0]
 8008942:	f000 f914 	bl	8008b6e <_ZSt7forwardIRK6SymbolEOT_RNSt16remove_referenceIS3_E4typeE>
 8008946:	4604      	mov	r4, r0
 8008948:	687b      	ldr	r3, [r7, #4]
 800894a:	4619      	mov	r1, r3
 800894c:	2020      	movs	r0, #32
 800894e:	f7f8 fb84 	bl	800105a <_ZnwjPv>
 8008952:	4603      	mov	r3, r0
 8008954:	4621      	mov	r1, r4
 8008956:	4618      	mov	r0, r3
 8008958:	f7ff fd92 	bl	8008480 <_ZN6SymbolC1ERKS_>
 800895c:	bf00      	nop
 800895e:	370c      	adds	r7, #12
 8008960:	46bd      	mov	sp, r7
 8008962:	bd90      	pop	{r4, r7, pc}

08008964 <_ZSt7forwardIR6SymbolEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008964:	b480      	push	{r7}
 8008966:	b083      	sub	sp, #12
 8008968:	af00      	add	r7, sp, #0
 800896a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800896c:	687b      	ldr	r3, [r7, #4]
 800896e:	4618      	mov	r0, r3
 8008970:	370c      	adds	r7, #12
 8008972:	46bd      	mov	sp, r7
 8008974:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008978:	4770      	bx	lr

0800897a <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Copy_ctor_base(const _Copy_ctor_base& __rhs)
 800897a:	b580      	push	{r7, lr}
 800897c:	b082      	sub	sp, #8
 800897e:	af00      	add	r7, sp, #0
 8008980:	6078      	str	r0, [r7, #4]
 8008982:	6039      	str	r1, [r7, #0]
      {
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	4618      	mov	r0, r3
 8008988:	f000 f909 	bl	8008b9e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
	__variant_construct<_Types...>(*this, __rhs);
 800898c:	6839      	ldr	r1, [r7, #0]
 800898e:	6878      	ldr	r0, [r7, #4]
 8008990:	f000 fb06 	bl	8008fa0 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_>
      }
 8008994:	687b      	ldr	r3, [r7, #4]
 8008996:	4618      	mov	r0, r3
 8008998:	3708      	adds	r7, #8
 800899a:	46bd      	mov	sp, r7
 800899c:	bd80      	pop	{r7, pc}

0800899e <_ZNSt16allocator_traitsISaI6SymbolEE37select_on_container_copy_constructionERKS1_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 800899e:	b580      	push	{r7, lr}
 80089a0:	b082      	sub	sp, #8
 80089a2:	af00      	add	r7, sp, #0
 80089a4:	6078      	str	r0, [r7, #4]
 80089a6:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 80089a8:	6839      	ldr	r1, [r7, #0]
 80089aa:	6878      	ldr	r0, [r7, #4]
 80089ac:	f000 fb15 	bl	8008fda <_ZNSaI6SymbolEC1ERKS0_>
 80089b0:	6878      	ldr	r0, [r7, #4]
 80089b2:	3708      	adds	r7, #8
 80089b4:	46bd      	mov	sp, r7
 80089b6:	bd80      	pop	{r7, pc}

080089b8 <_ZN9__gnu_cxx13new_allocatorI6SymbolED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80089b8:	b480      	push	{r7}
 80089ba:	b083      	sub	sp, #12
 80089bc:	af00      	add	r7, sp, #0
 80089be:	6078      	str	r0, [r7, #4]
 80089c0:	687b      	ldr	r3, [r7, #4]
 80089c2:	4618      	mov	r0, r3
 80089c4:	370c      	adds	r7, #12
 80089c6:	46bd      	mov	sp, r7
 80089c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089cc:	4770      	bx	lr

080089ce <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 80089ce:	b580      	push	{r7, lr}
 80089d0:	b082      	sub	sp, #8
 80089d2:	af00      	add	r7, sp, #0
 80089d4:	6078      	str	r0, [r7, #4]
 80089d6:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 80089d8:	6839      	ldr	r1, [r7, #0]
 80089da:	6878      	ldr	r0, [r7, #4]
 80089dc:	f000 fafd 	bl	8008fda <_ZNSaI6SymbolEC1ERKS0_>
 80089e0:	687b      	ldr	r3, [r7, #4]
 80089e2:	4618      	mov	r0, r3
 80089e4:	f000 fb07 	bl	8008ff6 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 80089e8:	687b      	ldr	r3, [r7, #4]
 80089ea:	4618      	mov	r0, r3
 80089ec:	3708      	adds	r7, #8
 80089ee:	46bd      	mov	sp, r7
 80089f0:	bd80      	pop	{r7, pc}

080089f2 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 80089f2:	b580      	push	{r7, lr}
 80089f4:	b082      	sub	sp, #8
 80089f6:	af00      	add	r7, sp, #0
 80089f8:	6078      	str	r0, [r7, #4]
 80089fa:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 80089fc:	6839      	ldr	r1, [r7, #0]
 80089fe:	6878      	ldr	r0, [r7, #4]
 8008a00:	f7fe fd2c 	bl	800745c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 8008a04:	4602      	mov	r2, r0
 8008a06:	687b      	ldr	r3, [r7, #4]
 8008a08:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 8008a0a:	687b      	ldr	r3, [r7, #4]
 8008a0c:	681a      	ldr	r2, [r3, #0]
 8008a0e:	687b      	ldr	r3, [r7, #4]
 8008a10:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 8008a12:	687b      	ldr	r3, [r7, #4]
 8008a14:	681a      	ldr	r2, [r3, #0]
 8008a16:	683b      	ldr	r3, [r7, #0]
 8008a18:	015b      	lsls	r3, r3, #5
 8008a1a:	441a      	add	r2, r3
 8008a1c:	687b      	ldr	r3, [r7, #4]
 8008a1e:	609a      	str	r2, [r3, #8]
      }
 8008a20:	bf00      	nop
 8008a22:	3708      	adds	r7, #8
 8008a24:	46bd      	mov	sp, r7
 8008a26:	bd80      	pop	{r7, pc}

08008a28 <_ZSt9addressofIiEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 8008a28:	b580      	push	{r7, lr}
 8008a2a:	b082      	sub	sp, #8
 8008a2c:	af00      	add	r7, sp, #0
 8008a2e:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8008a30:	6878      	ldr	r0, [r7, #4]
 8008a32:	f7fe fb3d 	bl	80070b0 <_ZSt11__addressofIiEPT_RS0_>
 8008a36:	4603      	mov	r3, r0
 8008a38:	4618      	mov	r0, r3
 8008a3a:	3708      	adds	r7, #8
 8008a3c:	46bd      	mov	sp, r7
 8008a3e:	bd80      	pop	{r7, pc}

08008a40 <_ZSt9addressofIfEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 8008a40:	b580      	push	{r7, lr}
 8008a42:	b082      	sub	sp, #8
 8008a44:	af00      	add	r7, sp, #0
 8008a46:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8008a48:	6878      	ldr	r0, [r7, #4]
 8008a4a:	f7fe fb46 	bl	80070da <_ZSt11__addressofIfEPT_RS0_>
 8008a4e:	4603      	mov	r3, r0
 8008a50:	4618      	mov	r0, r3
 8008a52:	3708      	adds	r7, #8
 8008a54:	46bd      	mov	sp, r7
 8008a56:	bd80      	pop	{r7, pc}

08008a58 <_ZSt9addressofIbEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 8008a58:	b580      	push	{r7, lr}
 8008a5a:	b082      	sub	sp, #8
 8008a5c:	af00      	add	r7, sp, #0
 8008a5e:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8008a60:	6878      	ldr	r0, [r7, #4]
 8008a62:	f7fe fb4f 	bl	8007104 <_ZSt11__addressofIbEPT_RS0_>
 8008a66:	4603      	mov	r3, r0
 8008a68:	4618      	mov	r0, r3
 8008a6a:	3708      	adds	r7, #8
 8008a6c:	46bd      	mov	sp, r7
 8008a6e:	bd80      	pop	{r7, pc}

08008a70 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
    addressof(_Tp& __r) noexcept
 8008a70:	b580      	push	{r7, lr}
 8008a72:	b082      	sub	sp, #8
 8008a74:	af00      	add	r7, sp, #0
 8008a76:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8008a78:	6878      	ldr	r0, [r7, #4]
 8008a7a:	f7fe fb58 	bl	800712e <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8008a7e:	4603      	mov	r3, r0
 8008a80:	4618      	mov	r0, r3
 8008a82:	3708      	adds	r7, #8
 8008a84:	46bd      	mov	sp, r7
 8008a86:	bd80      	pop	{r7, pc}

08008a88 <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
 8008a88:	b580      	push	{r7, lr}
 8008a8a:	b082      	sub	sp, #8
 8008a8c:	af00      	add	r7, sp, #0
 8008a8e:	6078      	str	r0, [r7, #4]
 8008a90:	6039      	str	r1, [r7, #0]
      { return allocator_type(_M_get_Tp_allocator()); }
 8008a92:	6838      	ldr	r0, [r7, #0]
 8008a94:	f7fe f843 	bl	8006b1e <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8008a98:	4603      	mov	r3, r0
 8008a9a:	4619      	mov	r1, r3
 8008a9c:	6878      	ldr	r0, [r7, #4]
 8008a9e:	f000 fa9c 	bl	8008fda <_ZNSaI6SymbolEC1ERKS0_>
 8008aa2:	6878      	ldr	r0, [r7, #4]
 8008aa4:	3708      	adds	r7, #8
 8008aa6:	46bd      	mov	sp, r7
 8008aa8:	bd80      	pop	{r7, pc}

08008aaa <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS1_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 8008aaa:	b580      	push	{r7, lr}
 8008aac:	b082      	sub	sp, #8
 8008aae:	af00      	add	r7, sp, #0
 8008ab0:	6078      	str	r0, [r7, #4]
 8008ab2:	6039      	str	r1, [r7, #0]
      : _Base(__a) { }
 8008ab4:	687b      	ldr	r3, [r7, #4]
 8008ab6:	6839      	ldr	r1, [r7, #0]
 8008ab8:	4618      	mov	r0, r3
 8008aba:	f000 fab0 	bl	800901e <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1ERKS1_>
 8008abe:	687b      	ldr	r3, [r7, #4]
 8008ac0:	4618      	mov	r0, r3
 8008ac2:	3708      	adds	r7, #8
 8008ac4:	46bd      	mov	sp, r7
 8008ac6:	bd80      	pop	{r7, pc}

08008ac8 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 8008ac8:	b580      	push	{r7, lr}
 8008aca:	b086      	sub	sp, #24
 8008acc:	af00      	add	r7, sp, #0
 8008ace:	6078      	str	r0, [r7, #4]
 8008ad0:	6039      	str	r1, [r7, #0]
	  _Vector_impl_data __tmp;
 8008ad2:	f107 030c 	add.w	r3, r7, #12
 8008ad6:	4618      	mov	r0, r3
 8008ad8:	f000 fa8d 	bl	8008ff6 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
 8008adc:	f107 030c 	add.w	r3, r7, #12
 8008ae0:	6879      	ldr	r1, [r7, #4]
 8008ae2:	4618      	mov	r0, r3
 8008ae4:	f000 faaa 	bl	800903c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	  _M_copy_data(__x);
 8008ae8:	6839      	ldr	r1, [r7, #0]
 8008aea:	6878      	ldr	r0, [r7, #4]
 8008aec:	f000 faa6 	bl	800903c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	  __x._M_copy_data(__tmp);
 8008af0:	f107 030c 	add.w	r3, r7, #12
 8008af4:	4619      	mov	r1, r3
 8008af6:	6838      	ldr	r0, [r7, #0]
 8008af8:	f000 faa0 	bl	800903c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	}
 8008afc:	bf00      	nop
 8008afe:	3718      	adds	r7, #24
 8008b00:	46bd      	mov	sp, r7
 8008b02:	bd80      	pop	{r7, pc}

08008b04 <_ZSt15__alloc_on_moveISaI6SymbolEEvRT_S3_>:
  template<typename _Alloc>
    inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
    { }

  template<typename _Alloc>
    inline void __alloc_on_move(_Alloc& __one, _Alloc& __two)
 8008b04:	b580      	push	{r7, lr}
 8008b06:	b084      	sub	sp, #16
 8008b08:	af00      	add	r7, sp, #0
 8008b0a:	6078      	str	r0, [r7, #4]
 8008b0c:	6039      	str	r1, [r7, #0]
    {
      typedef allocator_traits<_Alloc> __traits;
      typedef typename __traits::propagate_on_container_move_assignment __pocma;
      __do_alloc_on_move(__one, __two, __pocma());
 8008b0e:	461a      	mov	r2, r3
 8008b10:	6839      	ldr	r1, [r7, #0]
 8008b12:	6878      	ldr	r0, [r7, #4]
 8008b14:	f000 faa9 	bl	800906a <_ZSt18__do_alloc_on_moveISaI6SymbolEEvRT_S3_St17integral_constantIbLb1EE>
    }
 8008b18:	bf00      	nop
 8008b1a:	3710      	adds	r7, #16
 8008b1c:	46bd      	mov	sp, r7
 8008b1e:	bd80      	pop	{r7, pc}

08008b20 <_ZSt9addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>:
    addressof(_Tp& __r) noexcept
 8008b20:	b580      	push	{r7, lr}
 8008b22:	b082      	sub	sp, #8
 8008b24:	af00      	add	r7, sp, #0
 8008b26:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8008b28:	6878      	ldr	r0, [r7, #4]
 8008b2a:	f7fe fb16 	bl	800715a <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 8008b2e:	4603      	mov	r3, r0
 8008b30:	4618      	mov	r0, r3
 8008b32:	3708      	adds	r7, #8
 8008b34:	46bd      	mov	sp, r7
 8008b36:	bd80      	pop	{r7, pc}

08008b38 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1EOS3_>:
	_Vector_impl(_Vector_impl&& __x) noexcept
 8008b38:	b590      	push	{r4, r7, lr}
 8008b3a:	b083      	sub	sp, #12
 8008b3c:	af00      	add	r7, sp, #0
 8008b3e:	6078      	str	r0, [r7, #4]
 8008b40:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 8008b42:	6838      	ldr	r0, [r7, #0]
 8008b44:	f000 fa9e 	bl	8009084 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>
 8008b48:	4603      	mov	r3, r0
 8008b4a:	4619      	mov	r1, r3
 8008b4c:	6878      	ldr	r0, [r7, #4]
 8008b4e:	f000 fa44 	bl	8008fda <_ZNSaI6SymbolEC1ERKS0_>
 8008b52:	687c      	ldr	r4, [r7, #4]
 8008b54:	6838      	ldr	r0, [r7, #0]
 8008b56:	f000 fa95 	bl	8009084 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>
 8008b5a:	4603      	mov	r3, r0
 8008b5c:	4619      	mov	r1, r3
 8008b5e:	4620      	mov	r0, r4
 8008b60:	f000 fa9b 	bl	800909a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1EOS3_>
	{ }
 8008b64:	687b      	ldr	r3, [r7, #4]
 8008b66:	4618      	mov	r0, r3
 8008b68:	370c      	adds	r7, #12
 8008b6a:	46bd      	mov	sp, r7
 8008b6c:	bd90      	pop	{r4, r7, pc}

08008b6e <_ZSt7forwardIRK6SymbolEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008b6e:	b480      	push	{r7}
 8008b70:	b083      	sub	sp, #12
 8008b72:	af00      	add	r7, sp, #0
 8008b74:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008b76:	687b      	ldr	r3, [r7, #4]
 8008b78:	4618      	mov	r0, r3
 8008b7a:	370c      	adds	r7, #12
 8008b7c:	46bd      	mov	sp, r7
 8008b7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b82:	4770      	bx	lr

08008b84 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8008b84:	b580      	push	{r7, lr}
 8008b86:	b082      	sub	sp, #8
 8008b88:	af00      	add	r7, sp, #0
 8008b8a:	6078      	str	r0, [r7, #4]
 8008b8c:	687b      	ldr	r3, [r7, #4]
 8008b8e:	4618      	mov	r0, r3
 8008b90:	f000 faa6 	bl	80090e0 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 8008b94:	687b      	ldr	r3, [r7, #4]
 8008b96:	4618      	mov	r0, r3
 8008b98:	3708      	adds	r7, #8
 8008b9a:	46bd      	mov	sp, r7
 8008b9c:	bd80      	pop	{r7, pc}

08008b9e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variant_storage() : _M_index(variant_npos) { }
 8008b9e:	b580      	push	{r7, lr}
 8008ba0:	b082      	sub	sp, #8
 8008ba2:	af00      	add	r7, sp, #0
 8008ba4:	6078      	str	r0, [r7, #4]
 8008ba6:	687b      	ldr	r3, [r7, #4]
 8008ba8:	4618      	mov	r0, r3
 8008baa:	f7ff ffeb 	bl	8008b84 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 8008bae:	687b      	ldr	r3, [r7, #4]
 8008bb0:	22ff      	movs	r2, #255	; 0xff
 8008bb2:	761a      	strb	r2, [r3, #24]
 8008bb4:	687b      	ldr	r3, [r7, #4]
 8008bb6:	4618      	mov	r0, r3
 8008bb8:	3708      	adds	r7, #8
 8008bba:	46bd      	mov	sp, r7
 8008bbc:	bd80      	pop	{r7, pc}

08008bbe <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8008bbe:	b480      	push	{r7}
 8008bc0:	b083      	sub	sp, #12
 8008bc2:	af00      	add	r7, sp, #0
 8008bc4:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 8008bc6:	687b      	ldr	r3, [r7, #4]
    }
 8008bc8:	4618      	mov	r0, r3
 8008bca:	370c      	adds	r7, #12
 8008bcc:	46bd      	mov	sp, r7
 8008bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bd2:	4770      	bx	lr

08008bd4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008bd4:	b580      	push	{r7, lr}
 8008bd6:	b082      	sub	sp, #8
 8008bd8:	af00      	add	r7, sp, #0
 8008bda:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008bdc:	6878      	ldr	r0, [r7, #4]
 8008bde:	f7fa f9ac 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008be2:	4603      	mov	r3, r0
 8008be4:	4618      	mov	r0, r3
 8008be6:	f7f9 f9c9 	bl	8001f7c <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008bea:	4603      	mov	r3, r0
	}
 8008bec:	4618      	mov	r0, r3
 8008bee:	3708      	adds	r7, #8
 8008bf0:	46bd      	mov	sp, r7
 8008bf2:	bd80      	pop	{r7, pc}

08008bf4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008bf4:	b5b0      	push	{r4, r5, r7, lr}
 8008bf6:	b082      	sub	sp, #8
 8008bf8:	af00      	add	r7, sp, #0
 8008bfa:	6078      	str	r0, [r7, #4]
 8008bfc:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008bfe:	6878      	ldr	r0, [r7, #4]
 8008c00:	f000 fa86 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008c04:	4604      	mov	r4, r0
 8008c06:	6838      	ldr	r0, [r7, #0]
 8008c08:	f7fa f997 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008c0c:	4603      	mov	r3, r0
 8008c0e:	4618      	mov	r0, r3
 8008c10:	f7ff ffe0 	bl	8008bd4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESV_EEDcSL_>
 8008c14:	4603      	mov	r3, r0
 8008c16:	4619      	mov	r1, r3
 8008c18:	4620      	mov	r0, r4
 8008c1a:	f000 fa84 	bl	8009126 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 8008c1e:	462b      	mov	r3, r5
      }
 8008c20:	4618      	mov	r0, r3
 8008c22:	3708      	adds	r7, #8
 8008c24:	46bd      	mov	sp, r7
 8008c26:	bdb0      	pop	{r4, r5, r7, pc}

08008c28 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008c28:	b5b0      	push	{r4, r5, r7, lr}
 8008c2a:	b082      	sub	sp, #8
 8008c2c:	af00      	add	r7, sp, #0
 8008c2e:	6078      	str	r0, [r7, #4]
 8008c30:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008c32:	6878      	ldr	r0, [r7, #4]
 8008c34:	f000 fa6c 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008c38:	4604      	mov	r4, r0
 8008c3a:	6838      	ldr	r0, [r7, #0]
 8008c3c:	f7fa f97d 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008c40:	4603      	mov	r3, r0
 8008c42:	4619      	mov	r1, r3
 8008c44:	4620      	mov	r0, r4
 8008c46:	f7ff ffd5 	bl	8008bf4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008c4a:	462b      	mov	r3, r5
      }
 8008c4c:	4618      	mov	r0, r3
 8008c4e:	3708      	adds	r7, #8
 8008c50:	46bd      	mov	sp, r7
 8008c52:	bdb0      	pop	{r4, r5, r7, pc}

08008c54 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008c54:	b5b0      	push	{r4, r5, r7, lr}
 8008c56:	b082      	sub	sp, #8
 8008c58:	af00      	add	r7, sp, #0
 8008c5a:	6078      	str	r0, [r7, #4]
 8008c5c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008c5e:	6878      	ldr	r0, [r7, #4]
 8008c60:	f000 fa56 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008c64:	4604      	mov	r4, r0
 8008c66:	6838      	ldr	r0, [r7, #0]
 8008c68:	f7fa f967 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008c6c:	4603      	mov	r3, r0
 8008c6e:	4619      	mov	r1, r3
 8008c70:	4620      	mov	r0, r4
 8008c72:	f7ff ffd9 	bl	8008c28 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008c76:	462b      	mov	r3, r5
      }
 8008c78:	4618      	mov	r0, r3
 8008c7a:	3708      	adds	r7, #8
 8008c7c:	46bd      	mov	sp, r7
 8008c7e:	bdb0      	pop	{r4, r5, r7, pc}

08008c80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008c80:	b580      	push	{r7, lr}
 8008c82:	b082      	sub	sp, #8
 8008c84:	af00      	add	r7, sp, #0
 8008c86:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008c88:	6878      	ldr	r0, [r7, #4]
 8008c8a:	f7fa f956 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008c8e:	4603      	mov	r3, r0
 8008c90:	4618      	mov	r0, r3
 8008c92:	f7f9 f9ff 	bl	8002094 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008c96:	4603      	mov	r3, r0
	}
 8008c98:	4618      	mov	r0, r3
 8008c9a:	3708      	adds	r7, #8
 8008c9c:	46bd      	mov	sp, r7
 8008c9e:	bd80      	pop	{r7, pc}

08008ca0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008ca0:	b5b0      	push	{r4, r5, r7, lr}
 8008ca2:	b082      	sub	sp, #8
 8008ca4:	af00      	add	r7, sp, #0
 8008ca6:	6078      	str	r0, [r7, #4]
 8008ca8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008caa:	6878      	ldr	r0, [r7, #4]
 8008cac:	f000 fa30 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008cb0:	4604      	mov	r4, r0
 8008cb2:	6838      	ldr	r0, [r7, #0]
 8008cb4:	f7fa f941 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008cb8:	4603      	mov	r3, r0
 8008cba:	4618      	mov	r0, r3
 8008cbc:	f7ff ffe0 	bl	8008c80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESV_EEDcSL_>
 8008cc0:	4603      	mov	r3, r0
 8008cc2:	4619      	mov	r1, r3
 8008cc4:	4620      	mov	r0, r4
 8008cc6:	f000 fa45 	bl	8009154 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 8008cca:	462b      	mov	r3, r5
      }
 8008ccc:	4618      	mov	r0, r3
 8008cce:	3708      	adds	r7, #8
 8008cd0:	46bd      	mov	sp, r7
 8008cd2:	bdb0      	pop	{r4, r5, r7, pc}

08008cd4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008cd4:	b5b0      	push	{r4, r5, r7, lr}
 8008cd6:	b082      	sub	sp, #8
 8008cd8:	af00      	add	r7, sp, #0
 8008cda:	6078      	str	r0, [r7, #4]
 8008cdc:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008cde:	6878      	ldr	r0, [r7, #4]
 8008ce0:	f000 fa16 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008ce4:	4604      	mov	r4, r0
 8008ce6:	6838      	ldr	r0, [r7, #0]
 8008ce8:	f7fa f927 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008cec:	4603      	mov	r3, r0
 8008cee:	4619      	mov	r1, r3
 8008cf0:	4620      	mov	r0, r4
 8008cf2:	f7ff ffd5 	bl	8008ca0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008cf6:	462b      	mov	r3, r5
      }
 8008cf8:	4618      	mov	r0, r3
 8008cfa:	3708      	adds	r7, #8
 8008cfc:	46bd      	mov	sp, r7
 8008cfe:	bdb0      	pop	{r4, r5, r7, pc}

08008d00 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008d00:	b5b0      	push	{r4, r5, r7, lr}
 8008d02:	b082      	sub	sp, #8
 8008d04:	af00      	add	r7, sp, #0
 8008d06:	6078      	str	r0, [r7, #4]
 8008d08:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008d0a:	6878      	ldr	r0, [r7, #4]
 8008d0c:	f000 fa00 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008d10:	4604      	mov	r4, r0
 8008d12:	6838      	ldr	r0, [r7, #0]
 8008d14:	f7fa f911 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008d18:	4603      	mov	r3, r0
 8008d1a:	4619      	mov	r1, r3
 8008d1c:	4620      	mov	r0, r4
 8008d1e:	f7ff ffd9 	bl	8008cd4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008d22:	462b      	mov	r3, r5
      }
 8008d24:	4618      	mov	r0, r3
 8008d26:	3708      	adds	r7, #8
 8008d28:	46bd      	mov	sp, r7
 8008d2a:	bdb0      	pop	{r4, r5, r7, pc}

08008d2c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008d2c:	b580      	push	{r7, lr}
 8008d2e:	b082      	sub	sp, #8
 8008d30:	af00      	add	r7, sp, #0
 8008d32:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008d34:	6878      	ldr	r0, [r7, #4]
 8008d36:	f7fa f900 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008d3a:	4603      	mov	r3, r0
 8008d3c:	4618      	mov	r0, r3
 8008d3e:	f7f9 fa47 	bl	80021d0 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008d42:	4603      	mov	r3, r0
	}
 8008d44:	4618      	mov	r0, r3
 8008d46:	3708      	adds	r7, #8
 8008d48:	46bd      	mov	sp, r7
 8008d4a:	bd80      	pop	{r7, pc}

08008d4c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008d4c:	b5b0      	push	{r4, r5, r7, lr}
 8008d4e:	b082      	sub	sp, #8
 8008d50:	af00      	add	r7, sp, #0
 8008d52:	6078      	str	r0, [r7, #4]
 8008d54:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008d56:	6878      	ldr	r0, [r7, #4]
 8008d58:	f000 f9da 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008d5c:	4604      	mov	r4, r0
 8008d5e:	6838      	ldr	r0, [r7, #0]
 8008d60:	f7fa f8eb 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008d64:	4603      	mov	r3, r0
 8008d66:	4618      	mov	r0, r3
 8008d68:	f7ff ffe0 	bl	8008d2c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESV_EEDcSL_>
 8008d6c:	4603      	mov	r3, r0
 8008d6e:	4619      	mov	r1, r3
 8008d70:	4620      	mov	r0, r4
 8008d72:	f000 fa06 	bl	8009182 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 8008d76:	462b      	mov	r3, r5
      }
 8008d78:	4618      	mov	r0, r3
 8008d7a:	3708      	adds	r7, #8
 8008d7c:	46bd      	mov	sp, r7
 8008d7e:	bdb0      	pop	{r4, r5, r7, pc}

08008d80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008d80:	b5b0      	push	{r4, r5, r7, lr}
 8008d82:	b082      	sub	sp, #8
 8008d84:	af00      	add	r7, sp, #0
 8008d86:	6078      	str	r0, [r7, #4]
 8008d88:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008d8a:	6878      	ldr	r0, [r7, #4]
 8008d8c:	f000 f9c0 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008d90:	4604      	mov	r4, r0
 8008d92:	6838      	ldr	r0, [r7, #0]
 8008d94:	f7fa f8d1 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008d98:	4603      	mov	r3, r0
 8008d9a:	4619      	mov	r1, r3
 8008d9c:	4620      	mov	r0, r4
 8008d9e:	f7ff ffd5 	bl	8008d4c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008da2:	462b      	mov	r3, r5
      }
 8008da4:	4618      	mov	r0, r3
 8008da6:	3708      	adds	r7, #8
 8008da8:	46bd      	mov	sp, r7
 8008daa:	bdb0      	pop	{r4, r5, r7, pc}

08008dac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008dac:	b5b0      	push	{r4, r5, r7, lr}
 8008dae:	b082      	sub	sp, #8
 8008db0:	af00      	add	r7, sp, #0
 8008db2:	6078      	str	r0, [r7, #4]
 8008db4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008db6:	6878      	ldr	r0, [r7, #4]
 8008db8:	f000 f9aa 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008dbc:	4604      	mov	r4, r0
 8008dbe:	6838      	ldr	r0, [r7, #0]
 8008dc0:	f7fa f8bb 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008dc4:	4603      	mov	r3, r0
 8008dc6:	4619      	mov	r1, r3
 8008dc8:	4620      	mov	r0, r4
 8008dca:	f7ff ffd9 	bl	8008d80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008dce:	462b      	mov	r3, r5
      }
 8008dd0:	4618      	mov	r0, r3
 8008dd2:	3708      	adds	r7, #8
 8008dd4:	46bd      	mov	sp, r7
 8008dd6:	bdb0      	pop	{r4, r5, r7, pc}

08008dd8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008dd8:	b580      	push	{r7, lr}
 8008dda:	b082      	sub	sp, #8
 8008ddc:	af00      	add	r7, sp, #0
 8008dde:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008de0:	6878      	ldr	r0, [r7, #4]
 8008de2:	f7fa f8aa 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008de6:	4603      	mov	r3, r0
 8008de8:	4618      	mov	r0, r3
 8008dea:	f7f9 faa1 	bl	8002330 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008dee:	4603      	mov	r3, r0
	}
 8008df0:	4618      	mov	r0, r3
 8008df2:	3708      	adds	r7, #8
 8008df4:	46bd      	mov	sp, r7
 8008df6:	bd80      	pop	{r7, pc}

08008df8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008df8:	b5b0      	push	{r4, r5, r7, lr}
 8008dfa:	b082      	sub	sp, #8
 8008dfc:	af00      	add	r7, sp, #0
 8008dfe:	6078      	str	r0, [r7, #4]
 8008e00:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008e02:	6878      	ldr	r0, [r7, #4]
 8008e04:	f000 f984 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008e08:	4604      	mov	r4, r0
 8008e0a:	6838      	ldr	r0, [r7, #0]
 8008e0c:	f7fa f895 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008e10:	4603      	mov	r3, r0
 8008e12:	4618      	mov	r0, r3
 8008e14:	f7ff ffe0 	bl	8008dd8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESV_EEDcSL_>
 8008e18:	4603      	mov	r3, r0
 8008e1a:	4619      	mov	r1, r3
 8008e1c:	4620      	mov	r0, r4
 8008e1e:	f000 f9c7 	bl	80091b0 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 8008e22:	462b      	mov	r3, r5
      }
 8008e24:	4618      	mov	r0, r3
 8008e26:	3708      	adds	r7, #8
 8008e28:	46bd      	mov	sp, r7
 8008e2a:	bdb0      	pop	{r4, r5, r7, pc}

08008e2c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008e2c:	b5b0      	push	{r4, r5, r7, lr}
 8008e2e:	b082      	sub	sp, #8
 8008e30:	af00      	add	r7, sp, #0
 8008e32:	6078      	str	r0, [r7, #4]
 8008e34:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008e36:	6878      	ldr	r0, [r7, #4]
 8008e38:	f000 f96a 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008e3c:	4604      	mov	r4, r0
 8008e3e:	6838      	ldr	r0, [r7, #0]
 8008e40:	f7fa f87b 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008e44:	4603      	mov	r3, r0
 8008e46:	4619      	mov	r1, r3
 8008e48:	4620      	mov	r0, r4
 8008e4a:	f7ff ffd5 	bl	8008df8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008e4e:	462b      	mov	r3, r5
      }
 8008e50:	4618      	mov	r0, r3
 8008e52:	3708      	adds	r7, #8
 8008e54:	46bd      	mov	sp, r7
 8008e56:	bdb0      	pop	{r4, r5, r7, pc}

08008e58 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008e58:	b5b0      	push	{r4, r5, r7, lr}
 8008e5a:	b082      	sub	sp, #8
 8008e5c:	af00      	add	r7, sp, #0
 8008e5e:	6078      	str	r0, [r7, #4]
 8008e60:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008e62:	6878      	ldr	r0, [r7, #4]
 8008e64:	f000 f954 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008e68:	4604      	mov	r4, r0
 8008e6a:	6838      	ldr	r0, [r7, #0]
 8008e6c:	f7fa f865 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008e70:	4603      	mov	r3, r0
 8008e72:	4619      	mov	r1, r3
 8008e74:	4620      	mov	r0, r4
 8008e76:	f7ff ffd9 	bl	8008e2c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008e7a:	462b      	mov	r3, r5
      }
 8008e7c:	4618      	mov	r0, r3
 8008e7e:	3708      	adds	r7, #8
 8008e80:	46bd      	mov	sp, r7
 8008e82:	bdb0      	pop	{r4, r5, r7, pc}

08008e84 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008e84:	b580      	push	{r7, lr}
 8008e86:	b082      	sub	sp, #8
 8008e88:	af00      	add	r7, sp, #0
 8008e8a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008e8c:	6878      	ldr	r0, [r7, #4]
 8008e8e:	f7fa f854 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008e92:	4603      	mov	r3, r0
 8008e94:	4618      	mov	r0, r3
 8008e96:	f7f9 fb0d 	bl	80024b4 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008e9a:	4603      	mov	r3, r0
	}
 8008e9c:	4618      	mov	r0, r3
 8008e9e:	3708      	adds	r7, #8
 8008ea0:	46bd      	mov	sp, r7
 8008ea2:	bd80      	pop	{r7, pc}

08008ea4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008ea4:	b5b0      	push	{r4, r5, r7, lr}
 8008ea6:	b082      	sub	sp, #8
 8008ea8:	af00      	add	r7, sp, #0
 8008eaa:	6078      	str	r0, [r7, #4]
 8008eac:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008eae:	6878      	ldr	r0, [r7, #4]
 8008eb0:	f000 f92e 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008eb4:	4604      	mov	r4, r0
 8008eb6:	6838      	ldr	r0, [r7, #0]
 8008eb8:	f7fa f83f 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008ebc:	4603      	mov	r3, r0
 8008ebe:	4618      	mov	r0, r3
 8008ec0:	f7ff ffe0 	bl	8008e84 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESV_EEDcSL_>
 8008ec4:	4603      	mov	r3, r0
 8008ec6:	4619      	mov	r1, r3
 8008ec8:	4620      	mov	r0, r4
 8008eca:	f000 f988 	bl	80091de <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSC_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 8008ece:	462b      	mov	r3, r5
      }
 8008ed0:	4618      	mov	r0, r3
 8008ed2:	3708      	adds	r7, #8
 8008ed4:	46bd      	mov	sp, r7
 8008ed6:	bdb0      	pop	{r4, r5, r7, pc}

08008ed8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008ed8:	b5b0      	push	{r4, r5, r7, lr}
 8008eda:	b082      	sub	sp, #8
 8008edc:	af00      	add	r7, sp, #0
 8008ede:	6078      	str	r0, [r7, #4]
 8008ee0:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008ee2:	6878      	ldr	r0, [r7, #4]
 8008ee4:	f000 f914 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008ee8:	4604      	mov	r4, r0
 8008eea:	6838      	ldr	r0, [r7, #0]
 8008eec:	f7fa f825 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008ef0:	4603      	mov	r3, r0
 8008ef2:	4619      	mov	r1, r3
 8008ef4:	4620      	mov	r0, r4
 8008ef6:	f7ff ffd5 	bl	8008ea4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008efa:	462b      	mov	r3, r5
      }
 8008efc:	4618      	mov	r0, r3
 8008efe:	3708      	adds	r7, #8
 8008f00:	46bd      	mov	sp, r7
 8008f02:	bdb0      	pop	{r4, r5, r7, pc}

08008f04 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008f04:	b5b0      	push	{r4, r5, r7, lr}
 8008f06:	b082      	sub	sp, #8
 8008f08:	af00      	add	r7, sp, #0
 8008f0a:	6078      	str	r0, [r7, #4]
 8008f0c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008f0e:	6878      	ldr	r0, [r7, #4]
 8008f10:	f000 f8fe 	bl	8009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008f14:	4604      	mov	r4, r0
 8008f16:	6838      	ldr	r0, [r7, #0]
 8008f18:	f7fa f80f 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008f1c:	4603      	mov	r3, r0
 8008f1e:	4619      	mov	r1, r3
 8008f20:	4620      	mov	r0, r4
 8008f22:	f7ff ffd9 	bl	8008ed8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008f26:	462b      	mov	r3, r5
      }
 8008f28:	4618      	mov	r0, r3
 8008f2a:	3708      	adds	r7, #8
 8008f2c:	46bd      	mov	sp, r7
 8008f2e:	bdb0      	pop	{r4, r5, r7, pc}

08008f30 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSW_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8008f30:	b580      	push	{r7, lr}
 8008f32:	b082      	sub	sp, #8
 8008f34:	af00      	add	r7, sp, #0
 8008f36:	6078      	str	r0, [r7, #4]
 8008f38:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8008f3a:	683b      	ldr	r3, [r7, #0]
 8008f3c:	009b      	lsls	r3, r3, #2
 8008f3e:	687a      	ldr	r2, [r7, #4]
 8008f40:	4413      	add	r3, r2
 8008f42:	4618      	mov	r0, r3
 8008f44:	f000 f962 	bl	800920c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 8008f48:	4603      	mov	r3, r0
	}
 8008f4a:	4618      	mov	r0, r3
 8008f4c:	3708      	adds	r7, #8
 8008f4e:	46bd      	mov	sp, r7
 8008f50:	bd80      	pop	{r7, pc}
	...

08008f54 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SC_EEEEDcSL_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8008f54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f56:	b085      	sub	sp, #20
 8008f58:	af00      	add	r7, sp, #0
 8008f5a:	6078      	str	r0, [r7, #4]
 8008f5c:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8008f5e:	4b0f      	ldr	r3, [pc, #60]	; (8008f9c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SC_EEEEDcSL_DpOT2_+0x48>)
 8008f60:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8008f62:	6838      	ldr	r0, [r7, #0]
 8008f64:	f7f8 fad2 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8008f68:	4603      	mov	r3, r0
 8008f6a:	4619      	mov	r1, r3
 8008f6c:	68f8      	ldr	r0, [r7, #12]
 8008f6e:	f7ff ffdf 	bl	8008f30 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSW_jDpT_>
 8008f72:	4603      	mov	r3, r0
 8008f74:	681b      	ldr	r3, [r3, #0]
 8008f76:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8008f78:	68bc      	ldr	r4, [r7, #8]
 8008f7a:	6878      	ldr	r0, [r7, #4]
 8008f7c:	f000 f951 	bl	8009222 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008f80:	4605      	mov	r5, r0
 8008f82:	6838      	ldr	r0, [r7, #0]
 8008f84:	f7f9 ffd9 	bl	8002f3a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008f88:	4603      	mov	r3, r0
 8008f8a:	4619      	mov	r1, r3
 8008f8c:	4628      	mov	r0, r5
 8008f8e:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8008f90:	4633      	mov	r3, r6
    }
 8008f92:	4618      	mov	r0, r3
 8008f94:	3714      	adds	r7, #20
 8008f96:	46bd      	mov	sp, r7
 8008f98:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008f9a:	bf00      	nop
 8008f9c:	08027e08 	.word	0x08027e08

08008fa0 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 8008fa0:	b580      	push	{r7, lr}
 8008fa2:	b084      	sub	sp, #16
 8008fa4:	af00      	add	r7, sp, #0
 8008fa6:	6078      	str	r0, [r7, #4]
 8008fa8:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 8008faa:	683b      	ldr	r3, [r7, #0]
 8008fac:	7e1a      	ldrb	r2, [r3, #24]
 8008fae:	687b      	ldr	r3, [r7, #4]
 8008fb0:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8008fb2:	687b      	ldr	r3, [r7, #4]
 8008fb4:	60fb      	str	r3, [r7, #12]
 8008fb6:	6838      	ldr	r0, [r7, #0]
 8008fb8:	f000 f89f 	bl	80090fa <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8008fbc:	4603      	mov	r3, r0
 8008fbe:	4618      	mov	r0, r3
 8008fc0:	f7ff fdfd 	bl	8008bbe <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8008fc4:	4602      	mov	r2, r0
 8008fc6:	f107 030c 	add.w	r3, r7, #12
 8008fca:	4611      	mov	r1, r2
 8008fcc:	4618      	mov	r0, r3
 8008fce:	f7ff ffc1 	bl	8008f54 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SC_EEEEDcSL_DpOT2_>
    }
 8008fd2:	bf00      	nop
 8008fd4:	3710      	adds	r7, #16
 8008fd6:	46bd      	mov	sp, r7
 8008fd8:	bd80      	pop	{r7, pc}

08008fda <_ZNSaI6SymbolEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8008fda:	b580      	push	{r7, lr}
 8008fdc:	b082      	sub	sp, #8
 8008fde:	af00      	add	r7, sp, #0
 8008fe0:	6078      	str	r0, [r7, #4]
 8008fe2:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8008fe4:	6839      	ldr	r1, [r7, #0]
 8008fe6:	6878      	ldr	r0, [r7, #4]
 8008fe8:	f000 f926 	bl	8009238 <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1ERKS2_>
 8008fec:	687b      	ldr	r3, [r7, #4]
 8008fee:	4618      	mov	r0, r3
 8008ff0:	3708      	adds	r7, #8
 8008ff2:	46bd      	mov	sp, r7
 8008ff4:	bd80      	pop	{r7, pc}

08008ff6 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8008ff6:	b480      	push	{r7}
 8008ff8:	b083      	sub	sp, #12
 8008ffa:	af00      	add	r7, sp, #0
 8008ffc:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8008ffe:	687b      	ldr	r3, [r7, #4]
 8009000:	2200      	movs	r2, #0
 8009002:	601a      	str	r2, [r3, #0]
 8009004:	687b      	ldr	r3, [r7, #4]
 8009006:	2200      	movs	r2, #0
 8009008:	605a      	str	r2, [r3, #4]
 800900a:	687b      	ldr	r3, [r7, #4]
 800900c:	2200      	movs	r2, #0
 800900e:	609a      	str	r2, [r3, #8]
	{ }
 8009010:	687b      	ldr	r3, [r7, #4]
 8009012:	4618      	mov	r0, r3
 8009014:	370c      	adds	r7, #12
 8009016:	46bd      	mov	sp, r7
 8009018:	f85d 7b04 	ldr.w	r7, [sp], #4
 800901c:	4770      	bx	lr

0800901e <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 800901e:	b580      	push	{r7, lr}
 8009020:	b082      	sub	sp, #8
 8009022:	af00      	add	r7, sp, #0
 8009024:	6078      	str	r0, [r7, #4]
 8009026:	6039      	str	r1, [r7, #0]
      : _M_impl(__a) { }
 8009028:	687b      	ldr	r3, [r7, #4]
 800902a:	6839      	ldr	r1, [r7, #0]
 800902c:	4618      	mov	r0, r3
 800902e:	f7ff fcce 	bl	80089ce <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>
 8009032:	687b      	ldr	r3, [r7, #4]
 8009034:	4618      	mov	r0, r3
 8009036:	3708      	adds	r7, #8
 8009038:	46bd      	mov	sp, r7
 800903a:	bd80      	pop	{r7, pc}

0800903c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 800903c:	b480      	push	{r7}
 800903e:	b083      	sub	sp, #12
 8009040:	af00      	add	r7, sp, #0
 8009042:	6078      	str	r0, [r7, #4]
 8009044:	6039      	str	r1, [r7, #0]
	  _M_start = __x._M_start;
 8009046:	683b      	ldr	r3, [r7, #0]
 8009048:	681a      	ldr	r2, [r3, #0]
 800904a:	687b      	ldr	r3, [r7, #4]
 800904c:	601a      	str	r2, [r3, #0]
	  _M_finish = __x._M_finish;
 800904e:	683b      	ldr	r3, [r7, #0]
 8009050:	685a      	ldr	r2, [r3, #4]
 8009052:	687b      	ldr	r3, [r7, #4]
 8009054:	605a      	str	r2, [r3, #4]
	  _M_end_of_storage = __x._M_end_of_storage;
 8009056:	683b      	ldr	r3, [r7, #0]
 8009058:	689a      	ldr	r2, [r3, #8]
 800905a:	687b      	ldr	r3, [r7, #4]
 800905c:	609a      	str	r2, [r3, #8]
	}
 800905e:	bf00      	nop
 8009060:	370c      	adds	r7, #12
 8009062:	46bd      	mov	sp, r7
 8009064:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009068:	4770      	bx	lr

0800906a <_ZSt18__do_alloc_on_moveISaI6SymbolEEvRT_S3_St17integral_constantIbLb1EE>:
    inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 800906a:	b580      	push	{r7, lr}
 800906c:	b084      	sub	sp, #16
 800906e:	af00      	add	r7, sp, #0
 8009070:	60f8      	str	r0, [r7, #12]
 8009072:	60b9      	str	r1, [r7, #8]
 8009074:	713a      	strb	r2, [r7, #4]
    { __one = std::move(__two); }
 8009076:	68b8      	ldr	r0, [r7, #8]
 8009078:	f000 f8ea 	bl	8009250 <_ZSt4moveIRSaI6SymbolEEONSt16remove_referenceIT_E4typeEOS4_>
 800907c:	bf00      	nop
 800907e:	3710      	adds	r7, #16
 8009080:	46bd      	mov	sp, r7
 8009082:	bd80      	pop	{r7, pc}

08009084 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
 8009084:	b480      	push	{r7}
 8009086:	b083      	sub	sp, #12
 8009088:	af00      	add	r7, sp, #0
 800908a:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800908c:	687b      	ldr	r3, [r7, #4]
 800908e:	4618      	mov	r0, r3
 8009090:	370c      	adds	r7, #12
 8009092:	46bd      	mov	sp, r7
 8009094:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009098:	4770      	bx	lr

0800909a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1EOS3_>:
	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 800909a:	b480      	push	{r7}
 800909c:	b083      	sub	sp, #12
 800909e:	af00      	add	r7, sp, #0
 80090a0:	6078      	str	r0, [r7, #4]
 80090a2:	6039      	str	r1, [r7, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 80090a4:	683b      	ldr	r3, [r7, #0]
 80090a6:	681a      	ldr	r2, [r3, #0]
	  _M_end_of_storage(__x._M_end_of_storage)
 80090a8:	687b      	ldr	r3, [r7, #4]
 80090aa:	601a      	str	r2, [r3, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 80090ac:	683b      	ldr	r3, [r7, #0]
 80090ae:	685a      	ldr	r2, [r3, #4]
	  _M_end_of_storage(__x._M_end_of_storage)
 80090b0:	687b      	ldr	r3, [r7, #4]
 80090b2:	605a      	str	r2, [r3, #4]
 80090b4:	683b      	ldr	r3, [r7, #0]
 80090b6:	689a      	ldr	r2, [r3, #8]
 80090b8:	687b      	ldr	r3, [r7, #4]
 80090ba:	609a      	str	r2, [r3, #8]
	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 80090bc:	683b      	ldr	r3, [r7, #0]
 80090be:	2200      	movs	r2, #0
 80090c0:	609a      	str	r2, [r3, #8]
 80090c2:	683b      	ldr	r3, [r7, #0]
 80090c4:	689a      	ldr	r2, [r3, #8]
 80090c6:	683b      	ldr	r3, [r7, #0]
 80090c8:	605a      	str	r2, [r3, #4]
 80090ca:	683b      	ldr	r3, [r7, #0]
 80090cc:	685a      	ldr	r2, [r3, #4]
 80090ce:	683b      	ldr	r3, [r7, #0]
 80090d0:	601a      	str	r2, [r3, #0]
 80090d2:	687b      	ldr	r3, [r7, #4]
 80090d4:	4618      	mov	r0, r3
 80090d6:	370c      	adds	r7, #12
 80090d8:	46bd      	mov	sp, r7
 80090da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090de:	4770      	bx	lr

080090e0 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 80090e0:	b580      	push	{r7, lr}
 80090e2:	b082      	sub	sp, #8
 80090e4:	af00      	add	r7, sp, #0
 80090e6:	6078      	str	r0, [r7, #4]
 80090e8:	687b      	ldr	r3, [r7, #4]
 80090ea:	4618      	mov	r0, r3
 80090ec:	f000 f8bb 	bl	8009266 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 80090f0:	687b      	ldr	r3, [r7, #4]
 80090f2:	4618      	mov	r0, r3
 80090f4:	3708      	adds	r7, #8
 80090f6:	46bd      	mov	sp, r7
 80090f8:	bd80      	pop	{r7, pc}

080090fa <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80090fa:	b480      	push	{r7}
 80090fc:	b083      	sub	sp, #12
 80090fe:	af00      	add	r7, sp, #0
 8009100:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009102:	687b      	ldr	r3, [r7, #4]
 8009104:	4618      	mov	r0, r3
 8009106:	370c      	adds	r7, #12
 8009108:	46bd      	mov	sp, r7
 800910a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800910e:	4770      	bx	lr

08009110 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009110:	b480      	push	{r7}
 8009112:	b083      	sub	sp, #12
 8009114:	af00      	add	r7, sp, #0
 8009116:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009118:	687b      	ldr	r3, [r7, #4]
 800911a:	4618      	mov	r0, r3
 800911c:	370c      	adds	r7, #12
 800911e:	46bd      	mov	sp, r7
 8009120:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009124:	4770      	bx	lr

08009126 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8009126:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009128:	b083      	sub	sp, #12
 800912a:	af00      	add	r7, sp, #0
 800912c:	6078      	str	r0, [r7, #4]
 800912e:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8009130:	6878      	ldr	r0, [r7, #4]
 8009132:	f000 f876 	bl	8009222 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009136:	4604      	mov	r4, r0
 8009138:	6838      	ldr	r0, [r7, #0]
 800913a:	f7fa fe4d 	bl	8003dd8 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800913e:	4603      	mov	r3, r0
 8009140:	461a      	mov	r2, r3
 8009142:	4621      	mov	r1, r4
 8009144:	4628      	mov	r0, r5
 8009146:	f000 f89b 	bl	8009280 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKiEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 800914a:	4633      	mov	r3, r6
    }
 800914c:	4618      	mov	r0, r3
 800914e:	370c      	adds	r7, #12
 8009150:	46bd      	mov	sp, r7
 8009152:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009154 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8009154:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009156:	b083      	sub	sp, #12
 8009158:	af00      	add	r7, sp, #0
 800915a:	6078      	str	r0, [r7, #4]
 800915c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800915e:	6878      	ldr	r0, [r7, #4]
 8009160:	f000 f85f 	bl	8009222 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009164:	4604      	mov	r4, r0
 8009166:	6838      	ldr	r0, [r7, #0]
 8009168:	f7fa fe6a 	bl	8003e40 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800916c:	4603      	mov	r3, r0
 800916e:	461a      	mov	r2, r3
 8009170:	4621      	mov	r1, r4
 8009172:	4628      	mov	r0, r5
 8009174:	f000 f89b 	bl	80092ae <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKfEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8009178:	4633      	mov	r3, r6
    }
 800917a:	4618      	mov	r0, r3
 800917c:	370c      	adds	r7, #12
 800917e:	46bd      	mov	sp, r7
 8009180:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009182 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8009182:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009184:	b083      	sub	sp, #12
 8009186:	af00      	add	r7, sp, #0
 8009188:	6078      	str	r0, [r7, #4]
 800918a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800918c:	6878      	ldr	r0, [r7, #4]
 800918e:	f000 f848 	bl	8009222 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009192:	4604      	mov	r4, r0
 8009194:	6838      	ldr	r0, [r7, #0]
 8009196:	f7fa fe87 	bl	8003ea8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800919a:	4603      	mov	r3, r0
 800919c:	461a      	mov	r2, r3
 800919e:	4621      	mov	r1, r4
 80091a0:	4628      	mov	r0, r5
 80091a2:	f000 f89b 	bl	80092dc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKbEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 80091a6:	4633      	mov	r3, r6
    }
 80091a8:	4618      	mov	r0, r3
 80091aa:	370c      	adds	r7, #12
 80091ac:	46bd      	mov	sp, r7
 80091ae:	bdf0      	pop	{r4, r5, r6, r7, pc}

080091b0 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80091b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80091b2:	b083      	sub	sp, #12
 80091b4:	af00      	add	r7, sp, #0
 80091b6:	6078      	str	r0, [r7, #4]
 80091b8:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80091ba:	6878      	ldr	r0, [r7, #4]
 80091bc:	f000 f831 	bl	8009222 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80091c0:	4604      	mov	r4, r0
 80091c2:	6838      	ldr	r0, [r7, #0]
 80091c4:	f7fa feb0 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80091c8:	4603      	mov	r3, r0
 80091ca:	461a      	mov	r2, r3
 80091cc:	4621      	mov	r1, r4
 80091ce:	4628      	mov	r0, r5
 80091d0:	f000 f89b 	bl	800930a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKS9_EESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 80091d4:	4633      	mov	r3, r6
    }
 80091d6:	4618      	mov	r0, r3
 80091d8:	370c      	adds	r7, #12
 80091da:	46bd      	mov	sp, r7
 80091dc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080091de <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSC_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80091de:	b5f0      	push	{r4, r5, r6, r7, lr}
 80091e0:	b083      	sub	sp, #12
 80091e2:	af00      	add	r7, sp, #0
 80091e4:	6078      	str	r0, [r7, #4]
 80091e6:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80091e8:	6878      	ldr	r0, [r7, #4]
 80091ea:	f000 f81a 	bl	8009222 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80091ee:	4604      	mov	r4, r0
 80091f0:	6838      	ldr	r0, [r7, #0]
 80091f2:	f7fa fed9 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 80091f6:	4603      	mov	r3, r0
 80091f8:	461a      	mov	r2, r3
 80091fa:	4621      	mov	r1, r4
 80091fc:	4628      	mov	r0, r5
 80091fe:	f000 f89b 	bl	8009338 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKSD_EESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8009202:	4633      	mov	r3, r6
    }
 8009204:	4618      	mov	r0, r3
 8009206:	370c      	adds	r7, #12
 8009208:	46bd      	mov	sp, r7
 800920a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800920c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 800920c:	b480      	push	{r7}
 800920e:	b083      	sub	sp, #12
 8009210:	af00      	add	r7, sp, #0
 8009212:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8009214:	687b      	ldr	r3, [r7, #4]
 8009216:	4618      	mov	r0, r3
 8009218:	370c      	adds	r7, #12
 800921a:	46bd      	mov	sp, r7
 800921c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009220:	4770      	bx	lr

08009222 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009222:	b480      	push	{r7}
 8009224:	b083      	sub	sp, #12
 8009226:	af00      	add	r7, sp, #0
 8009228:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800922a:	687b      	ldr	r3, [r7, #4]
 800922c:	4618      	mov	r0, r3
 800922e:	370c      	adds	r7, #12
 8009230:	46bd      	mov	sp, r7
 8009232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009236:	4770      	bx	lr

08009238 <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1ERKS2_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 8009238:	b480      	push	{r7}
 800923a:	b083      	sub	sp, #12
 800923c:	af00      	add	r7, sp, #0
 800923e:	6078      	str	r0, [r7, #4]
 8009240:	6039      	str	r1, [r7, #0]
 8009242:	687b      	ldr	r3, [r7, #4]
 8009244:	4618      	mov	r0, r3
 8009246:	370c      	adds	r7, #12
 8009248:	46bd      	mov	sp, r7
 800924a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800924e:	4770      	bx	lr

08009250 <_ZSt4moveIRSaI6SymbolEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8009250:	b480      	push	{r7}
 8009252:	b083      	sub	sp, #12
 8009254:	af00      	add	r7, sp, #0
 8009256:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8009258:	687b      	ldr	r3, [r7, #4]
 800925a:	4618      	mov	r0, r3
 800925c:	370c      	adds	r7, #12
 800925e:	46bd      	mov	sp, r7
 8009260:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009264:	4770      	bx	lr

08009266 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8009266:	b580      	push	{r7, lr}
 8009268:	b082      	sub	sp, #8
 800926a:	af00      	add	r7, sp, #0
 800926c:	6078      	str	r0, [r7, #4]
 800926e:	687b      	ldr	r3, [r7, #4]
 8009270:	4618      	mov	r0, r3
 8009272:	f000 f878 	bl	8009366 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 8009276:	687b      	ldr	r3, [r7, #4]
 8009278:	4618      	mov	r0, r3
 800927a:	3708      	adds	r7, #8
 800927c:	46bd      	mov	sp, r7
 800927e:	bd80      	pop	{r7, pc}

08009280 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKiEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8009280:	b5b0      	push	{r4, r5, r7, lr}
 8009282:	b084      	sub	sp, #16
 8009284:	af00      	add	r7, sp, #0
 8009286:	7338      	strb	r0, [r7, #12]
 8009288:	60b9      	str	r1, [r7, #8]
 800928a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800928c:	68b8      	ldr	r0, [r7, #8]
 800928e:	f7ff ffc8 	bl	8009222 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009292:	4604      	mov	r4, r0
 8009294:	6878      	ldr	r0, [r7, #4]
 8009296:	f7fa fd9f 	bl	8003dd8 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800929a:	4603      	mov	r3, r0
 800929c:	4619      	mov	r1, r3
 800929e:	4620      	mov	r0, r4
 80092a0:	f000 f86e 	bl	8009380 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESM_>
 80092a4:	462b      	mov	r3, r5
 80092a6:	4618      	mov	r0, r3
 80092a8:	3710      	adds	r7, #16
 80092aa:	46bd      	mov	sp, r7
 80092ac:	bdb0      	pop	{r4, r5, r7, pc}

080092ae <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKfEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80092ae:	b5b0      	push	{r4, r5, r7, lr}
 80092b0:	b084      	sub	sp, #16
 80092b2:	af00      	add	r7, sp, #0
 80092b4:	7338      	strb	r0, [r7, #12]
 80092b6:	60b9      	str	r1, [r7, #8]
 80092b8:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80092ba:	68b8      	ldr	r0, [r7, #8]
 80092bc:	f7ff ffb1 	bl	8009222 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80092c0:	4604      	mov	r4, r0
 80092c2:	6878      	ldr	r0, [r7, #4]
 80092c4:	f7fa fdbc 	bl	8003e40 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 80092c8:	4603      	mov	r3, r0
 80092ca:	4619      	mov	r1, r3
 80092cc:	4620      	mov	r0, r4
 80092ce:	f000 f86f 	bl	80093b0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESM_>
 80092d2:	462b      	mov	r3, r5
 80092d4:	4618      	mov	r0, r3
 80092d6:	3710      	adds	r7, #16
 80092d8:	46bd      	mov	sp, r7
 80092da:	bdb0      	pop	{r4, r5, r7, pc}

080092dc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKbEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80092dc:	b5b0      	push	{r4, r5, r7, lr}
 80092de:	b084      	sub	sp, #16
 80092e0:	af00      	add	r7, sp, #0
 80092e2:	7338      	strb	r0, [r7, #12]
 80092e4:	60b9      	str	r1, [r7, #8]
 80092e6:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80092e8:	68b8      	ldr	r0, [r7, #8]
 80092ea:	f7ff ff9a 	bl	8009222 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80092ee:	4604      	mov	r4, r0
 80092f0:	6878      	ldr	r0, [r7, #4]
 80092f2:	f7fa fdd9 	bl	8003ea8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 80092f6:	4603      	mov	r3, r0
 80092f8:	4619      	mov	r1, r3
 80092fa:	4620      	mov	r0, r4
 80092fc:	f000 f870 	bl	80093e0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESM_>
 8009300:	462b      	mov	r3, r5
 8009302:	4618      	mov	r0, r3
 8009304:	3710      	adds	r7, #16
 8009306:	46bd      	mov	sp, r7
 8009308:	bdb0      	pop	{r4, r5, r7, pc}

0800930a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKS9_EESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800930a:	b5b0      	push	{r4, r5, r7, lr}
 800930c:	b084      	sub	sp, #16
 800930e:	af00      	add	r7, sp, #0
 8009310:	7338      	strb	r0, [r7, #12]
 8009312:	60b9      	str	r1, [r7, #8]
 8009314:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8009316:	68b8      	ldr	r0, [r7, #8]
 8009318:	f7ff ff83 	bl	8009222 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800931c:	4604      	mov	r4, r0
 800931e:	6878      	ldr	r0, [r7, #4]
 8009320:	f7fa fe02 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8009324:	4603      	mov	r3, r0
 8009326:	4619      	mov	r1, r3
 8009328:	4620      	mov	r0, r4
 800932a:	f000 f871 	bl	8009410 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESM_>
 800932e:	462b      	mov	r3, r5
 8009330:	4618      	mov	r0, r3
 8009332:	3710      	adds	r7, #16
 8009334:	46bd      	mov	sp, r7
 8009336:	bdb0      	pop	{r4, r5, r7, pc}

08009338 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKSD_EESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8009338:	b5b0      	push	{r4, r5, r7, lr}
 800933a:	b084      	sub	sp, #16
 800933c:	af00      	add	r7, sp, #0
 800933e:	7338      	strb	r0, [r7, #12]
 8009340:	60b9      	str	r1, [r7, #8]
 8009342:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8009344:	68b8      	ldr	r0, [r7, #8]
 8009346:	f7ff ff6c 	bl	8009222 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800934a:	4604      	mov	r4, r0
 800934c:	6878      	ldr	r0, [r7, #4]
 800934e:	f7fa fe2b 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8009352:	4603      	mov	r3, r0
 8009354:	4619      	mov	r1, r3
 8009356:	4620      	mov	r0, r4
 8009358:	f000 f872 	bl	8009440 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKSB_EENS0_16__variant_cookieESM_>
 800935c:	462b      	mov	r3, r5
 800935e:	4618      	mov	r0, r3
 8009360:	3710      	adds	r7, #16
 8009362:	46bd      	mov	sp, r7
 8009364:	bdb0      	pop	{r4, r5, r7, pc}

08009366 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
 8009366:	b580      	push	{r7, lr}
 8009368:	b082      	sub	sp, #8
 800936a:	af00      	add	r7, sp, #0
 800936c:	6078      	str	r0, [r7, #4]
 800936e:	687b      	ldr	r3, [r7, #4]
 8009370:	4618      	mov	r0, r3
 8009372:	f000 f87d 	bl	8009470 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1Ev>
 8009376:	687b      	ldr	r3, [r7, #4]
 8009378:	4618      	mov	r0, r3
 800937a:	3708      	adds	r7, #8
 800937c:	46bd      	mov	sp, r7
 800937e:	bd80      	pop	{r7, pc}

08009380 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESM_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8009380:	b5b0      	push	{r4, r5, r7, lr}
 8009382:	b082      	sub	sp, #8
 8009384:	af00      	add	r7, sp, #0
 8009386:	6078      	str	r0, [r7, #4]
 8009388:	6039      	str	r1, [r7, #0]
 800938a:	687b      	ldr	r3, [r7, #4]
 800938c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800938e:	4618      	mov	r0, r3
 8009390:	f000 f879 	bl	8009486 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009394:	4604      	mov	r4, r0
 8009396:	6838      	ldr	r0, [r7, #0]
 8009398:	f7fa fd1e 	bl	8003dd8 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800939c:	4603      	mov	r3, r0
 800939e:	4619      	mov	r1, r3
 80093a0:	4620      	mov	r0, r4
 80093a2:	f000 f87b 	bl	800949c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>
	  return {};
 80093a6:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80093a8:	4618      	mov	r0, r3
 80093aa:	3708      	adds	r7, #8
 80093ac:	46bd      	mov	sp, r7
 80093ae:	bdb0      	pop	{r4, r5, r7, pc}

080093b0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESM_>:
 80093b0:	b5b0      	push	{r4, r5, r7, lr}
 80093b2:	b082      	sub	sp, #8
 80093b4:	af00      	add	r7, sp, #0
 80093b6:	6078      	str	r0, [r7, #4]
 80093b8:	6039      	str	r1, [r7, #0]
 80093ba:	687b      	ldr	r3, [r7, #4]
 80093bc:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 80093be:	4618      	mov	r0, r3
 80093c0:	f000 f861 	bl	8009486 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80093c4:	4604      	mov	r4, r0
 80093c6:	6838      	ldr	r0, [r7, #0]
 80093c8:	f7fa fd3a 	bl	8003e40 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 80093cc:	4603      	mov	r3, r0
 80093ce:	4619      	mov	r1, r3
 80093d0:	4620      	mov	r0, r4
 80093d2:	f000 f87d 	bl	80094d0 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>
	  return {};
 80093d6:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80093d8:	4618      	mov	r0, r3
 80093da:	3708      	adds	r7, #8
 80093dc:	46bd      	mov	sp, r7
 80093de:	bdb0      	pop	{r4, r5, r7, pc}

080093e0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESM_>:
 80093e0:	b5b0      	push	{r4, r5, r7, lr}
 80093e2:	b082      	sub	sp, #8
 80093e4:	af00      	add	r7, sp, #0
 80093e6:	6078      	str	r0, [r7, #4]
 80093e8:	6039      	str	r1, [r7, #0]
 80093ea:	687b      	ldr	r3, [r7, #4]
 80093ec:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 80093ee:	4618      	mov	r0, r3
 80093f0:	f000 f849 	bl	8009486 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80093f4:	4604      	mov	r4, r0
 80093f6:	6838      	ldr	r0, [r7, #0]
 80093f8:	f7fa fd56 	bl	8003ea8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 80093fc:	4603      	mov	r3, r0
 80093fe:	4619      	mov	r1, r3
 8009400:	4620      	mov	r0, r4
 8009402:	f000 f87f 	bl	8009504 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>
	  return {};
 8009406:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8009408:	4618      	mov	r0, r3
 800940a:	3708      	adds	r7, #8
 800940c:	46bd      	mov	sp, r7
 800940e:	bdb0      	pop	{r4, r5, r7, pc}

08009410 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESM_>:
 8009410:	b5b0      	push	{r4, r5, r7, lr}
 8009412:	b082      	sub	sp, #8
 8009414:	af00      	add	r7, sp, #0
 8009416:	6078      	str	r0, [r7, #4]
 8009418:	6039      	str	r1, [r7, #0]
 800941a:	687b      	ldr	r3, [r7, #4]
 800941c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800941e:	4618      	mov	r0, r3
 8009420:	f000 f831 	bl	8009486 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009424:	4604      	mov	r4, r0
 8009426:	6838      	ldr	r0, [r7, #0]
 8009428:	f7fa fd7e 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800942c:	4603      	mov	r3, r0
 800942e:	4619      	mov	r1, r3
 8009430:	4620      	mov	r0, r4
 8009432:	f000 f882 	bl	800953a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKS8_EEvOT_OT0_>
	  return {};
 8009436:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8009438:	4618      	mov	r0, r3
 800943a:	3708      	adds	r7, #8
 800943c:	46bd      	mov	sp, r7
 800943e:	bdb0      	pop	{r4, r5, r7, pc}

08009440 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKSB_EENS0_16__variant_cookieESM_>:
 8009440:	b5b0      	push	{r4, r5, r7, lr}
 8009442:	b082      	sub	sp, #8
 8009444:	af00      	add	r7, sp, #0
 8009446:	6078      	str	r0, [r7, #4]
 8009448:	6039      	str	r1, [r7, #0]
 800944a:	687b      	ldr	r3, [r7, #4]
 800944c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800944e:	4618      	mov	r0, r3
 8009450:	f000 f819 	bl	8009486 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009454:	4604      	mov	r4, r0
 8009456:	6838      	ldr	r0, [r7, #0]
 8009458:	f7fa fda6 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800945c:	4603      	mov	r3, r0
 800945e:	4619      	mov	r1, r3
 8009460:	4620      	mov	r0, r4
 8009462:	f000 f886 	bl	8009572 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKSC_EEvOT_OT0_>
	  return {};
 8009466:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8009468:	4618      	mov	r0, r3
 800946a:	3708      	adds	r7, #8
 800946c:	46bd      	mov	sp, r7
 800946e:	bdb0      	pop	{r4, r5, r7, pc}

08009470 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8009470:	b480      	push	{r7}
 8009472:	b083      	sub	sp, #12
 8009474:	af00      	add	r7, sp, #0
 8009476:	6078      	str	r0, [r7, #4]
 8009478:	687b      	ldr	r3, [r7, #4]
 800947a:	4618      	mov	r0, r3
 800947c:	370c      	adds	r7, #12
 800947e:	46bd      	mov	sp, r7
 8009480:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009484:	4770      	bx	lr

08009486 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009486:	b480      	push	{r7}
 8009488:	b083      	sub	sp, #12
 800948a:	af00      	add	r7, sp, #0
 800948c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800948e:	687b      	ldr	r3, [r7, #4]
 8009490:	4618      	mov	r0, r3
 8009492:	370c      	adds	r7, #12
 8009494:	46bd      	mov	sp, r7
 8009496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800949a:	4770      	bx	lr

0800949c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800949c:	b590      	push	{r4, r7, lr}
 800949e:	b085      	sub	sp, #20
 80094a0:	af00      	add	r7, sp, #0
 80094a2:	6078      	str	r0, [r7, #4]
 80094a4:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80094a6:	687b      	ldr	r3, [r7, #4]
 80094a8:	4618      	mov	r0, r3
 80094aa:	f7fd f9ab 	bl	8006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 80094ae:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80094b0:	6838      	ldr	r0, [r7, #0]
 80094b2:	f7fa fc91 	bl	8003dd8 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 80094b6:	4603      	mov	r3, r0
        ::new (__storage)
 80094b8:	681c      	ldr	r4, [r3, #0]
 80094ba:	68fb      	ldr	r3, [r7, #12]
 80094bc:	4619      	mov	r1, r3
 80094be:	2004      	movs	r0, #4
 80094c0:	f7f7 fdcb 	bl	800105a <_ZnwjPv>
 80094c4:	4603      	mov	r3, r0
 80094c6:	601c      	str	r4, [r3, #0]
    }
 80094c8:	bf00      	nop
 80094ca:	3714      	adds	r7, #20
 80094cc:	46bd      	mov	sp, r7
 80094ce:	bd90      	pop	{r4, r7, pc}

080094d0 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 80094d0:	b590      	push	{r4, r7, lr}
 80094d2:	b085      	sub	sp, #20
 80094d4:	af00      	add	r7, sp, #0
 80094d6:	6078      	str	r0, [r7, #4]
 80094d8:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80094da:	687b      	ldr	r3, [r7, #4]
 80094dc:	4618      	mov	r0, r3
 80094de:	f7fd f991 	bl	8006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 80094e2:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80094e4:	6838      	ldr	r0, [r7, #0]
 80094e6:	f7fa fcab 	bl	8003e40 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 80094ea:	4603      	mov	r3, r0
        ::new (__storage)
 80094ec:	681c      	ldr	r4, [r3, #0]
 80094ee:	68fb      	ldr	r3, [r7, #12]
 80094f0:	4619      	mov	r1, r3
 80094f2:	2004      	movs	r0, #4
 80094f4:	f7f7 fdb1 	bl	800105a <_ZnwjPv>
 80094f8:	4603      	mov	r3, r0
 80094fa:	601c      	str	r4, [r3, #0]
    }
 80094fc:	bf00      	nop
 80094fe:	3714      	adds	r7, #20
 8009500:	46bd      	mov	sp, r7
 8009502:	bd90      	pop	{r4, r7, pc}

08009504 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8009504:	b590      	push	{r4, r7, lr}
 8009506:	b085      	sub	sp, #20
 8009508:	af00      	add	r7, sp, #0
 800950a:	6078      	str	r0, [r7, #4]
 800950c:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800950e:	687b      	ldr	r3, [r7, #4]
 8009510:	4618      	mov	r0, r3
 8009512:	f7fd f977 	bl	8006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8009516:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8009518:	6838      	ldr	r0, [r7, #0]
 800951a:	f7fa fcc5 	bl	8003ea8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800951e:	4603      	mov	r3, r0
        ::new (__storage)
 8009520:	781c      	ldrb	r4, [r3, #0]
 8009522:	68fb      	ldr	r3, [r7, #12]
 8009524:	4619      	mov	r1, r3
 8009526:	2001      	movs	r0, #1
 8009528:	f7f7 fd97 	bl	800105a <_ZnwjPv>
 800952c:	4603      	mov	r3, r0
 800952e:	4622      	mov	r2, r4
 8009530:	701a      	strb	r2, [r3, #0]
    }
 8009532:	bf00      	nop
 8009534:	3714      	adds	r7, #20
 8009536:	46bd      	mov	sp, r7
 8009538:	bd90      	pop	{r4, r7, pc}

0800953a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKS8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800953a:	b590      	push	{r4, r7, lr}
 800953c:	b085      	sub	sp, #20
 800953e:	af00      	add	r7, sp, #0
 8009540:	6078      	str	r0, [r7, #4]
 8009542:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8009544:	687b      	ldr	r3, [r7, #4]
 8009546:	4618      	mov	r0, r3
 8009548:	f7fd f95c 	bl	8006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800954c:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800954e:	6838      	ldr	r0, [r7, #0]
 8009550:	f7fa fcea 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8009554:	4604      	mov	r4, r0
        ::new (__storage)
 8009556:	68fb      	ldr	r3, [r7, #12]
 8009558:	4619      	mov	r1, r3
 800955a:	2018      	movs	r0, #24
 800955c:	f7f7 fd7d 	bl	800105a <_ZnwjPv>
 8009560:	4603      	mov	r3, r0
 8009562:	4621      	mov	r1, r4
 8009564:	4618      	mov	r0, r3
 8009566:	f019 fc01 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
    }
 800956a:	bf00      	nop
 800956c:	3714      	adds	r7, #20
 800956e:	46bd      	mov	sp, r7
 8009570:	bd90      	pop	{r4, r7, pc}

08009572 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKSC_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8009572:	b590      	push	{r4, r7, lr}
 8009574:	b085      	sub	sp, #20
 8009576:	af00      	add	r7, sp, #0
 8009578:	6078      	str	r0, [r7, #4]
 800957a:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800957c:	687b      	ldr	r3, [r7, #4]
 800957e:	4618      	mov	r0, r3
 8009580:	f7fd f940 	bl	8006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8009584:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8009586:	6838      	ldr	r0, [r7, #0]
 8009588:	f7fa fd0e 	bl	8003fa8 <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800958c:	4604      	mov	r4, r0
        ::new (__storage)
 800958e:	68fb      	ldr	r3, [r7, #12]
 8009590:	4619      	mov	r1, r3
 8009592:	200c      	movs	r0, #12
 8009594:	f7f7 fd61 	bl	800105a <_ZnwjPv>
 8009598:	4603      	mov	r3, r0
 800959a:	4621      	mov	r1, r4
 800959c:	4618      	mov	r0, r3
 800959e:	f7fe fbf2 	bl	8007d86 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
    }
 80095a2:	bf00      	nop
 80095a4:	3714      	adds	r7, #20
 80095a6:	46bd      	mov	sp, r7
 80095a8:	bd90      	pop	{r4, r7, pc}

080095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
 80095aa:	b580      	push	{r7, lr}
 80095ac:	b082      	sub	sp, #8
 80095ae:	af00      	add	r7, sp, #0
 80095b0:	6078      	str	r0, [r7, #4]
 80095b2:	687b      	ldr	r3, [r7, #4]
 80095b4:	4618      	mov	r0, r3
 80095b6:	f7f9 f9f8 	bl	80029aa <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>
 80095ba:	687b      	ldr	r3, [r7, #4]
 80095bc:	4618      	mov	r0, r3
 80095be:	3708      	adds	r7, #8
 80095c0:	46bd      	mov	sp, r7
 80095c2:	bd80      	pop	{r7, pc}

080095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>:
 80095c4:	b580      	push	{r7, lr}
 80095c6:	b082      	sub	sp, #8
 80095c8:	af00      	add	r7, sp, #0
 80095ca:	6078      	str	r0, [r7, #4]
 80095cc:	687b      	ldr	r3, [r7, #4]
 80095ce:	4618      	mov	r0, r3
 80095d0:	f7f9 f93b 	bl	800284a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>
 80095d4:	687b      	ldr	r3, [r7, #4]
 80095d6:	4618      	mov	r0, r3
 80095d8:	3708      	adds	r7, #8
 80095da:	46bd      	mov	sp, r7
 80095dc:	bd80      	pop	{r7, pc}

080095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>:
 80095de:	b580      	push	{r7, lr}
 80095e0:	b082      	sub	sp, #8
 80095e2:	af00      	add	r7, sp, #0
 80095e4:	6078      	str	r0, [r7, #4]
 80095e6:	687b      	ldr	r3, [r7, #4]
 80095e8:	4618      	mov	r0, r3
 80095ea:	f7f9 f881 	bl	80026f0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>
 80095ee:	687b      	ldr	r3, [r7, #4]
 80095f0:	4618      	mov	r0, r3
 80095f2:	3708      	adds	r7, #8
 80095f4:	46bd      	mov	sp, r7
 80095f6:	bd80      	pop	{r7, pc}

080095f8 <_Z41__static_initialization_and_destruction_0ii>:
 80095f8:	b590      	push	{r4, r7, lr}
 80095fa:	b0e7      	sub	sp, #412	; 0x19c
 80095fc:	af02      	add	r7, sp, #8
 80095fe:	1d3b      	adds	r3, r7, #4
 8009600:	6018      	str	r0, [r3, #0]
 8009602:	463b      	mov	r3, r7
 8009604:	6019      	str	r1, [r3, #0]
 8009606:	1d3b      	adds	r3, r7, #4
 8009608:	681b      	ldr	r3, [r3, #0]
 800960a:	2b01      	cmp	r3, #1
 800960c:	f040 819d 	bne.w	800994a <_Z41__static_initialization_and_destruction_0ii+0x352>
 8009610:	463b      	mov	r3, r7
 8009612:	681b      	ldr	r3, [r3, #0]
 8009614:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009618:	4293      	cmp	r3, r2
 800961a:	f040 8196 	bne.w	800994a <_Z41__static_initialization_and_destruction_0ii+0x352>
	{'^', TOKEN_POWER},
	{'%', TOKEN_MODULO},
	{'(', TOKEN_LEFT_BRACKET},
	{')', TOKEN_RIGHT_BRACKET},
	{'\0', TOKEN_END_OF_FILE},
};
 800961e:	f107 0314 	add.w	r3, r7, #20
 8009622:	4618      	mov	r0, r3
 8009624:	2322      	movs	r3, #34	; 0x22
 8009626:	461a      	mov	r2, r3
 8009628:	2100      	movs	r1, #0
 800962a:	f01a fc1b 	bl	8023e64 <memset>
 800962e:	f107 0314 	add.w	r3, r7, #20
 8009632:	223a      	movs	r2, #58	; 0x3a
 8009634:	701a      	strb	r2, [r3, #0]
 8009636:	f107 0314 	add.w	r3, r7, #20
 800963a:	2201      	movs	r2, #1
 800963c:	705a      	strb	r2, [r3, #1]
 800963e:	f107 0314 	add.w	r3, r7, #20
 8009642:	220a      	movs	r2, #10
 8009644:	709a      	strb	r2, [r3, #2]
 8009646:	f107 0314 	add.w	r3, r7, #20
 800964a:	220a      	movs	r2, #10
 800964c:	70da      	strb	r2, [r3, #3]
 800964e:	f107 0314 	add.w	r3, r7, #20
 8009652:	222c      	movs	r2, #44	; 0x2c
 8009654:	711a      	strb	r2, [r3, #4]
 8009656:	f107 0314 	add.w	r3, r7, #20
 800965a:	220c      	movs	r2, #12
 800965c:	715a      	strb	r2, [r3, #5]
 800965e:	f107 0314 	add.w	r3, r7, #20
 8009662:	222e      	movs	r2, #46	; 0x2e
 8009664:	719a      	strb	r2, [r3, #6]
 8009666:	f107 0314 	add.w	r3, r7, #20
 800966a:	220b      	movs	r2, #11
 800966c:	71da      	strb	r2, [r3, #7]
 800966e:	f107 0314 	add.w	r3, r7, #20
 8009672:	225b      	movs	r2, #91	; 0x5b
 8009674:	721a      	strb	r2, [r3, #8]
 8009676:	f107 0314 	add.w	r3, r7, #20
 800967a:	220d      	movs	r2, #13
 800967c:	725a      	strb	r2, [r3, #9]
 800967e:	f107 0314 	add.w	r3, r7, #20
 8009682:	225d      	movs	r2, #93	; 0x5d
 8009684:	729a      	strb	r2, [r3, #10]
 8009686:	f107 0314 	add.w	r3, r7, #20
 800968a:	220e      	movs	r2, #14
 800968c:	72da      	strb	r2, [r3, #11]
 800968e:	f107 0314 	add.w	r3, r7, #20
 8009692:	227c      	movs	r2, #124	; 0x7c
 8009694:	731a      	strb	r2, [r3, #12]
 8009696:	f107 0314 	add.w	r3, r7, #20
 800969a:	2215      	movs	r2, #21
 800969c:	735a      	strb	r2, [r3, #13]
 800969e:	f107 0314 	add.w	r3, r7, #20
 80096a2:	2226      	movs	r2, #38	; 0x26
 80096a4:	739a      	strb	r2, [r3, #14]
 80096a6:	f107 0314 	add.w	r3, r7, #20
 80096aa:	2216      	movs	r2, #22
 80096ac:	73da      	strb	r2, [r3, #15]
 80096ae:	f107 0314 	add.w	r3, r7, #20
 80096b2:	222b      	movs	r2, #43	; 0x2b
 80096b4:	741a      	strb	r2, [r3, #16]
 80096b6:	f107 0314 	add.w	r3, r7, #20
 80096ba:	221f      	movs	r2, #31
 80096bc:	745a      	strb	r2, [r3, #17]
 80096be:	f107 0314 	add.w	r3, r7, #20
 80096c2:	222d      	movs	r2, #45	; 0x2d
 80096c4:	749a      	strb	r2, [r3, #18]
 80096c6:	f107 0314 	add.w	r3, r7, #20
 80096ca:	2220      	movs	r2, #32
 80096cc:	74da      	strb	r2, [r3, #19]
 80096ce:	f107 0314 	add.w	r3, r7, #20
 80096d2:	222a      	movs	r2, #42	; 0x2a
 80096d4:	751a      	strb	r2, [r3, #20]
 80096d6:	f107 0314 	add.w	r3, r7, #20
 80096da:	2221      	movs	r2, #33	; 0x21
 80096dc:	755a      	strb	r2, [r3, #21]
 80096de:	f107 0314 	add.w	r3, r7, #20
 80096e2:	222f      	movs	r2, #47	; 0x2f
 80096e4:	759a      	strb	r2, [r3, #22]
 80096e6:	f107 0314 	add.w	r3, r7, #20
 80096ea:	2222      	movs	r2, #34	; 0x22
 80096ec:	75da      	strb	r2, [r3, #23]
 80096ee:	f107 0314 	add.w	r3, r7, #20
 80096f2:	225e      	movs	r2, #94	; 0x5e
 80096f4:	761a      	strb	r2, [r3, #24]
 80096f6:	f107 0314 	add.w	r3, r7, #20
 80096fa:	2223      	movs	r2, #35	; 0x23
 80096fc:	765a      	strb	r2, [r3, #25]
 80096fe:	f107 0314 	add.w	r3, r7, #20
 8009702:	2225      	movs	r2, #37	; 0x25
 8009704:	769a      	strb	r2, [r3, #26]
 8009706:	f107 0314 	add.w	r3, r7, #20
 800970a:	2224      	movs	r2, #36	; 0x24
 800970c:	76da      	strb	r2, [r3, #27]
 800970e:	f107 0314 	add.w	r3, r7, #20
 8009712:	2228      	movs	r2, #40	; 0x28
 8009714:	771a      	strb	r2, [r3, #28]
 8009716:	f107 0314 	add.w	r3, r7, #20
 800971a:	2226      	movs	r2, #38	; 0x26
 800971c:	775a      	strb	r2, [r3, #29]
 800971e:	f107 0314 	add.w	r3, r7, #20
 8009722:	2229      	movs	r2, #41	; 0x29
 8009724:	779a      	strb	r2, [r3, #30]
 8009726:	f107 0314 	add.w	r3, r7, #20
 800972a:	2227      	movs	r2, #39	; 0x27
 800972c:	77da      	strb	r2, [r3, #31]
 800972e:	f107 0314 	add.w	r3, r7, #20
 8009732:	2225      	movs	r2, #37	; 0x25
 8009734:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8009738:	f107 030c 	add.w	r3, r7, #12
 800973c:	f107 0214 	add.w	r2, r7, #20
 8009740:	601a      	str	r2, [r3, #0]
 8009742:	f107 030c 	add.w	r3, r7, #12
 8009746:	2211      	movs	r2, #17
 8009748:	605a      	str	r2, [r3, #4]
 800974a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800974e:	4618      	mov	r0, r3
 8009750:	f7f8 f994 	bl	8001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8009754:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8009758:	f107 020c 	add.w	r2, r7, #12
 800975c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8009760:	9300      	str	r3, [sp, #0]
 8009762:	460b      	mov	r3, r1
 8009764:	ca06      	ldmia	r2, {r1, r2}
 8009766:	4885      	ldr	r0, [pc, #532]	; (800997c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8009768:	f7f8 f9a0 	bl	8001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800976c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8009770:	4618      	mov	r0, r3
 8009772:	f7f8 f98f 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>

static const std::map<std::string, token_type> token_strings
{
	{"true", TOKEN_TRUE},
 8009776:	2305      	movs	r3, #5
 8009778:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
	{"if", TOKEN_IF},
	{"elseif", TOKEN_ELSEIF},
	{"else", TOKEN_ELSE},
	{"while", TOKEN_WHILE},
	{"end", TOKEN_END},
};
 800977c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8009780:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009784:	497e      	ldr	r1, [pc, #504]	; (8009980 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8009786:	4618      	mov	r0, r3
 8009788:	f7f7 fcb6 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800978c:	2306      	movs	r3, #6
 800978e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8009792:	f207 1263 	addw	r2, r7, #355	; 0x163
 8009796:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800979a:	331c      	adds	r3, #28
 800979c:	4979      	ldr	r1, [pc, #484]	; (8009984 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800979e:	4618      	mov	r0, r3
 80097a0:	f7f7 fcd2 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 80097a4:	2307      	movs	r3, #7
 80097a6:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 80097aa:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 80097ae:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80097b2:	3338      	adds	r3, #56	; 0x38
 80097b4:	4974      	ldr	r1, [pc, #464]	; (8009988 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 80097b6:	4618      	mov	r0, r3
 80097b8:	f7f7 fcc6 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 80097bc:	2308      	movs	r3, #8
 80097be:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 80097c2:	f207 1265 	addw	r2, r7, #357	; 0x165
 80097c6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80097ca:	3354      	adds	r3, #84	; 0x54
 80097cc:	496f      	ldr	r1, [pc, #444]	; (800998c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 80097ce:	4618      	mov	r0, r3
 80097d0:	f7f7 fc92 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 80097d4:	2309      	movs	r3, #9
 80097d6:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 80097da:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 80097de:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80097e2:	3370      	adds	r3, #112	; 0x70
 80097e4:	496a      	ldr	r1, [pc, #424]	; (8009990 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 80097e6:	4618      	mov	r0, r3
 80097e8:	f7f7 fcd6 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 80097ec:	2310      	movs	r3, #16
 80097ee:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 80097f2:	f207 1267 	addw	r2, r7, #359	; 0x167
 80097f6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80097fa:	338c      	adds	r3, #140	; 0x8c
 80097fc:	4965      	ldr	r1, [pc, #404]	; (8009994 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 80097fe:	4618      	mov	r0, r3
 8009800:	f7f7 fcf2 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8009804:	2311      	movs	r3, #17
 8009806:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800980a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800980e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009812:	33a8      	adds	r3, #168	; 0xa8
 8009814:	4960      	ldr	r1, [pc, #384]	; (8009998 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8009816:	4618      	mov	r0, r3
 8009818:	f7f7 fcbe 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800981c:	2312      	movs	r3, #18
 800981e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8009822:	f207 1269 	addw	r2, r7, #361	; 0x169
 8009826:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800982a:	33c4      	adds	r3, #196	; 0xc4
 800982c:	495b      	ldr	r1, [pc, #364]	; (800999c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800982e:	4618      	mov	r0, r3
 8009830:	f7f7 fc62 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8009834:	2313      	movs	r3, #19
 8009836:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800983a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800983e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009842:	33e0      	adds	r3, #224	; 0xe0
 8009844:	4956      	ldr	r1, [pc, #344]	; (80099a0 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8009846:	4618      	mov	r0, r3
 8009848:	f7f7 fc7e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800984c:	2314      	movs	r3, #20
 800984e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8009852:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8009856:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800985a:	33fc      	adds	r3, #252	; 0xfc
 800985c:	4951      	ldr	r1, [pc, #324]	; (80099a4 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800985e:	4618      	mov	r0, r3
 8009860:	f7f7 fcea 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8009864:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8009868:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800986c:	601a      	str	r2, [r3, #0]
 800986e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8009872:	220a      	movs	r2, #10
 8009874:	605a      	str	r2, [r3, #4]
 8009876:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800987a:	4618      	mov	r0, r3
 800987c:	f7f8 f9a3 	bl	8001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8009880:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8009884:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8009888:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800988c:	9300      	str	r3, [sp, #0]
 800988e:	460b      	mov	r3, r1
 8009890:	ca06      	ldmia	r2, {r1, r2}
 8009892:	4845      	ldr	r0, [pc, #276]	; (80099a8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8009894:	f7f8 f9af 	bl	8001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8009898:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800989c:	4618      	mov	r0, r3
 800989e:	f7f8 f99e 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 80098a2:	f107 0448 	add.w	r4, r7, #72	; 0x48
 80098a6:	f504 748c 	add.w	r4, r4, #280	; 0x118
 80098aa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80098ae:	429c      	cmp	r4, r3
 80098b0:	d004      	beq.n	80098bc <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 80098b2:	3c1c      	subs	r4, #28
 80098b4:	4620      	mov	r0, r4
 80098b6:	f7f7 fc12 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 80098ba:	e7f6      	b.n	80098aa <_Z41__static_initialization_and_destruction_0ii+0x2b2>
{
	{'<', {TOKEN_SMALLER_THAN, TOKEN_SMALLER_OR_EQUAL}},
	{'>', {TOKEN_GREATER_THAN, TOKEN_GREATER_OR_EQUAL}},
	{'=', {TOKEN_ASSIGN, TOKEN_EQUALS}},
	{'!', {TOKEN_EXCLAMATION, TOKEN_NOT_EQUAL}},
};
 80098bc:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80098c0:	2200      	movs	r2, #0
 80098c2:	601a      	str	r2, [r3, #0]
 80098c4:	605a      	str	r2, [r3, #4]
 80098c6:	609a      	str	r2, [r3, #8]
 80098c8:	233c      	movs	r3, #60	; 0x3c
 80098ca:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 80098ce:	231b      	movs	r3, #27
 80098d0:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 80098d4:	231c      	movs	r3, #28
 80098d6:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 80098da:	233e      	movs	r3, #62	; 0x3e
 80098dc:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 80098e0:	2319      	movs	r3, #25
 80098e2:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 80098e6:	231a      	movs	r3, #26
 80098e8:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 80098ec:	233d      	movs	r3, #61	; 0x3d
 80098ee:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 80098f2:	2318      	movs	r3, #24
 80098f4:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 80098f8:	231d      	movs	r3, #29
 80098fa:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 80098fe:	2321      	movs	r3, #33	; 0x21
 8009900:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8009904:	2317      	movs	r3, #23
 8009906:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800990a:	231e      	movs	r3, #30
 800990c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8009910:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8009914:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8009918:	2304      	movs	r3, #4
 800991a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800991e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8009922:	4618      	mov	r0, r3
 8009924:	f7f8 f997 	bl	8001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8009928:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800992c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8009930:	9300      	str	r3, [sp, #0]
 8009932:	4613      	mov	r3, r2
 8009934:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8009938:	ca06      	ldmia	r2, {r1, r2}
 800993a:	481c      	ldr	r0, [pc, #112]	; (80099ac <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800993c:	f7f8 f9a3 	bl	8001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8009940:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8009944:	4618      	mov	r0, r3
 8009946:	f7f8 f992 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800994a:	1d3b      	adds	r3, r7, #4
 800994c:	681b      	ldr	r3, [r3, #0]
 800994e:	2b00      	cmp	r3, #0
 8009950:	d10e      	bne.n	8009970 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8009952:	463b      	mov	r3, r7
 8009954:	681b      	ldr	r3, [r3, #0]
 8009956:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800995a:	4293      	cmp	r3, r2
 800995c:	d108      	bne.n	8009970 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800995e:	4813      	ldr	r0, [pc, #76]	; (80099ac <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8009960:	f7ff fe23 	bl	80095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8009964:	4810      	ldr	r0, [pc, #64]	; (80099a8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8009966:	f7ff fe2d 	bl	80095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800996a:	4804      	ldr	r0, [pc, #16]	; (800997c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800996c:	f7ff fe37 	bl	80095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8009970:	bf00      	nop
 8009972:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8009976:	46bd      	mov	sp, r7
 8009978:	bd90      	pop	{r4, r7, pc}
 800997a:	bf00      	nop
 800997c:	20000204 	.word	0x20000204
 8009980:	08027224 	.word	0x08027224
 8009984:	0802722c 	.word	0x0802722c
 8009988:	08027234 	.word	0x08027234
 800998c:	0802723c 	.word	0x0802723c
 8009990:	08027244 	.word	0x08027244
 8009994:	0802724c 	.word	0x0802724c
 8009998:	08027250 	.word	0x08027250
 800999c:	08027258 	.word	0x08027258
 80099a0:	08027260 	.word	0x08027260
 80099a4:	08027268 	.word	0x08027268
 80099a8:	2000021c 	.word	0x2000021c
 80099ac:	20000234 	.word	0x20000234

080099b0 <_GLOBAL__sub_I__ZN8ExecutorC2Ev>:
 80099b0:	b580      	push	{r7, lr}
 80099b2:	af00      	add	r7, sp, #0
 80099b4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80099b8:	2001      	movs	r0, #1
 80099ba:	f7ff fe1d 	bl	80095f8 <_Z41__static_initialization_and_destruction_0ii>
 80099be:	bd80      	pop	{r7, pc}

080099c0 <_GLOBAL__sub_D__ZN8ExecutorC2Ev>:
 80099c0:	b580      	push	{r7, lr}
 80099c2:	af00      	add	r7, sp, #0
 80099c4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80099c8:	2000      	movs	r0, #0
 80099ca:	f7ff fe15 	bl	80095f8 <_Z41__static_initialization_and_destruction_0ii>
 80099ce:	bd80      	pop	{r7, pc}

080099d0 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 80099d0:	b580      	push	{r7, lr}
 80099d2:	b082      	sub	sp, #8
 80099d4:	af00      	add	r7, sp, #0
 80099d6:	6078      	str	r0, [r7, #4]
 80099d8:	687b      	ldr	r3, [r7, #4]
 80099da:	4618      	mov	r0, r3
 80099dc:	f000 fa21 	bl	8009e22 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 80099e0:	687b      	ldr	r3, [r7, #4]
 80099e2:	4618      	mov	r0, r3
 80099e4:	3708      	adds	r7, #8
 80099e6:	46bd      	mov	sp, r7
 80099e8:	bd80      	pop	{r7, pc}

080099ea <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 80099ea:	b580      	push	{r7, lr}
 80099ec:	b082      	sub	sp, #8
 80099ee:	af00      	add	r7, sp, #0
 80099f0:	6078      	str	r0, [r7, #4]
 80099f2:	687b      	ldr	r3, [r7, #4]
 80099f4:	4618      	mov	r0, r3
 80099f6:	f7ff ffeb 	bl	80099d0 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 80099fa:	687b      	ldr	r3, [r7, #4]
 80099fc:	4618      	mov	r0, r3
 80099fe:	3708      	adds	r7, #8
 8009a00:	46bd      	mov	sp, r7
 8009a02:	bd80      	pop	{r7, pc}

08009a04 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 8009a04:	b580      	push	{r7, lr}
 8009a06:	b082      	sub	sp, #8
 8009a08:	af00      	add	r7, sp, #0
 8009a0a:	6078      	str	r0, [r7, #4]
 8009a0c:	687b      	ldr	r3, [r7, #4]
 8009a0e:	4618      	mov	r0, r3
 8009a10:	f7ff ffeb 	bl	80099ea <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009a14:	687b      	ldr	r3, [r7, #4]
 8009a16:	4618      	mov	r0, r3
 8009a18:	3708      	adds	r7, #8
 8009a1a:	46bd      	mov	sp, r7
 8009a1c:	bd80      	pop	{r7, pc}

08009a1e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 8009a1e:	b580      	push	{r7, lr}
 8009a20:	b082      	sub	sp, #8
 8009a22:	af00      	add	r7, sp, #0
 8009a24:	6078      	str	r0, [r7, #4]
 8009a26:	687b      	ldr	r3, [r7, #4]
 8009a28:	4618      	mov	r0, r3
 8009a2a:	f7ff ffeb 	bl	8009a04 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009a2e:	687b      	ldr	r3, [r7, #4]
 8009a30:	4618      	mov	r0, r3
 8009a32:	3708      	adds	r7, #8
 8009a34:	46bd      	mov	sp, r7
 8009a36:	bd80      	pop	{r7, pc}

08009a38 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8009a38:	b580      	push	{r7, lr}
 8009a3a:	b082      	sub	sp, #8
 8009a3c:	af00      	add	r7, sp, #0
 8009a3e:	6078      	str	r0, [r7, #4]
 8009a40:	687b      	ldr	r3, [r7, #4]
 8009a42:	4618      	mov	r0, r3
 8009a44:	f7ff ffeb 	bl	8009a1e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009a48:	687b      	ldr	r3, [r7, #4]
 8009a4a:	4618      	mov	r0, r3
 8009a4c:	3708      	adds	r7, #8
 8009a4e:	46bd      	mov	sp, r7
 8009a50:	bd80      	pop	{r7, pc}

08009a52 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
      ~variant() = default;
 8009a52:	b580      	push	{r7, lr}
 8009a54:	b082      	sub	sp, #8
 8009a56:	af00      	add	r7, sp, #0
 8009a58:	6078      	str	r0, [r7, #4]
 8009a5a:	687b      	ldr	r3, [r7, #4]
 8009a5c:	4618      	mov	r0, r3
 8009a5e:	f7ff ffeb 	bl	8009a38 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009a62:	687b      	ldr	r3, [r7, #4]
 8009a64:	4618      	mov	r0, r3
 8009a66:	3708      	adds	r7, #8
 8009a68:	46bd      	mov	sp, r7
 8009a6a:	bd80      	pop	{r7, pc}

08009a6c <_ZN17Primal_expressionD1Ev>:
#include <Expression.h>

Primal_expression::~Primal_expression()
 8009a6c:	b590      	push	{r4, r7, lr}
 8009a6e:	b083      	sub	sp, #12
 8009a70:	af00      	add	r7, sp, #0
 8009a72:	6078      	str	r0, [r7, #4]
{
	if(std::holds_alternative<Variable*>(content))
 8009a74:	687b      	ldr	r3, [r7, #4]
 8009a76:	3304      	adds	r3, #4
 8009a78:	4618      	mov	r0, r3
 8009a7a:	f000 f9f1 	bl	8009e60 <_ZSt17holds_alternativeIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEEbRKSt7variantIJDpT0_EE>
 8009a7e:	4603      	mov	r3, r0
 8009a80:	2b00      	cmp	r3, #0
 8009a82:	d010      	beq.n	8009aa6 <_ZN17Primal_expressionD1Ev+0x3a>
	{
		delete std::get<Variable*>(content);
 8009a84:	687b      	ldr	r3, [r7, #4]
 8009a86:	3304      	adds	r3, #4
 8009a88:	4618      	mov	r0, r3
 8009a8a:	f000 f9fa 	bl	8009e82 <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>
 8009a8e:	4603      	mov	r3, r0
 8009a90:	681c      	ldr	r4, [r3, #0]
 8009a92:	2c00      	cmp	r4, #0
 8009a94:	d01f      	beq.n	8009ad6 <_ZN17Primal_expressionD1Ev+0x6a>
 8009a96:	4620      	mov	r0, r4
 8009a98:	f00c fd18 	bl	80164cc <_ZN8VariableD1Ev>
 8009a9c:	2120      	movs	r1, #32
 8009a9e:	4620      	mov	r0, r4
 8009aa0:	f018 fcec 	bl	802247c <_ZdlPvj>
 8009aa4:	e017      	b.n	8009ad6 <_ZN17Primal_expressionD1Ev+0x6a>
	}
	else if(std::holds_alternative<Function_call*>(content))
 8009aa6:	687b      	ldr	r3, [r7, #4]
 8009aa8:	3304      	adds	r3, #4
 8009aaa:	4618      	mov	r0, r3
 8009aac:	f000 f9f5 	bl	8009e9a <_ZSt17holds_alternativeIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EEbRKSt7variantIJDpT0_EE>
 8009ab0:	4603      	mov	r3, r0
 8009ab2:	2b00      	cmp	r3, #0
 8009ab4:	d00f      	beq.n	8009ad6 <_ZN17Primal_expressionD1Ev+0x6a>
	{
		delete std::get<Function_call*>(content);
 8009ab6:	687b      	ldr	r3, [r7, #4]
 8009ab8:	3304      	adds	r3, #4
 8009aba:	4618      	mov	r0, r3
 8009abc:	f000 f9fe 	bl	8009ebc <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>
 8009ac0:	4603      	mov	r3, r0
 8009ac2:	681c      	ldr	r4, [r3, #0]
 8009ac4:	2c00      	cmp	r4, #0
 8009ac6:	d006      	beq.n	8009ad6 <_ZN17Primal_expressionD1Ev+0x6a>
 8009ac8:	4620      	mov	r0, r4
 8009aca:	f00c fcbc 	bl	8016446 <_ZN13Function_callD1Ev>
 8009ace:	212c      	movs	r1, #44	; 0x2c
 8009ad0:	4620      	mov	r0, r4
 8009ad2:	f018 fcd3 	bl	802247c <_ZdlPvj>
Primal_expression::~Primal_expression()
 8009ad6:	687b      	ldr	r3, [r7, #4]
 8009ad8:	3304      	adds	r3, #4
 8009ada:	4618      	mov	r0, r3
 8009adc:	f7ff ffb9 	bl	8009a52 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
	}
}
 8009ae0:	687b      	ldr	r3, [r7, #4]
 8009ae2:	4618      	mov	r0, r3
 8009ae4:	370c      	adds	r7, #12
 8009ae6:	46bd      	mov	sp, r7
 8009ae8:	bd90      	pop	{r4, r7, pc}

08009aea <_ZN19Priority_expressionD1Ev>:

Priority_expression::~Priority_expression()
 8009aea:	b590      	push	{r4, r7, lr}
 8009aec:	b083      	sub	sp, #12
 8009aee:	af00      	add	r7, sp, #0
 8009af0:	6078      	str	r0, [r7, #4]
{
	if(std::holds_alternative<Expression*>(exp))
 8009af2:	687b      	ldr	r3, [r7, #4]
 8009af4:	4618      	mov	r0, r3
 8009af6:	f000 fa00 	bl	8009efa <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>
 8009afa:	4603      	mov	r3, r0
 8009afc:	2b00      	cmp	r3, #0
 8009afe:	d00f      	beq.n	8009b20 <_ZN19Priority_expressionD1Ev+0x36>
	{
		delete std::get<Expression*>(exp);
 8009b00:	687b      	ldr	r3, [r7, #4]
 8009b02:	4618      	mov	r0, r3
 8009b04:	f000 fa0a 	bl	8009f1c <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>
 8009b08:	4603      	mov	r3, r0
 8009b0a:	681c      	ldr	r4, [r3, #0]
 8009b0c:	2c00      	cmp	r4, #0
 8009b0e:	d016      	beq.n	8009b3e <_ZN19Priority_expressionD1Ev+0x54>
 8009b10:	4620      	mov	r0, r4
 8009b12:	f000 f948 	bl	8009da6 <_ZN10ExpressionD1Ev>
 8009b16:	2114      	movs	r1, #20
 8009b18:	4620      	mov	r0, r4
 8009b1a:	f018 fcaf 	bl	802247c <_ZdlPvj>
 8009b1e:	e00e      	b.n	8009b3e <_ZN19Priority_expressionD1Ev+0x54>
	}
	else
	{
		delete std::get<Primal_expression*>(exp);
 8009b20:	687b      	ldr	r3, [r7, #4]
 8009b22:	4618      	mov	r0, r3
 8009b24:	f000 fa06 	bl	8009f34 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>
 8009b28:	4603      	mov	r3, r0
 8009b2a:	681c      	ldr	r4, [r3, #0]
 8009b2c:	2c00      	cmp	r4, #0
 8009b2e:	d006      	beq.n	8009b3e <_ZN19Priority_expressionD1Ev+0x54>
 8009b30:	4620      	mov	r0, r4
 8009b32:	f7ff ff9b 	bl	8009a6c <_ZN17Primal_expressionD1Ev>
 8009b36:	2120      	movs	r1, #32
 8009b38:	4620      	mov	r0, r4
 8009b3a:	f018 fc9f 	bl	802247c <_ZdlPvj>
	}
}
 8009b3e:	687b      	ldr	r3, [r7, #4]
 8009b40:	4618      	mov	r0, r3
 8009b42:	370c      	adds	r7, #12
 8009b44:	46bd      	mov	sp, r7
 8009b46:	bd90      	pop	{r4, r7, pc}

08009b48 <_ZN16Unary_expressionD1Ev>:

Unary_expression::~Unary_expression()
 8009b48:	b590      	push	{r4, r7, lr}
 8009b4a:	b083      	sub	sp, #12
 8009b4c:	af00      	add	r7, sp, #0
 8009b4e:	6078      	str	r0, [r7, #4]
{
	delete prior_exp;
 8009b50:	687b      	ldr	r3, [r7, #4]
 8009b52:	681c      	ldr	r4, [r3, #0]
 8009b54:	2c00      	cmp	r4, #0
 8009b56:	d006      	beq.n	8009b66 <_ZN16Unary_expressionD1Ev+0x1e>
 8009b58:	4620      	mov	r0, r4
 8009b5a:	f7ff ffc6 	bl	8009aea <_ZN19Priority_expressionD1Ev>
 8009b5e:	2108      	movs	r1, #8
 8009b60:	4620      	mov	r0, r4
 8009b62:	f018 fc8b 	bl	802247c <_ZdlPvj>
}
 8009b66:	687b      	ldr	r3, [r7, #4]
 8009b68:	4618      	mov	r0, r3
 8009b6a:	370c      	adds	r7, #12
 8009b6c:	46bd      	mov	sp, r7
 8009b6e:	bd90      	pop	{r4, r7, pc}

08009b70 <_ZN16Power_expressionD1Ev>:

Power_expression::~Power_expression()
 8009b70:	b590      	push	{r4, r7, lr}
 8009b72:	b083      	sub	sp, #12
 8009b74:	af00      	add	r7, sp, #0
 8009b76:	6078      	str	r0, [r7, #4]
{
	delete left_un_exp;
 8009b78:	687b      	ldr	r3, [r7, #4]
 8009b7a:	681c      	ldr	r4, [r3, #0]
 8009b7c:	2c00      	cmp	r4, #0
 8009b7e:	d006      	beq.n	8009b8e <_ZN16Power_expressionD1Ev+0x1e>
 8009b80:	4620      	mov	r0, r4
 8009b82:	f7ff ffe1 	bl	8009b48 <_ZN16Unary_expressionD1Ev>
 8009b86:	2108      	movs	r1, #8
 8009b88:	4620      	mov	r0, r4
 8009b8a:	f018 fc77 	bl	802247c <_ZdlPvj>
	delete right_un_exp;
 8009b8e:	687b      	ldr	r3, [r7, #4]
 8009b90:	685c      	ldr	r4, [r3, #4]
 8009b92:	2c00      	cmp	r4, #0
 8009b94:	d006      	beq.n	8009ba4 <_ZN16Power_expressionD1Ev+0x34>
 8009b96:	4620      	mov	r0, r4
 8009b98:	f7ff ffd6 	bl	8009b48 <_ZN16Unary_expressionD1Ev>
 8009b9c:	2108      	movs	r1, #8
 8009b9e:	4620      	mov	r0, r4
 8009ba0:	f018 fc6c 	bl	802247c <_ZdlPvj>
}
 8009ba4:	687b      	ldr	r3, [r7, #4]
 8009ba6:	4618      	mov	r0, r3
 8009ba8:	370c      	adds	r7, #12
 8009baa:	46bd      	mov	sp, r7
 8009bac:	bd90      	pop	{r4, r7, pc}

08009bae <_ZN19Multiply_expressionD1Ev>:

Multiply_expression::~Multiply_expression()
 8009bae:	b590      	push	{r4, r7, lr}
 8009bb0:	b087      	sub	sp, #28
 8009bb2:	af00      	add	r7, sp, #0
 8009bb4:	6078      	str	r0, [r7, #4]
{
	for(Power_expression* exp : pow_exps)
 8009bb6:	687b      	ldr	r3, [r7, #4]
 8009bb8:	617b      	str	r3, [r7, #20]
 8009bba:	6978      	ldr	r0, [r7, #20]
 8009bbc:	f000 f9fc 	bl	8009fb8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>
 8009bc0:	4603      	mov	r3, r0
 8009bc2:	60fb      	str	r3, [r7, #12]
 8009bc4:	6978      	ldr	r0, [r7, #20]
 8009bc6:	f000 fa07 	bl	8009fd8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 8009bca:	4603      	mov	r3, r0
 8009bcc:	60bb      	str	r3, [r7, #8]
 8009bce:	f107 0208 	add.w	r2, r7, #8
 8009bd2:	f107 030c 	add.w	r3, r7, #12
 8009bd6:	4611      	mov	r1, r2
 8009bd8:	4618      	mov	r0, r3
 8009bda:	f000 fa0e 	bl	8009ffa <_ZN9__gnu_cxxneIPP16Power_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8009bde:	4603      	mov	r3, r0
 8009be0:	2b00      	cmp	r3, #0
 8009be2:	d017      	beq.n	8009c14 <_ZN19Multiply_expressionD1Ev+0x66>
 8009be4:	f107 030c 	add.w	r3, r7, #12
 8009be8:	4618      	mov	r0, r3
 8009bea:	f000 fa2e 	bl	800a04a <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8009bee:	4603      	mov	r3, r0
 8009bf0:	681b      	ldr	r3, [r3, #0]
 8009bf2:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8009bf4:	693c      	ldr	r4, [r7, #16]
 8009bf6:	2c00      	cmp	r4, #0
 8009bf8:	d006      	beq.n	8009c08 <_ZN19Multiply_expressionD1Ev+0x5a>
 8009bfa:	4620      	mov	r0, r4
 8009bfc:	f7ff ffb8 	bl	8009b70 <_ZN16Power_expressionD1Ev>
 8009c00:	2108      	movs	r1, #8
 8009c02:	4620      	mov	r0, r4
 8009c04:	f018 fc3a 	bl	802247c <_ZdlPvj>
	for(Power_expression* exp : pow_exps)
 8009c08:	f107 030c 	add.w	r3, r7, #12
 8009c0c:	4618      	mov	r0, r3
 8009c0e:	f000 fa0c 	bl	800a02a <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8009c12:	e7dc      	b.n	8009bce <_ZN19Multiply_expressionD1Ev+0x20>
Multiply_expression::~Multiply_expression()
 8009c14:	687b      	ldr	r3, [r7, #4]
 8009c16:	330c      	adds	r3, #12
 8009c18:	4618      	mov	r0, r3
 8009c1a:	f000 f9b2 	bl	8009f82 <_ZNSt6vectorI13mult_operatorSaIS0_EED1Ev>
 8009c1e:	687b      	ldr	r3, [r7, #4]
 8009c20:	4618      	mov	r0, r3
 8009c22:	f000 f993 	bl	8009f4c <_ZNSt6vectorIP16Power_expressionSaIS1_EED1Ev>
	}
}
 8009c26:	687b      	ldr	r3, [r7, #4]
 8009c28:	4618      	mov	r0, r3
 8009c2a:	371c      	adds	r7, #28
 8009c2c:	46bd      	mov	sp, r7
 8009c2e:	bd90      	pop	{r4, r7, pc}

08009c30 <_ZN14Sum_expressionD1Ev>:

Sum_expression::~Sum_expression()
 8009c30:	b590      	push	{r4, r7, lr}
 8009c32:	b087      	sub	sp, #28
 8009c34:	af00      	add	r7, sp, #0
 8009c36:	6078      	str	r0, [r7, #4]
{
	for(Multiply_expression* exp : mult_exps)
 8009c38:	687b      	ldr	r3, [r7, #4]
 8009c3a:	617b      	str	r3, [r7, #20]
 8009c3c:	6978      	ldr	r0, [r7, #20]
 8009c3e:	f000 fa46 	bl	800a0ce <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>
 8009c42:	4603      	mov	r3, r0
 8009c44:	60fb      	str	r3, [r7, #12]
 8009c46:	6978      	ldr	r0, [r7, #20]
 8009c48:	f000 fa51 	bl	800a0ee <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 8009c4c:	4603      	mov	r3, r0
 8009c4e:	60bb      	str	r3, [r7, #8]
 8009c50:	f107 0208 	add.w	r2, r7, #8
 8009c54:	f107 030c 	add.w	r3, r7, #12
 8009c58:	4611      	mov	r1, r2
 8009c5a:	4618      	mov	r0, r3
 8009c5c:	f000 fa58 	bl	800a110 <_ZN9__gnu_cxxneIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8009c60:	4603      	mov	r3, r0
 8009c62:	2b00      	cmp	r3, #0
 8009c64:	d017      	beq.n	8009c96 <_ZN14Sum_expressionD1Ev+0x66>
 8009c66:	f107 030c 	add.w	r3, r7, #12
 8009c6a:	4618      	mov	r0, r3
 8009c6c:	f000 fa78 	bl	800a160 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8009c70:	4603      	mov	r3, r0
 8009c72:	681b      	ldr	r3, [r3, #0]
 8009c74:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8009c76:	693c      	ldr	r4, [r7, #16]
 8009c78:	2c00      	cmp	r4, #0
 8009c7a:	d006      	beq.n	8009c8a <_ZN14Sum_expressionD1Ev+0x5a>
 8009c7c:	4620      	mov	r0, r4
 8009c7e:	f7ff ff96 	bl	8009bae <_ZN19Multiply_expressionD1Ev>
 8009c82:	2118      	movs	r1, #24
 8009c84:	4620      	mov	r0, r4
 8009c86:	f018 fbf9 	bl	802247c <_ZdlPvj>
	for(Multiply_expression* exp : mult_exps)
 8009c8a:	f107 030c 	add.w	r3, r7, #12
 8009c8e:	4618      	mov	r0, r3
 8009c90:	f000 fa56 	bl	800a140 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8009c94:	e7dc      	b.n	8009c50 <_ZN14Sum_expressionD1Ev+0x20>
Sum_expression::~Sum_expression()
 8009c96:	687b      	ldr	r3, [r7, #4]
 8009c98:	330c      	adds	r3, #12
 8009c9a:	4618      	mov	r0, r3
 8009c9c:	f000 f9fc 	bl	800a098 <_ZNSt6vectorI12sum_operatorSaIS0_EED1Ev>
 8009ca0:	687b      	ldr	r3, [r7, #4]
 8009ca2:	4618      	mov	r0, r3
 8009ca4:	f000 f9dd 	bl	800a062 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EED1Ev>
	}
}
 8009ca8:	687b      	ldr	r3, [r7, #4]
 8009caa:	4618      	mov	r0, r3
 8009cac:	371c      	adds	r7, #28
 8009cae:	46bd      	mov	sp, r7
 8009cb0:	bd90      	pop	{r4, r7, pc}

08009cb2 <_ZN19Relation_expressionD1Ev>:

Relation_expression::~Relation_expression()
 8009cb2:	b590      	push	{r4, r7, lr}
 8009cb4:	b083      	sub	sp, #12
 8009cb6:	af00      	add	r7, sp, #0
 8009cb8:	6078      	str	r0, [r7, #4]
{
	delete left_sum_exp;
 8009cba:	687b      	ldr	r3, [r7, #4]
 8009cbc:	681c      	ldr	r4, [r3, #0]
 8009cbe:	2c00      	cmp	r4, #0
 8009cc0:	d006      	beq.n	8009cd0 <_ZN19Relation_expressionD1Ev+0x1e>
 8009cc2:	4620      	mov	r0, r4
 8009cc4:	f7ff ffb4 	bl	8009c30 <_ZN14Sum_expressionD1Ev>
 8009cc8:	2118      	movs	r1, #24
 8009cca:	4620      	mov	r0, r4
 8009ccc:	f018 fbd6 	bl	802247c <_ZdlPvj>
	delete right_sum_exp;
 8009cd0:	687b      	ldr	r3, [r7, #4]
 8009cd2:	685c      	ldr	r4, [r3, #4]
 8009cd4:	2c00      	cmp	r4, #0
 8009cd6:	d006      	beq.n	8009ce6 <_ZN19Relation_expressionD1Ev+0x34>
 8009cd8:	4620      	mov	r0, r4
 8009cda:	f7ff ffa9 	bl	8009c30 <_ZN14Sum_expressionD1Ev>
 8009cde:	2118      	movs	r1, #24
 8009ce0:	4620      	mov	r0, r4
 8009ce2:	f018 fbcb 	bl	802247c <_ZdlPvj>
}
 8009ce6:	687b      	ldr	r3, [r7, #4]
 8009ce8:	4618      	mov	r0, r3
 8009cea:	370c      	adds	r7, #12
 8009cec:	46bd      	mov	sp, r7
 8009cee:	bd90      	pop	{r4, r7, pc}

08009cf0 <_ZN18Compare_expressionD1Ev>:

Compare_expression::~Compare_expression()
 8009cf0:	b590      	push	{r4, r7, lr}
 8009cf2:	b083      	sub	sp, #12
 8009cf4:	af00      	add	r7, sp, #0
 8009cf6:	6078      	str	r0, [r7, #4]
{
	delete left_rel_exp;
 8009cf8:	687b      	ldr	r3, [r7, #4]
 8009cfa:	681c      	ldr	r4, [r3, #0]
 8009cfc:	2c00      	cmp	r4, #0
 8009cfe:	d006      	beq.n	8009d0e <_ZN18Compare_expressionD1Ev+0x1e>
 8009d00:	4620      	mov	r0, r4
 8009d02:	f7ff ffd6 	bl	8009cb2 <_ZN19Relation_expressionD1Ev>
 8009d06:	210c      	movs	r1, #12
 8009d08:	4620      	mov	r0, r4
 8009d0a:	f018 fbb7 	bl	802247c <_ZdlPvj>
	delete right_rel_exp;
 8009d0e:	687b      	ldr	r3, [r7, #4]
 8009d10:	685c      	ldr	r4, [r3, #4]
 8009d12:	2c00      	cmp	r4, #0
 8009d14:	d006      	beq.n	8009d24 <_ZN18Compare_expressionD1Ev+0x34>
 8009d16:	4620      	mov	r0, r4
 8009d18:	f7ff ffcb 	bl	8009cb2 <_ZN19Relation_expressionD1Ev>
 8009d1c:	210c      	movs	r1, #12
 8009d1e:	4620      	mov	r0, r4
 8009d20:	f018 fbac 	bl	802247c <_ZdlPvj>
}
 8009d24:	687b      	ldr	r3, [r7, #4]
 8009d26:	4618      	mov	r0, r3
 8009d28:	370c      	adds	r7, #12
 8009d2a:	46bd      	mov	sp, r7
 8009d2c:	bd90      	pop	{r4, r7, pc}

08009d2e <_ZN14And_expressionD1Ev>:

And_expression::~And_expression()
 8009d2e:	b590      	push	{r4, r7, lr}
 8009d30:	b087      	sub	sp, #28
 8009d32:	af00      	add	r7, sp, #0
 8009d34:	6078      	str	r0, [r7, #4]
{
	for(Compare_expression* exp : comp_exps)
 8009d36:	687b      	ldr	r3, [r7, #4]
 8009d38:	617b      	str	r3, [r7, #20]
 8009d3a:	6978      	ldr	r0, [r7, #20]
 8009d3c:	f000 fa37 	bl	800a1ae <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 8009d40:	4603      	mov	r3, r0
 8009d42:	60fb      	str	r3, [r7, #12]
 8009d44:	6978      	ldr	r0, [r7, #20]
 8009d46:	f000 fa42 	bl	800a1ce <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 8009d4a:	4603      	mov	r3, r0
 8009d4c:	60bb      	str	r3, [r7, #8]
 8009d4e:	f107 0208 	add.w	r2, r7, #8
 8009d52:	f107 030c 	add.w	r3, r7, #12
 8009d56:	4611      	mov	r1, r2
 8009d58:	4618      	mov	r0, r3
 8009d5a:	f000 fa49 	bl	800a1f0 <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8009d5e:	4603      	mov	r3, r0
 8009d60:	2b00      	cmp	r3, #0
 8009d62:	d017      	beq.n	8009d94 <_ZN14And_expressionD1Ev+0x66>
 8009d64:	f107 030c 	add.w	r3, r7, #12
 8009d68:	4618      	mov	r0, r3
 8009d6a:	f000 fa69 	bl	800a240 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8009d6e:	4603      	mov	r3, r0
 8009d70:	681b      	ldr	r3, [r3, #0]
 8009d72:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8009d74:	693c      	ldr	r4, [r7, #16]
 8009d76:	2c00      	cmp	r4, #0
 8009d78:	d006      	beq.n	8009d88 <_ZN14And_expressionD1Ev+0x5a>
 8009d7a:	4620      	mov	r0, r4
 8009d7c:	f7ff ffb8 	bl	8009cf0 <_ZN18Compare_expressionD1Ev>
 8009d80:	210c      	movs	r1, #12
 8009d82:	4620      	mov	r0, r4
 8009d84:	f018 fb7a 	bl	802247c <_ZdlPvj>
	for(Compare_expression* exp : comp_exps)
 8009d88:	f107 030c 	add.w	r3, r7, #12
 8009d8c:	4618      	mov	r0, r3
 8009d8e:	f000 fa47 	bl	800a220 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8009d92:	e7dc      	b.n	8009d4e <_ZN14And_expressionD1Ev+0x20>
And_expression::~And_expression()
 8009d94:	687b      	ldr	r3, [r7, #4]
 8009d96:	4618      	mov	r0, r3
 8009d98:	f000 f9ee 	bl	800a178 <_ZNSt6vectorIP18Compare_expressionSaIS1_EED1Ev>
	}
}
 8009d9c:	687b      	ldr	r3, [r7, #4]
 8009d9e:	4618      	mov	r0, r3
 8009da0:	371c      	adds	r7, #28
 8009da2:	46bd      	mov	sp, r7
 8009da4:	bd90      	pop	{r4, r7, pc}

08009da6 <_ZN10ExpressionD1Ev>:

Expression::~Expression()
 8009da6:	b590      	push	{r4, r7, lr}
 8009da8:	b087      	sub	sp, #28
 8009daa:	af00      	add	r7, sp, #0
 8009dac:	6078      	str	r0, [r7, #4]
{
	for(And_expression* exp : and_exps)
 8009dae:	687b      	ldr	r3, [r7, #4]
 8009db0:	3308      	adds	r3, #8
 8009db2:	617b      	str	r3, [r7, #20]
 8009db4:	6978      	ldr	r0, [r7, #20]
 8009db6:	f000 fa6a 	bl	800a28e <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 8009dba:	4603      	mov	r3, r0
 8009dbc:	60fb      	str	r3, [r7, #12]
 8009dbe:	6978      	ldr	r0, [r7, #20]
 8009dc0:	f000 fa75 	bl	800a2ae <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 8009dc4:	4603      	mov	r3, r0
 8009dc6:	60bb      	str	r3, [r7, #8]
 8009dc8:	f107 0208 	add.w	r2, r7, #8
 8009dcc:	f107 030c 	add.w	r3, r7, #12
 8009dd0:	4611      	mov	r1, r2
 8009dd2:	4618      	mov	r0, r3
 8009dd4:	f000 fa7c 	bl	800a2d0 <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8009dd8:	4603      	mov	r3, r0
 8009dda:	2b00      	cmp	r3, #0
 8009ddc:	d017      	beq.n	8009e0e <_ZN10ExpressionD1Ev+0x68>
 8009dde:	f107 030c 	add.w	r3, r7, #12
 8009de2:	4618      	mov	r0, r3
 8009de4:	f000 fa9c 	bl	800a320 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8009de8:	4603      	mov	r3, r0
 8009dea:	681b      	ldr	r3, [r3, #0]
 8009dec:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8009dee:	693c      	ldr	r4, [r7, #16]
 8009df0:	2c00      	cmp	r4, #0
 8009df2:	d006      	beq.n	8009e02 <_ZN10ExpressionD1Ev+0x5c>
 8009df4:	4620      	mov	r0, r4
 8009df6:	f7ff ff9a 	bl	8009d2e <_ZN14And_expressionD1Ev>
 8009dfa:	210c      	movs	r1, #12
 8009dfc:	4620      	mov	r0, r4
 8009dfe:	f018 fb3d 	bl	802247c <_ZdlPvj>
	for(And_expression* exp : and_exps)
 8009e02:	f107 030c 	add.w	r3, r7, #12
 8009e06:	4618      	mov	r0, r3
 8009e08:	f000 fa7a 	bl	800a300 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8009e0c:	e7dc      	b.n	8009dc8 <_ZN10ExpressionD1Ev+0x22>
Expression::~Expression()
 8009e0e:	687b      	ldr	r3, [r7, #4]
 8009e10:	3308      	adds	r3, #8
 8009e12:	4618      	mov	r0, r3
 8009e14:	f000 fa20 	bl	800a258 <_ZNSt6vectorIP14And_expressionSaIS1_EED1Ev>
	}
}
 8009e18:	687b      	ldr	r3, [r7, #4]
 8009e1a:	4618      	mov	r0, r3
 8009e1c:	371c      	adds	r7, #28
 8009e1e:	46bd      	mov	sp, r7
 8009e20:	bd90      	pop	{r4, r7, pc}

08009e22 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
      ~_Variant_storage()
 8009e22:	b580      	push	{r7, lr}
 8009e24:	b082      	sub	sp, #8
 8009e26:	af00      	add	r7, sp, #0
 8009e28:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 8009e2a:	6878      	ldr	r0, [r7, #4]
 8009e2c:	f000 fa84 	bl	800a338 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
 8009e30:	687b      	ldr	r3, [r7, #4]
 8009e32:	4618      	mov	r0, r3
 8009e34:	3708      	adds	r7, #8
 8009e36:	46bd      	mov	sp, r7
 8009e38:	bd80      	pop	{r7, pc}

08009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>:
      constexpr size_t index() const noexcept
 8009e3a:	b480      	push	{r7}
 8009e3c:	b083      	sub	sp, #12
 8009e3e:	af00      	add	r7, sp, #0
 8009e40:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 8009e42:	687b      	ldr	r3, [r7, #4]
 8009e44:	7e1b      	ldrb	r3, [r3, #24]
 8009e46:	2bff      	cmp	r3, #255	; 0xff
 8009e48:	d102      	bne.n	8009e50 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv+0x16>
	  return variant_npos;
 8009e4a:	f04f 33ff 	mov.w	r3, #4294967295
 8009e4e:	e001      	b.n	8009e54 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv+0x1a>
	return this->_M_index;
 8009e50:	687b      	ldr	r3, [r7, #4]
 8009e52:	7e1b      	ldrb	r3, [r3, #24]
      }
 8009e54:	4618      	mov	r0, r3
 8009e56:	370c      	adds	r7, #12
 8009e58:	46bd      	mov	sp, r7
 8009e5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e5e:	4770      	bx	lr

08009e60 <_ZSt17holds_alternativeIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 8009e60:	b580      	push	{r7, lr}
 8009e62:	b082      	sub	sp, #8
 8009e64:	af00      	add	r7, sp, #0
 8009e66:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 8009e68:	6878      	ldr	r0, [r7, #4]
 8009e6a:	f7ff ffe6 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8009e6e:	4603      	mov	r3, r0
 8009e70:	2b04      	cmp	r3, #4
 8009e72:	bf0c      	ite	eq
 8009e74:	2301      	moveq	r3, #1
 8009e76:	2300      	movne	r3, #0
 8009e78:	b2db      	uxtb	r3, r3
    }
 8009e7a:	4618      	mov	r0, r3
 8009e7c:	3708      	adds	r7, #8
 8009e7e:	46bd      	mov	sp, r7
 8009e80:	bd80      	pop	{r7, pc}

08009e82 <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8009e82:	b580      	push	{r7, lr}
 8009e84:	b082      	sub	sp, #8
 8009e86:	af00      	add	r7, sp, #0
 8009e88:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8009e8a:	6878      	ldr	r0, [r7, #4]
 8009e8c:	f000 facc 	bl	800a428 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8009e90:	4603      	mov	r3, r0
    }
 8009e92:	4618      	mov	r0, r3
 8009e94:	3708      	adds	r7, #8
 8009e96:	46bd      	mov	sp, r7
 8009e98:	bd80      	pop	{r7, pc}

08009e9a <_ZSt17holds_alternativeIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 8009e9a:	b580      	push	{r7, lr}
 8009e9c:	b082      	sub	sp, #8
 8009e9e:	af00      	add	r7, sp, #0
 8009ea0:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 8009ea2:	6878      	ldr	r0, [r7, #4]
 8009ea4:	f7ff ffc9 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8009ea8:	4603      	mov	r3, r0
 8009eaa:	2b05      	cmp	r3, #5
 8009eac:	bf0c      	ite	eq
 8009eae:	2301      	moveq	r3, #1
 8009eb0:	2300      	movne	r3, #0
 8009eb2:	b2db      	uxtb	r3, r3
    }
 8009eb4:	4618      	mov	r0, r3
 8009eb6:	3708      	adds	r7, #8
 8009eb8:	46bd      	mov	sp, r7
 8009eba:	bd80      	pop	{r7, pc}

08009ebc <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8009ebc:	b580      	push	{r7, lr}
 8009ebe:	b082      	sub	sp, #8
 8009ec0:	af00      	add	r7, sp, #0
 8009ec2:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8009ec4:	6878      	ldr	r0, [r7, #4]
 8009ec6:	f000 fb47 	bl	800a558 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8009eca:	4603      	mov	r3, r0
    }
 8009ecc:	4618      	mov	r0, r3
 8009ece:	3708      	adds	r7, #8
 8009ed0:	46bd      	mov	sp, r7
 8009ed2:	bd80      	pop	{r7, pc}

08009ed4 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>:
      constexpr size_t index() const noexcept
 8009ed4:	b480      	push	{r7}
 8009ed6:	b083      	sub	sp, #12
 8009ed8:	af00      	add	r7, sp, #0
 8009eda:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 8009edc:	687b      	ldr	r3, [r7, #4]
 8009ede:	791b      	ldrb	r3, [r3, #4]
 8009ee0:	2bff      	cmp	r3, #255	; 0xff
 8009ee2:	d102      	bne.n	8009eea <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv+0x16>
	  return variant_npos;
 8009ee4:	f04f 33ff 	mov.w	r3, #4294967295
 8009ee8:	e001      	b.n	8009eee <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv+0x1a>
	return this->_M_index;
 8009eea:	687b      	ldr	r3, [r7, #4]
 8009eec:	791b      	ldrb	r3, [r3, #4]
      }
 8009eee:	4618      	mov	r0, r3
 8009ef0:	370c      	adds	r7, #12
 8009ef2:	46bd      	mov	sp, r7
 8009ef4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ef8:	4770      	bx	lr

08009efa <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 8009efa:	b580      	push	{r7, lr}
 8009efc:	b082      	sub	sp, #8
 8009efe:	af00      	add	r7, sp, #0
 8009f00:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 8009f02:	6878      	ldr	r0, [r7, #4]
 8009f04:	f7ff ffe6 	bl	8009ed4 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 8009f08:	4603      	mov	r3, r0
 8009f0a:	2b01      	cmp	r3, #1
 8009f0c:	bf0c      	ite	eq
 8009f0e:	2301      	moveq	r3, #1
 8009f10:	2300      	movne	r3, #0
 8009f12:	b2db      	uxtb	r3, r3
    }
 8009f14:	4618      	mov	r0, r3
 8009f16:	3708      	adds	r7, #8
 8009f18:	46bd      	mov	sp, r7
 8009f1a:	bd80      	pop	{r7, pc}

08009f1c <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8009f1c:	b580      	push	{r7, lr}
 8009f1e:	b082      	sub	sp, #8
 8009f20:	af00      	add	r7, sp, #0
 8009f22:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8009f24:	6878      	ldr	r0, [r7, #4]
 8009f26:	f000 fb67 	bl	800a5f8 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 8009f2a:	4603      	mov	r3, r0
    }
 8009f2c:	4618      	mov	r0, r3
 8009f2e:	3708      	adds	r7, #8
 8009f30:	46bd      	mov	sp, r7
 8009f32:	bd80      	pop	{r7, pc}

08009f34 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8009f34:	b580      	push	{r7, lr}
 8009f36:	b082      	sub	sp, #8
 8009f38:	af00      	add	r7, sp, #0
 8009f3a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8009f3c:	6878      	ldr	r0, [r7, #4]
 8009f3e:	f000 fb99 	bl	800a674 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 8009f42:	4603      	mov	r3, r0
    }
 8009f44:	4618      	mov	r0, r3
 8009f46:	3708      	adds	r7, #8
 8009f48:	46bd      	mov	sp, r7
 8009f4a:	bd80      	pop	{r7, pc}

08009f4c <_ZNSt6vectorIP16Power_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8009f4c:	b5b0      	push	{r4, r5, r7, lr}
 8009f4e:	b082      	sub	sp, #8
 8009f50:	af00      	add	r7, sp, #0
 8009f52:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8009f54:	687b      	ldr	r3, [r7, #4]
 8009f56:	681c      	ldr	r4, [r3, #0]
 8009f58:	687b      	ldr	r3, [r7, #4]
 8009f5a:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8009f5c:	687b      	ldr	r3, [r7, #4]
 8009f5e:	4618      	mov	r0, r3
 8009f60:	f000 fbc9 	bl	800a6f6 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8009f64:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8009f66:	461a      	mov	r2, r3
 8009f68:	4629      	mov	r1, r5
 8009f6a:	4620      	mov	r0, r4
 8009f6c:	f000 fbce 	bl	800a70c <_ZSt8_DestroyIPP16Power_expressionS1_EvT_S3_RSaIT0_E>
      }
 8009f70:	687b      	ldr	r3, [r7, #4]
 8009f72:	4618      	mov	r0, r3
 8009f74:	f000 fba6 	bl	800a6c4 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EED1Ev>
 8009f78:	687b      	ldr	r3, [r7, #4]
 8009f7a:	4618      	mov	r0, r3
 8009f7c:	3708      	adds	r7, #8
 8009f7e:	46bd      	mov	sp, r7
 8009f80:	bdb0      	pop	{r4, r5, r7, pc}

08009f82 <_ZNSt6vectorI13mult_operatorSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8009f82:	b5b0      	push	{r4, r5, r7, lr}
 8009f84:	b082      	sub	sp, #8
 8009f86:	af00      	add	r7, sp, #0
 8009f88:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8009f8a:	687b      	ldr	r3, [r7, #4]
 8009f8c:	681c      	ldr	r4, [r3, #0]
 8009f8e:	687b      	ldr	r3, [r7, #4]
 8009f90:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8009f92:	687b      	ldr	r3, [r7, #4]
 8009f94:	4618      	mov	r0, r3
 8009f96:	f000 fbeb 	bl	800a770 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 8009f9a:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8009f9c:	461a      	mov	r2, r3
 8009f9e:	4629      	mov	r1, r5
 8009fa0:	4620      	mov	r0, r4
 8009fa2:	f000 fbf0 	bl	800a786 <_ZSt8_DestroyIP13mult_operatorS0_EvT_S2_RSaIT0_E>
      }
 8009fa6:	687b      	ldr	r3, [r7, #4]
 8009fa8:	4618      	mov	r0, r3
 8009faa:	f000 fbc9 	bl	800a740 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EED1Ev>
 8009fae:	687b      	ldr	r3, [r7, #4]
 8009fb0:	4618      	mov	r0, r3
 8009fb2:	3708      	adds	r7, #8
 8009fb4:	46bd      	mov	sp, r7
 8009fb6:	bdb0      	pop	{r4, r5, r7, pc}

08009fb8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8009fb8:	b580      	push	{r7, lr}
 8009fba:	b084      	sub	sp, #16
 8009fbc:	af00      	add	r7, sp, #0
 8009fbe:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8009fc0:	687a      	ldr	r2, [r7, #4]
 8009fc2:	f107 030c 	add.w	r3, r7, #12
 8009fc6:	4611      	mov	r1, r2
 8009fc8:	4618      	mov	r0, r3
 8009fca:	f000 fbea 	bl	800a7a2 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8009fce:	68fb      	ldr	r3, [r7, #12]
 8009fd0:	4618      	mov	r0, r3
 8009fd2:	3710      	adds	r7, #16
 8009fd4:	46bd      	mov	sp, r7
 8009fd6:	bd80      	pop	{r7, pc}

08009fd8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8009fd8:	b580      	push	{r7, lr}
 8009fda:	b084      	sub	sp, #16
 8009fdc:	af00      	add	r7, sp, #0
 8009fde:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8009fe0:	687b      	ldr	r3, [r7, #4]
 8009fe2:	1d1a      	adds	r2, r3, #4
 8009fe4:	f107 030c 	add.w	r3, r7, #12
 8009fe8:	4611      	mov	r1, r2
 8009fea:	4618      	mov	r0, r3
 8009fec:	f000 fbd9 	bl	800a7a2 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8009ff0:	68fb      	ldr	r3, [r7, #12]
 8009ff2:	4618      	mov	r0, r3
 8009ff4:	3710      	adds	r7, #16
 8009ff6:	46bd      	mov	sp, r7
 8009ff8:	bd80      	pop	{r7, pc}

08009ffa <_ZN9__gnu_cxxneIPP16Power_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8009ffa:	b590      	push	{r4, r7, lr}
 8009ffc:	b083      	sub	sp, #12
 8009ffe:	af00      	add	r7, sp, #0
 800a000:	6078      	str	r0, [r7, #4]
 800a002:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a004:	6878      	ldr	r0, [r7, #4]
 800a006:	f000 fbdc 	bl	800a7c2 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a00a:	4603      	mov	r3, r0
 800a00c:	681c      	ldr	r4, [r3, #0]
 800a00e:	6838      	ldr	r0, [r7, #0]
 800a010:	f000 fbd7 	bl	800a7c2 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a014:	4603      	mov	r3, r0
 800a016:	681b      	ldr	r3, [r3, #0]
 800a018:	429c      	cmp	r4, r3
 800a01a:	bf14      	ite	ne
 800a01c:	2301      	movne	r3, #1
 800a01e:	2300      	moveq	r3, #0
 800a020:	b2db      	uxtb	r3, r3
 800a022:	4618      	mov	r0, r3
 800a024:	370c      	adds	r7, #12
 800a026:	46bd      	mov	sp, r7
 800a028:	bd90      	pop	{r4, r7, pc}

0800a02a <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a02a:	b480      	push	{r7}
 800a02c:	b083      	sub	sp, #12
 800a02e:	af00      	add	r7, sp, #0
 800a030:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a032:	687b      	ldr	r3, [r7, #4]
 800a034:	681b      	ldr	r3, [r3, #0]
 800a036:	1d1a      	adds	r2, r3, #4
 800a038:	687b      	ldr	r3, [r7, #4]
 800a03a:	601a      	str	r2, [r3, #0]
	return *this;
 800a03c:	687b      	ldr	r3, [r7, #4]
      }
 800a03e:	4618      	mov	r0, r3
 800a040:	370c      	adds	r7, #12
 800a042:	46bd      	mov	sp, r7
 800a044:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a048:	4770      	bx	lr

0800a04a <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a04a:	b480      	push	{r7}
 800a04c:	b083      	sub	sp, #12
 800a04e:	af00      	add	r7, sp, #0
 800a050:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a052:	687b      	ldr	r3, [r7, #4]
 800a054:	681b      	ldr	r3, [r3, #0]
 800a056:	4618      	mov	r0, r3
 800a058:	370c      	adds	r7, #12
 800a05a:	46bd      	mov	sp, r7
 800a05c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a060:	4770      	bx	lr

0800a062 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a062:	b5b0      	push	{r4, r5, r7, lr}
 800a064:	b082      	sub	sp, #8
 800a066:	af00      	add	r7, sp, #0
 800a068:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a06a:	687b      	ldr	r3, [r7, #4]
 800a06c:	681c      	ldr	r4, [r3, #0]
 800a06e:	687b      	ldr	r3, [r7, #4]
 800a070:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a072:	687b      	ldr	r3, [r7, #4]
 800a074:	4618      	mov	r0, r3
 800a076:	f000 fbd4 	bl	800a822 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a07a:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a07c:	461a      	mov	r2, r3
 800a07e:	4629      	mov	r1, r5
 800a080:	4620      	mov	r0, r4
 800a082:	f000 fbd9 	bl	800a838 <_ZSt8_DestroyIPP19Multiply_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a086:	687b      	ldr	r3, [r7, #4]
 800a088:	4618      	mov	r0, r3
 800a08a:	f000 fbb1 	bl	800a7f0 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EED1Ev>
 800a08e:	687b      	ldr	r3, [r7, #4]
 800a090:	4618      	mov	r0, r3
 800a092:	3708      	adds	r7, #8
 800a094:	46bd      	mov	sp, r7
 800a096:	bdb0      	pop	{r4, r5, r7, pc}

0800a098 <_ZNSt6vectorI12sum_operatorSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a098:	b5b0      	push	{r4, r5, r7, lr}
 800a09a:	b082      	sub	sp, #8
 800a09c:	af00      	add	r7, sp, #0
 800a09e:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a0a0:	687b      	ldr	r3, [r7, #4]
 800a0a2:	681c      	ldr	r4, [r3, #0]
 800a0a4:	687b      	ldr	r3, [r7, #4]
 800a0a6:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a0a8:	687b      	ldr	r3, [r7, #4]
 800a0aa:	4618      	mov	r0, r3
 800a0ac:	f000 fbf6 	bl	800a89c <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 800a0b0:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a0b2:	461a      	mov	r2, r3
 800a0b4:	4629      	mov	r1, r5
 800a0b6:	4620      	mov	r0, r4
 800a0b8:	f000 fbfb 	bl	800a8b2 <_ZSt8_DestroyIP12sum_operatorS0_EvT_S2_RSaIT0_E>
      }
 800a0bc:	687b      	ldr	r3, [r7, #4]
 800a0be:	4618      	mov	r0, r3
 800a0c0:	f000 fbd4 	bl	800a86c <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EED1Ev>
 800a0c4:	687b      	ldr	r3, [r7, #4]
 800a0c6:	4618      	mov	r0, r3
 800a0c8:	3708      	adds	r7, #8
 800a0ca:	46bd      	mov	sp, r7
 800a0cc:	bdb0      	pop	{r4, r5, r7, pc}

0800a0ce <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a0ce:	b580      	push	{r7, lr}
 800a0d0:	b084      	sub	sp, #16
 800a0d2:	af00      	add	r7, sp, #0
 800a0d4:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a0d6:	687a      	ldr	r2, [r7, #4]
 800a0d8:	f107 030c 	add.w	r3, r7, #12
 800a0dc:	4611      	mov	r1, r2
 800a0de:	4618      	mov	r0, r3
 800a0e0:	f000 fbf5 	bl	800a8ce <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a0e4:	68fb      	ldr	r3, [r7, #12]
 800a0e6:	4618      	mov	r0, r3
 800a0e8:	3710      	adds	r7, #16
 800a0ea:	46bd      	mov	sp, r7
 800a0ec:	bd80      	pop	{r7, pc}

0800a0ee <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a0ee:	b580      	push	{r7, lr}
 800a0f0:	b084      	sub	sp, #16
 800a0f2:	af00      	add	r7, sp, #0
 800a0f4:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a0f6:	687b      	ldr	r3, [r7, #4]
 800a0f8:	1d1a      	adds	r2, r3, #4
 800a0fa:	f107 030c 	add.w	r3, r7, #12
 800a0fe:	4611      	mov	r1, r2
 800a100:	4618      	mov	r0, r3
 800a102:	f000 fbe4 	bl	800a8ce <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a106:	68fb      	ldr	r3, [r7, #12]
 800a108:	4618      	mov	r0, r3
 800a10a:	3710      	adds	r7, #16
 800a10c:	46bd      	mov	sp, r7
 800a10e:	bd80      	pop	{r7, pc}

0800a110 <_ZN9__gnu_cxxneIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a110:	b590      	push	{r4, r7, lr}
 800a112:	b083      	sub	sp, #12
 800a114:	af00      	add	r7, sp, #0
 800a116:	6078      	str	r0, [r7, #4]
 800a118:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a11a:	6878      	ldr	r0, [r7, #4]
 800a11c:	f000 fbe7 	bl	800a8ee <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a120:	4603      	mov	r3, r0
 800a122:	681c      	ldr	r4, [r3, #0]
 800a124:	6838      	ldr	r0, [r7, #0]
 800a126:	f000 fbe2 	bl	800a8ee <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a12a:	4603      	mov	r3, r0
 800a12c:	681b      	ldr	r3, [r3, #0]
 800a12e:	429c      	cmp	r4, r3
 800a130:	bf14      	ite	ne
 800a132:	2301      	movne	r3, #1
 800a134:	2300      	moveq	r3, #0
 800a136:	b2db      	uxtb	r3, r3
 800a138:	4618      	mov	r0, r3
 800a13a:	370c      	adds	r7, #12
 800a13c:	46bd      	mov	sp, r7
 800a13e:	bd90      	pop	{r4, r7, pc}

0800a140 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a140:	b480      	push	{r7}
 800a142:	b083      	sub	sp, #12
 800a144:	af00      	add	r7, sp, #0
 800a146:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a148:	687b      	ldr	r3, [r7, #4]
 800a14a:	681b      	ldr	r3, [r3, #0]
 800a14c:	1d1a      	adds	r2, r3, #4
 800a14e:	687b      	ldr	r3, [r7, #4]
 800a150:	601a      	str	r2, [r3, #0]
	return *this;
 800a152:	687b      	ldr	r3, [r7, #4]
      }
 800a154:	4618      	mov	r0, r3
 800a156:	370c      	adds	r7, #12
 800a158:	46bd      	mov	sp, r7
 800a15a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a15e:	4770      	bx	lr

0800a160 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a160:	b480      	push	{r7}
 800a162:	b083      	sub	sp, #12
 800a164:	af00      	add	r7, sp, #0
 800a166:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a168:	687b      	ldr	r3, [r7, #4]
 800a16a:	681b      	ldr	r3, [r3, #0]
 800a16c:	4618      	mov	r0, r3
 800a16e:	370c      	adds	r7, #12
 800a170:	46bd      	mov	sp, r7
 800a172:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a176:	4770      	bx	lr

0800a178 <_ZNSt6vectorIP18Compare_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a178:	b5b0      	push	{r4, r5, r7, lr}
 800a17a:	b082      	sub	sp, #8
 800a17c:	af00      	add	r7, sp, #0
 800a17e:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a180:	687b      	ldr	r3, [r7, #4]
 800a182:	681c      	ldr	r4, [r3, #0]
 800a184:	687b      	ldr	r3, [r7, #4]
 800a186:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a188:	687b      	ldr	r3, [r7, #4]
 800a18a:	4618      	mov	r0, r3
 800a18c:	f000 fbdf 	bl	800a94e <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a190:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a192:	461a      	mov	r2, r3
 800a194:	4629      	mov	r1, r5
 800a196:	4620      	mov	r0, r4
 800a198:	f000 fbe4 	bl	800a964 <_ZSt8_DestroyIPP18Compare_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a19c:	687b      	ldr	r3, [r7, #4]
 800a19e:	4618      	mov	r0, r3
 800a1a0:	f000 fbbc 	bl	800a91c <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EED1Ev>
 800a1a4:	687b      	ldr	r3, [r7, #4]
 800a1a6:	4618      	mov	r0, r3
 800a1a8:	3708      	adds	r7, #8
 800a1aa:	46bd      	mov	sp, r7
 800a1ac:	bdb0      	pop	{r4, r5, r7, pc}

0800a1ae <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a1ae:	b580      	push	{r7, lr}
 800a1b0:	b084      	sub	sp, #16
 800a1b2:	af00      	add	r7, sp, #0
 800a1b4:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a1b6:	687a      	ldr	r2, [r7, #4]
 800a1b8:	f107 030c 	add.w	r3, r7, #12
 800a1bc:	4611      	mov	r1, r2
 800a1be:	4618      	mov	r0, r3
 800a1c0:	f000 fbde 	bl	800a980 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a1c4:	68fb      	ldr	r3, [r7, #12]
 800a1c6:	4618      	mov	r0, r3
 800a1c8:	3710      	adds	r7, #16
 800a1ca:	46bd      	mov	sp, r7
 800a1cc:	bd80      	pop	{r7, pc}

0800a1ce <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a1ce:	b580      	push	{r7, lr}
 800a1d0:	b084      	sub	sp, #16
 800a1d2:	af00      	add	r7, sp, #0
 800a1d4:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a1d6:	687b      	ldr	r3, [r7, #4]
 800a1d8:	1d1a      	adds	r2, r3, #4
 800a1da:	f107 030c 	add.w	r3, r7, #12
 800a1de:	4611      	mov	r1, r2
 800a1e0:	4618      	mov	r0, r3
 800a1e2:	f000 fbcd 	bl	800a980 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a1e6:	68fb      	ldr	r3, [r7, #12]
 800a1e8:	4618      	mov	r0, r3
 800a1ea:	3710      	adds	r7, #16
 800a1ec:	46bd      	mov	sp, r7
 800a1ee:	bd80      	pop	{r7, pc}

0800a1f0 <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a1f0:	b590      	push	{r4, r7, lr}
 800a1f2:	b083      	sub	sp, #12
 800a1f4:	af00      	add	r7, sp, #0
 800a1f6:	6078      	str	r0, [r7, #4]
 800a1f8:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a1fa:	6878      	ldr	r0, [r7, #4]
 800a1fc:	f000 fbd0 	bl	800a9a0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a200:	4603      	mov	r3, r0
 800a202:	681c      	ldr	r4, [r3, #0]
 800a204:	6838      	ldr	r0, [r7, #0]
 800a206:	f000 fbcb 	bl	800a9a0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a20a:	4603      	mov	r3, r0
 800a20c:	681b      	ldr	r3, [r3, #0]
 800a20e:	429c      	cmp	r4, r3
 800a210:	bf14      	ite	ne
 800a212:	2301      	movne	r3, #1
 800a214:	2300      	moveq	r3, #0
 800a216:	b2db      	uxtb	r3, r3
 800a218:	4618      	mov	r0, r3
 800a21a:	370c      	adds	r7, #12
 800a21c:	46bd      	mov	sp, r7
 800a21e:	bd90      	pop	{r4, r7, pc}

0800a220 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a220:	b480      	push	{r7}
 800a222:	b083      	sub	sp, #12
 800a224:	af00      	add	r7, sp, #0
 800a226:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a228:	687b      	ldr	r3, [r7, #4]
 800a22a:	681b      	ldr	r3, [r3, #0]
 800a22c:	1d1a      	adds	r2, r3, #4
 800a22e:	687b      	ldr	r3, [r7, #4]
 800a230:	601a      	str	r2, [r3, #0]
	return *this;
 800a232:	687b      	ldr	r3, [r7, #4]
      }
 800a234:	4618      	mov	r0, r3
 800a236:	370c      	adds	r7, #12
 800a238:	46bd      	mov	sp, r7
 800a23a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a23e:	4770      	bx	lr

0800a240 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a240:	b480      	push	{r7}
 800a242:	b083      	sub	sp, #12
 800a244:	af00      	add	r7, sp, #0
 800a246:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a248:	687b      	ldr	r3, [r7, #4]
 800a24a:	681b      	ldr	r3, [r3, #0]
 800a24c:	4618      	mov	r0, r3
 800a24e:	370c      	adds	r7, #12
 800a250:	46bd      	mov	sp, r7
 800a252:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a256:	4770      	bx	lr

0800a258 <_ZNSt6vectorIP14And_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a258:	b5b0      	push	{r4, r5, r7, lr}
 800a25a:	b082      	sub	sp, #8
 800a25c:	af00      	add	r7, sp, #0
 800a25e:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a260:	687b      	ldr	r3, [r7, #4]
 800a262:	681c      	ldr	r4, [r3, #0]
 800a264:	687b      	ldr	r3, [r7, #4]
 800a266:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a268:	687b      	ldr	r3, [r7, #4]
 800a26a:	4618      	mov	r0, r3
 800a26c:	f000 fbc8 	bl	800aa00 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a270:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a272:	461a      	mov	r2, r3
 800a274:	4629      	mov	r1, r5
 800a276:	4620      	mov	r0, r4
 800a278:	f000 fbcd 	bl	800aa16 <_ZSt8_DestroyIPP14And_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a27c:	687b      	ldr	r3, [r7, #4]
 800a27e:	4618      	mov	r0, r3
 800a280:	f000 fba5 	bl	800a9ce <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EED1Ev>
 800a284:	687b      	ldr	r3, [r7, #4]
 800a286:	4618      	mov	r0, r3
 800a288:	3708      	adds	r7, #8
 800a28a:	46bd      	mov	sp, r7
 800a28c:	bdb0      	pop	{r4, r5, r7, pc}

0800a28e <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a28e:	b580      	push	{r7, lr}
 800a290:	b084      	sub	sp, #16
 800a292:	af00      	add	r7, sp, #0
 800a294:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a296:	687a      	ldr	r2, [r7, #4]
 800a298:	f107 030c 	add.w	r3, r7, #12
 800a29c:	4611      	mov	r1, r2
 800a29e:	4618      	mov	r0, r3
 800a2a0:	f000 fbc7 	bl	800aa32 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a2a4:	68fb      	ldr	r3, [r7, #12]
 800a2a6:	4618      	mov	r0, r3
 800a2a8:	3710      	adds	r7, #16
 800a2aa:	46bd      	mov	sp, r7
 800a2ac:	bd80      	pop	{r7, pc}

0800a2ae <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a2ae:	b580      	push	{r7, lr}
 800a2b0:	b084      	sub	sp, #16
 800a2b2:	af00      	add	r7, sp, #0
 800a2b4:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a2b6:	687b      	ldr	r3, [r7, #4]
 800a2b8:	1d1a      	adds	r2, r3, #4
 800a2ba:	f107 030c 	add.w	r3, r7, #12
 800a2be:	4611      	mov	r1, r2
 800a2c0:	4618      	mov	r0, r3
 800a2c2:	f000 fbb6 	bl	800aa32 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a2c6:	68fb      	ldr	r3, [r7, #12]
 800a2c8:	4618      	mov	r0, r3
 800a2ca:	3710      	adds	r7, #16
 800a2cc:	46bd      	mov	sp, r7
 800a2ce:	bd80      	pop	{r7, pc}

0800a2d0 <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a2d0:	b590      	push	{r4, r7, lr}
 800a2d2:	b083      	sub	sp, #12
 800a2d4:	af00      	add	r7, sp, #0
 800a2d6:	6078      	str	r0, [r7, #4]
 800a2d8:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a2da:	6878      	ldr	r0, [r7, #4]
 800a2dc:	f000 fbb9 	bl	800aa52 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a2e0:	4603      	mov	r3, r0
 800a2e2:	681c      	ldr	r4, [r3, #0]
 800a2e4:	6838      	ldr	r0, [r7, #0]
 800a2e6:	f000 fbb4 	bl	800aa52 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a2ea:	4603      	mov	r3, r0
 800a2ec:	681b      	ldr	r3, [r3, #0]
 800a2ee:	429c      	cmp	r4, r3
 800a2f0:	bf14      	ite	ne
 800a2f2:	2301      	movne	r3, #1
 800a2f4:	2300      	moveq	r3, #0
 800a2f6:	b2db      	uxtb	r3, r3
 800a2f8:	4618      	mov	r0, r3
 800a2fa:	370c      	adds	r7, #12
 800a2fc:	46bd      	mov	sp, r7
 800a2fe:	bd90      	pop	{r4, r7, pc}

0800a300 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a300:	b480      	push	{r7}
 800a302:	b083      	sub	sp, #12
 800a304:	af00      	add	r7, sp, #0
 800a306:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a308:	687b      	ldr	r3, [r7, #4]
 800a30a:	681b      	ldr	r3, [r3, #0]
 800a30c:	1d1a      	adds	r2, r3, #4
 800a30e:	687b      	ldr	r3, [r7, #4]
 800a310:	601a      	str	r2, [r3, #0]
	return *this;
 800a312:	687b      	ldr	r3, [r7, #4]
      }
 800a314:	4618      	mov	r0, r3
 800a316:	370c      	adds	r7, #12
 800a318:	46bd      	mov	sp, r7
 800a31a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a31e:	4770      	bx	lr

0800a320 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a320:	b480      	push	{r7}
 800a322:	b083      	sub	sp, #12
 800a324:	af00      	add	r7, sp, #0
 800a326:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a328:	687b      	ldr	r3, [r7, #4]
 800a32a:	681b      	ldr	r3, [r3, #0]
 800a32c:	4618      	mov	r0, r3
 800a32e:	370c      	adds	r7, #12
 800a330:	46bd      	mov	sp, r7
 800a332:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a336:	4770      	bx	lr

0800a338 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>:
      void _M_reset()
 800a338:	b580      	push	{r7, lr}
 800a33a:	b082      	sub	sp, #8
 800a33c:	af00      	add	r7, sp, #0
 800a33e:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 800a340:	6878      	ldr	r0, [r7, #4]
 800a342:	f000 fecb 	bl	800b0dc <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEv>
	_M_index = variant_npos;
 800a346:	687b      	ldr	r3, [r7, #4]
 800a348:	22ff      	movs	r2, #255	; 0xff
 800a34a:	761a      	strb	r2, [r3, #24]
      }
 800a34c:	bf00      	nop
 800a34e:	3708      	adds	r7, #8
 800a350:	46bd      	mov	sp, r7
 800a352:	bd80      	pop	{r7, pc}

0800a354 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a354:	b580      	push	{r7, lr}
 800a356:	b082      	sub	sp, #8
 800a358:	af00      	add	r7, sp, #0
 800a35a:	7138      	strb	r0, [r7, #4]
 800a35c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a35e:	6838      	ldr	r0, [r7, #0]
 800a360:	f000 ff05 	bl	800b16e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a364:	4603      	mov	r3, r0
 800a366:	4618      	mov	r0, r3
 800a368:	f000 ff0c 	bl	800b184 <_ZNRSt8__detail9__variant14_UninitializedIP8VariableLb1EE6_M_getEv>
 800a36c:	4603      	mov	r3, r0
 800a36e:	4618      	mov	r0, r3
 800a370:	3708      	adds	r7, #8
 800a372:	46bd      	mov	sp, r7
 800a374:	bd80      	pop	{r7, pc}

0800a376 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a376:	b590      	push	{r4, r7, lr}
 800a378:	b083      	sub	sp, #12
 800a37a:	af00      	add	r7, sp, #0
 800a37c:	7138      	strb	r0, [r7, #4]
 800a37e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a380:	6838      	ldr	r0, [r7, #0]
 800a382:	f000 fee9 	bl	800b158 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a386:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a388:	4619      	mov	r1, r3
 800a38a:	4620      	mov	r0, r4
 800a38c:	f7ff ffe2 	bl	800a354 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a390:	4603      	mov	r3, r0
    }
 800a392:	4618      	mov	r0, r3
 800a394:	370c      	adds	r7, #12
 800a396:	46bd      	mov	sp, r7
 800a398:	bd90      	pop	{r4, r7, pc}

0800a39a <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a39a:	b590      	push	{r4, r7, lr}
 800a39c:	b083      	sub	sp, #12
 800a39e:	af00      	add	r7, sp, #0
 800a3a0:	7138      	strb	r0, [r7, #4]
 800a3a2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a3a4:	6838      	ldr	r0, [r7, #0]
 800a3a6:	f000 fecc 	bl	800b142 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a3aa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a3ac:	4619      	mov	r1, r3
 800a3ae:	4620      	mov	r0, r4
 800a3b0:	f7ff ffe1 	bl	800a376 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a3b4:	4603      	mov	r3, r0
    }
 800a3b6:	4618      	mov	r0, r3
 800a3b8:	370c      	adds	r7, #12
 800a3ba:	46bd      	mov	sp, r7
 800a3bc:	bd90      	pop	{r4, r7, pc}

0800a3be <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a3be:	b590      	push	{r4, r7, lr}
 800a3c0:	b083      	sub	sp, #12
 800a3c2:	af00      	add	r7, sp, #0
 800a3c4:	7138      	strb	r0, [r7, #4]
 800a3c6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a3c8:	6838      	ldr	r0, [r7, #0]
 800a3ca:	f000 feaf 	bl	800b12c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a3ce:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a3d0:	4619      	mov	r1, r3
 800a3d2:	4620      	mov	r0, r4
 800a3d4:	f7ff ffe1 	bl	800a39a <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a3d8:	4603      	mov	r3, r0
    }
 800a3da:	4618      	mov	r0, r3
 800a3dc:	370c      	adds	r7, #12
 800a3de:	46bd      	mov	sp, r7
 800a3e0:	bd90      	pop	{r4, r7, pc}

0800a3e2 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a3e2:	b590      	push	{r4, r7, lr}
 800a3e4:	b083      	sub	sp, #12
 800a3e6:	af00      	add	r7, sp, #0
 800a3e8:	7138      	strb	r0, [r7, #4]
 800a3ea:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a3ec:	6838      	ldr	r0, [r7, #0]
 800a3ee:	f000 fe92 	bl	800b116 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a3f2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a3f4:	4619      	mov	r1, r3
 800a3f6:	4620      	mov	r0, r4
 800a3f8:	f7ff ffe1 	bl	800a3be <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a3fc:	4603      	mov	r3, r0
    }
 800a3fe:	4618      	mov	r0, r3
 800a400:	370c      	adds	r7, #12
 800a402:	46bd      	mov	sp, r7
 800a404:	bd90      	pop	{r4, r7, pc}

0800a406 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a406:	b590      	push	{r4, r7, lr}
 800a408:	b083      	sub	sp, #12
 800a40a:	af00      	add	r7, sp, #0
 800a40c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a40e:	6878      	ldr	r0, [r7, #4]
 800a410:	f000 fe76 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800a414:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a416:	4619      	mov	r1, r3
 800a418:	4620      	mov	r0, r4
 800a41a:	f7ff ffe2 	bl	800a3e2 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a41e:	4603      	mov	r3, r0
    }
 800a420:	4618      	mov	r0, r3
 800a422:	370c      	adds	r7, #12
 800a424:	46bd      	mov	sp, r7
 800a426:	bd90      	pop	{r4, r7, pc}

0800a428 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800a428:	b580      	push	{r7, lr}
 800a42a:	b082      	sub	sp, #8
 800a42c:	af00      	add	r7, sp, #0
 800a42e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a430:	6878      	ldr	r0, [r7, #4]
 800a432:	f7ff fd02 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800a436:	4603      	mov	r3, r0
 800a438:	2b04      	cmp	r3, #4
 800a43a:	bf14      	ite	ne
 800a43c:	2301      	movne	r3, #1
 800a43e:	2300      	moveq	r3, #0
 800a440:	b2db      	uxtb	r3, r3
 800a442:	2b00      	cmp	r3, #0
 800a444:	d002      	beq.n	800a44c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a446:	4805      	ldr	r0, [pc, #20]	; (800a45c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800a448:	f7f6 fe13 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a44c:	6878      	ldr	r0, [r7, #4]
 800a44e:	f7ff ffda 	bl	800a406 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800a452:	4603      	mov	r3, r0
    }
 800a454:	4618      	mov	r0, r3
 800a456:	3708      	adds	r7, #8
 800a458:	46bd      	mov	sp, r7
 800a45a:	bd80      	pop	{r7, pc}
 800a45c:	0802726c 	.word	0x0802726c

0800a460 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a460:	b580      	push	{r7, lr}
 800a462:	b082      	sub	sp, #8
 800a464:	af00      	add	r7, sp, #0
 800a466:	7138      	strb	r0, [r7, #4]
 800a468:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a46a:	6838      	ldr	r0, [r7, #0]
 800a46c:	f000 fe95 	bl	800b19a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a470:	4603      	mov	r3, r0
 800a472:	4618      	mov	r0, r3
 800a474:	f7f9 f95b 	bl	800372e <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>
 800a478:	4603      	mov	r3, r0
 800a47a:	4618      	mov	r0, r3
 800a47c:	3708      	adds	r7, #8
 800a47e:	46bd      	mov	sp, r7
 800a480:	bd80      	pop	{r7, pc}

0800a482 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a482:	b590      	push	{r4, r7, lr}
 800a484:	b083      	sub	sp, #12
 800a486:	af00      	add	r7, sp, #0
 800a488:	7138      	strb	r0, [r7, #4]
 800a48a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a48c:	6838      	ldr	r0, [r7, #0]
 800a48e:	f000 fe6e 	bl	800b16e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a492:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a494:	4619      	mov	r1, r3
 800a496:	4620      	mov	r0, r4
 800a498:	f7ff ffe2 	bl	800a460 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a49c:	4603      	mov	r3, r0
    }
 800a49e:	4618      	mov	r0, r3
 800a4a0:	370c      	adds	r7, #12
 800a4a2:	46bd      	mov	sp, r7
 800a4a4:	bd90      	pop	{r4, r7, pc}

0800a4a6 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a4a6:	b590      	push	{r4, r7, lr}
 800a4a8:	b083      	sub	sp, #12
 800a4aa:	af00      	add	r7, sp, #0
 800a4ac:	7138      	strb	r0, [r7, #4]
 800a4ae:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a4b0:	6838      	ldr	r0, [r7, #0]
 800a4b2:	f000 fe51 	bl	800b158 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a4b6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a4b8:	4619      	mov	r1, r3
 800a4ba:	4620      	mov	r0, r4
 800a4bc:	f7ff ffe1 	bl	800a482 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a4c0:	4603      	mov	r3, r0
    }
 800a4c2:	4618      	mov	r0, r3
 800a4c4:	370c      	adds	r7, #12
 800a4c6:	46bd      	mov	sp, r7
 800a4c8:	bd90      	pop	{r4, r7, pc}

0800a4ca <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a4ca:	b590      	push	{r4, r7, lr}
 800a4cc:	b083      	sub	sp, #12
 800a4ce:	af00      	add	r7, sp, #0
 800a4d0:	7138      	strb	r0, [r7, #4]
 800a4d2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a4d4:	6838      	ldr	r0, [r7, #0]
 800a4d6:	f000 fe34 	bl	800b142 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a4da:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a4dc:	4619      	mov	r1, r3
 800a4de:	4620      	mov	r0, r4
 800a4e0:	f7ff ffe1 	bl	800a4a6 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a4e4:	4603      	mov	r3, r0
    }
 800a4e6:	4618      	mov	r0, r3
 800a4e8:	370c      	adds	r7, #12
 800a4ea:	46bd      	mov	sp, r7
 800a4ec:	bd90      	pop	{r4, r7, pc}

0800a4ee <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a4ee:	b590      	push	{r4, r7, lr}
 800a4f0:	b083      	sub	sp, #12
 800a4f2:	af00      	add	r7, sp, #0
 800a4f4:	7138      	strb	r0, [r7, #4]
 800a4f6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a4f8:	6838      	ldr	r0, [r7, #0]
 800a4fa:	f000 fe17 	bl	800b12c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a4fe:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a500:	4619      	mov	r1, r3
 800a502:	4620      	mov	r0, r4
 800a504:	f7ff ffe1 	bl	800a4ca <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a508:	4603      	mov	r3, r0
    }
 800a50a:	4618      	mov	r0, r3
 800a50c:	370c      	adds	r7, #12
 800a50e:	46bd      	mov	sp, r7
 800a510:	bd90      	pop	{r4, r7, pc}

0800a512 <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a512:	b590      	push	{r4, r7, lr}
 800a514:	b083      	sub	sp, #12
 800a516:	af00      	add	r7, sp, #0
 800a518:	7138      	strb	r0, [r7, #4]
 800a51a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a51c:	6838      	ldr	r0, [r7, #0]
 800a51e:	f000 fdfa 	bl	800b116 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a522:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a524:	4619      	mov	r1, r3
 800a526:	4620      	mov	r0, r4
 800a528:	f7ff ffe1 	bl	800a4ee <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a52c:	4603      	mov	r3, r0
    }
 800a52e:	4618      	mov	r0, r3
 800a530:	370c      	adds	r7, #12
 800a532:	46bd      	mov	sp, r7
 800a534:	bd90      	pop	{r4, r7, pc}

0800a536 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a536:	b590      	push	{r4, r7, lr}
 800a538:	b083      	sub	sp, #12
 800a53a:	af00      	add	r7, sp, #0
 800a53c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a53e:	6878      	ldr	r0, [r7, #4]
 800a540:	f000 fdde 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800a544:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a546:	4619      	mov	r1, r3
 800a548:	4620      	mov	r0, r4
 800a54a:	f7ff ffe2 	bl	800a512 <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a54e:	4603      	mov	r3, r0
    }
 800a550:	4618      	mov	r0, r3
 800a552:	370c      	adds	r7, #12
 800a554:	46bd      	mov	sp, r7
 800a556:	bd90      	pop	{r4, r7, pc}

0800a558 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800a558:	b580      	push	{r7, lr}
 800a55a:	b082      	sub	sp, #8
 800a55c:	af00      	add	r7, sp, #0
 800a55e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a560:	6878      	ldr	r0, [r7, #4]
 800a562:	f7ff fc6a 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800a566:	4603      	mov	r3, r0
 800a568:	2b05      	cmp	r3, #5
 800a56a:	bf14      	ite	ne
 800a56c:	2301      	movne	r3, #1
 800a56e:	2300      	moveq	r3, #0
 800a570:	b2db      	uxtb	r3, r3
 800a572:	2b00      	cmp	r3, #0
 800a574:	d002      	beq.n	800a57c <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a576:	4805      	ldr	r0, [pc, #20]	; (800a58c <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800a578:	f7f6 fd7b 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a57c:	6878      	ldr	r0, [r7, #4]
 800a57e:	f7ff ffda 	bl	800a536 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800a582:	4603      	mov	r3, r0
    }
 800a584:	4618      	mov	r0, r3
 800a586:	3708      	adds	r7, #8
 800a588:	46bd      	mov	sp, r7
 800a58a:	bd80      	pop	{r7, pc}
 800a58c:	0802726c 	.word	0x0802726c

0800a590 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a590:	b580      	push	{r7, lr}
 800a592:	b082      	sub	sp, #8
 800a594:	af00      	add	r7, sp, #0
 800a596:	7138      	strb	r0, [r7, #4]
 800a598:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a59a:	6838      	ldr	r0, [r7, #0]
 800a59c:	f000 fe1e 	bl	800b1dc <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10ExpressionEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a5a0:	4603      	mov	r3, r0
 800a5a2:	4618      	mov	r0, r3
 800a5a4:	f000 fe25 	bl	800b1f2 <_ZNRSt8__detail9__variant14_UninitializedIP10ExpressionLb1EE6_M_getEv>
 800a5a8:	4603      	mov	r3, r0
 800a5aa:	4618      	mov	r0, r3
 800a5ac:	3708      	adds	r7, #8
 800a5ae:	46bd      	mov	sp, r7
 800a5b0:	bd80      	pop	{r7, pc}

0800a5b2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a5b2:	b590      	push	{r4, r7, lr}
 800a5b4:	b083      	sub	sp, #12
 800a5b6:	af00      	add	r7, sp, #0
 800a5b8:	7138      	strb	r0, [r7, #4]
 800a5ba:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a5bc:	6838      	ldr	r0, [r7, #0]
 800a5be:	f000 fe02 	bl	800b1c6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a5c2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a5c4:	4619      	mov	r1, r3
 800a5c6:	4620      	mov	r0, r4
 800a5c8:	f7ff ffe2 	bl	800a590 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a5cc:	4603      	mov	r3, r0
    }
 800a5ce:	4618      	mov	r0, r3
 800a5d0:	370c      	adds	r7, #12
 800a5d2:	46bd      	mov	sp, r7
 800a5d4:	bd90      	pop	{r4, r7, pc}

0800a5d6 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a5d6:	b590      	push	{r4, r7, lr}
 800a5d8:	b083      	sub	sp, #12
 800a5da:	af00      	add	r7, sp, #0
 800a5dc:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a5de:	6878      	ldr	r0, [r7, #4]
 800a5e0:	f000 fde6 	bl	800b1b0 <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a5e4:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a5e6:	4619      	mov	r1, r3
 800a5e8:	4620      	mov	r0, r4
 800a5ea:	f7ff ffe2 	bl	800a5b2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a5ee:	4603      	mov	r3, r0
    }
 800a5f0:	4618      	mov	r0, r3
 800a5f2:	370c      	adds	r7, #12
 800a5f4:	46bd      	mov	sp, r7
 800a5f6:	bd90      	pop	{r4, r7, pc}

0800a5f8 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>:
    get(variant<_Types...>& __v)
 800a5f8:	b580      	push	{r7, lr}
 800a5fa:	b082      	sub	sp, #8
 800a5fc:	af00      	add	r7, sp, #0
 800a5fe:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a600:	6878      	ldr	r0, [r7, #4]
 800a602:	f7ff fc67 	bl	8009ed4 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 800a606:	4603      	mov	r3, r0
 800a608:	2b01      	cmp	r3, #1
 800a60a:	bf14      	ite	ne
 800a60c:	2301      	movne	r3, #1
 800a60e:	2300      	moveq	r3, #0
 800a610:	b2db      	uxtb	r3, r3
 800a612:	2b00      	cmp	r3, #0
 800a614:	d002      	beq.n	800a61c <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a616:	4805      	ldr	r0, [pc, #20]	; (800a62c <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x34>)
 800a618:	f7f6 fd2b 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a61c:	6878      	ldr	r0, [r7, #4]
 800a61e:	f7ff ffda 	bl	800a5d6 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 800a622:	4603      	mov	r3, r0
    }
 800a624:	4618      	mov	r0, r3
 800a626:	3708      	adds	r7, #8
 800a628:	46bd      	mov	sp, r7
 800a62a:	bd80      	pop	{r7, pc}
 800a62c:	0802726c 	.word	0x0802726c

0800a630 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a630:	b580      	push	{r7, lr}
 800a632:	b082      	sub	sp, #8
 800a634:	af00      	add	r7, sp, #0
 800a636:	7138      	strb	r0, [r7, #4]
 800a638:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a63a:	6838      	ldr	r0, [r7, #0]
 800a63c:	f000 fdc3 	bl	800b1c6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a640:	4603      	mov	r3, r0
 800a642:	4618      	mov	r0, r3
 800a644:	f000 fde0 	bl	800b208 <_ZNRSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EE6_M_getEv>
 800a648:	4603      	mov	r3, r0
 800a64a:	4618      	mov	r0, r3
 800a64c:	3708      	adds	r7, #8
 800a64e:	46bd      	mov	sp, r7
 800a650:	bd80      	pop	{r7, pc}

0800a652 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a652:	b590      	push	{r4, r7, lr}
 800a654:	b083      	sub	sp, #12
 800a656:	af00      	add	r7, sp, #0
 800a658:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a65a:	6878      	ldr	r0, [r7, #4]
 800a65c:	f000 fda8 	bl	800b1b0 <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a660:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a662:	4619      	mov	r1, r3
 800a664:	4620      	mov	r0, r4
 800a666:	f7ff ffe3 	bl	800a630 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a66a:	4603      	mov	r3, r0
    }
 800a66c:	4618      	mov	r0, r3
 800a66e:	370c      	adds	r7, #12
 800a670:	46bd      	mov	sp, r7
 800a672:	bd90      	pop	{r4, r7, pc}

0800a674 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>:
    get(variant<_Types...>& __v)
 800a674:	b580      	push	{r7, lr}
 800a676:	b082      	sub	sp, #8
 800a678:	af00      	add	r7, sp, #0
 800a67a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a67c:	6878      	ldr	r0, [r7, #4]
 800a67e:	f7ff fc29 	bl	8009ed4 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 800a682:	4603      	mov	r3, r0
 800a684:	2b00      	cmp	r3, #0
 800a686:	bf14      	ite	ne
 800a688:	2301      	movne	r3, #1
 800a68a:	2300      	moveq	r3, #0
 800a68c:	b2db      	uxtb	r3, r3
 800a68e:	2b00      	cmp	r3, #0
 800a690:	d002      	beq.n	800a698 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a692:	4805      	ldr	r0, [pc, #20]	; (800a6a8 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x34>)
 800a694:	f7f6 fced 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a698:	6878      	ldr	r0, [r7, #4]
 800a69a:	f7ff ffda 	bl	800a652 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 800a69e:	4603      	mov	r3, r0
    }
 800a6a0:	4618      	mov	r0, r3
 800a6a2:	3708      	adds	r7, #8
 800a6a4:	46bd      	mov	sp, r7
 800a6a6:	bd80      	pop	{r7, pc}
 800a6a8:	0802726c 	.word	0x0802726c

0800a6ac <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a6ac:	b580      	push	{r7, lr}
 800a6ae:	b082      	sub	sp, #8
 800a6b0:	af00      	add	r7, sp, #0
 800a6b2:	6078      	str	r0, [r7, #4]
 800a6b4:	6878      	ldr	r0, [r7, #4]
 800a6b6:	f000 fdb2 	bl	800b21e <_ZNSaIP16Power_expressionED1Ev>
 800a6ba:	687b      	ldr	r3, [r7, #4]
 800a6bc:	4618      	mov	r0, r3
 800a6be:	3708      	adds	r7, #8
 800a6c0:	46bd      	mov	sp, r7
 800a6c2:	bd80      	pop	{r7, pc}

0800a6c4 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a6c4:	b580      	push	{r7, lr}
 800a6c6:	b082      	sub	sp, #8
 800a6c8:	af00      	add	r7, sp, #0
 800a6ca:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a6cc:	687b      	ldr	r3, [r7, #4]
 800a6ce:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a6d0:	687b      	ldr	r3, [r7, #4]
 800a6d2:	689a      	ldr	r2, [r3, #8]
 800a6d4:	687b      	ldr	r3, [r7, #4]
 800a6d6:	681b      	ldr	r3, [r3, #0]
 800a6d8:	1ad3      	subs	r3, r2, r3
 800a6da:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800a6dc:	461a      	mov	r2, r3
 800a6de:	6878      	ldr	r0, [r7, #4]
 800a6e0:	f000 fda9 	bl	800b236 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800a6e4:	687b      	ldr	r3, [r7, #4]
 800a6e6:	4618      	mov	r0, r3
 800a6e8:	f7ff ffe0 	bl	800a6ac <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implD1Ev>
 800a6ec:	687b      	ldr	r3, [r7, #4]
 800a6ee:	4618      	mov	r0, r3
 800a6f0:	3708      	adds	r7, #8
 800a6f2:	46bd      	mov	sp, r7
 800a6f4:	bd80      	pop	{r7, pc}

0800a6f6 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a6f6:	b480      	push	{r7}
 800a6f8:	b083      	sub	sp, #12
 800a6fa:	af00      	add	r7, sp, #0
 800a6fc:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800a6fe:	687b      	ldr	r3, [r7, #4]
 800a700:	4618      	mov	r0, r3
 800a702:	370c      	adds	r7, #12
 800a704:	46bd      	mov	sp, r7
 800a706:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a70a:	4770      	bx	lr

0800a70c <_ZSt8_DestroyIPP16Power_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800a70c:	b580      	push	{r7, lr}
 800a70e:	b084      	sub	sp, #16
 800a710:	af00      	add	r7, sp, #0
 800a712:	60f8      	str	r0, [r7, #12]
 800a714:	60b9      	str	r1, [r7, #8]
 800a716:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800a718:	68b9      	ldr	r1, [r7, #8]
 800a71a:	68f8      	ldr	r0, [r7, #12]
 800a71c:	f000 fd9e 	bl	800b25c <_ZSt8_DestroyIPP16Power_expressionEvT_S3_>
    }
 800a720:	bf00      	nop
 800a722:	3710      	adds	r7, #16
 800a724:	46bd      	mov	sp, r7
 800a726:	bd80      	pop	{r7, pc}

0800a728 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a728:	b580      	push	{r7, lr}
 800a72a:	b082      	sub	sp, #8
 800a72c:	af00      	add	r7, sp, #0
 800a72e:	6078      	str	r0, [r7, #4]
 800a730:	6878      	ldr	r0, [r7, #4]
 800a732:	f000 fda0 	bl	800b276 <_ZNSaI13mult_operatorED1Ev>
 800a736:	687b      	ldr	r3, [r7, #4]
 800a738:	4618      	mov	r0, r3
 800a73a:	3708      	adds	r7, #8
 800a73c:	46bd      	mov	sp, r7
 800a73e:	bd80      	pop	{r7, pc}

0800a740 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a740:	b580      	push	{r7, lr}
 800a742:	b082      	sub	sp, #8
 800a744:	af00      	add	r7, sp, #0
 800a746:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a748:	687b      	ldr	r3, [r7, #4]
 800a74a:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a74c:	687b      	ldr	r3, [r7, #4]
 800a74e:	689a      	ldr	r2, [r3, #8]
 800a750:	687b      	ldr	r3, [r7, #4]
 800a752:	681b      	ldr	r3, [r3, #0]
 800a754:	1ad3      	subs	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 800a756:	461a      	mov	r2, r3
 800a758:	6878      	ldr	r0, [r7, #4]
 800a75a:	f000 fd98 	bl	800b28e <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>
      }
 800a75e:	687b      	ldr	r3, [r7, #4]
 800a760:	4618      	mov	r0, r3
 800a762:	f7ff ffe1 	bl	800a728 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implD1Ev>
 800a766:	687b      	ldr	r3, [r7, #4]
 800a768:	4618      	mov	r0, r3
 800a76a:	3708      	adds	r7, #8
 800a76c:	46bd      	mov	sp, r7
 800a76e:	bd80      	pop	{r7, pc}

0800a770 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a770:	b480      	push	{r7}
 800a772:	b083      	sub	sp, #12
 800a774:	af00      	add	r7, sp, #0
 800a776:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800a778:	687b      	ldr	r3, [r7, #4]
 800a77a:	4618      	mov	r0, r3
 800a77c:	370c      	adds	r7, #12
 800a77e:	46bd      	mov	sp, r7
 800a780:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a784:	4770      	bx	lr

0800a786 <_ZSt8_DestroyIP13mult_operatorS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800a786:	b580      	push	{r7, lr}
 800a788:	b084      	sub	sp, #16
 800a78a:	af00      	add	r7, sp, #0
 800a78c:	60f8      	str	r0, [r7, #12]
 800a78e:	60b9      	str	r1, [r7, #8]
 800a790:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800a792:	68b9      	ldr	r1, [r7, #8]
 800a794:	68f8      	ldr	r0, [r7, #12]
 800a796:	f000 fd8d 	bl	800b2b4 <_ZSt8_DestroyIP13mult_operatorEvT_S2_>
    }
 800a79a:	bf00      	nop
 800a79c:	3710      	adds	r7, #16
 800a79e:	46bd      	mov	sp, r7
 800a7a0:	bd80      	pop	{r7, pc}

0800a7a2 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800a7a2:	b480      	push	{r7}
 800a7a4:	b083      	sub	sp, #12
 800a7a6:	af00      	add	r7, sp, #0
 800a7a8:	6078      	str	r0, [r7, #4]
 800a7aa:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800a7ac:	683b      	ldr	r3, [r7, #0]
 800a7ae:	681a      	ldr	r2, [r3, #0]
 800a7b0:	687b      	ldr	r3, [r7, #4]
 800a7b2:	601a      	str	r2, [r3, #0]
 800a7b4:	687b      	ldr	r3, [r7, #4]
 800a7b6:	4618      	mov	r0, r3
 800a7b8:	370c      	adds	r7, #12
 800a7ba:	46bd      	mov	sp, r7
 800a7bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7c0:	4770      	bx	lr

0800a7c2 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800a7c2:	b480      	push	{r7}
 800a7c4:	b083      	sub	sp, #12
 800a7c6:	af00      	add	r7, sp, #0
 800a7c8:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800a7ca:	687b      	ldr	r3, [r7, #4]
 800a7cc:	4618      	mov	r0, r3
 800a7ce:	370c      	adds	r7, #12
 800a7d0:	46bd      	mov	sp, r7
 800a7d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7d6:	4770      	bx	lr

0800a7d8 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a7d8:	b580      	push	{r7, lr}
 800a7da:	b082      	sub	sp, #8
 800a7dc:	af00      	add	r7, sp, #0
 800a7de:	6078      	str	r0, [r7, #4]
 800a7e0:	6878      	ldr	r0, [r7, #4]
 800a7e2:	f000 fd74 	bl	800b2ce <_ZNSaIP19Multiply_expressionED1Ev>
 800a7e6:	687b      	ldr	r3, [r7, #4]
 800a7e8:	4618      	mov	r0, r3
 800a7ea:	3708      	adds	r7, #8
 800a7ec:	46bd      	mov	sp, r7
 800a7ee:	bd80      	pop	{r7, pc}

0800a7f0 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a7f0:	b580      	push	{r7, lr}
 800a7f2:	b082      	sub	sp, #8
 800a7f4:	af00      	add	r7, sp, #0
 800a7f6:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a7f8:	687b      	ldr	r3, [r7, #4]
 800a7fa:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a7fc:	687b      	ldr	r3, [r7, #4]
 800a7fe:	689a      	ldr	r2, [r3, #8]
 800a800:	687b      	ldr	r3, [r7, #4]
 800a802:	681b      	ldr	r3, [r3, #0]
 800a804:	1ad3      	subs	r3, r2, r3
 800a806:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800a808:	461a      	mov	r2, r3
 800a80a:	6878      	ldr	r0, [r7, #4]
 800a80c:	f000 fd6b 	bl	800b2e6 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800a810:	687b      	ldr	r3, [r7, #4]
 800a812:	4618      	mov	r0, r3
 800a814:	f7ff ffe0 	bl	800a7d8 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implD1Ev>
 800a818:	687b      	ldr	r3, [r7, #4]
 800a81a:	4618      	mov	r0, r3
 800a81c:	3708      	adds	r7, #8
 800a81e:	46bd      	mov	sp, r7
 800a820:	bd80      	pop	{r7, pc}

0800a822 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a822:	b480      	push	{r7}
 800a824:	b083      	sub	sp, #12
 800a826:	af00      	add	r7, sp, #0
 800a828:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800a82a:	687b      	ldr	r3, [r7, #4]
 800a82c:	4618      	mov	r0, r3
 800a82e:	370c      	adds	r7, #12
 800a830:	46bd      	mov	sp, r7
 800a832:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a836:	4770      	bx	lr

0800a838 <_ZSt8_DestroyIPP19Multiply_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800a838:	b580      	push	{r7, lr}
 800a83a:	b084      	sub	sp, #16
 800a83c:	af00      	add	r7, sp, #0
 800a83e:	60f8      	str	r0, [r7, #12]
 800a840:	60b9      	str	r1, [r7, #8]
 800a842:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800a844:	68b9      	ldr	r1, [r7, #8]
 800a846:	68f8      	ldr	r0, [r7, #12]
 800a848:	f000 fd60 	bl	800b30c <_ZSt8_DestroyIPP19Multiply_expressionEvT_S3_>
    }
 800a84c:	bf00      	nop
 800a84e:	3710      	adds	r7, #16
 800a850:	46bd      	mov	sp, r7
 800a852:	bd80      	pop	{r7, pc}

0800a854 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a854:	b580      	push	{r7, lr}
 800a856:	b082      	sub	sp, #8
 800a858:	af00      	add	r7, sp, #0
 800a85a:	6078      	str	r0, [r7, #4]
 800a85c:	6878      	ldr	r0, [r7, #4]
 800a85e:	f000 fd62 	bl	800b326 <_ZNSaI12sum_operatorED1Ev>
 800a862:	687b      	ldr	r3, [r7, #4]
 800a864:	4618      	mov	r0, r3
 800a866:	3708      	adds	r7, #8
 800a868:	46bd      	mov	sp, r7
 800a86a:	bd80      	pop	{r7, pc}

0800a86c <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a86c:	b580      	push	{r7, lr}
 800a86e:	b082      	sub	sp, #8
 800a870:	af00      	add	r7, sp, #0
 800a872:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a874:	687b      	ldr	r3, [r7, #4]
 800a876:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a878:	687b      	ldr	r3, [r7, #4]
 800a87a:	689a      	ldr	r2, [r3, #8]
 800a87c:	687b      	ldr	r3, [r7, #4]
 800a87e:	681b      	ldr	r3, [r3, #0]
 800a880:	1ad3      	subs	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 800a882:	461a      	mov	r2, r3
 800a884:	6878      	ldr	r0, [r7, #4]
 800a886:	f000 fd5a 	bl	800b33e <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>
      }
 800a88a:	687b      	ldr	r3, [r7, #4]
 800a88c:	4618      	mov	r0, r3
 800a88e:	f7ff ffe1 	bl	800a854 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implD1Ev>
 800a892:	687b      	ldr	r3, [r7, #4]
 800a894:	4618      	mov	r0, r3
 800a896:	3708      	adds	r7, #8
 800a898:	46bd      	mov	sp, r7
 800a89a:	bd80      	pop	{r7, pc}

0800a89c <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a89c:	b480      	push	{r7}
 800a89e:	b083      	sub	sp, #12
 800a8a0:	af00      	add	r7, sp, #0
 800a8a2:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800a8a4:	687b      	ldr	r3, [r7, #4]
 800a8a6:	4618      	mov	r0, r3
 800a8a8:	370c      	adds	r7, #12
 800a8aa:	46bd      	mov	sp, r7
 800a8ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8b0:	4770      	bx	lr

0800a8b2 <_ZSt8_DestroyIP12sum_operatorS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800a8b2:	b580      	push	{r7, lr}
 800a8b4:	b084      	sub	sp, #16
 800a8b6:	af00      	add	r7, sp, #0
 800a8b8:	60f8      	str	r0, [r7, #12]
 800a8ba:	60b9      	str	r1, [r7, #8]
 800a8bc:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800a8be:	68b9      	ldr	r1, [r7, #8]
 800a8c0:	68f8      	ldr	r0, [r7, #12]
 800a8c2:	f000 fd4f 	bl	800b364 <_ZSt8_DestroyIP12sum_operatorEvT_S2_>
    }
 800a8c6:	bf00      	nop
 800a8c8:	3710      	adds	r7, #16
 800a8ca:	46bd      	mov	sp, r7
 800a8cc:	bd80      	pop	{r7, pc}

0800a8ce <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800a8ce:	b480      	push	{r7}
 800a8d0:	b083      	sub	sp, #12
 800a8d2:	af00      	add	r7, sp, #0
 800a8d4:	6078      	str	r0, [r7, #4]
 800a8d6:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800a8d8:	683b      	ldr	r3, [r7, #0]
 800a8da:	681a      	ldr	r2, [r3, #0]
 800a8dc:	687b      	ldr	r3, [r7, #4]
 800a8de:	601a      	str	r2, [r3, #0]
 800a8e0:	687b      	ldr	r3, [r7, #4]
 800a8e2:	4618      	mov	r0, r3
 800a8e4:	370c      	adds	r7, #12
 800a8e6:	46bd      	mov	sp, r7
 800a8e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8ec:	4770      	bx	lr

0800a8ee <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800a8ee:	b480      	push	{r7}
 800a8f0:	b083      	sub	sp, #12
 800a8f2:	af00      	add	r7, sp, #0
 800a8f4:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800a8f6:	687b      	ldr	r3, [r7, #4]
 800a8f8:	4618      	mov	r0, r3
 800a8fa:	370c      	adds	r7, #12
 800a8fc:	46bd      	mov	sp, r7
 800a8fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a902:	4770      	bx	lr

0800a904 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a904:	b580      	push	{r7, lr}
 800a906:	b082      	sub	sp, #8
 800a908:	af00      	add	r7, sp, #0
 800a90a:	6078      	str	r0, [r7, #4]
 800a90c:	6878      	ldr	r0, [r7, #4]
 800a90e:	f000 fd36 	bl	800b37e <_ZNSaIP18Compare_expressionED1Ev>
 800a912:	687b      	ldr	r3, [r7, #4]
 800a914:	4618      	mov	r0, r3
 800a916:	3708      	adds	r7, #8
 800a918:	46bd      	mov	sp, r7
 800a91a:	bd80      	pop	{r7, pc}

0800a91c <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a91c:	b580      	push	{r7, lr}
 800a91e:	b082      	sub	sp, #8
 800a920:	af00      	add	r7, sp, #0
 800a922:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a924:	687b      	ldr	r3, [r7, #4]
 800a926:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a928:	687b      	ldr	r3, [r7, #4]
 800a92a:	689a      	ldr	r2, [r3, #8]
 800a92c:	687b      	ldr	r3, [r7, #4]
 800a92e:	681b      	ldr	r3, [r3, #0]
 800a930:	1ad3      	subs	r3, r2, r3
 800a932:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800a934:	461a      	mov	r2, r3
 800a936:	6878      	ldr	r0, [r7, #4]
 800a938:	f000 fd2d 	bl	800b396 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800a93c:	687b      	ldr	r3, [r7, #4]
 800a93e:	4618      	mov	r0, r3
 800a940:	f7ff ffe0 	bl	800a904 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implD1Ev>
 800a944:	687b      	ldr	r3, [r7, #4]
 800a946:	4618      	mov	r0, r3
 800a948:	3708      	adds	r7, #8
 800a94a:	46bd      	mov	sp, r7
 800a94c:	bd80      	pop	{r7, pc}

0800a94e <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a94e:	b480      	push	{r7}
 800a950:	b083      	sub	sp, #12
 800a952:	af00      	add	r7, sp, #0
 800a954:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800a956:	687b      	ldr	r3, [r7, #4]
 800a958:	4618      	mov	r0, r3
 800a95a:	370c      	adds	r7, #12
 800a95c:	46bd      	mov	sp, r7
 800a95e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a962:	4770      	bx	lr

0800a964 <_ZSt8_DestroyIPP18Compare_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800a964:	b580      	push	{r7, lr}
 800a966:	b084      	sub	sp, #16
 800a968:	af00      	add	r7, sp, #0
 800a96a:	60f8      	str	r0, [r7, #12]
 800a96c:	60b9      	str	r1, [r7, #8]
 800a96e:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800a970:	68b9      	ldr	r1, [r7, #8]
 800a972:	68f8      	ldr	r0, [r7, #12]
 800a974:	f000 fd22 	bl	800b3bc <_ZSt8_DestroyIPP18Compare_expressionEvT_S3_>
    }
 800a978:	bf00      	nop
 800a97a:	3710      	adds	r7, #16
 800a97c:	46bd      	mov	sp, r7
 800a97e:	bd80      	pop	{r7, pc}

0800a980 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800a980:	b480      	push	{r7}
 800a982:	b083      	sub	sp, #12
 800a984:	af00      	add	r7, sp, #0
 800a986:	6078      	str	r0, [r7, #4]
 800a988:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800a98a:	683b      	ldr	r3, [r7, #0]
 800a98c:	681a      	ldr	r2, [r3, #0]
 800a98e:	687b      	ldr	r3, [r7, #4]
 800a990:	601a      	str	r2, [r3, #0]
 800a992:	687b      	ldr	r3, [r7, #4]
 800a994:	4618      	mov	r0, r3
 800a996:	370c      	adds	r7, #12
 800a998:	46bd      	mov	sp, r7
 800a99a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a99e:	4770      	bx	lr

0800a9a0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800a9a0:	b480      	push	{r7}
 800a9a2:	b083      	sub	sp, #12
 800a9a4:	af00      	add	r7, sp, #0
 800a9a6:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800a9a8:	687b      	ldr	r3, [r7, #4]
 800a9aa:	4618      	mov	r0, r3
 800a9ac:	370c      	adds	r7, #12
 800a9ae:	46bd      	mov	sp, r7
 800a9b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9b4:	4770      	bx	lr

0800a9b6 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a9b6:	b580      	push	{r7, lr}
 800a9b8:	b082      	sub	sp, #8
 800a9ba:	af00      	add	r7, sp, #0
 800a9bc:	6078      	str	r0, [r7, #4]
 800a9be:	6878      	ldr	r0, [r7, #4]
 800a9c0:	f000 fd09 	bl	800b3d6 <_ZNSaIP14And_expressionED1Ev>
 800a9c4:	687b      	ldr	r3, [r7, #4]
 800a9c6:	4618      	mov	r0, r3
 800a9c8:	3708      	adds	r7, #8
 800a9ca:	46bd      	mov	sp, r7
 800a9cc:	bd80      	pop	{r7, pc}

0800a9ce <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a9ce:	b580      	push	{r7, lr}
 800a9d0:	b082      	sub	sp, #8
 800a9d2:	af00      	add	r7, sp, #0
 800a9d4:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a9d6:	687b      	ldr	r3, [r7, #4]
 800a9d8:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a9da:	687b      	ldr	r3, [r7, #4]
 800a9dc:	689a      	ldr	r2, [r3, #8]
 800a9de:	687b      	ldr	r3, [r7, #4]
 800a9e0:	681b      	ldr	r3, [r3, #0]
 800a9e2:	1ad3      	subs	r3, r2, r3
 800a9e4:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800a9e6:	461a      	mov	r2, r3
 800a9e8:	6878      	ldr	r0, [r7, #4]
 800a9ea:	f000 fd00 	bl	800b3ee <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800a9ee:	687b      	ldr	r3, [r7, #4]
 800a9f0:	4618      	mov	r0, r3
 800a9f2:	f7ff ffe0 	bl	800a9b6 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implD1Ev>
 800a9f6:	687b      	ldr	r3, [r7, #4]
 800a9f8:	4618      	mov	r0, r3
 800a9fa:	3708      	adds	r7, #8
 800a9fc:	46bd      	mov	sp, r7
 800a9fe:	bd80      	pop	{r7, pc}

0800aa00 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800aa00:	b480      	push	{r7}
 800aa02:	b083      	sub	sp, #12
 800aa04:	af00      	add	r7, sp, #0
 800aa06:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800aa08:	687b      	ldr	r3, [r7, #4]
 800aa0a:	4618      	mov	r0, r3
 800aa0c:	370c      	adds	r7, #12
 800aa0e:	46bd      	mov	sp, r7
 800aa10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa14:	4770      	bx	lr

0800aa16 <_ZSt8_DestroyIPP14And_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800aa16:	b580      	push	{r7, lr}
 800aa18:	b084      	sub	sp, #16
 800aa1a:	af00      	add	r7, sp, #0
 800aa1c:	60f8      	str	r0, [r7, #12]
 800aa1e:	60b9      	str	r1, [r7, #8]
 800aa20:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800aa22:	68b9      	ldr	r1, [r7, #8]
 800aa24:	68f8      	ldr	r0, [r7, #12]
 800aa26:	f000 fcf5 	bl	800b414 <_ZSt8_DestroyIPP14And_expressionEvT_S3_>
    }
 800aa2a:	bf00      	nop
 800aa2c:	3710      	adds	r7, #16
 800aa2e:	46bd      	mov	sp, r7
 800aa30:	bd80      	pop	{r7, pc}

0800aa32 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800aa32:	b480      	push	{r7}
 800aa34:	b083      	sub	sp, #12
 800aa36:	af00      	add	r7, sp, #0
 800aa38:	6078      	str	r0, [r7, #4]
 800aa3a:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800aa3c:	683b      	ldr	r3, [r7, #0]
 800aa3e:	681a      	ldr	r2, [r3, #0]
 800aa40:	687b      	ldr	r3, [r7, #4]
 800aa42:	601a      	str	r2, [r3, #0]
 800aa44:	687b      	ldr	r3, [r7, #4]
 800aa46:	4618      	mov	r0, r3
 800aa48:	370c      	adds	r7, #12
 800aa4a:	46bd      	mov	sp, r7
 800aa4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa50:	4770      	bx	lr

0800aa52 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800aa52:	b480      	push	{r7}
 800aa54:	b083      	sub	sp, #12
 800aa56:	af00      	add	r7, sp, #0
 800aa58:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800aa5a:	687b      	ldr	r3, [r7, #4]
 800aa5c:	4618      	mov	r0, r3
 800aa5e:	370c      	adds	r7, #12
 800aa60:	46bd      	mov	sp, r7
 800aa62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa66:	4770      	bx	lr

0800aa68 <_ZSt14__variant_castIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callERNSt8__detail9__variant16_Variant_storageILb0EJbifS5_S7_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800aa68:	b480      	push	{r7}
 800aa6a:	b083      	sub	sp, #12
 800aa6c:	af00      	add	r7, sp, #0
 800aa6e:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 800aa70:	687b      	ldr	r3, [r7, #4]
    }
 800aa72:	4618      	mov	r0, r3
 800aa74:	370c      	adds	r7, #12
 800aa76:	46bd      	mov	sp, r7
 800aa78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa7c:	4770      	bx	lr

0800aa7e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800aa7e:	b580      	push	{r7, lr}
 800aa80:	b082      	sub	sp, #8
 800aa82:	af00      	add	r7, sp, #0
 800aa84:	7138      	strb	r0, [r7, #4]
 800aa86:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800aa88:	6838      	ldr	r0, [r7, #0]
 800aa8a:	f000 fb44 	bl	800b116 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800aa8e:	4603      	mov	r3, r0
 800aa90:	4618      	mov	r0, r3
 800aa92:	f7f7 fa11 	bl	8001eb8 <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800aa96:	4603      	mov	r3, r0
 800aa98:	4618      	mov	r0, r3
 800aa9a:	3708      	adds	r7, #8
 800aa9c:	46bd      	mov	sp, r7
 800aa9e:	bd80      	pop	{r7, pc}

0800aaa0 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800aaa0:	b590      	push	{r4, r7, lr}
 800aaa2:	b083      	sub	sp, #12
 800aaa4:	af00      	add	r7, sp, #0
 800aaa6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800aaa8:	6878      	ldr	r0, [r7, #4]
 800aaaa:	f000 fb29 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aaae:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800aab0:	4619      	mov	r1, r3
 800aab2:	4620      	mov	r0, r4
 800aab4:	f7ff ffe3 	bl	800aa7e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800aab8:	4603      	mov	r3, r0
    }
 800aaba:	4618      	mov	r0, r3
 800aabc:	370c      	adds	r7, #12
 800aabe:	46bd      	mov	sp, r7
 800aac0:	bd90      	pop	{r4, r7, pc}

0800aac2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800aac2:	b580      	push	{r7, lr}
 800aac4:	b082      	sub	sp, #8
 800aac6:	af00      	add	r7, sp, #0
 800aac8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800aaca:	6878      	ldr	r0, [r7, #4]
 800aacc:	f000 fb18 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aad0:	4603      	mov	r3, r0
 800aad2:	4618      	mov	r0, r3
 800aad4:	f7ff ffe4 	bl	800aaa0 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800aad8:	4603      	mov	r3, r0
	}
 800aada:	4618      	mov	r0, r3
 800aadc:	3708      	adds	r7, #8
 800aade:	46bd      	mov	sp, r7
 800aae0:	bd80      	pop	{r7, pc}

0800aae2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800aae2:	b5b0      	push	{r4, r5, r7, lr}
 800aae4:	b082      	sub	sp, #8
 800aae6:	af00      	add	r7, sp, #0
 800aae8:	6078      	str	r0, [r7, #4]
 800aaea:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800aaec:	6878      	ldr	r0, [r7, #4]
 800aaee:	f000 fc9e 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800aaf2:	4604      	mov	r4, r0
 800aaf4:	6838      	ldr	r0, [r7, #0]
 800aaf6:	f000 fb03 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aafa:	4603      	mov	r3, r0
 800aafc:	4618      	mov	r0, r3
 800aafe:	f7ff ffe0 	bl	800aac2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>
 800ab02:	4603      	mov	r3, r0
 800ab04:	4619      	mov	r1, r3
 800ab06:	4620      	mov	r0, r4
 800ab08:	f000 fc9c 	bl	800b444 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800ab0c:	462b      	mov	r3, r5
      }
 800ab0e:	4618      	mov	r0, r3
 800ab10:	3708      	adds	r7, #8
 800ab12:	46bd      	mov	sp, r7
 800ab14:	bdb0      	pop	{r4, r5, r7, pc}

0800ab16 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ab16:	b5b0      	push	{r4, r5, r7, lr}
 800ab18:	b082      	sub	sp, #8
 800ab1a:	af00      	add	r7, sp, #0
 800ab1c:	6078      	str	r0, [r7, #4]
 800ab1e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800ab20:	6878      	ldr	r0, [r7, #4]
 800ab22:	f000 fc84 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ab26:	4604      	mov	r4, r0
 800ab28:	6838      	ldr	r0, [r7, #0]
 800ab2a:	f000 fae9 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ab2e:	4603      	mov	r3, r0
 800ab30:	4619      	mov	r1, r3
 800ab32:	4620      	mov	r0, r4
 800ab34:	f7ff ffd5 	bl	800aae2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800ab38:	462b      	mov	r3, r5
      }
 800ab3a:	4618      	mov	r0, r3
 800ab3c:	3708      	adds	r7, #8
 800ab3e:	46bd      	mov	sp, r7
 800ab40:	bdb0      	pop	{r4, r5, r7, pc}

0800ab42 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ab42:	b5b0      	push	{r4, r5, r7, lr}
 800ab44:	b082      	sub	sp, #8
 800ab46:	af00      	add	r7, sp, #0
 800ab48:	6078      	str	r0, [r7, #4]
 800ab4a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800ab4c:	6878      	ldr	r0, [r7, #4]
 800ab4e:	f000 fc6e 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ab52:	4604      	mov	r4, r0
 800ab54:	6838      	ldr	r0, [r7, #0]
 800ab56:	f000 fad3 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ab5a:	4603      	mov	r3, r0
 800ab5c:	4619      	mov	r1, r3
 800ab5e:	4620      	mov	r0, r4
 800ab60:	f7ff ffd9 	bl	800ab16 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800ab64:	462b      	mov	r3, r5
      }
 800ab66:	4618      	mov	r0, r3
 800ab68:	3708      	adds	r7, #8
 800ab6a:	46bd      	mov	sp, r7
 800ab6c:	bdb0      	pop	{r4, r5, r7, pc}

0800ab6e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800ab6e:	b580      	push	{r7, lr}
 800ab70:	b082      	sub	sp, #8
 800ab72:	af00      	add	r7, sp, #0
 800ab74:	7138      	strb	r0, [r7, #4]
 800ab76:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800ab78:	6838      	ldr	r0, [r7, #0]
 800ab7a:	f000 fad7 	bl	800b12c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ab7e:	4603      	mov	r3, r0
 800ab80:	4618      	mov	r0, r3
 800ab82:	f7f7 fd4d 	bl	8002620 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 800ab86:	4603      	mov	r3, r0
 800ab88:	4618      	mov	r0, r3
 800ab8a:	3708      	adds	r7, #8
 800ab8c:	46bd      	mov	sp, r7
 800ab8e:	bd80      	pop	{r7, pc}

0800ab90 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ab90:	b590      	push	{r4, r7, lr}
 800ab92:	b083      	sub	sp, #12
 800ab94:	af00      	add	r7, sp, #0
 800ab96:	7138      	strb	r0, [r7, #4]
 800ab98:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ab9a:	6838      	ldr	r0, [r7, #0]
 800ab9c:	f000 fabb 	bl	800b116 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800aba0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800aba2:	4619      	mov	r1, r3
 800aba4:	4620      	mov	r0, r4
 800aba6:	f7ff ffe2 	bl	800ab6e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800abaa:	4603      	mov	r3, r0
    }
 800abac:	4618      	mov	r0, r3
 800abae:	370c      	adds	r7, #12
 800abb0:	46bd      	mov	sp, r7
 800abb2:	bd90      	pop	{r4, r7, pc}

0800abb4 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800abb4:	b590      	push	{r4, r7, lr}
 800abb6:	b083      	sub	sp, #12
 800abb8:	af00      	add	r7, sp, #0
 800abba:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800abbc:	6878      	ldr	r0, [r7, #4]
 800abbe:	f000 fa9f 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800abc2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800abc4:	4619      	mov	r1, r3
 800abc6:	4620      	mov	r0, r4
 800abc8:	f7ff ffe2 	bl	800ab90 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800abcc:	4603      	mov	r3, r0
    }
 800abce:	4618      	mov	r0, r3
 800abd0:	370c      	adds	r7, #12
 800abd2:	46bd      	mov	sp, r7
 800abd4:	bd90      	pop	{r4, r7, pc}

0800abd6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800abd6:	b580      	push	{r7, lr}
 800abd8:	b082      	sub	sp, #8
 800abda:	af00      	add	r7, sp, #0
 800abdc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800abde:	6878      	ldr	r0, [r7, #4]
 800abe0:	f000 fa8e 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800abe4:	4603      	mov	r3, r0
 800abe6:	4618      	mov	r0, r3
 800abe8:	f7ff ffe4 	bl	800abb4 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800abec:	4603      	mov	r3, r0
	}
 800abee:	4618      	mov	r0, r3
 800abf0:	3708      	adds	r7, #8
 800abf2:	46bd      	mov	sp, r7
 800abf4:	bd80      	pop	{r7, pc}

0800abf6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800abf6:	b5b0      	push	{r4, r5, r7, lr}
 800abf8:	b082      	sub	sp, #8
 800abfa:	af00      	add	r7, sp, #0
 800abfc:	6078      	str	r0, [r7, #4]
 800abfe:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800ac00:	6878      	ldr	r0, [r7, #4]
 800ac02:	f000 fc14 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ac06:	4604      	mov	r4, r0
 800ac08:	6838      	ldr	r0, [r7, #0]
 800ac0a:	f000 fa79 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ac0e:	4603      	mov	r3, r0
 800ac10:	4618      	mov	r0, r3
 800ac12:	f7ff ffe0 	bl	800abd6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>
 800ac16:	4603      	mov	r3, r0
 800ac18:	4619      	mov	r1, r3
 800ac1a:	4620      	mov	r0, r4
 800ac1c:	f000 fc29 	bl	800b472 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800ac20:	462b      	mov	r3, r5
      }
 800ac22:	4618      	mov	r0, r3
 800ac24:	3708      	adds	r7, #8
 800ac26:	46bd      	mov	sp, r7
 800ac28:	bdb0      	pop	{r4, r5, r7, pc}

0800ac2a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ac2a:	b5b0      	push	{r4, r5, r7, lr}
 800ac2c:	b082      	sub	sp, #8
 800ac2e:	af00      	add	r7, sp, #0
 800ac30:	6078      	str	r0, [r7, #4]
 800ac32:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800ac34:	6878      	ldr	r0, [r7, #4]
 800ac36:	f000 fbfa 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ac3a:	4604      	mov	r4, r0
 800ac3c:	6838      	ldr	r0, [r7, #0]
 800ac3e:	f000 fa5f 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ac42:	4603      	mov	r3, r0
 800ac44:	4619      	mov	r1, r3
 800ac46:	4620      	mov	r0, r4
 800ac48:	f7ff ffd5 	bl	800abf6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800ac4c:	462b      	mov	r3, r5
      }
 800ac4e:	4618      	mov	r0, r3
 800ac50:	3708      	adds	r7, #8
 800ac52:	46bd      	mov	sp, r7
 800ac54:	bdb0      	pop	{r4, r5, r7, pc}

0800ac56 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ac56:	b5b0      	push	{r4, r5, r7, lr}
 800ac58:	b082      	sub	sp, #8
 800ac5a:	af00      	add	r7, sp, #0
 800ac5c:	6078      	str	r0, [r7, #4]
 800ac5e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800ac60:	6878      	ldr	r0, [r7, #4]
 800ac62:	f000 fbe4 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ac66:	4604      	mov	r4, r0
 800ac68:	6838      	ldr	r0, [r7, #0]
 800ac6a:	f000 fa49 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ac6e:	4603      	mov	r3, r0
 800ac70:	4619      	mov	r1, r3
 800ac72:	4620      	mov	r0, r4
 800ac74:	f7ff ffd9 	bl	800ac2a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800ac78:	462b      	mov	r3, r5
      }
 800ac7a:	4618      	mov	r0, r3
 800ac7c:	3708      	adds	r7, #8
 800ac7e:	46bd      	mov	sp, r7
 800ac80:	bdb0      	pop	{r4, r5, r7, pc}

0800ac82 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800ac82:	b580      	push	{r7, lr}
 800ac84:	b082      	sub	sp, #8
 800ac86:	af00      	add	r7, sp, #0
 800ac88:	7138      	strb	r0, [r7, #4]
 800ac8a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800ac8c:	6838      	ldr	r0, [r7, #0]
 800ac8e:	f000 fa58 	bl	800b142 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ac92:	4603      	mov	r3, r0
 800ac94:	4618      	mov	r0, r3
 800ac96:	f7fa f80f 	bl	8004cb8 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 800ac9a:	4603      	mov	r3, r0
 800ac9c:	4618      	mov	r0, r3
 800ac9e:	3708      	adds	r7, #8
 800aca0:	46bd      	mov	sp, r7
 800aca2:	bd80      	pop	{r7, pc}

0800aca4 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800aca4:	b590      	push	{r4, r7, lr}
 800aca6:	b083      	sub	sp, #12
 800aca8:	af00      	add	r7, sp, #0
 800acaa:	7138      	strb	r0, [r7, #4]
 800acac:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800acae:	6838      	ldr	r0, [r7, #0]
 800acb0:	f000 fa3c 	bl	800b12c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800acb4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800acb6:	4619      	mov	r1, r3
 800acb8:	4620      	mov	r0, r4
 800acba:	f7ff ffe2 	bl	800ac82 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800acbe:	4603      	mov	r3, r0
    }
 800acc0:	4618      	mov	r0, r3
 800acc2:	370c      	adds	r7, #12
 800acc4:	46bd      	mov	sp, r7
 800acc6:	bd90      	pop	{r4, r7, pc}

0800acc8 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800acc8:	b590      	push	{r4, r7, lr}
 800acca:	b083      	sub	sp, #12
 800accc:	af00      	add	r7, sp, #0
 800acce:	7138      	strb	r0, [r7, #4]
 800acd0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800acd2:	6838      	ldr	r0, [r7, #0]
 800acd4:	f000 fa1f 	bl	800b116 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800acd8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800acda:	4619      	mov	r1, r3
 800acdc:	4620      	mov	r0, r4
 800acde:	f7ff ffe1 	bl	800aca4 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ace2:	4603      	mov	r3, r0
    }
 800ace4:	4618      	mov	r0, r3
 800ace6:	370c      	adds	r7, #12
 800ace8:	46bd      	mov	sp, r7
 800acea:	bd90      	pop	{r4, r7, pc}

0800acec <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800acec:	b590      	push	{r4, r7, lr}
 800acee:	b083      	sub	sp, #12
 800acf0:	af00      	add	r7, sp, #0
 800acf2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800acf4:	6878      	ldr	r0, [r7, #4]
 800acf6:	f000 fa03 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800acfa:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800acfc:	4619      	mov	r1, r3
 800acfe:	4620      	mov	r0, r4
 800ad00:	f7ff ffe2 	bl	800acc8 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ad04:	4603      	mov	r3, r0
    }
 800ad06:	4618      	mov	r0, r3
 800ad08:	370c      	adds	r7, #12
 800ad0a:	46bd      	mov	sp, r7
 800ad0c:	bd90      	pop	{r4, r7, pc}

0800ad0e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800ad0e:	b580      	push	{r7, lr}
 800ad10:	b082      	sub	sp, #8
 800ad12:	af00      	add	r7, sp, #0
 800ad14:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800ad16:	6878      	ldr	r0, [r7, #4]
 800ad18:	f000 f9f2 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ad1c:	4603      	mov	r3, r0
 800ad1e:	4618      	mov	r0, r3
 800ad20:	f7ff ffe4 	bl	800acec <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800ad24:	4603      	mov	r3, r0
	}
 800ad26:	4618      	mov	r0, r3
 800ad28:	3708      	adds	r7, #8
 800ad2a:	46bd      	mov	sp, r7
 800ad2c:	bd80      	pop	{r7, pc}

0800ad2e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800ad2e:	b5b0      	push	{r4, r5, r7, lr}
 800ad30:	b082      	sub	sp, #8
 800ad32:	af00      	add	r7, sp, #0
 800ad34:	6078      	str	r0, [r7, #4]
 800ad36:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800ad38:	6878      	ldr	r0, [r7, #4]
 800ad3a:	f000 fb78 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ad3e:	4604      	mov	r4, r0
 800ad40:	6838      	ldr	r0, [r7, #0]
 800ad42:	f000 f9dd 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ad46:	4603      	mov	r3, r0
 800ad48:	4618      	mov	r0, r3
 800ad4a:	f7ff ffe0 	bl	800ad0e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>
 800ad4e:	4603      	mov	r3, r0
 800ad50:	4619      	mov	r1, r3
 800ad52:	4620      	mov	r0, r4
 800ad54:	f000 fba4 	bl	800b4a0 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800ad58:	462b      	mov	r3, r5
      }
 800ad5a:	4618      	mov	r0, r3
 800ad5c:	3708      	adds	r7, #8
 800ad5e:	46bd      	mov	sp, r7
 800ad60:	bdb0      	pop	{r4, r5, r7, pc}

0800ad62 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ad62:	b5b0      	push	{r4, r5, r7, lr}
 800ad64:	b082      	sub	sp, #8
 800ad66:	af00      	add	r7, sp, #0
 800ad68:	6078      	str	r0, [r7, #4]
 800ad6a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800ad6c:	6878      	ldr	r0, [r7, #4]
 800ad6e:	f000 fb5e 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ad72:	4604      	mov	r4, r0
 800ad74:	6838      	ldr	r0, [r7, #0]
 800ad76:	f000 f9c3 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ad7a:	4603      	mov	r3, r0
 800ad7c:	4619      	mov	r1, r3
 800ad7e:	4620      	mov	r0, r4
 800ad80:	f7ff ffd5 	bl	800ad2e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800ad84:	462b      	mov	r3, r5
      }
 800ad86:	4618      	mov	r0, r3
 800ad88:	3708      	adds	r7, #8
 800ad8a:	46bd      	mov	sp, r7
 800ad8c:	bdb0      	pop	{r4, r5, r7, pc}

0800ad8e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ad8e:	b5b0      	push	{r4, r5, r7, lr}
 800ad90:	b082      	sub	sp, #8
 800ad92:	af00      	add	r7, sp, #0
 800ad94:	6078      	str	r0, [r7, #4]
 800ad96:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800ad98:	6878      	ldr	r0, [r7, #4]
 800ad9a:	f000 fb48 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ad9e:	4604      	mov	r4, r0
 800ada0:	6838      	ldr	r0, [r7, #0]
 800ada2:	f000 f9ad 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ada6:	4603      	mov	r3, r0
 800ada8:	4619      	mov	r1, r3
 800adaa:	4620      	mov	r0, r4
 800adac:	f7ff ffd9 	bl	800ad62 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800adb0:	462b      	mov	r3, r5
      }
 800adb2:	4618      	mov	r0, r3
 800adb4:	3708      	adds	r7, #8
 800adb6:	46bd      	mov	sp, r7
 800adb8:	bdb0      	pop	{r4, r5, r7, pc}

0800adba <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800adba:	b580      	push	{r7, lr}
 800adbc:	b082      	sub	sp, #8
 800adbe:	af00      	add	r7, sp, #0
 800adc0:	7138      	strb	r0, [r7, #4]
 800adc2:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800adc4:	6838      	ldr	r0, [r7, #0]
 800adc6:	f000 f9c7 	bl	800b158 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800adca:	4603      	mov	r3, r0
 800adcc:	4618      	mov	r0, r3
 800adce:	f7f9 ffb7 	bl	8004d40 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 800add2:	4603      	mov	r3, r0
 800add4:	4618      	mov	r0, r3
 800add6:	3708      	adds	r7, #8
 800add8:	46bd      	mov	sp, r7
 800adda:	bd80      	pop	{r7, pc}

0800addc <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800addc:	b590      	push	{r4, r7, lr}
 800adde:	b083      	sub	sp, #12
 800ade0:	af00      	add	r7, sp, #0
 800ade2:	7138      	strb	r0, [r7, #4]
 800ade4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ade6:	6838      	ldr	r0, [r7, #0]
 800ade8:	f000 f9ab 	bl	800b142 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800adec:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800adee:	4619      	mov	r1, r3
 800adf0:	4620      	mov	r0, r4
 800adf2:	f7ff ffe2 	bl	800adba <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800adf6:	4603      	mov	r3, r0
    }
 800adf8:	4618      	mov	r0, r3
 800adfa:	370c      	adds	r7, #12
 800adfc:	46bd      	mov	sp, r7
 800adfe:	bd90      	pop	{r4, r7, pc}

0800ae00 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ae00:	b590      	push	{r4, r7, lr}
 800ae02:	b083      	sub	sp, #12
 800ae04:	af00      	add	r7, sp, #0
 800ae06:	7138      	strb	r0, [r7, #4]
 800ae08:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ae0a:	6838      	ldr	r0, [r7, #0]
 800ae0c:	f000 f98e 	bl	800b12c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ae10:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ae12:	4619      	mov	r1, r3
 800ae14:	4620      	mov	r0, r4
 800ae16:	f7ff ffe1 	bl	800addc <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ae1a:	4603      	mov	r3, r0
    }
 800ae1c:	4618      	mov	r0, r3
 800ae1e:	370c      	adds	r7, #12
 800ae20:	46bd      	mov	sp, r7
 800ae22:	bd90      	pop	{r4, r7, pc}

0800ae24 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ae24:	b590      	push	{r4, r7, lr}
 800ae26:	b083      	sub	sp, #12
 800ae28:	af00      	add	r7, sp, #0
 800ae2a:	7138      	strb	r0, [r7, #4]
 800ae2c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ae2e:	6838      	ldr	r0, [r7, #0]
 800ae30:	f000 f971 	bl	800b116 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ae34:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ae36:	4619      	mov	r1, r3
 800ae38:	4620      	mov	r0, r4
 800ae3a:	f7ff ffe1 	bl	800ae00 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ae3e:	4603      	mov	r3, r0
    }
 800ae40:	4618      	mov	r0, r3
 800ae42:	370c      	adds	r7, #12
 800ae44:	46bd      	mov	sp, r7
 800ae46:	bd90      	pop	{r4, r7, pc}

0800ae48 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ae48:	b590      	push	{r4, r7, lr}
 800ae4a:	b083      	sub	sp, #12
 800ae4c:	af00      	add	r7, sp, #0
 800ae4e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ae50:	6878      	ldr	r0, [r7, #4]
 800ae52:	f000 f955 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ae56:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800ae58:	4619      	mov	r1, r3
 800ae5a:	4620      	mov	r0, r4
 800ae5c:	f7ff ffe2 	bl	800ae24 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ae60:	4603      	mov	r3, r0
    }
 800ae62:	4618      	mov	r0, r3
 800ae64:	370c      	adds	r7, #12
 800ae66:	46bd      	mov	sp, r7
 800ae68:	bd90      	pop	{r4, r7, pc}

0800ae6a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800ae6a:	b580      	push	{r7, lr}
 800ae6c:	b082      	sub	sp, #8
 800ae6e:	af00      	add	r7, sp, #0
 800ae70:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800ae72:	6878      	ldr	r0, [r7, #4]
 800ae74:	f000 f944 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ae78:	4603      	mov	r3, r0
 800ae7a:	4618      	mov	r0, r3
 800ae7c:	f7ff ffe4 	bl	800ae48 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800ae80:	4603      	mov	r3, r0
	}
 800ae82:	4618      	mov	r0, r3
 800ae84:	3708      	adds	r7, #8
 800ae86:	46bd      	mov	sp, r7
 800ae88:	bd80      	pop	{r7, pc}

0800ae8a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800ae8a:	b5b0      	push	{r4, r5, r7, lr}
 800ae8c:	b082      	sub	sp, #8
 800ae8e:	af00      	add	r7, sp, #0
 800ae90:	6078      	str	r0, [r7, #4]
 800ae92:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800ae94:	6878      	ldr	r0, [r7, #4]
 800ae96:	f000 faca 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ae9a:	4604      	mov	r4, r0
 800ae9c:	6838      	ldr	r0, [r7, #0]
 800ae9e:	f000 f92f 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aea2:	4603      	mov	r3, r0
 800aea4:	4618      	mov	r0, r3
 800aea6:	f7ff ffe0 	bl	800ae6a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>
 800aeaa:	4603      	mov	r3, r0
 800aeac:	4619      	mov	r1, r3
 800aeae:	4620      	mov	r0, r4
 800aeb0:	f000 fb0d 	bl	800b4ce <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800aeb4:	462b      	mov	r3, r5
      }
 800aeb6:	4618      	mov	r0, r3
 800aeb8:	3708      	adds	r7, #8
 800aeba:	46bd      	mov	sp, r7
 800aebc:	bdb0      	pop	{r4, r5, r7, pc}

0800aebe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800aebe:	b5b0      	push	{r4, r5, r7, lr}
 800aec0:	b082      	sub	sp, #8
 800aec2:	af00      	add	r7, sp, #0
 800aec4:	6078      	str	r0, [r7, #4]
 800aec6:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800aec8:	6878      	ldr	r0, [r7, #4]
 800aeca:	f000 fab0 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800aece:	4604      	mov	r4, r0
 800aed0:	6838      	ldr	r0, [r7, #0]
 800aed2:	f000 f915 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aed6:	4603      	mov	r3, r0
 800aed8:	4619      	mov	r1, r3
 800aeda:	4620      	mov	r0, r4
 800aedc:	f7ff ffd5 	bl	800ae8a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800aee0:	462b      	mov	r3, r5
      }
 800aee2:	4618      	mov	r0, r3
 800aee4:	3708      	adds	r7, #8
 800aee6:	46bd      	mov	sp, r7
 800aee8:	bdb0      	pop	{r4, r5, r7, pc}

0800aeea <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800aeea:	b5b0      	push	{r4, r5, r7, lr}
 800aeec:	b082      	sub	sp, #8
 800aeee:	af00      	add	r7, sp, #0
 800aef0:	6078      	str	r0, [r7, #4]
 800aef2:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800aef4:	6878      	ldr	r0, [r7, #4]
 800aef6:	f000 fa9a 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800aefa:	4604      	mov	r4, r0
 800aefc:	6838      	ldr	r0, [r7, #0]
 800aefe:	f000 f8ff 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800af02:	4603      	mov	r3, r0
 800af04:	4619      	mov	r1, r3
 800af06:	4620      	mov	r0, r4
 800af08:	f7ff ffd9 	bl	800aebe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800af0c:	462b      	mov	r3, r5
      }
 800af0e:	4618      	mov	r0, r3
 800af10:	3708      	adds	r7, #8
 800af12:	46bd      	mov	sp, r7
 800af14:	bdb0      	pop	{r4, r5, r7, pc}

0800af16 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800af16:	b580      	push	{r7, lr}
 800af18:	b082      	sub	sp, #8
 800af1a:	af00      	add	r7, sp, #0
 800af1c:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800af1e:	6878      	ldr	r0, [r7, #4]
 800af20:	f000 f8ee 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800af24:	4603      	mov	r3, r0
 800af26:	4618      	mov	r0, r3
 800af28:	f7ff fa6d 	bl	800a406 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800af2c:	4603      	mov	r3, r0
	}
 800af2e:	4618      	mov	r0, r3
 800af30:	3708      	adds	r7, #8
 800af32:	46bd      	mov	sp, r7
 800af34:	bd80      	pop	{r7, pc}

0800af36 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800af36:	b5b0      	push	{r4, r5, r7, lr}
 800af38:	b082      	sub	sp, #8
 800af3a:	af00      	add	r7, sp, #0
 800af3c:	6078      	str	r0, [r7, #4]
 800af3e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800af40:	6878      	ldr	r0, [r7, #4]
 800af42:	f000 fa74 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800af46:	4604      	mov	r4, r0
 800af48:	6838      	ldr	r0, [r7, #0]
 800af4a:	f000 f8d9 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800af4e:	4603      	mov	r3, r0
 800af50:	4618      	mov	r0, r3
 800af52:	f7ff ffe0 	bl	800af16 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>
 800af56:	4603      	mov	r3, r0
 800af58:	4619      	mov	r1, r3
 800af5a:	4620      	mov	r0, r4
 800af5c:	f000 face 	bl	800b4fc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSA_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800af60:	462b      	mov	r3, r5
      }
 800af62:	4618      	mov	r0, r3
 800af64:	3708      	adds	r7, #8
 800af66:	46bd      	mov	sp, r7
 800af68:	bdb0      	pop	{r4, r5, r7, pc}

0800af6a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800af6a:	b5b0      	push	{r4, r5, r7, lr}
 800af6c:	b082      	sub	sp, #8
 800af6e:	af00      	add	r7, sp, #0
 800af70:	6078      	str	r0, [r7, #4]
 800af72:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800af74:	6878      	ldr	r0, [r7, #4]
 800af76:	f000 fa5a 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800af7a:	4604      	mov	r4, r0
 800af7c:	6838      	ldr	r0, [r7, #0]
 800af7e:	f000 f8bf 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800af82:	4603      	mov	r3, r0
 800af84:	4619      	mov	r1, r3
 800af86:	4620      	mov	r0, r4
 800af88:	f7ff ffd5 	bl	800af36 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800af8c:	462b      	mov	r3, r5
      }
 800af8e:	4618      	mov	r0, r3
 800af90:	3708      	adds	r7, #8
 800af92:	46bd      	mov	sp, r7
 800af94:	bdb0      	pop	{r4, r5, r7, pc}

0800af96 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800af96:	b5b0      	push	{r4, r5, r7, lr}
 800af98:	b082      	sub	sp, #8
 800af9a:	af00      	add	r7, sp, #0
 800af9c:	6078      	str	r0, [r7, #4]
 800af9e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800afa0:	6878      	ldr	r0, [r7, #4]
 800afa2:	f000 fa44 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800afa6:	4604      	mov	r4, r0
 800afa8:	6838      	ldr	r0, [r7, #0]
 800afaa:	f000 f8a9 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800afae:	4603      	mov	r3, r0
 800afb0:	4619      	mov	r1, r3
 800afb2:	4620      	mov	r0, r4
 800afb4:	f7ff ffd9 	bl	800af6a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800afb8:	462b      	mov	r3, r5
      }
 800afba:	4618      	mov	r0, r3
 800afbc:	3708      	adds	r7, #8
 800afbe:	46bd      	mov	sp, r7
 800afc0:	bdb0      	pop	{r4, r5, r7, pc}

0800afc2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800afc2:	b580      	push	{r7, lr}
 800afc4:	b082      	sub	sp, #8
 800afc6:	af00      	add	r7, sp, #0
 800afc8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800afca:	6878      	ldr	r0, [r7, #4]
 800afcc:	f000 f898 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800afd0:	4603      	mov	r3, r0
 800afd2:	4618      	mov	r0, r3
 800afd4:	f7ff faaf 	bl	800a536 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800afd8:	4603      	mov	r3, r0
	}
 800afda:	4618      	mov	r0, r3
 800afdc:	3708      	adds	r7, #8
 800afde:	46bd      	mov	sp, r7
 800afe0:	bd80      	pop	{r7, pc}

0800afe2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800afe2:	b5b0      	push	{r4, r5, r7, lr}
 800afe4:	b082      	sub	sp, #8
 800afe6:	af00      	add	r7, sp, #0
 800afe8:	6078      	str	r0, [r7, #4]
 800afea:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800afec:	6878      	ldr	r0, [r7, #4]
 800afee:	f000 fa1e 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800aff2:	4604      	mov	r4, r0
 800aff4:	6838      	ldr	r0, [r7, #0]
 800aff6:	f000 f883 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800affa:	4603      	mov	r3, r0
 800affc:	4618      	mov	r0, r3
 800affe:	f7ff ffe0 	bl	800afc2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESM_EEDcOT0_>
 800b002:	4603      	mov	r3, r0
 800b004:	4619      	mov	r1, r3
 800b006:	4620      	mov	r0, r4
 800b008:	f000 fa8f 	bl	800b52a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800b00c:	462b      	mov	r3, r5
      }
 800b00e:	4618      	mov	r0, r3
 800b010:	3708      	adds	r7, #8
 800b012:	46bd      	mov	sp, r7
 800b014:	bdb0      	pop	{r4, r5, r7, pc}

0800b016 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b016:	b5b0      	push	{r4, r5, r7, lr}
 800b018:	b082      	sub	sp, #8
 800b01a:	af00      	add	r7, sp, #0
 800b01c:	6078      	str	r0, [r7, #4]
 800b01e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800b020:	6878      	ldr	r0, [r7, #4]
 800b022:	f000 fa04 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b026:	4604      	mov	r4, r0
 800b028:	6838      	ldr	r0, [r7, #0]
 800b02a:	f000 f869 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b02e:	4603      	mov	r3, r0
 800b030:	4619      	mov	r1, r3
 800b032:	4620      	mov	r0, r4
 800b034:	f7ff ffd5 	bl	800afe2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b038:	462b      	mov	r3, r5
      }
 800b03a:	4618      	mov	r0, r3
 800b03c:	3708      	adds	r7, #8
 800b03e:	46bd      	mov	sp, r7
 800b040:	bdb0      	pop	{r4, r5, r7, pc}

0800b042 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b042:	b5b0      	push	{r4, r5, r7, lr}
 800b044:	b082      	sub	sp, #8
 800b046:	af00      	add	r7, sp, #0
 800b048:	6078      	str	r0, [r7, #4]
 800b04a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800b04c:	6878      	ldr	r0, [r7, #4]
 800b04e:	f000 f9ee 	bl	800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b052:	4604      	mov	r4, r0
 800b054:	6838      	ldr	r0, [r7, #0]
 800b056:	f000 f853 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b05a:	4603      	mov	r3, r0
 800b05c:	4619      	mov	r1, r3
 800b05e:	4620      	mov	r0, r4
 800b060:	f7ff ffd9 	bl	800b016 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b064:	462b      	mov	r3, r5
      }
 800b066:	4618      	mov	r0, r3
 800b068:	3708      	adds	r7, #8
 800b06a:	46bd      	mov	sp, r7
 800b06c:	bdb0      	pop	{r4, r5, r7, pc}

0800b06e <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJLj6EEE9_M_accessIJEEERKSN_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 800b06e:	b580      	push	{r7, lr}
 800b070:	b082      	sub	sp, #8
 800b072:	af00      	add	r7, sp, #0
 800b074:	6078      	str	r0, [r7, #4]
 800b076:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800b078:	683b      	ldr	r3, [r7, #0]
 800b07a:	009b      	lsls	r3, r3, #2
 800b07c:	687a      	ldr	r2, [r7, #4]
 800b07e:	4413      	add	r3, r2
 800b080:	4618      	mov	r0, r3
 800b082:	f000 fa69 	bl	800b558 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJEE9_M_accessEv>
 800b086:	4603      	mov	r3, r0
	}
 800b088:	4618      	mov	r0, r3
 800b08a:	3708      	adds	r7, #8
 800b08c:	46bd      	mov	sp, r7
 800b08e:	bd80      	pop	{r7, pc}

0800b090 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 800b090:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b092:	b085      	sub	sp, #20
 800b094:	af00      	add	r7, sp, #0
 800b096:	6078      	str	r0, [r7, #4]
 800b098:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800b09a:	4b0f      	ldr	r3, [pc, #60]	; (800b0d8 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_+0x48>)
 800b09c:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800b09e:	6838      	ldr	r0, [r7, #0]
 800b0a0:	f7fe fecb 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800b0a4:	4603      	mov	r3, r0
 800b0a6:	4619      	mov	r1, r3
 800b0a8:	68f8      	ldr	r0, [r7, #12]
 800b0aa:	f7ff ffe0 	bl	800b06e <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJLj6EEE9_M_accessIJEEERKSN_jDpT_>
 800b0ae:	4603      	mov	r3, r0
 800b0b0:	681b      	ldr	r3, [r3, #0]
 800b0b2:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 800b0b4:	68bc      	ldr	r4, [r7, #8]
 800b0b6:	6878      	ldr	r0, [r7, #4]
 800b0b8:	f000 fa59 	bl	800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b0bc:	4605      	mov	r5, r0
 800b0be:	6838      	ldr	r0, [r7, #0]
 800b0c0:	f000 f81e 	bl	800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b0c4:	4603      	mov	r3, r0
 800b0c6:	4619      	mov	r1, r3
 800b0c8:	4628      	mov	r0, r5
 800b0ca:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 800b0cc:	4633      	mov	r3, r6
    }
 800b0ce:	4618      	mov	r0, r3
 800b0d0:	3714      	adds	r7, #20
 800b0d2:	46bd      	mov	sp, r7
 800b0d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b0d6:	bf00      	nop
 800b0d8:	08027e1c 	.word	0x08027e1c

0800b0dc <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 800b0dc:	b580      	push	{r7, lr}
 800b0de:	b084      	sub	sp, #16
 800b0e0:	af00      	add	r7, sp, #0
 800b0e2:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 800b0e4:	6878      	ldr	r0, [r7, #4]
 800b0e6:	f7ff fcbf 	bl	800aa68 <_ZSt14__variant_castIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callERNSt8__detail9__variant16_Variant_storageILb0EJbifS5_S7_S9_EEEEDcOT0_>
 800b0ea:	4602      	mov	r2, r0
 800b0ec:	f107 030c 	add.w	r3, r7, #12
 800b0f0:	4611      	mov	r1, r2
 800b0f2:	4618      	mov	r0, r3
 800b0f4:	f7ff ffcc 	bl	800b090 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_>
      }
 800b0f8:	bf00      	nop
 800b0fa:	3710      	adds	r7, #16
 800b0fc:	46bd      	mov	sp, r7
 800b0fe:	bd80      	pop	{r7, pc}

0800b100 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b100:	b480      	push	{r7}
 800b102:	b083      	sub	sp, #12
 800b104:	af00      	add	r7, sp, #0
 800b106:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b108:	687b      	ldr	r3, [r7, #4]
 800b10a:	4618      	mov	r0, r3
 800b10c:	370c      	adds	r7, #12
 800b10e:	46bd      	mov	sp, r7
 800b110:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b114:	4770      	bx	lr

0800b116 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b116:	b480      	push	{r7}
 800b118:	b083      	sub	sp, #12
 800b11a:	af00      	add	r7, sp, #0
 800b11c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b11e:	687b      	ldr	r3, [r7, #4]
 800b120:	4618      	mov	r0, r3
 800b122:	370c      	adds	r7, #12
 800b124:	46bd      	mov	sp, r7
 800b126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b12a:	4770      	bx	lr

0800b12c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b12c:	b480      	push	{r7}
 800b12e:	b083      	sub	sp, #12
 800b130:	af00      	add	r7, sp, #0
 800b132:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b134:	687b      	ldr	r3, [r7, #4]
 800b136:	4618      	mov	r0, r3
 800b138:	370c      	adds	r7, #12
 800b13a:	46bd      	mov	sp, r7
 800b13c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b140:	4770      	bx	lr

0800b142 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b142:	b480      	push	{r7}
 800b144:	b083      	sub	sp, #12
 800b146:	af00      	add	r7, sp, #0
 800b148:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b14a:	687b      	ldr	r3, [r7, #4]
 800b14c:	4618      	mov	r0, r3
 800b14e:	370c      	adds	r7, #12
 800b150:	46bd      	mov	sp, r7
 800b152:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b156:	4770      	bx	lr

0800b158 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b158:	b480      	push	{r7}
 800b15a:	b083      	sub	sp, #12
 800b15c:	af00      	add	r7, sp, #0
 800b15e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b160:	687b      	ldr	r3, [r7, #4]
 800b162:	4618      	mov	r0, r3
 800b164:	370c      	adds	r7, #12
 800b166:	46bd      	mov	sp, r7
 800b168:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b16c:	4770      	bx	lr

0800b16e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b16e:	b480      	push	{r7}
 800b170:	b083      	sub	sp, #12
 800b172:	af00      	add	r7, sp, #0
 800b174:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b176:	687b      	ldr	r3, [r7, #4]
 800b178:	4618      	mov	r0, r3
 800b17a:	370c      	adds	r7, #12
 800b17c:	46bd      	mov	sp, r7
 800b17e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b182:	4770      	bx	lr

0800b184 <_ZNRSt8__detail9__variant14_UninitializedIP8VariableLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800b184:	b480      	push	{r7}
 800b186:	b083      	sub	sp, #12
 800b188:	af00      	add	r7, sp, #0
 800b18a:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800b18c:	687b      	ldr	r3, [r7, #4]
 800b18e:	4618      	mov	r0, r3
 800b190:	370c      	adds	r7, #12
 800b192:	46bd      	mov	sp, r7
 800b194:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b198:	4770      	bx	lr

0800b19a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b19a:	b480      	push	{r7}
 800b19c:	b083      	sub	sp, #12
 800b19e:	af00      	add	r7, sp, #0
 800b1a0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b1a2:	687b      	ldr	r3, [r7, #4]
 800b1a4:	4618      	mov	r0, r3
 800b1a6:	370c      	adds	r7, #12
 800b1a8:	46bd      	mov	sp, r7
 800b1aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1ae:	4770      	bx	lr

0800b1b0 <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b1b0:	b480      	push	{r7}
 800b1b2:	b083      	sub	sp, #12
 800b1b4:	af00      	add	r7, sp, #0
 800b1b6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b1b8:	687b      	ldr	r3, [r7, #4]
 800b1ba:	4618      	mov	r0, r3
 800b1bc:	370c      	adds	r7, #12
 800b1be:	46bd      	mov	sp, r7
 800b1c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1c4:	4770      	bx	lr

0800b1c6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b1c6:	b480      	push	{r7}
 800b1c8:	b083      	sub	sp, #12
 800b1ca:	af00      	add	r7, sp, #0
 800b1cc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b1ce:	687b      	ldr	r3, [r7, #4]
 800b1d0:	4618      	mov	r0, r3
 800b1d2:	370c      	adds	r7, #12
 800b1d4:	46bd      	mov	sp, r7
 800b1d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1da:	4770      	bx	lr

0800b1dc <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10ExpressionEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b1dc:	b480      	push	{r7}
 800b1de:	b083      	sub	sp, #12
 800b1e0:	af00      	add	r7, sp, #0
 800b1e2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b1e4:	687b      	ldr	r3, [r7, #4]
 800b1e6:	4618      	mov	r0, r3
 800b1e8:	370c      	adds	r7, #12
 800b1ea:	46bd      	mov	sp, r7
 800b1ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1f0:	4770      	bx	lr

0800b1f2 <_ZNRSt8__detail9__variant14_UninitializedIP10ExpressionLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800b1f2:	b480      	push	{r7}
 800b1f4:	b083      	sub	sp, #12
 800b1f6:	af00      	add	r7, sp, #0
 800b1f8:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800b1fa:	687b      	ldr	r3, [r7, #4]
 800b1fc:	4618      	mov	r0, r3
 800b1fe:	370c      	adds	r7, #12
 800b200:	46bd      	mov	sp, r7
 800b202:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b206:	4770      	bx	lr

0800b208 <_ZNRSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800b208:	b480      	push	{r7}
 800b20a:	b083      	sub	sp, #12
 800b20c:	af00      	add	r7, sp, #0
 800b20e:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800b210:	687b      	ldr	r3, [r7, #4]
 800b212:	4618      	mov	r0, r3
 800b214:	370c      	adds	r7, #12
 800b216:	46bd      	mov	sp, r7
 800b218:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b21c:	4770      	bx	lr

0800b21e <_ZNSaIP16Power_expressionED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 800b21e:	b580      	push	{r7, lr}
 800b220:	b082      	sub	sp, #8
 800b222:	af00      	add	r7, sp, #0
 800b224:	6078      	str	r0, [r7, #4]
 800b226:	6878      	ldr	r0, [r7, #4]
 800b228:	f000 f9ac 	bl	800b584 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionED1Ev>
 800b22c:	687b      	ldr	r3, [r7, #4]
 800b22e:	4618      	mov	r0, r3
 800b230:	3708      	adds	r7, #8
 800b232:	46bd      	mov	sp, r7
 800b234:	bd80      	pop	{r7, pc}

0800b236 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b236:	b580      	push	{r7, lr}
 800b238:	b084      	sub	sp, #16
 800b23a:	af00      	add	r7, sp, #0
 800b23c:	60f8      	str	r0, [r7, #12]
 800b23e:	60b9      	str	r1, [r7, #8]
 800b240:	607a      	str	r2, [r7, #4]
	if (__p)
 800b242:	68bb      	ldr	r3, [r7, #8]
 800b244:	2b00      	cmp	r3, #0
 800b246:	d005      	beq.n	800b254 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b248:	68fb      	ldr	r3, [r7, #12]
 800b24a:	687a      	ldr	r2, [r7, #4]
 800b24c:	68b9      	ldr	r1, [r7, #8]
 800b24e:	4618      	mov	r0, r3
 800b250:	f000 f9a3 	bl	800b59a <_ZNSt16allocator_traitsISaIP16Power_expressionEE10deallocateERS2_PS1_j>
      }
 800b254:	bf00      	nop
 800b256:	3710      	adds	r7, #16
 800b258:	46bd      	mov	sp, r7
 800b25a:	bd80      	pop	{r7, pc}

0800b25c <_ZSt8_DestroyIPP16Power_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b25c:	b580      	push	{r7, lr}
 800b25e:	b082      	sub	sp, #8
 800b260:	af00      	add	r7, sp, #0
 800b262:	6078      	str	r0, [r7, #4]
 800b264:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b266:	6839      	ldr	r1, [r7, #0]
 800b268:	6878      	ldr	r0, [r7, #4]
 800b26a:	f000 f9a5 	bl	800b5b8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16Power_expressionEEvT_S5_>
    }
 800b26e:	bf00      	nop
 800b270:	3708      	adds	r7, #8
 800b272:	46bd      	mov	sp, r7
 800b274:	bd80      	pop	{r7, pc}

0800b276 <_ZNSaI13mult_operatorED1Ev>:
 800b276:	b580      	push	{r7, lr}
 800b278:	b082      	sub	sp, #8
 800b27a:	af00      	add	r7, sp, #0
 800b27c:	6078      	str	r0, [r7, #4]
 800b27e:	6878      	ldr	r0, [r7, #4]
 800b280:	f000 f9a5 	bl	800b5ce <_ZN9__gnu_cxx13new_allocatorI13mult_operatorED1Ev>
 800b284:	687b      	ldr	r3, [r7, #4]
 800b286:	4618      	mov	r0, r3
 800b288:	3708      	adds	r7, #8
 800b28a:	46bd      	mov	sp, r7
 800b28c:	bd80      	pop	{r7, pc}

0800b28e <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b28e:	b580      	push	{r7, lr}
 800b290:	b084      	sub	sp, #16
 800b292:	af00      	add	r7, sp, #0
 800b294:	60f8      	str	r0, [r7, #12]
 800b296:	60b9      	str	r1, [r7, #8]
 800b298:	607a      	str	r2, [r7, #4]
	if (__p)
 800b29a:	68bb      	ldr	r3, [r7, #8]
 800b29c:	2b00      	cmp	r3, #0
 800b29e:	d005      	beq.n	800b2ac <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b2a0:	68fb      	ldr	r3, [r7, #12]
 800b2a2:	687a      	ldr	r2, [r7, #4]
 800b2a4:	68b9      	ldr	r1, [r7, #8]
 800b2a6:	4618      	mov	r0, r3
 800b2a8:	f000 f99c 	bl	800b5e4 <_ZNSt16allocator_traitsISaI13mult_operatorEE10deallocateERS1_PS0_j>
      }
 800b2ac:	bf00      	nop
 800b2ae:	3710      	adds	r7, #16
 800b2b0:	46bd      	mov	sp, r7
 800b2b2:	bd80      	pop	{r7, pc}

0800b2b4 <_ZSt8_DestroyIP13mult_operatorEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b2b4:	b580      	push	{r7, lr}
 800b2b6:	b082      	sub	sp, #8
 800b2b8:	af00      	add	r7, sp, #0
 800b2ba:	6078      	str	r0, [r7, #4]
 800b2bc:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b2be:	6839      	ldr	r1, [r7, #0]
 800b2c0:	6878      	ldr	r0, [r7, #4]
 800b2c2:	f000 f99e 	bl	800b602 <_ZNSt12_Destroy_auxILb1EE9__destroyIP13mult_operatorEEvT_S4_>
    }
 800b2c6:	bf00      	nop
 800b2c8:	3708      	adds	r7, #8
 800b2ca:	46bd      	mov	sp, r7
 800b2cc:	bd80      	pop	{r7, pc}

0800b2ce <_ZNSaIP19Multiply_expressionED1Ev>:
 800b2ce:	b580      	push	{r7, lr}
 800b2d0:	b082      	sub	sp, #8
 800b2d2:	af00      	add	r7, sp, #0
 800b2d4:	6078      	str	r0, [r7, #4]
 800b2d6:	6878      	ldr	r0, [r7, #4]
 800b2d8:	f000 f99e 	bl	800b618 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionED1Ev>
 800b2dc:	687b      	ldr	r3, [r7, #4]
 800b2de:	4618      	mov	r0, r3
 800b2e0:	3708      	adds	r7, #8
 800b2e2:	46bd      	mov	sp, r7
 800b2e4:	bd80      	pop	{r7, pc}

0800b2e6 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b2e6:	b580      	push	{r7, lr}
 800b2e8:	b084      	sub	sp, #16
 800b2ea:	af00      	add	r7, sp, #0
 800b2ec:	60f8      	str	r0, [r7, #12]
 800b2ee:	60b9      	str	r1, [r7, #8]
 800b2f0:	607a      	str	r2, [r7, #4]
	if (__p)
 800b2f2:	68bb      	ldr	r3, [r7, #8]
 800b2f4:	2b00      	cmp	r3, #0
 800b2f6:	d005      	beq.n	800b304 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b2f8:	68fb      	ldr	r3, [r7, #12]
 800b2fa:	687a      	ldr	r2, [r7, #4]
 800b2fc:	68b9      	ldr	r1, [r7, #8]
 800b2fe:	4618      	mov	r0, r3
 800b300:	f000 f995 	bl	800b62e <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE10deallocateERS2_PS1_j>
      }
 800b304:	bf00      	nop
 800b306:	3710      	adds	r7, #16
 800b308:	46bd      	mov	sp, r7
 800b30a:	bd80      	pop	{r7, pc}

0800b30c <_ZSt8_DestroyIPP19Multiply_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b30c:	b580      	push	{r7, lr}
 800b30e:	b082      	sub	sp, #8
 800b310:	af00      	add	r7, sp, #0
 800b312:	6078      	str	r0, [r7, #4]
 800b314:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b316:	6839      	ldr	r1, [r7, #0]
 800b318:	6878      	ldr	r0, [r7, #4]
 800b31a:	f000 f997 	bl	800b64c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP19Multiply_expressionEEvT_S5_>
    }
 800b31e:	bf00      	nop
 800b320:	3708      	adds	r7, #8
 800b322:	46bd      	mov	sp, r7
 800b324:	bd80      	pop	{r7, pc}

0800b326 <_ZNSaI12sum_operatorED1Ev>:
 800b326:	b580      	push	{r7, lr}
 800b328:	b082      	sub	sp, #8
 800b32a:	af00      	add	r7, sp, #0
 800b32c:	6078      	str	r0, [r7, #4]
 800b32e:	6878      	ldr	r0, [r7, #4]
 800b330:	f000 f997 	bl	800b662 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorED1Ev>
 800b334:	687b      	ldr	r3, [r7, #4]
 800b336:	4618      	mov	r0, r3
 800b338:	3708      	adds	r7, #8
 800b33a:	46bd      	mov	sp, r7
 800b33c:	bd80      	pop	{r7, pc}

0800b33e <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b33e:	b580      	push	{r7, lr}
 800b340:	b084      	sub	sp, #16
 800b342:	af00      	add	r7, sp, #0
 800b344:	60f8      	str	r0, [r7, #12]
 800b346:	60b9      	str	r1, [r7, #8]
 800b348:	607a      	str	r2, [r7, #4]
	if (__p)
 800b34a:	68bb      	ldr	r3, [r7, #8]
 800b34c:	2b00      	cmp	r3, #0
 800b34e:	d005      	beq.n	800b35c <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b350:	68fb      	ldr	r3, [r7, #12]
 800b352:	687a      	ldr	r2, [r7, #4]
 800b354:	68b9      	ldr	r1, [r7, #8]
 800b356:	4618      	mov	r0, r3
 800b358:	f000 f98e 	bl	800b678 <_ZNSt16allocator_traitsISaI12sum_operatorEE10deallocateERS1_PS0_j>
      }
 800b35c:	bf00      	nop
 800b35e:	3710      	adds	r7, #16
 800b360:	46bd      	mov	sp, r7
 800b362:	bd80      	pop	{r7, pc}

0800b364 <_ZSt8_DestroyIP12sum_operatorEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b364:	b580      	push	{r7, lr}
 800b366:	b082      	sub	sp, #8
 800b368:	af00      	add	r7, sp, #0
 800b36a:	6078      	str	r0, [r7, #4]
 800b36c:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b36e:	6839      	ldr	r1, [r7, #0]
 800b370:	6878      	ldr	r0, [r7, #4]
 800b372:	f000 f990 	bl	800b696 <_ZNSt12_Destroy_auxILb1EE9__destroyIP12sum_operatorEEvT_S4_>
    }
 800b376:	bf00      	nop
 800b378:	3708      	adds	r7, #8
 800b37a:	46bd      	mov	sp, r7
 800b37c:	bd80      	pop	{r7, pc}

0800b37e <_ZNSaIP18Compare_expressionED1Ev>:
 800b37e:	b580      	push	{r7, lr}
 800b380:	b082      	sub	sp, #8
 800b382:	af00      	add	r7, sp, #0
 800b384:	6078      	str	r0, [r7, #4]
 800b386:	6878      	ldr	r0, [r7, #4]
 800b388:	f000 f990 	bl	800b6ac <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionED1Ev>
 800b38c:	687b      	ldr	r3, [r7, #4]
 800b38e:	4618      	mov	r0, r3
 800b390:	3708      	adds	r7, #8
 800b392:	46bd      	mov	sp, r7
 800b394:	bd80      	pop	{r7, pc}

0800b396 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b396:	b580      	push	{r7, lr}
 800b398:	b084      	sub	sp, #16
 800b39a:	af00      	add	r7, sp, #0
 800b39c:	60f8      	str	r0, [r7, #12]
 800b39e:	60b9      	str	r1, [r7, #8]
 800b3a0:	607a      	str	r2, [r7, #4]
	if (__p)
 800b3a2:	68bb      	ldr	r3, [r7, #8]
 800b3a4:	2b00      	cmp	r3, #0
 800b3a6:	d005      	beq.n	800b3b4 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b3a8:	68fb      	ldr	r3, [r7, #12]
 800b3aa:	687a      	ldr	r2, [r7, #4]
 800b3ac:	68b9      	ldr	r1, [r7, #8]
 800b3ae:	4618      	mov	r0, r3
 800b3b0:	f000 f987 	bl	800b6c2 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE10deallocateERS2_PS1_j>
      }
 800b3b4:	bf00      	nop
 800b3b6:	3710      	adds	r7, #16
 800b3b8:	46bd      	mov	sp, r7
 800b3ba:	bd80      	pop	{r7, pc}

0800b3bc <_ZSt8_DestroyIPP18Compare_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b3bc:	b580      	push	{r7, lr}
 800b3be:	b082      	sub	sp, #8
 800b3c0:	af00      	add	r7, sp, #0
 800b3c2:	6078      	str	r0, [r7, #4]
 800b3c4:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b3c6:	6839      	ldr	r1, [r7, #0]
 800b3c8:	6878      	ldr	r0, [r7, #4]
 800b3ca:	f000 f989 	bl	800b6e0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18Compare_expressionEEvT_S5_>
    }
 800b3ce:	bf00      	nop
 800b3d0:	3708      	adds	r7, #8
 800b3d2:	46bd      	mov	sp, r7
 800b3d4:	bd80      	pop	{r7, pc}

0800b3d6 <_ZNSaIP14And_expressionED1Ev>:
 800b3d6:	b580      	push	{r7, lr}
 800b3d8:	b082      	sub	sp, #8
 800b3da:	af00      	add	r7, sp, #0
 800b3dc:	6078      	str	r0, [r7, #4]
 800b3de:	6878      	ldr	r0, [r7, #4]
 800b3e0:	f000 f989 	bl	800b6f6 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionED1Ev>
 800b3e4:	687b      	ldr	r3, [r7, #4]
 800b3e6:	4618      	mov	r0, r3
 800b3e8:	3708      	adds	r7, #8
 800b3ea:	46bd      	mov	sp, r7
 800b3ec:	bd80      	pop	{r7, pc}

0800b3ee <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b3ee:	b580      	push	{r7, lr}
 800b3f0:	b084      	sub	sp, #16
 800b3f2:	af00      	add	r7, sp, #0
 800b3f4:	60f8      	str	r0, [r7, #12]
 800b3f6:	60b9      	str	r1, [r7, #8]
 800b3f8:	607a      	str	r2, [r7, #4]
	if (__p)
 800b3fa:	68bb      	ldr	r3, [r7, #8]
 800b3fc:	2b00      	cmp	r3, #0
 800b3fe:	d005      	beq.n	800b40c <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b400:	68fb      	ldr	r3, [r7, #12]
 800b402:	687a      	ldr	r2, [r7, #4]
 800b404:	68b9      	ldr	r1, [r7, #8]
 800b406:	4618      	mov	r0, r3
 800b408:	f000 f980 	bl	800b70c <_ZNSt16allocator_traitsISaIP14And_expressionEE10deallocateERS2_PS1_j>
      }
 800b40c:	bf00      	nop
 800b40e:	3710      	adds	r7, #16
 800b410:	46bd      	mov	sp, r7
 800b412:	bd80      	pop	{r7, pc}

0800b414 <_ZSt8_DestroyIPP14And_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b414:	b580      	push	{r7, lr}
 800b416:	b082      	sub	sp, #8
 800b418:	af00      	add	r7, sp, #0
 800b41a:	6078      	str	r0, [r7, #4]
 800b41c:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b41e:	6839      	ldr	r1, [r7, #0]
 800b420:	6878      	ldr	r0, [r7, #4]
 800b422:	f000 f982 	bl	800b72a <_ZNSt12_Destroy_auxILb1EE9__destroyIPP14And_expressionEEvT_S5_>
    }
 800b426:	bf00      	nop
 800b428:	3708      	adds	r7, #8
 800b42a:	46bd      	mov	sp, r7
 800b42c:	bd80      	pop	{r7, pc}

0800b42e <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b42e:	b480      	push	{r7}
 800b430:	b083      	sub	sp, #12
 800b432:	af00      	add	r7, sp, #0
 800b434:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	4618      	mov	r0, r3
 800b43a:	370c      	adds	r7, #12
 800b43c:	46bd      	mov	sp, r7
 800b43e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b442:	4770      	bx	lr

0800b444 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b444:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b446:	b083      	sub	sp, #12
 800b448:	af00      	add	r7, sp, #0
 800b44a:	6078      	str	r0, [r7, #4]
 800b44c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b44e:	6878      	ldr	r0, [r7, #4]
 800b450:	f000 f88d 	bl	800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b454:	4604      	mov	r4, r0
 800b456:	6838      	ldr	r0, [r7, #0]
 800b458:	f7fa fb43 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800b45c:	4603      	mov	r3, r0
 800b45e:	461a      	mov	r2, r3
 800b460:	4621      	mov	r1, r4
 800b462:	4628      	mov	r0, r5
 800b464:	f000 f96c 	bl	800b740 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b468:	4633      	mov	r3, r6
    }
 800b46a:	4618      	mov	r0, r3
 800b46c:	370c      	adds	r7, #12
 800b46e:	46bd      	mov	sp, r7
 800b470:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b472 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b472:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b474:	b083      	sub	sp, #12
 800b476:	af00      	add	r7, sp, #0
 800b478:	6078      	str	r0, [r7, #4]
 800b47a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b47c:	6878      	ldr	r0, [r7, #4]
 800b47e:	f000 f876 	bl	800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b482:	4604      	mov	r4, r0
 800b484:	6838      	ldr	r0, [r7, #0]
 800b486:	f7fa fae8 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800b48a:	4603      	mov	r3, r0
 800b48c:	461a      	mov	r2, r3
 800b48e:	4621      	mov	r1, r4
 800b490:	4628      	mov	r0, r5
 800b492:	f000 f96c 	bl	800b76e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b496:	4633      	mov	r3, r6
    }
 800b498:	4618      	mov	r0, r3
 800b49a:	370c      	adds	r7, #12
 800b49c:	46bd      	mov	sp, r7
 800b49e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b4a0 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b4a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b4a2:	b083      	sub	sp, #12
 800b4a4:	af00      	add	r7, sp, #0
 800b4a6:	6078      	str	r0, [r7, #4]
 800b4a8:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b4aa:	6878      	ldr	r0, [r7, #4]
 800b4ac:	f000 f85f 	bl	800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b4b0:	4604      	mov	r4, r0
 800b4b2:	6838      	ldr	r0, [r7, #0]
 800b4b4:	f7fa faf3 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800b4b8:	4603      	mov	r3, r0
 800b4ba:	461a      	mov	r2, r3
 800b4bc:	4621      	mov	r1, r4
 800b4be:	4628      	mov	r0, r5
 800b4c0:	f000 f96c 	bl	800b79c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b4c4:	4633      	mov	r3, r6
    }
 800b4c6:	4618      	mov	r0, r3
 800b4c8:	370c      	adds	r7, #12
 800b4ca:	46bd      	mov	sp, r7
 800b4cc:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b4ce <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b4ce:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b4d0:	b083      	sub	sp, #12
 800b4d2:	af00      	add	r7, sp, #0
 800b4d4:	6078      	str	r0, [r7, #4]
 800b4d6:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b4d8:	6878      	ldr	r0, [r7, #4]
 800b4da:	f000 f848 	bl	800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b4de:	4604      	mov	r4, r0
 800b4e0:	6838      	ldr	r0, [r7, #0]
 800b4e2:	f7fa fb2c 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800b4e6:	4603      	mov	r3, r0
 800b4e8:	461a      	mov	r2, r3
 800b4ea:	4621      	mov	r1, r4
 800b4ec:	4628      	mov	r0, r5
 800b4ee:	f000 f96c 	bl	800b7ca <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b4f2:	4633      	mov	r3, r6
    }
 800b4f4:	4618      	mov	r0, r3
 800b4f6:	370c      	adds	r7, #12
 800b4f8:	46bd      	mov	sp, r7
 800b4fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b4fc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSA_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b4fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b4fe:	b083      	sub	sp, #12
 800b500:	af00      	add	r7, sp, #0
 800b502:	6078      	str	r0, [r7, #4]
 800b504:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b506:	6878      	ldr	r0, [r7, #4]
 800b508:	f000 f831 	bl	800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b50c:	4604      	mov	r4, r0
 800b50e:	6838      	ldr	r0, [r7, #0]
 800b510:	f000 f972 	bl	800b7f8 <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>
 800b514:	4603      	mov	r3, r0
 800b516:	461a      	mov	r2, r3
 800b518:	4621      	mov	r1, r4
 800b51a:	4628      	mov	r0, r5
 800b51c:	f000 f977 	bl	800b80e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSB_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b520:	4633      	mov	r3, r6
    }
 800b522:	4618      	mov	r0, r3
 800b524:	370c      	adds	r7, #12
 800b526:	46bd      	mov	sp, r7
 800b528:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b52a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b52a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b52c:	b083      	sub	sp, #12
 800b52e:	af00      	add	r7, sp, #0
 800b530:	6078      	str	r0, [r7, #4]
 800b532:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b534:	6878      	ldr	r0, [r7, #4]
 800b536:	f000 f81a 	bl	800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b53a:	4604      	mov	r4, r0
 800b53c:	6838      	ldr	r0, [r7, #0]
 800b53e:	f000 f97d 	bl	800b83c <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>
 800b542:	4603      	mov	r3, r0
 800b544:	461a      	mov	r2, r3
 800b546:	4621      	mov	r1, r4
 800b548:	4628      	mov	r0, r5
 800b54a:	f000 f982 	bl	800b852 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b54e:	4633      	mov	r3, r6
    }
 800b550:	4618      	mov	r0, r3
 800b552:	370c      	adds	r7, #12
 800b554:	46bd      	mov	sp, r7
 800b556:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b558 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 800b558:	b480      	push	{r7}
 800b55a:	b083      	sub	sp, #12
 800b55c:	af00      	add	r7, sp, #0
 800b55e:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 800b560:	687b      	ldr	r3, [r7, #4]
 800b562:	4618      	mov	r0, r3
 800b564:	370c      	adds	r7, #12
 800b566:	46bd      	mov	sp, r7
 800b568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b56c:	4770      	bx	lr

0800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b56e:	b480      	push	{r7}
 800b570:	b083      	sub	sp, #12
 800b572:	af00      	add	r7, sp, #0
 800b574:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b576:	687b      	ldr	r3, [r7, #4]
 800b578:	4618      	mov	r0, r3
 800b57a:	370c      	adds	r7, #12
 800b57c:	46bd      	mov	sp, r7
 800b57e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b582:	4770      	bx	lr

0800b584 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800b584:	b480      	push	{r7}
 800b586:	b083      	sub	sp, #12
 800b588:	af00      	add	r7, sp, #0
 800b58a:	6078      	str	r0, [r7, #4]
 800b58c:	687b      	ldr	r3, [r7, #4]
 800b58e:	4618      	mov	r0, r3
 800b590:	370c      	adds	r7, #12
 800b592:	46bd      	mov	sp, r7
 800b594:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b598:	4770      	bx	lr

0800b59a <_ZNSt16allocator_traitsISaIP16Power_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b59a:	b580      	push	{r7, lr}
 800b59c:	b084      	sub	sp, #16
 800b59e:	af00      	add	r7, sp, #0
 800b5a0:	60f8      	str	r0, [r7, #12]
 800b5a2:	60b9      	str	r1, [r7, #8]
 800b5a4:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b5a6:	687a      	ldr	r2, [r7, #4]
 800b5a8:	68b9      	ldr	r1, [r7, #8]
 800b5aa:	68f8      	ldr	r0, [r7, #12]
 800b5ac:	f000 f968 	bl	800b880 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE10deallocateEPS2_j>
 800b5b0:	bf00      	nop
 800b5b2:	3710      	adds	r7, #16
 800b5b4:	46bd      	mov	sp, r7
 800b5b6:	bd80      	pop	{r7, pc}

0800b5b8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16Power_expressionEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 800b5b8:	b480      	push	{r7}
 800b5ba:	b083      	sub	sp, #12
 800b5bc:	af00      	add	r7, sp, #0
 800b5be:	6078      	str	r0, [r7, #4]
 800b5c0:	6039      	str	r1, [r7, #0]
 800b5c2:	bf00      	nop
 800b5c4:	370c      	adds	r7, #12
 800b5c6:	46bd      	mov	sp, r7
 800b5c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5cc:	4770      	bx	lr

0800b5ce <_ZN9__gnu_cxx13new_allocatorI13mult_operatorED1Ev>:
 800b5ce:	b480      	push	{r7}
 800b5d0:	b083      	sub	sp, #12
 800b5d2:	af00      	add	r7, sp, #0
 800b5d4:	6078      	str	r0, [r7, #4]
 800b5d6:	687b      	ldr	r3, [r7, #4]
 800b5d8:	4618      	mov	r0, r3
 800b5da:	370c      	adds	r7, #12
 800b5dc:	46bd      	mov	sp, r7
 800b5de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5e2:	4770      	bx	lr

0800b5e4 <_ZNSt16allocator_traitsISaI13mult_operatorEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b5e4:	b580      	push	{r7, lr}
 800b5e6:	b084      	sub	sp, #16
 800b5e8:	af00      	add	r7, sp, #0
 800b5ea:	60f8      	str	r0, [r7, #12]
 800b5ec:	60b9      	str	r1, [r7, #8]
 800b5ee:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b5f0:	687a      	ldr	r2, [r7, #4]
 800b5f2:	68b9      	ldr	r1, [r7, #8]
 800b5f4:	68f8      	ldr	r0, [r7, #12]
 800b5f6:	f000 f94f 	bl	800b898 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE10deallocateEPS1_j>
 800b5fa:	bf00      	nop
 800b5fc:	3710      	adds	r7, #16
 800b5fe:	46bd      	mov	sp, r7
 800b600:	bd80      	pop	{r7, pc}

0800b602 <_ZNSt12_Destroy_auxILb1EE9__destroyIP13mult_operatorEEvT_S4_>:
 800b602:	b480      	push	{r7}
 800b604:	b083      	sub	sp, #12
 800b606:	af00      	add	r7, sp, #0
 800b608:	6078      	str	r0, [r7, #4]
 800b60a:	6039      	str	r1, [r7, #0]
 800b60c:	bf00      	nop
 800b60e:	370c      	adds	r7, #12
 800b610:	46bd      	mov	sp, r7
 800b612:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b616:	4770      	bx	lr

0800b618 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionED1Ev>:
 800b618:	b480      	push	{r7}
 800b61a:	b083      	sub	sp, #12
 800b61c:	af00      	add	r7, sp, #0
 800b61e:	6078      	str	r0, [r7, #4]
 800b620:	687b      	ldr	r3, [r7, #4]
 800b622:	4618      	mov	r0, r3
 800b624:	370c      	adds	r7, #12
 800b626:	46bd      	mov	sp, r7
 800b628:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b62c:	4770      	bx	lr

0800b62e <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b62e:	b580      	push	{r7, lr}
 800b630:	b084      	sub	sp, #16
 800b632:	af00      	add	r7, sp, #0
 800b634:	60f8      	str	r0, [r7, #12]
 800b636:	60b9      	str	r1, [r7, #8]
 800b638:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b63a:	687a      	ldr	r2, [r7, #4]
 800b63c:	68b9      	ldr	r1, [r7, #8]
 800b63e:	68f8      	ldr	r0, [r7, #12]
 800b640:	f000 f936 	bl	800b8b0 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE10deallocateEPS2_j>
 800b644:	bf00      	nop
 800b646:	3710      	adds	r7, #16
 800b648:	46bd      	mov	sp, r7
 800b64a:	bd80      	pop	{r7, pc}

0800b64c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP19Multiply_expressionEEvT_S5_>:
 800b64c:	b480      	push	{r7}
 800b64e:	b083      	sub	sp, #12
 800b650:	af00      	add	r7, sp, #0
 800b652:	6078      	str	r0, [r7, #4]
 800b654:	6039      	str	r1, [r7, #0]
 800b656:	bf00      	nop
 800b658:	370c      	adds	r7, #12
 800b65a:	46bd      	mov	sp, r7
 800b65c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b660:	4770      	bx	lr

0800b662 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorED1Ev>:
 800b662:	b480      	push	{r7}
 800b664:	b083      	sub	sp, #12
 800b666:	af00      	add	r7, sp, #0
 800b668:	6078      	str	r0, [r7, #4]
 800b66a:	687b      	ldr	r3, [r7, #4]
 800b66c:	4618      	mov	r0, r3
 800b66e:	370c      	adds	r7, #12
 800b670:	46bd      	mov	sp, r7
 800b672:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b676:	4770      	bx	lr

0800b678 <_ZNSt16allocator_traitsISaI12sum_operatorEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b678:	b580      	push	{r7, lr}
 800b67a:	b084      	sub	sp, #16
 800b67c:	af00      	add	r7, sp, #0
 800b67e:	60f8      	str	r0, [r7, #12]
 800b680:	60b9      	str	r1, [r7, #8]
 800b682:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b684:	687a      	ldr	r2, [r7, #4]
 800b686:	68b9      	ldr	r1, [r7, #8]
 800b688:	68f8      	ldr	r0, [r7, #12]
 800b68a:	f000 f91d 	bl	800b8c8 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE10deallocateEPS1_j>
 800b68e:	bf00      	nop
 800b690:	3710      	adds	r7, #16
 800b692:	46bd      	mov	sp, r7
 800b694:	bd80      	pop	{r7, pc}

0800b696 <_ZNSt12_Destroy_auxILb1EE9__destroyIP12sum_operatorEEvT_S4_>:
 800b696:	b480      	push	{r7}
 800b698:	b083      	sub	sp, #12
 800b69a:	af00      	add	r7, sp, #0
 800b69c:	6078      	str	r0, [r7, #4]
 800b69e:	6039      	str	r1, [r7, #0]
 800b6a0:	bf00      	nop
 800b6a2:	370c      	adds	r7, #12
 800b6a4:	46bd      	mov	sp, r7
 800b6a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6aa:	4770      	bx	lr

0800b6ac <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionED1Ev>:
 800b6ac:	b480      	push	{r7}
 800b6ae:	b083      	sub	sp, #12
 800b6b0:	af00      	add	r7, sp, #0
 800b6b2:	6078      	str	r0, [r7, #4]
 800b6b4:	687b      	ldr	r3, [r7, #4]
 800b6b6:	4618      	mov	r0, r3
 800b6b8:	370c      	adds	r7, #12
 800b6ba:	46bd      	mov	sp, r7
 800b6bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6c0:	4770      	bx	lr

0800b6c2 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b6c2:	b580      	push	{r7, lr}
 800b6c4:	b084      	sub	sp, #16
 800b6c6:	af00      	add	r7, sp, #0
 800b6c8:	60f8      	str	r0, [r7, #12]
 800b6ca:	60b9      	str	r1, [r7, #8]
 800b6cc:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b6ce:	687a      	ldr	r2, [r7, #4]
 800b6d0:	68b9      	ldr	r1, [r7, #8]
 800b6d2:	68f8      	ldr	r0, [r7, #12]
 800b6d4:	f000 f904 	bl	800b8e0 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE10deallocateEPS2_j>
 800b6d8:	bf00      	nop
 800b6da:	3710      	adds	r7, #16
 800b6dc:	46bd      	mov	sp, r7
 800b6de:	bd80      	pop	{r7, pc}

0800b6e0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18Compare_expressionEEvT_S5_>:
 800b6e0:	b480      	push	{r7}
 800b6e2:	b083      	sub	sp, #12
 800b6e4:	af00      	add	r7, sp, #0
 800b6e6:	6078      	str	r0, [r7, #4]
 800b6e8:	6039      	str	r1, [r7, #0]
 800b6ea:	bf00      	nop
 800b6ec:	370c      	adds	r7, #12
 800b6ee:	46bd      	mov	sp, r7
 800b6f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6f4:	4770      	bx	lr

0800b6f6 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionED1Ev>:
 800b6f6:	b480      	push	{r7}
 800b6f8:	b083      	sub	sp, #12
 800b6fa:	af00      	add	r7, sp, #0
 800b6fc:	6078      	str	r0, [r7, #4]
 800b6fe:	687b      	ldr	r3, [r7, #4]
 800b700:	4618      	mov	r0, r3
 800b702:	370c      	adds	r7, #12
 800b704:	46bd      	mov	sp, r7
 800b706:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b70a:	4770      	bx	lr

0800b70c <_ZNSt16allocator_traitsISaIP14And_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b70c:	b580      	push	{r7, lr}
 800b70e:	b084      	sub	sp, #16
 800b710:	af00      	add	r7, sp, #0
 800b712:	60f8      	str	r0, [r7, #12]
 800b714:	60b9      	str	r1, [r7, #8]
 800b716:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b718:	687a      	ldr	r2, [r7, #4]
 800b71a:	68b9      	ldr	r1, [r7, #8]
 800b71c:	68f8      	ldr	r0, [r7, #12]
 800b71e:	f000 f8eb 	bl	800b8f8 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE10deallocateEPS2_j>
 800b722:	bf00      	nop
 800b724:	3710      	adds	r7, #16
 800b726:	46bd      	mov	sp, r7
 800b728:	bd80      	pop	{r7, pc}

0800b72a <_ZNSt12_Destroy_auxILb1EE9__destroyIPP14And_expressionEEvT_S5_>:
 800b72a:	b480      	push	{r7}
 800b72c:	b083      	sub	sp, #12
 800b72e:	af00      	add	r7, sp, #0
 800b730:	6078      	str	r0, [r7, #4]
 800b732:	6039      	str	r1, [r7, #0]
 800b734:	bf00      	nop
 800b736:	370c      	adds	r7, #12
 800b738:	46bd      	mov	sp, r7
 800b73a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b73e:	4770      	bx	lr

0800b740 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b740:	b5b0      	push	{r4, r5, r7, lr}
 800b742:	b084      	sub	sp, #16
 800b744:	af00      	add	r7, sp, #0
 800b746:	7338      	strb	r0, [r7, #12]
 800b748:	60b9      	str	r1, [r7, #8]
 800b74a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b74c:	68b8      	ldr	r0, [r7, #8]
 800b74e:	f7ff ff0e 	bl	800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b752:	4604      	mov	r4, r0
 800b754:	6878      	ldr	r0, [r7, #4]
 800b756:	f7fa f9c4 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800b75a:	4603      	mov	r3, r0
 800b75c:	4619      	mov	r1, r3
 800b75e:	4620      	mov	r0, r4
 800b760:	f000 f8d6 	bl	800b910 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>
 800b764:	462b      	mov	r3, r5
 800b766:	4618      	mov	r0, r3
 800b768:	3710      	adds	r7, #16
 800b76a:	46bd      	mov	sp, r7
 800b76c:	bdb0      	pop	{r4, r5, r7, pc}

0800b76e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b76e:	b5b0      	push	{r4, r5, r7, lr}
 800b770:	b084      	sub	sp, #16
 800b772:	af00      	add	r7, sp, #0
 800b774:	7338      	strb	r0, [r7, #12]
 800b776:	60b9      	str	r1, [r7, #8]
 800b778:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b77a:	68b8      	ldr	r0, [r7, #8]
 800b77c:	f7ff fef7 	bl	800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b780:	4604      	mov	r4, r0
 800b782:	6878      	ldr	r0, [r7, #4]
 800b784:	f7fa f969 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800b788:	4603      	mov	r3, r0
 800b78a:	4619      	mov	r1, r3
 800b78c:	4620      	mov	r0, r4
 800b78e:	f000 f8d0 	bl	800b932 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>
 800b792:	462b      	mov	r3, r5
 800b794:	4618      	mov	r0, r3
 800b796:	3710      	adds	r7, #16
 800b798:	46bd      	mov	sp, r7
 800b79a:	bdb0      	pop	{r4, r5, r7, pc}

0800b79c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b79c:	b5b0      	push	{r4, r5, r7, lr}
 800b79e:	b084      	sub	sp, #16
 800b7a0:	af00      	add	r7, sp, #0
 800b7a2:	7338      	strb	r0, [r7, #12]
 800b7a4:	60b9      	str	r1, [r7, #8]
 800b7a6:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b7a8:	68b8      	ldr	r0, [r7, #8]
 800b7aa:	f7ff fee0 	bl	800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b7ae:	4604      	mov	r4, r0
 800b7b0:	6878      	ldr	r0, [r7, #4]
 800b7b2:	f7fa f974 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800b7b6:	4603      	mov	r3, r0
 800b7b8:	4619      	mov	r1, r3
 800b7ba:	4620      	mov	r0, r4
 800b7bc:	f000 f8ca 	bl	800b954 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>
 800b7c0:	462b      	mov	r3, r5
 800b7c2:	4618      	mov	r0, r3
 800b7c4:	3710      	adds	r7, #16
 800b7c6:	46bd      	mov	sp, r7
 800b7c8:	bdb0      	pop	{r4, r5, r7, pc}

0800b7ca <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b7ca:	b5b0      	push	{r4, r5, r7, lr}
 800b7cc:	b084      	sub	sp, #16
 800b7ce:	af00      	add	r7, sp, #0
 800b7d0:	7338      	strb	r0, [r7, #12]
 800b7d2:	60b9      	str	r1, [r7, #8]
 800b7d4:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b7d6:	68b8      	ldr	r0, [r7, #8]
 800b7d8:	f7ff fec9 	bl	800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b7dc:	4604      	mov	r4, r0
 800b7de:	6878      	ldr	r0, [r7, #4]
 800b7e0:	f7fa f9ad 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800b7e4:	4603      	mov	r3, r0
 800b7e6:	4619      	mov	r1, r3
 800b7e8:	4620      	mov	r0, r4
 800b7ea:	f000 f8c4 	bl	800b976 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>
 800b7ee:	462b      	mov	r3, r5
 800b7f0:	4618      	mov	r0, r3
 800b7f2:	3710      	adds	r7, #16
 800b7f4:	46bd      	mov	sp, r7
 800b7f6:	bdb0      	pop	{r4, r5, r7, pc}

0800b7f8 <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b7f8:	b480      	push	{r7}
 800b7fa:	b083      	sub	sp, #12
 800b7fc:	af00      	add	r7, sp, #0
 800b7fe:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b800:	687b      	ldr	r3, [r7, #4]
 800b802:	4618      	mov	r0, r3
 800b804:	370c      	adds	r7, #12
 800b806:	46bd      	mov	sp, r7
 800b808:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b80c:	4770      	bx	lr

0800b80e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSB_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b80e:	b5b0      	push	{r4, r5, r7, lr}
 800b810:	b084      	sub	sp, #16
 800b812:	af00      	add	r7, sp, #0
 800b814:	7338      	strb	r0, [r7, #12]
 800b816:	60b9      	str	r1, [r7, #8]
 800b818:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b81a:	68b8      	ldr	r0, [r7, #8]
 800b81c:	f7ff fea7 	bl	800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b820:	4604      	mov	r4, r0
 800b822:	6878      	ldr	r0, [r7, #4]
 800b824:	f7ff ffe8 	bl	800b7f8 <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>
 800b828:	4603      	mov	r3, r0
 800b82a:	4619      	mov	r1, r3
 800b82c:	4620      	mov	r0, r4
 800b82e:	f000 f8b3 	bl	800b998 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS9_EENS0_16__variant_cookieESE_>
 800b832:	462b      	mov	r3, r5
 800b834:	4618      	mov	r0, r3
 800b836:	3710      	adds	r7, #16
 800b838:	46bd      	mov	sp, r7
 800b83a:	bdb0      	pop	{r4, r5, r7, pc}

0800b83c <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b83c:	b480      	push	{r7}
 800b83e:	b083      	sub	sp, #12
 800b840:	af00      	add	r7, sp, #0
 800b842:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b844:	687b      	ldr	r3, [r7, #4]
 800b846:	4618      	mov	r0, r3
 800b848:	370c      	adds	r7, #12
 800b84a:	46bd      	mov	sp, r7
 800b84c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b850:	4770      	bx	lr

0800b852 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b852:	b5b0      	push	{r4, r5, r7, lr}
 800b854:	b084      	sub	sp, #16
 800b856:	af00      	add	r7, sp, #0
 800b858:	7338      	strb	r0, [r7, #12]
 800b85a:	60b9      	str	r1, [r7, #8]
 800b85c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b85e:	68b8      	ldr	r0, [r7, #8]
 800b860:	f7ff fe85 	bl	800b56e <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b864:	4604      	mov	r4, r0
 800b866:	6878      	ldr	r0, [r7, #4]
 800b868:	f7ff ffe8 	bl	800b83c <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>
 800b86c:	4603      	mov	r3, r0
 800b86e:	4619      	mov	r1, r3
 800b870:	4620      	mov	r0, r4
 800b872:	f000 f8a2 	bl	800b9ba <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>
 800b876:	462b      	mov	r3, r5
 800b878:	4618      	mov	r0, r3
 800b87a:	3710      	adds	r7, #16
 800b87c:	46bd      	mov	sp, r7
 800b87e:	bdb0      	pop	{r4, r5, r7, pc}

0800b880 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800b880:	b580      	push	{r7, lr}
 800b882:	b084      	sub	sp, #16
 800b884:	af00      	add	r7, sp, #0
 800b886:	60f8      	str	r0, [r7, #12]
 800b888:	60b9      	str	r1, [r7, #8]
 800b88a:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800b88c:	68b8      	ldr	r0, [r7, #8]
 800b88e:	f016 fdf3 	bl	8022478 <_ZdlPv>
      }
 800b892:	3710      	adds	r7, #16
 800b894:	46bd      	mov	sp, r7
 800b896:	bd80      	pop	{r7, pc}

0800b898 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800b898:	b580      	push	{r7, lr}
 800b89a:	b084      	sub	sp, #16
 800b89c:	af00      	add	r7, sp, #0
 800b89e:	60f8      	str	r0, [r7, #12]
 800b8a0:	60b9      	str	r1, [r7, #8]
 800b8a2:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800b8a4:	68b8      	ldr	r0, [r7, #8]
 800b8a6:	f016 fde7 	bl	8022478 <_ZdlPv>
      }
 800b8aa:	3710      	adds	r7, #16
 800b8ac:	46bd      	mov	sp, r7
 800b8ae:	bd80      	pop	{r7, pc}

0800b8b0 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800b8b0:	b580      	push	{r7, lr}
 800b8b2:	b084      	sub	sp, #16
 800b8b4:	af00      	add	r7, sp, #0
 800b8b6:	60f8      	str	r0, [r7, #12]
 800b8b8:	60b9      	str	r1, [r7, #8]
 800b8ba:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800b8bc:	68b8      	ldr	r0, [r7, #8]
 800b8be:	f016 fddb 	bl	8022478 <_ZdlPv>
      }
 800b8c2:	3710      	adds	r7, #16
 800b8c4:	46bd      	mov	sp, r7
 800b8c6:	bd80      	pop	{r7, pc}

0800b8c8 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800b8c8:	b580      	push	{r7, lr}
 800b8ca:	b084      	sub	sp, #16
 800b8cc:	af00      	add	r7, sp, #0
 800b8ce:	60f8      	str	r0, [r7, #12]
 800b8d0:	60b9      	str	r1, [r7, #8]
 800b8d2:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800b8d4:	68b8      	ldr	r0, [r7, #8]
 800b8d6:	f016 fdcf 	bl	8022478 <_ZdlPv>
      }
 800b8da:	3710      	adds	r7, #16
 800b8dc:	46bd      	mov	sp, r7
 800b8de:	bd80      	pop	{r7, pc}

0800b8e0 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800b8e0:	b580      	push	{r7, lr}
 800b8e2:	b084      	sub	sp, #16
 800b8e4:	af00      	add	r7, sp, #0
 800b8e6:	60f8      	str	r0, [r7, #12]
 800b8e8:	60b9      	str	r1, [r7, #8]
 800b8ea:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800b8ec:	68b8      	ldr	r0, [r7, #8]
 800b8ee:	f016 fdc3 	bl	8022478 <_ZdlPv>
      }
 800b8f2:	3710      	adds	r7, #16
 800b8f4:	46bd      	mov	sp, r7
 800b8f6:	bd80      	pop	{r7, pc}

0800b8f8 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800b8f8:	b580      	push	{r7, lr}
 800b8fa:	b084      	sub	sp, #16
 800b8fc:	af00      	add	r7, sp, #0
 800b8fe:	60f8      	str	r0, [r7, #12]
 800b900:	60b9      	str	r1, [r7, #8]
 800b902:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800b904:	68b8      	ldr	r0, [r7, #8]
 800b906:	f016 fdb7 	bl	8022478 <_ZdlPv>
      }
 800b90a:	3710      	adds	r7, #16
 800b90c:	46bd      	mov	sp, r7
 800b90e:	bd80      	pop	{r7, pc}

0800b910 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>:
	__do_visit([](auto&& __this_mem) mutable
 800b910:	b590      	push	{r4, r7, lr}
 800b912:	b083      	sub	sp, #12
 800b914:	af00      	add	r7, sp, #0
 800b916:	6078      	str	r0, [r7, #4]
 800b918:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800b91a:	6838      	ldr	r0, [r7, #0]
 800b91c:	f7fb fbf2 	bl	8007104 <_ZSt11__addressofIbEPT_RS0_>
 800b920:	4603      	mov	r3, r0
 800b922:	4618      	mov	r0, r3
 800b924:	f7fb fbf9 	bl	800711a <_ZSt8_DestroyIbEvPT_>
	    return {};
 800b928:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800b92a:	4618      	mov	r0, r3
 800b92c:	370c      	adds	r7, #12
 800b92e:	46bd      	mov	sp, r7
 800b930:	bd90      	pop	{r4, r7, pc}

0800b932 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>:
 800b932:	b590      	push	{r4, r7, lr}
 800b934:	b083      	sub	sp, #12
 800b936:	af00      	add	r7, sp, #0
 800b938:	6078      	str	r0, [r7, #4]
 800b93a:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800b93c:	6838      	ldr	r0, [r7, #0]
 800b93e:	f7fb fbb7 	bl	80070b0 <_ZSt11__addressofIiEPT_RS0_>
 800b942:	4603      	mov	r3, r0
 800b944:	4618      	mov	r0, r3
 800b946:	f7fb fbbe 	bl	80070c6 <_ZSt8_DestroyIiEvPT_>
	    return {};
 800b94a:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800b94c:	4618      	mov	r0, r3
 800b94e:	370c      	adds	r7, #12
 800b950:	46bd      	mov	sp, r7
 800b952:	bd90      	pop	{r4, r7, pc}

0800b954 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>:
 800b954:	b590      	push	{r4, r7, lr}
 800b956:	b083      	sub	sp, #12
 800b958:	af00      	add	r7, sp, #0
 800b95a:	6078      	str	r0, [r7, #4]
 800b95c:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800b95e:	6838      	ldr	r0, [r7, #0]
 800b960:	f7fb fbbb 	bl	80070da <_ZSt11__addressofIfEPT_RS0_>
 800b964:	4603      	mov	r3, r0
 800b966:	4618      	mov	r0, r3
 800b968:	f7fb fbc2 	bl	80070f0 <_ZSt8_DestroyIfEvPT_>
	    return {};
 800b96c:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800b96e:	4618      	mov	r0, r3
 800b970:	370c      	adds	r7, #12
 800b972:	46bd      	mov	sp, r7
 800b974:	bd90      	pop	{r4, r7, pc}

0800b976 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>:
 800b976:	b590      	push	{r4, r7, lr}
 800b978:	b083      	sub	sp, #12
 800b97a:	af00      	add	r7, sp, #0
 800b97c:	6078      	str	r0, [r7, #4]
 800b97e:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800b980:	6838      	ldr	r0, [r7, #0]
 800b982:	f7fb fbd4 	bl	800712e <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800b986:	4603      	mov	r3, r0
 800b988:	4618      	mov	r0, r3
 800b98a:	f7fb fbdb 	bl	8007144 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 800b98e:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800b990:	4618      	mov	r0, r3
 800b992:	370c      	adds	r7, #12
 800b994:	46bd      	mov	sp, r7
 800b996:	bd90      	pop	{r4, r7, pc}

0800b998 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS9_EENS0_16__variant_cookieESE_>:
 800b998:	b590      	push	{r4, r7, lr}
 800b99a:	b083      	sub	sp, #12
 800b99c:	af00      	add	r7, sp, #0
 800b99e:	6078      	str	r0, [r7, #4]
 800b9a0:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800b9a2:	6838      	ldr	r0, [r7, #0]
 800b9a4:	f000 f81a 	bl	800b9dc <_ZSt11__addressofIP8VariableEPT_RS2_>
 800b9a8:	4603      	mov	r3, r0
 800b9aa:	4618      	mov	r0, r3
 800b9ac:	f000 f821 	bl	800b9f2 <_ZSt8_DestroyIP8VariableEvPT_>
	    return {};
 800b9b0:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800b9b2:	4618      	mov	r0, r3
 800b9b4:	370c      	adds	r7, #12
 800b9b6:	46bd      	mov	sp, r7
 800b9b8:	bd90      	pop	{r4, r7, pc}

0800b9ba <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>:
 800b9ba:	b590      	push	{r4, r7, lr}
 800b9bc:	b083      	sub	sp, #12
 800b9be:	af00      	add	r7, sp, #0
 800b9c0:	6078      	str	r0, [r7, #4]
 800b9c2:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800b9c4:	6838      	ldr	r0, [r7, #0]
 800b9c6:	f000 f81e 	bl	800ba06 <_ZSt11__addressofIP13Function_callEPT_RS2_>
 800b9ca:	4603      	mov	r3, r0
 800b9cc:	4618      	mov	r0, r3
 800b9ce:	f000 f825 	bl	800ba1c <_ZSt8_DestroyIP13Function_callEvPT_>
	    return {};
 800b9d2:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800b9d4:	4618      	mov	r0, r3
 800b9d6:	370c      	adds	r7, #12
 800b9d8:	46bd      	mov	sp, r7
 800b9da:	bd90      	pop	{r4, r7, pc}

0800b9dc <_ZSt11__addressofIP8VariableEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800b9dc:	b480      	push	{r7}
 800b9de:	b083      	sub	sp, #12
 800b9e0:	af00      	add	r7, sp, #0
 800b9e2:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800b9e4:	687b      	ldr	r3, [r7, #4]
 800b9e6:	4618      	mov	r0, r3
 800b9e8:	370c      	adds	r7, #12
 800b9ea:	46bd      	mov	sp, r7
 800b9ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9f0:	4770      	bx	lr

0800b9f2 <_ZSt8_DestroyIP8VariableEvPT_>:
    _Destroy(_Tp* __pointer)
 800b9f2:	b480      	push	{r7}
 800b9f4:	b083      	sub	sp, #12
 800b9f6:	af00      	add	r7, sp, #0
 800b9f8:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800b9fa:	bf00      	nop
 800b9fc:	370c      	adds	r7, #12
 800b9fe:	46bd      	mov	sp, r7
 800ba00:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba04:	4770      	bx	lr

0800ba06 <_ZSt11__addressofIP13Function_callEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800ba06:	b480      	push	{r7}
 800ba08:	b083      	sub	sp, #12
 800ba0a:	af00      	add	r7, sp, #0
 800ba0c:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800ba0e:	687b      	ldr	r3, [r7, #4]
 800ba10:	4618      	mov	r0, r3
 800ba12:	370c      	adds	r7, #12
 800ba14:	46bd      	mov	sp, r7
 800ba16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba1a:	4770      	bx	lr

0800ba1c <_ZSt8_DestroyIP13Function_callEvPT_>:
    _Destroy(_Tp* __pointer)
 800ba1c:	b480      	push	{r7}
 800ba1e:	b083      	sub	sp, #12
 800ba20:	af00      	add	r7, sp, #0
 800ba22:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800ba24:	bf00      	nop
 800ba26:	370c      	adds	r7, #12
 800ba28:	46bd      	mov	sp, r7
 800ba2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba2e:	4770      	bx	lr

0800ba30 <_Z41__static_initialization_and_destruction_0ii>:
 800ba30:	b590      	push	{r4, r7, lr}
 800ba32:	b0e7      	sub	sp, #412	; 0x19c
 800ba34:	af02      	add	r7, sp, #8
 800ba36:	1d3b      	adds	r3, r7, #4
 800ba38:	6018      	str	r0, [r3, #0]
 800ba3a:	463b      	mov	r3, r7
 800ba3c:	6019      	str	r1, [r3, #0]
 800ba3e:	1d3b      	adds	r3, r7, #4
 800ba40:	681b      	ldr	r3, [r3, #0]
 800ba42:	2b01      	cmp	r3, #1
 800ba44:	f040 819d 	bne.w	800bd82 <_Z41__static_initialization_and_destruction_0ii+0x352>
 800ba48:	463b      	mov	r3, r7
 800ba4a:	681b      	ldr	r3, [r3, #0]
 800ba4c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ba50:	4293      	cmp	r3, r2
 800ba52:	f040 8196 	bne.w	800bd82 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800ba56:	f107 0314 	add.w	r3, r7, #20
 800ba5a:	4618      	mov	r0, r3
 800ba5c:	2322      	movs	r3, #34	; 0x22
 800ba5e:	461a      	mov	r2, r3
 800ba60:	2100      	movs	r1, #0
 800ba62:	f018 f9ff 	bl	8023e64 <memset>
 800ba66:	f107 0314 	add.w	r3, r7, #20
 800ba6a:	223a      	movs	r2, #58	; 0x3a
 800ba6c:	701a      	strb	r2, [r3, #0]
 800ba6e:	f107 0314 	add.w	r3, r7, #20
 800ba72:	2201      	movs	r2, #1
 800ba74:	705a      	strb	r2, [r3, #1]
 800ba76:	f107 0314 	add.w	r3, r7, #20
 800ba7a:	220a      	movs	r2, #10
 800ba7c:	709a      	strb	r2, [r3, #2]
 800ba7e:	f107 0314 	add.w	r3, r7, #20
 800ba82:	220a      	movs	r2, #10
 800ba84:	70da      	strb	r2, [r3, #3]
 800ba86:	f107 0314 	add.w	r3, r7, #20
 800ba8a:	222c      	movs	r2, #44	; 0x2c
 800ba8c:	711a      	strb	r2, [r3, #4]
 800ba8e:	f107 0314 	add.w	r3, r7, #20
 800ba92:	220c      	movs	r2, #12
 800ba94:	715a      	strb	r2, [r3, #5]
 800ba96:	f107 0314 	add.w	r3, r7, #20
 800ba9a:	222e      	movs	r2, #46	; 0x2e
 800ba9c:	719a      	strb	r2, [r3, #6]
 800ba9e:	f107 0314 	add.w	r3, r7, #20
 800baa2:	220b      	movs	r2, #11
 800baa4:	71da      	strb	r2, [r3, #7]
 800baa6:	f107 0314 	add.w	r3, r7, #20
 800baaa:	225b      	movs	r2, #91	; 0x5b
 800baac:	721a      	strb	r2, [r3, #8]
 800baae:	f107 0314 	add.w	r3, r7, #20
 800bab2:	220d      	movs	r2, #13
 800bab4:	725a      	strb	r2, [r3, #9]
 800bab6:	f107 0314 	add.w	r3, r7, #20
 800baba:	225d      	movs	r2, #93	; 0x5d
 800babc:	729a      	strb	r2, [r3, #10]
 800babe:	f107 0314 	add.w	r3, r7, #20
 800bac2:	220e      	movs	r2, #14
 800bac4:	72da      	strb	r2, [r3, #11]
 800bac6:	f107 0314 	add.w	r3, r7, #20
 800baca:	227c      	movs	r2, #124	; 0x7c
 800bacc:	731a      	strb	r2, [r3, #12]
 800bace:	f107 0314 	add.w	r3, r7, #20
 800bad2:	2215      	movs	r2, #21
 800bad4:	735a      	strb	r2, [r3, #13]
 800bad6:	f107 0314 	add.w	r3, r7, #20
 800bada:	2226      	movs	r2, #38	; 0x26
 800badc:	739a      	strb	r2, [r3, #14]
 800bade:	f107 0314 	add.w	r3, r7, #20
 800bae2:	2216      	movs	r2, #22
 800bae4:	73da      	strb	r2, [r3, #15]
 800bae6:	f107 0314 	add.w	r3, r7, #20
 800baea:	222b      	movs	r2, #43	; 0x2b
 800baec:	741a      	strb	r2, [r3, #16]
 800baee:	f107 0314 	add.w	r3, r7, #20
 800baf2:	221f      	movs	r2, #31
 800baf4:	745a      	strb	r2, [r3, #17]
 800baf6:	f107 0314 	add.w	r3, r7, #20
 800bafa:	222d      	movs	r2, #45	; 0x2d
 800bafc:	749a      	strb	r2, [r3, #18]
 800bafe:	f107 0314 	add.w	r3, r7, #20
 800bb02:	2220      	movs	r2, #32
 800bb04:	74da      	strb	r2, [r3, #19]
 800bb06:	f107 0314 	add.w	r3, r7, #20
 800bb0a:	222a      	movs	r2, #42	; 0x2a
 800bb0c:	751a      	strb	r2, [r3, #20]
 800bb0e:	f107 0314 	add.w	r3, r7, #20
 800bb12:	2221      	movs	r2, #33	; 0x21
 800bb14:	755a      	strb	r2, [r3, #21]
 800bb16:	f107 0314 	add.w	r3, r7, #20
 800bb1a:	222f      	movs	r2, #47	; 0x2f
 800bb1c:	759a      	strb	r2, [r3, #22]
 800bb1e:	f107 0314 	add.w	r3, r7, #20
 800bb22:	2222      	movs	r2, #34	; 0x22
 800bb24:	75da      	strb	r2, [r3, #23]
 800bb26:	f107 0314 	add.w	r3, r7, #20
 800bb2a:	225e      	movs	r2, #94	; 0x5e
 800bb2c:	761a      	strb	r2, [r3, #24]
 800bb2e:	f107 0314 	add.w	r3, r7, #20
 800bb32:	2223      	movs	r2, #35	; 0x23
 800bb34:	765a      	strb	r2, [r3, #25]
 800bb36:	f107 0314 	add.w	r3, r7, #20
 800bb3a:	2225      	movs	r2, #37	; 0x25
 800bb3c:	769a      	strb	r2, [r3, #26]
 800bb3e:	f107 0314 	add.w	r3, r7, #20
 800bb42:	2224      	movs	r2, #36	; 0x24
 800bb44:	76da      	strb	r2, [r3, #27]
 800bb46:	f107 0314 	add.w	r3, r7, #20
 800bb4a:	2228      	movs	r2, #40	; 0x28
 800bb4c:	771a      	strb	r2, [r3, #28]
 800bb4e:	f107 0314 	add.w	r3, r7, #20
 800bb52:	2226      	movs	r2, #38	; 0x26
 800bb54:	775a      	strb	r2, [r3, #29]
 800bb56:	f107 0314 	add.w	r3, r7, #20
 800bb5a:	2229      	movs	r2, #41	; 0x29
 800bb5c:	779a      	strb	r2, [r3, #30]
 800bb5e:	f107 0314 	add.w	r3, r7, #20
 800bb62:	2227      	movs	r2, #39	; 0x27
 800bb64:	77da      	strb	r2, [r3, #31]
 800bb66:	f107 0314 	add.w	r3, r7, #20
 800bb6a:	2225      	movs	r2, #37	; 0x25
 800bb6c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800bb70:	f107 030c 	add.w	r3, r7, #12
 800bb74:	f107 0214 	add.w	r2, r7, #20
 800bb78:	601a      	str	r2, [r3, #0]
 800bb7a:	f107 030c 	add.w	r3, r7, #12
 800bb7e:	2211      	movs	r2, #17
 800bb80:	605a      	str	r2, [r3, #4]
 800bb82:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800bb86:	4618      	mov	r0, r3
 800bb88:	f7f5 ff78 	bl	8001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800bb8c:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800bb90:	f107 020c 	add.w	r2, r7, #12
 800bb94:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800bb98:	9300      	str	r3, [sp, #0]
 800bb9a:	460b      	mov	r3, r1
 800bb9c:	ca06      	ldmia	r2, {r1, r2}
 800bb9e:	4885      	ldr	r0, [pc, #532]	; (800bdb4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800bba0:	f7f5 ff84 	bl	8001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800bba4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800bba8:	4618      	mov	r0, r3
 800bbaa:	f7f5 ff73 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800bbae:	2305      	movs	r3, #5
 800bbb0:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800bbb4:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800bbb8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bbbc:	497e      	ldr	r1, [pc, #504]	; (800bdb8 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800bbbe:	4618      	mov	r0, r3
 800bbc0:	f7f5 fa9a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800bbc4:	2306      	movs	r3, #6
 800bbc6:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800bbca:	f207 1263 	addw	r2, r7, #355	; 0x163
 800bbce:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bbd2:	331c      	adds	r3, #28
 800bbd4:	4979      	ldr	r1, [pc, #484]	; (800bdbc <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800bbd6:	4618      	mov	r0, r3
 800bbd8:	f7f5 fab6 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800bbdc:	2307      	movs	r3, #7
 800bbde:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800bbe2:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800bbe6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bbea:	3338      	adds	r3, #56	; 0x38
 800bbec:	4974      	ldr	r1, [pc, #464]	; (800bdc0 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800bbee:	4618      	mov	r0, r3
 800bbf0:	f7f5 faaa 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800bbf4:	2308      	movs	r3, #8
 800bbf6:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800bbfa:	f207 1265 	addw	r2, r7, #357	; 0x165
 800bbfe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bc02:	3354      	adds	r3, #84	; 0x54
 800bc04:	496f      	ldr	r1, [pc, #444]	; (800bdc4 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800bc06:	4618      	mov	r0, r3
 800bc08:	f7f5 fa76 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800bc0c:	2309      	movs	r3, #9
 800bc0e:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800bc12:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800bc16:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bc1a:	3370      	adds	r3, #112	; 0x70
 800bc1c:	496a      	ldr	r1, [pc, #424]	; (800bdc8 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800bc1e:	4618      	mov	r0, r3
 800bc20:	f7f5 faba 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800bc24:	2310      	movs	r3, #16
 800bc26:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800bc2a:	f207 1267 	addw	r2, r7, #359	; 0x167
 800bc2e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bc32:	338c      	adds	r3, #140	; 0x8c
 800bc34:	4965      	ldr	r1, [pc, #404]	; (800bdcc <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800bc36:	4618      	mov	r0, r3
 800bc38:	f7f5 fad6 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800bc3c:	2311      	movs	r3, #17
 800bc3e:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800bc42:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800bc46:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bc4a:	33a8      	adds	r3, #168	; 0xa8
 800bc4c:	4960      	ldr	r1, [pc, #384]	; (800bdd0 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800bc4e:	4618      	mov	r0, r3
 800bc50:	f7f5 faa2 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800bc54:	2312      	movs	r3, #18
 800bc56:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800bc5a:	f207 1269 	addw	r2, r7, #361	; 0x169
 800bc5e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bc62:	33c4      	adds	r3, #196	; 0xc4
 800bc64:	495b      	ldr	r1, [pc, #364]	; (800bdd4 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800bc66:	4618      	mov	r0, r3
 800bc68:	f7f5 fa46 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800bc6c:	2313      	movs	r3, #19
 800bc6e:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800bc72:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800bc76:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bc7a:	33e0      	adds	r3, #224	; 0xe0
 800bc7c:	4956      	ldr	r1, [pc, #344]	; (800bdd8 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800bc7e:	4618      	mov	r0, r3
 800bc80:	f7f5 fa62 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800bc84:	2314      	movs	r3, #20
 800bc86:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800bc8a:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800bc8e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bc92:	33fc      	adds	r3, #252	; 0xfc
 800bc94:	4951      	ldr	r1, [pc, #324]	; (800bddc <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800bc96:	4618      	mov	r0, r3
 800bc98:	f7f5 face 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800bc9c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800bca0:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800bca4:	601a      	str	r2, [r3, #0]
 800bca6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800bcaa:	220a      	movs	r2, #10
 800bcac:	605a      	str	r2, [r3, #4]
 800bcae:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800bcb2:	4618      	mov	r0, r3
 800bcb4:	f7f5 ff87 	bl	8001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800bcb8:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800bcbc:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800bcc0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800bcc4:	9300      	str	r3, [sp, #0]
 800bcc6:	460b      	mov	r3, r1
 800bcc8:	ca06      	ldmia	r2, {r1, r2}
 800bcca:	4845      	ldr	r0, [pc, #276]	; (800bde0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800bccc:	f7f5 ff93 	bl	8001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800bcd0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800bcd4:	4618      	mov	r0, r3
 800bcd6:	f7f5 ff82 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800bcda:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800bcde:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800bce2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bce6:	429c      	cmp	r4, r3
 800bce8:	d004      	beq.n	800bcf4 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800bcea:	3c1c      	subs	r4, #28
 800bcec:	4620      	mov	r0, r4
 800bcee:	f7f5 f9f6 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800bcf2:	e7f6      	b.n	800bce2 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800bcf4:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800bcf8:	2200      	movs	r2, #0
 800bcfa:	601a      	str	r2, [r3, #0]
 800bcfc:	605a      	str	r2, [r3, #4]
 800bcfe:	609a      	str	r2, [r3, #8]
 800bd00:	233c      	movs	r3, #60	; 0x3c
 800bd02:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800bd06:	231b      	movs	r3, #27
 800bd08:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800bd0c:	231c      	movs	r3, #28
 800bd0e:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800bd12:	233e      	movs	r3, #62	; 0x3e
 800bd14:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800bd18:	2319      	movs	r3, #25
 800bd1a:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800bd1e:	231a      	movs	r3, #26
 800bd20:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800bd24:	233d      	movs	r3, #61	; 0x3d
 800bd26:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800bd2a:	2318      	movs	r3, #24
 800bd2c:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800bd30:	231d      	movs	r3, #29
 800bd32:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800bd36:	2321      	movs	r3, #33	; 0x21
 800bd38:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800bd3c:	2317      	movs	r3, #23
 800bd3e:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800bd42:	231e      	movs	r3, #30
 800bd44:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800bd48:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800bd4c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800bd50:	2304      	movs	r3, #4
 800bd52:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800bd56:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800bd5a:	4618      	mov	r0, r3
 800bd5c:	f7f5 ff7b 	bl	8001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800bd60:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800bd64:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800bd68:	9300      	str	r3, [sp, #0]
 800bd6a:	4613      	mov	r3, r2
 800bd6c:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800bd70:	ca06      	ldmia	r2, {r1, r2}
 800bd72:	481c      	ldr	r0, [pc, #112]	; (800bde4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800bd74:	f7f5 ff87 	bl	8001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800bd78:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800bd7c:	4618      	mov	r0, r3
 800bd7e:	f7f5 ff76 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800bd82:	1d3b      	adds	r3, r7, #4
 800bd84:	681b      	ldr	r3, [r3, #0]
 800bd86:	2b00      	cmp	r3, #0
 800bd88:	d10e      	bne.n	800bda8 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800bd8a:	463b      	mov	r3, r7
 800bd8c:	681b      	ldr	r3, [r3, #0]
 800bd8e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bd92:	4293      	cmp	r3, r2
 800bd94:	d108      	bne.n	800bda8 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800bd96:	4813      	ldr	r0, [pc, #76]	; (800bde4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800bd98:	f7fd fc07 	bl	80095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800bd9c:	4810      	ldr	r0, [pc, #64]	; (800bde0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800bd9e:	f7fd fc11 	bl	80095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800bda2:	4804      	ldr	r0, [pc, #16]	; (800bdb4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800bda4:	f7fd fc1b 	bl	80095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800bda8:	bf00      	nop
 800bdaa:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800bdae:	46bd      	mov	sp, r7
 800bdb0:	bd90      	pop	{r4, r7, pc}
 800bdb2:	bf00      	nop
 800bdb4:	20000254 	.word	0x20000254
 800bdb8:	080272ac 	.word	0x080272ac
 800bdbc:	080272b4 	.word	0x080272b4
 800bdc0:	080272bc 	.word	0x080272bc
 800bdc4:	080272c4 	.word	0x080272c4
 800bdc8:	080272cc 	.word	0x080272cc
 800bdcc:	080272d4 	.word	0x080272d4
 800bdd0:	080272d8 	.word	0x080272d8
 800bdd4:	080272e0 	.word	0x080272e0
 800bdd8:	080272e8 	.word	0x080272e8
 800bddc:	080272f0 	.word	0x080272f0
 800bde0:	2000026c 	.word	0x2000026c
 800bde4:	20000284 	.word	0x20000284

0800bde8 <_GLOBAL__sub_I__ZN17Primal_expressionD2Ev>:
 800bde8:	b580      	push	{r7, lr}
 800bdea:	af00      	add	r7, sp, #0
 800bdec:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800bdf0:	2001      	movs	r0, #1
 800bdf2:	f7ff fe1d 	bl	800ba30 <_Z41__static_initialization_and_destruction_0ii>
 800bdf6:	bd80      	pop	{r7, pc}

0800bdf8 <_GLOBAL__sub_D__ZN17Primal_expressionD2Ev>:
 800bdf8:	b580      	push	{r7, lr}
 800bdfa:	af00      	add	r7, sp, #0
 800bdfc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800be00:	2000      	movs	r0, #0
 800be02:	f7ff fe15 	bl	800ba30 <_Z41__static_initialization_and_destruction_0ii>
 800be06:	bd80      	pop	{r7, pc}

0800be08 <_ZN21Expression_calculatorC1Ev>:
#include <Expression_calculator.h>

Expression_calculator::Expression_calculator()
 800be08:	b480      	push	{r7}
 800be0a:	b083      	sub	sp, #12
 800be0c:	af00      	add	r7, sp, #0
 800be0e:	6078      	str	r0, [r7, #4]
{

}
 800be10:	687b      	ldr	r3, [r7, #4]
 800be12:	4618      	mov	r0, r3
 800be14:	370c      	adds	r7, #12
 800be16:	46bd      	mov	sp, r7
 800be18:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be1c:	4770      	bx	lr
	...

0800be20 <_ZN21Expression_calculator12get_instanceEv>:

Expression_calculator& Expression_calculator::get_instance()
{
 800be20:	b580      	push	{r7, lr}
 800be22:	af00      	add	r7, sp, #0
	static Expression_calculator instance;
 800be24:	4b10      	ldr	r3, [pc, #64]	; (800be68 <_ZN21Expression_calculator12get_instanceEv+0x48>)
 800be26:	781b      	ldrb	r3, [r3, #0]
 800be28:	f3bf 8f5b 	dmb	ish
 800be2c:	b2db      	uxtb	r3, r3
 800be2e:	f003 0301 	and.w	r3, r3, #1
 800be32:	2b00      	cmp	r3, #0
 800be34:	bf0c      	ite	eq
 800be36:	2301      	moveq	r3, #1
 800be38:	2300      	movne	r3, #0
 800be3a:	b2db      	uxtb	r3, r3
 800be3c:	2b00      	cmp	r3, #0
 800be3e:	d010      	beq.n	800be62 <_ZN21Expression_calculator12get_instanceEv+0x42>
 800be40:	4809      	ldr	r0, [pc, #36]	; (800be68 <_ZN21Expression_calculator12get_instanceEv+0x48>)
 800be42:	f016 fb1d 	bl	8022480 <__cxa_guard_acquire>
 800be46:	4603      	mov	r3, r0
 800be48:	2b00      	cmp	r3, #0
 800be4a:	bf14      	ite	ne
 800be4c:	2301      	movne	r3, #1
 800be4e:	2300      	moveq	r3, #0
 800be50:	b2db      	uxtb	r3, r3
 800be52:	2b00      	cmp	r3, #0
 800be54:	d005      	beq.n	800be62 <_ZN21Expression_calculator12get_instanceEv+0x42>
 800be56:	4805      	ldr	r0, [pc, #20]	; (800be6c <_ZN21Expression_calculator12get_instanceEv+0x4c>)
 800be58:	f7ff ffd6 	bl	800be08 <_ZN21Expression_calculatorC1Ev>
 800be5c:	4802      	ldr	r0, [pc, #8]	; (800be68 <_ZN21Expression_calculator12get_instanceEv+0x48>)
 800be5e:	f016 fb1b 	bl	8022498 <__cxa_guard_release>
	return instance;
 800be62:	4b02      	ldr	r3, [pc, #8]	; (800be6c <_ZN21Expression_calculator12get_instanceEv+0x4c>)
}
 800be64:	4618      	mov	r0, r3
 800be66:	bd80      	pop	{r7, pc}
 800be68:	200002e8 	.word	0x200002e8
 800be6c:	200002e4 	.word	0x200002e4

0800be70 <_ZN6SymbolaSEOS_>:
 800be70:	b580      	push	{r7, lr}
 800be72:	b082      	sub	sp, #8
 800be74:	af00      	add	r7, sp, #0
 800be76:	6078      	str	r0, [r7, #4]
 800be78:	6039      	str	r1, [r7, #0]
 800be7a:	683b      	ldr	r3, [r7, #0]
 800be7c:	781a      	ldrb	r2, [r3, #0]
 800be7e:	687b      	ldr	r3, [r7, #4]
 800be80:	701a      	strb	r2, [r3, #0]
 800be82:	683b      	ldr	r3, [r7, #0]
 800be84:	1d1a      	adds	r2, r3, #4
 800be86:	687b      	ldr	r3, [r7, #4]
 800be88:	3304      	adds	r3, #4
 800be8a:	4611      	mov	r1, r2
 800be8c:	4618      	mov	r0, r3
 800be8e:	f7f9 f92d 	bl	80050ec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 800be92:	687b      	ldr	r3, [r7, #4]
 800be94:	4618      	mov	r0, r3
 800be96:	3708      	adds	r7, #8
 800be98:	46bd      	mov	sp, r7
 800be9a:	bd80      	pop	{r7, pc}

0800be9c <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Copy_assign_base(_Copy_assign_base&&) = default;
 800be9c:	b580      	push	{r7, lr}
 800be9e:	b082      	sub	sp, #8
 800bea0:	af00      	add	r7, sp, #0
 800bea2:	6078      	str	r0, [r7, #4]
 800bea4:	6039      	str	r1, [r7, #0]
 800bea6:	687b      	ldr	r3, [r7, #4]
 800bea8:	683a      	ldr	r2, [r7, #0]
 800beaa:	4611      	mov	r1, r2
 800beac:	4618      	mov	r0, r3
 800beae:	f000 fd7d 	bl	800c9ac <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800beb2:	687b      	ldr	r3, [r7, #4]
 800beb4:	4618      	mov	r0, r3
 800beb6:	3708      	adds	r7, #8
 800beb8:	46bd      	mov	sp, r7
 800beba:	bd80      	pop	{r7, pc}

0800bebc <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Move_assign_base(_Move_assign_base&&) = default;
 800bebc:	b580      	push	{r7, lr}
 800bebe:	b082      	sub	sp, #8
 800bec0:	af00      	add	r7, sp, #0
 800bec2:	6078      	str	r0, [r7, #4]
 800bec4:	6039      	str	r1, [r7, #0]
 800bec6:	687b      	ldr	r3, [r7, #4]
 800bec8:	683a      	ldr	r2, [r7, #0]
 800beca:	4611      	mov	r1, r2
 800becc:	4618      	mov	r0, r3
 800bece:	f7ff ffe5 	bl	800be9c <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800bed2:	687b      	ldr	r3, [r7, #4]
 800bed4:	4618      	mov	r0, r3
 800bed6:	3708      	adds	r7, #8
 800bed8:	46bd      	mov	sp, r7
 800beda:	bd80      	pop	{r7, pc}

0800bedc <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Variant_base(_Variant_base&&) = default;
 800bedc:	b580      	push	{r7, lr}
 800bede:	b082      	sub	sp, #8
 800bee0:	af00      	add	r7, sp, #0
 800bee2:	6078      	str	r0, [r7, #4]
 800bee4:	6039      	str	r1, [r7, #0]
 800bee6:	687b      	ldr	r3, [r7, #4]
 800bee8:	683a      	ldr	r2, [r7, #0]
 800beea:	4611      	mov	r1, r2
 800beec:	4618      	mov	r0, r3
 800beee:	f7ff ffe5 	bl	800bebc <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800bef2:	687b      	ldr	r3, [r7, #4]
 800bef4:	4618      	mov	r0, r3
 800bef6:	3708      	adds	r7, #8
 800bef8:	46bd      	mov	sp, r7
 800befa:	bd80      	pop	{r7, pc}

0800befc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1EOSA_>:
      variant(variant&&) = default;
 800befc:	b580      	push	{r7, lr}
 800befe:	b082      	sub	sp, #8
 800bf00:	af00      	add	r7, sp, #0
 800bf02:	6078      	str	r0, [r7, #4]
 800bf04:	6039      	str	r1, [r7, #0]
 800bf06:	687b      	ldr	r3, [r7, #4]
 800bf08:	683a      	ldr	r2, [r7, #0]
 800bf0a:	4611      	mov	r1, r2
 800bf0c:	4618      	mov	r0, r3
 800bf0e:	f7ff ffe5 	bl	800bedc <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800bf12:	687b      	ldr	r3, [r7, #4]
 800bf14:	4618      	mov	r0, r3
 800bf16:	3708      	adds	r7, #8
 800bf18:	46bd      	mov	sp, r7
 800bf1a:	bd80      	pop	{r7, pc}

0800bf1c <_ZN6SymbolC1EOS_>:
 800bf1c:	b580      	push	{r7, lr}
 800bf1e:	b082      	sub	sp, #8
 800bf20:	af00      	add	r7, sp, #0
 800bf22:	6078      	str	r0, [r7, #4]
 800bf24:	6039      	str	r1, [r7, #0]
 800bf26:	683b      	ldr	r3, [r7, #0]
 800bf28:	781a      	ldrb	r2, [r3, #0]
 800bf2a:	687b      	ldr	r3, [r7, #4]
 800bf2c:	701a      	strb	r2, [r3, #0]
 800bf2e:	687b      	ldr	r3, [r7, #4]
 800bf30:	1d1a      	adds	r2, r3, #4
 800bf32:	683b      	ldr	r3, [r7, #0]
 800bf34:	3304      	adds	r3, #4
 800bf36:	4619      	mov	r1, r3
 800bf38:	4610      	mov	r0, r2
 800bf3a:	f7ff ffdf 	bl	800befc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1EOSA_>
 800bf3e:	687b      	ldr	r3, [r7, #4]
 800bf40:	4618      	mov	r0, r3
 800bf42:	3708      	adds	r7, #8
 800bf44:	46bd      	mov	sp, r7
 800bf46:	bd80      	pop	{r7, pc}

0800bf48 <_ZN21Expression_calculator8evaluateEP10Expression>:

Symbol Expression_calculator::evaluate(Expression *exp)
{
 800bf48:	b590      	push	{r4, r7, lr}
 800bf4a:	b099      	sub	sp, #100	; 0x64
 800bf4c:	af00      	add	r7, sp, #0
 800bf4e:	60f8      	str	r0, [r7, #12]
 800bf50:	60b9      	str	r1, [r7, #8]
 800bf52:	607a      	str	r2, [r7, #4]
	Position_counter::get_instance().line = exp->line;
 800bf54:	687b      	ldr	r3, [r7, #4]
 800bf56:	681c      	ldr	r4, [r3, #0]
 800bf58:	f00a fa30 	bl	80163bc <_ZN16Position_counter12get_instanceEv>
 800bf5c:	4603      	mov	r3, r0
 800bf5e:	601c      	str	r4, [r3, #0]
	Position_counter::get_instance().position = exp->position;
 800bf60:	687b      	ldr	r3, [r7, #4]
 800bf62:	685c      	ldr	r4, [r3, #4]
 800bf64:	f00a fa2a 	bl	80163bc <_ZN16Position_counter12get_instanceEv>
 800bf68:	4603      	mov	r3, r0
 800bf6a:	605c      	str	r4, [r3, #4]

	Symbol var = false;
 800bf6c:	2100      	movs	r1, #0
 800bf6e:	68f8      	ldr	r0, [r7, #12]
 800bf70:	f00a fd0d 	bl	801698e <_ZN6SymbolC1Eb>
	for (And_expression *and_exp : exp->and_exps)
 800bf74:	687b      	ldr	r3, [r7, #4]
 800bf76:	3308      	adds	r3, #8
 800bf78:	65fb      	str	r3, [r7, #92]	; 0x5c
 800bf7a:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800bf7c:	f7fe f987 	bl	800a28e <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 800bf80:	4603      	mov	r3, r0
 800bf82:	617b      	str	r3, [r7, #20]
 800bf84:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800bf86:	f7fe f992 	bl	800a2ae <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 800bf8a:	4603      	mov	r3, r0
 800bf8c:	613b      	str	r3, [r7, #16]
 800bf8e:	f107 0210 	add.w	r2, r7, #16
 800bf92:	f107 0314 	add.w	r3, r7, #20
 800bf96:	4611      	mov	r1, r2
 800bf98:	4618      	mov	r0, r3
 800bf9a:	f7fe f999 	bl	800a2d0 <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800bf9e:	4603      	mov	r3, r0
 800bfa0:	2b00      	cmp	r3, #0
 800bfa2:	d02c      	beq.n	800bffe <_ZN21Expression_calculator8evaluateEP10Expression+0xb6>
 800bfa4:	f107 0314 	add.w	r3, r7, #20
 800bfa8:	4618      	mov	r0, r3
 800bfaa:	f7fe f9b9 	bl	800a320 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 800bfae:	4603      	mov	r3, r0
 800bfb0:	681b      	ldr	r3, [r3, #0]
 800bfb2:	65bb      	str	r3, [r7, #88]	; 0x58
	{
		var = var || evaluate(and_exp);
 800bfb4:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800bfb8:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800bfba:	68b9      	ldr	r1, [r7, #8]
 800bfbc:	4618      	mov	r0, r3
 800bfbe:	f000 f823 	bl	800c008 <_ZN21Expression_calculator8evaluateEP14And_expression>
 800bfc2:	f107 0318 	add.w	r3, r7, #24
 800bfc6:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800bfca:	68f9      	ldr	r1, [r7, #12]
 800bfcc:	4618      	mov	r0, r3
 800bfce:	f00a ff4b 	bl	8016e68 <_ZN6SymbolooES_>
 800bfd2:	f107 0318 	add.w	r3, r7, #24
 800bfd6:	4619      	mov	r1, r3
 800bfd8:	68f8      	ldr	r0, [r7, #12]
 800bfda:	f7ff ff49 	bl	800be70 <_ZN6SymbolaSEOS_>
 800bfde:	f107 0318 	add.w	r3, r7, #24
 800bfe2:	4618      	mov	r0, r3
 800bfe4:	f7f5 fa78 	bl	80014d8 <_ZN6SymbolD1Ev>
 800bfe8:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800bfec:	4618      	mov	r0, r3
 800bfee:	f7f5 fa73 	bl	80014d8 <_ZN6SymbolD1Ev>
	for (And_expression *and_exp : exp->and_exps)
 800bff2:	f107 0314 	add.w	r3, r7, #20
 800bff6:	4618      	mov	r0, r3
 800bff8:	f7fe f982 	bl	800a300 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>
 800bffc:	e7c7      	b.n	800bf8e <_ZN21Expression_calculator8evaluateEP10Expression+0x46>
	}
	return var;
 800bffe:	bf00      	nop
}
 800c000:	68f8      	ldr	r0, [r7, #12]
 800c002:	3764      	adds	r7, #100	; 0x64
 800c004:	46bd      	mov	sp, r7
 800c006:	bd90      	pop	{r4, r7, pc}

0800c008 <_ZN21Expression_calculator8evaluateEP14And_expression>:

Symbol Expression_calculator::evaluate(And_expression *and_exp)
{
 800c008:	b580      	push	{r7, lr}
 800c00a:	b098      	sub	sp, #96	; 0x60
 800c00c:	af00      	add	r7, sp, #0
 800c00e:	60f8      	str	r0, [r7, #12]
 800c010:	60b9      	str	r1, [r7, #8]
 800c012:	607a      	str	r2, [r7, #4]
	Symbol var = false;
 800c014:	2100      	movs	r1, #0
 800c016:	68f8      	ldr	r0, [r7, #12]
 800c018:	f00a fcb9 	bl	801698e <_ZN6SymbolC1Eb>
	for (Compare_expression *comp_exp : and_exp->comp_exps)
 800c01c:	687b      	ldr	r3, [r7, #4]
 800c01e:	65fb      	str	r3, [r7, #92]	; 0x5c
 800c020:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800c022:	f7fe f8c4 	bl	800a1ae <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 800c026:	4603      	mov	r3, r0
 800c028:	617b      	str	r3, [r7, #20]
 800c02a:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800c02c:	f7fe f8cf 	bl	800a1ce <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 800c030:	4603      	mov	r3, r0
 800c032:	613b      	str	r3, [r7, #16]
 800c034:	f107 0210 	add.w	r2, r7, #16
 800c038:	f107 0314 	add.w	r3, r7, #20
 800c03c:	4611      	mov	r1, r2
 800c03e:	4618      	mov	r0, r3
 800c040:	f7fe f8d6 	bl	800a1f0 <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800c044:	4603      	mov	r3, r0
 800c046:	2b00      	cmp	r3, #0
 800c048:	d02c      	beq.n	800c0a4 <_ZN21Expression_calculator8evaluateEP14And_expression+0x9c>
 800c04a:	f107 0314 	add.w	r3, r7, #20
 800c04e:	4618      	mov	r0, r3
 800c050:	f7fe f8f6 	bl	800a240 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 800c054:	4603      	mov	r3, r0
 800c056:	681b      	ldr	r3, [r3, #0]
 800c058:	65bb      	str	r3, [r7, #88]	; 0x58
	{
		var = var && evaluate(comp_exp);
 800c05a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c05e:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800c060:	68b9      	ldr	r1, [r7, #8]
 800c062:	4618      	mov	r0, r3
 800c064:	f000 f824 	bl	800c0b0 <_ZN21Expression_calculator8evaluateEP18Compare_expression>
 800c068:	f107 0318 	add.w	r3, r7, #24
 800c06c:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800c070:	68f9      	ldr	r1, [r7, #12]
 800c072:	4618      	mov	r0, r3
 800c074:	f00a fea6 	bl	8016dc4 <_ZN6SymbolaaES_>
 800c078:	f107 0318 	add.w	r3, r7, #24
 800c07c:	4619      	mov	r1, r3
 800c07e:	68f8      	ldr	r0, [r7, #12]
 800c080:	f7ff fef6 	bl	800be70 <_ZN6SymbolaSEOS_>
 800c084:	f107 0318 	add.w	r3, r7, #24
 800c088:	4618      	mov	r0, r3
 800c08a:	f7f5 fa25 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c08e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c092:	4618      	mov	r0, r3
 800c094:	f7f5 fa20 	bl	80014d8 <_ZN6SymbolD1Ev>
	for (Compare_expression *comp_exp : and_exp->comp_exps)
 800c098:	f107 0314 	add.w	r3, r7, #20
 800c09c:	4618      	mov	r0, r3
 800c09e:	f7fe f8bf 	bl	800a220 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>
 800c0a2:	e7c7      	b.n	800c034 <_ZN21Expression_calculator8evaluateEP14And_expression+0x2c>
	}
	return var;
 800c0a4:	bf00      	nop
}
 800c0a6:	68f8      	ldr	r0, [r7, #12]
 800c0a8:	3760      	adds	r7, #96	; 0x60
 800c0aa:	46bd      	mov	sp, r7
 800c0ac:	bd80      	pop	{r7, pc}
	...

0800c0b0 <_ZN21Expression_calculator8evaluateEP18Compare_expression>:

Symbol Expression_calculator::evaluate(Compare_expression *comp_exp)
{
 800c0b0:	b580      	push	{r7, lr}
 800c0b2:	b0b4      	sub	sp, #208	; 0xd0
 800c0b4:	af00      	add	r7, sp, #0
 800c0b6:	60f8      	str	r0, [r7, #12]
 800c0b8:	60b9      	str	r1, [r7, #8]
 800c0ba:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(comp_exp->left_rel_exp);
 800c0bc:	687b      	ldr	r3, [r7, #4]
 800c0be:	681a      	ldr	r2, [r3, #0]
 800c0c0:	68fb      	ldr	r3, [r7, #12]
 800c0c2:	68b9      	ldr	r1, [r7, #8]
 800c0c4:	4618      	mov	r0, r3
 800c0c6:	f000 f87f 	bl	800c1c8 <_ZN21Expression_calculator8evaluateEP19Relation_expression>
	if (comp_exp->right_rel_exp)
 800c0ca:	687b      	ldr	r3, [r7, #4]
 800c0cc:	685b      	ldr	r3, [r3, #4]
 800c0ce:	2b00      	cmp	r3, #0
 800c0d0:	d072      	beq.n	800c1b8 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
	{
		switch (comp_exp->op)
 800c0d2:	687b      	ldr	r3, [r7, #4]
 800c0d4:	7a1b      	ldrb	r3, [r3, #8]
 800c0d6:	2b01      	cmp	r3, #1
 800c0d8:	d002      	beq.n	800c0e0 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x30>
 800c0da:	2b02      	cmp	r3, #2
 800c0dc:	d021      	beq.n	800c122 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x72>
 800c0de:	e04e      	b.n	800c17e <_ZN21Expression_calculator8evaluateEP18Compare_expression+0xce>
		{
		case COMP_OP_EQUAL:
			var = var == evaluate(comp_exp->right_rel_exp);
 800c0e0:	687b      	ldr	r3, [r7, #4]
 800c0e2:	685a      	ldr	r2, [r3, #4]
 800c0e4:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c0e8:	68b9      	ldr	r1, [r7, #8]
 800c0ea:	4618      	mov	r0, r3
 800c0ec:	f000 f86c 	bl	800c1c8 <_ZN21Expression_calculator8evaluateEP19Relation_expression>
 800c0f0:	f107 0314 	add.w	r3, r7, #20
 800c0f4:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c0f8:	68f9      	ldr	r1, [r7, #12]
 800c0fa:	4618      	mov	r0, r3
 800c0fc:	f00b f938 	bl	8017370 <_ZN6SymboleqES_>
 800c100:	f107 0314 	add.w	r3, r7, #20
 800c104:	4619      	mov	r1, r3
 800c106:	68f8      	ldr	r0, [r7, #12]
 800c108:	f7ff feb2 	bl	800be70 <_ZN6SymbolaSEOS_>
 800c10c:	f107 0314 	add.w	r3, r7, #20
 800c110:	4618      	mov	r0, r3
 800c112:	f7f5 f9e1 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c116:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c11a:	4618      	mov	r0, r3
 800c11c:	f7f5 f9dc 	bl	80014d8 <_ZN6SymbolD1Ev>
			break;
 800c120:	e04a      	b.n	800c1b8 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
		case COMP_OP_NOT_EQUAL:
			var = !(var == evaluate(comp_exp->right_rel_exp));
 800c122:	687b      	ldr	r3, [r7, #4]
 800c124:	685a      	ldr	r2, [r3, #4]
 800c126:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c12a:	68b9      	ldr	r1, [r7, #8]
 800c12c:	4618      	mov	r0, r3
 800c12e:	f000 f84b 	bl	800c1c8 <_ZN21Expression_calculator8evaluateEP19Relation_expression>
 800c132:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c136:	f107 0294 	add.w	r2, r7, #148	; 0x94
 800c13a:	68f9      	ldr	r1, [r7, #12]
 800c13c:	4618      	mov	r0, r3
 800c13e:	f00b f917 	bl	8017370 <_ZN6SymboleqES_>
 800c142:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c146:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c14a:	4611      	mov	r1, r2
 800c14c:	4618      	mov	r0, r3
 800c14e:	f00a fedd 	bl	8016f0c <_ZN6SymbolntEv>
 800c152:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c156:	4619      	mov	r1, r3
 800c158:	68f8      	ldr	r0, [r7, #12]
 800c15a:	f7ff fe89 	bl	800be70 <_ZN6SymbolaSEOS_>
 800c15e:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c162:	4618      	mov	r0, r3
 800c164:	f7f5 f9b8 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c168:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c16c:	4618      	mov	r0, r3
 800c16e:	f7f5 f9b3 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c172:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c176:	4618      	mov	r0, r3
 800c178:	f7f5 f9ae 	bl	80014d8 <_ZN6SymbolD1Ev>
			break;
 800c17c:	e01c      	b.n	800c1b8 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
		default:
			Transmitter::report_error("compare operator");
 800c17e:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c182:	4618      	mov	r0, r3
 800c184:	f016 f99c 	bl	80224c0 <_ZNSaIcEC1Ev>
 800c188:	f107 02cc 	add.w	r2, r7, #204	; 0xcc
 800c18c:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c190:	490c      	ldr	r1, [pc, #48]	; (800c1c4 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x114>)
 800c192:	4618      	mov	r0, r3
 800c194:	f7f5 fcc5 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c198:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c19c:	4618      	mov	r0, r3
 800c19e:	f00c fa57 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c1a2:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c1a6:	4618      	mov	r0, r3
 800c1a8:	f016 fc1b 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c1ac:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c1b0:	4618      	mov	r0, r3
 800c1b2:	f016 f986 	bl	80224c2 <_ZNSaIcED1Ev>
		}
	}

	return var;
 800c1b6:	e7ff      	b.n	800c1b8 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
 800c1b8:	bf00      	nop
}
 800c1ba:	68f8      	ldr	r0, [r7, #12]
 800c1bc:	37d0      	adds	r7, #208	; 0xd0
 800c1be:	46bd      	mov	sp, r7
 800c1c0:	bd80      	pop	{r7, pc}
 800c1c2:	bf00      	nop
 800c1c4:	080272f4 	.word	0x080272f4

0800c1c8 <_ZN21Expression_calculator8evaluateEP19Relation_expression>:

Symbol Expression_calculator::evaluate(Relation_expression *rel_exp)
{
 800c1c8:	b580      	push	{r7, lr}
 800c1ca:	b0b4      	sub	sp, #208	; 0xd0
 800c1cc:	af00      	add	r7, sp, #0
 800c1ce:	60f8      	str	r0, [r7, #12]
 800c1d0:	60b9      	str	r1, [r7, #8]
 800c1d2:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(rel_exp->left_sum_exp);
 800c1d4:	687b      	ldr	r3, [r7, #4]
 800c1d6:	681a      	ldr	r2, [r3, #0]
 800c1d8:	f107 0314 	add.w	r3, r7, #20
 800c1dc:	68b9      	ldr	r1, [r7, #8]
 800c1de:	4618      	mov	r0, r3
 800c1e0:	f000 f89c 	bl	800c31c <_ZN21Expression_calculator8evaluateEP14Sum_expression>
	if (rel_exp->right_sum_exp)
 800c1e4:	687b      	ldr	r3, [r7, #4]
 800c1e6:	685b      	ldr	r3, [r3, #4]
 800c1e8:	2b00      	cmp	r3, #0
 800c1ea:	f000 8085 	beq.w	800c2f8 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x130>
	{
		switch (rel_exp->op)
 800c1ee:	687b      	ldr	r3, [r7, #4]
 800c1f0:	7a1b      	ldrb	r3, [r3, #8]
 800c1f2:	3b01      	subs	r3, #1
 800c1f4:	2b03      	cmp	r3, #3
 800c1f6:	d863      	bhi.n	800c2c0 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0xf8>
 800c1f8:	a201      	add	r2, pc, #4	; (adr r2, 800c200 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x38>)
 800c1fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c1fe:	bf00      	nop
 800c200:	0800c269 	.word	0x0800c269
 800c204:	0800c295 	.word	0x0800c295
 800c208:	0800c211 	.word	0x0800c211
 800c20c:	0800c23d 	.word	0x0800c23d
		{
		case REL_OP_GREATER:
			return var > evaluate(rel_exp->right_sum_exp);
 800c210:	687b      	ldr	r3, [r7, #4]
 800c212:	685a      	ldr	r2, [r3, #4]
 800c214:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c218:	68b9      	ldr	r1, [r7, #8]
 800c21a:	4618      	mov	r0, r3
 800c21c:	f000 f87e 	bl	800c31c <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c220:	68fb      	ldr	r3, [r7, #12]
 800c222:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c226:	f107 0114 	add.w	r1, r7, #20
 800c22a:	4618      	mov	r0, r3
 800c22c:	f00a feb0 	bl	8016f90 <_ZN6SymbolgtES_>
 800c230:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c234:	4618      	mov	r0, r3
 800c236:	f7f5 f94f 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c23a:	e063      	b.n	800c304 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_GREATER_EQUAL:
			return var >= evaluate(rel_exp->right_sum_exp);
 800c23c:	687b      	ldr	r3, [r7, #4]
 800c23e:	685a      	ldr	r2, [r3, #4]
 800c240:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c244:	68b9      	ldr	r1, [r7, #8]
 800c246:	4618      	mov	r0, r3
 800c248:	f000 f868 	bl	800c31c <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c24c:	68fb      	ldr	r3, [r7, #12]
 800c24e:	f107 0254 	add.w	r2, r7, #84	; 0x54
 800c252:	f107 0114 	add.w	r1, r7, #20
 800c256:	4618      	mov	r0, r3
 800c258:	f00a ff16 	bl	8017088 <_ZN6SymbolgeES_>
 800c25c:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c260:	4618      	mov	r0, r3
 800c262:	f7f5 f939 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c266:	e04d      	b.n	800c304 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_SMALLER:
			return var < evaluate(rel_exp->right_sum_exp);
 800c268:	687b      	ldr	r3, [r7, #4]
 800c26a:	685a      	ldr	r2, [r3, #4]
 800c26c:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c270:	68b9      	ldr	r1, [r7, #8]
 800c272:	4618      	mov	r0, r3
 800c274:	f000 f852 	bl	800c31c <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c278:	68fb      	ldr	r3, [r7, #12]
 800c27a:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c27e:	f107 0114 	add.w	r1, r7, #20
 800c282:	4618      	mov	r0, r3
 800c284:	f00a ff7c 	bl	8017180 <_ZN6SymbolltES_>
 800c288:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c28c:	4618      	mov	r0, r3
 800c28e:	f7f5 f923 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c292:	e037      	b.n	800c304 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_SMALLER_EQUAL:
			return var <= evaluate(rel_exp->right_sum_exp);
 800c294:	687b      	ldr	r3, [r7, #4]
 800c296:	685a      	ldr	r2, [r3, #4]
 800c298:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c29c:	68b9      	ldr	r1, [r7, #8]
 800c29e:	4618      	mov	r0, r3
 800c2a0:	f000 f83c 	bl	800c31c <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c2a4:	68fb      	ldr	r3, [r7, #12]
 800c2a6:	f107 0294 	add.w	r2, r7, #148	; 0x94
 800c2aa:	f107 0114 	add.w	r1, r7, #20
 800c2ae:	4618      	mov	r0, r3
 800c2b0:	f00a ffe2 	bl	8017278 <_ZN6SymbolleES_>
 800c2b4:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c2b8:	4618      	mov	r0, r3
 800c2ba:	f7f5 f90d 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c2be:	e021      	b.n	800c304 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		default:
			Transmitter::report_error("relation operator");
 800c2c0:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c2c4:	4618      	mov	r0, r3
 800c2c6:	f016 f8fb 	bl	80224c0 <_ZNSaIcEC1Ev>
 800c2ca:	f107 02cc 	add.w	r2, r7, #204	; 0xcc
 800c2ce:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c2d2:	4911      	ldr	r1, [pc, #68]	; (800c318 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x150>)
 800c2d4:	4618      	mov	r0, r3
 800c2d6:	f7f5 fc24 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c2da:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c2de:	4618      	mov	r0, r3
 800c2e0:	f00c f9b6 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c2e4:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c2e8:	4618      	mov	r0, r3
 800c2ea:	f016 fb7a 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c2ee:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c2f2:	4618      	mov	r0, r3
 800c2f4:	f016 f8e5 	bl	80224c2 <_ZNSaIcED1Ev>
		}
	}

	return var;
 800c2f8:	f107 0314 	add.w	r3, r7, #20
 800c2fc:	4619      	mov	r1, r3
 800c2fe:	68f8      	ldr	r0, [r7, #12]
 800c300:	f7ff fe0c 	bl	800bf1c <_ZN6SymbolC1EOS_>
	Symbol var = evaluate(rel_exp->left_sum_exp);
 800c304:	f107 0314 	add.w	r3, r7, #20
 800c308:	4618      	mov	r0, r3
 800c30a:	f7f5 f8e5 	bl	80014d8 <_ZN6SymbolD1Ev>
}
 800c30e:	68f8      	ldr	r0, [r7, #12]
 800c310:	37d0      	adds	r7, #208	; 0xd0
 800c312:	46bd      	mov	sp, r7
 800c314:	bd80      	pop	{r7, pc}
 800c316:	bf00      	nop
 800c318:	08027308 	.word	0x08027308

0800c31c <_ZN21Expression_calculator8evaluateEP14Sum_expression>:

Symbol Expression_calculator::evaluate(Sum_expression *sum_exp)
{
 800c31c:	b580      	push	{r7, lr}
 800c31e:	b0a6      	sub	sp, #152	; 0x98
 800c320:	af00      	add	r7, sp, #0
 800c322:	60f8      	str	r0, [r7, #12]
 800c324:	60b9      	str	r1, [r7, #8]
 800c326:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(sum_exp->mult_exps[0]);
 800c328:	687b      	ldr	r3, [r7, #4]
 800c32a:	2100      	movs	r1, #0
 800c32c:	4618      	mov	r0, r3
 800c32e:	f000 fb53 	bl	800c9d8 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 800c332:	4603      	mov	r3, r0
 800c334:	681a      	ldr	r2, [r3, #0]
 800c336:	68fb      	ldr	r3, [r7, #12]
 800c338:	68b9      	ldr	r1, [r7, #8]
 800c33a:	4618      	mov	r0, r3
 800c33c:	f000 f87e 	bl	800c43c <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
	for (unsigned int i = 0; i < sum_exp->ops.size(); ++i)
 800c340:	2300      	movs	r3, #0
 800c342:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800c346:	687b      	ldr	r3, [r7, #4]
 800c348:	330c      	adds	r3, #12
 800c34a:	4618      	mov	r0, r3
 800c34c:	f000 fb54 	bl	800c9f8 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 800c350:	4602      	mov	r2, r0
 800c352:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c356:	4293      	cmp	r3, r2
 800c358:	bf34      	ite	cc
 800c35a:	2301      	movcc	r3, #1
 800c35c:	2300      	movcs	r3, #0
 800c35e:	b2db      	uxtb	r3, r3
 800c360:	2b00      	cmp	r3, #0
 800c362:	d066      	beq.n	800c432 <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x116>
	{
		if (sum_exp->ops[i] == SUM_OP_PLUS)
 800c364:	687b      	ldr	r3, [r7, #4]
 800c366:	330c      	adds	r3, #12
 800c368:	f8d7 1094 	ldr.w	r1, [r7, #148]	; 0x94
 800c36c:	4618      	mov	r0, r3
 800c36e:	f000 fb52 	bl	800ca16 <_ZNSt6vectorI12sum_operatorSaIS0_EEixEj>
 800c372:	4603      	mov	r3, r0
 800c374:	781b      	ldrb	r3, [r3, #0]
 800c376:	2b00      	cmp	r3, #0
 800c378:	bf0c      	ite	eq
 800c37a:	2301      	moveq	r3, #1
 800c37c:	2300      	movne	r3, #0
 800c37e:	b2db      	uxtb	r3, r3
 800c380:	2b00      	cmp	r3, #0
 800c382:	d028      	beq.n	800c3d6 <_ZN21Expression_calculator8evaluateEP14Sum_expression+0xba>
		{
			var = var + evaluate(sum_exp->mult_exps[i + 1]);
 800c384:	687a      	ldr	r2, [r7, #4]
 800c386:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c38a:	3301      	adds	r3, #1
 800c38c:	4619      	mov	r1, r3
 800c38e:	4610      	mov	r0, r2
 800c390:	f000 fb22 	bl	800c9d8 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 800c394:	4603      	mov	r3, r0
 800c396:	681a      	ldr	r2, [r3, #0]
 800c398:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c39c:	68b9      	ldr	r1, [r7, #8]
 800c39e:	4618      	mov	r0, r3
 800c3a0:	f000 f84c 	bl	800c43c <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
 800c3a4:	f107 0314 	add.w	r3, r7, #20
 800c3a8:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c3ac:	68f9      	ldr	r1, [r7, #12]
 800c3ae:	4618      	mov	r0, r3
 800c3b0:	f00a fc12 	bl	8016bd8 <_ZN6SymbolplES_>
 800c3b4:	f107 0314 	add.w	r3, r7, #20
 800c3b8:	4619      	mov	r1, r3
 800c3ba:	68f8      	ldr	r0, [r7, #12]
 800c3bc:	f7ff fd58 	bl	800be70 <_ZN6SymbolaSEOS_>
 800c3c0:	f107 0314 	add.w	r3, r7, #20
 800c3c4:	4618      	mov	r0, r3
 800c3c6:	f7f5 f887 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c3ca:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c3ce:	4618      	mov	r0, r3
 800c3d0:	f7f5 f882 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c3d4:	e027      	b.n	800c426 <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x10a>
		}
		else
		{
			var = var - evaluate(sum_exp->mult_exps[i + 1]);
 800c3d6:	687a      	ldr	r2, [r7, #4]
 800c3d8:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c3dc:	3301      	adds	r3, #1
 800c3de:	4619      	mov	r1, r3
 800c3e0:	4610      	mov	r0, r2
 800c3e2:	f000 faf9 	bl	800c9d8 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 800c3e6:	4603      	mov	r3, r0
 800c3e8:	681a      	ldr	r2, [r3, #0]
 800c3ea:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c3ee:	68b9      	ldr	r1, [r7, #8]
 800c3f0:	4618      	mov	r0, r3
 800c3f2:	f000 f823 	bl	800c43c <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
 800c3f6:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c3fa:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c3fe:	68f9      	ldr	r1, [r7, #12]
 800c400:	4618      	mov	r0, r3
 800c402:	f00a fc7d 	bl	8016d00 <_ZN6SymbolmiES_>
 800c406:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c40a:	4619      	mov	r1, r3
 800c40c:	68f8      	ldr	r0, [r7, #12]
 800c40e:	f7ff fd2f 	bl	800be70 <_ZN6SymbolaSEOS_>
 800c412:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c416:	4618      	mov	r0, r3
 800c418:	f7f5 f85e 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c41c:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c420:	4618      	mov	r0, r3
 800c422:	f7f5 f859 	bl	80014d8 <_ZN6SymbolD1Ev>
	for (unsigned int i = 0; i < sum_exp->ops.size(); ++i)
 800c426:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c42a:	3301      	adds	r3, #1
 800c42c:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800c430:	e789      	b.n	800c346 <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x2a>
		}
	}
	return var;
 800c432:	bf00      	nop
}
 800c434:	68f8      	ldr	r0, [r7, #12]
 800c436:	3798      	adds	r7, #152	; 0x98
 800c438:	46bd      	mov	sp, r7
 800c43a:	bd80      	pop	{r7, pc}

0800c43c <_ZN21Expression_calculator8evaluateEP19Multiply_expression>:

Symbol Expression_calculator::evaluate(Multiply_expression *mult_exp)
{
 800c43c:	b580      	push	{r7, lr}
 800c43e:	b0b6      	sub	sp, #216	; 0xd8
 800c440:	af00      	add	r7, sp, #0
 800c442:	60f8      	str	r0, [r7, #12]
 800c444:	60b9      	str	r1, [r7, #8]
 800c446:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(mult_exp->pow_exps[0]);
 800c448:	687b      	ldr	r3, [r7, #4]
 800c44a:	2100      	movs	r1, #0
 800c44c:	4618      	mov	r0, r3
 800c44e:	f000 faf1 	bl	800ca34 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c452:	4603      	mov	r3, r0
 800c454:	681a      	ldr	r2, [r3, #0]
 800c456:	68fb      	ldr	r3, [r7, #12]
 800c458:	68b9      	ldr	r1, [r7, #8]
 800c45a:	4618      	mov	r0, r3
 800c45c:	f000 f8b8 	bl	800c5d0 <_ZN21Expression_calculator8evaluateEP16Power_expression>
	for (unsigned int i = 0; i < mult_exp->ops.size(); ++i)
 800c460:	2300      	movs	r3, #0
 800c462:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c466:	687b      	ldr	r3, [r7, #4]
 800c468:	330c      	adds	r3, #12
 800c46a:	4618      	mov	r0, r3
 800c46c:	f000 faf2 	bl	800ca54 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 800c470:	4602      	mov	r2, r0
 800c472:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c476:	4293      	cmp	r3, r2
 800c478:	bf34      	ite	cc
 800c47a:	2301      	movcc	r3, #1
 800c47c:	2300      	movcs	r3, #0
 800c47e:	b2db      	uxtb	r3, r3
 800c480:	2b00      	cmp	r3, #0
 800c482:	f000 80a0 	beq.w	800c5c6 <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x18a>
	{
		if (mult_exp->ops[i] == MULT_OP_MULTIPLY)
 800c486:	687b      	ldr	r3, [r7, #4]
 800c488:	330c      	adds	r3, #12
 800c48a:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 800c48e:	4618      	mov	r0, r3
 800c490:	f000 faef 	bl	800ca72 <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>
 800c494:	4603      	mov	r3, r0
 800c496:	781b      	ldrb	r3, [r3, #0]
 800c498:	2b01      	cmp	r3, #1
 800c49a:	bf0c      	ite	eq
 800c49c:	2301      	moveq	r3, #1
 800c49e:	2300      	movne	r3, #0
 800c4a0:	b2db      	uxtb	r3, r3
 800c4a2:	2b00      	cmp	r3, #0
 800c4a4:	d028      	beq.n	800c4f8 <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0xbc>
		{
			var = var * evaluate(mult_exp->pow_exps[i + 1]);
 800c4a6:	687a      	ldr	r2, [r7, #4]
 800c4a8:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c4ac:	3301      	adds	r3, #1
 800c4ae:	4619      	mov	r1, r3
 800c4b0:	4610      	mov	r0, r2
 800c4b2:	f000 fabf 	bl	800ca34 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c4b6:	4603      	mov	r3, r0
 800c4b8:	681a      	ldr	r2, [r3, #0]
 800c4ba:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c4be:	68b9      	ldr	r1, [r7, #8]
 800c4c0:	4618      	mov	r0, r3
 800c4c2:	f000 f885 	bl	800c5d0 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 800c4c6:	f107 0314 	add.w	r3, r7, #20
 800c4ca:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c4ce:	68f9      	ldr	r1, [r7, #12]
 800c4d0:	4618      	mov	r0, r3
 800c4d2:	f00b f843 	bl	801755c <_ZN6SymbolmlES_>
 800c4d6:	f107 0314 	add.w	r3, r7, #20
 800c4da:	4619      	mov	r1, r3
 800c4dc:	68f8      	ldr	r0, [r7, #12]
 800c4de:	f7ff fcc7 	bl	800be70 <_ZN6SymbolaSEOS_>
 800c4e2:	f107 0314 	add.w	r3, r7, #20
 800c4e6:	4618      	mov	r0, r3
 800c4e8:	f7f4 fff6 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c4ec:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c4f0:	4618      	mov	r0, r3
 800c4f2:	f7f4 fff1 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c4f6:	e060      	b.n	800c5ba <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x17e>
		}
		else if (mult_exp->ops[i] == MULT_OP_DIVIDE)
 800c4f8:	687b      	ldr	r3, [r7, #4]
 800c4fa:	330c      	adds	r3, #12
 800c4fc:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 800c500:	4618      	mov	r0, r3
 800c502:	f000 fab6 	bl	800ca72 <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>
 800c506:	4603      	mov	r3, r0
 800c508:	781b      	ldrb	r3, [r3, #0]
 800c50a:	2b02      	cmp	r3, #2
 800c50c:	bf0c      	ite	eq
 800c50e:	2301      	moveq	r3, #1
 800c510:	2300      	movne	r3, #0
 800c512:	b2db      	uxtb	r3, r3
 800c514:	2b00      	cmp	r3, #0
 800c516:	d028      	beq.n	800c56a <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x12e>
		{
			var = var / evaluate(mult_exp->pow_exps[i + 1]);
 800c518:	687a      	ldr	r2, [r7, #4]
 800c51a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c51e:	3301      	adds	r3, #1
 800c520:	4619      	mov	r1, r3
 800c522:	4610      	mov	r0, r2
 800c524:	f000 fa86 	bl	800ca34 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c528:	4603      	mov	r3, r0
 800c52a:	681a      	ldr	r2, [r3, #0]
 800c52c:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c530:	68b9      	ldr	r1, [r7, #8]
 800c532:	4618      	mov	r0, r3
 800c534:	f000 f84c 	bl	800c5d0 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 800c538:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c53c:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c540:	68f9      	ldr	r1, [r7, #12]
 800c542:	4618      	mov	r0, r3
 800c544:	f00b f87e 	bl	8017644 <_ZN6SymboldvES_>
 800c548:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c54c:	4619      	mov	r1, r3
 800c54e:	68f8      	ldr	r0, [r7, #12]
 800c550:	f7ff fc8e 	bl	800be70 <_ZN6SymbolaSEOS_>
 800c554:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c558:	4618      	mov	r0, r3
 800c55a:	f7f4 ffbd 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c55e:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c562:	4618      	mov	r0, r3
 800c564:	f7f4 ffb8 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c568:	e027      	b.n	800c5ba <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x17e>
		}
		else
		{
			var = var % evaluate(mult_exp->pow_exps[i + 1]);
 800c56a:	687a      	ldr	r2, [r7, #4]
 800c56c:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c570:	3301      	adds	r3, #1
 800c572:	4619      	mov	r1, r3
 800c574:	4610      	mov	r0, r2
 800c576:	f000 fa5d 	bl	800ca34 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c57a:	4603      	mov	r3, r0
 800c57c:	681a      	ldr	r2, [r3, #0]
 800c57e:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c582:	68b9      	ldr	r1, [r7, #8]
 800c584:	4618      	mov	r0, r3
 800c586:	f000 f823 	bl	800c5d0 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 800c58a:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c58e:	f107 02b4 	add.w	r2, r7, #180	; 0xb4
 800c592:	68f9      	ldr	r1, [r7, #12]
 800c594:	4618      	mov	r0, r3
 800c596:	f00b f8c9 	bl	801772c <_ZN6SymbolrmES_>
 800c59a:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c59e:	4619      	mov	r1, r3
 800c5a0:	68f8      	ldr	r0, [r7, #12]
 800c5a2:	f7ff fc65 	bl	800be70 <_ZN6SymbolaSEOS_>
 800c5a6:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c5aa:	4618      	mov	r0, r3
 800c5ac:	f7f4 ff94 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c5b0:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c5b4:	4618      	mov	r0, r3
 800c5b6:	f7f4 ff8f 	bl	80014d8 <_ZN6SymbolD1Ev>
	for (unsigned int i = 0; i < mult_exp->ops.size(); ++i)
 800c5ba:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c5be:	3301      	adds	r3, #1
 800c5c0:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c5c4:	e74f      	b.n	800c466 <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x2a>
		}
	}
	return var;
 800c5c6:	bf00      	nop
}
 800c5c8:	68f8      	ldr	r0, [r7, #12]
 800c5ca:	37d8      	adds	r7, #216	; 0xd8
 800c5cc:	46bd      	mov	sp, r7
 800c5ce:	bd80      	pop	{r7, pc}

0800c5d0 <_ZN21Expression_calculator8evaluateEP16Power_expression>:

Symbol Expression_calculator::evaluate(Power_expression *pow_exp)
{
 800c5d0:	b580      	push	{r7, lr}
 800c5d2:	b09c      	sub	sp, #112	; 0x70
 800c5d4:	af00      	add	r7, sp, #0
 800c5d6:	60f8      	str	r0, [r7, #12]
 800c5d8:	60b9      	str	r1, [r7, #8]
 800c5da:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(pow_exp->left_un_exp);
 800c5dc:	687b      	ldr	r3, [r7, #4]
 800c5de:	681a      	ldr	r2, [r3, #0]
 800c5e0:	68fb      	ldr	r3, [r7, #12]
 800c5e2:	68b9      	ldr	r1, [r7, #8]
 800c5e4:	4618      	mov	r0, r3
 800c5e6:	f000 f836 	bl	800c656 <_ZN21Expression_calculator8evaluateEP16Unary_expression>

	if (pow_exp->right_un_exp)
 800c5ea:	687b      	ldr	r3, [r7, #4]
 800c5ec:	685b      	ldr	r3, [r3, #4]
 800c5ee:	2b00      	cmp	r3, #0
 800c5f0:	d02c      	beq.n	800c64c <_ZN21Expression_calculator8evaluateEP16Power_expression+0x7c>
	{
		Symbol temp = evaluate(pow_exp->right_un_exp);
 800c5f2:	687b      	ldr	r3, [r7, #4]
 800c5f4:	685a      	ldr	r2, [r3, #4]
 800c5f6:	f107 0310 	add.w	r3, r7, #16
 800c5fa:	68b9      	ldr	r1, [r7, #8]
 800c5fc:	4618      	mov	r0, r3
 800c5fe:	f000 f82a 	bl	800c656 <_ZN21Expression_calculator8evaluateEP16Unary_expression>
		var = var ^ temp;
 800c602:	f107 0210 	add.w	r2, r7, #16
 800c606:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800c60a:	4611      	mov	r1, r2
 800c60c:	4618      	mov	r0, r3
 800c60e:	f7fb ff37 	bl	8008480 <_ZN6SymbolC1ERKS_>
 800c612:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c616:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800c61a:	68f9      	ldr	r1, [r7, #12]
 800c61c:	4618      	mov	r0, r3
 800c61e:	f00b f8e3 	bl	80177e8 <_ZN6SymboleoES_>
 800c622:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c626:	4619      	mov	r1, r3
 800c628:	68f8      	ldr	r0, [r7, #12]
 800c62a:	f7ff fc21 	bl	800be70 <_ZN6SymbolaSEOS_>
 800c62e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c632:	4618      	mov	r0, r3
 800c634:	f7f4 ff50 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c638:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800c63c:	4618      	mov	r0, r3
 800c63e:	f7f4 ff4b 	bl	80014d8 <_ZN6SymbolD1Ev>
		Symbol temp = evaluate(pow_exp->right_un_exp);
 800c642:	f107 0310 	add.w	r3, r7, #16
 800c646:	4618      	mov	r0, r3
 800c648:	f7f4 ff46 	bl	80014d8 <_ZN6SymbolD1Ev>
	}

	return var;
 800c64c:	bf00      	nop
}
 800c64e:	68f8      	ldr	r0, [r7, #12]
 800c650:	3770      	adds	r7, #112	; 0x70
 800c652:	46bd      	mov	sp, r7
 800c654:	bd80      	pop	{r7, pc}

0800c656 <_ZN21Expression_calculator8evaluateEP16Unary_expression>:

Symbol Expression_calculator::evaluate(Unary_expression *un_exp)
{
 800c656:	b580      	push	{r7, lr}
 800c658:	b094      	sub	sp, #80	; 0x50
 800c65a:	af00      	add	r7, sp, #0
 800c65c:	60f8      	str	r0, [r7, #12]
 800c65e:	60b9      	str	r1, [r7, #8]
 800c660:	607a      	str	r2, [r7, #4]
	switch (un_exp->op)
 800c662:	687b      	ldr	r3, [r7, #4]
 800c664:	791b      	ldrb	r3, [r3, #4]
 800c666:	2b00      	cmp	r3, #0
 800c668:	d002      	beq.n	800c670 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x1a>
 800c66a:	2b01      	cmp	r3, #1
 800c66c:	d008      	beq.n	800c680 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x2a>
 800c66e:	e01c      	b.n	800c6aa <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x54>
	{
	case UN_OP_NONE:
		return evaluate(un_exp->prior_exp);
 800c670:	687b      	ldr	r3, [r7, #4]
 800c672:	681a      	ldr	r2, [r3, #0]
 800c674:	68fb      	ldr	r3, [r7, #12]
 800c676:	68b9      	ldr	r1, [r7, #8]
 800c678:	4618      	mov	r0, r3
 800c67a:	f000 f82e 	bl	800c6da <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 800c67e:	e028      	b.n	800c6d2 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x7c>
	case UN_OP_MINUS:
		return -evaluate(un_exp->prior_exp);
 800c680:	687b      	ldr	r3, [r7, #4]
 800c682:	681a      	ldr	r2, [r3, #0]
 800c684:	f107 0310 	add.w	r3, r7, #16
 800c688:	68b9      	ldr	r1, [r7, #8]
 800c68a:	4618      	mov	r0, r3
 800c68c:	f000 f825 	bl	800c6da <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 800c690:	68fb      	ldr	r3, [r7, #12]
 800c692:	f107 0210 	add.w	r2, r7, #16
 800c696:	4611      	mov	r1, r2
 800c698:	4618      	mov	r0, r3
 800c69a:	f00a ff05 	bl	80174a8 <_ZN6SymbolngEv>
 800c69e:	f107 0310 	add.w	r3, r7, #16
 800c6a2:	4618      	mov	r0, r3
 800c6a4:	f7f4 ff18 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c6a8:	e013      	b.n	800c6d2 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x7c>
	default:
		return !evaluate(un_exp->prior_exp);
 800c6aa:	687b      	ldr	r3, [r7, #4]
 800c6ac:	681a      	ldr	r2, [r3, #0]
 800c6ae:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c6b2:	68b9      	ldr	r1, [r7, #8]
 800c6b4:	4618      	mov	r0, r3
 800c6b6:	f000 f810 	bl	800c6da <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 800c6ba:	68fb      	ldr	r3, [r7, #12]
 800c6bc:	f107 0230 	add.w	r2, r7, #48	; 0x30
 800c6c0:	4611      	mov	r1, r2
 800c6c2:	4618      	mov	r0, r3
 800c6c4:	f00a fc22 	bl	8016f0c <_ZN6SymbolntEv>
 800c6c8:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c6cc:	4618      	mov	r0, r3
 800c6ce:	f7f4 ff03 	bl	80014d8 <_ZN6SymbolD1Ev>
	}
}
 800c6d2:	68f8      	ldr	r0, [r7, #12]
 800c6d4:	3750      	adds	r7, #80	; 0x50
 800c6d6:	46bd      	mov	sp, r7
 800c6d8:	bd80      	pop	{r7, pc}

0800c6da <_ZN21Expression_calculator8evaluateEP19Priority_expression>:

Symbol Expression_calculator::evaluate(Priority_expression *prior_exp)
{
 800c6da:	b580      	push	{r7, lr}
 800c6dc:	b086      	sub	sp, #24
 800c6de:	af00      	add	r7, sp, #0
 800c6e0:	60f8      	str	r0, [r7, #12]
 800c6e2:	60b9      	str	r1, [r7, #8]
 800c6e4:	607a      	str	r2, [r7, #4]
	if (std::holds_alternative<Expression*>(prior_exp->exp))
 800c6e6:	687b      	ldr	r3, [r7, #4]
 800c6e8:	4618      	mov	r0, r3
 800c6ea:	f7fd fc06 	bl	8009efa <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>
 800c6ee:	4603      	mov	r3, r0
 800c6f0:	2b00      	cmp	r3, #0
 800c6f2:	d00d      	beq.n	800c710 <_ZN21Expression_calculator8evaluateEP19Priority_expression+0x36>
	{
		Expression *exp = std::get<Expression*>(prior_exp->exp);
 800c6f4:	687b      	ldr	r3, [r7, #4]
 800c6f6:	4618      	mov	r0, r3
 800c6f8:	f7fd fc10 	bl	8009f1c <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>
 800c6fc:	4603      	mov	r3, r0
 800c6fe:	681b      	ldr	r3, [r3, #0]
 800c700:	613b      	str	r3, [r7, #16]
		return evaluate(exp);
 800c702:	68fb      	ldr	r3, [r7, #12]
 800c704:	693a      	ldr	r2, [r7, #16]
 800c706:	68b9      	ldr	r1, [r7, #8]
 800c708:	4618      	mov	r0, r3
 800c70a:	f7ff fc1d 	bl	800bf48 <_ZN21Expression_calculator8evaluateEP10Expression>
 800c70e:	e00c      	b.n	800c72a <_ZN21Expression_calculator8evaluateEP19Priority_expression+0x50>
	}
	else
	{
		Primal_expression *exp = std::get<Primal_expression*>(prior_exp->exp);
 800c710:	687b      	ldr	r3, [r7, #4]
 800c712:	4618      	mov	r0, r3
 800c714:	f7fd fc0e 	bl	8009f34 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>
 800c718:	4603      	mov	r3, r0
 800c71a:	681b      	ldr	r3, [r3, #0]
 800c71c:	617b      	str	r3, [r7, #20]
		return evaluate(exp);
 800c71e:	68fb      	ldr	r3, [r7, #12]
 800c720:	697a      	ldr	r2, [r7, #20]
 800c722:	68b9      	ldr	r1, [r7, #8]
 800c724:	4618      	mov	r0, r3
 800c726:	f000 f805 	bl	800c734 <_ZN21Expression_calculator8evaluateEP17Primal_expression>
	}
}
 800c72a:	68f8      	ldr	r0, [r7, #12]
 800c72c:	3718      	adds	r7, #24
 800c72e:	46bd      	mov	sp, r7
 800c730:	bd80      	pop	{r7, pc}
	...

0800c734 <_ZN21Expression_calculator8evaluateEP17Primal_expression>:

Symbol Expression_calculator::evaluate(Primal_expression *primal_exp)
{
 800c734:	b580      	push	{r7, lr}
 800c736:	b08a      	sub	sp, #40	; 0x28
 800c738:	af00      	add	r7, sp, #0
 800c73a:	60f8      	str	r0, [r7, #12]
 800c73c:	60b9      	str	r1, [r7, #8]
 800c73e:	607a      	str	r2, [r7, #4]
	switch (primal_exp->type)
 800c740:	687b      	ldr	r3, [r7, #4]
 800c742:	781b      	ldrb	r3, [r3, #0]
 800c744:	2b05      	cmp	r3, #5
 800c746:	d867      	bhi.n	800c818 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xe4>
 800c748:	a201      	add	r2, pc, #4	; (adr r2, 800c750 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0x1c>)
 800c74a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c74e:	bf00      	nop
 800c750:	0800c7cd 	.word	0x0800c7cd
 800c754:	0800c769 	.word	0x0800c769
 800c758:	0800c781 	.word	0x0800c781
 800c75c:	0800c79d 	.word	0x0800c79d
 800c760:	0800c7e5 	.word	0x0800c7e5
 800c764:	0800c7ff 	.word	0x0800c7ff
	{
	case PRIMAL_INT:
		return std::get<int>(primal_exp->content);
 800c768:	687b      	ldr	r3, [r7, #4]
 800c76a:	3304      	adds	r3, #4
 800c76c:	4618      	mov	r0, r3
 800c76e:	f000 f98f 	bl	800ca90 <_ZSt3getIiJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800c772:	4603      	mov	r3, r0
 800c774:	681b      	ldr	r3, [r3, #0]
 800c776:	4619      	mov	r1, r3
 800c778:	68f8      	ldr	r0, [r7, #12]
 800c77a:	f00a f8d5 	bl	8016928 <_ZN6SymbolC1Ei>
 800c77e:	e04f      	b.n	800c820 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_FLOAT:
		return std::get<float>(primal_exp->content);
 800c780:	687b      	ldr	r3, [r7, #4]
 800c782:	3304      	adds	r3, #4
 800c784:	4618      	mov	r0, r3
 800c786:	f000 f98f 	bl	800caa8 <_ZSt3getIfJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800c78a:	4603      	mov	r3, r0
 800c78c:	edd3 7a00 	vldr	s15, [r3]
 800c790:	eeb0 0a67 	vmov.f32	s0, s15
 800c794:	68f8      	ldr	r0, [r7, #12]
 800c796:	f00a f8e0 	bl	801695a <_ZN6SymbolC1Ef>
 800c79a:	e041      	b.n	800c820 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_STRING:
		return std::get<std::string>(primal_exp->content);
 800c79c:	687b      	ldr	r3, [r7, #4]
 800c79e:	3304      	adds	r3, #4
 800c7a0:	4618      	mov	r0, r3
 800c7a2:	f000 f98d 	bl	800cac0 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJbifS5_P8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800c7a6:	4602      	mov	r2, r0
 800c7a8:	f107 0310 	add.w	r3, r7, #16
 800c7ac:	4611      	mov	r1, r2
 800c7ae:	4618      	mov	r0, r3
 800c7b0:	f016 fadc 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800c7b4:	f107 0310 	add.w	r3, r7, #16
 800c7b8:	4619      	mov	r1, r3
 800c7ba:	68f8      	ldr	r0, [r7, #12]
 800c7bc:	f00a f901 	bl	80169c2 <_ZN6SymbolC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c7c0:	f107 0310 	add.w	r3, r7, #16
 800c7c4:	4618      	mov	r0, r3
 800c7c6:	f016 f90c 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c7ca:	e029      	b.n	800c820 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_BOOL:
		return std::get<bool>(primal_exp->content);
 800c7cc:	687b      	ldr	r3, [r7, #4]
 800c7ce:	3304      	adds	r3, #4
 800c7d0:	4618      	mov	r0, r3
 800c7d2:	f000 f981 	bl	800cad8 <_ZSt3getIbJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800c7d6:	4603      	mov	r3, r0
 800c7d8:	781b      	ldrb	r3, [r3, #0]
 800c7da:	4619      	mov	r1, r3
 800c7dc:	68f8      	ldr	r0, [r7, #12]
 800c7de:	f00a f8d6 	bl	801698e <_ZN6SymbolC1Eb>
 800c7e2:	e01d      	b.n	800c820 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_VARIABLE:
		return evaluate(std::get<Variable*>(primal_exp->content));
 800c7e4:	687b      	ldr	r3, [r7, #4]
 800c7e6:	3304      	adds	r3, #4
 800c7e8:	4618      	mov	r0, r3
 800c7ea:	f7fd fb4a 	bl	8009e82 <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>
 800c7ee:	4603      	mov	r3, r0
 800c7f0:	681a      	ldr	r2, [r3, #0]
 800c7f2:	68fb      	ldr	r3, [r7, #12]
 800c7f4:	68b9      	ldr	r1, [r7, #8]
 800c7f6:	4618      	mov	r0, r3
 800c7f8:	f000 f831 	bl	800c85e <_ZN21Expression_calculator8evaluateEP8Variable>
 800c7fc:	e010      	b.n	800c820 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_FUNCTION_CALL:
		return Function_handler::run_function(
				std::get<Function_call*>(primal_exp->content));
 800c7fe:	687b      	ldr	r3, [r7, #4]
 800c800:	3304      	adds	r3, #4
 800c802:	4618      	mov	r0, r3
 800c804:	f7fd fb5a 	bl	8009ebc <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>
 800c808:	4603      	mov	r3, r0
 800c80a:	681a      	ldr	r2, [r3, #0]
 800c80c:	68fb      	ldr	r3, [r7, #12]
 800c80e:	4611      	mov	r1, r2
 800c810:	4618      	mov	r0, r3
 800c812:	f001 fad5 	bl	800ddc0 <_ZN16Function_handler12run_functionEP13Function_call>
 800c816:	e003      	b.n	800c820 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	}
	return 0;
 800c818:	2100      	movs	r1, #0
 800c81a:	68f8      	ldr	r0, [r7, #12]
 800c81c:	f00a f884 	bl	8016928 <_ZN6SymbolC1Ei>
}
 800c820:	68f8      	ldr	r0, [r7, #12]
 800c822:	3728      	adds	r7, #40	; 0x28
 800c824:	46bd      	mov	sp, r7
 800c826:	bd80      	pop	{r7, pc}

0800c828 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>:
      variant() = default;
 800c828:	b580      	push	{r7, lr}
 800c82a:	b082      	sub	sp, #8
 800c82c:	af00      	add	r7, sp, #0
 800c82e:	6078      	str	r0, [r7, #4]
 800c830:	687b      	ldr	r3, [r7, #4]
 800c832:	4618      	mov	r0, r3
 800c834:	f000 f9a7 	bl	800cb86 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 800c838:	687b      	ldr	r3, [r7, #4]
 800c83a:	4618      	mov	r0, r3
 800c83c:	3708      	adds	r7, #8
 800c83e:	46bd      	mov	sp, r7
 800c840:	bd80      	pop	{r7, pc}

0800c842 <_ZN6SymbolC1Ev>:
{
public:
	symbol_type type;
	symbol_value value;

	Symbol() = default;
 800c842:	b580      	push	{r7, lr}
 800c844:	b082      	sub	sp, #8
 800c846:	af00      	add	r7, sp, #0
 800c848:	6078      	str	r0, [r7, #4]
 800c84a:	687b      	ldr	r3, [r7, #4]
 800c84c:	3304      	adds	r3, #4
 800c84e:	4618      	mov	r0, r3
 800c850:	f7ff ffea 	bl	800c828 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
 800c854:	687b      	ldr	r3, [r7, #4]
 800c856:	4618      	mov	r0, r3
 800c858:	3708      	adds	r7, #8
 800c85a:	46bd      	mov	sp, r7
 800c85c:	bd80      	pop	{r7, pc}

0800c85e <_ZN21Expression_calculator8evaluateEP8Variable>:

Symbol Expression_calculator::evaluate(Variable *var)
{
 800c85e:	b590      	push	{r4, r7, lr}
 800c860:	b0a7      	sub	sp, #156	; 0x9c
 800c862:	af00      	add	r7, sp, #0
 800c864:	60f8      	str	r0, [r7, #12]
 800c866:	60b9      	str	r1, [r7, #8]
 800c868:	607a      	str	r2, [r7, #4]
	Symbol s;
 800c86a:	f107 0310 	add.w	r3, r7, #16
 800c86e:	4618      	mov	r0, r3
 800c870:	f7ff ffe7 	bl	800c842 <_ZN6SymbolC1Ev>

	switch (var->type)
 800c874:	687b      	ldr	r3, [r7, #4]
 800c876:	781b      	ldrb	r3, [r3, #0]
 800c878:	2b00      	cmp	r3, #0
 800c87a:	d002      	beq.n	800c882 <_ZN21Expression_calculator8evaluateEP8Variable+0x24>
 800c87c:	2b02      	cmp	r3, #2
 800c87e:	d01e      	beq.n	800c8be <_ZN21Expression_calculator8evaluateEP8Variable+0x60>
 800c880:	e03b      	b.n	800c8fa <_ZN21Expression_calculator8evaluateEP8Variable+0x9c>
	{
	case VARIABLE_LOCAL:
		s = Variable_handler::get_instance().get_local(var->id);
 800c882:	f00c f813 	bl	80188ac <_ZN16Variable_handler12get_instanceEv>
 800c886:	4604      	mov	r4, r0
 800c888:	687b      	ldr	r3, [r7, #4]
 800c88a:	1d1a      	adds	r2, r3, #4
 800c88c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c890:	4611      	mov	r1, r2
 800c892:	4618      	mov	r0, r3
 800c894:	f016 fa6a 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800c898:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c89c:	4619      	mov	r1, r3
 800c89e:	4620      	mov	r0, r4
 800c8a0:	f00c f8ca 	bl	8018a38 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c8a4:	4602      	mov	r2, r0
 800c8a6:	f107 0310 	add.w	r3, r7, #16
 800c8aa:	4611      	mov	r1, r2
 800c8ac:	4618      	mov	r0, r3
 800c8ae:	f7f4 ffa9 	bl	8001804 <_ZN6SymbolaSERKS_>
 800c8b2:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c8b6:	4618      	mov	r0, r3
 800c8b8:	f016 f893 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		break;
 800c8bc:	e03b      	b.n	800c936 <_ZN21Expression_calculator8evaluateEP8Variable+0xd8>
	case VARIABLE_PAR:
		s = Variable_handler::get_instance().get_par(var->id);
 800c8be:	f00b fff5 	bl	80188ac <_ZN16Variable_handler12get_instanceEv>
 800c8c2:	4604      	mov	r4, r0
 800c8c4:	687b      	ldr	r3, [r7, #4]
 800c8c6:	1d1a      	adds	r2, r3, #4
 800c8c8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800c8cc:	4611      	mov	r1, r2
 800c8ce:	4618      	mov	r0, r3
 800c8d0:	f016 fa4c 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800c8d4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800c8d8:	4619      	mov	r1, r3
 800c8da:	4620      	mov	r0, r4
 800c8dc:	f00c f860 	bl	80189a0 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c8e0:	4602      	mov	r2, r0
 800c8e2:	f107 0310 	add.w	r3, r7, #16
 800c8e6:	4611      	mov	r1, r2
 800c8e8:	4618      	mov	r0, r3
 800c8ea:	f7f4 ff8b 	bl	8001804 <_ZN6SymbolaSERKS_>
 800c8ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800c8f2:	4618      	mov	r0, r3
 800c8f4:	f016 f875 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		break;
 800c8f8:	e01d      	b.n	800c936 <_ZN21Expression_calculator8evaluateEP8Variable+0xd8>
	default:
		s = Variable_handler::get_instance().get_arg(var->id);
 800c8fa:	f00b ffd7 	bl	80188ac <_ZN16Variable_handler12get_instanceEv>
 800c8fe:	4604      	mov	r4, r0
 800c900:	687b      	ldr	r3, [r7, #4]
 800c902:	1d1a      	adds	r2, r3, #4
 800c904:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800c908:	4611      	mov	r1, r2
 800c90a:	4618      	mov	r0, r3
 800c90c:	f016 fa2e 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800c910:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800c914:	4619      	mov	r1, r3
 800c916:	4620      	mov	r0, r4
 800c918:	f00b fff6 	bl	8018908 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c91c:	4602      	mov	r2, r0
 800c91e:	f107 0310 	add.w	r3, r7, #16
 800c922:	4611      	mov	r1, r2
 800c924:	4618      	mov	r0, r3
 800c926:	f7f4 ff6d 	bl	8001804 <_ZN6SymbolaSERKS_>
 800c92a:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800c92e:	4618      	mov	r0, r3
 800c930:	f016 f857 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		break;
 800c934:	bf00      	nop
	}

	if (var->index)
 800c936:	687b      	ldr	r3, [r7, #4]
 800c938:	69db      	ldr	r3, [r3, #28]
 800c93a:	2b00      	cmp	r3, #0
 800c93c:	d01a      	beq.n	800c974 <_ZN21Expression_calculator8evaluateEP8Variable+0x116>
	{
		return s[evaluate(var->index)];
 800c93e:	687b      	ldr	r3, [r7, #4]
 800c940:	69da      	ldr	r2, [r3, #28]
 800c942:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800c946:	68b9      	ldr	r1, [r7, #8]
 800c948:	4618      	mov	r0, r3
 800c94a:	f7ff fafd 	bl	800bf48 <_ZN21Expression_calculator8evaluateEP10Expression>
 800c94e:	f107 0278 	add.w	r2, r7, #120	; 0x78
 800c952:	f107 0310 	add.w	r3, r7, #16
 800c956:	4611      	mov	r1, r2
 800c958:	4618      	mov	r0, r3
 800c95a:	f00a f8af 	bl	8016abc <_ZN6SymbolixES_>
 800c95e:	4603      	mov	r3, r0
 800c960:	4619      	mov	r1, r3
 800c962:	68f8      	ldr	r0, [r7, #12]
 800c964:	f7fb fd8c 	bl	8008480 <_ZN6SymbolC1ERKS_>
 800c968:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800c96c:	4618      	mov	r0, r3
 800c96e:	f7f4 fdb3 	bl	80014d8 <_ZN6SymbolD1Ev>
 800c972:	e005      	b.n	800c980 <_ZN21Expression_calculator8evaluateEP8Variable+0x122>
	}

	return s;
 800c974:	f107 0310 	add.w	r3, r7, #16
 800c978:	4619      	mov	r1, r3
 800c97a:	68f8      	ldr	r0, [r7, #12]
 800c97c:	f7ff face 	bl	800bf1c <_ZN6SymbolC1EOS_>
	Symbol s;
 800c980:	f107 0310 	add.w	r3, r7, #16
 800c984:	4618      	mov	r0, r3
 800c986:	f7f4 fda7 	bl	80014d8 <_ZN6SymbolD1Ev>
}
 800c98a:	68f8      	ldr	r0, [r7, #12]
 800c98c:	379c      	adds	r7, #156	; 0x9c
 800c98e:	46bd      	mov	sp, r7
 800c990:	bd90      	pop	{r4, r7, pc}

0800c992 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEEv>:
      using _Base::_Base;
 800c992:	b580      	push	{r7, lr}
 800c994:	b082      	sub	sp, #8
 800c996:	af00      	add	r7, sp, #0
 800c998:	6078      	str	r0, [r7, #4]
 800c99a:	687b      	ldr	r3, [r7, #4]
 800c99c:	4618      	mov	r0, r3
 800c99e:	f7fc f8fe 	bl	8008b9e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 800c9a2:	687b      	ldr	r3, [r7, #4]
 800c9a4:	4618      	mov	r0, r3
 800c9a6:	3708      	adds	r7, #8
 800c9a8:	46bd      	mov	sp, r7
 800c9aa:	bd80      	pop	{r7, pc}

0800c9ac <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Move_ctor_base(_Move_ctor_base&& __rhs)
 800c9ac:	b580      	push	{r7, lr}
 800c9ae:	b082      	sub	sp, #8
 800c9b0:	af00      	add	r7, sp, #0
 800c9b2:	6078      	str	r0, [r7, #4]
 800c9b4:	6039      	str	r1, [r7, #0]
      {
 800c9b6:	687b      	ldr	r3, [r7, #4]
 800c9b8:	4618      	mov	r0, r3
 800c9ba:	f7ff ffea 	bl	800c992 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEEv>
	__variant_construct<_Types...>(*this, std::move(__rhs));
 800c9be:	6838      	ldr	r0, [r7, #0]
 800c9c0:	f000 f8ee 	bl	800cba0 <_ZSt4moveIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEONSt16remove_referenceIT_E4typeEOSG_>
 800c9c4:	4603      	mov	r3, r0
 800c9c6:	4619      	mov	r1, r3
 800c9c8:	6878      	ldr	r0, [r7, #4]
 800c9ca:	f000 fc43 	bl	800d254 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_>
      }
 800c9ce:	687b      	ldr	r3, [r7, #4]
 800c9d0:	4618      	mov	r0, r3
 800c9d2:	3708      	adds	r7, #8
 800c9d4:	46bd      	mov	sp, r7
 800c9d6:	bd80      	pop	{r7, pc}

0800c9d8 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800c9d8:	b480      	push	{r7}
 800c9da:	b083      	sub	sp, #12
 800c9dc:	af00      	add	r7, sp, #0
 800c9de:	6078      	str	r0, [r7, #4]
 800c9e0:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800c9e2:	687b      	ldr	r3, [r7, #4]
 800c9e4:	681a      	ldr	r2, [r3, #0]
 800c9e6:	683b      	ldr	r3, [r7, #0]
 800c9e8:	009b      	lsls	r3, r3, #2
 800c9ea:	4413      	add	r3, r2
      }
 800c9ec:	4618      	mov	r0, r3
 800c9ee:	370c      	adds	r7, #12
 800c9f0:	46bd      	mov	sp, r7
 800c9f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9f6:	4770      	bx	lr

0800c9f8 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800c9f8:	b480      	push	{r7}
 800c9fa:	b083      	sub	sp, #12
 800c9fc:	af00      	add	r7, sp, #0
 800c9fe:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800ca00:	687b      	ldr	r3, [r7, #4]
 800ca02:	685a      	ldr	r2, [r3, #4]
 800ca04:	687b      	ldr	r3, [r7, #4]
 800ca06:	681b      	ldr	r3, [r3, #0]
 800ca08:	1ad3      	subs	r3, r2, r3
 800ca0a:	4618      	mov	r0, r3
 800ca0c:	370c      	adds	r7, #12
 800ca0e:	46bd      	mov	sp, r7
 800ca10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca14:	4770      	bx	lr

0800ca16 <_ZNSt6vectorI12sum_operatorSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800ca16:	b480      	push	{r7}
 800ca18:	b083      	sub	sp, #12
 800ca1a:	af00      	add	r7, sp, #0
 800ca1c:	6078      	str	r0, [r7, #4]
 800ca1e:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800ca20:	687b      	ldr	r3, [r7, #4]
 800ca22:	681a      	ldr	r2, [r3, #0]
 800ca24:	683b      	ldr	r3, [r7, #0]
 800ca26:	4413      	add	r3, r2
      }
 800ca28:	4618      	mov	r0, r3
 800ca2a:	370c      	adds	r7, #12
 800ca2c:	46bd      	mov	sp, r7
 800ca2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca32:	4770      	bx	lr

0800ca34 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800ca34:	b480      	push	{r7}
 800ca36:	b083      	sub	sp, #12
 800ca38:	af00      	add	r7, sp, #0
 800ca3a:	6078      	str	r0, [r7, #4]
 800ca3c:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800ca3e:	687b      	ldr	r3, [r7, #4]
 800ca40:	681a      	ldr	r2, [r3, #0]
 800ca42:	683b      	ldr	r3, [r7, #0]
 800ca44:	009b      	lsls	r3, r3, #2
 800ca46:	4413      	add	r3, r2
      }
 800ca48:	4618      	mov	r0, r3
 800ca4a:	370c      	adds	r7, #12
 800ca4c:	46bd      	mov	sp, r7
 800ca4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca52:	4770      	bx	lr

0800ca54 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800ca54:	b480      	push	{r7}
 800ca56:	b083      	sub	sp, #12
 800ca58:	af00      	add	r7, sp, #0
 800ca5a:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800ca5c:	687b      	ldr	r3, [r7, #4]
 800ca5e:	685a      	ldr	r2, [r3, #4]
 800ca60:	687b      	ldr	r3, [r7, #4]
 800ca62:	681b      	ldr	r3, [r3, #0]
 800ca64:	1ad3      	subs	r3, r2, r3
 800ca66:	4618      	mov	r0, r3
 800ca68:	370c      	adds	r7, #12
 800ca6a:	46bd      	mov	sp, r7
 800ca6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca70:	4770      	bx	lr

0800ca72 <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800ca72:	b480      	push	{r7}
 800ca74:	b083      	sub	sp, #12
 800ca76:	af00      	add	r7, sp, #0
 800ca78:	6078      	str	r0, [r7, #4]
 800ca7a:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800ca7c:	687b      	ldr	r3, [r7, #4]
 800ca7e:	681a      	ldr	r2, [r3, #0]
 800ca80:	683b      	ldr	r3, [r7, #0]
 800ca82:	4413      	add	r3, r2
      }
 800ca84:	4618      	mov	r0, r3
 800ca86:	370c      	adds	r7, #12
 800ca88:	46bd      	mov	sp, r7
 800ca8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca8e:	4770      	bx	lr

0800ca90 <_ZSt3getIiJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800ca90:	b580      	push	{r7, lr}
 800ca92:	b082      	sub	sp, #8
 800ca94:	af00      	add	r7, sp, #0
 800ca96:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800ca98:	6878      	ldr	r0, [r7, #4]
 800ca9a:	f000 fbf9 	bl	800d290 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800ca9e:	4603      	mov	r3, r0
    }
 800caa0:	4618      	mov	r0, r3
 800caa2:	3708      	adds	r7, #8
 800caa4:	46bd      	mov	sp, r7
 800caa6:	bd80      	pop	{r7, pc}

0800caa8 <_ZSt3getIfJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800caa8:	b580      	push	{r7, lr}
 800caaa:	b082      	sub	sp, #8
 800caac:	af00      	add	r7, sp, #0
 800caae:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cab0:	6878      	ldr	r0, [r7, #4]
 800cab2:	f000 fc09 	bl	800d2c8 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cab6:	4603      	mov	r3, r0
    }
 800cab8:	4618      	mov	r0, r3
 800caba:	3708      	adds	r7, #8
 800cabc:	46bd      	mov	sp, r7
 800cabe:	bd80      	pop	{r7, pc}

0800cac0 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJbifS5_P8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cac0:	b580      	push	{r7, lr}
 800cac2:	b082      	sub	sp, #8
 800cac4:	af00      	add	r7, sp, #0
 800cac6:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cac8:	6878      	ldr	r0, [r7, #4]
 800caca:	f000 fc19 	bl	800d300 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cace:	4603      	mov	r3, r0
    }
 800cad0:	4618      	mov	r0, r3
 800cad2:	3708      	adds	r7, #8
 800cad4:	46bd      	mov	sp, r7
 800cad6:	bd80      	pop	{r7, pc}

0800cad8 <_ZSt3getIbJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cad8:	b580      	push	{r7, lr}
 800cada:	b082      	sub	sp, #8
 800cadc:	af00      	add	r7, sp, #0
 800cade:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cae0:	6878      	ldr	r0, [r7, #4]
 800cae2:	f000 fc29 	bl	800d338 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cae6:	4603      	mov	r3, r0
    }
 800cae8:	4618      	mov	r0, r3
 800caea:	3708      	adds	r7, #8
 800caec:	46bd      	mov	sp, r7
 800caee:	bd80      	pop	{r7, pc}

0800caf0 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800caf0:	b580      	push	{r7, lr}
 800caf2:	b082      	sub	sp, #8
 800caf4:	af00      	add	r7, sp, #0
 800caf6:	6078      	str	r0, [r7, #4]
 800caf8:	7039      	strb	r1, [r7, #0]
 800cafa:	687b      	ldr	r3, [r7, #4]
 800cafc:	4611      	mov	r1, r2
 800cafe:	4618      	mov	r0, r3
 800cb00:	f000 fc54 	bl	800d3ac <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800cb04:	687b      	ldr	r3, [r7, #4]
 800cb06:	4618      	mov	r0, r3
 800cb08:	3708      	adds	r7, #8
 800cb0a:	46bd      	mov	sp, r7
 800cb0c:	bd80      	pop	{r7, pc}

0800cb0e <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cb0e:	b580      	push	{r7, lr}
 800cb10:	b082      	sub	sp, #8
 800cb12:	af00      	add	r7, sp, #0
 800cb14:	6078      	str	r0, [r7, #4]
 800cb16:	7039      	strb	r1, [r7, #0]
 800cb18:	687b      	ldr	r3, [r7, #4]
 800cb1a:	4611      	mov	r1, r2
 800cb1c:	4618      	mov	r0, r3
 800cb1e:	f7ff ffe7 	bl	800caf0 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800cb22:	687b      	ldr	r3, [r7, #4]
 800cb24:	4618      	mov	r0, r3
 800cb26:	3708      	adds	r7, #8
 800cb28:	46bd      	mov	sp, r7
 800cb2a:	bd80      	pop	{r7, pc}

0800cb2c <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cb2c:	b580      	push	{r7, lr}
 800cb2e:	b082      	sub	sp, #8
 800cb30:	af00      	add	r7, sp, #0
 800cb32:	6078      	str	r0, [r7, #4]
 800cb34:	7039      	strb	r1, [r7, #0]
 800cb36:	687b      	ldr	r3, [r7, #4]
 800cb38:	4611      	mov	r1, r2
 800cb3a:	4618      	mov	r0, r3
 800cb3c:	f7ff ffe7 	bl	800cb0e <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800cb40:	687b      	ldr	r3, [r7, #4]
 800cb42:	4618      	mov	r0, r3
 800cb44:	3708      	adds	r7, #8
 800cb46:	46bd      	mov	sp, r7
 800cb48:	bd80      	pop	{r7, pc}

0800cb4a <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cb4a:	b580      	push	{r7, lr}
 800cb4c:	b082      	sub	sp, #8
 800cb4e:	af00      	add	r7, sp, #0
 800cb50:	6078      	str	r0, [r7, #4]
 800cb52:	7039      	strb	r1, [r7, #0]
 800cb54:	687b      	ldr	r3, [r7, #4]
 800cb56:	4611      	mov	r1, r2
 800cb58:	4618      	mov	r0, r3
 800cb5a:	f7ff ffe7 	bl	800cb2c <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800cb5e:	687b      	ldr	r3, [r7, #4]
 800cb60:	4618      	mov	r0, r3
 800cb62:	3708      	adds	r7, #8
 800cb64:	46bd      	mov	sp, r7
 800cb66:	bd80      	pop	{r7, pc}

0800cb68 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 800cb68:	b580      	push	{r7, lr}
 800cb6a:	b082      	sub	sp, #8
 800cb6c:	af00      	add	r7, sp, #0
 800cb6e:	6078      	str	r0, [r7, #4]
 800cb70:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 800cb72:	687b      	ldr	r3, [r7, #4]
 800cb74:	4611      	mov	r1, r2
 800cb76:	4618      	mov	r0, r3
 800cb78:	f7ff ffe7 	bl	800cb4a <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800cb7c:	687b      	ldr	r3, [r7, #4]
 800cb7e:	4618      	mov	r0, r3
 800cb80:	3708      	adds	r7, #8
 800cb82:	46bd      	mov	sp, r7
 800cb84:	bd80      	pop	{r7, pc}

0800cb86 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      _Variant_base()
 800cb86:	b580      	push	{r7, lr}
 800cb88:	b082      	sub	sp, #8
 800cb8a:	af00      	add	r7, sp, #0
 800cb8c:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 800cb8e:	4619      	mov	r1, r3
 800cb90:	6878      	ldr	r0, [r7, #4]
 800cb92:	f7ff ffe9 	bl	800cb68 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800cb96:	687b      	ldr	r3, [r7, #4]
 800cb98:	4618      	mov	r0, r3
 800cb9a:	3708      	adds	r7, #8
 800cb9c:	46bd      	mov	sp, r7
 800cb9e:	bd80      	pop	{r7, pc}

0800cba0 <_ZSt4moveIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEONSt16remove_referenceIT_E4typeEOSG_>:
    move(_Tp&& __t) noexcept
 800cba0:	b480      	push	{r7}
 800cba2:	b083      	sub	sp, #12
 800cba4:	af00      	add	r7, sp, #0
 800cba6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800cba8:	687b      	ldr	r3, [r7, #4]
 800cbaa:	4618      	mov	r0, r3
 800cbac:	370c      	adds	r7, #12
 800cbae:	46bd      	mov	sp, r7
 800cbb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbb4:	4770      	bx	lr

0800cbb6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEENSt8__detail9__variant15_Move_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800cbb6:	b480      	push	{r7}
 800cbb8:	b083      	sub	sp, #12
 800cbba:	af00      	add	r7, sp, #0
 800cbbc:	6078      	str	r0, [r7, #4]
        return static_cast<variant<_Types...>&&>(__rhs);
 800cbbe:	687b      	ldr	r3, [r7, #4]
    }
 800cbc0:	4618      	mov	r0, r3
 800cbc2:	370c      	adds	r7, #12
 800cbc4:	46bd      	mov	sp, r7
 800cbc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbca:	4770      	bx	lr

0800cbcc <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cbcc:	b580      	push	{r7, lr}
 800cbce:	b082      	sub	sp, #8
 800cbd0:	af00      	add	r7, sp, #0
 800cbd2:	7138      	strb	r0, [r7, #4]
 800cbd4:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cbd6:	6838      	ldr	r0, [r7, #0]
 800cbd8:	f000 fc26 	bl	800d428 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cbdc:	4603      	mov	r3, r0
 800cbde:	4618      	mov	r0, r3
 800cbe0:	f000 fc2d 	bl	800d43e <_ZNOSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 800cbe4:	4603      	mov	r3, r0
 800cbe6:	4618      	mov	r0, r3
 800cbe8:	3708      	adds	r7, #8
 800cbea:	46bd      	mov	sp, r7
 800cbec:	bd80      	pop	{r7, pc}

0800cbee <_ZNSt8__detail9__variant5__getILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800cbee:	b590      	push	{r4, r7, lr}
 800cbf0:	b083      	sub	sp, #12
 800cbf2:	af00      	add	r7, sp, #0
 800cbf4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800cbf6:	6878      	ldr	r0, [r7, #4]
 800cbf8:	f000 fc0b 	bl	800d412 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cbfc:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800cbfe:	4619      	mov	r1, r3
 800cc00:	4620      	mov	r0, r4
 800cc02:	f7ff ffe3 	bl	800cbcc <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800cc06:	4603      	mov	r3, r0
    }
 800cc08:	4618      	mov	r0, r3
 800cc0a:	370c      	adds	r7, #12
 800cc0c:	46bd      	mov	sp, r7
 800cc0e:	bd90      	pop	{r4, r7, pc}

0800cc10 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800cc10:	b580      	push	{r7, lr}
 800cc12:	b082      	sub	sp, #8
 800cc14:	af00      	add	r7, sp, #0
 800cc16:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800cc18:	6878      	ldr	r0, [r7, #4]
 800cc1a:	f000 fbfa 	bl	800d412 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cc1e:	4603      	mov	r3, r0
 800cc20:	4618      	mov	r0, r3
 800cc22:	f7ff ffe4 	bl	800cbee <_ZNSt8__detail9__variant5__getILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800cc26:	4603      	mov	r3, r0
	}
 800cc28:	4618      	mov	r0, r3
 800cc2a:	3708      	adds	r7, #8
 800cc2c:	46bd      	mov	sp, r7
 800cc2e:	bd80      	pop	{r7, pc}

0800cc30 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800cc30:	b5b0      	push	{r4, r5, r7, lr}
 800cc32:	b082      	sub	sp, #8
 800cc34:	af00      	add	r7, sp, #0
 800cc36:	6078      	str	r0, [r7, #4]
 800cc38:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800cc3a:	6878      	ldr	r0, [r7, #4]
 800cc3c:	f000 fbd3 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cc40:	4604      	mov	r4, r0
 800cc42:	6838      	ldr	r0, [r7, #0]
 800cc44:	f000 fbda 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cc48:	4603      	mov	r3, r0
 800cc4a:	4618      	mov	r0, r3
 800cc4c:	f7ff ffe0 	bl	800cc10 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSJ_>
 800cc50:	4603      	mov	r3, r0
 800cc52:	4619      	mov	r1, r3
 800cc54:	4620      	mov	r0, r4
 800cc56:	f000 fbff 	bl	800d458 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JiEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800cc5a:	462b      	mov	r3, r5
      }
 800cc5c:	4618      	mov	r0, r3
 800cc5e:	3708      	adds	r7, #8
 800cc60:	46bd      	mov	sp, r7
 800cc62:	bdb0      	pop	{r4, r5, r7, pc}

0800cc64 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cc64:	b5b0      	push	{r4, r5, r7, lr}
 800cc66:	b082      	sub	sp, #8
 800cc68:	af00      	add	r7, sp, #0
 800cc6a:	6078      	str	r0, [r7, #4]
 800cc6c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800cc6e:	6878      	ldr	r0, [r7, #4]
 800cc70:	f000 fbb9 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cc74:	4604      	mov	r4, r0
 800cc76:	6838      	ldr	r0, [r7, #0]
 800cc78:	f000 fbc0 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cc7c:	4603      	mov	r3, r0
 800cc7e:	4619      	mov	r1, r3
 800cc80:	4620      	mov	r0, r4
 800cc82:	f7ff ffd5 	bl	800cc30 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800cc86:	462b      	mov	r3, r5
      }
 800cc88:	4618      	mov	r0, r3
 800cc8a:	3708      	adds	r7, #8
 800cc8c:	46bd      	mov	sp, r7
 800cc8e:	bdb0      	pop	{r4, r5, r7, pc}

0800cc90 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cc90:	b5b0      	push	{r4, r5, r7, lr}
 800cc92:	b082      	sub	sp, #8
 800cc94:	af00      	add	r7, sp, #0
 800cc96:	6078      	str	r0, [r7, #4]
 800cc98:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800cc9a:	6878      	ldr	r0, [r7, #4]
 800cc9c:	f000 fba3 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cca0:	4604      	mov	r4, r0
 800cca2:	6838      	ldr	r0, [r7, #0]
 800cca4:	f000 fbaa 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cca8:	4603      	mov	r3, r0
 800ccaa:	4619      	mov	r1, r3
 800ccac:	4620      	mov	r0, r4
 800ccae:	f7ff ffd9 	bl	800cc64 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800ccb2:	462b      	mov	r3, r5
      }
 800ccb4:	4618      	mov	r0, r3
 800ccb6:	3708      	adds	r7, #8
 800ccb8:	46bd      	mov	sp, r7
 800ccba:	bdb0      	pop	{r4, r5, r7, pc}

0800ccbc <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800ccbc:	b580      	push	{r7, lr}
 800ccbe:	b082      	sub	sp, #8
 800ccc0:	af00      	add	r7, sp, #0
 800ccc2:	7138      	strb	r0, [r7, #4]
 800ccc4:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800ccc6:	6838      	ldr	r0, [r7, #0]
 800ccc8:	f000 fbdd 	bl	800d486 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cccc:	4603      	mov	r3, r0
 800ccce:	4618      	mov	r0, r3
 800ccd0:	f000 fbe4 	bl	800d49c <_ZNOSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 800ccd4:	4603      	mov	r3, r0
 800ccd6:	4618      	mov	r0, r3
 800ccd8:	3708      	adds	r7, #8
 800ccda:	46bd      	mov	sp, r7
 800ccdc:	bd80      	pop	{r7, pc}

0800ccde <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ccde:	b590      	push	{r4, r7, lr}
 800cce0:	b083      	sub	sp, #12
 800cce2:	af00      	add	r7, sp, #0
 800cce4:	7138      	strb	r0, [r7, #4]
 800cce6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cce8:	6838      	ldr	r0, [r7, #0]
 800ccea:	f000 fb9d 	bl	800d428 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800ccee:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ccf0:	4619      	mov	r1, r3
 800ccf2:	4620      	mov	r0, r4
 800ccf4:	f7ff ffe2 	bl	800ccbc <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ccf8:	4603      	mov	r3, r0
    }
 800ccfa:	4618      	mov	r0, r3
 800ccfc:	370c      	adds	r7, #12
 800ccfe:	46bd      	mov	sp, r7
 800cd00:	bd90      	pop	{r4, r7, pc}

0800cd02 <_ZNSt8__detail9__variant5__getILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800cd02:	b590      	push	{r4, r7, lr}
 800cd04:	b083      	sub	sp, #12
 800cd06:	af00      	add	r7, sp, #0
 800cd08:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800cd0a:	6878      	ldr	r0, [r7, #4]
 800cd0c:	f000 fb81 	bl	800d412 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cd10:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800cd12:	4619      	mov	r1, r3
 800cd14:	4620      	mov	r0, r4
 800cd16:	f7ff ffe2 	bl	800ccde <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cd1a:	4603      	mov	r3, r0
    }
 800cd1c:	4618      	mov	r0, r3
 800cd1e:	370c      	adds	r7, #12
 800cd20:	46bd      	mov	sp, r7
 800cd22:	bd90      	pop	{r4, r7, pc}

0800cd24 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800cd24:	b580      	push	{r7, lr}
 800cd26:	b082      	sub	sp, #8
 800cd28:	af00      	add	r7, sp, #0
 800cd2a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800cd2c:	6878      	ldr	r0, [r7, #4]
 800cd2e:	f000 fb70 	bl	800d412 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cd32:	4603      	mov	r3, r0
 800cd34:	4618      	mov	r0, r3
 800cd36:	f7ff ffe4 	bl	800cd02 <_ZNSt8__detail9__variant5__getILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800cd3a:	4603      	mov	r3, r0
	}
 800cd3c:	4618      	mov	r0, r3
 800cd3e:	3708      	adds	r7, #8
 800cd40:	46bd      	mov	sp, r7
 800cd42:	bd80      	pop	{r7, pc}

0800cd44 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800cd44:	b5b0      	push	{r4, r5, r7, lr}
 800cd46:	b082      	sub	sp, #8
 800cd48:	af00      	add	r7, sp, #0
 800cd4a:	6078      	str	r0, [r7, #4]
 800cd4c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800cd4e:	6878      	ldr	r0, [r7, #4]
 800cd50:	f000 fb49 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cd54:	4604      	mov	r4, r0
 800cd56:	6838      	ldr	r0, [r7, #0]
 800cd58:	f000 fb50 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cd5c:	4603      	mov	r3, r0
 800cd5e:	4618      	mov	r0, r3
 800cd60:	f7ff ffe0 	bl	800cd24 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSJ_>
 800cd64:	4603      	mov	r3, r0
 800cd66:	4619      	mov	r1, r3
 800cd68:	4620      	mov	r0, r4
 800cd6a:	f000 fba4 	bl	800d4b6 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JfEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800cd6e:	462b      	mov	r3, r5
      }
 800cd70:	4618      	mov	r0, r3
 800cd72:	3708      	adds	r7, #8
 800cd74:	46bd      	mov	sp, r7
 800cd76:	bdb0      	pop	{r4, r5, r7, pc}

0800cd78 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cd78:	b5b0      	push	{r4, r5, r7, lr}
 800cd7a:	b082      	sub	sp, #8
 800cd7c:	af00      	add	r7, sp, #0
 800cd7e:	6078      	str	r0, [r7, #4]
 800cd80:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800cd82:	6878      	ldr	r0, [r7, #4]
 800cd84:	f000 fb2f 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cd88:	4604      	mov	r4, r0
 800cd8a:	6838      	ldr	r0, [r7, #0]
 800cd8c:	f000 fb36 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cd90:	4603      	mov	r3, r0
 800cd92:	4619      	mov	r1, r3
 800cd94:	4620      	mov	r0, r4
 800cd96:	f7ff ffd5 	bl	800cd44 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800cd9a:	462b      	mov	r3, r5
      }
 800cd9c:	4618      	mov	r0, r3
 800cd9e:	3708      	adds	r7, #8
 800cda0:	46bd      	mov	sp, r7
 800cda2:	bdb0      	pop	{r4, r5, r7, pc}

0800cda4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cda4:	b5b0      	push	{r4, r5, r7, lr}
 800cda6:	b082      	sub	sp, #8
 800cda8:	af00      	add	r7, sp, #0
 800cdaa:	6078      	str	r0, [r7, #4]
 800cdac:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800cdae:	6878      	ldr	r0, [r7, #4]
 800cdb0:	f000 fb19 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cdb4:	4604      	mov	r4, r0
 800cdb6:	6838      	ldr	r0, [r7, #0]
 800cdb8:	f000 fb20 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cdbc:	4603      	mov	r3, r0
 800cdbe:	4619      	mov	r1, r3
 800cdc0:	4620      	mov	r0, r4
 800cdc2:	f7ff ffd9 	bl	800cd78 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800cdc6:	462b      	mov	r3, r5
      }
 800cdc8:	4618      	mov	r0, r3
 800cdca:	3708      	adds	r7, #8
 800cdcc:	46bd      	mov	sp, r7
 800cdce:	bdb0      	pop	{r4, r5, r7, pc}

0800cdd0 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cdd0:	b580      	push	{r7, lr}
 800cdd2:	b082      	sub	sp, #8
 800cdd4:	af00      	add	r7, sp, #0
 800cdd6:	7138      	strb	r0, [r7, #4]
 800cdd8:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cdda:	6838      	ldr	r0, [r7, #0]
 800cddc:	f000 fb82 	bl	800d4e4 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cde0:	4603      	mov	r3, r0
 800cde2:	4618      	mov	r0, r3
 800cde4:	f000 fb89 	bl	800d4fa <_ZNOSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800cde8:	4603      	mov	r3, r0
 800cdea:	4618      	mov	r0, r3
 800cdec:	3708      	adds	r7, #8
 800cdee:	46bd      	mov	sp, r7
 800cdf0:	bd80      	pop	{r7, pc}

0800cdf2 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cdf2:	b590      	push	{r4, r7, lr}
 800cdf4:	b083      	sub	sp, #12
 800cdf6:	af00      	add	r7, sp, #0
 800cdf8:	7138      	strb	r0, [r7, #4]
 800cdfa:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cdfc:	6838      	ldr	r0, [r7, #0]
 800cdfe:	f000 fb42 	bl	800d486 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800ce02:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ce04:	4619      	mov	r1, r3
 800ce06:	4620      	mov	r0, r4
 800ce08:	f7ff ffe2 	bl	800cdd0 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ce0c:	4603      	mov	r3, r0
    }
 800ce0e:	4618      	mov	r0, r3
 800ce10:	370c      	adds	r7, #12
 800ce12:	46bd      	mov	sp, r7
 800ce14:	bd90      	pop	{r4, r7, pc}

0800ce16 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ce16:	b590      	push	{r4, r7, lr}
 800ce18:	b083      	sub	sp, #12
 800ce1a:	af00      	add	r7, sp, #0
 800ce1c:	7138      	strb	r0, [r7, #4]
 800ce1e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ce20:	6838      	ldr	r0, [r7, #0]
 800ce22:	f000 fb01 	bl	800d428 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800ce26:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ce28:	4619      	mov	r1, r3
 800ce2a:	4620      	mov	r0, r4
 800ce2c:	f7ff ffe1 	bl	800cdf2 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ce30:	4603      	mov	r3, r0
    }
 800ce32:	4618      	mov	r0, r3
 800ce34:	370c      	adds	r7, #12
 800ce36:	46bd      	mov	sp, r7
 800ce38:	bd90      	pop	{r4, r7, pc}

0800ce3a <_ZNSt8__detail9__variant5__getILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ce3a:	b590      	push	{r4, r7, lr}
 800ce3c:	b083      	sub	sp, #12
 800ce3e:	af00      	add	r7, sp, #0
 800ce40:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ce42:	6878      	ldr	r0, [r7, #4]
 800ce44:	f000 fae5 	bl	800d412 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800ce48:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800ce4a:	4619      	mov	r1, r3
 800ce4c:	4620      	mov	r0, r4
 800ce4e:	f7ff ffe2 	bl	800ce16 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ce52:	4603      	mov	r3, r0
    }
 800ce54:	4618      	mov	r0, r3
 800ce56:	370c      	adds	r7, #12
 800ce58:	46bd      	mov	sp, r7
 800ce5a:	bd90      	pop	{r4, r7, pc}

0800ce5c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800ce5c:	b580      	push	{r7, lr}
 800ce5e:	b082      	sub	sp, #8
 800ce60:	af00      	add	r7, sp, #0
 800ce62:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800ce64:	6878      	ldr	r0, [r7, #4]
 800ce66:	f000 fad4 	bl	800d412 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800ce6a:	4603      	mov	r3, r0
 800ce6c:	4618      	mov	r0, r3
 800ce6e:	f7ff ffe4 	bl	800ce3a <_ZNSt8__detail9__variant5__getILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800ce72:	4603      	mov	r3, r0
	}
 800ce74:	4618      	mov	r0, r3
 800ce76:	3708      	adds	r7, #8
 800ce78:	46bd      	mov	sp, r7
 800ce7a:	bd80      	pop	{r7, pc}

0800ce7c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800ce7c:	b5b0      	push	{r4, r5, r7, lr}
 800ce7e:	b082      	sub	sp, #8
 800ce80:	af00      	add	r7, sp, #0
 800ce82:	6078      	str	r0, [r7, #4]
 800ce84:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800ce86:	6878      	ldr	r0, [r7, #4]
 800ce88:	f000 faad 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800ce8c:	4604      	mov	r4, r0
 800ce8e:	6838      	ldr	r0, [r7, #0]
 800ce90:	f000 fab4 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ce94:	4603      	mov	r3, r0
 800ce96:	4618      	mov	r0, r3
 800ce98:	f7ff ffe0 	bl	800ce5c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSJ_>
 800ce9c:	4603      	mov	r3, r0
 800ce9e:	4619      	mov	r1, r3
 800cea0:	4620      	mov	r0, r4
 800cea2:	f000 fb37 	bl	800d514 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JbEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800cea6:	462b      	mov	r3, r5
      }
 800cea8:	4618      	mov	r0, r3
 800ceaa:	3708      	adds	r7, #8
 800ceac:	46bd      	mov	sp, r7
 800ceae:	bdb0      	pop	{r4, r5, r7, pc}

0800ceb0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ceb0:	b5b0      	push	{r4, r5, r7, lr}
 800ceb2:	b082      	sub	sp, #8
 800ceb4:	af00      	add	r7, sp, #0
 800ceb6:	6078      	str	r0, [r7, #4]
 800ceb8:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800ceba:	6878      	ldr	r0, [r7, #4]
 800cebc:	f000 fa93 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cec0:	4604      	mov	r4, r0
 800cec2:	6838      	ldr	r0, [r7, #0]
 800cec4:	f000 fa9a 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cec8:	4603      	mov	r3, r0
 800ceca:	4619      	mov	r1, r3
 800cecc:	4620      	mov	r0, r4
 800cece:	f7ff ffd5 	bl	800ce7c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800ced2:	462b      	mov	r3, r5
      }
 800ced4:	4618      	mov	r0, r3
 800ced6:	3708      	adds	r7, #8
 800ced8:	46bd      	mov	sp, r7
 800ceda:	bdb0      	pop	{r4, r5, r7, pc}

0800cedc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cedc:	b5b0      	push	{r4, r5, r7, lr}
 800cede:	b082      	sub	sp, #8
 800cee0:	af00      	add	r7, sp, #0
 800cee2:	6078      	str	r0, [r7, #4]
 800cee4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800cee6:	6878      	ldr	r0, [r7, #4]
 800cee8:	f000 fa7d 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800ceec:	4604      	mov	r4, r0
 800ceee:	6838      	ldr	r0, [r7, #0]
 800cef0:	f000 fa84 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cef4:	4603      	mov	r3, r0
 800cef6:	4619      	mov	r1, r3
 800cef8:	4620      	mov	r0, r4
 800cefa:	f7ff ffd9 	bl	800ceb0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800cefe:	462b      	mov	r3, r5
      }
 800cf00:	4618      	mov	r0, r3
 800cf02:	3708      	adds	r7, #8
 800cf04:	46bd      	mov	sp, r7
 800cf06:	bdb0      	pop	{r4, r5, r7, pc}

0800cf08 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cf08:	b580      	push	{r7, lr}
 800cf0a:	b082      	sub	sp, #8
 800cf0c:	af00      	add	r7, sp, #0
 800cf0e:	7138      	strb	r0, [r7, #4]
 800cf10:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cf12:	6838      	ldr	r0, [r7, #0]
 800cf14:	f000 fb15 	bl	800d542 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cf18:	4603      	mov	r3, r0
 800cf1a:	4618      	mov	r0, r3
 800cf1c:	f000 fb1c 	bl	800d558 <_ZNOSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 800cf20:	4603      	mov	r3, r0
 800cf22:	4618      	mov	r0, r3
 800cf24:	3708      	adds	r7, #8
 800cf26:	46bd      	mov	sp, r7
 800cf28:	bd80      	pop	{r7, pc}

0800cf2a <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cf2a:	b590      	push	{r4, r7, lr}
 800cf2c:	b083      	sub	sp, #12
 800cf2e:	af00      	add	r7, sp, #0
 800cf30:	7138      	strb	r0, [r7, #4]
 800cf32:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cf34:	6838      	ldr	r0, [r7, #0]
 800cf36:	f000 fad5 	bl	800d4e4 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cf3a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cf3c:	4619      	mov	r1, r3
 800cf3e:	4620      	mov	r0, r4
 800cf40:	f7ff ffe2 	bl	800cf08 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800cf44:	4603      	mov	r3, r0
    }
 800cf46:	4618      	mov	r0, r3
 800cf48:	370c      	adds	r7, #12
 800cf4a:	46bd      	mov	sp, r7
 800cf4c:	bd90      	pop	{r4, r7, pc}

0800cf4e <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cf4e:	b590      	push	{r4, r7, lr}
 800cf50:	b083      	sub	sp, #12
 800cf52:	af00      	add	r7, sp, #0
 800cf54:	7138      	strb	r0, [r7, #4]
 800cf56:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cf58:	6838      	ldr	r0, [r7, #0]
 800cf5a:	f000 fa94 	bl	800d486 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cf5e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cf60:	4619      	mov	r1, r3
 800cf62:	4620      	mov	r0, r4
 800cf64:	f7ff ffe1 	bl	800cf2a <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cf68:	4603      	mov	r3, r0
    }
 800cf6a:	4618      	mov	r0, r3
 800cf6c:	370c      	adds	r7, #12
 800cf6e:	46bd      	mov	sp, r7
 800cf70:	bd90      	pop	{r4, r7, pc}

0800cf72 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cf72:	b590      	push	{r4, r7, lr}
 800cf74:	b083      	sub	sp, #12
 800cf76:	af00      	add	r7, sp, #0
 800cf78:	7138      	strb	r0, [r7, #4]
 800cf7a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cf7c:	6838      	ldr	r0, [r7, #0]
 800cf7e:	f000 fa53 	bl	800d428 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cf82:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cf84:	4619      	mov	r1, r3
 800cf86:	4620      	mov	r0, r4
 800cf88:	f7ff ffe1 	bl	800cf4e <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cf8c:	4603      	mov	r3, r0
    }
 800cf8e:	4618      	mov	r0, r3
 800cf90:	370c      	adds	r7, #12
 800cf92:	46bd      	mov	sp, r7
 800cf94:	bd90      	pop	{r4, r7, pc}

0800cf96 <_ZNSt8__detail9__variant5__getILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800cf96:	b590      	push	{r4, r7, lr}
 800cf98:	b083      	sub	sp, #12
 800cf9a:	af00      	add	r7, sp, #0
 800cf9c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800cf9e:	6878      	ldr	r0, [r7, #4]
 800cfa0:	f000 fa37 	bl	800d412 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cfa4:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800cfa6:	4619      	mov	r1, r3
 800cfa8:	4620      	mov	r0, r4
 800cfaa:	f7ff ffe2 	bl	800cf72 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cfae:	4603      	mov	r3, r0
    }
 800cfb0:	4618      	mov	r0, r3
 800cfb2:	370c      	adds	r7, #12
 800cfb4:	46bd      	mov	sp, r7
 800cfb6:	bd90      	pop	{r4, r7, pc}

0800cfb8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800cfb8:	b580      	push	{r7, lr}
 800cfba:	b082      	sub	sp, #8
 800cfbc:	af00      	add	r7, sp, #0
 800cfbe:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800cfc0:	6878      	ldr	r0, [r7, #4]
 800cfc2:	f000 fa26 	bl	800d412 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cfc6:	4603      	mov	r3, r0
 800cfc8:	4618      	mov	r0, r3
 800cfca:	f7ff ffe4 	bl	800cf96 <_ZNSt8__detail9__variant5__getILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800cfce:	4603      	mov	r3, r0
	}
 800cfd0:	4618      	mov	r0, r3
 800cfd2:	3708      	adds	r7, #8
 800cfd4:	46bd      	mov	sp, r7
 800cfd6:	bd80      	pop	{r7, pc}

0800cfd8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800cfd8:	b5b0      	push	{r4, r5, r7, lr}
 800cfda:	b082      	sub	sp, #8
 800cfdc:	af00      	add	r7, sp, #0
 800cfde:	6078      	str	r0, [r7, #4]
 800cfe0:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800cfe2:	6878      	ldr	r0, [r7, #4]
 800cfe4:	f000 f9ff 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cfe8:	4604      	mov	r4, r0
 800cfea:	6838      	ldr	r0, [r7, #0]
 800cfec:	f000 fa06 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cff0:	4603      	mov	r3, r0
 800cff2:	4618      	mov	r0, r3
 800cff4:	f7ff ffe0 	bl	800cfb8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSJ_>
 800cff8:	4603      	mov	r3, r0
 800cffa:	4619      	mov	r1, r3
 800cffc:	4620      	mov	r0, r4
 800cffe:	f000 fabc 	bl	800d57a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JS8_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800d002:	462b      	mov	r3, r5
      }
 800d004:	4618      	mov	r0, r3
 800d006:	3708      	adds	r7, #8
 800d008:	46bd      	mov	sp, r7
 800d00a:	bdb0      	pop	{r4, r5, r7, pc}

0800d00c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d00c:	b5b0      	push	{r4, r5, r7, lr}
 800d00e:	b082      	sub	sp, #8
 800d010:	af00      	add	r7, sp, #0
 800d012:	6078      	str	r0, [r7, #4]
 800d014:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800d016:	6878      	ldr	r0, [r7, #4]
 800d018:	f000 f9e5 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d01c:	4604      	mov	r4, r0
 800d01e:	6838      	ldr	r0, [r7, #0]
 800d020:	f000 f9ec 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d024:	4603      	mov	r3, r0
 800d026:	4619      	mov	r1, r3
 800d028:	4620      	mov	r0, r4
 800d02a:	f7ff ffd5 	bl	800cfd8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d02e:	462b      	mov	r3, r5
      }
 800d030:	4618      	mov	r0, r3
 800d032:	3708      	adds	r7, #8
 800d034:	46bd      	mov	sp, r7
 800d036:	bdb0      	pop	{r4, r5, r7, pc}

0800d038 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d038:	b5b0      	push	{r4, r5, r7, lr}
 800d03a:	b082      	sub	sp, #8
 800d03c:	af00      	add	r7, sp, #0
 800d03e:	6078      	str	r0, [r7, #4]
 800d040:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800d042:	6878      	ldr	r0, [r7, #4]
 800d044:	f000 f9cf 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d048:	4604      	mov	r4, r0
 800d04a:	6838      	ldr	r0, [r7, #0]
 800d04c:	f000 f9d6 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d050:	4603      	mov	r3, r0
 800d052:	4619      	mov	r1, r3
 800d054:	4620      	mov	r0, r4
 800d056:	f7ff ffd9 	bl	800d00c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d05a:	462b      	mov	r3, r5
      }
 800d05c:	4618      	mov	r0, r3
 800d05e:	3708      	adds	r7, #8
 800d060:	46bd      	mov	sp, r7
 800d062:	bdb0      	pop	{r4, r5, r7, pc}

0800d064 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800d064:	b580      	push	{r7, lr}
 800d066:	b082      	sub	sp, #8
 800d068:	af00      	add	r7, sp, #0
 800d06a:	7138      	strb	r0, [r7, #4]
 800d06c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800d06e:	6838      	ldr	r0, [r7, #0]
 800d070:	f000 fa9a 	bl	800d5a8 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800d074:	4603      	mov	r3, r0
 800d076:	4618      	mov	r0, r3
 800d078:	f000 faa1 	bl	800d5be <_ZNOSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 800d07c:	4603      	mov	r3, r0
 800d07e:	4618      	mov	r0, r3
 800d080:	3708      	adds	r7, #8
 800d082:	46bd      	mov	sp, r7
 800d084:	bd80      	pop	{r7, pc}

0800d086 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d086:	b590      	push	{r4, r7, lr}
 800d088:	b083      	sub	sp, #12
 800d08a:	af00      	add	r7, sp, #0
 800d08c:	7138      	strb	r0, [r7, #4]
 800d08e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d090:	6838      	ldr	r0, [r7, #0]
 800d092:	f000 fa56 	bl	800d542 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d096:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d098:	4619      	mov	r1, r3
 800d09a:	4620      	mov	r0, r4
 800d09c:	f7ff ffe2 	bl	800d064 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800d0a0:	4603      	mov	r3, r0
    }
 800d0a2:	4618      	mov	r0, r3
 800d0a4:	370c      	adds	r7, #12
 800d0a6:	46bd      	mov	sp, r7
 800d0a8:	bd90      	pop	{r4, r7, pc}

0800d0aa <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d0aa:	b590      	push	{r4, r7, lr}
 800d0ac:	b083      	sub	sp, #12
 800d0ae:	af00      	add	r7, sp, #0
 800d0b0:	7138      	strb	r0, [r7, #4]
 800d0b2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d0b4:	6838      	ldr	r0, [r7, #0]
 800d0b6:	f000 fa15 	bl	800d4e4 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d0ba:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d0bc:	4619      	mov	r1, r3
 800d0be:	4620      	mov	r0, r4
 800d0c0:	f7ff ffe1 	bl	800d086 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d0c4:	4603      	mov	r3, r0
    }
 800d0c6:	4618      	mov	r0, r3
 800d0c8:	370c      	adds	r7, #12
 800d0ca:	46bd      	mov	sp, r7
 800d0cc:	bd90      	pop	{r4, r7, pc}

0800d0ce <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d0ce:	b590      	push	{r4, r7, lr}
 800d0d0:	b083      	sub	sp, #12
 800d0d2:	af00      	add	r7, sp, #0
 800d0d4:	7138      	strb	r0, [r7, #4]
 800d0d6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d0d8:	6838      	ldr	r0, [r7, #0]
 800d0da:	f000 f9d4 	bl	800d486 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d0de:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d0e0:	4619      	mov	r1, r3
 800d0e2:	4620      	mov	r0, r4
 800d0e4:	f7ff ffe1 	bl	800d0aa <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d0e8:	4603      	mov	r3, r0
    }
 800d0ea:	4618      	mov	r0, r3
 800d0ec:	370c      	adds	r7, #12
 800d0ee:	46bd      	mov	sp, r7
 800d0f0:	bd90      	pop	{r4, r7, pc}

0800d0f2 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d0f2:	b590      	push	{r4, r7, lr}
 800d0f4:	b083      	sub	sp, #12
 800d0f6:	af00      	add	r7, sp, #0
 800d0f8:	7138      	strb	r0, [r7, #4]
 800d0fa:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d0fc:	6838      	ldr	r0, [r7, #0]
 800d0fe:	f000 f993 	bl	800d428 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d102:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d104:	4619      	mov	r1, r3
 800d106:	4620      	mov	r0, r4
 800d108:	f7ff ffe1 	bl	800d0ce <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d10c:	4603      	mov	r3, r0
    }
 800d10e:	4618      	mov	r0, r3
 800d110:	370c      	adds	r7, #12
 800d112:	46bd      	mov	sp, r7
 800d114:	bd90      	pop	{r4, r7, pc}

0800d116 <_ZNSt8__detail9__variant5__getILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800d116:	b590      	push	{r4, r7, lr}
 800d118:	b083      	sub	sp, #12
 800d11a:	af00      	add	r7, sp, #0
 800d11c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800d11e:	6878      	ldr	r0, [r7, #4]
 800d120:	f000 f977 	bl	800d412 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d124:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800d126:	4619      	mov	r1, r3
 800d128:	4620      	mov	r0, r4
 800d12a:	f7ff ffe2 	bl	800d0f2 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d12e:	4603      	mov	r3, r0
    }
 800d130:	4618      	mov	r0, r3
 800d132:	370c      	adds	r7, #12
 800d134:	46bd      	mov	sp, r7
 800d136:	bd90      	pop	{r4, r7, pc}

0800d138 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800d138:	b580      	push	{r7, lr}
 800d13a:	b082      	sub	sp, #8
 800d13c:	af00      	add	r7, sp, #0
 800d13e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800d140:	6878      	ldr	r0, [r7, #4]
 800d142:	f000 f966 	bl	800d412 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d146:	4603      	mov	r3, r0
 800d148:	4618      	mov	r0, r3
 800d14a:	f7ff ffe4 	bl	800d116 <_ZNSt8__detail9__variant5__getILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800d14e:	4603      	mov	r3, r0
	}
 800d150:	4618      	mov	r0, r3
 800d152:	3708      	adds	r7, #8
 800d154:	46bd      	mov	sp, r7
 800d156:	bd80      	pop	{r7, pc}

0800d158 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800d158:	b5b0      	push	{r4, r5, r7, lr}
 800d15a:	b082      	sub	sp, #8
 800d15c:	af00      	add	r7, sp, #0
 800d15e:	6078      	str	r0, [r7, #4]
 800d160:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800d162:	6878      	ldr	r0, [r7, #4]
 800d164:	f000 f93f 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d168:	4604      	mov	r4, r0
 800d16a:	6838      	ldr	r0, [r7, #0]
 800d16c:	f000 f946 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d170:	4603      	mov	r3, r0
 800d172:	4618      	mov	r0, r3
 800d174:	f7ff ffe0 	bl	800d138 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESR_EEDcSJ_>
 800d178:	4603      	mov	r3, r0
 800d17a:	4619      	mov	r1, r3
 800d17c:	4620      	mov	r0, r4
 800d17e:	f000 fa2f 	bl	800d5e0 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSC_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800d182:	462b      	mov	r3, r5
      }
 800d184:	4618      	mov	r0, r3
 800d186:	3708      	adds	r7, #8
 800d188:	46bd      	mov	sp, r7
 800d18a:	bdb0      	pop	{r4, r5, r7, pc}

0800d18c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d18c:	b5b0      	push	{r4, r5, r7, lr}
 800d18e:	b082      	sub	sp, #8
 800d190:	af00      	add	r7, sp, #0
 800d192:	6078      	str	r0, [r7, #4]
 800d194:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800d196:	6878      	ldr	r0, [r7, #4]
 800d198:	f000 f925 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d19c:	4604      	mov	r4, r0
 800d19e:	6838      	ldr	r0, [r7, #0]
 800d1a0:	f000 f92c 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d1a4:	4603      	mov	r3, r0
 800d1a6:	4619      	mov	r1, r3
 800d1a8:	4620      	mov	r0, r4
 800d1aa:	f7ff ffd5 	bl	800d158 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d1ae:	462b      	mov	r3, r5
      }
 800d1b0:	4618      	mov	r0, r3
 800d1b2:	3708      	adds	r7, #8
 800d1b4:	46bd      	mov	sp, r7
 800d1b6:	bdb0      	pop	{r4, r5, r7, pc}

0800d1b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d1b8:	b5b0      	push	{r4, r5, r7, lr}
 800d1ba:	b082      	sub	sp, #8
 800d1bc:	af00      	add	r7, sp, #0
 800d1be:	6078      	str	r0, [r7, #4]
 800d1c0:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800d1c2:	6878      	ldr	r0, [r7, #4]
 800d1c4:	f000 f90f 	bl	800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d1c8:	4604      	mov	r4, r0
 800d1ca:	6838      	ldr	r0, [r7, #0]
 800d1cc:	f000 f916 	bl	800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d1d0:	4603      	mov	r3, r0
 800d1d2:	4619      	mov	r1, r3
 800d1d4:	4620      	mov	r0, r4
 800d1d6:	f7ff ffd9 	bl	800d18c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d1da:	462b      	mov	r3, r5
      }
 800d1dc:	4618      	mov	r0, r3
 800d1de:	3708      	adds	r7, #8
 800d1e0:	46bd      	mov	sp, r7
 800d1e2:	bdb0      	pop	{r4, r5, r7, pc}

0800d1e4 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKST_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 800d1e4:	b580      	push	{r7, lr}
 800d1e6:	b082      	sub	sp, #8
 800d1e8:	af00      	add	r7, sp, #0
 800d1ea:	6078      	str	r0, [r7, #4]
 800d1ec:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800d1ee:	683b      	ldr	r3, [r7, #0]
 800d1f0:	009b      	lsls	r3, r3, #2
 800d1f2:	687a      	ldr	r2, [r7, #4]
 800d1f4:	4413      	add	r3, r2
 800d1f6:	4618      	mov	r0, r3
 800d1f8:	f000 fa09 	bl	800d60e <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 800d1fc:	4603      	mov	r3, r0
	}
 800d1fe:	4618      	mov	r0, r3
 800d200:	3708      	adds	r7, #8
 800d202:	46bd      	mov	sp, r7
 800d204:	bd80      	pop	{r7, pc}
	...

0800d208 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SC_EEEEDcSJ_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 800d208:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d20a:	b085      	sub	sp, #20
 800d20c:	af00      	add	r7, sp, #0
 800d20e:	6078      	str	r0, [r7, #4]
 800d210:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800d212:	4b0f      	ldr	r3, [pc, #60]	; (800d250 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SC_EEEEDcSJ_DpOT2_+0x48>)
 800d214:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800d216:	6838      	ldr	r0, [r7, #0]
 800d218:	f7f4 f978 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 800d21c:	4603      	mov	r3, r0
 800d21e:	4619      	mov	r1, r3
 800d220:	68f8      	ldr	r0, [r7, #12]
 800d222:	f7ff ffdf 	bl	800d1e4 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKST_jDpT_>
 800d226:	4603      	mov	r3, r0
 800d228:	681b      	ldr	r3, [r3, #0]
 800d22a:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 800d22c:	68bc      	ldr	r4, [r7, #8]
 800d22e:	6878      	ldr	r0, [r7, #4]
 800d230:	f000 f9f8 	bl	800d624 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d234:	4605      	mov	r5, r0
 800d236:	6838      	ldr	r0, [r7, #0]
 800d238:	f000 f8eb 	bl	800d412 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d23c:	4603      	mov	r3, r0
 800d23e:	4619      	mov	r1, r3
 800d240:	4628      	mov	r0, r5
 800d242:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 800d244:	4633      	mov	r3, r6
    }
 800d246:	4618      	mov	r0, r3
 800d248:	3714      	adds	r7, #20
 800d24a:	46bd      	mov	sp, r7
 800d24c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d24e:	bf00      	nop
 800d250:	08027e34 	.word	0x08027e34

0800d254 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 800d254:	b580      	push	{r7, lr}
 800d256:	b084      	sub	sp, #16
 800d258:	af00      	add	r7, sp, #0
 800d25a:	6078      	str	r0, [r7, #4]
 800d25c:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 800d25e:	683b      	ldr	r3, [r7, #0]
 800d260:	7e1a      	ldrb	r2, [r3, #24]
 800d262:	687b      	ldr	r3, [r7, #4]
 800d264:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d266:	687b      	ldr	r3, [r7, #4]
 800d268:	60fb      	str	r3, [r7, #12]
 800d26a:	6838      	ldr	r0, [r7, #0]
 800d26c:	f000 f8b0 	bl	800d3d0 <_ZSt7forwardINSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d270:	4603      	mov	r3, r0
 800d272:	4618      	mov	r0, r3
 800d274:	f7ff fc9f 	bl	800cbb6 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEENSt8__detail9__variant15_Move_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>
 800d278:	4602      	mov	r2, r0
 800d27a:	f107 030c 	add.w	r3, r7, #12
 800d27e:	4611      	mov	r1, r2
 800d280:	4618      	mov	r0, r3
 800d282:	f7ff ffc1 	bl	800d208 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SC_EEEEDcSJ_DpOT2_>
    }
 800d286:	bf00      	nop
 800d288:	3710      	adds	r7, #16
 800d28a:	46bd      	mov	sp, r7
 800d28c:	bd80      	pop	{r7, pc}
	...

0800d290 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d290:	b580      	push	{r7, lr}
 800d292:	b082      	sub	sp, #8
 800d294:	af00      	add	r7, sp, #0
 800d296:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d298:	6878      	ldr	r0, [r7, #4]
 800d29a:	f7fc fdce 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d29e:	4603      	mov	r3, r0
 800d2a0:	2b01      	cmp	r3, #1
 800d2a2:	bf14      	ite	ne
 800d2a4:	2301      	movne	r3, #1
 800d2a6:	2300      	moveq	r3, #0
 800d2a8:	b2db      	uxtb	r3, r3
 800d2aa:	2b00      	cmp	r3, #0
 800d2ac:	d002      	beq.n	800d2b4 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d2ae:	4805      	ldr	r0, [pc, #20]	; (800d2c4 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d2b0:	f7f3 fedf 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d2b4:	6878      	ldr	r0, [r7, #4]
 800d2b6:	f7fd fc7d 	bl	800abb4 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d2ba:	4603      	mov	r3, r0
    }
 800d2bc:	4618      	mov	r0, r3
 800d2be:	3708      	adds	r7, #8
 800d2c0:	46bd      	mov	sp, r7
 800d2c2:	bd80      	pop	{r7, pc}
 800d2c4:	0802731c 	.word	0x0802731c

0800d2c8 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d2c8:	b580      	push	{r7, lr}
 800d2ca:	b082      	sub	sp, #8
 800d2cc:	af00      	add	r7, sp, #0
 800d2ce:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d2d0:	6878      	ldr	r0, [r7, #4]
 800d2d2:	f7fc fdb2 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d2d6:	4603      	mov	r3, r0
 800d2d8:	2b02      	cmp	r3, #2
 800d2da:	bf14      	ite	ne
 800d2dc:	2301      	movne	r3, #1
 800d2de:	2300      	moveq	r3, #0
 800d2e0:	b2db      	uxtb	r3, r3
 800d2e2:	2b00      	cmp	r3, #0
 800d2e4:	d002      	beq.n	800d2ec <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d2e6:	4805      	ldr	r0, [pc, #20]	; (800d2fc <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d2e8:	f7f3 fec3 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d2ec:	6878      	ldr	r0, [r7, #4]
 800d2ee:	f7fd fcfd 	bl	800acec <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d2f2:	4603      	mov	r3, r0
    }
 800d2f4:	4618      	mov	r0, r3
 800d2f6:	3708      	adds	r7, #8
 800d2f8:	46bd      	mov	sp, r7
 800d2fa:	bd80      	pop	{r7, pc}
 800d2fc:	0802731c 	.word	0x0802731c

0800d300 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d300:	b580      	push	{r7, lr}
 800d302:	b082      	sub	sp, #8
 800d304:	af00      	add	r7, sp, #0
 800d306:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d308:	6878      	ldr	r0, [r7, #4]
 800d30a:	f7fc fd96 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d30e:	4603      	mov	r3, r0
 800d310:	2b03      	cmp	r3, #3
 800d312:	bf14      	ite	ne
 800d314:	2301      	movne	r3, #1
 800d316:	2300      	moveq	r3, #0
 800d318:	b2db      	uxtb	r3, r3
 800d31a:	2b00      	cmp	r3, #0
 800d31c:	d002      	beq.n	800d324 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d31e:	4805      	ldr	r0, [pc, #20]	; (800d334 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d320:	f7f3 fea7 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d324:	6878      	ldr	r0, [r7, #4]
 800d326:	f7fd fd8f 	bl	800ae48 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d32a:	4603      	mov	r3, r0
    }
 800d32c:	4618      	mov	r0, r3
 800d32e:	3708      	adds	r7, #8
 800d330:	46bd      	mov	sp, r7
 800d332:	bd80      	pop	{r7, pc}
 800d334:	0802731c 	.word	0x0802731c

0800d338 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d338:	b580      	push	{r7, lr}
 800d33a:	b082      	sub	sp, #8
 800d33c:	af00      	add	r7, sp, #0
 800d33e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d340:	6878      	ldr	r0, [r7, #4]
 800d342:	f7fc fd7a 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d346:	4603      	mov	r3, r0
 800d348:	2b00      	cmp	r3, #0
 800d34a:	bf14      	ite	ne
 800d34c:	2301      	movne	r3, #1
 800d34e:	2300      	moveq	r3, #0
 800d350:	b2db      	uxtb	r3, r3
 800d352:	2b00      	cmp	r3, #0
 800d354:	d002      	beq.n	800d35c <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d356:	4805      	ldr	r0, [pc, #20]	; (800d36c <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d358:	f7f3 fe8b 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d35c:	6878      	ldr	r0, [r7, #4]
 800d35e:	f7fd fb9f 	bl	800aaa0 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d362:	4603      	mov	r3, r0
    }
 800d364:	4618      	mov	r0, r3
 800d366:	3708      	adds	r7, #8
 800d368:	46bd      	mov	sp, r7
 800d36a:	bd80      	pop	{r7, pc}
 800d36c:	0802731c 	.word	0x0802731c

0800d370 <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 800d370:	b480      	push	{r7}
 800d372:	b083      	sub	sp, #12
 800d374:	af00      	add	r7, sp, #0
 800d376:	6078      	str	r0, [r7, #4]
 800d378:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 800d37a:	687b      	ldr	r3, [r7, #4]
 800d37c:	2200      	movs	r2, #0
 800d37e:	601a      	str	r2, [r3, #0]
	{ }
 800d380:	687b      	ldr	r3, [r7, #4]
 800d382:	4618      	mov	r0, r3
 800d384:	370c      	adds	r7, #12
 800d386:	46bd      	mov	sp, r7
 800d388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d38c:	4770      	bx	lr

0800d38e <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 800d38e:	b580      	push	{r7, lr}
 800d390:	b082      	sub	sp, #8
 800d392:	af00      	add	r7, sp, #0
 800d394:	6078      	str	r0, [r7, #4]
 800d396:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 800d398:	687b      	ldr	r3, [r7, #4]
 800d39a:	4611      	mov	r1, r2
 800d39c:	4618      	mov	r0, r3
 800d39e:	f7ff ffe7 	bl	800d370 <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800d3a2:	687b      	ldr	r3, [r7, #4]
 800d3a4:	4618      	mov	r0, r3
 800d3a6:	3708      	adds	r7, #8
 800d3a8:	46bd      	mov	sp, r7
 800d3aa:	bd80      	pop	{r7, pc}

0800d3ac <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 800d3ac:	b580      	push	{r7, lr}
 800d3ae:	b082      	sub	sp, #8
 800d3b0:	af00      	add	r7, sp, #0
 800d3b2:	6078      	str	r0, [r7, #4]
 800d3b4:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 800d3b6:	687b      	ldr	r3, [r7, #4]
 800d3b8:	4611      	mov	r1, r2
 800d3ba:	4618      	mov	r0, r3
 800d3bc:	f7ff ffe7 	bl	800d38e <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 800d3c0:	687b      	ldr	r3, [r7, #4]
 800d3c2:	2200      	movs	r2, #0
 800d3c4:	761a      	strb	r2, [r3, #24]
	{ }
 800d3c6:	687b      	ldr	r3, [r7, #4]
 800d3c8:	4618      	mov	r0, r3
 800d3ca:	3708      	adds	r7, #8
 800d3cc:	46bd      	mov	sp, r7
 800d3ce:	bd80      	pop	{r7, pc}

0800d3d0 <_ZSt7forwardINSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d3d0:	b480      	push	{r7}
 800d3d2:	b083      	sub	sp, #12
 800d3d4:	af00      	add	r7, sp, #0
 800d3d6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d3d8:	687b      	ldr	r3, [r7, #4]
 800d3da:	4618      	mov	r0, r3
 800d3dc:	370c      	adds	r7, #12
 800d3de:	46bd      	mov	sp, r7
 800d3e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3e4:	4770      	bx	lr

0800d3e6 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d3e6:	b480      	push	{r7}
 800d3e8:	b083      	sub	sp, #12
 800d3ea:	af00      	add	r7, sp, #0
 800d3ec:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d3ee:	687b      	ldr	r3, [r7, #4]
 800d3f0:	4618      	mov	r0, r3
 800d3f2:	370c      	adds	r7, #12
 800d3f4:	46bd      	mov	sp, r7
 800d3f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3fa:	4770      	bx	lr

0800d3fc <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d3fc:	b480      	push	{r7}
 800d3fe:	b083      	sub	sp, #12
 800d400:	af00      	add	r7, sp, #0
 800d402:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d404:	687b      	ldr	r3, [r7, #4]
 800d406:	4618      	mov	r0, r3
 800d408:	370c      	adds	r7, #12
 800d40a:	46bd      	mov	sp, r7
 800d40c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d410:	4770      	bx	lr

0800d412 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d412:	b480      	push	{r7}
 800d414:	b083      	sub	sp, #12
 800d416:	af00      	add	r7, sp, #0
 800d418:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d41a:	687b      	ldr	r3, [r7, #4]
 800d41c:	4618      	mov	r0, r3
 800d41e:	370c      	adds	r7, #12
 800d420:	46bd      	mov	sp, r7
 800d422:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d426:	4770      	bx	lr

0800d428 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d428:	b480      	push	{r7}
 800d42a:	b083      	sub	sp, #12
 800d42c:	af00      	add	r7, sp, #0
 800d42e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d430:	687b      	ldr	r3, [r7, #4]
 800d432:	4618      	mov	r0, r3
 800d434:	370c      	adds	r7, #12
 800d436:	46bd      	mov	sp, r7
 800d438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d43c:	4770      	bx	lr

0800d43e <_ZNOSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800d43e:	b580      	push	{r7, lr}
 800d440:	b082      	sub	sp, #8
 800d442:	af00      	add	r7, sp, #0
 800d444:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800d446:	687b      	ldr	r3, [r7, #4]
 800d448:	4618      	mov	r0, r3
 800d44a:	f7fa fdf7 	bl	800803c <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 800d44e:	4603      	mov	r3, r0
 800d450:	4618      	mov	r0, r3
 800d452:	3708      	adds	r7, #8
 800d454:	46bd      	mov	sp, r7
 800d456:	bd80      	pop	{r7, pc}

0800d458 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JiEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d458:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d45a:	b083      	sub	sp, #12
 800d45c:	af00      	add	r7, sp, #0
 800d45e:	6078      	str	r0, [r7, #4]
 800d460:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d462:	6878      	ldr	r0, [r7, #4]
 800d464:	f000 f8de 	bl	800d624 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d468:	4604      	mov	r4, r0
 800d46a:	6838      	ldr	r0, [r7, #0]
 800d46c:	f7fb f898 	bl	80085a0 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800d470:	4603      	mov	r3, r0
 800d472:	461a      	mov	r2, r3
 800d474:	4621      	mov	r1, r4
 800d476:	4628      	mov	r0, r5
 800d478:	f000 f8df 	bl	800d63a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JiEESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d47c:	4633      	mov	r3, r6
    }
 800d47e:	4618      	mov	r0, r3
 800d480:	370c      	adds	r7, #12
 800d482:	46bd      	mov	sp, r7
 800d484:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d486 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d486:	b480      	push	{r7}
 800d488:	b083      	sub	sp, #12
 800d48a:	af00      	add	r7, sp, #0
 800d48c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d48e:	687b      	ldr	r3, [r7, #4]
 800d490:	4618      	mov	r0, r3
 800d492:	370c      	adds	r7, #12
 800d494:	46bd      	mov	sp, r7
 800d496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d49a:	4770      	bx	lr

0800d49c <_ZNOSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800d49c:	b580      	push	{r7, lr}
 800d49e:	b082      	sub	sp, #8
 800d4a0:	af00      	add	r7, sp, #0
 800d4a2:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800d4a4:	687b      	ldr	r3, [r7, #4]
 800d4a6:	4618      	mov	r0, r3
 800d4a8:	f7fa fdec 	bl	8008084 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 800d4ac:	4603      	mov	r3, r0
 800d4ae:	4618      	mov	r0, r3
 800d4b0:	3708      	adds	r7, #8
 800d4b2:	46bd      	mov	sp, r7
 800d4b4:	bd80      	pop	{r7, pc}

0800d4b6 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JfEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d4b6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d4b8:	b083      	sub	sp, #12
 800d4ba:	af00      	add	r7, sp, #0
 800d4bc:	6078      	str	r0, [r7, #4]
 800d4be:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d4c0:	6878      	ldr	r0, [r7, #4]
 800d4c2:	f000 f8af 	bl	800d624 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d4c6:	4604      	mov	r4, r0
 800d4c8:	6838      	ldr	r0, [r7, #0]
 800d4ca:	f7fb f893 	bl	80085f4 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800d4ce:	4603      	mov	r3, r0
 800d4d0:	461a      	mov	r2, r3
 800d4d2:	4621      	mov	r1, r4
 800d4d4:	4628      	mov	r0, r5
 800d4d6:	f000 f8c7 	bl	800d668 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JfEESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d4da:	4633      	mov	r3, r6
    }
 800d4dc:	4618      	mov	r0, r3
 800d4de:	370c      	adds	r7, #12
 800d4e0:	46bd      	mov	sp, r7
 800d4e2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d4e4 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d4e4:	b480      	push	{r7}
 800d4e6:	b083      	sub	sp, #12
 800d4e8:	af00      	add	r7, sp, #0
 800d4ea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d4ec:	687b      	ldr	r3, [r7, #4]
 800d4ee:	4618      	mov	r0, r3
 800d4f0:	370c      	adds	r7, #12
 800d4f2:	46bd      	mov	sp, r7
 800d4f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4f8:	4770      	bx	lr

0800d4fa <_ZNOSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800d4fa:	b580      	push	{r7, lr}
 800d4fc:	b082      	sub	sp, #8
 800d4fe:	af00      	add	r7, sp, #0
 800d500:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800d502:	687b      	ldr	r3, [r7, #4]
 800d504:	4618      	mov	r0, r3
 800d506:	f7fa fde1 	bl	80080cc <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 800d50a:	4603      	mov	r3, r0
 800d50c:	4618      	mov	r0, r3
 800d50e:	3708      	adds	r7, #8
 800d510:	46bd      	mov	sp, r7
 800d512:	bd80      	pop	{r7, pc}

0800d514 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JbEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d514:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d516:	b083      	sub	sp, #12
 800d518:	af00      	add	r7, sp, #0
 800d51a:	6078      	str	r0, [r7, #4]
 800d51c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d51e:	6878      	ldr	r0, [r7, #4]
 800d520:	f000 f880 	bl	800d624 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d524:	4604      	mov	r4, r0
 800d526:	6838      	ldr	r0, [r7, #0]
 800d528:	f7fb f8aa 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800d52c:	4603      	mov	r3, r0
 800d52e:	461a      	mov	r2, r3
 800d530:	4621      	mov	r1, r4
 800d532:	4628      	mov	r0, r5
 800d534:	f000 f8af 	bl	800d696 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JbEESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d538:	4633      	mov	r3, r6
    }
 800d53a:	4618      	mov	r0, r3
 800d53c:	370c      	adds	r7, #12
 800d53e:	46bd      	mov	sp, r7
 800d540:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d542 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d542:	b480      	push	{r7}
 800d544:	b083      	sub	sp, #12
 800d546:	af00      	add	r7, sp, #0
 800d548:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d54a:	687b      	ldr	r3, [r7, #4]
 800d54c:	4618      	mov	r0, r3
 800d54e:	370c      	adds	r7, #12
 800d550:	46bd      	mov	sp, r7
 800d552:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d556:	4770      	bx	lr

0800d558 <_ZNOSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 800d558:	b580      	push	{r7, lr}
 800d55a:	b082      	sub	sp, #8
 800d55c:	af00      	add	r7, sp, #0
 800d55e:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 800d560:	687b      	ldr	r3, [r7, #4]
 800d562:	4618      	mov	r0, r3
 800d564:	f7f8 fadf 	bl	8005b26 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 800d568:	4603      	mov	r3, r0
 800d56a:	4618      	mov	r0, r3
 800d56c:	f7fa fdd2 	bl	8008114 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800d570:	4603      	mov	r3, r0
 800d572:	4618      	mov	r0, r3
 800d574:	3708      	adds	r7, #8
 800d576:	46bd      	mov	sp, r7
 800d578:	bd80      	pop	{r7, pc}

0800d57a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JS8_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d57a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d57c:	b083      	sub	sp, #12
 800d57e:	af00      	add	r7, sp, #0
 800d580:	6078      	str	r0, [r7, #4]
 800d582:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d584:	6878      	ldr	r0, [r7, #4]
 800d586:	f000 f84d 	bl	800d624 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d58a:	4604      	mov	r4, r0
 800d58c:	6838      	ldr	r0, [r7, #0]
 800d58e:	f7fb f8a2 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800d592:	4603      	mov	r3, r0
 800d594:	461a      	mov	r2, r3
 800d596:	4621      	mov	r1, r4
 800d598:	4628      	mov	r0, r5
 800d59a:	f000 f893 	bl	800d6c4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JS9_EESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d59e:	4633      	mov	r3, r6
    }
 800d5a0:	4618      	mov	r0, r3
 800d5a2:	370c      	adds	r7, #12
 800d5a4:	46bd      	mov	sp, r7
 800d5a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d5a8 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d5a8:	b480      	push	{r7}
 800d5aa:	b083      	sub	sp, #12
 800d5ac:	af00      	add	r7, sp, #0
 800d5ae:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d5b0:	687b      	ldr	r3, [r7, #4]
 800d5b2:	4618      	mov	r0, r3
 800d5b4:	370c      	adds	r7, #12
 800d5b6:	46bd      	mov	sp, r7
 800d5b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5bc:	4770      	bx	lr

0800d5be <_ZNOSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 800d5be:	b580      	push	{r7, lr}
 800d5c0:	b082      	sub	sp, #8
 800d5c2:	af00      	add	r7, sp, #0
 800d5c4:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 800d5c6:	687b      	ldr	r3, [r7, #4]
 800d5c8:	4618      	mov	r0, r3
 800d5ca:	f7f8 fada 	bl	8005b82 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 800d5ce:	4603      	mov	r3, r0
 800d5d0:	4618      	mov	r0, r3
 800d5d2:	f7fa fdc3 	bl	800815c <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 800d5d6:	4603      	mov	r3, r0
 800d5d8:	4618      	mov	r0, r3
 800d5da:	3708      	adds	r7, #8
 800d5dc:	46bd      	mov	sp, r7
 800d5de:	bd80      	pop	{r7, pc}

0800d5e0 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSC_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d5e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d5e2:	b083      	sub	sp, #12
 800d5e4:	af00      	add	r7, sp, #0
 800d5e6:	6078      	str	r0, [r7, #4]
 800d5e8:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d5ea:	6878      	ldr	r0, [r7, #4]
 800d5ec:	f000 f81a 	bl	800d624 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d5f0:	4604      	mov	r4, r0
 800d5f2:	6838      	ldr	r0, [r7, #0]
 800d5f4:	f7fb f8f6 	bl	80087e4 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800d5f8:	4603      	mov	r3, r0
 800d5fa:	461a      	mov	r2, r3
 800d5fc:	4621      	mov	r1, r4
 800d5fe:	4628      	mov	r0, r5
 800d600:	f000 f877 	bl	800d6f2 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JSD_EESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d604:	4633      	mov	r3, r6
    }
 800d606:	4618      	mov	r0, r3
 800d608:	370c      	adds	r7, #12
 800d60a:	46bd      	mov	sp, r7
 800d60c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d60e <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 800d60e:	b480      	push	{r7}
 800d610:	b083      	sub	sp, #12
 800d612:	af00      	add	r7, sp, #0
 800d614:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 800d616:	687b      	ldr	r3, [r7, #4]
 800d618:	4618      	mov	r0, r3
 800d61a:	370c      	adds	r7, #12
 800d61c:	46bd      	mov	sp, r7
 800d61e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d622:	4770      	bx	lr

0800d624 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d624:	b480      	push	{r7}
 800d626:	b083      	sub	sp, #12
 800d628:	af00      	add	r7, sp, #0
 800d62a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d62c:	687b      	ldr	r3, [r7, #4]
 800d62e:	4618      	mov	r0, r3
 800d630:	370c      	adds	r7, #12
 800d632:	46bd      	mov	sp, r7
 800d634:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d638:	4770      	bx	lr

0800d63a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JiEESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d63a:	b5b0      	push	{r4, r5, r7, lr}
 800d63c:	b084      	sub	sp, #16
 800d63e:	af00      	add	r7, sp, #0
 800d640:	7338      	strb	r0, [r7, #12]
 800d642:	60b9      	str	r1, [r7, #8]
 800d644:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d646:	68b8      	ldr	r0, [r7, #8]
 800d648:	f7ff ffec 	bl	800d624 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d64c:	4604      	mov	r4, r0
 800d64e:	6878      	ldr	r0, [r7, #4]
 800d650:	f7fa ffa6 	bl	80085a0 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800d654:	4603      	mov	r3, r0
 800d656:	4619      	mov	r1, r3
 800d658:	4620      	mov	r0, r4
 800d65a:	f000 f861 	bl	800d720 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIiEENS0_16__variant_cookieESK_>
 800d65e:	462b      	mov	r3, r5
 800d660:	4618      	mov	r0, r3
 800d662:	3710      	adds	r7, #16
 800d664:	46bd      	mov	sp, r7
 800d666:	bdb0      	pop	{r4, r5, r7, pc}

0800d668 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JfEESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d668:	b5b0      	push	{r4, r5, r7, lr}
 800d66a:	b084      	sub	sp, #16
 800d66c:	af00      	add	r7, sp, #0
 800d66e:	7338      	strb	r0, [r7, #12]
 800d670:	60b9      	str	r1, [r7, #8]
 800d672:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d674:	68b8      	ldr	r0, [r7, #8]
 800d676:	f7ff ffd5 	bl	800d624 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d67a:	4604      	mov	r4, r0
 800d67c:	6878      	ldr	r0, [r7, #4]
 800d67e:	f7fa ffb9 	bl	80085f4 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800d682:	4603      	mov	r3, r0
 800d684:	4619      	mov	r1, r3
 800d686:	4620      	mov	r0, r4
 800d688:	f000 f862 	bl	800d750 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIfEENS0_16__variant_cookieESK_>
 800d68c:	462b      	mov	r3, r5
 800d68e:	4618      	mov	r0, r3
 800d690:	3710      	adds	r7, #16
 800d692:	46bd      	mov	sp, r7
 800d694:	bdb0      	pop	{r4, r5, r7, pc}

0800d696 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JbEESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d696:	b5b0      	push	{r4, r5, r7, lr}
 800d698:	b084      	sub	sp, #16
 800d69a:	af00      	add	r7, sp, #0
 800d69c:	7338      	strb	r0, [r7, #12]
 800d69e:	60b9      	str	r1, [r7, #8]
 800d6a0:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d6a2:	68b8      	ldr	r0, [r7, #8]
 800d6a4:	f7ff ffbe 	bl	800d624 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d6a8:	4604      	mov	r4, r0
 800d6aa:	6878      	ldr	r0, [r7, #4]
 800d6ac:	f7fa ffe8 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800d6b0:	4603      	mov	r3, r0
 800d6b2:	4619      	mov	r1, r3
 800d6b4:	4620      	mov	r0, r4
 800d6b6:	f000 f863 	bl	800d780 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIbEENS0_16__variant_cookieESK_>
 800d6ba:	462b      	mov	r3, r5
 800d6bc:	4618      	mov	r0, r3
 800d6be:	3710      	adds	r7, #16
 800d6c0:	46bd      	mov	sp, r7
 800d6c2:	bdb0      	pop	{r4, r5, r7, pc}

0800d6c4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JS9_EESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d6c4:	b5b0      	push	{r4, r5, r7, lr}
 800d6c6:	b084      	sub	sp, #16
 800d6c8:	af00      	add	r7, sp, #0
 800d6ca:	7338      	strb	r0, [r7, #12]
 800d6cc:	60b9      	str	r1, [r7, #8]
 800d6ce:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d6d0:	68b8      	ldr	r0, [r7, #8]
 800d6d2:	f7ff ffa7 	bl	800d624 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d6d6:	4604      	mov	r4, r0
 800d6d8:	6878      	ldr	r0, [r7, #4]
 800d6da:	f7fa fffc 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800d6de:	4603      	mov	r3, r0
 800d6e0:	4619      	mov	r1, r3
 800d6e2:	4620      	mov	r0, r4
 800d6e4:	f000 f864 	bl	800d7b0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIS7_EENS0_16__variant_cookieESK_>
 800d6e8:	462b      	mov	r3, r5
 800d6ea:	4618      	mov	r0, r3
 800d6ec:	3710      	adds	r7, #16
 800d6ee:	46bd      	mov	sp, r7
 800d6f0:	bdb0      	pop	{r4, r5, r7, pc}

0800d6f2 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JSD_EESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d6f2:	b5b0      	push	{r4, r5, r7, lr}
 800d6f4:	b084      	sub	sp, #16
 800d6f6:	af00      	add	r7, sp, #0
 800d6f8:	7338      	strb	r0, [r7, #12]
 800d6fa:	60b9      	str	r1, [r7, #8]
 800d6fc:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d6fe:	68b8      	ldr	r0, [r7, #8]
 800d700:	f7ff ff90 	bl	800d624 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d704:	4604      	mov	r4, r0
 800d706:	6878      	ldr	r0, [r7, #4]
 800d708:	f7fb f86c 	bl	80087e4 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800d70c:	4603      	mov	r3, r0
 800d70e:	4619      	mov	r1, r3
 800d710:	4620      	mov	r0, r4
 800d712:	f000 f865 	bl	800d7e0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clISB_EENS0_16__variant_cookieESK_>
 800d716:	462b      	mov	r3, r5
 800d718:	4618      	mov	r0, r3
 800d71a:	3710      	adds	r7, #16
 800d71c:	46bd      	mov	sp, r7
 800d71e:	bdb0      	pop	{r4, r5, r7, pc}

0800d720 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIiEENS0_16__variant_cookieESK_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d720:	b5b0      	push	{r4, r5, r7, lr}
 800d722:	b082      	sub	sp, #8
 800d724:	af00      	add	r7, sp, #0
 800d726:	6078      	str	r0, [r7, #4]
 800d728:	6039      	str	r1, [r7, #0]
 800d72a:	687b      	ldr	r3, [r7, #4]
 800d72c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d72e:	4618      	mov	r0, r3
 800d730:	f000 f86e 	bl	800d810 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d734:	4604      	mov	r4, r0
 800d736:	6838      	ldr	r0, [r7, #0]
 800d738:	f000 f875 	bl	800d826 <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>
 800d73c:	4603      	mov	r3, r0
 800d73e:	4619      	mov	r1, r3
 800d740:	4620      	mov	r0, r4
 800d742:	f000 f87b 	bl	800d83c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEiEEvOT_OT0_>
	  return {};
 800d746:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d748:	4618      	mov	r0, r3
 800d74a:	3708      	adds	r7, #8
 800d74c:	46bd      	mov	sp, r7
 800d74e:	bdb0      	pop	{r4, r5, r7, pc}

0800d750 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIfEENS0_16__variant_cookieESK_>:
 800d750:	b5b0      	push	{r4, r5, r7, lr}
 800d752:	b082      	sub	sp, #8
 800d754:	af00      	add	r7, sp, #0
 800d756:	6078      	str	r0, [r7, #4]
 800d758:	6039      	str	r1, [r7, #0]
 800d75a:	687b      	ldr	r3, [r7, #4]
 800d75c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d75e:	4618      	mov	r0, r3
 800d760:	f000 f856 	bl	800d810 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d764:	4604      	mov	r4, r0
 800d766:	6838      	ldr	r0, [r7, #0]
 800d768:	f000 f882 	bl	800d870 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>
 800d76c:	4603      	mov	r3, r0
 800d76e:	4619      	mov	r1, r3
 800d770:	4620      	mov	r0, r4
 800d772:	f000 f888 	bl	800d886 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEfEEvOT_OT0_>
	  return {};
 800d776:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d778:	4618      	mov	r0, r3
 800d77a:	3708      	adds	r7, #8
 800d77c:	46bd      	mov	sp, r7
 800d77e:	bdb0      	pop	{r4, r5, r7, pc}

0800d780 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIbEENS0_16__variant_cookieESK_>:
 800d780:	b5b0      	push	{r4, r5, r7, lr}
 800d782:	b082      	sub	sp, #8
 800d784:	af00      	add	r7, sp, #0
 800d786:	6078      	str	r0, [r7, #4]
 800d788:	6039      	str	r1, [r7, #0]
 800d78a:	687b      	ldr	r3, [r7, #4]
 800d78c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d78e:	4618      	mov	r0, r3
 800d790:	f000 f83e 	bl	800d810 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d794:	4604      	mov	r4, r0
 800d796:	6838      	ldr	r0, [r7, #0]
 800d798:	f000 f88f 	bl	800d8ba <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>
 800d79c:	4603      	mov	r3, r0
 800d79e:	4619      	mov	r1, r3
 800d7a0:	4620      	mov	r0, r4
 800d7a2:	f000 f895 	bl	800d8d0 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEbEEvOT_OT0_>
	  return {};
 800d7a6:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d7a8:	4618      	mov	r0, r3
 800d7aa:	3708      	adds	r7, #8
 800d7ac:	46bd      	mov	sp, r7
 800d7ae:	bdb0      	pop	{r4, r5, r7, pc}

0800d7b0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIS7_EENS0_16__variant_cookieESK_>:
 800d7b0:	b5b0      	push	{r4, r5, r7, lr}
 800d7b2:	b082      	sub	sp, #8
 800d7b4:	af00      	add	r7, sp, #0
 800d7b6:	6078      	str	r0, [r7, #4]
 800d7b8:	6039      	str	r1, [r7, #0]
 800d7ba:	687b      	ldr	r3, [r7, #4]
 800d7bc:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d7be:	4618      	mov	r0, r3
 800d7c0:	f000 f826 	bl	800d810 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d7c4:	4604      	mov	r4, r0
 800d7c6:	6838      	ldr	r0, [r7, #0]
 800d7c8:	f000 f89d 	bl	800d906 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800d7cc:	4603      	mov	r3, r0
 800d7ce:	4619      	mov	r1, r3
 800d7d0:	4620      	mov	r0, r4
 800d7d2:	f000 f8a3 	bl	800d91c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEES8_EEvOT_OT0_>
	  return {};
 800d7d6:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d7d8:	4618      	mov	r0, r3
 800d7da:	3708      	adds	r7, #8
 800d7dc:	46bd      	mov	sp, r7
 800d7de:	bdb0      	pop	{r4, r5, r7, pc}

0800d7e0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clISB_EENS0_16__variant_cookieESK_>:
 800d7e0:	b5b0      	push	{r4, r5, r7, lr}
 800d7e2:	b082      	sub	sp, #8
 800d7e4:	af00      	add	r7, sp, #0
 800d7e6:	6078      	str	r0, [r7, #4]
 800d7e8:	6039      	str	r1, [r7, #0]
 800d7ea:	687b      	ldr	r3, [r7, #4]
 800d7ec:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d7ee:	4618      	mov	r0, r3
 800d7f0:	f000 f80e 	bl	800d810 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d7f4:	4604      	mov	r4, r0
 800d7f6:	6838      	ldr	r0, [r7, #0]
 800d7f8:	f000 f8ac 	bl	800d954 <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800d7fc:	4603      	mov	r3, r0
 800d7fe:	4619      	mov	r1, r3
 800d800:	4620      	mov	r0, r4
 800d802:	f000 f8b2 	bl	800d96a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEESC_EEvOT_OT0_>
	  return {};
 800d806:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d808:	4618      	mov	r0, r3
 800d80a:	3708      	adds	r7, #8
 800d80c:	46bd      	mov	sp, r7
 800d80e:	bdb0      	pop	{r4, r5, r7, pc}

0800d810 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d810:	b480      	push	{r7}
 800d812:	b083      	sub	sp, #12
 800d814:	af00      	add	r7, sp, #0
 800d816:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d818:	687b      	ldr	r3, [r7, #4]
 800d81a:	4618      	mov	r0, r3
 800d81c:	370c      	adds	r7, #12
 800d81e:	46bd      	mov	sp, r7
 800d820:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d824:	4770      	bx	lr

0800d826 <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d826:	b480      	push	{r7}
 800d828:	b083      	sub	sp, #12
 800d82a:	af00      	add	r7, sp, #0
 800d82c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d82e:	687b      	ldr	r3, [r7, #4]
 800d830:	4618      	mov	r0, r3
 800d832:	370c      	adds	r7, #12
 800d834:	46bd      	mov	sp, r7
 800d836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d83a:	4770      	bx	lr

0800d83c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800d83c:	b590      	push	{r4, r7, lr}
 800d83e:	b085      	sub	sp, #20
 800d840:	af00      	add	r7, sp, #0
 800d842:	6078      	str	r0, [r7, #4]
 800d844:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800d846:	687b      	ldr	r3, [r7, #4]
 800d848:	4618      	mov	r0, r3
 800d84a:	f7f8 ffdb 	bl	8006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800d84e:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800d850:	6838      	ldr	r0, [r7, #0]
 800d852:	f7ff ffe8 	bl	800d826 <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>
 800d856:	4603      	mov	r3, r0
        ::new (__storage)
 800d858:	681c      	ldr	r4, [r3, #0]
 800d85a:	68fb      	ldr	r3, [r7, #12]
 800d85c:	4619      	mov	r1, r3
 800d85e:	2004      	movs	r0, #4
 800d860:	f7f3 fbfb 	bl	800105a <_ZnwjPv>
 800d864:	4603      	mov	r3, r0
 800d866:	601c      	str	r4, [r3, #0]
    }
 800d868:	bf00      	nop
 800d86a:	3714      	adds	r7, #20
 800d86c:	46bd      	mov	sp, r7
 800d86e:	bd90      	pop	{r4, r7, pc}

0800d870 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d870:	b480      	push	{r7}
 800d872:	b083      	sub	sp, #12
 800d874:	af00      	add	r7, sp, #0
 800d876:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d878:	687b      	ldr	r3, [r7, #4]
 800d87a:	4618      	mov	r0, r3
 800d87c:	370c      	adds	r7, #12
 800d87e:	46bd      	mov	sp, r7
 800d880:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d884:	4770      	bx	lr

0800d886 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800d886:	b590      	push	{r4, r7, lr}
 800d888:	b085      	sub	sp, #20
 800d88a:	af00      	add	r7, sp, #0
 800d88c:	6078      	str	r0, [r7, #4]
 800d88e:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800d890:	687b      	ldr	r3, [r7, #4]
 800d892:	4618      	mov	r0, r3
 800d894:	f7f8 ffb6 	bl	8006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800d898:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800d89a:	6838      	ldr	r0, [r7, #0]
 800d89c:	f7ff ffe8 	bl	800d870 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>
 800d8a0:	4603      	mov	r3, r0
        ::new (__storage)
 800d8a2:	681c      	ldr	r4, [r3, #0]
 800d8a4:	68fb      	ldr	r3, [r7, #12]
 800d8a6:	4619      	mov	r1, r3
 800d8a8:	2004      	movs	r0, #4
 800d8aa:	f7f3 fbd6 	bl	800105a <_ZnwjPv>
 800d8ae:	4603      	mov	r3, r0
 800d8b0:	601c      	str	r4, [r3, #0]
    }
 800d8b2:	bf00      	nop
 800d8b4:	3714      	adds	r7, #20
 800d8b6:	46bd      	mov	sp, r7
 800d8b8:	bd90      	pop	{r4, r7, pc}

0800d8ba <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d8ba:	b480      	push	{r7}
 800d8bc:	b083      	sub	sp, #12
 800d8be:	af00      	add	r7, sp, #0
 800d8c0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d8c2:	687b      	ldr	r3, [r7, #4]
 800d8c4:	4618      	mov	r0, r3
 800d8c6:	370c      	adds	r7, #12
 800d8c8:	46bd      	mov	sp, r7
 800d8ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8ce:	4770      	bx	lr

0800d8d0 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800d8d0:	b590      	push	{r4, r7, lr}
 800d8d2:	b085      	sub	sp, #20
 800d8d4:	af00      	add	r7, sp, #0
 800d8d6:	6078      	str	r0, [r7, #4]
 800d8d8:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800d8da:	687b      	ldr	r3, [r7, #4]
 800d8dc:	4618      	mov	r0, r3
 800d8de:	f7f8 ff91 	bl	8006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800d8e2:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800d8e4:	6838      	ldr	r0, [r7, #0]
 800d8e6:	f7ff ffe8 	bl	800d8ba <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>
 800d8ea:	4603      	mov	r3, r0
        ::new (__storage)
 800d8ec:	781c      	ldrb	r4, [r3, #0]
 800d8ee:	68fb      	ldr	r3, [r7, #12]
 800d8f0:	4619      	mov	r1, r3
 800d8f2:	2001      	movs	r0, #1
 800d8f4:	f7f3 fbb1 	bl	800105a <_ZnwjPv>
 800d8f8:	4603      	mov	r3, r0
 800d8fa:	4622      	mov	r2, r4
 800d8fc:	701a      	strb	r2, [r3, #0]
    }
 800d8fe:	bf00      	nop
 800d900:	3714      	adds	r7, #20
 800d902:	46bd      	mov	sp, r7
 800d904:	bd90      	pop	{r4, r7, pc}

0800d906 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d906:	b480      	push	{r7}
 800d908:	b083      	sub	sp, #12
 800d90a:	af00      	add	r7, sp, #0
 800d90c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d90e:	687b      	ldr	r3, [r7, #4]
 800d910:	4618      	mov	r0, r3
 800d912:	370c      	adds	r7, #12
 800d914:	46bd      	mov	sp, r7
 800d916:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d91a:	4770      	bx	lr

0800d91c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEES8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800d91c:	b590      	push	{r4, r7, lr}
 800d91e:	b085      	sub	sp, #20
 800d920:	af00      	add	r7, sp, #0
 800d922:	6078      	str	r0, [r7, #4]
 800d924:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800d926:	687b      	ldr	r3, [r7, #4]
 800d928:	4618      	mov	r0, r3
 800d92a:	f7f8 ff6b 	bl	8006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800d92e:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800d930:	6838      	ldr	r0, [r7, #0]
 800d932:	f7ff ffe8 	bl	800d906 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800d936:	4604      	mov	r4, r0
        ::new (__storage)
 800d938:	68fb      	ldr	r3, [r7, #12]
 800d93a:	4619      	mov	r1, r3
 800d93c:	2018      	movs	r0, #24
 800d93e:	f7f3 fb8c 	bl	800105a <_ZnwjPv>
 800d942:	4603      	mov	r3, r0
 800d944:	4621      	mov	r1, r4
 800d946:	4618      	mov	r0, r3
 800d948:	f015 f831 	bl	80229ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 800d94c:	bf00      	nop
 800d94e:	3714      	adds	r7, #20
 800d950:	46bd      	mov	sp, r7
 800d952:	bd90      	pop	{r4, r7, pc}

0800d954 <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d954:	b480      	push	{r7}
 800d956:	b083      	sub	sp, #12
 800d958:	af00      	add	r7, sp, #0
 800d95a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d95c:	687b      	ldr	r3, [r7, #4]
 800d95e:	4618      	mov	r0, r3
 800d960:	370c      	adds	r7, #12
 800d962:	46bd      	mov	sp, r7
 800d964:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d968:	4770      	bx	lr

0800d96a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEESC_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800d96a:	b590      	push	{r4, r7, lr}
 800d96c:	b085      	sub	sp, #20
 800d96e:	af00      	add	r7, sp, #0
 800d970:	6078      	str	r0, [r7, #4]
 800d972:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800d974:	687b      	ldr	r3, [r7, #4]
 800d976:	4618      	mov	r0, r3
 800d978:	f7f8 ff44 	bl	8006804 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800d97c:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800d97e:	6838      	ldr	r0, [r7, #0]
 800d980:	f7ff ffe8 	bl	800d954 <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800d984:	4604      	mov	r4, r0
        ::new (__storage)
 800d986:	68fb      	ldr	r3, [r7, #12]
 800d988:	4619      	mov	r1, r3
 800d98a:	200c      	movs	r0, #12
 800d98c:	f7f3 fb65 	bl	800105a <_ZnwjPv>
 800d990:	4603      	mov	r3, r0
 800d992:	4621      	mov	r1, r4
 800d994:	4618      	mov	r0, r3
 800d996:	f7fa ff40 	bl	800881a <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>
    }
 800d99a:	bf00      	nop
 800d99c:	3714      	adds	r7, #20
 800d99e:	46bd      	mov	sp, r7
 800d9a0:	bd90      	pop	{r4, r7, pc}
	...

0800d9a4 <_Z41__static_initialization_and_destruction_0ii>:
 800d9a4:	b590      	push	{r4, r7, lr}
 800d9a6:	b0e7      	sub	sp, #412	; 0x19c
 800d9a8:	af02      	add	r7, sp, #8
 800d9aa:	1d3b      	adds	r3, r7, #4
 800d9ac:	6018      	str	r0, [r3, #0]
 800d9ae:	463b      	mov	r3, r7
 800d9b0:	6019      	str	r1, [r3, #0]
 800d9b2:	1d3b      	adds	r3, r7, #4
 800d9b4:	681b      	ldr	r3, [r3, #0]
 800d9b6:	2b01      	cmp	r3, #1
 800d9b8:	f040 819d 	bne.w	800dcf6 <_Z41__static_initialization_and_destruction_0ii+0x352>
 800d9bc:	463b      	mov	r3, r7
 800d9be:	681b      	ldr	r3, [r3, #0]
 800d9c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d9c4:	4293      	cmp	r3, r2
 800d9c6:	f040 8196 	bne.w	800dcf6 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800d9ca:	f107 0314 	add.w	r3, r7, #20
 800d9ce:	4618      	mov	r0, r3
 800d9d0:	2322      	movs	r3, #34	; 0x22
 800d9d2:	461a      	mov	r2, r3
 800d9d4:	2100      	movs	r1, #0
 800d9d6:	f016 fa45 	bl	8023e64 <memset>
 800d9da:	f107 0314 	add.w	r3, r7, #20
 800d9de:	223a      	movs	r2, #58	; 0x3a
 800d9e0:	701a      	strb	r2, [r3, #0]
 800d9e2:	f107 0314 	add.w	r3, r7, #20
 800d9e6:	2201      	movs	r2, #1
 800d9e8:	705a      	strb	r2, [r3, #1]
 800d9ea:	f107 0314 	add.w	r3, r7, #20
 800d9ee:	220a      	movs	r2, #10
 800d9f0:	709a      	strb	r2, [r3, #2]
 800d9f2:	f107 0314 	add.w	r3, r7, #20
 800d9f6:	220a      	movs	r2, #10
 800d9f8:	70da      	strb	r2, [r3, #3]
 800d9fa:	f107 0314 	add.w	r3, r7, #20
 800d9fe:	222c      	movs	r2, #44	; 0x2c
 800da00:	711a      	strb	r2, [r3, #4]
 800da02:	f107 0314 	add.w	r3, r7, #20
 800da06:	220c      	movs	r2, #12
 800da08:	715a      	strb	r2, [r3, #5]
 800da0a:	f107 0314 	add.w	r3, r7, #20
 800da0e:	222e      	movs	r2, #46	; 0x2e
 800da10:	719a      	strb	r2, [r3, #6]
 800da12:	f107 0314 	add.w	r3, r7, #20
 800da16:	220b      	movs	r2, #11
 800da18:	71da      	strb	r2, [r3, #7]
 800da1a:	f107 0314 	add.w	r3, r7, #20
 800da1e:	225b      	movs	r2, #91	; 0x5b
 800da20:	721a      	strb	r2, [r3, #8]
 800da22:	f107 0314 	add.w	r3, r7, #20
 800da26:	220d      	movs	r2, #13
 800da28:	725a      	strb	r2, [r3, #9]
 800da2a:	f107 0314 	add.w	r3, r7, #20
 800da2e:	225d      	movs	r2, #93	; 0x5d
 800da30:	729a      	strb	r2, [r3, #10]
 800da32:	f107 0314 	add.w	r3, r7, #20
 800da36:	220e      	movs	r2, #14
 800da38:	72da      	strb	r2, [r3, #11]
 800da3a:	f107 0314 	add.w	r3, r7, #20
 800da3e:	227c      	movs	r2, #124	; 0x7c
 800da40:	731a      	strb	r2, [r3, #12]
 800da42:	f107 0314 	add.w	r3, r7, #20
 800da46:	2215      	movs	r2, #21
 800da48:	735a      	strb	r2, [r3, #13]
 800da4a:	f107 0314 	add.w	r3, r7, #20
 800da4e:	2226      	movs	r2, #38	; 0x26
 800da50:	739a      	strb	r2, [r3, #14]
 800da52:	f107 0314 	add.w	r3, r7, #20
 800da56:	2216      	movs	r2, #22
 800da58:	73da      	strb	r2, [r3, #15]
 800da5a:	f107 0314 	add.w	r3, r7, #20
 800da5e:	222b      	movs	r2, #43	; 0x2b
 800da60:	741a      	strb	r2, [r3, #16]
 800da62:	f107 0314 	add.w	r3, r7, #20
 800da66:	221f      	movs	r2, #31
 800da68:	745a      	strb	r2, [r3, #17]
 800da6a:	f107 0314 	add.w	r3, r7, #20
 800da6e:	222d      	movs	r2, #45	; 0x2d
 800da70:	749a      	strb	r2, [r3, #18]
 800da72:	f107 0314 	add.w	r3, r7, #20
 800da76:	2220      	movs	r2, #32
 800da78:	74da      	strb	r2, [r3, #19]
 800da7a:	f107 0314 	add.w	r3, r7, #20
 800da7e:	222a      	movs	r2, #42	; 0x2a
 800da80:	751a      	strb	r2, [r3, #20]
 800da82:	f107 0314 	add.w	r3, r7, #20
 800da86:	2221      	movs	r2, #33	; 0x21
 800da88:	755a      	strb	r2, [r3, #21]
 800da8a:	f107 0314 	add.w	r3, r7, #20
 800da8e:	222f      	movs	r2, #47	; 0x2f
 800da90:	759a      	strb	r2, [r3, #22]
 800da92:	f107 0314 	add.w	r3, r7, #20
 800da96:	2222      	movs	r2, #34	; 0x22
 800da98:	75da      	strb	r2, [r3, #23]
 800da9a:	f107 0314 	add.w	r3, r7, #20
 800da9e:	225e      	movs	r2, #94	; 0x5e
 800daa0:	761a      	strb	r2, [r3, #24]
 800daa2:	f107 0314 	add.w	r3, r7, #20
 800daa6:	2223      	movs	r2, #35	; 0x23
 800daa8:	765a      	strb	r2, [r3, #25]
 800daaa:	f107 0314 	add.w	r3, r7, #20
 800daae:	2225      	movs	r2, #37	; 0x25
 800dab0:	769a      	strb	r2, [r3, #26]
 800dab2:	f107 0314 	add.w	r3, r7, #20
 800dab6:	2224      	movs	r2, #36	; 0x24
 800dab8:	76da      	strb	r2, [r3, #27]
 800daba:	f107 0314 	add.w	r3, r7, #20
 800dabe:	2228      	movs	r2, #40	; 0x28
 800dac0:	771a      	strb	r2, [r3, #28]
 800dac2:	f107 0314 	add.w	r3, r7, #20
 800dac6:	2226      	movs	r2, #38	; 0x26
 800dac8:	775a      	strb	r2, [r3, #29]
 800daca:	f107 0314 	add.w	r3, r7, #20
 800dace:	2229      	movs	r2, #41	; 0x29
 800dad0:	779a      	strb	r2, [r3, #30]
 800dad2:	f107 0314 	add.w	r3, r7, #20
 800dad6:	2227      	movs	r2, #39	; 0x27
 800dad8:	77da      	strb	r2, [r3, #31]
 800dada:	f107 0314 	add.w	r3, r7, #20
 800dade:	2225      	movs	r2, #37	; 0x25
 800dae0:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800dae4:	f107 030c 	add.w	r3, r7, #12
 800dae8:	f107 0214 	add.w	r2, r7, #20
 800daec:	601a      	str	r2, [r3, #0]
 800daee:	f107 030c 	add.w	r3, r7, #12
 800daf2:	2211      	movs	r2, #17
 800daf4:	605a      	str	r2, [r3, #4]
 800daf6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800dafa:	4618      	mov	r0, r3
 800dafc:	f7f3 ffbe 	bl	8001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800db00:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800db04:	f107 020c 	add.w	r2, r7, #12
 800db08:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800db0c:	9300      	str	r3, [sp, #0]
 800db0e:	460b      	mov	r3, r1
 800db10:	ca06      	ldmia	r2, {r1, r2}
 800db12:	4885      	ldr	r0, [pc, #532]	; (800dd28 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800db14:	f7f3 ffca 	bl	8001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800db18:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800db1c:	4618      	mov	r0, r3
 800db1e:	f7f3 ffb9 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800db22:	2305      	movs	r3, #5
 800db24:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800db28:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800db2c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800db30:	497e      	ldr	r1, [pc, #504]	; (800dd2c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800db32:	4618      	mov	r0, r3
 800db34:	f7f3 fae0 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800db38:	2306      	movs	r3, #6
 800db3a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800db3e:	f207 1263 	addw	r2, r7, #355	; 0x163
 800db42:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800db46:	331c      	adds	r3, #28
 800db48:	4979      	ldr	r1, [pc, #484]	; (800dd30 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800db4a:	4618      	mov	r0, r3
 800db4c:	f7f3 fafc 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800db50:	2307      	movs	r3, #7
 800db52:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800db56:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800db5a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800db5e:	3338      	adds	r3, #56	; 0x38
 800db60:	4974      	ldr	r1, [pc, #464]	; (800dd34 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800db62:	4618      	mov	r0, r3
 800db64:	f7f3 faf0 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800db68:	2308      	movs	r3, #8
 800db6a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800db6e:	f207 1265 	addw	r2, r7, #357	; 0x165
 800db72:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800db76:	3354      	adds	r3, #84	; 0x54
 800db78:	496f      	ldr	r1, [pc, #444]	; (800dd38 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800db7a:	4618      	mov	r0, r3
 800db7c:	f7f3 fabc 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800db80:	2309      	movs	r3, #9
 800db82:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800db86:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800db8a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800db8e:	3370      	adds	r3, #112	; 0x70
 800db90:	496a      	ldr	r1, [pc, #424]	; (800dd3c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800db92:	4618      	mov	r0, r3
 800db94:	f7f3 fb00 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800db98:	2310      	movs	r3, #16
 800db9a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800db9e:	f207 1267 	addw	r2, r7, #359	; 0x167
 800dba2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dba6:	338c      	adds	r3, #140	; 0x8c
 800dba8:	4965      	ldr	r1, [pc, #404]	; (800dd40 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800dbaa:	4618      	mov	r0, r3
 800dbac:	f7f3 fb1c 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800dbb0:	2311      	movs	r3, #17
 800dbb2:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800dbb6:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800dbba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dbbe:	33a8      	adds	r3, #168	; 0xa8
 800dbc0:	4960      	ldr	r1, [pc, #384]	; (800dd44 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800dbc2:	4618      	mov	r0, r3
 800dbc4:	f7f3 fae8 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800dbc8:	2312      	movs	r3, #18
 800dbca:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800dbce:	f207 1269 	addw	r2, r7, #361	; 0x169
 800dbd2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dbd6:	33c4      	adds	r3, #196	; 0xc4
 800dbd8:	495b      	ldr	r1, [pc, #364]	; (800dd48 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800dbda:	4618      	mov	r0, r3
 800dbdc:	f7f3 fa8c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800dbe0:	2313      	movs	r3, #19
 800dbe2:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800dbe6:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800dbea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dbee:	33e0      	adds	r3, #224	; 0xe0
 800dbf0:	4956      	ldr	r1, [pc, #344]	; (800dd4c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800dbf2:	4618      	mov	r0, r3
 800dbf4:	f7f3 faa8 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800dbf8:	2314      	movs	r3, #20
 800dbfa:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800dbfe:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800dc02:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dc06:	33fc      	adds	r3, #252	; 0xfc
 800dc08:	4951      	ldr	r1, [pc, #324]	; (800dd50 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800dc0a:	4618      	mov	r0, r3
 800dc0c:	f7f3 fb14 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800dc10:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800dc14:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800dc18:	601a      	str	r2, [r3, #0]
 800dc1a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800dc1e:	220a      	movs	r2, #10
 800dc20:	605a      	str	r2, [r3, #4]
 800dc22:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dc26:	4618      	mov	r0, r3
 800dc28:	f7f3 ffcd 	bl	8001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800dc2c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800dc30:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800dc34:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dc38:	9300      	str	r3, [sp, #0]
 800dc3a:	460b      	mov	r3, r1
 800dc3c:	ca06      	ldmia	r2, {r1, r2}
 800dc3e:	4845      	ldr	r0, [pc, #276]	; (800dd54 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800dc40:	f7f3 ffd9 	bl	8001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800dc44:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dc48:	4618      	mov	r0, r3
 800dc4a:	f7f3 ffc8 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800dc4e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800dc52:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800dc56:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dc5a:	429c      	cmp	r4, r3
 800dc5c:	d004      	beq.n	800dc68 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800dc5e:	3c1c      	subs	r4, #28
 800dc60:	4620      	mov	r0, r4
 800dc62:	f7f3 fa3c 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800dc66:	e7f6      	b.n	800dc56 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800dc68:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800dc6c:	2200      	movs	r2, #0
 800dc6e:	601a      	str	r2, [r3, #0]
 800dc70:	605a      	str	r2, [r3, #4]
 800dc72:	609a      	str	r2, [r3, #8]
 800dc74:	233c      	movs	r3, #60	; 0x3c
 800dc76:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800dc7a:	231b      	movs	r3, #27
 800dc7c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800dc80:	231c      	movs	r3, #28
 800dc82:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800dc86:	233e      	movs	r3, #62	; 0x3e
 800dc88:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800dc8c:	2319      	movs	r3, #25
 800dc8e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800dc92:	231a      	movs	r3, #26
 800dc94:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800dc98:	233d      	movs	r3, #61	; 0x3d
 800dc9a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800dc9e:	2318      	movs	r3, #24
 800dca0:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800dca4:	231d      	movs	r3, #29
 800dca6:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800dcaa:	2321      	movs	r3, #33	; 0x21
 800dcac:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800dcb0:	2317      	movs	r3, #23
 800dcb2:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800dcb6:	231e      	movs	r3, #30
 800dcb8:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800dcbc:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800dcc0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800dcc4:	2304      	movs	r3, #4
 800dcc6:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800dcca:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800dcce:	4618      	mov	r0, r3
 800dcd0:	f7f3 ffc1 	bl	8001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800dcd4:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800dcd8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800dcdc:	9300      	str	r3, [sp, #0]
 800dcde:	4613      	mov	r3, r2
 800dce0:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800dce4:	ca06      	ldmia	r2, {r1, r2}
 800dce6:	481c      	ldr	r0, [pc, #112]	; (800dd58 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800dce8:	f7f3 ffcd 	bl	8001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800dcec:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800dcf0:	4618      	mov	r0, r3
 800dcf2:	f7f3 ffbc 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800dcf6:	1d3b      	adds	r3, r7, #4
 800dcf8:	681b      	ldr	r3, [r3, #0]
 800dcfa:	2b00      	cmp	r3, #0
 800dcfc:	d10e      	bne.n	800dd1c <_Z41__static_initialization_and_destruction_0ii+0x378>
 800dcfe:	463b      	mov	r3, r7
 800dd00:	681b      	ldr	r3, [r3, #0]
 800dd02:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800dd06:	4293      	cmp	r3, r2
 800dd08:	d108      	bne.n	800dd1c <_Z41__static_initialization_and_destruction_0ii+0x378>
 800dd0a:	4813      	ldr	r0, [pc, #76]	; (800dd58 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800dd0c:	f7fb fc4d 	bl	80095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800dd10:	4810      	ldr	r0, [pc, #64]	; (800dd54 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800dd12:	f7fb fc57 	bl	80095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800dd16:	4804      	ldr	r0, [pc, #16]	; (800dd28 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800dd18:	f7fb fc61 	bl	80095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800dd1c:	bf00      	nop
 800dd1e:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800dd22:	46bd      	mov	sp, r7
 800dd24:	bd90      	pop	{r4, r7, pc}
 800dd26:	bf00      	nop
 800dd28:	2000029c 	.word	0x2000029c
 800dd2c:	0802735c 	.word	0x0802735c
 800dd30:	08027364 	.word	0x08027364
 800dd34:	0802736c 	.word	0x0802736c
 800dd38:	08027374 	.word	0x08027374
 800dd3c:	0802737c 	.word	0x0802737c
 800dd40:	08027384 	.word	0x08027384
 800dd44:	08027388 	.word	0x08027388
 800dd48:	08027390 	.word	0x08027390
 800dd4c:	08027398 	.word	0x08027398
 800dd50:	080273a0 	.word	0x080273a0
 800dd54:	200002b4 	.word	0x200002b4
 800dd58:	200002cc 	.word	0x200002cc

0800dd5c <_GLOBAL__sub_I__ZN21Expression_calculatorC2Ev>:
 800dd5c:	b580      	push	{r7, lr}
 800dd5e:	af00      	add	r7, sp, #0
 800dd60:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800dd64:	2001      	movs	r0, #1
 800dd66:	f7ff fe1d 	bl	800d9a4 <_Z41__static_initialization_and_destruction_0ii>
 800dd6a:	bd80      	pop	{r7, pc}

0800dd6c <_GLOBAL__sub_D__ZN21Expression_calculatorC2Ev>:
 800dd6c:	b580      	push	{r7, lr}
 800dd6e:	af00      	add	r7, sp, #0
 800dd70:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800dd74:	2000      	movs	r0, #0
 800dd76:	f7ff fe15 	bl	800d9a4 <_Z41__static_initialization_and_destruction_0ii>
 800dd7a:	bd80      	pop	{r7, pc}

0800dd7c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEED1Ev>:
 800dd7c:	b580      	push	{r7, lr}
 800dd7e:	b082      	sub	sp, #8
 800dd80:	af00      	add	r7, sp, #0
 800dd82:	6078      	str	r0, [r7, #4]
 800dd84:	687b      	ldr	r3, [r7, #4]
 800dd86:	4618      	mov	r0, r3
 800dd88:	f000 f8c8 	bl	800df1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EED1Ev>
 800dd8c:	687b      	ldr	r3, [r7, #4]
 800dd8e:	4618      	mov	r0, r3
 800dd90:	3708      	adds	r7, #8
 800dd92:	46bd      	mov	sp, r7
 800dd94:	bd80      	pop	{r7, pc}

0800dd96 <_ZN16Function_handlerD1Ev>:

typedef Symbol (*function_pointer)(arglist);

#define ADD_FUNCTION(x) functions.insert({#x, &x});

class Function_handler
 800dd96:	b580      	push	{r7, lr}
 800dd98:	b082      	sub	sp, #8
 800dd9a:	af00      	add	r7, sp, #0
 800dd9c:	6078      	str	r0, [r7, #4]
 800dd9e:	687b      	ldr	r3, [r7, #4]
 800dda0:	4618      	mov	r0, r3
 800dda2:	f7ff ffeb 	bl	800dd7c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEED1Ev>
 800dda6:	687b      	ldr	r3, [r7, #4]
 800dda8:	4618      	mov	r0, r3
 800ddaa:	3708      	adds	r7, #8
 800ddac:	46bd      	mov	sp, r7
 800ddae:	bd80      	pop	{r7, pc}

0800ddb0 <__tcf_0>:
#include "Function_handler.h"

Symbol Function_handler::run_function(Function_call *fcall)
{
	static Function_handler instance;
 800ddb0:	b580      	push	{r7, lr}
 800ddb2:	af00      	add	r7, sp, #0
 800ddb4:	4801      	ldr	r0, [pc, #4]	; (800ddbc <__tcf_0+0xc>)
 800ddb6:	f7ff ffee 	bl	800dd96 <_ZN16Function_handlerD1Ev>
 800ddba:	bd80      	pop	{r7, pc}
 800ddbc:	20000334 	.word	0x20000334

0800ddc0 <_ZN16Function_handler12run_functionEP13Function_call>:
{
 800ddc0:	b590      	push	{r4, r7, lr}
 800ddc2:	b095      	sub	sp, #84	; 0x54
 800ddc4:	af00      	add	r7, sp, #0
 800ddc6:	6078      	str	r0, [r7, #4]
 800ddc8:	6039      	str	r1, [r7, #0]
	static Function_handler instance;
 800ddca:	4b49      	ldr	r3, [pc, #292]	; (800def0 <_ZN16Function_handler12run_functionEP13Function_call+0x130>)
 800ddcc:	781b      	ldrb	r3, [r3, #0]
 800ddce:	f3bf 8f5b 	dmb	ish
 800ddd2:	b2db      	uxtb	r3, r3
 800ddd4:	f003 0301 	and.w	r3, r3, #1
 800ddd8:	2b00      	cmp	r3, #0
 800ddda:	bf0c      	ite	eq
 800dddc:	2301      	moveq	r3, #1
 800ddde:	2300      	movne	r3, #0
 800dde0:	b2db      	uxtb	r3, r3
 800dde2:	2b00      	cmp	r3, #0
 800dde4:	d013      	beq.n	800de0e <_ZN16Function_handler12run_functionEP13Function_call+0x4e>
 800dde6:	4842      	ldr	r0, [pc, #264]	; (800def0 <_ZN16Function_handler12run_functionEP13Function_call+0x130>)
 800dde8:	f014 fb4a 	bl	8022480 <__cxa_guard_acquire>
 800ddec:	4603      	mov	r3, r0
 800ddee:	2b00      	cmp	r3, #0
 800ddf0:	bf14      	ite	ne
 800ddf2:	2301      	movne	r3, #1
 800ddf4:	2300      	moveq	r3, #0
 800ddf6:	b2db      	uxtb	r3, r3
 800ddf8:	2b00      	cmp	r3, #0
 800ddfa:	d008      	beq.n	800de0e <_ZN16Function_handler12run_functionEP13Function_call+0x4e>
 800ddfc:	483d      	ldr	r0, [pc, #244]	; (800def4 <_ZN16Function_handler12run_functionEP13Function_call+0x134>)
 800ddfe:	f010 fd51 	bl	801e8a4 <_ZN16Function_handlerC1Ev>
 800de02:	483b      	ldr	r0, [pc, #236]	; (800def0 <_ZN16Function_handler12run_functionEP13Function_call+0x130>)
 800de04:	f014 fb48 	bl	8022498 <__cxa_guard_release>
 800de08:	483b      	ldr	r0, [pc, #236]	; (800def8 <_ZN16Function_handler12run_functionEP13Function_call+0x138>)
 800de0a:	f015 ff82 	bl	8023d12 <atexit>

	Position_counter::get_instance().line = fcall->line;
 800de0e:	683b      	ldr	r3, [r7, #0]
 800de10:	681c      	ldr	r4, [r3, #0]
 800de12:	f008 fad3 	bl	80163bc <_ZN16Position_counter12get_instanceEv>
 800de16:	4603      	mov	r3, r0
 800de18:	601c      	str	r4, [r3, #0]
	Position_counter::get_instance().position = fcall->position;
 800de1a:	683b      	ldr	r3, [r7, #0]
 800de1c:	685c      	ldr	r4, [r3, #4]
 800de1e:	f008 facd 	bl	80163bc <_ZN16Position_counter12get_instanceEv>
 800de22:	4603      	mov	r3, r0
 800de24:	605c      	str	r4, [r3, #4]

	auto search = instance.functions.find(fcall->id);
 800de26:	683b      	ldr	r3, [r7, #0]
 800de28:	3308      	adds	r3, #8
 800de2a:	4619      	mov	r1, r3
 800de2c:	4831      	ldr	r0, [pc, #196]	; (800def4 <_ZN16Function_handler12run_functionEP13Function_call+0x134>)
 800de2e:	f000 f88a 	bl	800df46 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE4findERSH_>
 800de32:	4603      	mov	r3, r0
 800de34:	60bb      	str	r3, [r7, #8]
	if (search != instance.functions.end())
 800de36:	482f      	ldr	r0, [pc, #188]	; (800def4 <_ZN16Function_handler12run_functionEP13Function_call+0x134>)
 800de38:	f000 f894 	bl	800df64 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE3endEv>
 800de3c:	4603      	mov	r3, r0
 800de3e:	60fb      	str	r3, [r7, #12]
 800de40:	f107 020c 	add.w	r2, r7, #12
 800de44:	f107 0308 	add.w	r3, r7, #8
 800de48:	4611      	mov	r1, r2
 800de4a:	4618      	mov	r0, r3
 800de4c:	f000 f897 	bl	800df7e <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 800de50:	4603      	mov	r3, r0
 800de52:	2b00      	cmp	r3, #0
 800de54:	d01d      	beq.n	800de92 <_ZN16Function_handler12run_functionEP13Function_call+0xd2>
	{
		function_pointer fun = search->second;
 800de56:	f107 0308 	add.w	r3, r7, #8
 800de5a:	4618      	mov	r0, r3
 800de5c:	f000 f8a3 	bl	800dfa6 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEptEv>
 800de60:	4603      	mov	r3, r0
 800de62:	699b      	ldr	r3, [r3, #24]
 800de64:	64fb      	str	r3, [r7, #76]	; 0x4c
		return fun(fcall->arguments);
 800de66:	6cfc      	ldr	r4, [r7, #76]	; 0x4c
 800de68:	683b      	ldr	r3, [r7, #0]
 800de6a:	f103 0220 	add.w	r2, r3, #32
 800de6e:	f107 0310 	add.w	r3, r7, #16
 800de72:	4611      	mov	r1, r2
 800de74:	4618      	mov	r0, r3
 800de76:	f000 f8a4 	bl	800dfc2 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 800de7a:	687b      	ldr	r3, [r7, #4]
 800de7c:	f107 0210 	add.w	r2, r7, #16
 800de80:	4611      	mov	r1, r2
 800de82:	4618      	mov	r0, r3
 800de84:	47a0      	blx	r4
 800de86:	f107 0310 	add.w	r3, r7, #16
 800de8a:	4618      	mov	r0, r3
 800de8c:	f000 f8d6 	bl	800e03c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
 800de90:	e029      	b.n	800dee6 <_ZN16Function_handler12run_functionEP13Function_call+0x126>
	}
	else
	{
		Transmitter::report_error(std::string("function " + fcall->id + " not found"));
 800de92:	683b      	ldr	r3, [r7, #0]
 800de94:	f103 0208 	add.w	r2, r3, #8
 800de98:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800de9c:	4917      	ldr	r1, [pc, #92]	; (800defc <_ZN16Function_handler12run_functionEP13Function_call+0x13c>)
 800de9e:	4618      	mov	r0, r3
 800dea0:	f000 f8e7 	bl	800e072 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 800dea4:	f107 031c 	add.w	r3, r7, #28
 800dea8:	f107 0134 	add.w	r1, r7, #52	; 0x34
 800deac:	4a14      	ldr	r2, [pc, #80]	; (800df00 <_ZN16Function_handler12run_functionEP13Function_call+0x140>)
 800deae:	4618      	mov	r0, r3
 800deb0:	f000 f904 	bl	800e0bc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 800deb4:	f107 031c 	add.w	r3, r7, #28
 800deb8:	4618      	mov	r0, r3
 800deba:	f00a fbc9 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800debe:	f107 031c 	add.w	r3, r7, #28
 800dec2:	4618      	mov	r0, r3
 800dec4:	f014 fd8d 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800dec8:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800decc:	4618      	mov	r0, r3
 800dece:	f014 fd88 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		return {};
 800ded2:	687b      	ldr	r3, [r7, #4]
 800ded4:	4618      	mov	r0, r3
 800ded6:	2320      	movs	r3, #32
 800ded8:	461a      	mov	r2, r3
 800deda:	2100      	movs	r1, #0
 800dedc:	f015 ffc2 	bl	8023e64 <memset>
 800dee0:	6878      	ldr	r0, [r7, #4]
 800dee2:	f7fe fcae 	bl	800c842 <_ZN6SymbolC1Ev>
	}
}
 800dee6:	6878      	ldr	r0, [r7, #4]
 800dee8:	3754      	adds	r7, #84	; 0x54
 800deea:	46bd      	mov	sp, r7
 800deec:	bd90      	pop	{r4, r7, pc}
 800deee:	bf00      	nop
 800def0:	2000034c 	.word	0x2000034c
 800def4:	20000334 	.word	0x20000334
 800def8:	0800ddb1 	.word	0x0800ddb1
 800defc:	080273a4 	.word	0x080273a4
 800df00:	080273b0 	.word	0x080273b0

0800df04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EED1Ev>:
	struct _Rb_tree_impl
 800df04:	b580      	push	{r7, lr}
 800df06:	b082      	sub	sp, #8
 800df08:	af00      	add	r7, sp, #0
 800df0a:	6078      	str	r0, [r7, #4]
 800df0c:	6878      	ldr	r0, [r7, #4]
 800df0e:	f000 f8ec 	bl	800e0ea <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEED1Ev>
 800df12:	687b      	ldr	r3, [r7, #4]
 800df14:	4618      	mov	r0, r3
 800df16:	3708      	adds	r7, #8
 800df18:	46bd      	mov	sp, r7
 800df1a:	bd80      	pop	{r7, pc}

0800df1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 800df1c:	b580      	push	{r7, lr}
 800df1e:	b082      	sub	sp, #8
 800df20:	af00      	add	r7, sp, #0
 800df22:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 800df24:	6878      	ldr	r0, [r7, #4]
 800df26:	f000 f90b 	bl	800e140 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 800df2a:	4603      	mov	r3, r0
 800df2c:	4619      	mov	r1, r3
 800df2e:	6878      	ldr	r0, [r7, #4]
 800df30:	f000 f8e7 	bl	800e102 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
 800df34:	687b      	ldr	r3, [r7, #4]
 800df36:	4618      	mov	r0, r3
 800df38:	f7ff ffe4 	bl	800df04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EED1Ev>
 800df3c:	687b      	ldr	r3, [r7, #4]
 800df3e:	4618      	mov	r0, r3
 800df40:	3708      	adds	r7, #8
 800df42:	46bd      	mov	sp, r7
 800df44:	bd80      	pop	{r7, pc}

0800df46 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE4findERSH_>:
       *  pointing to the sought after %pair.  If unsuccessful it returns the
       *  past-the-end ( @c end() ) iterator.
       */

      iterator
      find(const key_type& __x)
 800df46:	b580      	push	{r7, lr}
 800df48:	b082      	sub	sp, #8
 800df4a:	af00      	add	r7, sp, #0
 800df4c:	6078      	str	r0, [r7, #4]
 800df4e:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800df50:	687b      	ldr	r3, [r7, #4]
 800df52:	6839      	ldr	r1, [r7, #0]
 800df54:	4618      	mov	r0, r3
 800df56:	f000 f8ff 	bl	800e158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_>
 800df5a:	4603      	mov	r3, r0
 800df5c:	4618      	mov	r0, r3
 800df5e:	3708      	adds	r7, #8
 800df60:	46bd      	mov	sp, r7
 800df62:	bd80      	pop	{r7, pc}

0800df64 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800df64:	b580      	push	{r7, lr}
 800df66:	b082      	sub	sp, #8
 800df68:	af00      	add	r7, sp, #0
 800df6a:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800df6c:	687b      	ldr	r3, [r7, #4]
 800df6e:	4618      	mov	r0, r3
 800df70:	f000 f92e 	bl	800e1d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800df74:	4603      	mov	r3, r0
 800df76:	4618      	mov	r0, r3
 800df78:	3708      	adds	r7, #8
 800df7a:	46bd      	mov	sp, r7
 800df7c:	bd80      	pop	{r7, pc}

0800df7e <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800df7e:	b480      	push	{r7}
 800df80:	b083      	sub	sp, #12
 800df82:	af00      	add	r7, sp, #0
 800df84:	6078      	str	r0, [r7, #4]
 800df86:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800df88:	687b      	ldr	r3, [r7, #4]
 800df8a:	681a      	ldr	r2, [r3, #0]
 800df8c:	683b      	ldr	r3, [r7, #0]
 800df8e:	681b      	ldr	r3, [r3, #0]
 800df90:	429a      	cmp	r2, r3
 800df92:	bf14      	ite	ne
 800df94:	2301      	movne	r3, #1
 800df96:	2300      	moveq	r3, #0
 800df98:	b2db      	uxtb	r3, r3
 800df9a:	4618      	mov	r0, r3
 800df9c:	370c      	adds	r7, #12
 800df9e:	46bd      	mov	sp, r7
 800dfa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfa4:	4770      	bx	lr

0800dfa6 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800dfa6:	b580      	push	{r7, lr}
 800dfa8:	b082      	sub	sp, #8
 800dfaa:	af00      	add	r7, sp, #0
 800dfac:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 800dfae:	687b      	ldr	r3, [r7, #4]
 800dfb0:	681b      	ldr	r3, [r3, #0]
 800dfb2:	4618      	mov	r0, r3
 800dfb4:	f000 f91d 	bl	800e1f2 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800dfb8:	4603      	mov	r3, r0
 800dfba:	4618      	mov	r0, r3
 800dfbc:	3708      	adds	r7, #8
 800dfbe:	46bd      	mov	sp, r7
 800dfc0:	bd80      	pop	{r7, pc}

0800dfc2 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>:
      vector(const vector& __x)
 800dfc2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfc4:	b085      	sub	sp, #20
 800dfc6:	af00      	add	r7, sp, #0
 800dfc8:	6078      	str	r0, [r7, #4]
 800dfca:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 800dfcc:	687c      	ldr	r4, [r7, #4]
 800dfce:	6838      	ldr	r0, [r7, #0]
 800dfd0:	f7f3 ff1a 	bl	8001e08 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 800dfd4:	4605      	mov	r5, r0
 800dfd6:	683b      	ldr	r3, [r7, #0]
 800dfd8:	4618      	mov	r0, r3
 800dfda:	f000 f926 	bl	800e22a <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800dfde:	4602      	mov	r2, r0
 800dfe0:	f107 030c 	add.w	r3, r7, #12
 800dfe4:	4611      	mov	r1, r2
 800dfe6:	4618      	mov	r0, r3
 800dfe8:	f000 f911 	bl	800e20e <_ZN9__gnu_cxx14__alloc_traitsISaIP10ExpressionES2_E17_S_select_on_copyERKS3_>
 800dfec:	f107 030c 	add.w	r3, r7, #12
 800dff0:	461a      	mov	r2, r3
 800dff2:	4629      	mov	r1, r5
 800dff4:	4620      	mov	r0, r4
 800dff6:	f000 f93b 	bl	800e270 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1EjRKS2_>
 800dffa:	f107 030c 	add.w	r3, r7, #12
 800dffe:	4618      	mov	r0, r3
 800e000:	f000 f91e 	bl	800e240 <_ZNSaIP10ExpressionED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800e004:	6838      	ldr	r0, [r7, #0]
 800e006:	f000 f960 	bl	800e2ca <_ZNKSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 800e00a:	4605      	mov	r5, r0
 800e00c:	6838      	ldr	r0, [r7, #0]
 800e00e:	f000 f970 	bl	800e2f2 <_ZNKSt6vectorIP10ExpressionSaIS1_EE3endEv>
 800e012:	4606      	mov	r6, r0
 800e014:	687b      	ldr	r3, [r7, #4]
 800e016:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 800e018:	687b      	ldr	r3, [r7, #4]
 800e01a:	4618      	mov	r0, r3
 800e01c:	f000 f97d 	bl	800e31a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800e020:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800e022:	4622      	mov	r2, r4
 800e024:	4631      	mov	r1, r6
 800e026:	4628      	mov	r0, r5
 800e028:	f000 f982 	bl	800e330 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>
 800e02c:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 800e02e:	687b      	ldr	r3, [r7, #4]
 800e030:	605a      	str	r2, [r3, #4]
      }
 800e032:	687b      	ldr	r3, [r7, #4]
 800e034:	4618      	mov	r0, r3
 800e036:	3714      	adds	r7, #20
 800e038:	46bd      	mov	sp, r7
 800e03a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e03c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800e03c:	b5b0      	push	{r4, r5, r7, lr}
 800e03e:	b082      	sub	sp, #8
 800e040:	af00      	add	r7, sp, #0
 800e042:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800e044:	687b      	ldr	r3, [r7, #4]
 800e046:	681c      	ldr	r4, [r3, #0]
 800e048:	687b      	ldr	r3, [r7, #4]
 800e04a:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800e04c:	687b      	ldr	r3, [r7, #4]
 800e04e:	4618      	mov	r0, r3
 800e050:	f000 f963 	bl	800e31a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800e054:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800e056:	461a      	mov	r2, r3
 800e058:	4629      	mov	r1, r5
 800e05a:	4620      	mov	r0, r4
 800e05c:	f000 f979 	bl	800e352 <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>
      }
 800e060:	687b      	ldr	r3, [r7, #4]
 800e062:	4618      	mov	r0, r3
 800e064:	f000 f918 	bl	800e298 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EED1Ev>
 800e068:	687b      	ldr	r3, [r7, #4]
 800e06a:	4618      	mov	r0, r3
 800e06c:	3708      	adds	r7, #8
 800e06e:	46bd      	mov	sp, r7
 800e070:	bdb0      	pop	{r4, r5, r7, pc}

0800e072 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
    }
#endif  // !_GLIBCXX_USE_CXX11_ABI
   
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
 800e072:	b580      	push	{r7, lr}
 800e074:	b086      	sub	sp, #24
 800e076:	af00      	add	r7, sp, #0
 800e078:	60f8      	str	r0, [r7, #12]
 800e07a:	60b9      	str	r1, [r7, #8]
 800e07c:	607a      	str	r2, [r7, #4]
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    {
      __glibcxx_requires_string(__lhs);
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      const __size_type __len = _Traits::length(__lhs);
 800e07e:	68b8      	ldr	r0, [r7, #8]
 800e080:	f7f2 ffd4 	bl	800102c <_ZNSt11char_traitsIcE6lengthEPKc>
 800e084:	6178      	str	r0, [r7, #20]
      __string_type __str;
 800e086:	68f8      	ldr	r0, [r7, #12]
 800e088:	f014 fc8a 	bl	80229a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
      __str.reserve(__len + __rhs.size());
 800e08c:	6878      	ldr	r0, [r7, #4]
 800e08e:	f014 fcdc 	bl	8022a4a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 800e092:	4602      	mov	r2, r0
 800e094:	697b      	ldr	r3, [r7, #20]
 800e096:	4413      	add	r3, r2
 800e098:	4619      	mov	r1, r3
 800e09a:	68f8      	ldr	r0, [r7, #12]
 800e09c:	f014 fce1 	bl	8022a62 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
      __str.append(__lhs, __len);
 800e0a0:	697a      	ldr	r2, [r7, #20]
 800e0a2:	68b9      	ldr	r1, [r7, #8]
 800e0a4:	68f8      	ldr	r0, [r7, #12]
 800e0a6:	f014 fe15 	bl	8022cd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
      __str.append(__rhs);
 800e0aa:	6879      	ldr	r1, [r7, #4]
 800e0ac:	68f8      	ldr	r0, [r7, #12]
 800e0ae:	f014 fe07 	bl	8022cc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
      return __str;
 800e0b2:	bf00      	nop
    }
 800e0b4:	68f8      	ldr	r0, [r7, #12]
 800e0b6:	3718      	adds	r7, #24
 800e0b8:	46bd      	mov	sp, r7
 800e0ba:	bd80      	pop	{r7, pc}

0800e0bc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 800e0bc:	b580      	push	{r7, lr}
 800e0be:	b084      	sub	sp, #16
 800e0c0:	af00      	add	r7, sp, #0
 800e0c2:	60f8      	str	r0, [r7, #12]
 800e0c4:	60b9      	str	r1, [r7, #8]
 800e0c6:	607a      	str	r2, [r7, #4]
    { return std::move(__lhs.append(__rhs)); }
 800e0c8:	6879      	ldr	r1, [r7, #4]
 800e0ca:	68b8      	ldr	r0, [r7, #8]
 800e0cc:	f014 fe12 	bl	8022cf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
 800e0d0:	4603      	mov	r3, r0
 800e0d2:	4618      	mov	r0, r3
 800e0d4:	f7fa f81e 	bl	8008114 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800e0d8:	4603      	mov	r3, r0
 800e0da:	4619      	mov	r1, r3
 800e0dc:	68f8      	ldr	r0, [r7, #12]
 800e0de:	f014 fc66 	bl	80229ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 800e0e2:	68f8      	ldr	r0, [r7, #12]
 800e0e4:	3710      	adds	r7, #16
 800e0e6:	46bd      	mov	sp, r7
 800e0e8:	bd80      	pop	{r7, pc}

0800e0ea <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEED1Ev>:
 800e0ea:	b580      	push	{r7, lr}
 800e0ec:	b082      	sub	sp, #8
 800e0ee:	af00      	add	r7, sp, #0
 800e0f0:	6078      	str	r0, [r7, #4]
 800e0f2:	6878      	ldr	r0, [r7, #4]
 800e0f4:	f000 f93b 	bl	800e36e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEED1Ev>
 800e0f8:	687b      	ldr	r3, [r7, #4]
 800e0fa:	4618      	mov	r0, r3
 800e0fc:	3708      	adds	r7, #8
 800e0fe:	46bd      	mov	sp, r7
 800e100:	bd80      	pop	{r7, pc}

0800e102 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800e102:	b580      	push	{r7, lr}
 800e104:	b084      	sub	sp, #16
 800e106:	af00      	add	r7, sp, #0
 800e108:	6078      	str	r0, [r7, #4]
 800e10a:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 800e10c:	683b      	ldr	r3, [r7, #0]
 800e10e:	2b00      	cmp	r3, #0
 800e110:	d012      	beq.n	800e138 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x36>
	  _M_erase(_S_right(__x));
 800e112:	6838      	ldr	r0, [r7, #0]
 800e114:	f000 f936 	bl	800e384 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 800e118:	4603      	mov	r3, r0
 800e11a:	4619      	mov	r1, r3
 800e11c:	6878      	ldr	r0, [r7, #4]
 800e11e:	f7ff fff0 	bl	800e102 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
	  _Link_type __y = _S_left(__x);
 800e122:	6838      	ldr	r0, [r7, #0]
 800e124:	f000 f93a 	bl	800e39c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 800e128:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 800e12a:	6839      	ldr	r1, [r7, #0]
 800e12c:	6878      	ldr	r0, [r7, #4]
 800e12e:	f000 f941 	bl	800e3b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISG_E>
	  __x = __y;
 800e132:	68fb      	ldr	r3, [r7, #12]
 800e134:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800e136:	e7e9      	b.n	800e10c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0xa>
    }
 800e138:	bf00      	nop
 800e13a:	3710      	adds	r7, #16
 800e13c:	46bd      	mov	sp, r7
 800e13e:	bd80      	pop	{r7, pc}

0800e140 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 800e140:	b480      	push	{r7}
 800e142:	b083      	sub	sp, #12
 800e144:	af00      	add	r7, sp, #0
 800e146:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 800e148:	687b      	ldr	r3, [r7, #4]
 800e14a:	689b      	ldr	r3, [r3, #8]
 800e14c:	4618      	mov	r0, r3
 800e14e:	370c      	adds	r7, #12
 800e150:	46bd      	mov	sp, r7
 800e152:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e156:	4770      	bx	lr

0800e158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800e158:	b590      	push	{r4, r7, lr}
 800e15a:	b085      	sub	sp, #20
 800e15c:	af00      	add	r7, sp, #0
 800e15e:	6078      	str	r0, [r7, #4]
 800e160:	6039      	str	r1, [r7, #0]
    find(const _Key& __k)
    {
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 800e162:	6878      	ldr	r0, [r7, #4]
 800e164:	f7ff ffec 	bl	800e140 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 800e168:	4604      	mov	r4, r0
 800e16a:	6878      	ldr	r0, [r7, #4]
 800e16c:	f000 f933 	bl	800e3d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 800e170:	4602      	mov	r2, r0
 800e172:	683b      	ldr	r3, [r7, #0]
 800e174:	4621      	mov	r1, r4
 800e176:	6878      	ldr	r0, [r7, #4]
 800e178:	f000 f939 	bl	800e3ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_>
 800e17c:	4603      	mov	r3, r0
 800e17e:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 800e180:	6878      	ldr	r0, [r7, #4]
 800e182:	f000 f825 	bl	800e1d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800e186:	4603      	mov	r3, r0
 800e188:	60fb      	str	r3, [r7, #12]
 800e18a:	f107 020c 	add.w	r2, r7, #12
 800e18e:	f107 0308 	add.w	r3, r7, #8
 800e192:	4611      	mov	r1, r2
 800e194:	4618      	mov	r0, r3
 800e196:	f000 f95b 	bl	800e450 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 800e19a:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
					_S_key(__j._M_node))) ? end() : __j;
 800e19c:	2b00      	cmp	r3, #0
 800e19e:	d10d      	bne.n	800e1bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 800e1a0:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 800e1a2:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 800e1a4:	4618      	mov	r0, r3
 800e1a6:	f000 f967 	bl	800e478 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800e1aa:	4603      	mov	r3, r0
 800e1ac:	461a      	mov	r2, r3
 800e1ae:	6839      	ldr	r1, [r7, #0]
 800e1b0:	4620      	mov	r0, r4
 800e1b2:	f7f7 fa41 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800e1b6:	4603      	mov	r3, r0
 800e1b8:	2b00      	cmp	r3, #0
 800e1ba:	d004      	beq.n	800e1c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 800e1bc:	6878      	ldr	r0, [r7, #4]
 800e1be:	f000 f807 	bl	800e1d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800e1c2:	4603      	mov	r3, r0
 800e1c4:	e000      	b.n	800e1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x70>
 800e1c6:	68bb      	ldr	r3, [r7, #8]
    }
 800e1c8:	4618      	mov	r0, r3
 800e1ca:	3714      	adds	r7, #20
 800e1cc:	46bd      	mov	sp, r7
 800e1ce:	bd90      	pop	{r4, r7, pc}

0800e1d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800e1d0:	b580      	push	{r7, lr}
 800e1d2:	b084      	sub	sp, #16
 800e1d4:	af00      	add	r7, sp, #0
 800e1d6:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 800e1d8:	687b      	ldr	r3, [r7, #4]
 800e1da:	1d1a      	adds	r2, r3, #4
 800e1dc:	f107 030c 	add.w	r3, r7, #12
 800e1e0:	4611      	mov	r1, r2
 800e1e2:	4618      	mov	r0, r3
 800e1e4:	f000 f954 	bl	800e490 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 800e1e8:	68fb      	ldr	r3, [r7, #12]
 800e1ea:	4618      	mov	r0, r3
 800e1ec:	3710      	adds	r7, #16
 800e1ee:	46bd      	mov	sp, r7
 800e1f0:	bd80      	pop	{r7, pc}

0800e1f2 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>:
      _M_valptr()
 800e1f2:	b580      	push	{r7, lr}
 800e1f4:	b082      	sub	sp, #8
 800e1f6:	af00      	add	r7, sp, #0
 800e1f8:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 800e1fa:	687b      	ldr	r3, [r7, #4]
 800e1fc:	3310      	adds	r3, #16
 800e1fe:	4618      	mov	r0, r3
 800e200:	f000 f955 	bl	800e4ae <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>
 800e204:	4603      	mov	r3, r0
 800e206:	4618      	mov	r0, r3
 800e208:	3708      	adds	r7, #8
 800e20a:	46bd      	mov	sp, r7
 800e20c:	bd80      	pop	{r7, pc}

0800e20e <_ZN9__gnu_cxx14__alloc_traitsISaIP10ExpressionES2_E17_S_select_on_copyERKS3_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 800e20e:	b580      	push	{r7, lr}
 800e210:	b082      	sub	sp, #8
 800e212:	af00      	add	r7, sp, #0
 800e214:	6078      	str	r0, [r7, #4]
 800e216:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 800e218:	687b      	ldr	r3, [r7, #4]
 800e21a:	6839      	ldr	r1, [r7, #0]
 800e21c:	4618      	mov	r0, r3
 800e21e:	f000 f952 	bl	800e4c6 <_ZNSt16allocator_traitsISaIP10ExpressionEE37select_on_container_copy_constructionERKS2_>
 800e222:	6878      	ldr	r0, [r7, #4]
 800e224:	3708      	adds	r7, #8
 800e226:	46bd      	mov	sp, r7
 800e228:	bd80      	pop	{r7, pc}

0800e22a <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 800e22a:	b480      	push	{r7}
 800e22c:	b083      	sub	sp, #12
 800e22e:	af00      	add	r7, sp, #0
 800e230:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800e232:	687b      	ldr	r3, [r7, #4]
 800e234:	4618      	mov	r0, r3
 800e236:	370c      	adds	r7, #12
 800e238:	46bd      	mov	sp, r7
 800e23a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e23e:	4770      	bx	lr

0800e240 <_ZNSaIP10ExpressionED1Ev>:
 800e240:	b580      	push	{r7, lr}
 800e242:	b082      	sub	sp, #8
 800e244:	af00      	add	r7, sp, #0
 800e246:	6078      	str	r0, [r7, #4]
 800e248:	6878      	ldr	r0, [r7, #4]
 800e24a:	f000 f949 	bl	800e4e0 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionED1Ev>
 800e24e:	687b      	ldr	r3, [r7, #4]
 800e250:	4618      	mov	r0, r3
 800e252:	3708      	adds	r7, #8
 800e254:	46bd      	mov	sp, r7
 800e256:	bd80      	pop	{r7, pc}

0800e258 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800e258:	b580      	push	{r7, lr}
 800e25a:	b082      	sub	sp, #8
 800e25c:	af00      	add	r7, sp, #0
 800e25e:	6078      	str	r0, [r7, #4]
 800e260:	6878      	ldr	r0, [r7, #4]
 800e262:	f7ff ffed 	bl	800e240 <_ZNSaIP10ExpressionED1Ev>
 800e266:	687b      	ldr	r3, [r7, #4]
 800e268:	4618      	mov	r0, r3
 800e26a:	3708      	adds	r7, #8
 800e26c:	46bd      	mov	sp, r7
 800e26e:	bd80      	pop	{r7, pc}

0800e270 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1EjRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 800e270:	b580      	push	{r7, lr}
 800e272:	b084      	sub	sp, #16
 800e274:	af00      	add	r7, sp, #0
 800e276:	60f8      	str	r0, [r7, #12]
 800e278:	60b9      	str	r1, [r7, #8]
 800e27a:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 800e27c:	68fb      	ldr	r3, [r7, #12]
 800e27e:	6879      	ldr	r1, [r7, #4]
 800e280:	4618      	mov	r0, r3
 800e282:	f000 f938 	bl	800e4f6 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
 800e286:	68b9      	ldr	r1, [r7, #8]
 800e288:	68f8      	ldr	r0, [r7, #12]
 800e28a:	f000 f946 	bl	800e51a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_M_create_storageEj>
 800e28e:	68fb      	ldr	r3, [r7, #12]
 800e290:	4618      	mov	r0, r3
 800e292:	3710      	adds	r7, #16
 800e294:	46bd      	mov	sp, r7
 800e296:	bd80      	pop	{r7, pc}

0800e298 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800e298:	b580      	push	{r7, lr}
 800e29a:	b082      	sub	sp, #8
 800e29c:	af00      	add	r7, sp, #0
 800e29e:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800e2a0:	687b      	ldr	r3, [r7, #4]
 800e2a2:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800e2a4:	687b      	ldr	r3, [r7, #4]
 800e2a6:	689a      	ldr	r2, [r3, #8]
 800e2a8:	687b      	ldr	r3, [r7, #4]
 800e2aa:	681b      	ldr	r3, [r3, #0]
 800e2ac:	1ad3      	subs	r3, r2, r3
 800e2ae:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800e2b0:	461a      	mov	r2, r3
 800e2b2:	6878      	ldr	r0, [r7, #4]
 800e2b4:	f000 f94c 	bl	800e550 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800e2b8:	687b      	ldr	r3, [r7, #4]
 800e2ba:	4618      	mov	r0, r3
 800e2bc:	f7ff ffcc 	bl	800e258 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implD1Ev>
 800e2c0:	687b      	ldr	r3, [r7, #4]
 800e2c2:	4618      	mov	r0, r3
 800e2c4:	3708      	adds	r7, #8
 800e2c6:	46bd      	mov	sp, r7
 800e2c8:	bd80      	pop	{r7, pc}

0800e2ca <_ZNKSt6vectorIP10ExpressionSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 800e2ca:	b580      	push	{r7, lr}
 800e2cc:	b084      	sub	sp, #16
 800e2ce:	af00      	add	r7, sp, #0
 800e2d0:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 800e2d2:	687b      	ldr	r3, [r7, #4]
 800e2d4:	681b      	ldr	r3, [r3, #0]
 800e2d6:	60fb      	str	r3, [r7, #12]
 800e2d8:	f107 020c 	add.w	r2, r7, #12
 800e2dc:	f107 0308 	add.w	r3, r7, #8
 800e2e0:	4611      	mov	r1, r2
 800e2e2:	4618      	mov	r0, r3
 800e2e4:	f000 f947 	bl	800e576 <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>
 800e2e8:	68bb      	ldr	r3, [r7, #8]
 800e2ea:	4618      	mov	r0, r3
 800e2ec:	3710      	adds	r7, #16
 800e2ee:	46bd      	mov	sp, r7
 800e2f0:	bd80      	pop	{r7, pc}

0800e2f2 <_ZNKSt6vectorIP10ExpressionSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800e2f2:	b580      	push	{r7, lr}
 800e2f4:	b084      	sub	sp, #16
 800e2f6:	af00      	add	r7, sp, #0
 800e2f8:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 800e2fa:	687b      	ldr	r3, [r7, #4]
 800e2fc:	685b      	ldr	r3, [r3, #4]
 800e2fe:	60fb      	str	r3, [r7, #12]
 800e300:	f107 020c 	add.w	r2, r7, #12
 800e304:	f107 0308 	add.w	r3, r7, #8
 800e308:	4611      	mov	r1, r2
 800e30a:	4618      	mov	r0, r3
 800e30c:	f000 f933 	bl	800e576 <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>
 800e310:	68bb      	ldr	r3, [r7, #8]
 800e312:	4618      	mov	r0, r3
 800e314:	3710      	adds	r7, #16
 800e316:	46bd      	mov	sp, r7
 800e318:	bd80      	pop	{r7, pc}

0800e31a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800e31a:	b480      	push	{r7}
 800e31c:	b083      	sub	sp, #12
 800e31e:	af00      	add	r7, sp, #0
 800e320:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800e322:	687b      	ldr	r3, [r7, #4]
 800e324:	4618      	mov	r0, r3
 800e326:	370c      	adds	r7, #12
 800e328:	46bd      	mov	sp, r7
 800e32a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e32e:	4770      	bx	lr

0800e330 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 800e330:	b580      	push	{r7, lr}
 800e332:	b084      	sub	sp, #16
 800e334:	af00      	add	r7, sp, #0
 800e336:	60f8      	str	r0, [r7, #12]
 800e338:	60b9      	str	r1, [r7, #8]
 800e33a:	607a      	str	r2, [r7, #4]
 800e33c:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 800e33e:	687a      	ldr	r2, [r7, #4]
 800e340:	68b9      	ldr	r1, [r7, #8]
 800e342:	68f8      	ldr	r0, [r7, #12]
 800e344:	f000 f927 	bl	800e596 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
 800e348:	4603      	mov	r3, r0
 800e34a:	4618      	mov	r0, r3
 800e34c:	3710      	adds	r7, #16
 800e34e:	46bd      	mov	sp, r7
 800e350:	bd80      	pop	{r7, pc}

0800e352 <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800e352:	b580      	push	{r7, lr}
 800e354:	b084      	sub	sp, #16
 800e356:	af00      	add	r7, sp, #0
 800e358:	60f8      	str	r0, [r7, #12]
 800e35a:	60b9      	str	r1, [r7, #8]
 800e35c:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800e35e:	68b9      	ldr	r1, [r7, #8]
 800e360:	68f8      	ldr	r0, [r7, #12]
 800e362:	f000 f92a 	bl	800e5ba <_ZSt8_DestroyIPP10ExpressionEvT_S3_>
    }
 800e366:	bf00      	nop
 800e368:	3710      	adds	r7, #16
 800e36a:	46bd      	mov	sp, r7
 800e36c:	bd80      	pop	{r7, pc}

0800e36e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800e36e:	b480      	push	{r7}
 800e370:	b083      	sub	sp, #12
 800e372:	af00      	add	r7, sp, #0
 800e374:	6078      	str	r0, [r7, #4]
 800e376:	687b      	ldr	r3, [r7, #4]
 800e378:	4618      	mov	r0, r3
 800e37a:	370c      	adds	r7, #12
 800e37c:	46bd      	mov	sp, r7
 800e37e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e382:	4770      	bx	lr

0800e384 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800e384:	b480      	push	{r7}
 800e386:	b083      	sub	sp, #12
 800e388:	af00      	add	r7, sp, #0
 800e38a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 800e38c:	687b      	ldr	r3, [r7, #4]
 800e38e:	68db      	ldr	r3, [r3, #12]
 800e390:	4618      	mov	r0, r3
 800e392:	370c      	adds	r7, #12
 800e394:	46bd      	mov	sp, r7
 800e396:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e39a:	4770      	bx	lr

0800e39c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800e39c:	b480      	push	{r7}
 800e39e:	b083      	sub	sp, #12
 800e3a0:	af00      	add	r7, sp, #0
 800e3a2:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800e3a4:	687b      	ldr	r3, [r7, #4]
 800e3a6:	689b      	ldr	r3, [r3, #8]
 800e3a8:	4618      	mov	r0, r3
 800e3aa:	370c      	adds	r7, #12
 800e3ac:	46bd      	mov	sp, r7
 800e3ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3b2:	4770      	bx	lr

0800e3b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800e3b4:	b580      	push	{r7, lr}
 800e3b6:	b082      	sub	sp, #8
 800e3b8:	af00      	add	r7, sp, #0
 800e3ba:	6078      	str	r0, [r7, #4]
 800e3bc:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 800e3be:	6839      	ldr	r1, [r7, #0]
 800e3c0:	6878      	ldr	r0, [r7, #4]
 800e3c2:	f000 f907 	bl	800e5d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISG_E>
	_M_put_node(__p);
 800e3c6:	6839      	ldr	r1, [r7, #0]
 800e3c8:	6878      	ldr	r0, [r7, #4]
 800e3ca:	f000 f918 	bl	800e5fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_put_nodeEPSt13_Rb_tree_nodeISG_E>
      }
 800e3ce:	bf00      	nop
 800e3d0:	3708      	adds	r7, #8
 800e3d2:	46bd      	mov	sp, r7
 800e3d4:	bd80      	pop	{r7, pc}

0800e3d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 800e3d6:	b480      	push	{r7}
 800e3d8:	b083      	sub	sp, #12
 800e3da:	af00      	add	r7, sp, #0
 800e3dc:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 800e3de:	687b      	ldr	r3, [r7, #4]
 800e3e0:	3304      	adds	r3, #4
 800e3e2:	4618      	mov	r0, r3
 800e3e4:	370c      	adds	r7, #12
 800e3e6:	46bd      	mov	sp, r7
 800e3e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3ec:	4770      	bx	lr

0800e3ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800e3ee:	b590      	push	{r4, r7, lr}
 800e3f0:	b087      	sub	sp, #28
 800e3f2:	af00      	add	r7, sp, #0
 800e3f4:	60f8      	str	r0, [r7, #12]
 800e3f6:	60b9      	str	r1, [r7, #8]
 800e3f8:	607a      	str	r2, [r7, #4]
 800e3fa:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800e3fc:	68bb      	ldr	r3, [r7, #8]
 800e3fe:	2b00      	cmp	r3, #0
 800e400:	d01b      	beq.n	800e43a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 800e402:	68fc      	ldr	r4, [r7, #12]
 800e404:	68b8      	ldr	r0, [r7, #8]
 800e406:	f000 f90c 	bl	800e622 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 800e40a:	4603      	mov	r3, r0
 800e40c:	683a      	ldr	r2, [r7, #0]
 800e40e:	4619      	mov	r1, r3
 800e410:	4620      	mov	r0, r4
 800e412:	f7f7 f911 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800e416:	4603      	mov	r3, r0
 800e418:	f083 0301 	eor.w	r3, r3, #1
 800e41c:	b2db      	uxtb	r3, r3
 800e41e:	2b00      	cmp	r3, #0
 800e420:	d006      	beq.n	800e430 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 800e422:	68bb      	ldr	r3, [r7, #8]
 800e424:	607b      	str	r3, [r7, #4]
 800e426:	68b8      	ldr	r0, [r7, #8]
 800e428:	f7ff ffb8 	bl	800e39c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 800e42c:	60b8      	str	r0, [r7, #8]
 800e42e:	e7e5      	b.n	800e3fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 800e430:	68b8      	ldr	r0, [r7, #8]
 800e432:	f7ff ffa7 	bl	800e384 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 800e436:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 800e438:	e7e0      	b.n	800e3fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 800e43a:	f107 0314 	add.w	r3, r7, #20
 800e43e:	6879      	ldr	r1, [r7, #4]
 800e440:	4618      	mov	r0, r3
 800e442:	f000 f825 	bl	800e490 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 800e446:	697b      	ldr	r3, [r7, #20]
    }
 800e448:	4618      	mov	r0, r3
 800e44a:	371c      	adds	r7, #28
 800e44c:	46bd      	mov	sp, r7
 800e44e:	bd90      	pop	{r4, r7, pc}

0800e450 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800e450:	b480      	push	{r7}
 800e452:	b083      	sub	sp, #12
 800e454:	af00      	add	r7, sp, #0
 800e456:	6078      	str	r0, [r7, #4]
 800e458:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 800e45a:	687b      	ldr	r3, [r7, #4]
 800e45c:	681a      	ldr	r2, [r3, #0]
 800e45e:	683b      	ldr	r3, [r7, #0]
 800e460:	681b      	ldr	r3, [r3, #0]
 800e462:	429a      	cmp	r2, r3
 800e464:	bf0c      	ite	eq
 800e466:	2301      	moveq	r3, #1
 800e468:	2300      	movne	r3, #0
 800e46a:	b2db      	uxtb	r3, r3
 800e46c:	4618      	mov	r0, r3
 800e46e:	370c      	adds	r7, #12
 800e470:	46bd      	mov	sp, r7
 800e472:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e476:	4770      	bx	lr

0800e478 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 800e478:	b580      	push	{r7, lr}
 800e47a:	b082      	sub	sp, #8
 800e47c:	af00      	add	r7, sp, #0
 800e47e:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 800e480:	6878      	ldr	r0, [r7, #4]
 800e482:	f000 f8ce 	bl	800e622 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 800e486:	4603      	mov	r3, r0
 800e488:	4618      	mov	r0, r3
 800e48a:	3708      	adds	r7, #8
 800e48c:	46bd      	mov	sp, r7
 800e48e:	bd80      	pop	{r7, pc}

0800e490 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800e490:	b480      	push	{r7}
 800e492:	b083      	sub	sp, #12
 800e494:	af00      	add	r7, sp, #0
 800e496:	6078      	str	r0, [r7, #4]
 800e498:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800e49a:	687b      	ldr	r3, [r7, #4]
 800e49c:	683a      	ldr	r2, [r7, #0]
 800e49e:	601a      	str	r2, [r3, #0]
 800e4a0:	687b      	ldr	r3, [r7, #4]
 800e4a2:	4618      	mov	r0, r3
 800e4a4:	370c      	adds	r7, #12
 800e4a6:	46bd      	mov	sp, r7
 800e4a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e4ac:	4770      	bx	lr

0800e4ae <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 800e4ae:	b580      	push	{r7, lr}
 800e4b0:	b082      	sub	sp, #8
 800e4b2:	af00      	add	r7, sp, #0
 800e4b4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800e4b6:	6878      	ldr	r0, [r7, #4]
 800e4b8:	f000 f8c6 	bl	800e648 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>
 800e4bc:	4603      	mov	r3, r0
 800e4be:	4618      	mov	r0, r3
 800e4c0:	3708      	adds	r7, #8
 800e4c2:	46bd      	mov	sp, r7
 800e4c4:	bd80      	pop	{r7, pc}

0800e4c6 <_ZNSt16allocator_traitsISaIP10ExpressionEE37select_on_container_copy_constructionERKS2_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 800e4c6:	b580      	push	{r7, lr}
 800e4c8:	b082      	sub	sp, #8
 800e4ca:	af00      	add	r7, sp, #0
 800e4cc:	6078      	str	r0, [r7, #4]
 800e4ce:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 800e4d0:	6839      	ldr	r1, [r7, #0]
 800e4d2:	6878      	ldr	r0, [r7, #4]
 800e4d4:	f000 f8c3 	bl	800e65e <_ZNSaIP10ExpressionEC1ERKS1_>
 800e4d8:	6878      	ldr	r0, [r7, #4]
 800e4da:	3708      	adds	r7, #8
 800e4dc:	46bd      	mov	sp, r7
 800e4de:	bd80      	pop	{r7, pc}

0800e4e0 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionED1Ev>:
 800e4e0:	b480      	push	{r7}
 800e4e2:	b083      	sub	sp, #12
 800e4e4:	af00      	add	r7, sp, #0
 800e4e6:	6078      	str	r0, [r7, #4]
 800e4e8:	687b      	ldr	r3, [r7, #4]
 800e4ea:	4618      	mov	r0, r3
 800e4ec:	370c      	adds	r7, #12
 800e4ee:	46bd      	mov	sp, r7
 800e4f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e4f4:	4770      	bx	lr

0800e4f6 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 800e4f6:	b580      	push	{r7, lr}
 800e4f8:	b082      	sub	sp, #8
 800e4fa:	af00      	add	r7, sp, #0
 800e4fc:	6078      	str	r0, [r7, #4]
 800e4fe:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 800e500:	6839      	ldr	r1, [r7, #0]
 800e502:	6878      	ldr	r0, [r7, #4]
 800e504:	f000 f8ab 	bl	800e65e <_ZNSaIP10ExpressionEC1ERKS1_>
 800e508:	687b      	ldr	r3, [r7, #4]
 800e50a:	4618      	mov	r0, r3
 800e50c:	f000 f8b5 	bl	800e67a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 800e510:	687b      	ldr	r3, [r7, #4]
 800e512:	4618      	mov	r0, r3
 800e514:	3708      	adds	r7, #8
 800e516:	46bd      	mov	sp, r7
 800e518:	bd80      	pop	{r7, pc}

0800e51a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 800e51a:	b580      	push	{r7, lr}
 800e51c:	b082      	sub	sp, #8
 800e51e:	af00      	add	r7, sp, #0
 800e520:	6078      	str	r0, [r7, #4]
 800e522:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 800e524:	6839      	ldr	r1, [r7, #0]
 800e526:	6878      	ldr	r0, [r7, #4]
 800e528:	f000 f8bb 	bl	800e6a2 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 800e52c:	4602      	mov	r2, r0
 800e52e:	687b      	ldr	r3, [r7, #4]
 800e530:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 800e532:	687b      	ldr	r3, [r7, #4]
 800e534:	681a      	ldr	r2, [r3, #0]
 800e536:	687b      	ldr	r3, [r7, #4]
 800e538:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 800e53a:	687b      	ldr	r3, [r7, #4]
 800e53c:	681a      	ldr	r2, [r3, #0]
 800e53e:	683b      	ldr	r3, [r7, #0]
 800e540:	009b      	lsls	r3, r3, #2
 800e542:	441a      	add	r2, r3
 800e544:	687b      	ldr	r3, [r7, #4]
 800e546:	609a      	str	r2, [r3, #8]
      }
 800e548:	bf00      	nop
 800e54a:	3708      	adds	r7, #8
 800e54c:	46bd      	mov	sp, r7
 800e54e:	bd80      	pop	{r7, pc}

0800e550 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800e550:	b580      	push	{r7, lr}
 800e552:	b084      	sub	sp, #16
 800e554:	af00      	add	r7, sp, #0
 800e556:	60f8      	str	r0, [r7, #12]
 800e558:	60b9      	str	r1, [r7, #8]
 800e55a:	607a      	str	r2, [r7, #4]
	if (__p)
 800e55c:	68bb      	ldr	r3, [r7, #8]
 800e55e:	2b00      	cmp	r3, #0
 800e560:	d005      	beq.n	800e56e <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800e562:	68fb      	ldr	r3, [r7, #12]
 800e564:	687a      	ldr	r2, [r7, #4]
 800e566:	68b9      	ldr	r1, [r7, #8]
 800e568:	4618      	mov	r0, r3
 800e56a:	f000 f8ae 	bl	800e6ca <_ZNSt16allocator_traitsISaIP10ExpressionEE10deallocateERS2_PS1_j>
      }
 800e56e:	bf00      	nop
 800e570:	3710      	adds	r7, #16
 800e572:	46bd      	mov	sp, r7
 800e574:	bd80      	pop	{r7, pc}

0800e576 <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800e576:	b480      	push	{r7}
 800e578:	b083      	sub	sp, #12
 800e57a:	af00      	add	r7, sp, #0
 800e57c:	6078      	str	r0, [r7, #4]
 800e57e:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800e580:	683b      	ldr	r3, [r7, #0]
 800e582:	681a      	ldr	r2, [r3, #0]
 800e584:	687b      	ldr	r3, [r7, #4]
 800e586:	601a      	str	r2, [r3, #0]
 800e588:	687b      	ldr	r3, [r7, #4]
 800e58a:	4618      	mov	r0, r3
 800e58c:	370c      	adds	r7, #12
 800e58e:	46bd      	mov	sp, r7
 800e590:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e594:	4770      	bx	lr

0800e596 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 800e596:	b580      	push	{r7, lr}
 800e598:	b086      	sub	sp, #24
 800e59a:	af00      	add	r7, sp, #0
 800e59c:	60f8      	str	r0, [r7, #12]
 800e59e:	60b9      	str	r1, [r7, #8]
 800e5a0:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 800e5a2:	2301      	movs	r3, #1
 800e5a4:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 800e5a6:	687a      	ldr	r2, [r7, #4]
 800e5a8:	68b9      	ldr	r1, [r7, #8]
 800e5aa:	68f8      	ldr	r0, [r7, #12]
 800e5ac:	f000 f89c 	bl	800e6e8 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>
 800e5b0:	4603      	mov	r3, r0
    }
 800e5b2:	4618      	mov	r0, r3
 800e5b4:	3718      	adds	r7, #24
 800e5b6:	46bd      	mov	sp, r7
 800e5b8:	bd80      	pop	{r7, pc}

0800e5ba <_ZSt8_DestroyIPP10ExpressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800e5ba:	b580      	push	{r7, lr}
 800e5bc:	b082      	sub	sp, #8
 800e5be:	af00      	add	r7, sp, #0
 800e5c0:	6078      	str	r0, [r7, #4]
 800e5c2:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800e5c4:	6839      	ldr	r1, [r7, #0]
 800e5c6:	6878      	ldr	r0, [r7, #4]
 800e5c8:	f000 f89e 	bl	800e708 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10ExpressionEEvT_S5_>
    }
 800e5cc:	bf00      	nop
 800e5ce:	3708      	adds	r7, #8
 800e5d0:	46bd      	mov	sp, r7
 800e5d2:	bd80      	pop	{r7, pc}

0800e5d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800e5d4:	b590      	push	{r4, r7, lr}
 800e5d6:	b083      	sub	sp, #12
 800e5d8:	af00      	add	r7, sp, #0
 800e5da:	6078      	str	r0, [r7, #4]
 800e5dc:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 800e5de:	6878      	ldr	r0, [r7, #4]
 800e5e0:	f000 f89d 	bl	800e71e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 800e5e4:	4604      	mov	r4, r0
 800e5e6:	6838      	ldr	r0, [r7, #0]
 800e5e8:	f7ff fe03 	bl	800e1f2 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800e5ec:	4603      	mov	r3, r0
 800e5ee:	4619      	mov	r1, r3
 800e5f0:	4620      	mov	r0, r4
 800e5f2:	f000 f89f 	bl	800e734 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE7destroyISH_EEvRSJ_PT_>
      }
 800e5f6:	bf00      	nop
 800e5f8:	370c      	adds	r7, #12
 800e5fa:	46bd      	mov	sp, r7
 800e5fc:	bd90      	pop	{r4, r7, pc}

0800e5fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_put_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800e5fe:	b580      	push	{r7, lr}
 800e600:	b082      	sub	sp, #8
 800e602:	af00      	add	r7, sp, #0
 800e604:	6078      	str	r0, [r7, #4]
 800e606:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 800e608:	6878      	ldr	r0, [r7, #4]
 800e60a:	f000 f888 	bl	800e71e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 800e60e:	4603      	mov	r3, r0
 800e610:	2201      	movs	r2, #1
 800e612:	6839      	ldr	r1, [r7, #0]
 800e614:	4618      	mov	r0, r3
 800e616:	f000 f89a 	bl	800e74e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE10deallocateERSJ_PSI_j>
 800e61a:	bf00      	nop
 800e61c:	3708      	adds	r7, #8
 800e61e:	46bd      	mov	sp, r7
 800e620:	bd80      	pop	{r7, pc}

0800e622 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>:
      _S_key(_Const_Link_type __x)
 800e622:	b580      	push	{r7, lr}
 800e624:	b084      	sub	sp, #16
 800e626:	af00      	add	r7, sp, #0
 800e628:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 800e62a:	6878      	ldr	r0, [r7, #4]
 800e62c:	f000 f89e 	bl	800e76c <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800e630:	4602      	mov	r2, r0
 800e632:	f107 030c 	add.w	r3, r7, #12
 800e636:	4611      	mov	r1, r2
 800e638:	4618      	mov	r0, r3
 800e63a:	f000 f8a5 	bl	800e788 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERKSG_>
 800e63e:	4603      	mov	r3, r0
      }
 800e640:	4618      	mov	r0, r3
 800e642:	3710      	adds	r7, #16
 800e644:	46bd      	mov	sp, r7
 800e646:	bd80      	pop	{r7, pc}

0800e648 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>:
      _M_addr() noexcept
 800e648:	b480      	push	{r7}
 800e64a:	b083      	sub	sp, #12
 800e64c:	af00      	add	r7, sp, #0
 800e64e:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 800e650:	687b      	ldr	r3, [r7, #4]
 800e652:	4618      	mov	r0, r3
 800e654:	370c      	adds	r7, #12
 800e656:	46bd      	mov	sp, r7
 800e658:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e65c:	4770      	bx	lr

0800e65e <_ZNSaIP10ExpressionEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800e65e:	b580      	push	{r7, lr}
 800e660:	b082      	sub	sp, #8
 800e662:	af00      	add	r7, sp, #0
 800e664:	6078      	str	r0, [r7, #4]
 800e666:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 800e668:	6839      	ldr	r1, [r7, #0]
 800e66a:	6878      	ldr	r0, [r7, #4]
 800e66c:	f000 f898 	bl	800e7a0 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1ERKS3_>
 800e670:	687b      	ldr	r3, [r7, #4]
 800e672:	4618      	mov	r0, r3
 800e674:	3708      	adds	r7, #8
 800e676:	46bd      	mov	sp, r7
 800e678:	bd80      	pop	{r7, pc}

0800e67a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 800e67a:	b480      	push	{r7}
 800e67c:	b083      	sub	sp, #12
 800e67e:	af00      	add	r7, sp, #0
 800e680:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 800e682:	687b      	ldr	r3, [r7, #4]
 800e684:	2200      	movs	r2, #0
 800e686:	601a      	str	r2, [r3, #0]
 800e688:	687b      	ldr	r3, [r7, #4]
 800e68a:	2200      	movs	r2, #0
 800e68c:	605a      	str	r2, [r3, #4]
 800e68e:	687b      	ldr	r3, [r7, #4]
 800e690:	2200      	movs	r2, #0
 800e692:	609a      	str	r2, [r3, #8]
	{ }
 800e694:	687b      	ldr	r3, [r7, #4]
 800e696:	4618      	mov	r0, r3
 800e698:	370c      	adds	r7, #12
 800e69a:	46bd      	mov	sp, r7
 800e69c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6a0:	4770      	bx	lr

0800e6a2 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 800e6a2:	b580      	push	{r7, lr}
 800e6a4:	b082      	sub	sp, #8
 800e6a6:	af00      	add	r7, sp, #0
 800e6a8:	6078      	str	r0, [r7, #4]
 800e6aa:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 800e6ac:	683b      	ldr	r3, [r7, #0]
 800e6ae:	2b00      	cmp	r3, #0
 800e6b0:	d006      	beq.n	800e6c0 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj+0x1e>
 800e6b2:	687b      	ldr	r3, [r7, #4]
 800e6b4:	6839      	ldr	r1, [r7, #0]
 800e6b6:	4618      	mov	r0, r3
 800e6b8:	f000 f87e 	bl	800e7b8 <_ZNSt16allocator_traitsISaIP10ExpressionEE8allocateERS2_j>
 800e6bc:	4603      	mov	r3, r0
 800e6be:	e000      	b.n	800e6c2 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj+0x20>
 800e6c0:	2300      	movs	r3, #0
      }
 800e6c2:	4618      	mov	r0, r3
 800e6c4:	3708      	adds	r7, #8
 800e6c6:	46bd      	mov	sp, r7
 800e6c8:	bd80      	pop	{r7, pc}

0800e6ca <_ZNSt16allocator_traitsISaIP10ExpressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800e6ca:	b580      	push	{r7, lr}
 800e6cc:	b084      	sub	sp, #16
 800e6ce:	af00      	add	r7, sp, #0
 800e6d0:	60f8      	str	r0, [r7, #12]
 800e6d2:	60b9      	str	r1, [r7, #8]
 800e6d4:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800e6d6:	687a      	ldr	r2, [r7, #4]
 800e6d8:	68b9      	ldr	r1, [r7, #8]
 800e6da:	68f8      	ldr	r0, [r7, #12]
 800e6dc:	f000 f87b 	bl	800e7d6 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE10deallocateEPS2_j>
 800e6e0:	bf00      	nop
 800e6e2:	3710      	adds	r7, #16
 800e6e4:	46bd      	mov	sp, r7
 800e6e6:	bd80      	pop	{r7, pc}

0800e6e8 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 800e6e8:	b580      	push	{r7, lr}
 800e6ea:	b084      	sub	sp, #16
 800e6ec:	af00      	add	r7, sp, #0
 800e6ee:	60f8      	str	r0, [r7, #12]
 800e6f0:	60b9      	str	r1, [r7, #8]
 800e6f2:	607a      	str	r2, [r7, #4]
        { return std::copy(__first, __last, __result); }
 800e6f4:	687a      	ldr	r2, [r7, #4]
 800e6f6:	68b9      	ldr	r1, [r7, #8]
 800e6f8:	68f8      	ldr	r0, [r7, #12]
 800e6fa:	f000 f878 	bl	800e7ee <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
 800e6fe:	4603      	mov	r3, r0
 800e700:	4618      	mov	r0, r3
 800e702:	3710      	adds	r7, #16
 800e704:	46bd      	mov	sp, r7
 800e706:	bd80      	pop	{r7, pc}

0800e708 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10ExpressionEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 800e708:	b480      	push	{r7}
 800e70a:	b083      	sub	sp, #12
 800e70c:	af00      	add	r7, sp, #0
 800e70e:	6078      	str	r0, [r7, #4]
 800e710:	6039      	str	r1, [r7, #0]
 800e712:	bf00      	nop
 800e714:	370c      	adds	r7, #12
 800e716:	46bd      	mov	sp, r7
 800e718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e71c:	4770      	bx	lr

0800e71e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 800e71e:	b480      	push	{r7}
 800e720:	b083      	sub	sp, #12
 800e722:	af00      	add	r7, sp, #0
 800e724:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800e726:	687b      	ldr	r3, [r7, #4]
 800e728:	4618      	mov	r0, r3
 800e72a:	370c      	adds	r7, #12
 800e72c:	46bd      	mov	sp, r7
 800e72e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e732:	4770      	bx	lr

0800e734 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE7destroyISH_EEvRSJ_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 800e734:	b580      	push	{r7, lr}
 800e736:	b082      	sub	sp, #8
 800e738:	af00      	add	r7, sp, #0
 800e73a:	6078      	str	r0, [r7, #4]
 800e73c:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 800e73e:	6839      	ldr	r1, [r7, #0]
 800e740:	6878      	ldr	r0, [r7, #4]
 800e742:	f000 f879 	bl	800e838 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE7destroyISI_EEvPT_>
 800e746:	bf00      	nop
 800e748:	3708      	adds	r7, #8
 800e74a:	46bd      	mov	sp, r7
 800e74c:	bd80      	pop	{r7, pc}

0800e74e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE10deallocateERSJ_PSI_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800e74e:	b580      	push	{r7, lr}
 800e750:	b084      	sub	sp, #16
 800e752:	af00      	add	r7, sp, #0
 800e754:	60f8      	str	r0, [r7, #12]
 800e756:	60b9      	str	r1, [r7, #8]
 800e758:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800e75a:	687a      	ldr	r2, [r7, #4]
 800e75c:	68b9      	ldr	r1, [r7, #8]
 800e75e:	68f8      	ldr	r0, [r7, #12]
 800e760:	f000 f876 	bl	800e850 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE10deallocateEPSJ_j>
 800e764:	bf00      	nop
 800e766:	3710      	adds	r7, #16
 800e768:	46bd      	mov	sp, r7
 800e76a:	bd80      	pop	{r7, pc}

0800e76c <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>:
      _M_valptr() const
 800e76c:	b580      	push	{r7, lr}
 800e76e:	b082      	sub	sp, #8
 800e770:	af00      	add	r7, sp, #0
 800e772:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 800e774:	687b      	ldr	r3, [r7, #4]
 800e776:	3310      	adds	r3, #16
 800e778:	4618      	mov	r0, r3
 800e77a:	f000 f875 	bl	800e868 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>
 800e77e:	4603      	mov	r3, r0
 800e780:	4618      	mov	r0, r3
 800e782:	3708      	adds	r7, #8
 800e784:	46bd      	mov	sp, r7
 800e786:	bd80      	pop	{r7, pc}

0800e788 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERKSG_>:
      operator()(const _Pair& __x) const
 800e788:	b480      	push	{r7}
 800e78a:	b083      	sub	sp, #12
 800e78c:	af00      	add	r7, sp, #0
 800e78e:	6078      	str	r0, [r7, #4]
 800e790:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 800e792:	683b      	ldr	r3, [r7, #0]
 800e794:	4618      	mov	r0, r3
 800e796:	370c      	adds	r7, #12
 800e798:	46bd      	mov	sp, r7
 800e79a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e79e:	4770      	bx	lr

0800e7a0 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1ERKS3_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 800e7a0:	b480      	push	{r7}
 800e7a2:	b083      	sub	sp, #12
 800e7a4:	af00      	add	r7, sp, #0
 800e7a6:	6078      	str	r0, [r7, #4]
 800e7a8:	6039      	str	r1, [r7, #0]
 800e7aa:	687b      	ldr	r3, [r7, #4]
 800e7ac:	4618      	mov	r0, r3
 800e7ae:	370c      	adds	r7, #12
 800e7b0:	46bd      	mov	sp, r7
 800e7b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7b6:	4770      	bx	lr

0800e7b8 <_ZNSt16allocator_traitsISaIP10ExpressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 800e7b8:	b580      	push	{r7, lr}
 800e7ba:	b082      	sub	sp, #8
 800e7bc:	af00      	add	r7, sp, #0
 800e7be:	6078      	str	r0, [r7, #4]
 800e7c0:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800e7c2:	2200      	movs	r2, #0
 800e7c4:	6839      	ldr	r1, [r7, #0]
 800e7c6:	6878      	ldr	r0, [r7, #4]
 800e7c8:	f000 f85a 	bl	800e880 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv>
 800e7cc:	4603      	mov	r3, r0
 800e7ce:	4618      	mov	r0, r3
 800e7d0:	3708      	adds	r7, #8
 800e7d2:	46bd      	mov	sp, r7
 800e7d4:	bd80      	pop	{r7, pc}

0800e7d6 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800e7d6:	b580      	push	{r7, lr}
 800e7d8:	b084      	sub	sp, #16
 800e7da:	af00      	add	r7, sp, #0
 800e7dc:	60f8      	str	r0, [r7, #12]
 800e7de:	60b9      	str	r1, [r7, #8]
 800e7e0:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800e7e2:	68b8      	ldr	r0, [r7, #8]
 800e7e4:	f013 fe48 	bl	8022478 <_ZdlPv>
      }
 800e7e8:	3710      	adds	r7, #16
 800e7ea:	46bd      	mov	sp, r7
 800e7ec:	bd80      	pop	{r7, pc}

0800e7ee <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
    copy(_II __first, _II __last, _OI __result)
 800e7ee:	b590      	push	{r4, r7, lr}
 800e7f0:	b085      	sub	sp, #20
 800e7f2:	af00      	add	r7, sp, #0
 800e7f4:	60f8      	str	r0, [r7, #12]
 800e7f6:	60b9      	str	r1, [r7, #8]
 800e7f8:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 800e7fa:	68f8      	ldr	r0, [r7, #12]
 800e7fc:	f000 f85f 	bl	800e8be <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>
 800e800:	4604      	mov	r4, r0
 800e802:	68b8      	ldr	r0, [r7, #8]
 800e804:	f000 f85b 	bl	800e8be <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>
 800e808:	4603      	mov	r3, r0
 800e80a:	687a      	ldr	r2, [r7, #4]
 800e80c:	4619      	mov	r1, r3
 800e80e:	4620      	mov	r0, r4
 800e810:	f000 f860 	bl	800e8d4 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_>
 800e814:	4603      	mov	r3, r0
    }
 800e816:	4618      	mov	r0, r3
 800e818:	3714      	adds	r7, #20
 800e81a:	46bd      	mov	sp, r7
 800e81c:	bd90      	pop	{r4, r7, pc}

0800e81e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>:
    struct pair
 800e81e:	b580      	push	{r7, lr}
 800e820:	b082      	sub	sp, #8
 800e822:	af00      	add	r7, sp, #0
 800e824:	6078      	str	r0, [r7, #4]
 800e826:	687b      	ldr	r3, [r7, #4]
 800e828:	4618      	mov	r0, r3
 800e82a:	f014 f8da 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800e82e:	687b      	ldr	r3, [r7, #4]
 800e830:	4618      	mov	r0, r3
 800e832:	3708      	adds	r7, #8
 800e834:	46bd      	mov	sp, r7
 800e836:	bd80      	pop	{r7, pc}

0800e838 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE7destroyISI_EEvPT_>:
	destroy(_Up* __p)
 800e838:	b580      	push	{r7, lr}
 800e83a:	b082      	sub	sp, #8
 800e83c:	af00      	add	r7, sp, #0
 800e83e:	6078      	str	r0, [r7, #4]
 800e840:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 800e842:	6838      	ldr	r0, [r7, #0]
 800e844:	f7ff ffeb 	bl	800e81e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>
 800e848:	bf00      	nop
 800e84a:	3708      	adds	r7, #8
 800e84c:	46bd      	mov	sp, r7
 800e84e:	bd80      	pop	{r7, pc}

0800e850 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE10deallocateEPSJ_j>:
      deallocate(pointer __p, size_type)
 800e850:	b580      	push	{r7, lr}
 800e852:	b084      	sub	sp, #16
 800e854:	af00      	add	r7, sp, #0
 800e856:	60f8      	str	r0, [r7, #12]
 800e858:	60b9      	str	r1, [r7, #8]
 800e85a:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800e85c:	68b8      	ldr	r0, [r7, #8]
 800e85e:	f013 fe0b 	bl	8022478 <_ZdlPv>
      }
 800e862:	3710      	adds	r7, #16
 800e864:	46bd      	mov	sp, r7
 800e866:	bd80      	pop	{r7, pc}

0800e868 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 800e868:	b580      	push	{r7, lr}
 800e86a:	b082      	sub	sp, #8
 800e86c:	af00      	add	r7, sp, #0
 800e86e:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 800e870:	6878      	ldr	r0, [r7, #4]
 800e872:	f000 f852 	bl	800e91a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>
 800e876:	4603      	mov	r3, r0
 800e878:	4618      	mov	r0, r3
 800e87a:	3708      	adds	r7, #8
 800e87c:	46bd      	mov	sp, r7
 800e87e:	bd80      	pop	{r7, pc}

0800e880 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 800e880:	b580      	push	{r7, lr}
 800e882:	b084      	sub	sp, #16
 800e884:	af00      	add	r7, sp, #0
 800e886:	60f8      	str	r0, [r7, #12]
 800e888:	60b9      	str	r1, [r7, #8]
 800e88a:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800e88c:	68f8      	ldr	r0, [r7, #12]
 800e88e:	f000 f84f 	bl	800e930 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>
 800e892:	4602      	mov	r2, r0
 800e894:	68bb      	ldr	r3, [r7, #8]
 800e896:	4293      	cmp	r3, r2
 800e898:	bf8c      	ite	hi
 800e89a:	2301      	movhi	r3, #1
 800e89c:	2300      	movls	r3, #0
 800e89e:	b2db      	uxtb	r3, r3
 800e8a0:	2b00      	cmp	r3, #0
 800e8a2:	d001      	beq.n	800e8a8 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 800e8a4:	f013 fec0 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 800e8a8:	68bb      	ldr	r3, [r7, #8]
 800e8aa:	009b      	lsls	r3, r3, #2
 800e8ac:	4618      	mov	r0, r3
 800e8ae:	f013 fdf6 	bl	802249e <_Znwj>
 800e8b2:	4603      	mov	r3, r0
 800e8b4:	bf00      	nop
      }
 800e8b6:	4618      	mov	r0, r3
 800e8b8:	3710      	adds	r7, #16
 800e8ba:	46bd      	mov	sp, r7
 800e8bc:	bd80      	pop	{r7, pc}

0800e8be <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>:
    __miter_base(_Iterator __it)
 800e8be:	b480      	push	{r7}
 800e8c0:	b083      	sub	sp, #12
 800e8c2:	af00      	add	r7, sp, #0
 800e8c4:	6078      	str	r0, [r7, #4]
    { return __it; }
 800e8c6:	687b      	ldr	r3, [r7, #4]
 800e8c8:	4618      	mov	r0, r3
 800e8ca:	370c      	adds	r7, #12
 800e8cc:	46bd      	mov	sp, r7
 800e8ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8d2:	4770      	bx	lr

0800e8d4 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 800e8d4:	b5b0      	push	{r4, r5, r7, lr}
 800e8d6:	b084      	sub	sp, #16
 800e8d8:	af00      	add	r7, sp, #0
 800e8da:	60f8      	str	r0, [r7, #12]
 800e8dc:	60b9      	str	r1, [r7, #8]
 800e8de:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 800e8e0:	68f8      	ldr	r0, [r7, #12]
 800e8e2:	f000 f831 	bl	800e948 <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>
 800e8e6:	4604      	mov	r4, r0
 800e8e8:	68b8      	ldr	r0, [r7, #8]
 800e8ea:	f000 f82d 	bl	800e948 <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>
 800e8ee:	4605      	mov	r5, r0
 800e8f0:	687b      	ldr	r3, [r7, #4]
 800e8f2:	4618      	mov	r0, r3
 800e8f4:	f000 f836 	bl	800e964 <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 800e8f8:	4603      	mov	r3, r0
 800e8fa:	461a      	mov	r2, r3
 800e8fc:	4629      	mov	r1, r5
 800e8fe:	4620      	mov	r0, r4
 800e900:	f000 f83b 	bl	800e97a <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>
 800e904:	4602      	mov	r2, r0
 800e906:	1d3b      	adds	r3, r7, #4
 800e908:	4611      	mov	r1, r2
 800e90a:	4618      	mov	r0, r3
 800e90c:	f000 f847 	bl	800e99e <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>
 800e910:	4603      	mov	r3, r0
    }
 800e912:	4618      	mov	r0, r3
 800e914:	3710      	adds	r7, #16
 800e916:	46bd      	mov	sp, r7
 800e918:	bdb0      	pop	{r4, r5, r7, pc}

0800e91a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>:
      _M_addr() const noexcept
 800e91a:	b480      	push	{r7}
 800e91c:	b083      	sub	sp, #12
 800e91e:	af00      	add	r7, sp, #0
 800e920:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 800e922:	687b      	ldr	r3, [r7, #4]
 800e924:	4618      	mov	r0, r3
 800e926:	370c      	adds	r7, #12
 800e928:	46bd      	mov	sp, r7
 800e92a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e92e:	4770      	bx	lr

0800e930 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 800e930:	b480      	push	{r7}
 800e932:	b083      	sub	sp, #12
 800e934:	af00      	add	r7, sp, #0
 800e936:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 800e938:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 800e93c:	4618      	mov	r0, r3
 800e93e:	370c      	adds	r7, #12
 800e940:	46bd      	mov	sp, r7
 800e942:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e946:	4770      	bx	lr

0800e948 <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 800e948:	b580      	push	{r7, lr}
 800e94a:	b082      	sub	sp, #8
 800e94c:	af00      	add	r7, sp, #0
 800e94e:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 800e950:	1d3b      	adds	r3, r7, #4
 800e952:	4618      	mov	r0, r3
 800e954:	f000 f82f 	bl	800e9b6 <_ZNK9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800e958:	4603      	mov	r3, r0
 800e95a:	681b      	ldr	r3, [r3, #0]
 800e95c:	4618      	mov	r0, r3
 800e95e:	3708      	adds	r7, #8
 800e960:	46bd      	mov	sp, r7
 800e962:	bd80      	pop	{r7, pc}

0800e964 <_ZSt12__niter_baseIPP10ExpressionET_S3_>:
    __niter_base(_Iterator __it)
 800e964:	b480      	push	{r7}
 800e966:	b083      	sub	sp, #12
 800e968:	af00      	add	r7, sp, #0
 800e96a:	6078      	str	r0, [r7, #4]
    { return __it; }
 800e96c:	687b      	ldr	r3, [r7, #4]
 800e96e:	4618      	mov	r0, r3
 800e970:	370c      	adds	r7, #12
 800e972:	46bd      	mov	sp, r7
 800e974:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e978:	4770      	bx	lr

0800e97a <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 800e97a:	b580      	push	{r7, lr}
 800e97c:	b086      	sub	sp, #24
 800e97e:	af00      	add	r7, sp, #0
 800e980:	60f8      	str	r0, [r7, #12]
 800e982:	60b9      	str	r1, [r7, #8]
 800e984:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 800e986:	2301      	movs	r3, #1
 800e988:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 800e98a:	687a      	ldr	r2, [r7, #4]
 800e98c:	68b9      	ldr	r1, [r7, #8]
 800e98e:	68f8      	ldr	r0, [r7, #12]
 800e990:	f000 f81c 	bl	800e9cc <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_>
 800e994:	4603      	mov	r3, r0
    }
 800e996:	4618      	mov	r0, r3
 800e998:	3718      	adds	r7, #24
 800e99a:	46bd      	mov	sp, r7
 800e99c:	bd80      	pop	{r7, pc}

0800e99e <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 800e99e:	b480      	push	{r7}
 800e9a0:	b083      	sub	sp, #12
 800e9a2:	af00      	add	r7, sp, #0
 800e9a4:	6078      	str	r0, [r7, #4]
 800e9a6:	6039      	str	r1, [r7, #0]
    { return __res; }
 800e9a8:	683b      	ldr	r3, [r7, #0]
 800e9aa:	4618      	mov	r0, r3
 800e9ac:	370c      	adds	r7, #12
 800e9ae:	46bd      	mov	sp, r7
 800e9b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9b4:	4770      	bx	lr

0800e9b6 <_ZNK9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800e9b6:	b480      	push	{r7}
 800e9b8:	b083      	sub	sp, #12
 800e9ba:	af00      	add	r7, sp, #0
 800e9bc:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800e9be:	687b      	ldr	r3, [r7, #4]
 800e9c0:	4618      	mov	r0, r3
 800e9c2:	370c      	adds	r7, #12
 800e9c4:	46bd      	mov	sp, r7
 800e9c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9ca:	4770      	bx	lr

0800e9cc <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 800e9cc:	b580      	push	{r7, lr}
 800e9ce:	b086      	sub	sp, #24
 800e9d0:	af00      	add	r7, sp, #0
 800e9d2:	60f8      	str	r0, [r7, #12]
 800e9d4:	60b9      	str	r1, [r7, #8]
 800e9d6:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 800e9d8:	68ba      	ldr	r2, [r7, #8]
 800e9da:	68fb      	ldr	r3, [r7, #12]
 800e9dc:	1ad3      	subs	r3, r2, r3
 800e9de:	109b      	asrs	r3, r3, #2
 800e9e0:	617b      	str	r3, [r7, #20]
	  if (_Num)
 800e9e2:	697b      	ldr	r3, [r7, #20]
 800e9e4:	2b00      	cmp	r3, #0
 800e9e6:	d006      	beq.n	800e9f6 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_+0x2a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 800e9e8:	697b      	ldr	r3, [r7, #20]
 800e9ea:	009b      	lsls	r3, r3, #2
 800e9ec:	461a      	mov	r2, r3
 800e9ee:	68f9      	ldr	r1, [r7, #12]
 800e9f0:	6878      	ldr	r0, [r7, #4]
 800e9f2:	f015 fa1d 	bl	8023e30 <memmove>
	  return __result + _Num;
 800e9f6:	697b      	ldr	r3, [r7, #20]
 800e9f8:	009b      	lsls	r3, r3, #2
 800e9fa:	687a      	ldr	r2, [r7, #4]
 800e9fc:	4413      	add	r3, r2
	}
 800e9fe:	4618      	mov	r0, r3
 800ea00:	3718      	adds	r7, #24
 800ea02:	46bd      	mov	sp, r7
 800ea04:	bd80      	pop	{r7, pc}
	...

0800ea08 <_Z41__static_initialization_and_destruction_0ii>:
 800ea08:	b590      	push	{r4, r7, lr}
 800ea0a:	b0e7      	sub	sp, #412	; 0x19c
 800ea0c:	af02      	add	r7, sp, #8
 800ea0e:	1d3b      	adds	r3, r7, #4
 800ea10:	6018      	str	r0, [r3, #0]
 800ea12:	463b      	mov	r3, r7
 800ea14:	6019      	str	r1, [r3, #0]
 800ea16:	1d3b      	adds	r3, r7, #4
 800ea18:	681b      	ldr	r3, [r3, #0]
 800ea1a:	2b01      	cmp	r3, #1
 800ea1c:	f040 819d 	bne.w	800ed5a <_Z41__static_initialization_and_destruction_0ii+0x352>
 800ea20:	463b      	mov	r3, r7
 800ea22:	681b      	ldr	r3, [r3, #0]
 800ea24:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ea28:	4293      	cmp	r3, r2
 800ea2a:	f040 8196 	bne.w	800ed5a <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800ea2e:	f107 0314 	add.w	r3, r7, #20
 800ea32:	4618      	mov	r0, r3
 800ea34:	2322      	movs	r3, #34	; 0x22
 800ea36:	461a      	mov	r2, r3
 800ea38:	2100      	movs	r1, #0
 800ea3a:	f015 fa13 	bl	8023e64 <memset>
 800ea3e:	f107 0314 	add.w	r3, r7, #20
 800ea42:	223a      	movs	r2, #58	; 0x3a
 800ea44:	701a      	strb	r2, [r3, #0]
 800ea46:	f107 0314 	add.w	r3, r7, #20
 800ea4a:	2201      	movs	r2, #1
 800ea4c:	705a      	strb	r2, [r3, #1]
 800ea4e:	f107 0314 	add.w	r3, r7, #20
 800ea52:	220a      	movs	r2, #10
 800ea54:	709a      	strb	r2, [r3, #2]
 800ea56:	f107 0314 	add.w	r3, r7, #20
 800ea5a:	220a      	movs	r2, #10
 800ea5c:	70da      	strb	r2, [r3, #3]
 800ea5e:	f107 0314 	add.w	r3, r7, #20
 800ea62:	222c      	movs	r2, #44	; 0x2c
 800ea64:	711a      	strb	r2, [r3, #4]
 800ea66:	f107 0314 	add.w	r3, r7, #20
 800ea6a:	220c      	movs	r2, #12
 800ea6c:	715a      	strb	r2, [r3, #5]
 800ea6e:	f107 0314 	add.w	r3, r7, #20
 800ea72:	222e      	movs	r2, #46	; 0x2e
 800ea74:	719a      	strb	r2, [r3, #6]
 800ea76:	f107 0314 	add.w	r3, r7, #20
 800ea7a:	220b      	movs	r2, #11
 800ea7c:	71da      	strb	r2, [r3, #7]
 800ea7e:	f107 0314 	add.w	r3, r7, #20
 800ea82:	225b      	movs	r2, #91	; 0x5b
 800ea84:	721a      	strb	r2, [r3, #8]
 800ea86:	f107 0314 	add.w	r3, r7, #20
 800ea8a:	220d      	movs	r2, #13
 800ea8c:	725a      	strb	r2, [r3, #9]
 800ea8e:	f107 0314 	add.w	r3, r7, #20
 800ea92:	225d      	movs	r2, #93	; 0x5d
 800ea94:	729a      	strb	r2, [r3, #10]
 800ea96:	f107 0314 	add.w	r3, r7, #20
 800ea9a:	220e      	movs	r2, #14
 800ea9c:	72da      	strb	r2, [r3, #11]
 800ea9e:	f107 0314 	add.w	r3, r7, #20
 800eaa2:	227c      	movs	r2, #124	; 0x7c
 800eaa4:	731a      	strb	r2, [r3, #12]
 800eaa6:	f107 0314 	add.w	r3, r7, #20
 800eaaa:	2215      	movs	r2, #21
 800eaac:	735a      	strb	r2, [r3, #13]
 800eaae:	f107 0314 	add.w	r3, r7, #20
 800eab2:	2226      	movs	r2, #38	; 0x26
 800eab4:	739a      	strb	r2, [r3, #14]
 800eab6:	f107 0314 	add.w	r3, r7, #20
 800eaba:	2216      	movs	r2, #22
 800eabc:	73da      	strb	r2, [r3, #15]
 800eabe:	f107 0314 	add.w	r3, r7, #20
 800eac2:	222b      	movs	r2, #43	; 0x2b
 800eac4:	741a      	strb	r2, [r3, #16]
 800eac6:	f107 0314 	add.w	r3, r7, #20
 800eaca:	221f      	movs	r2, #31
 800eacc:	745a      	strb	r2, [r3, #17]
 800eace:	f107 0314 	add.w	r3, r7, #20
 800ead2:	222d      	movs	r2, #45	; 0x2d
 800ead4:	749a      	strb	r2, [r3, #18]
 800ead6:	f107 0314 	add.w	r3, r7, #20
 800eada:	2220      	movs	r2, #32
 800eadc:	74da      	strb	r2, [r3, #19]
 800eade:	f107 0314 	add.w	r3, r7, #20
 800eae2:	222a      	movs	r2, #42	; 0x2a
 800eae4:	751a      	strb	r2, [r3, #20]
 800eae6:	f107 0314 	add.w	r3, r7, #20
 800eaea:	2221      	movs	r2, #33	; 0x21
 800eaec:	755a      	strb	r2, [r3, #21]
 800eaee:	f107 0314 	add.w	r3, r7, #20
 800eaf2:	222f      	movs	r2, #47	; 0x2f
 800eaf4:	759a      	strb	r2, [r3, #22]
 800eaf6:	f107 0314 	add.w	r3, r7, #20
 800eafa:	2222      	movs	r2, #34	; 0x22
 800eafc:	75da      	strb	r2, [r3, #23]
 800eafe:	f107 0314 	add.w	r3, r7, #20
 800eb02:	225e      	movs	r2, #94	; 0x5e
 800eb04:	761a      	strb	r2, [r3, #24]
 800eb06:	f107 0314 	add.w	r3, r7, #20
 800eb0a:	2223      	movs	r2, #35	; 0x23
 800eb0c:	765a      	strb	r2, [r3, #25]
 800eb0e:	f107 0314 	add.w	r3, r7, #20
 800eb12:	2225      	movs	r2, #37	; 0x25
 800eb14:	769a      	strb	r2, [r3, #26]
 800eb16:	f107 0314 	add.w	r3, r7, #20
 800eb1a:	2224      	movs	r2, #36	; 0x24
 800eb1c:	76da      	strb	r2, [r3, #27]
 800eb1e:	f107 0314 	add.w	r3, r7, #20
 800eb22:	2228      	movs	r2, #40	; 0x28
 800eb24:	771a      	strb	r2, [r3, #28]
 800eb26:	f107 0314 	add.w	r3, r7, #20
 800eb2a:	2226      	movs	r2, #38	; 0x26
 800eb2c:	775a      	strb	r2, [r3, #29]
 800eb2e:	f107 0314 	add.w	r3, r7, #20
 800eb32:	2229      	movs	r2, #41	; 0x29
 800eb34:	779a      	strb	r2, [r3, #30]
 800eb36:	f107 0314 	add.w	r3, r7, #20
 800eb3a:	2227      	movs	r2, #39	; 0x27
 800eb3c:	77da      	strb	r2, [r3, #31]
 800eb3e:	f107 0314 	add.w	r3, r7, #20
 800eb42:	2225      	movs	r2, #37	; 0x25
 800eb44:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800eb48:	f107 030c 	add.w	r3, r7, #12
 800eb4c:	f107 0214 	add.w	r2, r7, #20
 800eb50:	601a      	str	r2, [r3, #0]
 800eb52:	f107 030c 	add.w	r3, r7, #12
 800eb56:	2211      	movs	r2, #17
 800eb58:	605a      	str	r2, [r3, #4]
 800eb5a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800eb5e:	4618      	mov	r0, r3
 800eb60:	f7f2 ff8c 	bl	8001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800eb64:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800eb68:	f107 020c 	add.w	r2, r7, #12
 800eb6c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800eb70:	9300      	str	r3, [sp, #0]
 800eb72:	460b      	mov	r3, r1
 800eb74:	ca06      	ldmia	r2, {r1, r2}
 800eb76:	4885      	ldr	r0, [pc, #532]	; (800ed8c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800eb78:	f7f2 ff98 	bl	8001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800eb7c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800eb80:	4618      	mov	r0, r3
 800eb82:	f7f2 ff87 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800eb86:	2305      	movs	r3, #5
 800eb88:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800eb8c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800eb90:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800eb94:	497e      	ldr	r1, [pc, #504]	; (800ed90 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800eb96:	4618      	mov	r0, r3
 800eb98:	f7f2 faae 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800eb9c:	2306      	movs	r3, #6
 800eb9e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800eba2:	f207 1263 	addw	r2, r7, #355	; 0x163
 800eba6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ebaa:	331c      	adds	r3, #28
 800ebac:	4979      	ldr	r1, [pc, #484]	; (800ed94 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800ebae:	4618      	mov	r0, r3
 800ebb0:	f7f2 faca 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800ebb4:	2307      	movs	r3, #7
 800ebb6:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800ebba:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800ebbe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ebc2:	3338      	adds	r3, #56	; 0x38
 800ebc4:	4974      	ldr	r1, [pc, #464]	; (800ed98 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800ebc6:	4618      	mov	r0, r3
 800ebc8:	f7f2 fabe 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800ebcc:	2308      	movs	r3, #8
 800ebce:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800ebd2:	f207 1265 	addw	r2, r7, #357	; 0x165
 800ebd6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ebda:	3354      	adds	r3, #84	; 0x54
 800ebdc:	496f      	ldr	r1, [pc, #444]	; (800ed9c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800ebde:	4618      	mov	r0, r3
 800ebe0:	f7f2 fa8a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800ebe4:	2309      	movs	r3, #9
 800ebe6:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800ebea:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800ebee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ebf2:	3370      	adds	r3, #112	; 0x70
 800ebf4:	496a      	ldr	r1, [pc, #424]	; (800eda0 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800ebf6:	4618      	mov	r0, r3
 800ebf8:	f7f2 face 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800ebfc:	2310      	movs	r3, #16
 800ebfe:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800ec02:	f207 1267 	addw	r2, r7, #359	; 0x167
 800ec06:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec0a:	338c      	adds	r3, #140	; 0x8c
 800ec0c:	4965      	ldr	r1, [pc, #404]	; (800eda4 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800ec0e:	4618      	mov	r0, r3
 800ec10:	f7f2 faea 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800ec14:	2311      	movs	r3, #17
 800ec16:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800ec1a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800ec1e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec22:	33a8      	adds	r3, #168	; 0xa8
 800ec24:	4960      	ldr	r1, [pc, #384]	; (800eda8 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800ec26:	4618      	mov	r0, r3
 800ec28:	f7f2 fab6 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800ec2c:	2312      	movs	r3, #18
 800ec2e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800ec32:	f207 1269 	addw	r2, r7, #361	; 0x169
 800ec36:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec3a:	33c4      	adds	r3, #196	; 0xc4
 800ec3c:	495b      	ldr	r1, [pc, #364]	; (800edac <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800ec3e:	4618      	mov	r0, r3
 800ec40:	f7f2 fa5a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800ec44:	2313      	movs	r3, #19
 800ec46:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800ec4a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800ec4e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec52:	33e0      	adds	r3, #224	; 0xe0
 800ec54:	4956      	ldr	r1, [pc, #344]	; (800edb0 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800ec56:	4618      	mov	r0, r3
 800ec58:	f7f2 fa76 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800ec5c:	2314      	movs	r3, #20
 800ec5e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800ec62:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800ec66:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec6a:	33fc      	adds	r3, #252	; 0xfc
 800ec6c:	4951      	ldr	r1, [pc, #324]	; (800edb4 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800ec6e:	4618      	mov	r0, r3
 800ec70:	f7f2 fae2 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800ec74:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ec78:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800ec7c:	601a      	str	r2, [r3, #0]
 800ec7e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ec82:	220a      	movs	r2, #10
 800ec84:	605a      	str	r2, [r3, #4]
 800ec86:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ec8a:	4618      	mov	r0, r3
 800ec8c:	f7f2 ff9b 	bl	8001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800ec90:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800ec94:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800ec98:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ec9c:	9300      	str	r3, [sp, #0]
 800ec9e:	460b      	mov	r3, r1
 800eca0:	ca06      	ldmia	r2, {r1, r2}
 800eca2:	4845      	ldr	r0, [pc, #276]	; (800edb8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800eca4:	f7f2 ffa7 	bl	8001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800eca8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ecac:	4618      	mov	r0, r3
 800ecae:	f7f2 ff96 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800ecb2:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800ecb6:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800ecba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ecbe:	429c      	cmp	r4, r3
 800ecc0:	d004      	beq.n	800eccc <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800ecc2:	3c1c      	subs	r4, #28
 800ecc4:	4620      	mov	r0, r4
 800ecc6:	f7f2 fa0a 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800ecca:	e7f6      	b.n	800ecba <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800eccc:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800ecd0:	2200      	movs	r2, #0
 800ecd2:	601a      	str	r2, [r3, #0]
 800ecd4:	605a      	str	r2, [r3, #4]
 800ecd6:	609a      	str	r2, [r3, #8]
 800ecd8:	233c      	movs	r3, #60	; 0x3c
 800ecda:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800ecde:	231b      	movs	r3, #27
 800ece0:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800ece4:	231c      	movs	r3, #28
 800ece6:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800ecea:	233e      	movs	r3, #62	; 0x3e
 800ecec:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800ecf0:	2319      	movs	r3, #25
 800ecf2:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800ecf6:	231a      	movs	r3, #26
 800ecf8:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800ecfc:	233d      	movs	r3, #61	; 0x3d
 800ecfe:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800ed02:	2318      	movs	r3, #24
 800ed04:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800ed08:	231d      	movs	r3, #29
 800ed0a:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800ed0e:	2321      	movs	r3, #33	; 0x21
 800ed10:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800ed14:	2317      	movs	r3, #23
 800ed16:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800ed1a:	231e      	movs	r3, #30
 800ed1c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800ed20:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800ed24:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800ed28:	2304      	movs	r3, #4
 800ed2a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800ed2e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800ed32:	4618      	mov	r0, r3
 800ed34:	f7f2 ff8f 	bl	8001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800ed38:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800ed3c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800ed40:	9300      	str	r3, [sp, #0]
 800ed42:	4613      	mov	r3, r2
 800ed44:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800ed48:	ca06      	ldmia	r2, {r1, r2}
 800ed4a:	481c      	ldr	r0, [pc, #112]	; (800edbc <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800ed4c:	f7f2 ff9b 	bl	8001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800ed50:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800ed54:	4618      	mov	r0, r3
 800ed56:	f7f2 ff8a 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800ed5a:	1d3b      	adds	r3, r7, #4
 800ed5c:	681b      	ldr	r3, [r3, #0]
 800ed5e:	2b00      	cmp	r3, #0
 800ed60:	d10e      	bne.n	800ed80 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800ed62:	463b      	mov	r3, r7
 800ed64:	681b      	ldr	r3, [r3, #0]
 800ed66:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ed6a:	4293      	cmp	r3, r2
 800ed6c:	d108      	bne.n	800ed80 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800ed6e:	4813      	ldr	r0, [pc, #76]	; (800edbc <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800ed70:	f7fa fc1b 	bl	80095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800ed74:	4810      	ldr	r0, [pc, #64]	; (800edb8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800ed76:	f7fa fc25 	bl	80095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800ed7a:	4804      	ldr	r0, [pc, #16]	; (800ed8c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800ed7c:	f7fa fc2f 	bl	80095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800ed80:	bf00      	nop
 800ed82:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800ed86:	46bd      	mov	sp, r7
 800ed88:	bd90      	pop	{r4, r7, pc}
 800ed8a:	bf00      	nop
 800ed8c:	200002ec 	.word	0x200002ec
 800ed90:	080273e8 	.word	0x080273e8
 800ed94:	080273f0 	.word	0x080273f0
 800ed98:	080273f8 	.word	0x080273f8
 800ed9c:	08027400 	.word	0x08027400
 800eda0:	08027408 	.word	0x08027408
 800eda4:	08027410 	.word	0x08027410
 800eda8:	08027414 	.word	0x08027414
 800edac:	0802741c 	.word	0x0802741c
 800edb0:	08027424 	.word	0x08027424
 800edb4:	0802742c 	.word	0x0802742c
 800edb8:	20000304 	.word	0x20000304
 800edbc:	2000031c 	.word	0x2000031c

0800edc0 <_GLOBAL__sub_I__ZN16Function_handler12run_functionEP13Function_call>:
 800edc0:	b580      	push	{r7, lr}
 800edc2:	af00      	add	r7, sp, #0
 800edc4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800edc8:	2001      	movs	r0, #1
 800edca:	f7ff fe1d 	bl	800ea08 <_Z41__static_initialization_and_destruction_0ii>
 800edce:	bd80      	pop	{r7, pc}

0800edd0 <_GLOBAL__sub_D__ZN16Function_handler12run_functionEP13Function_call>:
 800edd0:	b580      	push	{r7, lr}
 800edd2:	af00      	add	r7, sp, #0
 800edd4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800edd8:	2000      	movs	r0, #0
 800edda:	f7ff fe15 	bl	800ea08 <_Z41__static_initialization_and_destruction_0ii>
 800edde:	bd80      	pop	{r7, pc}

0800ede0 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji>:

#if _GLIBCXX_USE_C99_STDLIB
  // 21.4 Numeric Conversions [string.conversions].
  inline int
  stoi(const string& __str, size_t* __idx = 0, int __base = 10)
  { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
 800ede0:	b580      	push	{r7, lr}
 800ede2:	b086      	sub	sp, #24
 800ede4:	af02      	add	r7, sp, #8
 800ede6:	60f8      	str	r0, [r7, #12]
 800ede8:	60b9      	str	r1, [r7, #8]
 800edea:	607a      	str	r2, [r7, #4]
 800edec:	68f8      	ldr	r0, [r7, #12]
 800edee:	f013 ff97 	bl	8022d20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800edf2:	4602      	mov	r2, r0
 800edf4:	687b      	ldr	r3, [r7, #4]
 800edf6:	9300      	str	r3, [sp, #0]
 800edf8:	68bb      	ldr	r3, [r7, #8]
 800edfa:	4904      	ldr	r1, [pc, #16]	; (800ee0c <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji+0x2c>)
 800edfc:	4804      	ldr	r0, [pc, #16]	; (800ee10 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji+0x30>)
 800edfe:	f000 fd18 	bl	800f832 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>
 800ee02:	4603      	mov	r3, r0
					__idx, __base); }
 800ee04:	4618      	mov	r0, r3
 800ee06:	3710      	adds	r7, #16
 800ee08:	46bd      	mov	sp, r7
 800ee0a:	bd80      	pop	{r7, pc}
 800ee0c:	08027430 	.word	0x08027430
 800ee10:	08024e79 	.word	0x08024e79

0800ee14 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>:
			     __idx, __base); }

  // NB: strtof vs strtod.
  inline float
  stof(const string& __str, size_t* __idx = 0)
  { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
 800ee14:	b580      	push	{r7, lr}
 800ee16:	b082      	sub	sp, #8
 800ee18:	af00      	add	r7, sp, #0
 800ee1a:	6078      	str	r0, [r7, #4]
 800ee1c:	6039      	str	r1, [r7, #0]
 800ee1e:	6878      	ldr	r0, [r7, #4]
 800ee20:	f013 ff7e 	bl	8022d20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800ee24:	4602      	mov	r2, r0
 800ee26:	683b      	ldr	r3, [r7, #0]
 800ee28:	4905      	ldr	r1, [pc, #20]	; (800ee40 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj+0x2c>)
 800ee2a:	4806      	ldr	r0, [pc, #24]	; (800ee44 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj+0x30>)
 800ee2c:	f000 fd81 	bl	800f932 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>
 800ee30:	eef0 7a40 	vmov.f32	s15, s0
 800ee34:	eeb0 0a67 	vmov.f32	s0, s15
 800ee38:	3708      	adds	r7, #8
 800ee3a:	46bd      	mov	sp, r7
 800ee3c:	bd80      	pop	{r7, pc}
 800ee3e:	bf00      	nop
 800ee40:	08027438 	.word	0x08027438
 800ee44:	08024cbd 	.word	0x08024cbd

0800ee48 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 800ee48:	b580      	push	{r7, lr}
 800ee4a:	b082      	sub	sp, #8
 800ee4c:	af00      	add	r7, sp, #0
 800ee4e:	6078      	str	r0, [r7, #4]
 800ee50:	687b      	ldr	r3, [r7, #4]
 800ee52:	4618      	mov	r0, r3
 800ee54:	f000 fe0e 	bl	800fa74 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800ee58:	687b      	ldr	r3, [r7, #4]
 800ee5a:	4618      	mov	r0, r3
 800ee5c:	3708      	adds	r7, #8
 800ee5e:	46bd      	mov	sp, r7
 800ee60:	bd80      	pop	{r7, pc}

0800ee62 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 800ee62:	b580      	push	{r7, lr}
 800ee64:	b082      	sub	sp, #8
 800ee66:	af00      	add	r7, sp, #0
 800ee68:	6078      	str	r0, [r7, #4]
 800ee6a:	687b      	ldr	r3, [r7, #4]
 800ee6c:	4618      	mov	r0, r3
 800ee6e:	f7ff ffeb 	bl	800ee48 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800ee72:	687b      	ldr	r3, [r7, #4]
 800ee74:	4618      	mov	r0, r3
 800ee76:	3708      	adds	r7, #8
 800ee78:	46bd      	mov	sp, r7
 800ee7a:	bd80      	pop	{r7, pc}

0800ee7c <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 800ee7c:	b580      	push	{r7, lr}
 800ee7e:	b082      	sub	sp, #8
 800ee80:	af00      	add	r7, sp, #0
 800ee82:	6078      	str	r0, [r7, #4]
 800ee84:	687b      	ldr	r3, [r7, #4]
 800ee86:	4618      	mov	r0, r3
 800ee88:	f7ff ffeb 	bl	800ee62 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800ee8c:	687b      	ldr	r3, [r7, #4]
 800ee8e:	4618      	mov	r0, r3
 800ee90:	3708      	adds	r7, #8
 800ee92:	46bd      	mov	sp, r7
 800ee94:	bd80      	pop	{r7, pc}

0800ee96 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 800ee96:	b580      	push	{r7, lr}
 800ee98:	b082      	sub	sp, #8
 800ee9a:	af00      	add	r7, sp, #0
 800ee9c:	6078      	str	r0, [r7, #4]
 800ee9e:	687b      	ldr	r3, [r7, #4]
 800eea0:	4618      	mov	r0, r3
 800eea2:	f7ff ffeb 	bl	800ee7c <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800eea6:	687b      	ldr	r3, [r7, #4]
 800eea8:	4618      	mov	r0, r3
 800eeaa:	3708      	adds	r7, #8
 800eeac:	46bd      	mov	sp, r7
 800eeae:	bd80      	pop	{r7, pc}

0800eeb0 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 800eeb0:	b580      	push	{r7, lr}
 800eeb2:	b082      	sub	sp, #8
 800eeb4:	af00      	add	r7, sp, #0
 800eeb6:	6078      	str	r0, [r7, #4]
 800eeb8:	687b      	ldr	r3, [r7, #4]
 800eeba:	4618      	mov	r0, r3
 800eebc:	f7ff ffeb 	bl	800ee96 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800eec0:	687b      	ldr	r3, [r7, #4]
 800eec2:	4618      	mov	r0, r3
 800eec4:	3708      	adds	r7, #8
 800eec6:	46bd      	mov	sp, r7
 800eec8:	bd80      	pop	{r7, pc}

0800eeca <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      variant() = default;
 800eeca:	b580      	push	{r7, lr}
 800eecc:	b082      	sub	sp, #8
 800eece:	af00      	add	r7, sp, #0
 800eed0:	6078      	str	r0, [r7, #4]
 800eed2:	687b      	ldr	r3, [r7, #4]
 800eed4:	4618      	mov	r0, r3
 800eed6:	f000 fdc0 	bl	800fa5a <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 800eeda:	687b      	ldr	r3, [r7, #4]
 800eedc:	4618      	mov	r0, r3
 800eede:	3708      	adds	r7, #8
 800eee0:	46bd      	mov	sp, r7
 800eee2:	bd80      	pop	{r7, pc}

0800eee4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
      ~variant() = default;
 800eee4:	b580      	push	{r7, lr}
 800eee6:	b082      	sub	sp, #8
 800eee8:	af00      	add	r7, sp, #0
 800eeea:	6078      	str	r0, [r7, #4]
 800eeec:	687b      	ldr	r3, [r7, #4]
 800eeee:	4618      	mov	r0, r3
 800eef0:	f7ff ffde 	bl	800eeb0 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800eef4:	687b      	ldr	r3, [r7, #4]
 800eef6:	4618      	mov	r0, r3
 800eef8:	3708      	adds	r7, #8
 800eefa:	46bd      	mov	sp, r7
 800eefc:	bd80      	pop	{r7, pc}

0800eefe <_ZN5TokenC1Ev>:
#include <string>
#include "token_types.h"

typedef std::variant<std::string, int, float, bool> token_value;

class Token
 800eefe:	b580      	push	{r7, lr}
 800ef00:	b082      	sub	sp, #8
 800ef02:	af00      	add	r7, sp, #0
 800ef04:	6078      	str	r0, [r7, #4]
 800ef06:	687b      	ldr	r3, [r7, #4]
 800ef08:	3304      	adds	r3, #4
 800ef0a:	4618      	mov	r0, r3
 800ef0c:	f7ff ffdd 	bl	800eeca <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 800ef10:	687b      	ldr	r3, [r7, #4]
 800ef12:	4618      	mov	r0, r3
 800ef14:	3708      	adds	r7, #8
 800ef16:	46bd      	mov	sp, r7
 800ef18:	bd80      	pop	{r7, pc}

0800ef1a <_ZN5TokenD1Ev>:
 800ef1a:	b580      	push	{r7, lr}
 800ef1c:	b082      	sub	sp, #8
 800ef1e:	af00      	add	r7, sp, #0
 800ef20:	6078      	str	r0, [r7, #4]
 800ef22:	687b      	ldr	r3, [r7, #4]
 800ef24:	3304      	adds	r3, #4
 800ef26:	4618      	mov	r0, r3
 800ef28:	f7ff ffdc 	bl	800eee4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800ef2c:	687b      	ldr	r3, [r7, #4]
 800ef2e:	4618      	mov	r0, r3
 800ef30:	3708      	adds	r7, #8
 800ef32:	46bd      	mov	sp, r7
 800ef34:	bd80      	pop	{r7, pc}

0800ef36 <_ZN5LexerC1Ev>:
#include <Lexer.h>

Lexer::Lexer()
 800ef36:	b580      	push	{r7, lr}
 800ef38:	b082      	sub	sp, #8
 800ef3a:	af00      	add	r7, sp, #0
 800ef3c:	6078      	str	r0, [r7, #4]
 800ef3e:	687b      	ldr	r3, [r7, #4]
 800ef40:	3304      	adds	r3, #4
 800ef42:	4618      	mov	r0, r3
 800ef44:	f7ff ffdb 	bl	800eefe <_ZN5TokenC1Ev>
{
	// needs to start with whitespace in buffer
	char_buffer = ' ';
 800ef48:	687b      	ldr	r3, [r7, #4]
 800ef4a:	2220      	movs	r2, #32
 800ef4c:	701a      	strb	r2, [r3, #0]
}
 800ef4e:	687b      	ldr	r3, [r7, #4]
 800ef50:	4618      	mov	r0, r3
 800ef52:	3708      	adds	r7, #8
 800ef54:	46bd      	mov	sp, r7
 800ef56:	bd80      	pop	{r7, pc}

0800ef58 <_ZN5Lexer17match_single_charEv>:

bool Lexer::match_single_char()
{
 800ef58:	b580      	push	{r7, lr}
 800ef5a:	b084      	sub	sp, #16
 800ef5c:	af00      	add	r7, sp, #0
 800ef5e:	6078      	str	r0, [r7, #4]
	auto result = token_chars.find(char_buffer);
 800ef60:	687b      	ldr	r3, [r7, #4]
 800ef62:	4619      	mov	r1, r3
 800ef64:	4815      	ldr	r0, [pc, #84]	; (800efbc <_ZN5Lexer17match_single_charEv+0x64>)
 800ef66:	f000 fd91 	bl	800fa8c <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>
 800ef6a:	4603      	mov	r3, r0
 800ef6c:	60bb      	str	r3, [r7, #8]
	if (result != token_chars.end())
 800ef6e:	4813      	ldr	r0, [pc, #76]	; (800efbc <_ZN5Lexer17match_single_charEv+0x64>)
 800ef70:	f000 fd9b 	bl	800faaa <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE3endEv>
 800ef74:	4603      	mov	r3, r0
 800ef76:	60fb      	str	r3, [r7, #12]
 800ef78:	f107 020c 	add.w	r2, r7, #12
 800ef7c:	f107 0308 	add.w	r3, r7, #8
 800ef80:	4611      	mov	r1, r2
 800ef82:	4618      	mov	r0, r3
 800ef84:	f000 fd9e 	bl	800fac4 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>
 800ef88:	4603      	mov	r3, r0
 800ef8a:	2b00      	cmp	r3, #0
 800ef8c:	d010      	beq.n	800efb0 <_ZN5Lexer17match_single_charEv+0x58>
	{
		product.type = result->second;
 800ef8e:	f107 0308 	add.w	r3, r7, #8
 800ef92:	4618      	mov	r0, r3
 800ef94:	f000 fdaa 	bl	800faec <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEptEv>
 800ef98:	4603      	mov	r3, r0
 800ef9a:	785a      	ldrb	r2, [r3, #1]
 800ef9c:	687b      	ldr	r3, [r7, #4]
 800ef9e:	711a      	strb	r2, [r3, #4]
		char_buffer = Transmitter::receive_code_char();
 800efa0:	f009 fbfc 	bl	801879c <_ZN11Transmitter17receive_code_charEv>
 800efa4:	4603      	mov	r3, r0
 800efa6:	461a      	mov	r2, r3
 800efa8:	687b      	ldr	r3, [r7, #4]
 800efaa:	701a      	strb	r2, [r3, #0]
		return true;
 800efac:	2301      	movs	r3, #1
 800efae:	e000      	b.n	800efb2 <_ZN5Lexer17match_single_charEv+0x5a>
	}
	return false;
 800efb0:	2300      	movs	r3, #0
}
 800efb2:	4618      	mov	r0, r3
 800efb4:	3710      	adds	r7, #16
 800efb6:	46bd      	mov	sp, r7
 800efb8:	bd80      	pop	{r7, pc}
 800efba:	bf00      	nop
 800efbc:	20000350 	.word	0x20000350

0800efc0 <_ZN5Lexer17match_double_charEv>:

bool Lexer::match_double_char()
{
 800efc0:	b580      	push	{r7, lr}
 800efc2:	b084      	sub	sp, #16
 800efc4:	af00      	add	r7, sp, #0
 800efc6:	6078      	str	r0, [r7, #4]
	auto result = token_double_chars.find(char_buffer);
 800efc8:	687b      	ldr	r3, [r7, #4]
 800efca:	4619      	mov	r1, r3
 800efcc:	481f      	ldr	r0, [pc, #124]	; (800f04c <_ZN5Lexer17match_double_charEv+0x8c>)
 800efce:	f000 fd9b 	bl	800fb08 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>
 800efd2:	4603      	mov	r3, r0
 800efd4:	60bb      	str	r3, [r7, #8]
	if (result != token_double_chars.end())
 800efd6:	481d      	ldr	r0, [pc, #116]	; (800f04c <_ZN5Lexer17match_double_charEv+0x8c>)
 800efd8:	f000 fda5 	bl	800fb26 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE3endEv>
 800efdc:	4603      	mov	r3, r0
 800efde:	60fb      	str	r3, [r7, #12]
 800efe0:	f107 020c 	add.w	r2, r7, #12
 800efe4:	f107 0308 	add.w	r3, r7, #8
 800efe8:	4611      	mov	r1, r2
 800efea:	4618      	mov	r0, r3
 800efec:	f000 fda8 	bl	800fb40 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>
 800eff0:	4603      	mov	r3, r0
 800eff2:	2b00      	cmp	r3, #0
 800eff4:	d024      	beq.n	800f040 <_ZN5Lexer17match_double_charEv+0x80>
	{
		char_buffer = Transmitter::receive_code_char();
 800eff6:	f009 fbd1 	bl	801879c <_ZN11Transmitter17receive_code_charEv>
 800effa:	4603      	mov	r3, r0
 800effc:	461a      	mov	r2, r3
 800effe:	687b      	ldr	r3, [r7, #4]
 800f000:	701a      	strb	r2, [r3, #0]
		if (char_buffer == '=')
 800f002:	687b      	ldr	r3, [r7, #4]
 800f004:	781b      	ldrb	r3, [r3, #0]
 800f006:	2b3d      	cmp	r3, #61	; 0x3d
 800f008:	d10f      	bne.n	800f02a <_ZN5Lexer17match_double_charEv+0x6a>
		{
			product.type = result->second.double_char;
 800f00a:	f107 0308 	add.w	r3, r7, #8
 800f00e:	4618      	mov	r0, r3
 800f010:	f000 fdaa 	bl	800fb68 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>
 800f014:	4603      	mov	r3, r0
 800f016:	789a      	ldrb	r2, [r3, #2]
 800f018:	687b      	ldr	r3, [r7, #4]
 800f01a:	711a      	strb	r2, [r3, #4]
			char_buffer = Transmitter::receive_code_char();
 800f01c:	f009 fbbe 	bl	801879c <_ZN11Transmitter17receive_code_charEv>
 800f020:	4603      	mov	r3, r0
 800f022:	461a      	mov	r2, r3
 800f024:	687b      	ldr	r3, [r7, #4]
 800f026:	701a      	strb	r2, [r3, #0]
 800f028:	e008      	b.n	800f03c <_ZN5Lexer17match_double_charEv+0x7c>
		}
		else
		{
			product.type = result->second.single_char;
 800f02a:	f107 0308 	add.w	r3, r7, #8
 800f02e:	4618      	mov	r0, r3
 800f030:	f000 fd9a 	bl	800fb68 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>
 800f034:	4603      	mov	r3, r0
 800f036:	785a      	ldrb	r2, [r3, #1]
 800f038:	687b      	ldr	r3, [r7, #4]
 800f03a:	711a      	strb	r2, [r3, #4]
		}
		return true;
 800f03c:	2301      	movs	r3, #1
 800f03e:	e000      	b.n	800f042 <_ZN5Lexer17match_double_charEv+0x82>
	}
	return false;
 800f040:	2300      	movs	r3, #0
}
 800f042:	4618      	mov	r0, r3
 800f044:	3710      	adds	r7, #16
 800f046:	46bd      	mov	sp, r7
 800f048:	bd80      	pop	{r7, pc}
 800f04a:	bf00      	nop
 800f04c:	20000380 	.word	0x20000380

0800f050 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_word(std::string &word)
{
 800f050:	b580      	push	{r7, lr}
 800f052:	b082      	sub	sp, #8
 800f054:	af00      	add	r7, sp, #0
 800f056:	6078      	str	r0, [r7, #4]
 800f058:	6039      	str	r1, [r7, #0]
	do
	{
		word.push_back(char_buffer);
 800f05a:	687b      	ldr	r3, [r7, #4]
 800f05c:	781b      	ldrb	r3, [r3, #0]
 800f05e:	4619      	mov	r1, r3
 800f060:	6838      	ldr	r0, [r7, #0]
 800f062:	f013 fd35 	bl	8022ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
		char_buffer = Transmitter::receive_code_char();
 800f066:	f009 fb99 	bl	801879c <_ZN11Transmitter17receive_code_charEv>
 800f06a:	4603      	mov	r3, r0
 800f06c:	461a      	mov	r2, r3
 800f06e:	687b      	ldr	r3, [r7, #4]
 800f070:	701a      	strb	r2, [r3, #0]
	} while (isalnum(char_buffer) || char_buffer == '_');
 800f072:	687b      	ldr	r3, [r7, #4]
 800f074:	781b      	ldrb	r3, [r3, #0]
 800f076:	4618      	mov	r0, r3
 800f078:	f014 fe7c 	bl	8023d74 <isalnum>
 800f07c:	4603      	mov	r3, r0
 800f07e:	2b00      	cmp	r3, #0
 800f080:	d1eb      	bne.n	800f05a <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
 800f082:	687b      	ldr	r3, [r7, #4]
 800f084:	781b      	ldrb	r3, [r3, #0]
 800f086:	2b5f      	cmp	r3, #95	; 0x5f
 800f088:	d100      	bne.n	800f08c <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3c>
	do
 800f08a:	e7e6      	b.n	800f05a <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
}
 800f08c:	bf00      	nop
 800f08e:	3708      	adds	r7, #8
 800f090:	46bd      	mov	sp, r7
 800f092:	bd80      	pop	{r7, pc}

0800f094 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_keyword_or_id(std::string &word)
{
 800f094:	b580      	push	{r7, lr}
 800f096:	b08a      	sub	sp, #40	; 0x28
 800f098:	af00      	add	r7, sp, #0
 800f09a:	6078      	str	r0, [r7, #4]
 800f09c:	6039      	str	r1, [r7, #0]
	auto result = token_strings.find(word);
 800f09e:	6839      	ldr	r1, [r7, #0]
 800f0a0:	481c      	ldr	r0, [pc, #112]	; (800f114 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 800f0a2:	f000 fd6f 	bl	800fb84 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 800f0a6:	4603      	mov	r3, r0
 800f0a8:	60bb      	str	r3, [r7, #8]
	if (result != token_strings.end())
 800f0aa:	481a      	ldr	r0, [pc, #104]	; (800f114 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 800f0ac:	f000 fd79 	bl	800fba2 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 800f0b0:	4603      	mov	r3, r0
 800f0b2:	60fb      	str	r3, [r7, #12]
 800f0b4:	f107 020c 	add.w	r2, r7, #12
 800f0b8:	f107 0308 	add.w	r3, r7, #8
 800f0bc:	4611      	mov	r1, r2
 800f0be:	4618      	mov	r0, r3
 800f0c0:	f000 fd7c 	bl	800fbbc <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 800f0c4:	4603      	mov	r3, r0
 800f0c6:	2b00      	cmp	r3, #0
 800f0c8:	d009      	beq.n	800f0de <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a>
	{
		product.type = result->second;
 800f0ca:	f107 0308 	add.w	r3, r7, #8
 800f0ce:	4618      	mov	r0, r3
 800f0d0:	f000 fd88 	bl	800fbe4 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEptEv>
 800f0d4:	4603      	mov	r3, r0
 800f0d6:	7e1a      	ldrb	r2, [r3, #24]
 800f0d8:	687b      	ldr	r3, [r7, #4]
 800f0da:	711a      	strb	r2, [r3, #4]
	else
	{
		product.type = TOKEN_IDENTIFIER;
		product.value = std::string(word);
	}
}
 800f0dc:	e015      	b.n	800f10a <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x76>
		product.type = TOKEN_IDENTIFIER;
 800f0de:	687b      	ldr	r3, [r7, #4]
 800f0e0:	2202      	movs	r2, #2
 800f0e2:	711a      	strb	r2, [r3, #4]
		product.value = std::string(word);
 800f0e4:	f107 0310 	add.w	r3, r7, #16
 800f0e8:	6839      	ldr	r1, [r7, #0]
 800f0ea:	4618      	mov	r0, r3
 800f0ec:	f013 fe3e 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800f0f0:	687b      	ldr	r3, [r7, #4]
 800f0f2:	3308      	adds	r3, #8
 800f0f4:	f107 0210 	add.w	r2, r7, #16
 800f0f8:	4611      	mov	r1, r2
 800f0fa:	4618      	mov	r0, r3
 800f0fc:	f000 fd93 	bl	800fc26 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
 800f100:	f107 0310 	add.w	r3, r7, #16
 800f104:	4618      	mov	r0, r3
 800f106:	f013 fc6c 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 800f10a:	bf00      	nop
 800f10c:	3728      	adds	r7, #40	; 0x28
 800f10e:	46bd      	mov	sp, r7
 800f110:	bd80      	pop	{r7, pc}
 800f112:	bf00      	nop
 800f114:	20000368 	.word	0x20000368

0800f118 <_ZN5Lexer19build_keyword_or_idEv>:

bool Lexer::build_keyword_or_id()
{
 800f118:	b590      	push	{r4, r7, lr}
 800f11a:	b089      	sub	sp, #36	; 0x24
 800f11c:	af00      	add	r7, sp, #0
 800f11e:	6078      	str	r0, [r7, #4]
	if (isalpha(char_buffer))
 800f120:	687b      	ldr	r3, [r7, #4]
 800f122:	781b      	ldrb	r3, [r3, #0]
 800f124:	4618      	mov	r0, r3
 800f126:	f014 fe2d 	bl	8023d84 <isalpha>
 800f12a:	4603      	mov	r3, r0
 800f12c:	2b00      	cmp	r3, #0
 800f12e:	d017      	beq.n	800f160 <_ZN5Lexer19build_keyword_or_idEv+0x48>
	{
		std::string word;
 800f130:	f107 0308 	add.w	r3, r7, #8
 800f134:	4618      	mov	r0, r3
 800f136:	f013 fc33 	bl	80229a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_word(word);
 800f13a:	f107 0308 	add.w	r3, r7, #8
 800f13e:	4619      	mov	r1, r3
 800f140:	6878      	ldr	r0, [r7, #4]
 800f142:	f7ff ff85 	bl	800f050 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		match_keyword_or_id(word);
 800f146:	f107 0308 	add.w	r3, r7, #8
 800f14a:	4619      	mov	r1, r3
 800f14c:	6878      	ldr	r0, [r7, #4]
 800f14e:	f7ff ffa1 	bl	800f094 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		return true;
 800f152:	2401      	movs	r4, #1
		std::string word;
 800f154:	f107 0308 	add.w	r3, r7, #8
 800f158:	4618      	mov	r0, r3
 800f15a:	f013 fc42 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f15e:	e000      	b.n	800f162 <_ZN5Lexer19build_keyword_or_idEv+0x4a>
	}
	return false;
 800f160:	2400      	movs	r4, #0
 800f162:	4623      	mov	r3, r4
}
 800f164:	4618      	mov	r0, r3
 800f166:	3724      	adds	r7, #36	; 0x24
 800f168:	46bd      	mov	sp, r7
 800f16a:	bd90      	pop	{r4, r7, pc}

0800f16c <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_int(std::string &word)
{
 800f16c:	b580      	push	{r7, lr}
 800f16e:	b082      	sub	sp, #8
 800f170:	af00      	add	r7, sp, #0
 800f172:	6078      	str	r0, [r7, #4]
 800f174:	6039      	str	r1, [r7, #0]
	do
	{
		word.push_back(char_buffer);
 800f176:	687b      	ldr	r3, [r7, #4]
 800f178:	781b      	ldrb	r3, [r3, #0]
 800f17a:	4619      	mov	r1, r3
 800f17c:	6838      	ldr	r0, [r7, #0]
 800f17e:	f013 fca7 	bl	8022ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
		char_buffer = Transmitter::receive_code_char();
 800f182:	f009 fb0b 	bl	801879c <_ZN11Transmitter17receive_code_charEv>
 800f186:	4603      	mov	r3, r0
 800f188:	461a      	mov	r2, r3
 800f18a:	687b      	ldr	r3, [r7, #4]
 800f18c:	701a      	strb	r2, [r3, #0]
	} while (isdigit(char_buffer));
 800f18e:	687b      	ldr	r3, [r7, #4]
 800f190:	781b      	ldrb	r3, [r3, #0]
 800f192:	3b30      	subs	r3, #48	; 0x30
 800f194:	2b09      	cmp	r3, #9
 800f196:	bf94      	ite	ls
 800f198:	2301      	movls	r3, #1
 800f19a:	2300      	movhi	r3, #0
 800f19c:	b2db      	uxtb	r3, r3
 800f19e:	2b00      	cmp	r3, #0
 800f1a0:	d000      	beq.n	800f1a4 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	do
 800f1a2:	e7e8      	b.n	800f176 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
}
 800f1a4:	bf00      	nop
 800f1a6:	3708      	adds	r7, #8
 800f1a8:	46bd      	mov	sp, r7
 800f1aa:	bd80      	pop	{r7, pc}

0800f1ac <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_int_or_float(std::string &word)
{
 800f1ac:	b580      	push	{r7, lr}
 800f1ae:	b084      	sub	sp, #16
 800f1b0:	af00      	add	r7, sp, #0
 800f1b2:	6078      	str	r0, [r7, #4]
 800f1b4:	6039      	str	r1, [r7, #0]
	if (char_buffer != '.')
 800f1b6:	687b      	ldr	r3, [r7, #4]
 800f1b8:	781b      	ldrb	r3, [r3, #0]
 800f1ba:	2b2e      	cmp	r3, #46	; 0x2e
 800f1bc:	d012      	beq.n	800f1e4 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	{
		product.type = TOKEN_INT;
 800f1be:	687b      	ldr	r3, [r7, #4]
 800f1c0:	2203      	movs	r2, #3
 800f1c2:	711a      	strb	r2, [r3, #4]
		product.value = std::stoi(word);
 800f1c4:	220a      	movs	r2, #10
 800f1c6:	2100      	movs	r1, #0
 800f1c8:	6838      	ldr	r0, [r7, #0]
 800f1ca:	f7ff fe09 	bl	800ede0 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji>
 800f1ce:	4603      	mov	r3, r0
 800f1d0:	60bb      	str	r3, [r7, #8]
 800f1d2:	687b      	ldr	r3, [r7, #4]
 800f1d4:	3308      	adds	r3, #8
 800f1d6:	f107 0208 	add.w	r2, r7, #8
 800f1da:	4611      	mov	r1, r2
 800f1dc:	4618      	mov	r0, r3
 800f1de:	f000 fd4e 	bl	800fc7e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
	{
		build_int(word);
		product.type = TOKEN_FLOAT;
		product.value = std::stof(word);
	}
}
 800f1e2:	e016      	b.n	800f212 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x66>
		build_int(word);
 800f1e4:	6839      	ldr	r1, [r7, #0]
 800f1e6:	6878      	ldr	r0, [r7, #4]
 800f1e8:	f7ff ffc0 	bl	800f16c <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		product.type = TOKEN_FLOAT;
 800f1ec:	687b      	ldr	r3, [r7, #4]
 800f1ee:	2204      	movs	r2, #4
 800f1f0:	711a      	strb	r2, [r3, #4]
		product.value = std::stof(word);
 800f1f2:	2100      	movs	r1, #0
 800f1f4:	6838      	ldr	r0, [r7, #0]
 800f1f6:	f7ff fe0d 	bl	800ee14 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>
 800f1fa:	eef0 7a40 	vmov.f32	s15, s0
 800f1fe:	edc7 7a03 	vstr	s15, [r7, #12]
 800f202:	687b      	ldr	r3, [r7, #4]
 800f204:	3308      	adds	r3, #8
 800f206:	f107 020c 	add.w	r2, r7, #12
 800f20a:	4611      	mov	r1, r2
 800f20c:	4618      	mov	r0, r3
 800f20e:	f000 fd60 	bl	800fcd2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
}
 800f212:	bf00      	nop
 800f214:	3710      	adds	r7, #16
 800f216:	46bd      	mov	sp, r7
 800f218:	bd80      	pop	{r7, pc}

0800f21a <_ZN5Lexer18build_int_or_floatEv>:

bool Lexer::build_int_or_float()
{
 800f21a:	b590      	push	{r4, r7, lr}
 800f21c:	b089      	sub	sp, #36	; 0x24
 800f21e:	af00      	add	r7, sp, #0
 800f220:	6078      	str	r0, [r7, #4]
	if (isdigit(char_buffer) && char_buffer != '0')
 800f222:	687b      	ldr	r3, [r7, #4]
 800f224:	781b      	ldrb	r3, [r3, #0]
 800f226:	3b30      	subs	r3, #48	; 0x30
 800f228:	2b09      	cmp	r3, #9
 800f22a:	bf94      	ite	ls
 800f22c:	2301      	movls	r3, #1
 800f22e:	2300      	movhi	r3, #0
 800f230:	b2db      	uxtb	r3, r3
 800f232:	2b00      	cmp	r3, #0
 800f234:	d01b      	beq.n	800f26e <_ZN5Lexer18build_int_or_floatEv+0x54>
 800f236:	687b      	ldr	r3, [r7, #4]
 800f238:	781b      	ldrb	r3, [r3, #0]
 800f23a:	2b30      	cmp	r3, #48	; 0x30
 800f23c:	d017      	beq.n	800f26e <_ZN5Lexer18build_int_or_floatEv+0x54>
	{
		std::string word;
 800f23e:	f107 0308 	add.w	r3, r7, #8
 800f242:	4618      	mov	r0, r3
 800f244:	f013 fbac 	bl	80229a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_int(word);
 800f248:	f107 0308 	add.w	r3, r7, #8
 800f24c:	4619      	mov	r1, r3
 800f24e:	6878      	ldr	r0, [r7, #4]
 800f250:	f7ff ff8c 	bl	800f16c <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		match_int_or_float(word);
 800f254:	f107 0308 	add.w	r3, r7, #8
 800f258:	4619      	mov	r1, r3
 800f25a:	6878      	ldr	r0, [r7, #4]
 800f25c:	f7ff ffa6 	bl	800f1ac <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		return true;
 800f260:	2401      	movs	r4, #1
		std::string word;
 800f262:	f107 0308 	add.w	r3, r7, #8
 800f266:	4618      	mov	r0, r3
 800f268:	f013 fbbb 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f26c:	e000      	b.n	800f270 <_ZN5Lexer18build_int_or_floatEv+0x56>
	}
	return false;
 800f26e:	2400      	movs	r4, #0
 800f270:	4623      	mov	r3, r4
}
 800f272:	4618      	mov	r0, r3
 800f274:	3724      	adds	r7, #36	; 0x24
 800f276:	46bd      	mov	sp, r7
 800f278:	bd90      	pop	{r4, r7, pc}

0800f27a <_ZN5Lexer20build_0_int_or_floatEv>:

bool Lexer::build_0_int_or_float()
{
 800f27a:	b580      	push	{r7, lr}
 800f27c:	b08a      	sub	sp, #40	; 0x28
 800f27e:	af00      	add	r7, sp, #0
 800f280:	6078      	str	r0, [r7, #4]
	if (char_buffer == '0')
 800f282:	687b      	ldr	r3, [r7, #4]
 800f284:	781b      	ldrb	r3, [r3, #0]
 800f286:	2b30      	cmp	r3, #48	; 0x30
 800f288:	d13e      	bne.n	800f308 <_ZN5Lexer20build_0_int_or_floatEv+0x8e>
	{
		char_buffer = Transmitter::receive_code_char();
 800f28a:	f009 fa87 	bl	801879c <_ZN11Transmitter17receive_code_charEv>
 800f28e:	4603      	mov	r3, r0
 800f290:	461a      	mov	r2, r3
 800f292:	687b      	ldr	r3, [r7, #4]
 800f294:	701a      	strb	r2, [r3, #0]
		if (char_buffer == '.')
 800f296:	687b      	ldr	r3, [r7, #4]
 800f298:	781b      	ldrb	r3, [r3, #0]
 800f29a:	2b2e      	cmp	r3, #46	; 0x2e
 800f29c:	d125      	bne.n	800f2ea <_ZN5Lexer20build_0_int_or_floatEv+0x70>
		{
			std::string word;
 800f29e:	f107 0308 	add.w	r3, r7, #8
 800f2a2:	4618      	mov	r0, r3
 800f2a4:	f013 fb7c 	bl	80229a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
			build_int(word);
 800f2a8:	f107 0308 	add.w	r3, r7, #8
 800f2ac:	4619      	mov	r1, r3
 800f2ae:	6878      	ldr	r0, [r7, #4]
 800f2b0:	f7ff ff5c 	bl	800f16c <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
			product.type = TOKEN_FLOAT;
 800f2b4:	687b      	ldr	r3, [r7, #4]
 800f2b6:	2204      	movs	r2, #4
 800f2b8:	711a      	strb	r2, [r3, #4]
			product.value = std::stof(word);
 800f2ba:	f107 0308 	add.w	r3, r7, #8
 800f2be:	2100      	movs	r1, #0
 800f2c0:	4618      	mov	r0, r3
 800f2c2:	f7ff fda7 	bl	800ee14 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>
 800f2c6:	eef0 7a40 	vmov.f32	s15, s0
 800f2ca:	edc7 7a08 	vstr	s15, [r7, #32]
 800f2ce:	687b      	ldr	r3, [r7, #4]
 800f2d0:	3308      	adds	r3, #8
 800f2d2:	f107 0220 	add.w	r2, r7, #32
 800f2d6:	4611      	mov	r1, r2
 800f2d8:	4618      	mov	r0, r3
 800f2da:	f000 fcfa 	bl	800fcd2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
			std::string word;
 800f2de:	f107 0308 	add.w	r3, r7, #8
 800f2e2:	4618      	mov	r0, r3
 800f2e4:	f013 fb7d 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f2e8:	e00c      	b.n	800f304 <_ZN5Lexer20build_0_int_or_floatEv+0x8a>
		}
		else
		{
			product.type = TOKEN_INT;
 800f2ea:	687b      	ldr	r3, [r7, #4]
 800f2ec:	2203      	movs	r2, #3
 800f2ee:	711a      	strb	r2, [r3, #4]
			product.value = 0;
 800f2f0:	2300      	movs	r3, #0
 800f2f2:	627b      	str	r3, [r7, #36]	; 0x24
 800f2f4:	687b      	ldr	r3, [r7, #4]
 800f2f6:	3308      	adds	r3, #8
 800f2f8:	f107 0224 	add.w	r2, r7, #36	; 0x24
 800f2fc:	4611      	mov	r1, r2
 800f2fe:	4618      	mov	r0, r3
 800f300:	f000 fcbd 	bl	800fc7e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
		}
		return true;
 800f304:	2301      	movs	r3, #1
 800f306:	e000      	b.n	800f30a <_ZN5Lexer20build_0_int_or_floatEv+0x90>
	}
	return false;
 800f308:	2300      	movs	r3, #0
}
 800f30a:	4618      	mov	r0, r3
 800f30c:	3728      	adds	r7, #40	; 0x28
 800f30e:	46bd      	mov	sp, r7
 800f310:	bd80      	pop	{r7, pc}
	...

0800f314 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_escape_char(std::string &word)
{
 800f314:	b580      	push	{r7, lr}
 800f316:	b084      	sub	sp, #16
 800f318:	af00      	add	r7, sp, #0
 800f31a:	6078      	str	r0, [r7, #4]
 800f31c:	6039      	str	r1, [r7, #0]
	char true_char;
	switch (char_buffer)
 800f31e:	687b      	ldr	r3, [r7, #4]
 800f320:	781b      	ldrb	r3, [r3, #0]
 800f322:	2b76      	cmp	r3, #118	; 0x76
 800f324:	dc66      	bgt.n	800f3f4 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800f326:	2b5c      	cmp	r3, #92	; 0x5c
 800f328:	da04      	bge.n	800f334 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20>
 800f32a:	2b22      	cmp	r3, #34	; 0x22
 800f32c:	d047      	beq.n	800f3be <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xaa>
 800f32e:	2b27      	cmp	r3, #39	; 0x27
 800f330:	d03f      	beq.n	800f3b2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9e>
		break;
	case 'v':
		true_char = '\v';
		break;
	default:
		return;
 800f332:	e05f      	b.n	800f3f4 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800f334:	3b5c      	subs	r3, #92	; 0x5c
 800f336:	2b1a      	cmp	r3, #26
 800f338:	d85c      	bhi.n	800f3f4 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800f33a:	a201      	add	r2, pc, #4	; (adr r2, 800f340 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>)
 800f33c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f340:	0800f3b9 	.word	0x0800f3b9
 800f344:	0800f3f5 	.word	0x0800f3f5
 800f348:	0800f3f5 	.word	0x0800f3f5
 800f34c:	0800f3f5 	.word	0x0800f3f5
 800f350:	0800f3f5 	.word	0x0800f3f5
 800f354:	0800f3f5 	.word	0x0800f3f5
 800f358:	0800f3d1 	.word	0x0800f3d1
 800f35c:	0800f3f5 	.word	0x0800f3f5
 800f360:	0800f3f5 	.word	0x0800f3f5
 800f364:	0800f3f5 	.word	0x0800f3f5
 800f368:	0800f3d7 	.word	0x0800f3d7
 800f36c:	0800f3f5 	.word	0x0800f3f5
 800f370:	0800f3f5 	.word	0x0800f3f5
 800f374:	0800f3f5 	.word	0x0800f3f5
 800f378:	0800f3f5 	.word	0x0800f3f5
 800f37c:	0800f3f5 	.word	0x0800f3f5
 800f380:	0800f3f5 	.word	0x0800f3f5
 800f384:	0800f3f5 	.word	0x0800f3f5
 800f388:	0800f3ad 	.word	0x0800f3ad
 800f38c:	0800f3f5 	.word	0x0800f3f5
 800f390:	0800f3f5 	.word	0x0800f3f5
 800f394:	0800f3f5 	.word	0x0800f3f5
 800f398:	0800f3c5 	.word	0x0800f3c5
 800f39c:	0800f3f5 	.word	0x0800f3f5
 800f3a0:	0800f3cb 	.word	0x0800f3cb
 800f3a4:	0800f3f5 	.word	0x0800f3f5
 800f3a8:	0800f3dd 	.word	0x0800f3dd
		true_char = '\n';
 800f3ac:	230a      	movs	r3, #10
 800f3ae:	73fb      	strb	r3, [r7, #15]
		break;
 800f3b0:	e017      	b.n	800f3e2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\'';
 800f3b2:	2327      	movs	r3, #39	; 0x27
 800f3b4:	73fb      	strb	r3, [r7, #15]
		break;
 800f3b6:	e014      	b.n	800f3e2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\\';
 800f3b8:	235c      	movs	r3, #92	; 0x5c
 800f3ba:	73fb      	strb	r3, [r7, #15]
		break;
 800f3bc:	e011      	b.n	800f3e2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\"';
 800f3be:	2322      	movs	r3, #34	; 0x22
 800f3c0:	73fb      	strb	r3, [r7, #15]
		break;
 800f3c2:	e00e      	b.n	800f3e2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\r';
 800f3c4:	230d      	movs	r3, #13
 800f3c6:	73fb      	strb	r3, [r7, #15]
		break;
 800f3c8:	e00b      	b.n	800f3e2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\t';
 800f3ca:	2309      	movs	r3, #9
 800f3cc:	73fb      	strb	r3, [r7, #15]
		break;
 800f3ce:	e008      	b.n	800f3e2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\b';
 800f3d0:	2308      	movs	r3, #8
 800f3d2:	73fb      	strb	r3, [r7, #15]
		break;
 800f3d4:	e005      	b.n	800f3e2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\f';
 800f3d6:	230c      	movs	r3, #12
 800f3d8:	73fb      	strb	r3, [r7, #15]
		break;
 800f3da:	e002      	b.n	800f3e2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\v';
 800f3dc:	230b      	movs	r3, #11
 800f3de:	73fb      	strb	r3, [r7, #15]
		break;
 800f3e0:	bf00      	nop
	}
	word.pop_back();
 800f3e2:	6838      	ldr	r0, [r7, #0]
 800f3e4:	f013 fb93 	bl	8022b0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>
	word.push_back(true_char);
 800f3e8:	7bfb      	ldrb	r3, [r7, #15]
 800f3ea:	4619      	mov	r1, r3
 800f3ec:	6838      	ldr	r0, [r7, #0]
 800f3ee:	f013 fb6f 	bl	8022ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 800f3f2:	e000      	b.n	800f3f6 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe2>
		return;
 800f3f4:	bf00      	nop
}
 800f3f6:	3710      	adds	r7, #16
 800f3f8:	46bd      	mov	sp, r7
 800f3fa:	bd80      	pop	{r7, pc}

0800f3fc <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::add_string_char(std::string &word)
{
 800f3fc:	b580      	push	{r7, lr}
 800f3fe:	b082      	sub	sp, #8
 800f400:	af00      	add	r7, sp, #0
 800f402:	6078      	str	r0, [r7, #4]
 800f404:	6039      	str	r1, [r7, #0]
	if (word.back() == '\\')
 800f406:	6838      	ldr	r0, [r7, #0]
 800f408:	f013 fb5d 	bl	8022ac6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
 800f40c:	4603      	mov	r3, r0
 800f40e:	781b      	ldrb	r3, [r3, #0]
 800f410:	2b5c      	cmp	r3, #92	; 0x5c
 800f412:	bf0c      	ite	eq
 800f414:	2301      	moveq	r3, #1
 800f416:	2300      	movne	r3, #0
 800f418:	b2db      	uxtb	r3, r3
 800f41a:	2b00      	cmp	r3, #0
 800f41c:	d004      	beq.n	800f428 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>
	{
		match_escape_char(word);
 800f41e:	6839      	ldr	r1, [r7, #0]
 800f420:	6878      	ldr	r0, [r7, #4]
 800f422:	f7ff ff77 	bl	800f314 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800f426:	e005      	b.n	800f434 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	}
	else
	{
		word.push_back(char_buffer);
 800f428:	687b      	ldr	r3, [r7, #4]
 800f42a:	781b      	ldrb	r3, [r3, #0]
 800f42c:	4619      	mov	r1, r3
 800f42e:	6838      	ldr	r0, [r7, #0]
 800f430:	f013 fb4e 	bl	8022ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
	}
	char_buffer = Transmitter::receive_code_char();
 800f434:	f009 f9b2 	bl	801879c <_ZN11Transmitter17receive_code_charEv>
 800f438:	4603      	mov	r3, r0
 800f43a:	461a      	mov	r2, r3
 800f43c:	687b      	ldr	r3, [r7, #4]
 800f43e:	701a      	strb	r2, [r3, #0]
}
 800f440:	bf00      	nop
 800f442:	3708      	adds	r7, #8
 800f444:	46bd      	mov	sp, r7
 800f446:	bd80      	pop	{r7, pc}

0800f448 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_string_content(std::string &word)
{
 800f448:	b580      	push	{r7, lr}
 800f44a:	b082      	sub	sp, #8
 800f44c:	af00      	add	r7, sp, #0
 800f44e:	6078      	str	r0, [r7, #4]
 800f450:	6039      	str	r1, [r7, #0]
	char_buffer = Transmitter::receive_code_char();
 800f452:	f009 f9a3 	bl	801879c <_ZN11Transmitter17receive_code_charEv>
 800f456:	4603      	mov	r3, r0
 800f458:	461a      	mov	r2, r3
 800f45a:	687b      	ldr	r3, [r7, #4]
 800f45c:	701a      	strb	r2, [r3, #0]
	while (!(char_buffer == '\"' && word.back() != '\\'))
 800f45e:	687b      	ldr	r3, [r7, #4]
 800f460:	781b      	ldrb	r3, [r3, #0]
 800f462:	2b22      	cmp	r3, #34	; 0x22
 800f464:	d106      	bne.n	800f474 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>
 800f466:	6838      	ldr	r0, [r7, #0]
 800f468:	f013 fb2d 	bl	8022ac6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
 800f46c:	4603      	mov	r3, r0
 800f46e:	781b      	ldrb	r3, [r3, #0]
 800f470:	2b5c      	cmp	r3, #92	; 0x5c
 800f472:	d101      	bne.n	800f478 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x30>
 800f474:	2301      	movs	r3, #1
 800f476:	e000      	b.n	800f47a <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x32>
 800f478:	2300      	movs	r3, #0
 800f47a:	2b00      	cmp	r3, #0
 800f47c:	d004      	beq.n	800f488 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x40>
	{
		add_string_char(word);
 800f47e:	6839      	ldr	r1, [r7, #0]
 800f480:	6878      	ldr	r0, [r7, #4]
 800f482:	f7ff ffbb 	bl	800f3fc <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
	while (!(char_buffer == '\"' && word.back() != '\\'))
 800f486:	e7ea      	b.n	800f45e <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x16>
	}
	char_buffer = Transmitter::receive_code_char();
 800f488:	f009 f988 	bl	801879c <_ZN11Transmitter17receive_code_charEv>
 800f48c:	4603      	mov	r3, r0
 800f48e:	461a      	mov	r2, r3
 800f490:	687b      	ldr	r3, [r7, #4]
 800f492:	701a      	strb	r2, [r3, #0]
}
 800f494:	bf00      	nop
 800f496:	3708      	adds	r7, #8
 800f498:	46bd      	mov	sp, r7
 800f49a:	bd80      	pop	{r7, pc}

0800f49c <_ZN5Lexer12build_stringEv>:

bool Lexer::build_string()
{
 800f49c:	b590      	push	{r4, r7, lr}
 800f49e:	b08f      	sub	sp, #60	; 0x3c
 800f4a0:	af00      	add	r7, sp, #0
 800f4a2:	6078      	str	r0, [r7, #4]
	if (char_buffer == '\"')
 800f4a4:	687b      	ldr	r3, [r7, #4]
 800f4a6:	781b      	ldrb	r3, [r3, #0]
 800f4a8:	2b22      	cmp	r3, #34	; 0x22
 800f4aa:	d129      	bne.n	800f500 <_ZN5Lexer12build_stringEv+0x64>
	{
		std::string word;
 800f4ac:	f107 0308 	add.w	r3, r7, #8
 800f4b0:	4618      	mov	r0, r3
 800f4b2:	f013 fa75 	bl	80229a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_string_content(word);
 800f4b6:	f107 0308 	add.w	r3, r7, #8
 800f4ba:	4619      	mov	r1, r3
 800f4bc:	6878      	ldr	r0, [r7, #4]
 800f4be:	f7ff ffc3 	bl	800f448 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		product.type = TOKEN_STRING;
 800f4c2:	687b      	ldr	r3, [r7, #4]
 800f4c4:	220f      	movs	r2, #15
 800f4c6:	711a      	strb	r2, [r3, #4]
		product.value = std::string(word);
 800f4c8:	f107 0208 	add.w	r2, r7, #8
 800f4cc:	f107 0320 	add.w	r3, r7, #32
 800f4d0:	4611      	mov	r1, r2
 800f4d2:	4618      	mov	r0, r3
 800f4d4:	f013 fc4a 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800f4d8:	687b      	ldr	r3, [r7, #4]
 800f4da:	3308      	adds	r3, #8
 800f4dc:	f107 0220 	add.w	r2, r7, #32
 800f4e0:	4611      	mov	r1, r2
 800f4e2:	4618      	mov	r0, r3
 800f4e4:	f000 fb9f 	bl	800fc26 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
 800f4e8:	f107 0320 	add.w	r3, r7, #32
 800f4ec:	4618      	mov	r0, r3
 800f4ee:	f013 fa78 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		return true;
 800f4f2:	2401      	movs	r4, #1
		std::string word;
 800f4f4:	f107 0308 	add.w	r3, r7, #8
 800f4f8:	4618      	mov	r0, r3
 800f4fa:	f013 fa72 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f4fe:	e000      	b.n	800f502 <_ZN5Lexer12build_stringEv+0x66>
	}
	return false;
 800f500:	2400      	movs	r4, #0
 800f502:	4623      	mov	r3, r4
}
 800f504:	4618      	mov	r0, r3
 800f506:	373c      	adds	r7, #60	; 0x3c
 800f508:	46bd      	mov	sp, r7
 800f50a:	bd90      	pop	{r4, r7, pc}

0800f50c <_ZN5Lexer17build_token_valueEv>:

bool Lexer::build_token_value()
{
 800f50c:	b580      	push	{r7, lr}
 800f50e:	b082      	sub	sp, #8
 800f510:	af00      	add	r7, sp, #0
 800f512:	6078      	str	r0, [r7, #4]
	return match_single_char() || match_double_char() || build_keyword_or_id()
 800f514:	6878      	ldr	r0, [r7, #4]
 800f516:	f7ff fd1f 	bl	800ef58 <_ZN5Lexer17match_single_charEv>
 800f51a:	4603      	mov	r3, r0
			|| build_int_or_float() || build_0_int_or_float() || build_string();
 800f51c:	2b00      	cmp	r3, #0
 800f51e:	d11d      	bne.n	800f55c <_ZN5Lexer17build_token_valueEv+0x50>
	return match_single_char() || match_double_char() || build_keyword_or_id()
 800f520:	6878      	ldr	r0, [r7, #4]
 800f522:	f7ff fd4d 	bl	800efc0 <_ZN5Lexer17match_double_charEv>
 800f526:	4603      	mov	r3, r0
 800f528:	2b00      	cmp	r3, #0
 800f52a:	d117      	bne.n	800f55c <_ZN5Lexer17build_token_valueEv+0x50>
 800f52c:	6878      	ldr	r0, [r7, #4]
 800f52e:	f7ff fdf3 	bl	800f118 <_ZN5Lexer19build_keyword_or_idEv>
 800f532:	4603      	mov	r3, r0
 800f534:	2b00      	cmp	r3, #0
 800f536:	d111      	bne.n	800f55c <_ZN5Lexer17build_token_valueEv+0x50>
			|| build_int_or_float() || build_0_int_or_float() || build_string();
 800f538:	6878      	ldr	r0, [r7, #4]
 800f53a:	f7ff fe6e 	bl	800f21a <_ZN5Lexer18build_int_or_floatEv>
 800f53e:	4603      	mov	r3, r0
 800f540:	2b00      	cmp	r3, #0
 800f542:	d10b      	bne.n	800f55c <_ZN5Lexer17build_token_valueEv+0x50>
 800f544:	6878      	ldr	r0, [r7, #4]
 800f546:	f7ff fe98 	bl	800f27a <_ZN5Lexer20build_0_int_or_floatEv>
 800f54a:	4603      	mov	r3, r0
 800f54c:	2b00      	cmp	r3, #0
 800f54e:	d105      	bne.n	800f55c <_ZN5Lexer17build_token_valueEv+0x50>
 800f550:	6878      	ldr	r0, [r7, #4]
 800f552:	f7ff ffa3 	bl	800f49c <_ZN5Lexer12build_stringEv>
 800f556:	4603      	mov	r3, r0
 800f558:	2b00      	cmp	r3, #0
 800f55a:	d001      	beq.n	800f560 <_ZN5Lexer17build_token_valueEv+0x54>
 800f55c:	2301      	movs	r3, #1
 800f55e:	e000      	b.n	800f562 <_ZN5Lexer17build_token_valueEv+0x56>
 800f560:	2300      	movs	r3, #0
}
 800f562:	4618      	mov	r0, r3
 800f564:	3708      	adds	r7, #8
 800f566:	46bd      	mov	sp, r7
 800f568:	bd80      	pop	{r7, pc}

0800f56a <_ZN5LexerD1Ev>:
#define INC_LEXER_H_

#include "Transmitter.h"
#include "Token.h"

class Lexer
 800f56a:	b580      	push	{r7, lr}
 800f56c:	b082      	sub	sp, #8
 800f56e:	af00      	add	r7, sp, #0
 800f570:	6078      	str	r0, [r7, #4]
 800f572:	687b      	ldr	r3, [r7, #4]
 800f574:	3304      	adds	r3, #4
 800f576:	4618      	mov	r0, r3
 800f578:	f7ff fccf 	bl	800ef1a <_ZN5TokenD1Ev>
 800f57c:	687b      	ldr	r3, [r7, #4]
 800f57e:	4618      	mov	r0, r3
 800f580:	3708      	adds	r7, #8
 800f582:	46bd      	mov	sp, r7
 800f584:	bd80      	pop	{r7, pc}
	...

0800f588 <__tcf_0>:

Token Lexer::build_token()
{
	static Lexer lex;
 800f588:	b580      	push	{r7, lr}
 800f58a:	af00      	add	r7, sp, #0
 800f58c:	4801      	ldr	r0, [pc, #4]	; (800f594 <__tcf_0+0xc>)
 800f58e:	f7ff ffec 	bl	800f56a <_ZN5LexerD1Ev>
 800f592:	bd80      	pop	{r7, pc}
 800f594:	20000398 	.word	0x20000398

0800f598 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Move_ctor_base(const _Move_ctor_base&) = default;
 800f598:	b580      	push	{r7, lr}
 800f59a:	b082      	sub	sp, #8
 800f59c:	af00      	add	r7, sp, #0
 800f59e:	6078      	str	r0, [r7, #4]
 800f5a0:	6039      	str	r1, [r7, #0]
 800f5a2:	687b      	ldr	r3, [r7, #4]
 800f5a4:	683a      	ldr	r2, [r7, #0]
 800f5a6:	4611      	mov	r1, r2
 800f5a8:	4618      	mov	r0, r3
 800f5aa:	f000 fbbc 	bl	800fd26 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f5ae:	687b      	ldr	r3, [r7, #4]
 800f5b0:	4618      	mov	r0, r3
 800f5b2:	3708      	adds	r7, #8
 800f5b4:	46bd      	mov	sp, r7
 800f5b6:	bd80      	pop	{r7, pc}

0800f5b8 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Copy_assign_base(const _Copy_assign_base&) = default;
 800f5b8:	b580      	push	{r7, lr}
 800f5ba:	b082      	sub	sp, #8
 800f5bc:	af00      	add	r7, sp, #0
 800f5be:	6078      	str	r0, [r7, #4]
 800f5c0:	6039      	str	r1, [r7, #0]
 800f5c2:	687b      	ldr	r3, [r7, #4]
 800f5c4:	683a      	ldr	r2, [r7, #0]
 800f5c6:	4611      	mov	r1, r2
 800f5c8:	4618      	mov	r0, r3
 800f5ca:	f7ff ffe5 	bl	800f598 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f5ce:	687b      	ldr	r3, [r7, #4]
 800f5d0:	4618      	mov	r0, r3
 800f5d2:	3708      	adds	r7, #8
 800f5d4:	46bd      	mov	sp, r7
 800f5d6:	bd80      	pop	{r7, pc}

0800f5d8 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Move_assign_base(const _Move_assign_base&) = default;
 800f5d8:	b580      	push	{r7, lr}
 800f5da:	b082      	sub	sp, #8
 800f5dc:	af00      	add	r7, sp, #0
 800f5de:	6078      	str	r0, [r7, #4]
 800f5e0:	6039      	str	r1, [r7, #0]
 800f5e2:	687b      	ldr	r3, [r7, #4]
 800f5e4:	683a      	ldr	r2, [r7, #0]
 800f5e6:	4611      	mov	r1, r2
 800f5e8:	4618      	mov	r0, r3
 800f5ea:	f7ff ffe5 	bl	800f5b8 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f5ee:	687b      	ldr	r3, [r7, #4]
 800f5f0:	4618      	mov	r0, r3
 800f5f2:	3708      	adds	r7, #8
 800f5f4:	46bd      	mov	sp, r7
 800f5f6:	bd80      	pop	{r7, pc}

0800f5f8 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Variant_base(const _Variant_base&) = default;
 800f5f8:	b580      	push	{r7, lr}
 800f5fa:	b082      	sub	sp, #8
 800f5fc:	af00      	add	r7, sp, #0
 800f5fe:	6078      	str	r0, [r7, #4]
 800f600:	6039      	str	r1, [r7, #0]
 800f602:	687b      	ldr	r3, [r7, #4]
 800f604:	683a      	ldr	r2, [r7, #0]
 800f606:	4611      	mov	r1, r2
 800f608:	4618      	mov	r0, r3
 800f60a:	f7ff ffe5 	bl	800f5d8 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f60e:	687b      	ldr	r3, [r7, #4]
 800f610:	4618      	mov	r0, r3
 800f612:	3708      	adds	r7, #8
 800f614:	46bd      	mov	sp, r7
 800f616:	bd80      	pop	{r7, pc}

0800f618 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS6_>:
      variant(const variant& __rhs) = default;
 800f618:	b580      	push	{r7, lr}
 800f61a:	b082      	sub	sp, #8
 800f61c:	af00      	add	r7, sp, #0
 800f61e:	6078      	str	r0, [r7, #4]
 800f620:	6039      	str	r1, [r7, #0]
 800f622:	687b      	ldr	r3, [r7, #4]
 800f624:	683a      	ldr	r2, [r7, #0]
 800f626:	4611      	mov	r1, r2
 800f628:	4618      	mov	r0, r3
 800f62a:	f7ff ffe5 	bl	800f5f8 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f62e:	687b      	ldr	r3, [r7, #4]
 800f630:	4618      	mov	r0, r3
 800f632:	3708      	adds	r7, #8
 800f634:	46bd      	mov	sp, r7
 800f636:	bd80      	pop	{r7, pc}

0800f638 <_ZN5TokenC1ERKS_>:
 800f638:	b580      	push	{r7, lr}
 800f63a:	b082      	sub	sp, #8
 800f63c:	af00      	add	r7, sp, #0
 800f63e:	6078      	str	r0, [r7, #4]
 800f640:	6039      	str	r1, [r7, #0]
 800f642:	683b      	ldr	r3, [r7, #0]
 800f644:	781a      	ldrb	r2, [r3, #0]
 800f646:	687b      	ldr	r3, [r7, #4]
 800f648:	701a      	strb	r2, [r3, #0]
 800f64a:	687b      	ldr	r3, [r7, #4]
 800f64c:	1d1a      	adds	r2, r3, #4
 800f64e:	683b      	ldr	r3, [r7, #0]
 800f650:	3304      	adds	r3, #4
 800f652:	4619      	mov	r1, r3
 800f654:	4610      	mov	r0, r2
 800f656:	f7ff ffdf 	bl	800f618 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS6_>
 800f65a:	687b      	ldr	r3, [r7, #4]
 800f65c:	4618      	mov	r0, r3
 800f65e:	3708      	adds	r7, #8
 800f660:	46bd      	mov	sp, r7
 800f662:	bd80      	pop	{r7, pc}

0800f664 <_ZN5Lexer11build_tokenEv>:
{
 800f664:	b580      	push	{r7, lr}
 800f666:	b082      	sub	sp, #8
 800f668:	af00      	add	r7, sp, #0
 800f66a:	6078      	str	r0, [r7, #4]
	static Lexer lex;
 800f66c:	4b1b      	ldr	r3, [pc, #108]	; (800f6dc <_ZN5Lexer11build_tokenEv+0x78>)
 800f66e:	781b      	ldrb	r3, [r3, #0]
 800f670:	f3bf 8f5b 	dmb	ish
 800f674:	b2db      	uxtb	r3, r3
 800f676:	f003 0301 	and.w	r3, r3, #1
 800f67a:	2b00      	cmp	r3, #0
 800f67c:	bf0c      	ite	eq
 800f67e:	2301      	moveq	r3, #1
 800f680:	2300      	movne	r3, #0
 800f682:	b2db      	uxtb	r3, r3
 800f684:	2b00      	cmp	r3, #0
 800f686:	d013      	beq.n	800f6b0 <_ZN5Lexer11build_tokenEv+0x4c>
 800f688:	4814      	ldr	r0, [pc, #80]	; (800f6dc <_ZN5Lexer11build_tokenEv+0x78>)
 800f68a:	f012 fef9 	bl	8022480 <__cxa_guard_acquire>
 800f68e:	4603      	mov	r3, r0
 800f690:	2b00      	cmp	r3, #0
 800f692:	bf14      	ite	ne
 800f694:	2301      	movne	r3, #1
 800f696:	2300      	moveq	r3, #0
 800f698:	b2db      	uxtb	r3, r3
 800f69a:	2b00      	cmp	r3, #0
 800f69c:	d008      	beq.n	800f6b0 <_ZN5Lexer11build_tokenEv+0x4c>
 800f69e:	4810      	ldr	r0, [pc, #64]	; (800f6e0 <_ZN5Lexer11build_tokenEv+0x7c>)
 800f6a0:	f7ff fc49 	bl	800ef36 <_ZN5LexerC1Ev>
 800f6a4:	480d      	ldr	r0, [pc, #52]	; (800f6dc <_ZN5Lexer11build_tokenEv+0x78>)
 800f6a6:	f012 fef7 	bl	8022498 <__cxa_guard_release>
 800f6aa:	480e      	ldr	r0, [pc, #56]	; (800f6e4 <_ZN5Lexer11build_tokenEv+0x80>)
 800f6ac:	f014 fb31 	bl	8023d12 <atexit>
	lex.get_working_char();
 800f6b0:	480b      	ldr	r0, [pc, #44]	; (800f6e0 <_ZN5Lexer11build_tokenEv+0x7c>)
 800f6b2:	f000 f86f 	bl	800f794 <_ZN5Lexer16get_working_charEv>

	if (lex.build_token_value())
 800f6b6:	480a      	ldr	r0, [pc, #40]	; (800f6e0 <_ZN5Lexer11build_tokenEv+0x7c>)
 800f6b8:	f7ff ff28 	bl	800f50c <_ZN5Lexer17build_token_valueEv>
 800f6bc:	4603      	mov	r3, r0
 800f6be:	2b00      	cmp	r3, #0
 800f6c0:	d004      	beq.n	800f6cc <_ZN5Lexer11build_tokenEv+0x68>
	{
		return lex.product;
 800f6c2:	4909      	ldr	r1, [pc, #36]	; (800f6e8 <_ZN5Lexer11build_tokenEv+0x84>)
 800f6c4:	6878      	ldr	r0, [r7, #4]
 800f6c6:	f7ff ffb7 	bl	800f638 <_ZN5TokenC1ERKS_>
 800f6ca:	e003      	b.n	800f6d4 <_ZN5Lexer11build_tokenEv+0x70>
	}

	return lex.product;
 800f6cc:	4906      	ldr	r1, [pc, #24]	; (800f6e8 <_ZN5Lexer11build_tokenEv+0x84>)
 800f6ce:	6878      	ldr	r0, [r7, #4]
 800f6d0:	f7ff ffb2 	bl	800f638 <_ZN5TokenC1ERKS_>
}
 800f6d4:	6878      	ldr	r0, [r7, #4]
 800f6d6:	3708      	adds	r7, #8
 800f6d8:	46bd      	mov	sp, r7
 800f6da:	bd80      	pop	{r7, pc}
 800f6dc:	200003bc 	.word	0x200003bc
 800f6e0:	20000398 	.word	0x20000398
 800f6e4:	0800f589 	.word	0x0800f589
 800f6e8:	2000039c 	.word	0x2000039c

0800f6ec <_ZN5Lexer12skip_commentEv>:

void Lexer::skip_comment()
{
 800f6ec:	b580      	push	{r7, lr}
 800f6ee:	b082      	sub	sp, #8
 800f6f0:	af00      	add	r7, sp, #0
 800f6f2:	6078      	str	r0, [r7, #4]
	while (char_buffer == '#')
 800f6f4:	687b      	ldr	r3, [r7, #4]
 800f6f6:	781b      	ldrb	r3, [r3, #0]
 800f6f8:	2b23      	cmp	r3, #35	; 0x23
 800f6fa:	d111      	bne.n	800f720 <_ZN5Lexer12skip_commentEv+0x34>
	{
		while (char_buffer != '\n')
 800f6fc:	687b      	ldr	r3, [r7, #4]
 800f6fe:	781b      	ldrb	r3, [r3, #0]
 800f700:	2b0a      	cmp	r3, #10
 800f702:	d006      	beq.n	800f712 <_ZN5Lexer12skip_commentEv+0x26>
		{
			char_buffer = Transmitter::receive_code_char();
 800f704:	f009 f84a 	bl	801879c <_ZN11Transmitter17receive_code_charEv>
 800f708:	4603      	mov	r3, r0
 800f70a:	461a      	mov	r2, r3
 800f70c:	687b      	ldr	r3, [r7, #4]
 800f70e:	701a      	strb	r2, [r3, #0]
		while (char_buffer != '\n')
 800f710:	e7f4      	b.n	800f6fc <_ZN5Lexer12skip_commentEv+0x10>
		}
		char_buffer = Transmitter::receive_code_char();
 800f712:	f009 f843 	bl	801879c <_ZN11Transmitter17receive_code_charEv>
 800f716:	4603      	mov	r3, r0
 800f718:	461a      	mov	r2, r3
 800f71a:	687b      	ldr	r3, [r7, #4]
 800f71c:	701a      	strb	r2, [r3, #0]
	while (char_buffer == '#')
 800f71e:	e7e9      	b.n	800f6f4 <_ZN5Lexer12skip_commentEv+0x8>
	}
}
 800f720:	bf00      	nop
 800f722:	3708      	adds	r7, #8
 800f724:	46bd      	mov	sp, r7
 800f726:	bd80      	pop	{r7, pc}

0800f728 <_ZN5Lexer15skip_whitespaceEv>:

void Lexer::skip_whitespace()
{
 800f728:	b580      	push	{r7, lr}
 800f72a:	b082      	sub	sp, #8
 800f72c:	af00      	add	r7, sp, #0
 800f72e:	6078      	str	r0, [r7, #4]
	while (isspace(char_buffer) && char_buffer != '\n')
 800f730:	687b      	ldr	r3, [r7, #4]
 800f732:	781b      	ldrb	r3, [r3, #0]
 800f734:	4618      	mov	r0, r3
 800f736:	f014 fb2d 	bl	8023d94 <isspace>
 800f73a:	4603      	mov	r3, r0
 800f73c:	2b00      	cmp	r3, #0
 800f73e:	d00a      	beq.n	800f756 <_ZN5Lexer15skip_whitespaceEv+0x2e>
 800f740:	687b      	ldr	r3, [r7, #4]
 800f742:	781b      	ldrb	r3, [r3, #0]
 800f744:	2b0a      	cmp	r3, #10
 800f746:	d006      	beq.n	800f756 <_ZN5Lexer15skip_whitespaceEv+0x2e>
	{
		char_buffer = Transmitter::receive_code_char();
 800f748:	f009 f828 	bl	801879c <_ZN11Transmitter17receive_code_charEv>
 800f74c:	4603      	mov	r3, r0
 800f74e:	461a      	mov	r2, r3
 800f750:	687b      	ldr	r3, [r7, #4]
 800f752:	701a      	strb	r2, [r3, #0]
	while (isspace(char_buffer) && char_buffer != '\n')
 800f754:	e7ec      	b.n	800f730 <_ZN5Lexer15skip_whitespaceEv+0x8>
	}
}
 800f756:	bf00      	nop
 800f758:	3708      	adds	r7, #8
 800f75a:	46bd      	mov	sp, r7
 800f75c:	bd80      	pop	{r7, pc}

0800f75e <_ZN5Lexer15is_invalid_charEv>:

bool Lexer::is_invalid_char()
{
 800f75e:	b580      	push	{r7, lr}
 800f760:	b082      	sub	sp, #8
 800f762:	af00      	add	r7, sp, #0
 800f764:	6078      	str	r0, [r7, #4]
	return (isspace(char_buffer) && char_buffer != '\n') || char_buffer == '#';
 800f766:	687b      	ldr	r3, [r7, #4]
 800f768:	781b      	ldrb	r3, [r3, #0]
 800f76a:	4618      	mov	r0, r3
 800f76c:	f014 fb12 	bl	8023d94 <isspace>
 800f770:	4603      	mov	r3, r0
 800f772:	2b00      	cmp	r3, #0
 800f774:	d003      	beq.n	800f77e <_ZN5Lexer15is_invalid_charEv+0x20>
 800f776:	687b      	ldr	r3, [r7, #4]
 800f778:	781b      	ldrb	r3, [r3, #0]
 800f77a:	2b0a      	cmp	r3, #10
 800f77c:	d103      	bne.n	800f786 <_ZN5Lexer15is_invalid_charEv+0x28>
 800f77e:	687b      	ldr	r3, [r7, #4]
 800f780:	781b      	ldrb	r3, [r3, #0]
 800f782:	2b23      	cmp	r3, #35	; 0x23
 800f784:	d101      	bne.n	800f78a <_ZN5Lexer15is_invalid_charEv+0x2c>
 800f786:	2301      	movs	r3, #1
 800f788:	e000      	b.n	800f78c <_ZN5Lexer15is_invalid_charEv+0x2e>
 800f78a:	2300      	movs	r3, #0
}
 800f78c:	4618      	mov	r0, r3
 800f78e:	3708      	adds	r7, #8
 800f790:	46bd      	mov	sp, r7
 800f792:	bd80      	pop	{r7, pc}

0800f794 <_ZN5Lexer16get_working_charEv>:

void Lexer::get_working_char()
{
 800f794:	b580      	push	{r7, lr}
 800f796:	b082      	sub	sp, #8
 800f798:	af00      	add	r7, sp, #0
 800f79a:	6078      	str	r0, [r7, #4]
	while (is_invalid_char())
 800f79c:	6878      	ldr	r0, [r7, #4]
 800f79e:	f7ff ffde 	bl	800f75e <_ZN5Lexer15is_invalid_charEv>
 800f7a2:	4603      	mov	r3, r0
 800f7a4:	2b00      	cmp	r3, #0
 800f7a6:	d006      	beq.n	800f7b6 <_ZN5Lexer16get_working_charEv+0x22>
	{
		skip_comment();
 800f7a8:	6878      	ldr	r0, [r7, #4]
 800f7aa:	f7ff ff9f 	bl	800f6ec <_ZN5Lexer12skip_commentEv>
		skip_whitespace();
 800f7ae:	6878      	ldr	r0, [r7, #4]
 800f7b0:	f7ff ffba 	bl	800f728 <_ZN5Lexer15skip_whitespaceEv>
	while (is_invalid_char())
 800f7b4:	e7f2      	b.n	800f79c <_ZN5Lexer16get_working_charEv+0x8>
	}
}
 800f7b6:	bf00      	nop
 800f7b8:	3708      	adds	r7, #8
 800f7ba:	46bd      	mov	sp, r7
 800f7bc:	bd80      	pop	{r7, pc}

0800f7be <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>:
      _Ret __ret;

      _CharT* __endptr;

      struct _Save_errno {
	_Save_errno() : _M_errno(errno) { errno = 0; }
 800f7be:	b580      	push	{r7, lr}
 800f7c0:	b082      	sub	sp, #8
 800f7c2:	af00      	add	r7, sp, #0
 800f7c4:	6078      	str	r0, [r7, #4]
 800f7c6:	f014 faab 	bl	8023d20 <__errno>
 800f7ca:	4603      	mov	r3, r0
 800f7cc:	681a      	ldr	r2, [r3, #0]
 800f7ce:	687b      	ldr	r3, [r7, #4]
 800f7d0:	601a      	str	r2, [r3, #0]
 800f7d2:	f014 faa5 	bl	8023d20 <__errno>
 800f7d6:	4603      	mov	r3, r0
 800f7d8:	2200      	movs	r2, #0
 800f7da:	601a      	str	r2, [r3, #0]
 800f7dc:	687b      	ldr	r3, [r7, #4]
 800f7de:	4618      	mov	r0, r3
 800f7e0:	3708      	adds	r7, #8
 800f7e2:	46bd      	mov	sp, r7
 800f7e4:	bd80      	pop	{r7, pc}

0800f7e6 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>:
	~_Save_errno() { if (errno == 0) errno = _M_errno; }
 800f7e6:	b590      	push	{r4, r7, lr}
 800f7e8:	b083      	sub	sp, #12
 800f7ea:	af00      	add	r7, sp, #0
 800f7ec:	6078      	str	r0, [r7, #4]
 800f7ee:	f014 fa97 	bl	8023d20 <__errno>
 800f7f2:	4603      	mov	r3, r0
 800f7f4:	681b      	ldr	r3, [r3, #0]
 800f7f6:	2b00      	cmp	r3, #0
 800f7f8:	bf0c      	ite	eq
 800f7fa:	2301      	moveq	r3, #1
 800f7fc:	2300      	movne	r3, #0
 800f7fe:	b2db      	uxtb	r3, r3
 800f800:	2b00      	cmp	r3, #0
 800f802:	d005      	beq.n	800f810 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev+0x2a>
 800f804:	687b      	ldr	r3, [r7, #4]
 800f806:	681c      	ldr	r4, [r3, #0]
 800f808:	f014 fa8a 	bl	8023d20 <__errno>
 800f80c:	4603      	mov	r3, r0
 800f80e:	601c      	str	r4, [r3, #0]
 800f810:	687b      	ldr	r3, [r7, #4]
 800f812:	4618      	mov	r0, r3
 800f814:	370c      	adds	r7, #12
 800f816:	46bd      	mov	sp, r7
 800f818:	bd90      	pop	{r4, r7, pc}

0800f81a <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkElSt17integral_constantIbLb1EE>:
      struct _Range_chk {
	  static bool
	  _S_chk(_TRet, std::false_type) { return false; }

	  static bool
	  _S_chk(_TRet __val, std::true_type) // only called when _Ret is int
 800f81a:	b480      	push	{r7}
 800f81c:	b083      	sub	sp, #12
 800f81e:	af00      	add	r7, sp, #0
 800f820:	6078      	str	r0, [r7, #4]
 800f822:	7039      	strb	r1, [r7, #0]
	  {
	    return __val < _TRet(__numeric_traits<int>::__min)
	      || __val > _TRet(__numeric_traits<int>::__max);
 800f824:	2300      	movs	r3, #0
	  }
 800f826:	4618      	mov	r0, r3
 800f828:	370c      	adds	r7, #12
 800f82a:	46bd      	mov	sp, r7
 800f82c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f830:	4770      	bx	lr

0800f832 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>:
    __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
 800f832:	b590      	push	{r4, r7, lr}
 800f834:	b08b      	sub	sp, #44	; 0x2c
 800f836:	af00      	add	r7, sp, #0
 800f838:	60f8      	str	r0, [r7, #12]
 800f83a:	60b9      	str	r1, [r7, #8]
 800f83c:	607a      	str	r2, [r7, #4]
 800f83e:	603b      	str	r3, [r7, #0]
      } const __save_errno;
 800f840:	f107 0314 	add.w	r3, r7, #20
 800f844:	4618      	mov	r0, r3
 800f846:	f7ff ffba 	bl	800f7be <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>
      };

      const _TRet __tmp = __convf(__str, &__endptr, __base...);
 800f84a:	68fb      	ldr	r3, [r7, #12]
 800f84c:	f107 0118 	add.w	r1, r7, #24
 800f850:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800f852:	6878      	ldr	r0, [r7, #4]
 800f854:	4798      	blx	r3
 800f856:	6278      	str	r0, [r7, #36]	; 0x24

      if (__endptr == __str)
 800f858:	69bb      	ldr	r3, [r7, #24]
 800f85a:	687a      	ldr	r2, [r7, #4]
 800f85c:	429a      	cmp	r2, r3
 800f85e:	d102      	bne.n	800f866 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x34>
	std::__throw_invalid_argument(__name);
 800f860:	68b8      	ldr	r0, [r7, #8]
 800f862:	f012 fee7 	bl	8022634 <_ZSt24__throw_invalid_argumentPKc>
      else if (errno == ERANGE
 800f866:	f014 fa5b 	bl	8023d20 <__errno>
 800f86a:	4603      	mov	r3, r0
 800f86c:	681b      	ldr	r3, [r3, #0]
	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
 800f86e:	2b22      	cmp	r3, #34	; 0x22
 800f870:	d006      	beq.n	800f880 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x4e>
 800f872:	4621      	mov	r1, r4
 800f874:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800f876:	f7ff ffd0 	bl	800f81a <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkElSt17integral_constantIbLb1EE>
 800f87a:	4603      	mov	r3, r0
 800f87c:	2b00      	cmp	r3, #0
 800f87e:	d001      	beq.n	800f884 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x52>
 800f880:	2301      	movs	r3, #1
 800f882:	e000      	b.n	800f886 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x54>
 800f884:	2300      	movs	r3, #0
      else if (errno == ERANGE
 800f886:	2b00      	cmp	r3, #0
 800f888:	d002      	beq.n	800f890 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x5e>
	std::__throw_out_of_range(__name);
 800f88a:	68b8      	ldr	r0, [r7, #8]
 800f88c:	f012 fed8 	bl	8022640 <_ZSt20__throw_out_of_rangePKc>
      else
	__ret = __tmp;
 800f890:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f892:	623b      	str	r3, [r7, #32]

      if (__idx)
 800f894:	683b      	ldr	r3, [r7, #0]
 800f896:	2b00      	cmp	r3, #0
 800f898:	d005      	beq.n	800f8a6 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x74>
	*__idx = __endptr - __str;
 800f89a:	69ba      	ldr	r2, [r7, #24]
 800f89c:	687b      	ldr	r3, [r7, #4]
 800f89e:	1ad3      	subs	r3, r2, r3
 800f8a0:	461a      	mov	r2, r3
 800f8a2:	683b      	ldr	r3, [r7, #0]
 800f8a4:	601a      	str	r2, [r3, #0]

      return __ret;
 800f8a6:	6a3c      	ldr	r4, [r7, #32]
      } const __save_errno;
 800f8a8:	f107 0314 	add.w	r3, r7, #20
 800f8ac:	4618      	mov	r0, r3
 800f8ae:	f7ff ff9a 	bl	800f7e6 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>
      return __ret;
 800f8b2:	4623      	mov	r3, r4
    }
 800f8b4:	4618      	mov	r0, r3
 800f8b6:	372c      	adds	r7, #44	; 0x2c
 800f8b8:	46bd      	mov	sp, r7
 800f8ba:	bd90      	pop	{r4, r7, pc}

0800f8bc <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>:
	_Save_errno() : _M_errno(errno) { errno = 0; }
 800f8bc:	b580      	push	{r7, lr}
 800f8be:	b082      	sub	sp, #8
 800f8c0:	af00      	add	r7, sp, #0
 800f8c2:	6078      	str	r0, [r7, #4]
 800f8c4:	f014 fa2c 	bl	8023d20 <__errno>
 800f8c8:	4603      	mov	r3, r0
 800f8ca:	681a      	ldr	r2, [r3, #0]
 800f8cc:	687b      	ldr	r3, [r7, #4]
 800f8ce:	601a      	str	r2, [r3, #0]
 800f8d0:	f014 fa26 	bl	8023d20 <__errno>
 800f8d4:	4603      	mov	r3, r0
 800f8d6:	2200      	movs	r2, #0
 800f8d8:	601a      	str	r2, [r3, #0]
 800f8da:	687b      	ldr	r3, [r7, #4]
 800f8dc:	4618      	mov	r0, r3
 800f8de:	3708      	adds	r7, #8
 800f8e0:	46bd      	mov	sp, r7
 800f8e2:	bd80      	pop	{r7, pc}

0800f8e4 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>:
	~_Save_errno() { if (errno == 0) errno = _M_errno; }
 800f8e4:	b590      	push	{r4, r7, lr}
 800f8e6:	b083      	sub	sp, #12
 800f8e8:	af00      	add	r7, sp, #0
 800f8ea:	6078      	str	r0, [r7, #4]
 800f8ec:	f014 fa18 	bl	8023d20 <__errno>
 800f8f0:	4603      	mov	r3, r0
 800f8f2:	681b      	ldr	r3, [r3, #0]
 800f8f4:	2b00      	cmp	r3, #0
 800f8f6:	bf0c      	ite	eq
 800f8f8:	2301      	moveq	r3, #1
 800f8fa:	2300      	movne	r3, #0
 800f8fc:	b2db      	uxtb	r3, r3
 800f8fe:	2b00      	cmp	r3, #0
 800f900:	d005      	beq.n	800f90e <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev+0x2a>
 800f902:	687b      	ldr	r3, [r7, #4]
 800f904:	681c      	ldr	r4, [r3, #0]
 800f906:	f014 fa0b 	bl	8023d20 <__errno>
 800f90a:	4603      	mov	r3, r0
 800f90c:	601c      	str	r4, [r3, #0]
 800f90e:	687b      	ldr	r3, [r7, #4]
 800f910:	4618      	mov	r0, r3
 800f912:	370c      	adds	r7, #12
 800f914:	46bd      	mov	sp, r7
 800f916:	bd90      	pop	{r4, r7, pc}

0800f918 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkEfSt17integral_constantIbLb0EE>:
	  _S_chk(_TRet, std::false_type) { return false; }
 800f918:	b480      	push	{r7}
 800f91a:	b083      	sub	sp, #12
 800f91c:	af00      	add	r7, sp, #0
 800f91e:	ed87 0a01 	vstr	s0, [r7, #4]
 800f922:	7038      	strb	r0, [r7, #0]
 800f924:	2300      	movs	r3, #0
 800f926:	4618      	mov	r0, r3
 800f928:	370c      	adds	r7, #12
 800f92a:	46bd      	mov	sp, r7
 800f92c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f930:	4770      	bx	lr

0800f932 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>:
    __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
 800f932:	b590      	push	{r4, r7, lr}
 800f934:	b08b      	sub	sp, #44	; 0x2c
 800f936:	af00      	add	r7, sp, #0
 800f938:	60f8      	str	r0, [r7, #12]
 800f93a:	60b9      	str	r1, [r7, #8]
 800f93c:	607a      	str	r2, [r7, #4]
 800f93e:	603b      	str	r3, [r7, #0]
      } const __save_errno;
 800f940:	f107 0314 	add.w	r3, r7, #20
 800f944:	4618      	mov	r0, r3
 800f946:	f7ff ffb9 	bl	800f8bc <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>
      const _TRet __tmp = __convf(__str, &__endptr, __base...);
 800f94a:	68fb      	ldr	r3, [r7, #12]
 800f94c:	f107 0218 	add.w	r2, r7, #24
 800f950:	4611      	mov	r1, r2
 800f952:	6878      	ldr	r0, [r7, #4]
 800f954:	4798      	blx	r3
 800f956:	ed87 0a09 	vstr	s0, [r7, #36]	; 0x24
      if (__endptr == __str)
 800f95a:	69bb      	ldr	r3, [r7, #24]
 800f95c:	687a      	ldr	r2, [r7, #4]
 800f95e:	429a      	cmp	r2, r3
 800f960:	d102      	bne.n	800f968 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x36>
	std::__throw_invalid_argument(__name);
 800f962:	68b8      	ldr	r0, [r7, #8]
 800f964:	f012 fe66 	bl	8022634 <_ZSt24__throw_invalid_argumentPKc>
      else if (errno == ERANGE
 800f968:	f014 f9da 	bl	8023d20 <__errno>
 800f96c:	4603      	mov	r3, r0
 800f96e:	681b      	ldr	r3, [r3, #0]
	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
 800f970:	2b22      	cmp	r3, #34	; 0x22
 800f972:	d007      	beq.n	800f984 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x52>
 800f974:	4620      	mov	r0, r4
 800f976:	ed97 0a09 	vldr	s0, [r7, #36]	; 0x24
 800f97a:	f7ff ffcd 	bl	800f918 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkEfSt17integral_constantIbLb0EE>
 800f97e:	4603      	mov	r3, r0
 800f980:	2b00      	cmp	r3, #0
 800f982:	d001      	beq.n	800f988 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x56>
 800f984:	2301      	movs	r3, #1
 800f986:	e000      	b.n	800f98a <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x58>
 800f988:	2300      	movs	r3, #0
      else if (errno == ERANGE
 800f98a:	2b00      	cmp	r3, #0
 800f98c:	d002      	beq.n	800f994 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x62>
	std::__throw_out_of_range(__name);
 800f98e:	68b8      	ldr	r0, [r7, #8]
 800f990:	f012 fe56 	bl	8022640 <_ZSt20__throw_out_of_rangePKc>
	__ret = __tmp;
 800f994:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f996:	623b      	str	r3, [r7, #32]
      if (__idx)
 800f998:	683b      	ldr	r3, [r7, #0]
 800f99a:	2b00      	cmp	r3, #0
 800f99c:	d005      	beq.n	800f9aa <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x78>
	*__idx = __endptr - __str;
 800f99e:	69ba      	ldr	r2, [r7, #24]
 800f9a0:	687b      	ldr	r3, [r7, #4]
 800f9a2:	1ad3      	subs	r3, r2, r3
 800f9a4:	461a      	mov	r2, r3
 800f9a6:	683b      	ldr	r3, [r7, #0]
 800f9a8:	601a      	str	r2, [r3, #0]
      return __ret;
 800f9aa:	6a3c      	ldr	r4, [r7, #32]
      } const __save_errno;
 800f9ac:	f107 0314 	add.w	r3, r7, #20
 800f9b0:	4618      	mov	r0, r3
 800f9b2:	f7ff ff97 	bl	800f8e4 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>
      return __ret;
 800f9b6:	ee07 4a90 	vmov	s15, r4
    }
 800f9ba:	eeb0 0a67 	vmov.f32	s0, s15
 800f9be:	372c      	adds	r7, #44	; 0x2c
 800f9c0:	46bd      	mov	sp, r7
 800f9c2:	bd90      	pop	{r4, r7, pc}

0800f9c4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800f9c4:	b580      	push	{r7, lr}
 800f9c6:	b082      	sub	sp, #8
 800f9c8:	af00      	add	r7, sp, #0
 800f9ca:	6078      	str	r0, [r7, #4]
 800f9cc:	7039      	strb	r1, [r7, #0]
 800f9ce:	687b      	ldr	r3, [r7, #4]
 800f9d0:	4611      	mov	r1, r2
 800f9d2:	4618      	mov	r0, r3
 800f9d4:	f000 f9df 	bl	800fd96 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800f9d8:	687b      	ldr	r3, [r7, #4]
 800f9da:	4618      	mov	r0, r3
 800f9dc:	3708      	adds	r7, #8
 800f9de:	46bd      	mov	sp, r7
 800f9e0:	bd80      	pop	{r7, pc}

0800f9e2 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800f9e2:	b580      	push	{r7, lr}
 800f9e4:	b082      	sub	sp, #8
 800f9e6:	af00      	add	r7, sp, #0
 800f9e8:	6078      	str	r0, [r7, #4]
 800f9ea:	7039      	strb	r1, [r7, #0]
 800f9ec:	687b      	ldr	r3, [r7, #4]
 800f9ee:	4611      	mov	r1, r2
 800f9f0:	4618      	mov	r0, r3
 800f9f2:	f7ff ffe7 	bl	800f9c4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800f9f6:	687b      	ldr	r3, [r7, #4]
 800f9f8:	4618      	mov	r0, r3
 800f9fa:	3708      	adds	r7, #8
 800f9fc:	46bd      	mov	sp, r7
 800f9fe:	bd80      	pop	{r7, pc}

0800fa00 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fa00:	b580      	push	{r7, lr}
 800fa02:	b082      	sub	sp, #8
 800fa04:	af00      	add	r7, sp, #0
 800fa06:	6078      	str	r0, [r7, #4]
 800fa08:	7039      	strb	r1, [r7, #0]
 800fa0a:	687b      	ldr	r3, [r7, #4]
 800fa0c:	4611      	mov	r1, r2
 800fa0e:	4618      	mov	r0, r3
 800fa10:	f7ff ffe7 	bl	800f9e2 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fa14:	687b      	ldr	r3, [r7, #4]
 800fa16:	4618      	mov	r0, r3
 800fa18:	3708      	adds	r7, #8
 800fa1a:	46bd      	mov	sp, r7
 800fa1c:	bd80      	pop	{r7, pc}

0800fa1e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fa1e:	b580      	push	{r7, lr}
 800fa20:	b082      	sub	sp, #8
 800fa22:	af00      	add	r7, sp, #0
 800fa24:	6078      	str	r0, [r7, #4]
 800fa26:	7039      	strb	r1, [r7, #0]
 800fa28:	687b      	ldr	r3, [r7, #4]
 800fa2a:	4611      	mov	r1, r2
 800fa2c:	4618      	mov	r0, r3
 800fa2e:	f7ff ffe7 	bl	800fa00 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fa32:	687b      	ldr	r3, [r7, #4]
 800fa34:	4618      	mov	r0, r3
 800fa36:	3708      	adds	r7, #8
 800fa38:	46bd      	mov	sp, r7
 800fa3a:	bd80      	pop	{r7, pc}

0800fa3c <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 800fa3c:	b580      	push	{r7, lr}
 800fa3e:	b082      	sub	sp, #8
 800fa40:	af00      	add	r7, sp, #0
 800fa42:	6078      	str	r0, [r7, #4]
 800fa44:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 800fa46:	687b      	ldr	r3, [r7, #4]
 800fa48:	4611      	mov	r1, r2
 800fa4a:	4618      	mov	r0, r3
 800fa4c:	f7ff ffe7 	bl	800fa1e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800fa50:	687b      	ldr	r3, [r7, #4]
 800fa52:	4618      	mov	r0, r3
 800fa54:	3708      	adds	r7, #8
 800fa56:	46bd      	mov	sp, r7
 800fa58:	bd80      	pop	{r7, pc}

0800fa5a <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      _Variant_base()
 800fa5a:	b580      	push	{r7, lr}
 800fa5c:	b082      	sub	sp, #8
 800fa5e:	af00      	add	r7, sp, #0
 800fa60:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 800fa62:	4619      	mov	r1, r3
 800fa64:	6878      	ldr	r0, [r7, #4]
 800fa66:	f7ff ffe9 	bl	800fa3c <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fa6a:	687b      	ldr	r3, [r7, #4]
 800fa6c:	4618      	mov	r0, r3
 800fa6e:	3708      	adds	r7, #8
 800fa70:	46bd      	mov	sp, r7
 800fa72:	bd80      	pop	{r7, pc}

0800fa74 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
      ~_Variant_storage()
 800fa74:	b580      	push	{r7, lr}
 800fa76:	b082      	sub	sp, #8
 800fa78:	af00      	add	r7, sp, #0
 800fa7a:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 800fa7c:	6878      	ldr	r0, [r7, #4]
 800fa7e:	f000 f99c 	bl	800fdba <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
 800fa82:	687b      	ldr	r3, [r7, #4]
 800fa84:	4618      	mov	r0, r3
 800fa86:	3708      	adds	r7, #8
 800fa88:	46bd      	mov	sp, r7
 800fa8a:	bd80      	pop	{r7, pc}

0800fa8c <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>:
       *  iterator pointing to the sought after %pair. If unsuccessful it
       *  returns the past-the-end ( @c end() ) iterator.
       */

      const_iterator
      find(const key_type& __x) const
 800fa8c:	b580      	push	{r7, lr}
 800fa8e:	b082      	sub	sp, #8
 800fa90:	af00      	add	r7, sp, #0
 800fa92:	6078      	str	r0, [r7, #4]
 800fa94:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800fa96:	687b      	ldr	r3, [r7, #4]
 800fa98:	6839      	ldr	r1, [r7, #0]
 800fa9a:	4618      	mov	r0, r3
 800fa9c:	f000 f99b 	bl	800fdd6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>
 800faa0:	4603      	mov	r3, r0
 800faa2:	4618      	mov	r0, r3
 800faa4:	3708      	adds	r7, #8
 800faa6:	46bd      	mov	sp, r7
 800faa8:	bd80      	pop	{r7, pc}

0800faaa <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800faaa:	b580      	push	{r7, lr}
 800faac:	b082      	sub	sp, #8
 800faae:	af00      	add	r7, sp, #0
 800fab0:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800fab2:	687b      	ldr	r3, [r7, #4]
 800fab4:	4618      	mov	r0, r3
 800fab6:	f000 f9ca 	bl	800fe4e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800faba:	4603      	mov	r3, r0
 800fabc:	4618      	mov	r0, r3
 800fabe:	3708      	adds	r7, #8
 800fac0:	46bd      	mov	sp, r7
 800fac2:	bd80      	pop	{r7, pc}

0800fac4 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800fac4:	b480      	push	{r7}
 800fac6:	b083      	sub	sp, #12
 800fac8:	af00      	add	r7, sp, #0
 800faca:	6078      	str	r0, [r7, #4]
 800facc:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800face:	687b      	ldr	r3, [r7, #4]
 800fad0:	681a      	ldr	r2, [r3, #0]
 800fad2:	683b      	ldr	r3, [r7, #0]
 800fad4:	681b      	ldr	r3, [r3, #0]
 800fad6:	429a      	cmp	r2, r3
 800fad8:	bf14      	ite	ne
 800fada:	2301      	movne	r3, #1
 800fadc:	2300      	moveq	r3, #0
 800fade:	b2db      	uxtb	r3, r3
 800fae0:	4618      	mov	r0, r3
 800fae2:	370c      	adds	r7, #12
 800fae4:	46bd      	mov	sp, r7
 800fae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800faea:	4770      	bx	lr

0800faec <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800faec:	b580      	push	{r7, lr}
 800faee:	b082      	sub	sp, #8
 800faf0:	af00      	add	r7, sp, #0
 800faf2:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 800faf4:	687b      	ldr	r3, [r7, #4]
 800faf6:	681b      	ldr	r3, [r3, #0]
 800faf8:	4618      	mov	r0, r3
 800fafa:	f7f7 f9b4 	bl	8006e66 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 800fafe:	4603      	mov	r3, r0
 800fb00:	4618      	mov	r0, r3
 800fb02:	3708      	adds	r7, #8
 800fb04:	46bd      	mov	sp, r7
 800fb06:	bd80      	pop	{r7, pc}

0800fb08 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>:
      find(const key_type& __x) const
 800fb08:	b580      	push	{r7, lr}
 800fb0a:	b082      	sub	sp, #8
 800fb0c:	af00      	add	r7, sp, #0
 800fb0e:	6078      	str	r0, [r7, #4]
 800fb10:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800fb12:	687b      	ldr	r3, [r7, #4]
 800fb14:	6839      	ldr	r1, [r7, #0]
 800fb16:	4618      	mov	r0, r3
 800fb18:	f000 f9aa 	bl	800fe70 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>
 800fb1c:	4603      	mov	r3, r0
 800fb1e:	4618      	mov	r0, r3
 800fb20:	3708      	adds	r7, #8
 800fb22:	46bd      	mov	sp, r7
 800fb24:	bd80      	pop	{r7, pc}

0800fb26 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fb26:	b580      	push	{r7, lr}
 800fb28:	b082      	sub	sp, #8
 800fb2a:	af00      	add	r7, sp, #0
 800fb2c:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800fb2e:	687b      	ldr	r3, [r7, #4]
 800fb30:	4618      	mov	r0, r3
 800fb32:	f000 f9d9 	bl	800fee8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800fb36:	4603      	mov	r3, r0
 800fb38:	4618      	mov	r0, r3
 800fb3a:	3708      	adds	r7, #8
 800fb3c:	46bd      	mov	sp, r7
 800fb3e:	bd80      	pop	{r7, pc}

0800fb40 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800fb40:	b480      	push	{r7}
 800fb42:	b083      	sub	sp, #12
 800fb44:	af00      	add	r7, sp, #0
 800fb46:	6078      	str	r0, [r7, #4]
 800fb48:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800fb4a:	687b      	ldr	r3, [r7, #4]
 800fb4c:	681a      	ldr	r2, [r3, #0]
 800fb4e:	683b      	ldr	r3, [r7, #0]
 800fb50:	681b      	ldr	r3, [r3, #0]
 800fb52:	429a      	cmp	r2, r3
 800fb54:	bf14      	ite	ne
 800fb56:	2301      	movne	r3, #1
 800fb58:	2300      	moveq	r3, #0
 800fb5a:	b2db      	uxtb	r3, r3
 800fb5c:	4618      	mov	r0, r3
 800fb5e:	370c      	adds	r7, #12
 800fb60:	46bd      	mov	sp, r7
 800fb62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb66:	4770      	bx	lr

0800fb68 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800fb68:	b580      	push	{r7, lr}
 800fb6a:	b082      	sub	sp, #8
 800fb6c:	af00      	add	r7, sp, #0
 800fb6e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 800fb70:	687b      	ldr	r3, [r7, #4]
 800fb72:	681b      	ldr	r3, [r3, #0]
 800fb74:	4618      	mov	r0, r3
 800fb76:	f7f7 fa51 	bl	800701c <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 800fb7a:	4603      	mov	r3, r0
 800fb7c:	4618      	mov	r0, r3
 800fb7e:	3708      	adds	r7, #8
 800fb80:	46bd      	mov	sp, r7
 800fb82:	bd80      	pop	{r7, pc}

0800fb84 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>:
      find(const key_type& __x) const
 800fb84:	b580      	push	{r7, lr}
 800fb86:	b082      	sub	sp, #8
 800fb88:	af00      	add	r7, sp, #0
 800fb8a:	6078      	str	r0, [r7, #4]
 800fb8c:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800fb8e:	687b      	ldr	r3, [r7, #4]
 800fb90:	6839      	ldr	r1, [r7, #0]
 800fb92:	4618      	mov	r0, r3
 800fb94:	f000 f9b9 	bl	800ff0a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>
 800fb98:	4603      	mov	r3, r0
 800fb9a:	4618      	mov	r0, r3
 800fb9c:	3708      	adds	r7, #8
 800fb9e:	46bd      	mov	sp, r7
 800fba0:	bd80      	pop	{r7, pc}

0800fba2 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fba2:	b580      	push	{r7, lr}
 800fba4:	b082      	sub	sp, #8
 800fba6:	af00      	add	r7, sp, #0
 800fba8:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800fbaa:	687b      	ldr	r3, [r7, #4]
 800fbac:	4618      	mov	r0, r3
 800fbae:	f000 f9e8 	bl	800ff82 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 800fbb2:	4603      	mov	r3, r0
 800fbb4:	4618      	mov	r0, r3
 800fbb6:	3708      	adds	r7, #8
 800fbb8:	46bd      	mov	sp, r7
 800fbba:	bd80      	pop	{r7, pc}

0800fbbc <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800fbbc:	b480      	push	{r7}
 800fbbe:	b083      	sub	sp, #12
 800fbc0:	af00      	add	r7, sp, #0
 800fbc2:	6078      	str	r0, [r7, #4]
 800fbc4:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800fbc6:	687b      	ldr	r3, [r7, #4]
 800fbc8:	681a      	ldr	r2, [r3, #0]
 800fbca:	683b      	ldr	r3, [r7, #0]
 800fbcc:	681b      	ldr	r3, [r3, #0]
 800fbce:	429a      	cmp	r2, r3
 800fbd0:	bf14      	ite	ne
 800fbd2:	2301      	movne	r3, #1
 800fbd4:	2300      	moveq	r3, #0
 800fbd6:	b2db      	uxtb	r3, r3
 800fbd8:	4618      	mov	r0, r3
 800fbda:	370c      	adds	r7, #12
 800fbdc:	46bd      	mov	sp, r7
 800fbde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbe2:	4770      	bx	lr

0800fbe4 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800fbe4:	b580      	push	{r7, lr}
 800fbe6:	b082      	sub	sp, #8
 800fbe8:	af00      	add	r7, sp, #0
 800fbea:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 800fbec:	687b      	ldr	r3, [r7, #4]
 800fbee:	681b      	ldr	r3, [r3, #0]
 800fbf0:	4618      	mov	r0, r3
 800fbf2:	f7f7 f9a6 	bl	8006f42 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 800fbf6:	4603      	mov	r3, r0
 800fbf8:	4618      	mov	r0, r3
 800fbfa:	3708      	adds	r7, #8
 800fbfc:	46bd      	mov	sp, r7
 800fbfe:	bd80      	pop	{r7, pc}

0800fc00 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>:
      constexpr size_t index() const noexcept
 800fc00:	b480      	push	{r7}
 800fc02:	b083      	sub	sp, #12
 800fc04:	af00      	add	r7, sp, #0
 800fc06:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 800fc08:	687b      	ldr	r3, [r7, #4]
 800fc0a:	7e1b      	ldrb	r3, [r3, #24]
 800fc0c:	2bff      	cmp	r3, #255	; 0xff
 800fc0e:	d102      	bne.n	800fc16 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv+0x16>
	  return variant_npos;
 800fc10:	f04f 33ff 	mov.w	r3, #4294967295
 800fc14:	e001      	b.n	800fc1a <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv+0x1a>
	return this->_M_index;
 800fc16:	687b      	ldr	r3, [r7, #4]
 800fc18:	7e1b      	ldrb	r3, [r3, #24]
      }
 800fc1a:	4618      	mov	r0, r3
 800fc1c:	370c      	adds	r7, #12
 800fc1e:	46bd      	mov	sp, r7
 800fc20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc24:	4770      	bx	lr

0800fc26 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 800fc26:	b590      	push	{r4, r7, lr}
 800fc28:	b085      	sub	sp, #20
 800fc2a:	af00      	add	r7, sp, #0
 800fc2c:	6078      	str	r0, [r7, #4]
 800fc2e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800fc30:	2300      	movs	r3, #0
 800fc32:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800fc34:	6878      	ldr	r0, [r7, #4]
 800fc36:	f7ff ffe3 	bl	800fc00 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800fc3a:	4603      	mov	r3, r0
 800fc3c:	2b00      	cmp	r3, #0
 800fc3e:	bf0c      	ite	eq
 800fc40:	2301      	moveq	r3, #1
 800fc42:	2300      	movne	r3, #0
 800fc44:	b2db      	uxtb	r3, r3
 800fc46:	2b00      	cmp	r3, #0
 800fc48:	d00c      	beq.n	800fc64 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800fc4a:	6838      	ldr	r0, [r7, #0]
 800fc4c:	f7f8 fd43 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800fc50:	4604      	mov	r4, r0
 800fc52:	6878      	ldr	r0, [r7, #4]
 800fc54:	f000 f9c8 	bl	800ffe8 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 800fc58:	4603      	mov	r3, r0
 800fc5a:	4621      	mov	r1, r4
 800fc5c:	4618      	mov	r0, r3
 800fc5e:	f012 fecc 	bl	80229fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 800fc62:	e007      	b.n	800fc74 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800fc64:	6838      	ldr	r0, [r7, #0]
 800fc66:	f7f8 fd36 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800fc6a:	4603      	mov	r3, r0
 800fc6c:	4619      	mov	r1, r3
 800fc6e:	6878      	ldr	r0, [r7, #4]
 800fc70:	f000 f9d6 	bl	8010020 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 800fc74:	687b      	ldr	r3, [r7, #4]
	}
 800fc76:	4618      	mov	r0, r3
 800fc78:	3714      	adds	r7, #20
 800fc7a:	46bd      	mov	sp, r7
 800fc7c:	bd90      	pop	{r4, r7, pc}

0800fc7e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 800fc7e:	b590      	push	{r4, r7, lr}
 800fc80:	b085      	sub	sp, #20
 800fc82:	af00      	add	r7, sp, #0
 800fc84:	6078      	str	r0, [r7, #4]
 800fc86:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800fc88:	2301      	movs	r3, #1
 800fc8a:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800fc8c:	6878      	ldr	r0, [r7, #4]
 800fc8e:	f7ff ffb7 	bl	800fc00 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800fc92:	4603      	mov	r3, r0
 800fc94:	2b01      	cmp	r3, #1
 800fc96:	bf0c      	ite	eq
 800fc98:	2301      	moveq	r3, #1
 800fc9a:	2300      	movne	r3, #0
 800fc9c:	b2db      	uxtb	r3, r3
 800fc9e:	2b00      	cmp	r3, #0
 800fca0:	d00a      	beq.n	800fcb8 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800fca2:	6838      	ldr	r0, [r7, #0]
 800fca4:	f7f8 fc7c 	bl	80085a0 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800fca8:	4603      	mov	r3, r0
 800fcaa:	681c      	ldr	r4, [r3, #0]
 800fcac:	6878      	ldr	r0, [r7, #4]
 800fcae:	f000 fa05 	bl	80100bc <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 800fcb2:	4603      	mov	r3, r0
 800fcb4:	601c      	str	r4, [r3, #0]
 800fcb6:	e007      	b.n	800fcc8 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800fcb8:	6838      	ldr	r0, [r7, #0]
 800fcba:	f7f8 fc71 	bl	80085a0 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800fcbe:	4603      	mov	r3, r0
 800fcc0:	4619      	mov	r1, r3
 800fcc2:	6878      	ldr	r0, [r7, #4]
 800fcc4:	f000 fa16 	bl	80100f4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 800fcc8:	687b      	ldr	r3, [r7, #4]
	}
 800fcca:	4618      	mov	r0, r3
 800fccc:	3714      	adds	r7, #20
 800fcce:	46bd      	mov	sp, r7
 800fcd0:	bd90      	pop	{r4, r7, pc}

0800fcd2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 800fcd2:	b590      	push	{r4, r7, lr}
 800fcd4:	b085      	sub	sp, #20
 800fcd6:	af00      	add	r7, sp, #0
 800fcd8:	6078      	str	r0, [r7, #4]
 800fcda:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800fcdc:	2302      	movs	r3, #2
 800fcde:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800fce0:	6878      	ldr	r0, [r7, #4]
 800fce2:	f7ff ff8d 	bl	800fc00 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800fce6:	4603      	mov	r3, r0
 800fce8:	2b02      	cmp	r3, #2
 800fcea:	bf0c      	ite	eq
 800fcec:	2301      	moveq	r3, #1
 800fcee:	2300      	movne	r3, #0
 800fcf0:	b2db      	uxtb	r3, r3
 800fcf2:	2b00      	cmp	r3, #0
 800fcf4:	d00a      	beq.n	800fd0c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800fcf6:	6838      	ldr	r0, [r7, #0]
 800fcf8:	f7f8 fc7c 	bl	80085f4 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800fcfc:	4603      	mov	r3, r0
 800fcfe:	681c      	ldr	r4, [r3, #0]
 800fd00:	6878      	ldr	r0, [r7, #4]
 800fd02:	f000 fa57 	bl	80101b4 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 800fd06:	4603      	mov	r3, r0
 800fd08:	601c      	str	r4, [r3, #0]
 800fd0a:	e007      	b.n	800fd1c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800fd0c:	6838      	ldr	r0, [r7, #0]
 800fd0e:	f7f8 fc71 	bl	80085f4 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800fd12:	4603      	mov	r3, r0
 800fd14:	4619      	mov	r1, r3
 800fd16:	6878      	ldr	r0, [r7, #4]
 800fd18:	f000 fa68 	bl	80101ec <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 800fd1c:	687b      	ldr	r3, [r7, #4]
	}
 800fd1e:	4618      	mov	r0, r3
 800fd20:	3714      	adds	r7, #20
 800fd22:	46bd      	mov	sp, r7
 800fd24:	bd90      	pop	{r4, r7, pc}

0800fd26 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Copy_ctor_base(const _Copy_ctor_base& __rhs)
 800fd26:	b580      	push	{r7, lr}
 800fd28:	b082      	sub	sp, #8
 800fd2a:	af00      	add	r7, sp, #0
 800fd2c:	6078      	str	r0, [r7, #4]
 800fd2e:	6039      	str	r1, [r7, #0]
      {
 800fd30:	687b      	ldr	r3, [r7, #4]
 800fd32:	4618      	mov	r0, r3
 800fd34:	f000 fa80 	bl	8010238 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
	__variant_construct<_Types...>(*this, __rhs);
 800fd38:	6839      	ldr	r1, [r7, #0]
 800fd3a:	6878      	ldr	r0, [r7, #4]
 800fd3c:	f000 fd1a 	bl	8010774 <_ZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_>
      }
 800fd40:	687b      	ldr	r3, [r7, #4]
 800fd42:	4618      	mov	r0, r3
 800fd44:	3708      	adds	r7, #8
 800fd46:	46bd      	mov	sp, r7
 800fd48:	bd80      	pop	{r7, pc}

0800fd4a <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 800fd4a:	b580      	push	{r7, lr}
 800fd4c:	b082      	sub	sp, #8
 800fd4e:	af00      	add	r7, sp, #0
 800fd50:	6078      	str	r0, [r7, #4]
 800fd52:	7039      	strb	r1, [r7, #0]
	  ::new ((void*)std::addressof(_M_storage))
 800fd54:	687b      	ldr	r3, [r7, #4]
 800fd56:	4618      	mov	r0, r3
 800fd58:	f7f7 fd9f 	bl	800789a <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 800fd5c:	4603      	mov	r3, r0
 800fd5e:	4619      	mov	r1, r3
 800fd60:	2018      	movs	r0, #24
 800fd62:	f7f1 f97a 	bl	800105a <_ZnwjPv>
 800fd66:	4603      	mov	r3, r0
 800fd68:	4618      	mov	r0, r3
 800fd6a:	f012 fe19 	bl	80229a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
	}
 800fd6e:	687b      	ldr	r3, [r7, #4]
 800fd70:	4618      	mov	r0, r3
 800fd72:	3708      	adds	r7, #8
 800fd74:	46bd      	mov	sp, r7
 800fd76:	bd80      	pop	{r7, pc}

0800fd78 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 800fd78:	b580      	push	{r7, lr}
 800fd7a:	b082      	sub	sp, #8
 800fd7c:	af00      	add	r7, sp, #0
 800fd7e:	6078      	str	r0, [r7, #4]
 800fd80:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 800fd82:	687b      	ldr	r3, [r7, #4]
 800fd84:	4611      	mov	r1, r2
 800fd86:	4618      	mov	r0, r3
 800fd88:	f7ff ffdf 	bl	800fd4a <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800fd8c:	687b      	ldr	r3, [r7, #4]
 800fd8e:	4618      	mov	r0, r3
 800fd90:	3708      	adds	r7, #8
 800fd92:	46bd      	mov	sp, r7
 800fd94:	bd80      	pop	{r7, pc}

0800fd96 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 800fd96:	b580      	push	{r7, lr}
 800fd98:	b082      	sub	sp, #8
 800fd9a:	af00      	add	r7, sp, #0
 800fd9c:	6078      	str	r0, [r7, #4]
 800fd9e:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 800fda0:	687b      	ldr	r3, [r7, #4]
 800fda2:	4611      	mov	r1, r2
 800fda4:	4618      	mov	r0, r3
 800fda6:	f7ff ffe7 	bl	800fd78 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 800fdaa:	687b      	ldr	r3, [r7, #4]
 800fdac:	2200      	movs	r2, #0
 800fdae:	761a      	strb	r2, [r3, #24]
	{ }
 800fdb0:	687b      	ldr	r3, [r7, #4]
 800fdb2:	4618      	mov	r0, r3
 800fdb4:	3708      	adds	r7, #8
 800fdb6:	46bd      	mov	sp, r7
 800fdb8:	bd80      	pop	{r7, pc}

0800fdba <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>:
      void _M_reset()
 800fdba:	b580      	push	{r7, lr}
 800fdbc:	b082      	sub	sp, #8
 800fdbe:	af00      	add	r7, sp, #0
 800fdc0:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 800fdc2:	6878      	ldr	r0, [r7, #4]
 800fdc4:	f000 fee6 	bl	8010b94 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEv>
	_M_index = variant_npos;
 800fdc8:	687b      	ldr	r3, [r7, #4]
 800fdca:	22ff      	movs	r2, #255	; 0xff
 800fdcc:	761a      	strb	r2, [r3, #24]
      }
 800fdce:	bf00      	nop
 800fdd0:	3708      	adds	r7, #8
 800fdd2:	46bd      	mov	sp, r7
 800fdd4:	bd80      	pop	{r7, pc}

0800fdd6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::const_iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800fdd6:	b590      	push	{r4, r7, lr}
 800fdd8:	b085      	sub	sp, #20
 800fdda:	af00      	add	r7, sp, #0
 800fddc:	6078      	str	r0, [r7, #4]
 800fdde:	6039      	str	r1, [r7, #0]
    find(const _Key& __k) const
    {
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 800fde0:	6878      	ldr	r0, [r7, #4]
 800fde2:	f000 fee9 	bl	8010bb8 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 800fde6:	4604      	mov	r4, r0
 800fde8:	6878      	ldr	r0, [r7, #4]
 800fdea:	f000 fef1 	bl	8010bd0 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 800fdee:	4602      	mov	r2, r0
 800fdf0:	683b      	ldr	r3, [r7, #0]
 800fdf2:	4621      	mov	r1, r4
 800fdf4:	6878      	ldr	r0, [r7, #4]
 800fdf6:	f000 fef7 	bl	8010be8 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>
 800fdfa:	4603      	mov	r3, r0
 800fdfc:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 800fdfe:	6878      	ldr	r0, [r7, #4]
 800fe00:	f000 f825 	bl	800fe4e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800fe04:	4603      	mov	r3, r0
 800fe06:	60fb      	str	r3, [r7, #12]
 800fe08:	f107 020c 	add.w	r2, r7, #12
 800fe0c:	f107 0308 	add.w	r3, r7, #8
 800fe10:	4611      	mov	r1, r2
 800fe12:	4618      	mov	r0, r3
 800fe14:	f000 ff19 	bl	8010c4a <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>
 800fe18:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
					_S_key(__j._M_node))) ? end() : __j;
 800fe1a:	2b00      	cmp	r3, #0
 800fe1c:	d10d      	bne.n	800fe3a <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x64>
	      || _M_impl._M_key_compare(__k,
 800fe1e:	687c      	ldr	r4, [r7, #4]
 800fe20:	68bb      	ldr	r3, [r7, #8]
 800fe22:	4618      	mov	r0, r3
 800fe24:	f7f5 fa67 	bl	80052f6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800fe28:	4603      	mov	r3, r0
 800fe2a:	461a      	mov	r2, r3
 800fe2c:	6839      	ldr	r1, [r7, #0]
 800fe2e:	4620      	mov	r0, r4
 800fe30:	f7f5 fa6d 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 800fe34:	4603      	mov	r3, r0
 800fe36:	2b00      	cmp	r3, #0
 800fe38:	d004      	beq.n	800fe44 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 800fe3a:	6878      	ldr	r0, [r7, #4]
 800fe3c:	f000 f807 	bl	800fe4e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800fe40:	4603      	mov	r3, r0
 800fe42:	e000      	b.n	800fe46 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x70>
 800fe44:	68bb      	ldr	r3, [r7, #8]
    }
 800fe46:	4618      	mov	r0, r3
 800fe48:	3714      	adds	r7, #20
 800fe4a:	46bd      	mov	sp, r7
 800fe4c:	bd90      	pop	{r4, r7, pc}

0800fe4e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fe4e:	b580      	push	{r7, lr}
 800fe50:	b084      	sub	sp, #16
 800fe52:	af00      	add	r7, sp, #0
 800fe54:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 800fe56:	687b      	ldr	r3, [r7, #4]
 800fe58:	1d1a      	adds	r2, r3, #4
 800fe5a:	f107 030c 	add.w	r3, r7, #12
 800fe5e:	4611      	mov	r1, r2
 800fe60:	4618      	mov	r0, r3
 800fe62:	f000 ff06 	bl	8010c72 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>
 800fe66:	68fb      	ldr	r3, [r7, #12]
 800fe68:	4618      	mov	r0, r3
 800fe6a:	3710      	adds	r7, #16
 800fe6c:	46bd      	mov	sp, r7
 800fe6e:	bd80      	pop	{r7, pc}

0800fe70 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800fe70:	b590      	push	{r4, r7, lr}
 800fe72:	b085      	sub	sp, #20
 800fe74:	af00      	add	r7, sp, #0
 800fe76:	6078      	str	r0, [r7, #4]
 800fe78:	6039      	str	r1, [r7, #0]
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 800fe7a:	6878      	ldr	r0, [r7, #4]
 800fe7c:	f000 ff08 	bl	8010c90 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 800fe80:	4604      	mov	r4, r0
 800fe82:	6878      	ldr	r0, [r7, #4]
 800fe84:	f000 ff10 	bl	8010ca8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 800fe88:	4602      	mov	r2, r0
 800fe8a:	683b      	ldr	r3, [r7, #0]
 800fe8c:	4621      	mov	r1, r4
 800fe8e:	6878      	ldr	r0, [r7, #4]
 800fe90:	f000 ff16 	bl	8010cc0 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>
 800fe94:	4603      	mov	r3, r0
 800fe96:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 800fe98:	6878      	ldr	r0, [r7, #4]
 800fe9a:	f000 f825 	bl	800fee8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800fe9e:	4603      	mov	r3, r0
 800fea0:	60fb      	str	r3, [r7, #12]
 800fea2:	f107 020c 	add.w	r2, r7, #12
 800fea6:	f107 0308 	add.w	r3, r7, #8
 800feaa:	4611      	mov	r1, r2
 800feac:	4618      	mov	r0, r3
 800feae:	f000 ff38 	bl	8010d22 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>
 800feb2:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 800feb4:	2b00      	cmp	r3, #0
 800feb6:	d10d      	bne.n	800fed4 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x64>
	      || _M_impl._M_key_compare(__k,
 800feb8:	687c      	ldr	r4, [r7, #4]
 800feba:	68bb      	ldr	r3, [r7, #8]
 800febc:	4618      	mov	r0, r3
 800febe:	f7f5 fcf9 	bl	80058b4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800fec2:	4603      	mov	r3, r0
 800fec4:	461a      	mov	r2, r3
 800fec6:	6839      	ldr	r1, [r7, #0]
 800fec8:	4620      	mov	r0, r4
 800feca:	f7f5 fa20 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 800fece:	4603      	mov	r3, r0
 800fed0:	2b00      	cmp	r3, #0
 800fed2:	d004      	beq.n	800fede <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 800fed4:	6878      	ldr	r0, [r7, #4]
 800fed6:	f000 f807 	bl	800fee8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800feda:	4603      	mov	r3, r0
 800fedc:	e000      	b.n	800fee0 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x70>
 800fede:	68bb      	ldr	r3, [r7, #8]
    }
 800fee0:	4618      	mov	r0, r3
 800fee2:	3714      	adds	r7, #20
 800fee4:	46bd      	mov	sp, r7
 800fee6:	bd90      	pop	{r4, r7, pc}

0800fee8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fee8:	b580      	push	{r7, lr}
 800feea:	b084      	sub	sp, #16
 800feec:	af00      	add	r7, sp, #0
 800feee:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 800fef0:	687b      	ldr	r3, [r7, #4]
 800fef2:	1d1a      	adds	r2, r3, #4
 800fef4:	f107 030c 	add.w	r3, r7, #12
 800fef8:	4611      	mov	r1, r2
 800fefa:	4618      	mov	r0, r3
 800fefc:	f000 ff25 	bl	8010d4a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>
 800ff00:	68fb      	ldr	r3, [r7, #12]
 800ff02:	4618      	mov	r0, r3
 800ff04:	3710      	adds	r7, #16
 800ff06:	46bd      	mov	sp, r7
 800ff08:	bd80      	pop	{r7, pc}

0800ff0a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800ff0a:	b590      	push	{r4, r7, lr}
 800ff0c:	b085      	sub	sp, #20
 800ff0e:	af00      	add	r7, sp, #0
 800ff10:	6078      	str	r0, [r7, #4]
 800ff12:	6039      	str	r1, [r7, #0]
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 800ff14:	6878      	ldr	r0, [r7, #4]
 800ff16:	f000 ff27 	bl	8010d68 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 800ff1a:	4604      	mov	r4, r0
 800ff1c:	6878      	ldr	r0, [r7, #4]
 800ff1e:	f000 ff2f 	bl	8010d80 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 800ff22:	4602      	mov	r2, r0
 800ff24:	683b      	ldr	r3, [r7, #0]
 800ff26:	4621      	mov	r1, r4
 800ff28:	6878      	ldr	r0, [r7, #4]
 800ff2a:	f000 ff35 	bl	8010d98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_>
 800ff2e:	4603      	mov	r3, r0
 800ff30:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 800ff32:	6878      	ldr	r0, [r7, #4]
 800ff34:	f000 f825 	bl	800ff82 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 800ff38:	4603      	mov	r3, r0
 800ff3a:	60fb      	str	r3, [r7, #12]
 800ff3c:	f107 020c 	add.w	r2, r7, #12
 800ff40:	f107 0308 	add.w	r3, r7, #8
 800ff44:	4611      	mov	r1, r2
 800ff46:	4618      	mov	r0, r3
 800ff48:	f000 ff57 	bl	8010dfa <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 800ff4c:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 800ff4e:	2b00      	cmp	r3, #0
 800ff50:	d10d      	bne.n	800ff6e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 800ff52:	687c      	ldr	r4, [r7, #4]
 800ff54:	68bb      	ldr	r3, [r7, #8]
 800ff56:	4618      	mov	r0, r3
 800ff58:	f7f5 fb62 	bl	8005620 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800ff5c:	4603      	mov	r3, r0
 800ff5e:	461a      	mov	r2, r3
 800ff60:	6839      	ldr	r1, [r7, #0]
 800ff62:	4620      	mov	r0, r4
 800ff64:	f7f5 fb68 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800ff68:	4603      	mov	r3, r0
 800ff6a:	2b00      	cmp	r3, #0
 800ff6c:	d004      	beq.n	800ff78 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 800ff6e:	6878      	ldr	r0, [r7, #4]
 800ff70:	f000 f807 	bl	800ff82 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 800ff74:	4603      	mov	r3, r0
 800ff76:	e000      	b.n	800ff7a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x70>
 800ff78:	68bb      	ldr	r3, [r7, #8]
    }
 800ff7a:	4618      	mov	r0, r3
 800ff7c:	3714      	adds	r7, #20
 800ff7e:	46bd      	mov	sp, r7
 800ff80:	bd90      	pop	{r4, r7, pc}

0800ff82 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800ff82:	b580      	push	{r7, lr}
 800ff84:	b084      	sub	sp, #16
 800ff86:	af00      	add	r7, sp, #0
 800ff88:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 800ff8a:	687b      	ldr	r3, [r7, #4]
 800ff8c:	1d1a      	adds	r2, r3, #4
 800ff8e:	f107 030c 	add.w	r3, r7, #12
 800ff92:	4611      	mov	r1, r2
 800ff94:	4618      	mov	r0, r3
 800ff96:	f000 ff44 	bl	8010e22 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>
 800ff9a:	68fb      	ldr	r3, [r7, #12]
 800ff9c:	4618      	mov	r0, r3
 800ff9e:	3710      	adds	r7, #16
 800ffa0:	46bd      	mov	sp, r7
 800ffa2:	bd80      	pop	{r7, pc}

0800ffa4 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800ffa4:	b580      	push	{r7, lr}
 800ffa6:	b082      	sub	sp, #8
 800ffa8:	af00      	add	r7, sp, #0
 800ffaa:	7138      	strb	r0, [r7, #4]
 800ffac:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800ffae:	6838      	ldr	r0, [r7, #0]
 800ffb0:	f000 ff51 	bl	8010e56 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 800ffb4:	4603      	mov	r3, r0
 800ffb6:	4618      	mov	r0, r3
 800ffb8:	f7f4 fec2 	bl	8004d40 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 800ffbc:	4603      	mov	r3, r0
 800ffbe:	4618      	mov	r0, r3
 800ffc0:	3708      	adds	r7, #8
 800ffc2:	46bd      	mov	sp, r7
 800ffc4:	bd80      	pop	{r7, pc}

0800ffc6 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ffc6:	b590      	push	{r4, r7, lr}
 800ffc8:	b083      	sub	sp, #12
 800ffca:	af00      	add	r7, sp, #0
 800ffcc:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ffce:	6878      	ldr	r0, [r7, #4]
 800ffd0:	f000 ff36 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800ffd4:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800ffd6:	4619      	mov	r1, r3
 800ffd8:	4620      	mov	r0, r4
 800ffda:	f7ff ffe3 	bl	800ffa4 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ffde:	4603      	mov	r3, r0
    }
 800ffe0:	4618      	mov	r0, r3
 800ffe2:	370c      	adds	r7, #12
 800ffe4:	46bd      	mov	sp, r7
 800ffe6:	bd90      	pop	{r4, r7, pc}

0800ffe8 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 800ffe8:	b580      	push	{r7, lr}
 800ffea:	b082      	sub	sp, #8
 800ffec:	af00      	add	r7, sp, #0
 800ffee:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800fff0:	6878      	ldr	r0, [r7, #4]
 800fff2:	f7ff fe05 	bl	800fc00 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800fff6:	4603      	mov	r3, r0
 800fff8:	2b00      	cmp	r3, #0
 800fffa:	bf14      	ite	ne
 800fffc:	2301      	movne	r3, #1
 800fffe:	2300      	moveq	r3, #0
 8010000:	b2db      	uxtb	r3, r3
 8010002:	2b00      	cmp	r3, #0
 8010004:	d002      	beq.n	801000c <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8010006:	4805      	ldr	r0, [pc, #20]	; (801001c <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 8010008:	f7f1 f833 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 801000c:	6878      	ldr	r0, [r7, #4]
 801000e:	f7ff ffda 	bl	800ffc6 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010012:	4603      	mov	r3, r0
    }
 8010014:	4618      	mov	r0, r3
 8010016:	3708      	adds	r7, #8
 8010018:	46bd      	mov	sp, r7
 801001a:	bd80      	pop	{r7, pc}
 801001c:	08027440 	.word	0x08027440

08010020 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8010020:	b580      	push	{r7, lr}
 8010022:	b082      	sub	sp, #8
 8010024:	af00      	add	r7, sp, #0
 8010026:	6078      	str	r0, [r7, #4]
 8010028:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801002a:	687b      	ldr	r3, [r7, #4]
 801002c:	4618      	mov	r0, r3
 801002e:	f7ff fec4 	bl	800fdba <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8010032:	6838      	ldr	r0, [r7, #0]
 8010034:	f7f8 fb4f 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010038:	4603      	mov	r3, r0
 801003a:	4619      	mov	r1, r3
 801003c:	6878      	ldr	r0, [r7, #4]
 801003e:	f000 ff15 	bl	8010e6c <_ZSt28__variant_construct_by_indexILj0ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8010042:	6878      	ldr	r0, [r7, #4]
 8010044:	f7ff ffd0 	bl	800ffe8 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8010048:	4603      	mov	r3, r0
	}
 801004a:	4618      	mov	r0, r3
 801004c:	3708      	adds	r7, #8
 801004e:	46bd      	mov	sp, r7
 8010050:	bd80      	pop	{r7, pc}

08010052 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010052:	b580      	push	{r7, lr}
 8010054:	b082      	sub	sp, #8
 8010056:	af00      	add	r7, sp, #0
 8010058:	7138      	strb	r0, [r7, #4]
 801005a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801005c:	6838      	ldr	r0, [r7, #0]
 801005e:	f000 ff26 	bl	8010eae <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010062:	4603      	mov	r3, r0
 8010064:	4618      	mov	r0, r3
 8010066:	f7f2 fadb 	bl	8002620 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 801006a:	4603      	mov	r3, r0
 801006c:	4618      	mov	r0, r3
 801006e:	3708      	adds	r7, #8
 8010070:	46bd      	mov	sp, r7
 8010072:	bd80      	pop	{r7, pc}

08010074 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010074:	b590      	push	{r4, r7, lr}
 8010076:	b083      	sub	sp, #12
 8010078:	af00      	add	r7, sp, #0
 801007a:	7138      	strb	r0, [r7, #4]
 801007c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801007e:	6838      	ldr	r0, [r7, #0]
 8010080:	f000 fee9 	bl	8010e56 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8010084:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010086:	4619      	mov	r1, r3
 8010088:	4620      	mov	r0, r4
 801008a:	f7ff ffe2 	bl	8010052 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 801008e:	4603      	mov	r3, r0
    }
 8010090:	4618      	mov	r0, r3
 8010092:	370c      	adds	r7, #12
 8010094:	46bd      	mov	sp, r7
 8010096:	bd90      	pop	{r4, r7, pc}

08010098 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010098:	b590      	push	{r4, r7, lr}
 801009a:	b083      	sub	sp, #12
 801009c:	af00      	add	r7, sp, #0
 801009e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80100a0:	6878      	ldr	r0, [r7, #4]
 80100a2:	f000 fecd 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80100a6:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80100a8:	4619      	mov	r1, r3
 80100aa:	4620      	mov	r0, r4
 80100ac:	f7ff ffe2 	bl	8010074 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80100b0:	4603      	mov	r3, r0
    }
 80100b2:	4618      	mov	r0, r3
 80100b4:	370c      	adds	r7, #12
 80100b6:	46bd      	mov	sp, r7
 80100b8:	bd90      	pop	{r4, r7, pc}
	...

080100bc <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 80100bc:	b580      	push	{r7, lr}
 80100be:	b082      	sub	sp, #8
 80100c0:	af00      	add	r7, sp, #0
 80100c2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80100c4:	6878      	ldr	r0, [r7, #4]
 80100c6:	f7ff fd9b 	bl	800fc00 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80100ca:	4603      	mov	r3, r0
 80100cc:	2b01      	cmp	r3, #1
 80100ce:	bf14      	ite	ne
 80100d0:	2301      	movne	r3, #1
 80100d2:	2300      	moveq	r3, #0
 80100d4:	b2db      	uxtb	r3, r3
 80100d6:	2b00      	cmp	r3, #0
 80100d8:	d002      	beq.n	80100e0 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80100da:	4805      	ldr	r0, [pc, #20]	; (80100f0 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 80100dc:	f7f0 ffc9 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80100e0:	6878      	ldr	r0, [r7, #4]
 80100e2:	f7ff ffd9 	bl	8010098 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80100e6:	4603      	mov	r3, r0
    }
 80100e8:	4618      	mov	r0, r3
 80100ea:	3708      	adds	r7, #8
 80100ec:	46bd      	mov	sp, r7
 80100ee:	bd80      	pop	{r7, pc}
 80100f0:	08027440 	.word	0x08027440

080100f4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 80100f4:	b580      	push	{r7, lr}
 80100f6:	b082      	sub	sp, #8
 80100f8:	af00      	add	r7, sp, #0
 80100fa:	6078      	str	r0, [r7, #4]
 80100fc:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80100fe:	687b      	ldr	r3, [r7, #4]
 8010100:	4618      	mov	r0, r3
 8010102:	f7ff fe5a 	bl	800fdba <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8010106:	6838      	ldr	r0, [r7, #0]
 8010108:	f7f8 fa4a 	bl	80085a0 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 801010c:	4603      	mov	r3, r0
 801010e:	4619      	mov	r1, r3
 8010110:	6878      	ldr	r0, [r7, #4]
 8010112:	f000 fed7 	bl	8010ec4 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8010116:	6878      	ldr	r0, [r7, #4]
 8010118:	f7ff ffd0 	bl	80100bc <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801011c:	4603      	mov	r3, r0
	}
 801011e:	4618      	mov	r0, r3
 8010120:	3708      	adds	r7, #8
 8010122:	46bd      	mov	sp, r7
 8010124:	bd80      	pop	{r7, pc}

08010126 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010126:	b580      	push	{r7, lr}
 8010128:	b082      	sub	sp, #8
 801012a:	af00      	add	r7, sp, #0
 801012c:	7138      	strb	r0, [r7, #4]
 801012e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010130:	6838      	ldr	r0, [r7, #0]
 8010132:	f000 fee6 	bl	8010f02 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010136:	4603      	mov	r3, r0
 8010138:	4618      	mov	r0, r3
 801013a:	f7f4 fdbd 	bl	8004cb8 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 801013e:	4603      	mov	r3, r0
 8010140:	4618      	mov	r0, r3
 8010142:	3708      	adds	r7, #8
 8010144:	46bd      	mov	sp, r7
 8010146:	bd80      	pop	{r7, pc}

08010148 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010148:	b590      	push	{r4, r7, lr}
 801014a:	b083      	sub	sp, #12
 801014c:	af00      	add	r7, sp, #0
 801014e:	7138      	strb	r0, [r7, #4]
 8010150:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010152:	6838      	ldr	r0, [r7, #0]
 8010154:	f000 feab 	bl	8010eae <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010158:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801015a:	4619      	mov	r1, r3
 801015c:	4620      	mov	r0, r4
 801015e:	f7ff ffe2 	bl	8010126 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010162:	4603      	mov	r3, r0
    }
 8010164:	4618      	mov	r0, r3
 8010166:	370c      	adds	r7, #12
 8010168:	46bd      	mov	sp, r7
 801016a:	bd90      	pop	{r4, r7, pc}

0801016c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801016c:	b590      	push	{r4, r7, lr}
 801016e:	b083      	sub	sp, #12
 8010170:	af00      	add	r7, sp, #0
 8010172:	7138      	strb	r0, [r7, #4]
 8010174:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010176:	6838      	ldr	r0, [r7, #0]
 8010178:	f000 fe6d 	bl	8010e56 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801017c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801017e:	4619      	mov	r1, r3
 8010180:	4620      	mov	r0, r4
 8010182:	f7ff ffe1 	bl	8010148 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010186:	4603      	mov	r3, r0
    }
 8010188:	4618      	mov	r0, r3
 801018a:	370c      	adds	r7, #12
 801018c:	46bd      	mov	sp, r7
 801018e:	bd90      	pop	{r4, r7, pc}

08010190 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010190:	b590      	push	{r4, r7, lr}
 8010192:	b083      	sub	sp, #12
 8010194:	af00      	add	r7, sp, #0
 8010196:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010198:	6878      	ldr	r0, [r7, #4]
 801019a:	f000 fe51 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801019e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80101a0:	4619      	mov	r1, r3
 80101a2:	4620      	mov	r0, r4
 80101a4:	f7ff ffe2 	bl	801016c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80101a8:	4603      	mov	r3, r0
    }
 80101aa:	4618      	mov	r0, r3
 80101ac:	370c      	adds	r7, #12
 80101ae:	46bd      	mov	sp, r7
 80101b0:	bd90      	pop	{r4, r7, pc}
	...

080101b4 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 80101b4:	b580      	push	{r7, lr}
 80101b6:	b082      	sub	sp, #8
 80101b8:	af00      	add	r7, sp, #0
 80101ba:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80101bc:	6878      	ldr	r0, [r7, #4]
 80101be:	f7ff fd1f 	bl	800fc00 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80101c2:	4603      	mov	r3, r0
 80101c4:	2b02      	cmp	r3, #2
 80101c6:	bf14      	ite	ne
 80101c8:	2301      	movne	r3, #1
 80101ca:	2300      	moveq	r3, #0
 80101cc:	b2db      	uxtb	r3, r3
 80101ce:	2b00      	cmp	r3, #0
 80101d0:	d002      	beq.n	80101d8 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80101d2:	4805      	ldr	r0, [pc, #20]	; (80101e8 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 80101d4:	f7f0 ff4d 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80101d8:	6878      	ldr	r0, [r7, #4]
 80101da:	f7ff ffd9 	bl	8010190 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80101de:	4603      	mov	r3, r0
    }
 80101e0:	4618      	mov	r0, r3
 80101e2:	3708      	adds	r7, #8
 80101e4:	46bd      	mov	sp, r7
 80101e6:	bd80      	pop	{r7, pc}
 80101e8:	08027440 	.word	0x08027440

080101ec <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 80101ec:	b580      	push	{r7, lr}
 80101ee:	b082      	sub	sp, #8
 80101f0:	af00      	add	r7, sp, #0
 80101f2:	6078      	str	r0, [r7, #4]
 80101f4:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80101f6:	687b      	ldr	r3, [r7, #4]
 80101f8:	4618      	mov	r0, r3
 80101fa:	f7ff fdde 	bl	800fdba <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80101fe:	6838      	ldr	r0, [r7, #0]
 8010200:	f7f8 f9f8 	bl	80085f4 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8010204:	4603      	mov	r3, r0
 8010206:	4619      	mov	r1, r3
 8010208:	6878      	ldr	r0, [r7, #4]
 801020a:	f000 fe85 	bl	8010f18 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801020e:	6878      	ldr	r0, [r7, #4]
 8010210:	f7ff ffd0 	bl	80101b4 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8010214:	4603      	mov	r3, r0
	}
 8010216:	4618      	mov	r0, r3
 8010218:	3708      	adds	r7, #8
 801021a:	46bd      	mov	sp, r7
 801021c:	bd80      	pop	{r7, pc}

0801021e <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 801021e:	b580      	push	{r7, lr}
 8010220:	b082      	sub	sp, #8
 8010222:	af00      	add	r7, sp, #0
 8010224:	6078      	str	r0, [r7, #4]
 8010226:	687b      	ldr	r3, [r7, #4]
 8010228:	4618      	mov	r0, r3
 801022a:	f000 fe94 	bl	8010f56 <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1Ev>
 801022e:	687b      	ldr	r3, [r7, #4]
 8010230:	4618      	mov	r0, r3
 8010232:	3708      	adds	r7, #8
 8010234:	46bd      	mov	sp, r7
 8010236:	bd80      	pop	{r7, pc}

08010238 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      constexpr _Variant_storage() : _M_index(variant_npos) { }
 8010238:	b580      	push	{r7, lr}
 801023a:	b082      	sub	sp, #8
 801023c:	af00      	add	r7, sp, #0
 801023e:	6078      	str	r0, [r7, #4]
 8010240:	687b      	ldr	r3, [r7, #4]
 8010242:	4618      	mov	r0, r3
 8010244:	f7ff ffeb 	bl	801021e <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 8010248:	687b      	ldr	r3, [r7, #4]
 801024a:	22ff      	movs	r2, #255	; 0xff
 801024c:	761a      	strb	r2, [r3, #24]
 801024e:	687b      	ldr	r3, [r7, #4]
 8010250:	4618      	mov	r0, r3
 8010252:	3708      	adds	r7, #8
 8010254:	46bd      	mov	sp, r7
 8010256:	bd80      	pop	{r7, pc}

08010258 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8010258:	b480      	push	{r7}
 801025a:	b083      	sub	sp, #12
 801025c:	af00      	add	r7, sp, #0
 801025e:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 8010260:	687b      	ldr	r3, [r7, #4]
    }
 8010262:	4618      	mov	r0, r3
 8010264:	370c      	adds	r7, #12
 8010266:	46bd      	mov	sp, r7
 8010268:	f85d 7b04 	ldr.w	r7, [sp], #4
 801026c:	4770      	bx	lr

0801026e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801026e:	b580      	push	{r7, lr}
 8010270:	b082      	sub	sp, #8
 8010272:	af00      	add	r7, sp, #0
 8010274:	7138      	strb	r0, [r7, #4]
 8010276:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010278:	6838      	ldr	r0, [r7, #0]
 801027a:	f000 fe9a 	bl	8010fb2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 801027e:	4603      	mov	r3, r0
 8010280:	4618      	mov	r0, r3
 8010282:	f7f2 ff0c 	bl	800309e <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8010286:	4603      	mov	r3, r0
 8010288:	4618      	mov	r0, r3
 801028a:	3708      	adds	r7, #8
 801028c:	46bd      	mov	sp, r7
 801028e:	bd80      	pop	{r7, pc}

08010290 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010290:	b590      	push	{r4, r7, lr}
 8010292:	b083      	sub	sp, #12
 8010294:	af00      	add	r7, sp, #0
 8010296:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010298:	6878      	ldr	r0, [r7, #4]
 801029a:	f000 fe7f 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801029e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80102a0:	4619      	mov	r1, r3
 80102a2:	4620      	mov	r0, r4
 80102a4:	f7ff ffe3 	bl	801026e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 80102a8:	4603      	mov	r3, r0
    }
 80102aa:	4618      	mov	r0, r3
 80102ac:	370c      	adds	r7, #12
 80102ae:	46bd      	mov	sp, r7
 80102b0:	bd90      	pop	{r4, r7, pc}

080102b2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80102b2:	b580      	push	{r7, lr}
 80102b4:	b082      	sub	sp, #8
 80102b6:	af00      	add	r7, sp, #0
 80102b8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80102ba:	6878      	ldr	r0, [r7, #4]
 80102bc:	f000 fe6e 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80102c0:	4603      	mov	r3, r0
 80102c2:	4618      	mov	r0, r3
 80102c4:	f7ff ffe4 	bl	8010290 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80102c8:	4603      	mov	r3, r0
	}
 80102ca:	4618      	mov	r0, r3
 80102cc:	3708      	adds	r7, #8
 80102ce:	46bd      	mov	sp, r7
 80102d0:	bd80      	pop	{r7, pc}

080102d2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80102d2:	b5b0      	push	{r4, r5, r7, lr}
 80102d4:	b082      	sub	sp, #8
 80102d6:	af00      	add	r7, sp, #0
 80102d8:	6078      	str	r0, [r7, #4]
 80102da:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80102dc:	6878      	ldr	r0, [r7, #4]
 80102de:	f000 fe52 	bl	8010f86 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80102e2:	4604      	mov	r4, r0
 80102e4:	6838      	ldr	r0, [r7, #0]
 80102e6:	f000 fe59 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80102ea:	4603      	mov	r3, r0
 80102ec:	4618      	mov	r0, r3
 80102ee:	f7ff ffe0 	bl	80102b2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSH_>
 80102f2:	4603      	mov	r3, r0
 80102f4:	4619      	mov	r1, r3
 80102f6:	4620      	mov	r0, r4
 80102f8:	f000 fe66 	bl	8010fc8 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 80102fc:	462b      	mov	r3, r5
      }
 80102fe:	4618      	mov	r0, r3
 8010300:	3708      	adds	r7, #8
 8010302:	46bd      	mov	sp, r7
 8010304:	bdb0      	pop	{r4, r5, r7, pc}

08010306 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010306:	b5b0      	push	{r4, r5, r7, lr}
 8010308:	b082      	sub	sp, #8
 801030a:	af00      	add	r7, sp, #0
 801030c:	6078      	str	r0, [r7, #4]
 801030e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010310:	6878      	ldr	r0, [r7, #4]
 8010312:	f000 fe38 	bl	8010f86 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010316:	4604      	mov	r4, r0
 8010318:	6838      	ldr	r0, [r7, #0]
 801031a:	f000 fe3f 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801031e:	4603      	mov	r3, r0
 8010320:	4619      	mov	r1, r3
 8010322:	4620      	mov	r0, r4
 8010324:	f7ff ffd5 	bl	80102d2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010328:	462b      	mov	r3, r5
      }
 801032a:	4618      	mov	r0, r3
 801032c:	3708      	adds	r7, #8
 801032e:	46bd      	mov	sp, r7
 8010330:	bdb0      	pop	{r4, r5, r7, pc}

08010332 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010332:	b5b0      	push	{r4, r5, r7, lr}
 8010334:	b082      	sub	sp, #8
 8010336:	af00      	add	r7, sp, #0
 8010338:	6078      	str	r0, [r7, #4]
 801033a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801033c:	6878      	ldr	r0, [r7, #4]
 801033e:	f000 fe22 	bl	8010f86 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010342:	4604      	mov	r4, r0
 8010344:	6838      	ldr	r0, [r7, #0]
 8010346:	f000 fe29 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801034a:	4603      	mov	r3, r0
 801034c:	4619      	mov	r1, r3
 801034e:	4620      	mov	r0, r4
 8010350:	f7ff ffd9 	bl	8010306 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010354:	462b      	mov	r3, r5
      }
 8010356:	4618      	mov	r0, r3
 8010358:	3708      	adds	r7, #8
 801035a:	46bd      	mov	sp, r7
 801035c:	bdb0      	pop	{r4, r5, r7, pc}

0801035e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801035e:	b580      	push	{r7, lr}
 8010360:	b082      	sub	sp, #8
 8010362:	af00      	add	r7, sp, #0
 8010364:	7138      	strb	r0, [r7, #4]
 8010366:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010368:	6838      	ldr	r0, [r7, #0]
 801036a:	f000 fe44 	bl	8010ff6 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801036e:	4603      	mov	r3, r0
 8010370:	4618      	mov	r0, r3
 8010372:	f7f2 fdf8 	bl	8002f66 <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8010376:	4603      	mov	r3, r0
 8010378:	4618      	mov	r0, r3
 801037a:	3708      	adds	r7, #8
 801037c:	46bd      	mov	sp, r7
 801037e:	bd80      	pop	{r7, pc}

08010380 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010380:	b590      	push	{r4, r7, lr}
 8010382:	b083      	sub	sp, #12
 8010384:	af00      	add	r7, sp, #0
 8010386:	7138      	strb	r0, [r7, #4]
 8010388:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801038a:	6838      	ldr	r0, [r7, #0]
 801038c:	f000 fe11 	bl	8010fb2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8010390:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010392:	4619      	mov	r1, r3
 8010394:	4620      	mov	r0, r4
 8010396:	f7ff ffe2 	bl	801035e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 801039a:	4603      	mov	r3, r0
    }
 801039c:	4618      	mov	r0, r3
 801039e:	370c      	adds	r7, #12
 80103a0:	46bd      	mov	sp, r7
 80103a2:	bd90      	pop	{r4, r7, pc}

080103a4 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80103a4:	b590      	push	{r4, r7, lr}
 80103a6:	b083      	sub	sp, #12
 80103a8:	af00      	add	r7, sp, #0
 80103aa:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80103ac:	6878      	ldr	r0, [r7, #4]
 80103ae:	f000 fdf5 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80103b2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80103b4:	4619      	mov	r1, r3
 80103b6:	4620      	mov	r0, r4
 80103b8:	f7ff ffe2 	bl	8010380 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80103bc:	4603      	mov	r3, r0
    }
 80103be:	4618      	mov	r0, r3
 80103c0:	370c      	adds	r7, #12
 80103c2:	46bd      	mov	sp, r7
 80103c4:	bd90      	pop	{r4, r7, pc}

080103c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80103c6:	b580      	push	{r7, lr}
 80103c8:	b082      	sub	sp, #8
 80103ca:	af00      	add	r7, sp, #0
 80103cc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80103ce:	6878      	ldr	r0, [r7, #4]
 80103d0:	f000 fde4 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80103d4:	4603      	mov	r3, r0
 80103d6:	4618      	mov	r0, r3
 80103d8:	f7ff ffe4 	bl	80103a4 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80103dc:	4603      	mov	r3, r0
	}
 80103de:	4618      	mov	r0, r3
 80103e0:	3708      	adds	r7, #8
 80103e2:	46bd      	mov	sp, r7
 80103e4:	bd80      	pop	{r7, pc}

080103e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80103e6:	b5b0      	push	{r4, r5, r7, lr}
 80103e8:	b082      	sub	sp, #8
 80103ea:	af00      	add	r7, sp, #0
 80103ec:	6078      	str	r0, [r7, #4]
 80103ee:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80103f0:	6878      	ldr	r0, [r7, #4]
 80103f2:	f000 fdc8 	bl	8010f86 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80103f6:	4604      	mov	r4, r0
 80103f8:	6838      	ldr	r0, [r7, #0]
 80103fa:	f000 fdcf 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80103fe:	4603      	mov	r3, r0
 8010400:	4618      	mov	r0, r3
 8010402:	f7ff ffe0 	bl	80103c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSH_>
 8010406:	4603      	mov	r3, r0
 8010408:	4619      	mov	r1, r3
 801040a:	4620      	mov	r0, r4
 801040c:	f000 fdfe 	bl	801100c <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010410:	462b      	mov	r3, r5
      }
 8010412:	4618      	mov	r0, r3
 8010414:	3708      	adds	r7, #8
 8010416:	46bd      	mov	sp, r7
 8010418:	bdb0      	pop	{r4, r5, r7, pc}

0801041a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801041a:	b5b0      	push	{r4, r5, r7, lr}
 801041c:	b082      	sub	sp, #8
 801041e:	af00      	add	r7, sp, #0
 8010420:	6078      	str	r0, [r7, #4]
 8010422:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010424:	6878      	ldr	r0, [r7, #4]
 8010426:	f000 fdae 	bl	8010f86 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801042a:	4604      	mov	r4, r0
 801042c:	6838      	ldr	r0, [r7, #0]
 801042e:	f000 fdb5 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010432:	4603      	mov	r3, r0
 8010434:	4619      	mov	r1, r3
 8010436:	4620      	mov	r0, r4
 8010438:	f7ff ffd5 	bl	80103e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 801043c:	462b      	mov	r3, r5
      }
 801043e:	4618      	mov	r0, r3
 8010440:	3708      	adds	r7, #8
 8010442:	46bd      	mov	sp, r7
 8010444:	bdb0      	pop	{r4, r5, r7, pc}

08010446 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010446:	b5b0      	push	{r4, r5, r7, lr}
 8010448:	b082      	sub	sp, #8
 801044a:	af00      	add	r7, sp, #0
 801044c:	6078      	str	r0, [r7, #4]
 801044e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010450:	6878      	ldr	r0, [r7, #4]
 8010452:	f000 fd98 	bl	8010f86 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010456:	4604      	mov	r4, r0
 8010458:	6838      	ldr	r0, [r7, #0]
 801045a:	f000 fd9f 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801045e:	4603      	mov	r3, r0
 8010460:	4619      	mov	r1, r3
 8010462:	4620      	mov	r0, r4
 8010464:	f7ff ffd9 	bl	801041a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010468:	462b      	mov	r3, r5
      }
 801046a:	4618      	mov	r0, r3
 801046c:	3708      	adds	r7, #8
 801046e:	46bd      	mov	sp, r7
 8010470:	bdb0      	pop	{r4, r5, r7, pc}

08010472 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010472:	b580      	push	{r7, lr}
 8010474:	b082      	sub	sp, #8
 8010476:	af00      	add	r7, sp, #0
 8010478:	7138      	strb	r0, [r7, #4]
 801047a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801047c:	6838      	ldr	r0, [r7, #0]
 801047e:	f000 fddc 	bl	801103a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010482:	4603      	mov	r3, r0
 8010484:	4618      	mov	r0, r3
 8010486:	f7f2 fda2 	bl	8002fce <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 801048a:	4603      	mov	r3, r0
 801048c:	4618      	mov	r0, r3
 801048e:	3708      	adds	r7, #8
 8010490:	46bd      	mov	sp, r7
 8010492:	bd80      	pop	{r7, pc}

08010494 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010494:	b590      	push	{r4, r7, lr}
 8010496:	b083      	sub	sp, #12
 8010498:	af00      	add	r7, sp, #0
 801049a:	7138      	strb	r0, [r7, #4]
 801049c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801049e:	6838      	ldr	r0, [r7, #0]
 80104a0:	f000 fda9 	bl	8010ff6 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80104a4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80104a6:	4619      	mov	r1, r3
 80104a8:	4620      	mov	r0, r4
 80104aa:	f7ff ffe2 	bl	8010472 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>
 80104ae:	4603      	mov	r3, r0
    }
 80104b0:	4618      	mov	r0, r3
 80104b2:	370c      	adds	r7, #12
 80104b4:	46bd      	mov	sp, r7
 80104b6:	bd90      	pop	{r4, r7, pc}

080104b8 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80104b8:	b590      	push	{r4, r7, lr}
 80104ba:	b083      	sub	sp, #12
 80104bc:	af00      	add	r7, sp, #0
 80104be:	7138      	strb	r0, [r7, #4]
 80104c0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80104c2:	6838      	ldr	r0, [r7, #0]
 80104c4:	f000 fd75 	bl	8010fb2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 80104c8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80104ca:	4619      	mov	r1, r3
 80104cc:	4620      	mov	r0, r4
 80104ce:	f7ff ffe1 	bl	8010494 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80104d2:	4603      	mov	r3, r0
    }
 80104d4:	4618      	mov	r0, r3
 80104d6:	370c      	adds	r7, #12
 80104d8:	46bd      	mov	sp, r7
 80104da:	bd90      	pop	{r4, r7, pc}

080104dc <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80104dc:	b590      	push	{r4, r7, lr}
 80104de:	b083      	sub	sp, #12
 80104e0:	af00      	add	r7, sp, #0
 80104e2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80104e4:	6878      	ldr	r0, [r7, #4]
 80104e6:	f000 fd59 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80104ea:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80104ec:	4619      	mov	r1, r3
 80104ee:	4620      	mov	r0, r4
 80104f0:	f7ff ffe2 	bl	80104b8 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80104f4:	4603      	mov	r3, r0
    }
 80104f6:	4618      	mov	r0, r3
 80104f8:	370c      	adds	r7, #12
 80104fa:	46bd      	mov	sp, r7
 80104fc:	bd90      	pop	{r4, r7, pc}

080104fe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80104fe:	b580      	push	{r7, lr}
 8010500:	b082      	sub	sp, #8
 8010502:	af00      	add	r7, sp, #0
 8010504:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010506:	6878      	ldr	r0, [r7, #4]
 8010508:	f000 fd48 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801050c:	4603      	mov	r3, r0
 801050e:	4618      	mov	r0, r3
 8010510:	f7ff ffe4 	bl	80104dc <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010514:	4603      	mov	r3, r0
	}
 8010516:	4618      	mov	r0, r3
 8010518:	3708      	adds	r7, #8
 801051a:	46bd      	mov	sp, r7
 801051c:	bd80      	pop	{r7, pc}

0801051e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801051e:	b5b0      	push	{r4, r5, r7, lr}
 8010520:	b082      	sub	sp, #8
 8010522:	af00      	add	r7, sp, #0
 8010524:	6078      	str	r0, [r7, #4]
 8010526:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010528:	6878      	ldr	r0, [r7, #4]
 801052a:	f000 fd2c 	bl	8010f86 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801052e:	4604      	mov	r4, r0
 8010530:	6838      	ldr	r0, [r7, #0]
 8010532:	f000 fd33 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010536:	4603      	mov	r3, r0
 8010538:	4618      	mov	r0, r3
 801053a:	f7ff ffe0 	bl	80104fe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSH_>
 801053e:	4603      	mov	r3, r0
 8010540:	4619      	mov	r1, r3
 8010542:	4620      	mov	r0, r4
 8010544:	f000 fd84 	bl	8011050 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010548:	462b      	mov	r3, r5
      }
 801054a:	4618      	mov	r0, r3
 801054c:	3708      	adds	r7, #8
 801054e:	46bd      	mov	sp, r7
 8010550:	bdb0      	pop	{r4, r5, r7, pc}

08010552 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010552:	b5b0      	push	{r4, r5, r7, lr}
 8010554:	b082      	sub	sp, #8
 8010556:	af00      	add	r7, sp, #0
 8010558:	6078      	str	r0, [r7, #4]
 801055a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801055c:	6878      	ldr	r0, [r7, #4]
 801055e:	f000 fd12 	bl	8010f86 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010562:	4604      	mov	r4, r0
 8010564:	6838      	ldr	r0, [r7, #0]
 8010566:	f000 fd19 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801056a:	4603      	mov	r3, r0
 801056c:	4619      	mov	r1, r3
 801056e:	4620      	mov	r0, r4
 8010570:	f7ff ffd5 	bl	801051e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010574:	462b      	mov	r3, r5
      }
 8010576:	4618      	mov	r0, r3
 8010578:	3708      	adds	r7, #8
 801057a:	46bd      	mov	sp, r7
 801057c:	bdb0      	pop	{r4, r5, r7, pc}

0801057e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801057e:	b5b0      	push	{r4, r5, r7, lr}
 8010580:	b082      	sub	sp, #8
 8010582:	af00      	add	r7, sp, #0
 8010584:	6078      	str	r0, [r7, #4]
 8010586:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010588:	6878      	ldr	r0, [r7, #4]
 801058a:	f000 fcfc 	bl	8010f86 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801058e:	4604      	mov	r4, r0
 8010590:	6838      	ldr	r0, [r7, #0]
 8010592:	f000 fd03 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010596:	4603      	mov	r3, r0
 8010598:	4619      	mov	r1, r3
 801059a:	4620      	mov	r0, r4
 801059c:	f7ff ffd9 	bl	8010552 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 80105a0:	462b      	mov	r3, r5
      }
 80105a2:	4618      	mov	r0, r3
 80105a4:	3708      	adds	r7, #8
 80105a6:	46bd      	mov	sp, r7
 80105a8:	bdb0      	pop	{r4, r5, r7, pc}

080105aa <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80105aa:	b580      	push	{r7, lr}
 80105ac:	b082      	sub	sp, #8
 80105ae:	af00      	add	r7, sp, #0
 80105b0:	7138      	strb	r0, [r7, #4]
 80105b2:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80105b4:	6838      	ldr	r0, [r7, #0]
 80105b6:	f000 fd62 	bl	801107e <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80105ba:	4603      	mov	r3, r0
 80105bc:	4618      	mov	r0, r3
 80105be:	f7f2 fd3a 	bl	8003036 <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 80105c2:	4603      	mov	r3, r0
 80105c4:	4618      	mov	r0, r3
 80105c6:	3708      	adds	r7, #8
 80105c8:	46bd      	mov	sp, r7
 80105ca:	bd80      	pop	{r7, pc}

080105cc <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80105cc:	b590      	push	{r4, r7, lr}
 80105ce:	b083      	sub	sp, #12
 80105d0:	af00      	add	r7, sp, #0
 80105d2:	7138      	strb	r0, [r7, #4]
 80105d4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80105d6:	6838      	ldr	r0, [r7, #0]
 80105d8:	f000 fd2f 	bl	801103a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80105dc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80105de:	4619      	mov	r1, r3
 80105e0:	4620      	mov	r0, r4
 80105e2:	f7ff ffe2 	bl	80105aa <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>
 80105e6:	4603      	mov	r3, r0
    }
 80105e8:	4618      	mov	r0, r3
 80105ea:	370c      	adds	r7, #12
 80105ec:	46bd      	mov	sp, r7
 80105ee:	bd90      	pop	{r4, r7, pc}

080105f0 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80105f0:	b590      	push	{r4, r7, lr}
 80105f2:	b083      	sub	sp, #12
 80105f4:	af00      	add	r7, sp, #0
 80105f6:	7138      	strb	r0, [r7, #4]
 80105f8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80105fa:	6838      	ldr	r0, [r7, #0]
 80105fc:	f000 fcfb 	bl	8010ff6 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010600:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010602:	4619      	mov	r1, r3
 8010604:	4620      	mov	r0, r4
 8010606:	f7ff ffe1 	bl	80105cc <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801060a:	4603      	mov	r3, r0
    }
 801060c:	4618      	mov	r0, r3
 801060e:	370c      	adds	r7, #12
 8010610:	46bd      	mov	sp, r7
 8010612:	bd90      	pop	{r4, r7, pc}

08010614 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010614:	b590      	push	{r4, r7, lr}
 8010616:	b083      	sub	sp, #12
 8010618:	af00      	add	r7, sp, #0
 801061a:	7138      	strb	r0, [r7, #4]
 801061c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801061e:	6838      	ldr	r0, [r7, #0]
 8010620:	f000 fcc7 	bl	8010fb2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8010624:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010626:	4619      	mov	r1, r3
 8010628:	4620      	mov	r0, r4
 801062a:	f7ff ffe1 	bl	80105f0 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801062e:	4603      	mov	r3, r0
    }
 8010630:	4618      	mov	r0, r3
 8010632:	370c      	adds	r7, #12
 8010634:	46bd      	mov	sp, r7
 8010636:	bd90      	pop	{r4, r7, pc}

08010638 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010638:	b590      	push	{r4, r7, lr}
 801063a:	b083      	sub	sp, #12
 801063c:	af00      	add	r7, sp, #0
 801063e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010640:	6878      	ldr	r0, [r7, #4]
 8010642:	f000 fcab 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010646:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010648:	4619      	mov	r1, r3
 801064a:	4620      	mov	r0, r4
 801064c:	f7ff ffe2 	bl	8010614 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010650:	4603      	mov	r3, r0
    }
 8010652:	4618      	mov	r0, r3
 8010654:	370c      	adds	r7, #12
 8010656:	46bd      	mov	sp, r7
 8010658:	bd90      	pop	{r4, r7, pc}

0801065a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801065a:	b580      	push	{r7, lr}
 801065c:	b082      	sub	sp, #8
 801065e:	af00      	add	r7, sp, #0
 8010660:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010662:	6878      	ldr	r0, [r7, #4]
 8010664:	f000 fc9a 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010668:	4603      	mov	r3, r0
 801066a:	4618      	mov	r0, r3
 801066c:	f7ff ffe4 	bl	8010638 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010670:	4603      	mov	r3, r0
	}
 8010672:	4618      	mov	r0, r3
 8010674:	3708      	adds	r7, #8
 8010676:	46bd      	mov	sp, r7
 8010678:	bd80      	pop	{r7, pc}

0801067a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801067a:	b5b0      	push	{r4, r5, r7, lr}
 801067c:	b082      	sub	sp, #8
 801067e:	af00      	add	r7, sp, #0
 8010680:	6078      	str	r0, [r7, #4]
 8010682:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010684:	6878      	ldr	r0, [r7, #4]
 8010686:	f000 fc7e 	bl	8010f86 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801068a:	4604      	mov	r4, r0
 801068c:	6838      	ldr	r0, [r7, #0]
 801068e:	f000 fc85 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010692:	4603      	mov	r3, r0
 8010694:	4618      	mov	r0, r3
 8010696:	f7ff ffe0 	bl	801065a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSH_>
 801069a:	4603      	mov	r3, r0
 801069c:	4619      	mov	r1, r3
 801069e:	4620      	mov	r0, r4
 80106a0:	f000 fcf8 	bl	8011094 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 80106a4:	462b      	mov	r3, r5
      }
 80106a6:	4618      	mov	r0, r3
 80106a8:	3708      	adds	r7, #8
 80106aa:	46bd      	mov	sp, r7
 80106ac:	bdb0      	pop	{r4, r5, r7, pc}

080106ae <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80106ae:	b5b0      	push	{r4, r5, r7, lr}
 80106b0:	b082      	sub	sp, #8
 80106b2:	af00      	add	r7, sp, #0
 80106b4:	6078      	str	r0, [r7, #4]
 80106b6:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80106b8:	6878      	ldr	r0, [r7, #4]
 80106ba:	f000 fc64 	bl	8010f86 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80106be:	4604      	mov	r4, r0
 80106c0:	6838      	ldr	r0, [r7, #0]
 80106c2:	f000 fc6b 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80106c6:	4603      	mov	r3, r0
 80106c8:	4619      	mov	r1, r3
 80106ca:	4620      	mov	r0, r4
 80106cc:	f7ff ffd5 	bl	801067a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 80106d0:	462b      	mov	r3, r5
      }
 80106d2:	4618      	mov	r0, r3
 80106d4:	3708      	adds	r7, #8
 80106d6:	46bd      	mov	sp, r7
 80106d8:	bdb0      	pop	{r4, r5, r7, pc}

080106da <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80106da:	b5b0      	push	{r4, r5, r7, lr}
 80106dc:	b082      	sub	sp, #8
 80106de:	af00      	add	r7, sp, #0
 80106e0:	6078      	str	r0, [r7, #4]
 80106e2:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80106e4:	6878      	ldr	r0, [r7, #4]
 80106e6:	f000 fc4e 	bl	8010f86 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80106ea:	4604      	mov	r4, r0
 80106ec:	6838      	ldr	r0, [r7, #0]
 80106ee:	f000 fc55 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80106f2:	4603      	mov	r3, r0
 80106f4:	4619      	mov	r1, r3
 80106f6:	4620      	mov	r0, r4
 80106f8:	f7ff ffd9 	bl	80106ae <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 80106fc:	462b      	mov	r3, r5
      }
 80106fe:	4618      	mov	r0, r3
 8010700:	3708      	adds	r7, #8
 8010702:	46bd      	mov	sp, r7
 8010704:	bdb0      	pop	{r4, r5, r7, pc}

08010706 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSS_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8010706:	b580      	push	{r7, lr}
 8010708:	b082      	sub	sp, #8
 801070a:	af00      	add	r7, sp, #0
 801070c:	6078      	str	r0, [r7, #4]
 801070e:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8010710:	683b      	ldr	r3, [r7, #0]
 8010712:	009b      	lsls	r3, r3, #2
 8010714:	687a      	ldr	r2, [r7, #4]
 8010716:	4413      	add	r3, r2
 8010718:	4618      	mov	r0, r3
 801071a:	f000 fcd2 	bl	80110c2 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 801071e:	4603      	mov	r3, r0
	}
 8010720:	4618      	mov	r0, r3
 8010722:	3708      	adds	r7, #8
 8010724:	46bd      	mov	sp, r7
 8010726:	bd80      	pop	{r7, pc}

08010728 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8010728:	b5f0      	push	{r4, r5, r6, r7, lr}
 801072a:	b085      	sub	sp, #20
 801072c:	af00      	add	r7, sp, #0
 801072e:	6078      	str	r0, [r7, #4]
 8010730:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8010732:	4b0f      	ldr	r3, [pc, #60]	; (8010770 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_+0x48>)
 8010734:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8010736:	6838      	ldr	r0, [r7, #0]
 8010738:	f7ff fa62 	bl	800fc00 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 801073c:	4603      	mov	r3, r0
 801073e:	4619      	mov	r1, r3
 8010740:	68f8      	ldr	r0, [r7, #12]
 8010742:	f7ff ffe0 	bl	8010706 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSS_jDpT_>
 8010746:	4603      	mov	r3, r0
 8010748:	681b      	ldr	r3, [r3, #0]
 801074a:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 801074c:	68bc      	ldr	r4, [r7, #8]
 801074e:	6878      	ldr	r0, [r7, #4]
 8010750:	f000 fcc2 	bl	80110d8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010754:	4605      	mov	r5, r0
 8010756:	6838      	ldr	r0, [r7, #0]
 8010758:	f000 fc20 	bl	8010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801075c:	4603      	mov	r3, r0
 801075e:	4619      	mov	r1, r3
 8010760:	4628      	mov	r0, r5
 8010762:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8010764:	4633      	mov	r3, r6
    }
 8010766:	4618      	mov	r0, r3
 8010768:	3714      	adds	r7, #20
 801076a:	46bd      	mov	sp, r7
 801076c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801076e:	bf00      	nop
 8010770:	08027e48 	.word	0x08027e48

08010774 <_ZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 8010774:	b580      	push	{r7, lr}
 8010776:	b084      	sub	sp, #16
 8010778:	af00      	add	r7, sp, #0
 801077a:	6078      	str	r0, [r7, #4]
 801077c:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 801077e:	683b      	ldr	r3, [r7, #0]
 8010780:	7e1a      	ldrb	r2, [r3, #24]
 8010782:	687b      	ldr	r3, [r7, #4]
 8010784:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8010786:	687b      	ldr	r3, [r7, #4]
 8010788:	60fb      	str	r3, [r7, #12]
 801078a:	6838      	ldr	r0, [r7, #0]
 801078c:	f000 fbf0 	bl	8010f70 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8010790:	4603      	mov	r3, r0
 8010792:	4618      	mov	r0, r3
 8010794:	f7ff fd60 	bl	8010258 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJS5_ifbEEEEDcOT0_>
 8010798:	4602      	mov	r2, r0
 801079a:	f107 030c 	add.w	r3, r7, #12
 801079e:	4611      	mov	r1, r2
 80107a0:	4618      	mov	r0, r3
 80107a2:	f7ff ffc1 	bl	8010728 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_>
    }
 80107a6:	bf00      	nop
 80107a8:	3710      	adds	r7, #16
 80107aa:	46bd      	mov	sp, r7
 80107ac:	bd80      	pop	{r7, pc}

080107ae <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant16_Variant_storageILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 80107ae:	b480      	push	{r7}
 80107b0:	b083      	sub	sp, #12
 80107b2:	af00      	add	r7, sp, #0
 80107b4:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 80107b6:	687b      	ldr	r3, [r7, #4]
    }
 80107b8:	4618      	mov	r0, r3
 80107ba:	370c      	adds	r7, #12
 80107bc:	46bd      	mov	sp, r7
 80107be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107c2:	4770      	bx	lr

080107c4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80107c4:	b580      	push	{r7, lr}
 80107c6:	b082      	sub	sp, #8
 80107c8:	af00      	add	r7, sp, #0
 80107ca:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80107cc:	6878      	ldr	r0, [r7, #4]
 80107ce:	f000 fb37 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80107d2:	4603      	mov	r3, r0
 80107d4:	4618      	mov	r0, r3
 80107d6:	f7ff fbf6 	bl	800ffc6 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80107da:	4603      	mov	r3, r0
	}
 80107dc:	4618      	mov	r0, r3
 80107de:	3708      	adds	r7, #8
 80107e0:	46bd      	mov	sp, r7
 80107e2:	bd80      	pop	{r7, pc}

080107e4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80107e4:	b5b0      	push	{r4, r5, r7, lr}
 80107e6:	b082      	sub	sp, #8
 80107e8:	af00      	add	r7, sp, #0
 80107ea:	6078      	str	r0, [r7, #4]
 80107ec:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80107ee:	6878      	ldr	r0, [r7, #4]
 80107f0:	f000 fc7d 	bl	80110ee <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80107f4:	4604      	mov	r4, r0
 80107f6:	6838      	ldr	r0, [r7, #0]
 80107f8:	f000 fb22 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80107fc:	4603      	mov	r3, r0
 80107fe:	4618      	mov	r0, r3
 8010800:	f7ff ffe0 	bl	80107c4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESI_EEDcOT0_>
 8010804:	4603      	mov	r3, r0
 8010806:	4619      	mov	r1, r3
 8010808:	4620      	mov	r0, r4
 801080a:	f000 fc7b 	bl	8011104 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 801080e:	462b      	mov	r3, r5
      }
 8010810:	4618      	mov	r0, r3
 8010812:	3708      	adds	r7, #8
 8010814:	46bd      	mov	sp, r7
 8010816:	bdb0      	pop	{r4, r5, r7, pc}

08010818 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010818:	b5b0      	push	{r4, r5, r7, lr}
 801081a:	b082      	sub	sp, #8
 801081c:	af00      	add	r7, sp, #0
 801081e:	6078      	str	r0, [r7, #4]
 8010820:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010822:	6878      	ldr	r0, [r7, #4]
 8010824:	f000 fc63 	bl	80110ee <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010828:	4604      	mov	r4, r0
 801082a:	6838      	ldr	r0, [r7, #0]
 801082c:	f000 fb08 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010830:	4603      	mov	r3, r0
 8010832:	4619      	mov	r1, r3
 8010834:	4620      	mov	r0, r4
 8010836:	f7ff ffd5 	bl	80107e4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 801083a:	462b      	mov	r3, r5
      }
 801083c:	4618      	mov	r0, r3
 801083e:	3708      	adds	r7, #8
 8010840:	46bd      	mov	sp, r7
 8010842:	bdb0      	pop	{r4, r5, r7, pc}

08010844 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010844:	b5b0      	push	{r4, r5, r7, lr}
 8010846:	b082      	sub	sp, #8
 8010848:	af00      	add	r7, sp, #0
 801084a:	6078      	str	r0, [r7, #4]
 801084c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801084e:	6878      	ldr	r0, [r7, #4]
 8010850:	f000 fc4d 	bl	80110ee <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010854:	4604      	mov	r4, r0
 8010856:	6838      	ldr	r0, [r7, #0]
 8010858:	f000 faf2 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801085c:	4603      	mov	r3, r0
 801085e:	4619      	mov	r1, r3
 8010860:	4620      	mov	r0, r4
 8010862:	f7ff ffd9 	bl	8010818 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010866:	462b      	mov	r3, r5
      }
 8010868:	4618      	mov	r0, r3
 801086a:	3708      	adds	r7, #8
 801086c:	46bd      	mov	sp, r7
 801086e:	bdb0      	pop	{r4, r5, r7, pc}

08010870 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010870:	b580      	push	{r7, lr}
 8010872:	b082      	sub	sp, #8
 8010874:	af00      	add	r7, sp, #0
 8010876:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010878:	6878      	ldr	r0, [r7, #4]
 801087a:	f000 fae1 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801087e:	4603      	mov	r3, r0
 8010880:	4618      	mov	r0, r3
 8010882:	f7ff fc09 	bl	8010098 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010886:	4603      	mov	r3, r0
	}
 8010888:	4618      	mov	r0, r3
 801088a:	3708      	adds	r7, #8
 801088c:	46bd      	mov	sp, r7
 801088e:	bd80      	pop	{r7, pc}

08010890 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010890:	b5b0      	push	{r4, r5, r7, lr}
 8010892:	b082      	sub	sp, #8
 8010894:	af00      	add	r7, sp, #0
 8010896:	6078      	str	r0, [r7, #4]
 8010898:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801089a:	6878      	ldr	r0, [r7, #4]
 801089c:	f000 fc27 	bl	80110ee <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80108a0:	4604      	mov	r4, r0
 80108a2:	6838      	ldr	r0, [r7, #0]
 80108a4:	f000 facc 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80108a8:	4603      	mov	r3, r0
 80108aa:	4618      	mov	r0, r3
 80108ac:	f7ff ffe0 	bl	8010870 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESI_EEDcOT0_>
 80108b0:	4603      	mov	r3, r0
 80108b2:	4619      	mov	r1, r3
 80108b4:	4620      	mov	r0, r4
 80108b6:	f000 fc3c 	bl	8011132 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 80108ba:	462b      	mov	r3, r5
      }
 80108bc:	4618      	mov	r0, r3
 80108be:	3708      	adds	r7, #8
 80108c0:	46bd      	mov	sp, r7
 80108c2:	bdb0      	pop	{r4, r5, r7, pc}

080108c4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80108c4:	b5b0      	push	{r4, r5, r7, lr}
 80108c6:	b082      	sub	sp, #8
 80108c8:	af00      	add	r7, sp, #0
 80108ca:	6078      	str	r0, [r7, #4]
 80108cc:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80108ce:	6878      	ldr	r0, [r7, #4]
 80108d0:	f000 fc0d 	bl	80110ee <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80108d4:	4604      	mov	r4, r0
 80108d6:	6838      	ldr	r0, [r7, #0]
 80108d8:	f000 fab2 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80108dc:	4603      	mov	r3, r0
 80108de:	4619      	mov	r1, r3
 80108e0:	4620      	mov	r0, r4
 80108e2:	f7ff ffd5 	bl	8010890 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 80108e6:	462b      	mov	r3, r5
      }
 80108e8:	4618      	mov	r0, r3
 80108ea:	3708      	adds	r7, #8
 80108ec:	46bd      	mov	sp, r7
 80108ee:	bdb0      	pop	{r4, r5, r7, pc}

080108f0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80108f0:	b5b0      	push	{r4, r5, r7, lr}
 80108f2:	b082      	sub	sp, #8
 80108f4:	af00      	add	r7, sp, #0
 80108f6:	6078      	str	r0, [r7, #4]
 80108f8:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80108fa:	6878      	ldr	r0, [r7, #4]
 80108fc:	f000 fbf7 	bl	80110ee <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010900:	4604      	mov	r4, r0
 8010902:	6838      	ldr	r0, [r7, #0]
 8010904:	f000 fa9c 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010908:	4603      	mov	r3, r0
 801090a:	4619      	mov	r1, r3
 801090c:	4620      	mov	r0, r4
 801090e:	f7ff ffd9 	bl	80108c4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010912:	462b      	mov	r3, r5
      }
 8010914:	4618      	mov	r0, r3
 8010916:	3708      	adds	r7, #8
 8010918:	46bd      	mov	sp, r7
 801091a:	bdb0      	pop	{r4, r5, r7, pc}

0801091c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801091c:	b580      	push	{r7, lr}
 801091e:	b082      	sub	sp, #8
 8010920:	af00      	add	r7, sp, #0
 8010922:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010924:	6878      	ldr	r0, [r7, #4]
 8010926:	f000 fa8b 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801092a:	4603      	mov	r3, r0
 801092c:	4618      	mov	r0, r3
 801092e:	f7ff fc2f 	bl	8010190 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010932:	4603      	mov	r3, r0
	}
 8010934:	4618      	mov	r0, r3
 8010936:	3708      	adds	r7, #8
 8010938:	46bd      	mov	sp, r7
 801093a:	bd80      	pop	{r7, pc}

0801093c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801093c:	b5b0      	push	{r4, r5, r7, lr}
 801093e:	b082      	sub	sp, #8
 8010940:	af00      	add	r7, sp, #0
 8010942:	6078      	str	r0, [r7, #4]
 8010944:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010946:	6878      	ldr	r0, [r7, #4]
 8010948:	f000 fbd1 	bl	80110ee <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 801094c:	4604      	mov	r4, r0
 801094e:	6838      	ldr	r0, [r7, #0]
 8010950:	f000 fa76 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010954:	4603      	mov	r3, r0
 8010956:	4618      	mov	r0, r3
 8010958:	f7ff ffe0 	bl	801091c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESI_EEDcOT0_>
 801095c:	4603      	mov	r3, r0
 801095e:	4619      	mov	r1, r3
 8010960:	4620      	mov	r0, r4
 8010962:	f000 fbfd 	bl	8011160 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8010966:	462b      	mov	r3, r5
      }
 8010968:	4618      	mov	r0, r3
 801096a:	3708      	adds	r7, #8
 801096c:	46bd      	mov	sp, r7
 801096e:	bdb0      	pop	{r4, r5, r7, pc}

08010970 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010970:	b5b0      	push	{r4, r5, r7, lr}
 8010972:	b082      	sub	sp, #8
 8010974:	af00      	add	r7, sp, #0
 8010976:	6078      	str	r0, [r7, #4]
 8010978:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801097a:	6878      	ldr	r0, [r7, #4]
 801097c:	f000 fbb7 	bl	80110ee <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010980:	4604      	mov	r4, r0
 8010982:	6838      	ldr	r0, [r7, #0]
 8010984:	f000 fa5c 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010988:	4603      	mov	r3, r0
 801098a:	4619      	mov	r1, r3
 801098c:	4620      	mov	r0, r4
 801098e:	f7ff ffd5 	bl	801093c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010992:	462b      	mov	r3, r5
      }
 8010994:	4618      	mov	r0, r3
 8010996:	3708      	adds	r7, #8
 8010998:	46bd      	mov	sp, r7
 801099a:	bdb0      	pop	{r4, r5, r7, pc}

0801099c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801099c:	b5b0      	push	{r4, r5, r7, lr}
 801099e:	b082      	sub	sp, #8
 80109a0:	af00      	add	r7, sp, #0
 80109a2:	6078      	str	r0, [r7, #4]
 80109a4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80109a6:	6878      	ldr	r0, [r7, #4]
 80109a8:	f000 fba1 	bl	80110ee <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80109ac:	4604      	mov	r4, r0
 80109ae:	6838      	ldr	r0, [r7, #0]
 80109b0:	f000 fa46 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80109b4:	4603      	mov	r3, r0
 80109b6:	4619      	mov	r1, r3
 80109b8:	4620      	mov	r0, r4
 80109ba:	f7ff ffd9 	bl	8010970 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 80109be:	462b      	mov	r3, r5
      }
 80109c0:	4618      	mov	r0, r3
 80109c2:	3708      	adds	r7, #8
 80109c4:	46bd      	mov	sp, r7
 80109c6:	bdb0      	pop	{r4, r5, r7, pc}

080109c8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80109c8:	b580      	push	{r7, lr}
 80109ca:	b082      	sub	sp, #8
 80109cc:	af00      	add	r7, sp, #0
 80109ce:	7138      	strb	r0, [r7, #4]
 80109d0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80109d2:	6838      	ldr	r0, [r7, #0]
 80109d4:	f000 fbdb 	bl	801118e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 80109d8:	4603      	mov	r3, r0
 80109da:	4618      	mov	r0, r3
 80109dc:	f7f1 fa6c 	bl	8001eb8 <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 80109e0:	4603      	mov	r3, r0
 80109e2:	4618      	mov	r0, r3
 80109e4:	3708      	adds	r7, #8
 80109e6:	46bd      	mov	sp, r7
 80109e8:	bd80      	pop	{r7, pc}

080109ea <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80109ea:	b590      	push	{r4, r7, lr}
 80109ec:	b083      	sub	sp, #12
 80109ee:	af00      	add	r7, sp, #0
 80109f0:	7138      	strb	r0, [r7, #4]
 80109f2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80109f4:	6838      	ldr	r0, [r7, #0]
 80109f6:	f000 fa84 	bl	8010f02 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 80109fa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80109fc:	4619      	mov	r1, r3
 80109fe:	4620      	mov	r0, r4
 8010a00:	f7ff ffe2 	bl	80109c8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010a04:	4603      	mov	r3, r0
    }
 8010a06:	4618      	mov	r0, r3
 8010a08:	370c      	adds	r7, #12
 8010a0a:	46bd      	mov	sp, r7
 8010a0c:	bd90      	pop	{r4, r7, pc}

08010a0e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010a0e:	b590      	push	{r4, r7, lr}
 8010a10:	b083      	sub	sp, #12
 8010a12:	af00      	add	r7, sp, #0
 8010a14:	7138      	strb	r0, [r7, #4]
 8010a16:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010a18:	6838      	ldr	r0, [r7, #0]
 8010a1a:	f000 fa48 	bl	8010eae <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010a1e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010a20:	4619      	mov	r1, r3
 8010a22:	4620      	mov	r0, r4
 8010a24:	f7ff ffe1 	bl	80109ea <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010a28:	4603      	mov	r3, r0
    }
 8010a2a:	4618      	mov	r0, r3
 8010a2c:	370c      	adds	r7, #12
 8010a2e:	46bd      	mov	sp, r7
 8010a30:	bd90      	pop	{r4, r7, pc}

08010a32 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010a32:	b590      	push	{r4, r7, lr}
 8010a34:	b083      	sub	sp, #12
 8010a36:	af00      	add	r7, sp, #0
 8010a38:	7138      	strb	r0, [r7, #4]
 8010a3a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010a3c:	6838      	ldr	r0, [r7, #0]
 8010a3e:	f000 fa0a 	bl	8010e56 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8010a42:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010a44:	4619      	mov	r1, r3
 8010a46:	4620      	mov	r0, r4
 8010a48:	f7ff ffe1 	bl	8010a0e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010a4c:	4603      	mov	r3, r0
    }
 8010a4e:	4618      	mov	r0, r3
 8010a50:	370c      	adds	r7, #12
 8010a52:	46bd      	mov	sp, r7
 8010a54:	bd90      	pop	{r4, r7, pc}

08010a56 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010a56:	b590      	push	{r4, r7, lr}
 8010a58:	b083      	sub	sp, #12
 8010a5a:	af00      	add	r7, sp, #0
 8010a5c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010a5e:	6878      	ldr	r0, [r7, #4]
 8010a60:	f000 f9ee 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010a64:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010a66:	4619      	mov	r1, r3
 8010a68:	4620      	mov	r0, r4
 8010a6a:	f7ff ffe2 	bl	8010a32 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010a6e:	4603      	mov	r3, r0
    }
 8010a70:	4618      	mov	r0, r3
 8010a72:	370c      	adds	r7, #12
 8010a74:	46bd      	mov	sp, r7
 8010a76:	bd90      	pop	{r4, r7, pc}

08010a78 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010a78:	b580      	push	{r7, lr}
 8010a7a:	b082      	sub	sp, #8
 8010a7c:	af00      	add	r7, sp, #0
 8010a7e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010a80:	6878      	ldr	r0, [r7, #4]
 8010a82:	f000 f9dd 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010a86:	4603      	mov	r3, r0
 8010a88:	4618      	mov	r0, r3
 8010a8a:	f7ff ffe4 	bl	8010a56 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010a8e:	4603      	mov	r3, r0
	}
 8010a90:	4618      	mov	r0, r3
 8010a92:	3708      	adds	r7, #8
 8010a94:	46bd      	mov	sp, r7
 8010a96:	bd80      	pop	{r7, pc}

08010a98 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010a98:	b5b0      	push	{r4, r5, r7, lr}
 8010a9a:	b082      	sub	sp, #8
 8010a9c:	af00      	add	r7, sp, #0
 8010a9e:	6078      	str	r0, [r7, #4]
 8010aa0:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010aa2:	6878      	ldr	r0, [r7, #4]
 8010aa4:	f000 fb23 	bl	80110ee <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010aa8:	4604      	mov	r4, r0
 8010aaa:	6838      	ldr	r0, [r7, #0]
 8010aac:	f000 f9c8 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010ab0:	4603      	mov	r3, r0
 8010ab2:	4618      	mov	r0, r3
 8010ab4:	f7ff ffe0 	bl	8010a78 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESI_EEDcOT0_>
 8010ab8:	4603      	mov	r3, r0
 8010aba:	4619      	mov	r1, r3
 8010abc:	4620      	mov	r0, r4
 8010abe:	f000 fb71 	bl	80111a4 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8010ac2:	462b      	mov	r3, r5
      }
 8010ac4:	4618      	mov	r0, r3
 8010ac6:	3708      	adds	r7, #8
 8010ac8:	46bd      	mov	sp, r7
 8010aca:	bdb0      	pop	{r4, r5, r7, pc}

08010acc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010acc:	b5b0      	push	{r4, r5, r7, lr}
 8010ace:	b082      	sub	sp, #8
 8010ad0:	af00      	add	r7, sp, #0
 8010ad2:	6078      	str	r0, [r7, #4]
 8010ad4:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010ad6:	6878      	ldr	r0, [r7, #4]
 8010ad8:	f000 fb09 	bl	80110ee <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010adc:	4604      	mov	r4, r0
 8010ade:	6838      	ldr	r0, [r7, #0]
 8010ae0:	f000 f9ae 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010ae4:	4603      	mov	r3, r0
 8010ae6:	4619      	mov	r1, r3
 8010ae8:	4620      	mov	r0, r4
 8010aea:	f7ff ffd5 	bl	8010a98 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010aee:	462b      	mov	r3, r5
      }
 8010af0:	4618      	mov	r0, r3
 8010af2:	3708      	adds	r7, #8
 8010af4:	46bd      	mov	sp, r7
 8010af6:	bdb0      	pop	{r4, r5, r7, pc}

08010af8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010af8:	b5b0      	push	{r4, r5, r7, lr}
 8010afa:	b082      	sub	sp, #8
 8010afc:	af00      	add	r7, sp, #0
 8010afe:	6078      	str	r0, [r7, #4]
 8010b00:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010b02:	6878      	ldr	r0, [r7, #4]
 8010b04:	f000 faf3 	bl	80110ee <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010b08:	4604      	mov	r4, r0
 8010b0a:	6838      	ldr	r0, [r7, #0]
 8010b0c:	f000 f998 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010b10:	4603      	mov	r3, r0
 8010b12:	4619      	mov	r1, r3
 8010b14:	4620      	mov	r0, r4
 8010b16:	f7ff ffd9 	bl	8010acc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010b1a:	462b      	mov	r3, r5
      }
 8010b1c:	4618      	mov	r0, r3
 8010b1e:	3708      	adds	r7, #8
 8010b20:	46bd      	mov	sp, r7
 8010b22:	bdb0      	pop	{r4, r5, r7, pc}

08010b24 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSJ_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8010b24:	b580      	push	{r7, lr}
 8010b26:	b082      	sub	sp, #8
 8010b28:	af00      	add	r7, sp, #0
 8010b2a:	6078      	str	r0, [r7, #4]
 8010b2c:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8010b2e:	683b      	ldr	r3, [r7, #0]
 8010b30:	009b      	lsls	r3, r3, #2
 8010b32:	687a      	ldr	r2, [r7, #4]
 8010b34:	4413      	add	r3, r2
 8010b36:	4618      	mov	r0, r3
 8010b38:	f000 fb4b 	bl	80111d2 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 8010b3c:	4603      	mov	r3, r0
	}
 8010b3e:	4618      	mov	r0, r3
 8010b40:	3708      	adds	r7, #8
 8010b42:	46bd      	mov	sp, r7
 8010b44:	bd80      	pop	{r7, pc}
	...

08010b48 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8010b48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010b4a:	b085      	sub	sp, #20
 8010b4c:	af00      	add	r7, sp, #0
 8010b4e:	6078      	str	r0, [r7, #4]
 8010b50:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8010b52:	4b0f      	ldr	r3, [pc, #60]	; (8010b90 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_+0x48>)
 8010b54:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8010b56:	6838      	ldr	r0, [r7, #0]
 8010b58:	f7ff f852 	bl	800fc00 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8010b5c:	4603      	mov	r3, r0
 8010b5e:	4619      	mov	r1, r3
 8010b60:	68f8      	ldr	r0, [r7, #12]
 8010b62:	f7ff ffdf 	bl	8010b24 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSJ_jDpT_>
 8010b66:	4603      	mov	r3, r0
 8010b68:	681b      	ldr	r3, [r3, #0]
 8010b6a:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8010b6c:	68bc      	ldr	r4, [r7, #8]
 8010b6e:	6878      	ldr	r0, [r7, #4]
 8010b70:	f000 fb3a 	bl	80111e8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010b74:	4605      	mov	r5, r0
 8010b76:	6838      	ldr	r0, [r7, #0]
 8010b78:	f000 f962 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010b7c:	4603      	mov	r3, r0
 8010b7e:	4619      	mov	r1, r3
 8010b80:	4628      	mov	r0, r5
 8010b82:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8010b84:	4633      	mov	r3, r6
    }
 8010b86:	4618      	mov	r0, r3
 8010b88:	3714      	adds	r7, #20
 8010b8a:	46bd      	mov	sp, r7
 8010b8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010b8e:	bf00      	nop
 8010b90:	08027e58 	.word	0x08027e58

08010b94 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 8010b94:	b580      	push	{r7, lr}
 8010b96:	b084      	sub	sp, #16
 8010b98:	af00      	add	r7, sp, #0
 8010b9a:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 8010b9c:	6878      	ldr	r0, [r7, #4]
 8010b9e:	f7ff fe06 	bl	80107ae <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant16_Variant_storageILb0EJS5_ifbEEEEDcOT0_>
 8010ba2:	4602      	mov	r2, r0
 8010ba4:	f107 030c 	add.w	r3, r7, #12
 8010ba8:	4611      	mov	r1, r2
 8010baa:	4618      	mov	r0, r3
 8010bac:	f7ff ffcc 	bl	8010b48 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>
      }
 8010bb0:	bf00      	nop
 8010bb2:	3710      	adds	r7, #16
 8010bb4:	46bd      	mov	sp, r7
 8010bb6:	bd80      	pop	{r7, pc}

08010bb8 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8010bb8:	b480      	push	{r7}
 8010bba:	b083      	sub	sp, #12
 8010bbc:	af00      	add	r7, sp, #0
 8010bbe:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8010bc0:	687b      	ldr	r3, [r7, #4]
 8010bc2:	689b      	ldr	r3, [r3, #8]
      }
 8010bc4:	4618      	mov	r0, r3
 8010bc6:	370c      	adds	r7, #12
 8010bc8:	46bd      	mov	sp, r7
 8010bca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010bce:	4770      	bx	lr

08010bd0 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8010bd0:	b480      	push	{r7}
 8010bd2:	b083      	sub	sp, #12
 8010bd4:	af00      	add	r7, sp, #0
 8010bd6:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8010bd8:	687b      	ldr	r3, [r7, #4]
 8010bda:	3304      	adds	r3, #4
 8010bdc:	4618      	mov	r0, r3
 8010bde:	370c      	adds	r7, #12
 8010be0:	46bd      	mov	sp, r7
 8010be2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010be6:	4770      	bx	lr

08010be8 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8010be8:	b590      	push	{r4, r7, lr}
 8010bea:	b087      	sub	sp, #28
 8010bec:	af00      	add	r7, sp, #0
 8010bee:	60f8      	str	r0, [r7, #12]
 8010bf0:	60b9      	str	r1, [r7, #8]
 8010bf2:	607a      	str	r2, [r7, #4]
 8010bf4:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8010bf6:	68bb      	ldr	r3, [r7, #8]
 8010bf8:	2b00      	cmp	r3, #0
 8010bfa:	d01b      	beq.n	8010c34 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8010bfc:	68fc      	ldr	r4, [r7, #12]
 8010bfe:	68b8      	ldr	r0, [r7, #8]
 8010c00:	f7f5 fbd8 	bl	80063b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8010c04:	4603      	mov	r3, r0
 8010c06:	683a      	ldr	r2, [r7, #0]
 8010c08:	4619      	mov	r1, r3
 8010c0a:	4620      	mov	r0, r4
 8010c0c:	f7f4 fb7f 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 8010c10:	4603      	mov	r3, r0
 8010c12:	f083 0301 	eor.w	r3, r3, #1
 8010c16:	b2db      	uxtb	r3, r3
 8010c18:	2b00      	cmp	r3, #0
 8010c1a:	d006      	beq.n	8010c2a <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x42>
	  __y = __x, __x = _S_left(__x);
 8010c1c:	68bb      	ldr	r3, [r7, #8]
 8010c1e:	607b      	str	r3, [r7, #4]
 8010c20:	68b8      	ldr	r0, [r7, #8]
 8010c22:	f000 faec 	bl	80111fe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>
 8010c26:	60b8      	str	r0, [r7, #8]
 8010c28:	e7e5      	b.n	8010bf6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
	  __x = _S_right(__x);
 8010c2a:	68b8      	ldr	r0, [r7, #8]
 8010c2c:	f000 faf3 	bl	8011216 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>
 8010c30:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8010c32:	e7e0      	b.n	8010bf6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
      return const_iterator(__y);
 8010c34:	f107 0314 	add.w	r3, r7, #20
 8010c38:	6879      	ldr	r1, [r7, #4]
 8010c3a:	4618      	mov	r0, r3
 8010c3c:	f000 f819 	bl	8010c72 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>
 8010c40:	697b      	ldr	r3, [r7, #20]
    }
 8010c42:	4618      	mov	r0, r3
 8010c44:	371c      	adds	r7, #28
 8010c46:	46bd      	mov	sp, r7
 8010c48:	bd90      	pop	{r4, r7, pc}

08010c4a <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8010c4a:	b480      	push	{r7}
 8010c4c:	b083      	sub	sp, #12
 8010c4e:	af00      	add	r7, sp, #0
 8010c50:	6078      	str	r0, [r7, #4]
 8010c52:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8010c54:	687b      	ldr	r3, [r7, #4]
 8010c56:	681a      	ldr	r2, [r3, #0]
 8010c58:	683b      	ldr	r3, [r7, #0]
 8010c5a:	681b      	ldr	r3, [r3, #0]
 8010c5c:	429a      	cmp	r2, r3
 8010c5e:	bf0c      	ite	eq
 8010c60:	2301      	moveq	r3, #1
 8010c62:	2300      	movne	r3, #0
 8010c64:	b2db      	uxtb	r3, r3
 8010c66:	4618      	mov	r0, r3
 8010c68:	370c      	adds	r7, #12
 8010c6a:	46bd      	mov	sp, r7
 8010c6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c70:	4770      	bx	lr

08010c72 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8010c72:	b480      	push	{r7}
 8010c74:	b083      	sub	sp, #12
 8010c76:	af00      	add	r7, sp, #0
 8010c78:	6078      	str	r0, [r7, #4]
 8010c7a:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8010c7c:	687b      	ldr	r3, [r7, #4]
 8010c7e:	683a      	ldr	r2, [r7, #0]
 8010c80:	601a      	str	r2, [r3, #0]
 8010c82:	687b      	ldr	r3, [r7, #4]
 8010c84:	4618      	mov	r0, r3
 8010c86:	370c      	adds	r7, #12
 8010c88:	46bd      	mov	sp, r7
 8010c8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c8e:	4770      	bx	lr

08010c90 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8010c90:	b480      	push	{r7}
 8010c92:	b083      	sub	sp, #12
 8010c94:	af00      	add	r7, sp, #0
 8010c96:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8010c98:	687b      	ldr	r3, [r7, #4]
 8010c9a:	689b      	ldr	r3, [r3, #8]
      }
 8010c9c:	4618      	mov	r0, r3
 8010c9e:	370c      	adds	r7, #12
 8010ca0:	46bd      	mov	sp, r7
 8010ca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ca6:	4770      	bx	lr

08010ca8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8010ca8:	b480      	push	{r7}
 8010caa:	b083      	sub	sp, #12
 8010cac:	af00      	add	r7, sp, #0
 8010cae:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8010cb0:	687b      	ldr	r3, [r7, #4]
 8010cb2:	3304      	adds	r3, #4
 8010cb4:	4618      	mov	r0, r3
 8010cb6:	370c      	adds	r7, #12
 8010cb8:	46bd      	mov	sp, r7
 8010cba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010cbe:	4770      	bx	lr

08010cc0 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8010cc0:	b590      	push	{r4, r7, lr}
 8010cc2:	b087      	sub	sp, #28
 8010cc4:	af00      	add	r7, sp, #0
 8010cc6:	60f8      	str	r0, [r7, #12]
 8010cc8:	60b9      	str	r1, [r7, #8]
 8010cca:	607a      	str	r2, [r7, #4]
 8010ccc:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8010cce:	68bb      	ldr	r3, [r7, #8]
 8010cd0:	2b00      	cmp	r3, #0
 8010cd2:	d01b      	beq.n	8010d0c <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8010cd4:	68fc      	ldr	r4, [r7, #12]
 8010cd6:	68b8      	ldr	r0, [r7, #8]
 8010cd8:	f7f5 fcc1 	bl	800665e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8010cdc:	4603      	mov	r3, r0
 8010cde:	683a      	ldr	r2, [r7, #0]
 8010ce0:	4619      	mov	r1, r3
 8010ce2:	4620      	mov	r0, r4
 8010ce4:	f7f4 fb13 	bl	800530e <_ZNKSt4lessIcEclERKcS2_>
 8010ce8:	4603      	mov	r3, r0
 8010cea:	f083 0301 	eor.w	r3, r3, #1
 8010cee:	b2db      	uxtb	r3, r3
 8010cf0:	2b00      	cmp	r3, #0
 8010cf2:	d006      	beq.n	8010d02 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x42>
	  __y = __x, __x = _S_left(__x);
 8010cf4:	68bb      	ldr	r3, [r7, #8]
 8010cf6:	607b      	str	r3, [r7, #4]
 8010cf8:	68b8      	ldr	r0, [r7, #8]
 8010cfa:	f000 fa98 	bl	801122e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>
 8010cfe:	60b8      	str	r0, [r7, #8]
 8010d00:	e7e5      	b.n	8010cce <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
	  __x = _S_right(__x);
 8010d02:	68b8      	ldr	r0, [r7, #8]
 8010d04:	f000 fa9f 	bl	8011246 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>
 8010d08:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8010d0a:	e7e0      	b.n	8010cce <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
      return const_iterator(__y);
 8010d0c:	f107 0314 	add.w	r3, r7, #20
 8010d10:	6879      	ldr	r1, [r7, #4]
 8010d12:	4618      	mov	r0, r3
 8010d14:	f000 f819 	bl	8010d4a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>
 8010d18:	697b      	ldr	r3, [r7, #20]
    }
 8010d1a:	4618      	mov	r0, r3
 8010d1c:	371c      	adds	r7, #28
 8010d1e:	46bd      	mov	sp, r7
 8010d20:	bd90      	pop	{r4, r7, pc}

08010d22 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8010d22:	b480      	push	{r7}
 8010d24:	b083      	sub	sp, #12
 8010d26:	af00      	add	r7, sp, #0
 8010d28:	6078      	str	r0, [r7, #4]
 8010d2a:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8010d2c:	687b      	ldr	r3, [r7, #4]
 8010d2e:	681a      	ldr	r2, [r3, #0]
 8010d30:	683b      	ldr	r3, [r7, #0]
 8010d32:	681b      	ldr	r3, [r3, #0]
 8010d34:	429a      	cmp	r2, r3
 8010d36:	bf0c      	ite	eq
 8010d38:	2301      	moveq	r3, #1
 8010d3a:	2300      	movne	r3, #0
 8010d3c:	b2db      	uxtb	r3, r3
 8010d3e:	4618      	mov	r0, r3
 8010d40:	370c      	adds	r7, #12
 8010d42:	46bd      	mov	sp, r7
 8010d44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d48:	4770      	bx	lr

08010d4a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8010d4a:	b480      	push	{r7}
 8010d4c:	b083      	sub	sp, #12
 8010d4e:	af00      	add	r7, sp, #0
 8010d50:	6078      	str	r0, [r7, #4]
 8010d52:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8010d54:	687b      	ldr	r3, [r7, #4]
 8010d56:	683a      	ldr	r2, [r7, #0]
 8010d58:	601a      	str	r2, [r3, #0]
 8010d5a:	687b      	ldr	r3, [r7, #4]
 8010d5c:	4618      	mov	r0, r3
 8010d5e:	370c      	adds	r7, #12
 8010d60:	46bd      	mov	sp, r7
 8010d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d66:	4770      	bx	lr

08010d68 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8010d68:	b480      	push	{r7}
 8010d6a:	b083      	sub	sp, #12
 8010d6c:	af00      	add	r7, sp, #0
 8010d6e:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8010d70:	687b      	ldr	r3, [r7, #4]
 8010d72:	689b      	ldr	r3, [r3, #8]
      }
 8010d74:	4618      	mov	r0, r3
 8010d76:	370c      	adds	r7, #12
 8010d78:	46bd      	mov	sp, r7
 8010d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d7e:	4770      	bx	lr

08010d80 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8010d80:	b480      	push	{r7}
 8010d82:	b083      	sub	sp, #12
 8010d84:	af00      	add	r7, sp, #0
 8010d86:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8010d88:	687b      	ldr	r3, [r7, #4]
 8010d8a:	3304      	adds	r3, #4
 8010d8c:	4618      	mov	r0, r3
 8010d8e:	370c      	adds	r7, #12
 8010d90:	46bd      	mov	sp, r7
 8010d92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d96:	4770      	bx	lr

08010d98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8010d98:	b590      	push	{r4, r7, lr}
 8010d9a:	b087      	sub	sp, #28
 8010d9c:	af00      	add	r7, sp, #0
 8010d9e:	60f8      	str	r0, [r7, #12]
 8010da0:	60b9      	str	r1, [r7, #8]
 8010da2:	607a      	str	r2, [r7, #4]
 8010da4:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8010da6:	68bb      	ldr	r3, [r7, #8]
 8010da8:	2b00      	cmp	r3, #0
 8010daa:	d01b      	beq.n	8010de4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8010dac:	68fc      	ldr	r4, [r7, #12]
 8010dae:	68b8      	ldr	r0, [r7, #8]
 8010db0:	f7f5 fba8 	bl	8006504 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8010db4:	4603      	mov	r3, r0
 8010db6:	683a      	ldr	r2, [r7, #0]
 8010db8:	4619      	mov	r1, r3
 8010dba:	4620      	mov	r0, r4
 8010dbc:	f7f4 fc3c 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8010dc0:	4603      	mov	r3, r0
 8010dc2:	f083 0301 	eor.w	r3, r3, #1
 8010dc6:	b2db      	uxtb	r3, r3
 8010dc8:	2b00      	cmp	r3, #0
 8010dca:	d006      	beq.n	8010dda <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 8010dcc:	68bb      	ldr	r3, [r7, #8]
 8010dce:	607b      	str	r3, [r7, #4]
 8010dd0:	68b8      	ldr	r0, [r7, #8]
 8010dd2:	f000 fa44 	bl	801125e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPKSt18_Rb_tree_node_base>
 8010dd6:	60b8      	str	r0, [r7, #8]
 8010dd8:	e7e5      	b.n	8010da6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 8010dda:	68b8      	ldr	r0, [r7, #8]
 8010ddc:	f000 fa4b 	bl	8011276 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPKSt18_Rb_tree_node_base>
 8010de0:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8010de2:	e7e0      	b.n	8010da6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0xe>
      return const_iterator(__y);
 8010de4:	f107 0314 	add.w	r3, r7, #20
 8010de8:	6879      	ldr	r1, [r7, #4]
 8010dea:	4618      	mov	r0, r3
 8010dec:	f000 f819 	bl	8010e22 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>
 8010df0:	697b      	ldr	r3, [r7, #20]
    }
 8010df2:	4618      	mov	r0, r3
 8010df4:	371c      	adds	r7, #28
 8010df6:	46bd      	mov	sp, r7
 8010df8:	bd90      	pop	{r4, r7, pc}

08010dfa <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8010dfa:	b480      	push	{r7}
 8010dfc:	b083      	sub	sp, #12
 8010dfe:	af00      	add	r7, sp, #0
 8010e00:	6078      	str	r0, [r7, #4]
 8010e02:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8010e04:	687b      	ldr	r3, [r7, #4]
 8010e06:	681a      	ldr	r2, [r3, #0]
 8010e08:	683b      	ldr	r3, [r7, #0]
 8010e0a:	681b      	ldr	r3, [r3, #0]
 8010e0c:	429a      	cmp	r2, r3
 8010e0e:	bf0c      	ite	eq
 8010e10:	2301      	moveq	r3, #1
 8010e12:	2300      	movne	r3, #0
 8010e14:	b2db      	uxtb	r3, r3
 8010e16:	4618      	mov	r0, r3
 8010e18:	370c      	adds	r7, #12
 8010e1a:	46bd      	mov	sp, r7
 8010e1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e20:	4770      	bx	lr

08010e22 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8010e22:	b480      	push	{r7}
 8010e24:	b083      	sub	sp, #12
 8010e26:	af00      	add	r7, sp, #0
 8010e28:	6078      	str	r0, [r7, #4]
 8010e2a:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8010e2c:	687b      	ldr	r3, [r7, #4]
 8010e2e:	683a      	ldr	r2, [r7, #0]
 8010e30:	601a      	str	r2, [r3, #0]
 8010e32:	687b      	ldr	r3, [r7, #4]
 8010e34:	4618      	mov	r0, r3
 8010e36:	370c      	adds	r7, #12
 8010e38:	46bd      	mov	sp, r7
 8010e3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e3e:	4770      	bx	lr

08010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010e40:	b480      	push	{r7}
 8010e42:	b083      	sub	sp, #12
 8010e44:	af00      	add	r7, sp, #0
 8010e46:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010e48:	687b      	ldr	r3, [r7, #4]
 8010e4a:	4618      	mov	r0, r3
 8010e4c:	370c      	adds	r7, #12
 8010e4e:	46bd      	mov	sp, r7
 8010e50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e54:	4770      	bx	lr

08010e56 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010e56:	b480      	push	{r7}
 8010e58:	b083      	sub	sp, #12
 8010e5a:	af00      	add	r7, sp, #0
 8010e5c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010e5e:	687b      	ldr	r3, [r7, #4]
 8010e60:	4618      	mov	r0, r3
 8010e62:	370c      	adds	r7, #12
 8010e64:	46bd      	mov	sp, r7
 8010e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e6a:	4770      	bx	lr

08010e6c <_ZSt28__variant_construct_by_indexILj0ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8010e6c:	b590      	push	{r4, r7, lr}
 8010e6e:	b085      	sub	sp, #20
 8010e70:	af00      	add	r7, sp, #0
 8010e72:	6078      	str	r0, [r7, #4]
 8010e74:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8010e76:	687b      	ldr	r3, [r7, #4]
 8010e78:	2200      	movs	r2, #0
 8010e7a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8010e7c:	6878      	ldr	r0, [r7, #4]
 8010e7e:	f7ff f8a2 	bl	800ffc6 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010e82:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8010e84:	6838      	ldr	r0, [r7, #0]
 8010e86:	f7f7 fc26 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010e8a:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 8010e8c:	68f8      	ldr	r0, [r7, #12]
 8010e8e:	f7f7 fdef 	bl	8008a70 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8010e92:	4603      	mov	r3, r0
 8010e94:	4619      	mov	r1, r3
 8010e96:	2018      	movs	r0, #24
 8010e98:	f7f0 f8df 	bl	800105a <_ZnwjPv>
 8010e9c:	4603      	mov	r3, r0
 8010e9e:	4621      	mov	r1, r4
 8010ea0:	4618      	mov	r0, r3
 8010ea2:	f011 fd84 	bl	80229ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 8010ea6:	bf00      	nop
 8010ea8:	3714      	adds	r7, #20
 8010eaa:	46bd      	mov	sp, r7
 8010eac:	bd90      	pop	{r4, r7, pc}

08010eae <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010eae:	b480      	push	{r7}
 8010eb0:	b083      	sub	sp, #12
 8010eb2:	af00      	add	r7, sp, #0
 8010eb4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010eb6:	687b      	ldr	r3, [r7, #4]
 8010eb8:	4618      	mov	r0, r3
 8010eba:	370c      	adds	r7, #12
 8010ebc:	46bd      	mov	sp, r7
 8010ebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ec2:	4770      	bx	lr

08010ec4 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8010ec4:	b590      	push	{r4, r7, lr}
 8010ec6:	b085      	sub	sp, #20
 8010ec8:	af00      	add	r7, sp, #0
 8010eca:	6078      	str	r0, [r7, #4]
 8010ecc:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8010ece:	687b      	ldr	r3, [r7, #4]
 8010ed0:	2201      	movs	r2, #1
 8010ed2:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8010ed4:	6878      	ldr	r0, [r7, #4]
 8010ed6:	f7ff f8df 	bl	8010098 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010eda:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8010edc:	6838      	ldr	r0, [r7, #0]
 8010ede:	f7f7 fb5f 	bl	80085a0 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8010ee2:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8010ee4:	681c      	ldr	r4, [r3, #0]
 8010ee6:	68f8      	ldr	r0, [r7, #12]
 8010ee8:	f7f7 fd9e 	bl	8008a28 <_ZSt9addressofIiEPT_RS0_>
 8010eec:	4603      	mov	r3, r0
 8010eee:	4619      	mov	r1, r3
 8010ef0:	2004      	movs	r0, #4
 8010ef2:	f7f0 f8b2 	bl	800105a <_ZnwjPv>
 8010ef6:	4603      	mov	r3, r0
 8010ef8:	601c      	str	r4, [r3, #0]
    }
 8010efa:	bf00      	nop
 8010efc:	3714      	adds	r7, #20
 8010efe:	46bd      	mov	sp, r7
 8010f00:	bd90      	pop	{r4, r7, pc}

08010f02 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010f02:	b480      	push	{r7}
 8010f04:	b083      	sub	sp, #12
 8010f06:	af00      	add	r7, sp, #0
 8010f08:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010f0a:	687b      	ldr	r3, [r7, #4]
 8010f0c:	4618      	mov	r0, r3
 8010f0e:	370c      	adds	r7, #12
 8010f10:	46bd      	mov	sp, r7
 8010f12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f16:	4770      	bx	lr

08010f18 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8010f18:	b590      	push	{r4, r7, lr}
 8010f1a:	b085      	sub	sp, #20
 8010f1c:	af00      	add	r7, sp, #0
 8010f1e:	6078      	str	r0, [r7, #4]
 8010f20:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8010f22:	687b      	ldr	r3, [r7, #4]
 8010f24:	2202      	movs	r2, #2
 8010f26:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8010f28:	6878      	ldr	r0, [r7, #4]
 8010f2a:	f7ff f931 	bl	8010190 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010f2e:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8010f30:	6838      	ldr	r0, [r7, #0]
 8010f32:	f7f7 fb5f 	bl	80085f4 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8010f36:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8010f38:	681c      	ldr	r4, [r3, #0]
 8010f3a:	68f8      	ldr	r0, [r7, #12]
 8010f3c:	f7f7 fd80 	bl	8008a40 <_ZSt9addressofIfEPT_RS0_>
 8010f40:	4603      	mov	r3, r0
 8010f42:	4619      	mov	r1, r3
 8010f44:	2004      	movs	r0, #4
 8010f46:	f7f0 f888 	bl	800105a <_ZnwjPv>
 8010f4a:	4603      	mov	r3, r0
 8010f4c:	601c      	str	r4, [r3, #0]
    }
 8010f4e:	bf00      	nop
 8010f50:	3714      	adds	r7, #20
 8010f52:	46bd      	mov	sp, r7
 8010f54:	bd90      	pop	{r4, r7, pc}

08010f56 <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8010f56:	b580      	push	{r7, lr}
 8010f58:	b082      	sub	sp, #8
 8010f5a:	af00      	add	r7, sp, #0
 8010f5c:	6078      	str	r0, [r7, #4]
 8010f5e:	687b      	ldr	r3, [r7, #4]
 8010f60:	4618      	mov	r0, r3
 8010f62:	f000 f994 	bl	801128e <_ZNSt8__detail9__variant15_Variadic_unionIJfbEEC1Ev>
 8010f66:	687b      	ldr	r3, [r7, #4]
 8010f68:	4618      	mov	r0, r3
 8010f6a:	3708      	adds	r7, #8
 8010f6c:	46bd      	mov	sp, r7
 8010f6e:	bd80      	pop	{r7, pc}

08010f70 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010f70:	b480      	push	{r7}
 8010f72:	b083      	sub	sp, #12
 8010f74:	af00      	add	r7, sp, #0
 8010f76:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010f78:	687b      	ldr	r3, [r7, #4]
 8010f7a:	4618      	mov	r0, r3
 8010f7c:	370c      	adds	r7, #12
 8010f7e:	46bd      	mov	sp, r7
 8010f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f84:	4770      	bx	lr

08010f86 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010f86:	b480      	push	{r7}
 8010f88:	b083      	sub	sp, #12
 8010f8a:	af00      	add	r7, sp, #0
 8010f8c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010f8e:	687b      	ldr	r3, [r7, #4]
 8010f90:	4618      	mov	r0, r3
 8010f92:	370c      	adds	r7, #12
 8010f94:	46bd      	mov	sp, r7
 8010f96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f9a:	4770      	bx	lr

08010f9c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010f9c:	b480      	push	{r7}
 8010f9e:	b083      	sub	sp, #12
 8010fa0:	af00      	add	r7, sp, #0
 8010fa2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010fa4:	687b      	ldr	r3, [r7, #4]
 8010fa6:	4618      	mov	r0, r3
 8010fa8:	370c      	adds	r7, #12
 8010faa:	46bd      	mov	sp, r7
 8010fac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010fb0:	4770      	bx	lr

08010fb2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010fb2:	b480      	push	{r7}
 8010fb4:	b083      	sub	sp, #12
 8010fb6:	af00      	add	r7, sp, #0
 8010fb8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010fba:	687b      	ldr	r3, [r7, #4]
 8010fbc:	4618      	mov	r0, r3
 8010fbe:	370c      	adds	r7, #12
 8010fc0:	46bd      	mov	sp, r7
 8010fc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010fc6:	4770      	bx	lr

08010fc8 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8010fc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010fca:	b083      	sub	sp, #12
 8010fcc:	af00      	add	r7, sp, #0
 8010fce:	6078      	str	r0, [r7, #4]
 8010fd0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8010fd2:	6878      	ldr	r0, [r7, #4]
 8010fd4:	f000 f880 	bl	80110d8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010fd8:	4604      	mov	r4, r0
 8010fda:	6838      	ldr	r0, [r7, #0]
 8010fdc:	f7f2 ffa4 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8010fe0:	4603      	mov	r3, r0
 8010fe2:	461a      	mov	r2, r3
 8010fe4:	4621      	mov	r1, r4
 8010fe6:	4628      	mov	r0, r5
 8010fe8:	f000 f95e 	bl	80112a8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKS9_EESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 8010fec:	4633      	mov	r3, r6
    }
 8010fee:	4618      	mov	r0, r3
 8010ff0:	370c      	adds	r7, #12
 8010ff2:	46bd      	mov	sp, r7
 8010ff4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010ff6 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010ff6:	b480      	push	{r7}
 8010ff8:	b083      	sub	sp, #12
 8010ffa:	af00      	add	r7, sp, #0
 8010ffc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010ffe:	687b      	ldr	r3, [r7, #4]
 8011000:	4618      	mov	r0, r3
 8011002:	370c      	adds	r7, #12
 8011004:	46bd      	mov	sp, r7
 8011006:	f85d 7b04 	ldr.w	r7, [sp], #4
 801100a:	4770      	bx	lr

0801100c <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801100c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801100e:	b083      	sub	sp, #12
 8011010:	af00      	add	r7, sp, #0
 8011012:	6078      	str	r0, [r7, #4]
 8011014:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8011016:	6878      	ldr	r0, [r7, #4]
 8011018:	f000 f85e 	bl	80110d8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801101c:	4604      	mov	r4, r0
 801101e:	6838      	ldr	r0, [r7, #0]
 8011020:	f7f2 feda 	bl	8003dd8 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8011024:	4603      	mov	r3, r0
 8011026:	461a      	mov	r2, r3
 8011028:	4621      	mov	r1, r4
 801102a:	4628      	mov	r0, r5
 801102c:	f000 f953 	bl	80112d6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKiEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 8011030:	4633      	mov	r3, r6
    }
 8011032:	4618      	mov	r0, r3
 8011034:	370c      	adds	r7, #12
 8011036:	46bd      	mov	sp, r7
 8011038:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801103a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801103a:	b480      	push	{r7}
 801103c:	b083      	sub	sp, #12
 801103e:	af00      	add	r7, sp, #0
 8011040:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011042:	687b      	ldr	r3, [r7, #4]
 8011044:	4618      	mov	r0, r3
 8011046:	370c      	adds	r7, #12
 8011048:	46bd      	mov	sp, r7
 801104a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801104e:	4770      	bx	lr

08011050 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011050:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011052:	b083      	sub	sp, #12
 8011054:	af00      	add	r7, sp, #0
 8011056:	6078      	str	r0, [r7, #4]
 8011058:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801105a:	6878      	ldr	r0, [r7, #4]
 801105c:	f000 f83c 	bl	80110d8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011060:	4604      	mov	r4, r0
 8011062:	6838      	ldr	r0, [r7, #0]
 8011064:	f7f2 feec 	bl	8003e40 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8011068:	4603      	mov	r3, r0
 801106a:	461a      	mov	r2, r3
 801106c:	4621      	mov	r1, r4
 801106e:	4628      	mov	r0, r5
 8011070:	f000 f948 	bl	8011304 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKfEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 8011074:	4633      	mov	r3, r6
    }
 8011076:	4618      	mov	r0, r3
 8011078:	370c      	adds	r7, #12
 801107a:	46bd      	mov	sp, r7
 801107c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801107e <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801107e:	b480      	push	{r7}
 8011080:	b083      	sub	sp, #12
 8011082:	af00      	add	r7, sp, #0
 8011084:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011086:	687b      	ldr	r3, [r7, #4]
 8011088:	4618      	mov	r0, r3
 801108a:	370c      	adds	r7, #12
 801108c:	46bd      	mov	sp, r7
 801108e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011092:	4770      	bx	lr

08011094 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011094:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011096:	b083      	sub	sp, #12
 8011098:	af00      	add	r7, sp, #0
 801109a:	6078      	str	r0, [r7, #4]
 801109c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801109e:	6878      	ldr	r0, [r7, #4]
 80110a0:	f000 f81a 	bl	80110d8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80110a4:	4604      	mov	r4, r0
 80110a6:	6838      	ldr	r0, [r7, #0]
 80110a8:	f7f2 fefe 	bl	8003ea8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 80110ac:	4603      	mov	r3, r0
 80110ae:	461a      	mov	r2, r3
 80110b0:	4621      	mov	r1, r4
 80110b2:	4628      	mov	r0, r5
 80110b4:	f000 f93d 	bl	8011332 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKbEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 80110b8:	4633      	mov	r3, r6
    }
 80110ba:	4618      	mov	r0, r3
 80110bc:	370c      	adds	r7, #12
 80110be:	46bd      	mov	sp, r7
 80110c0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080110c2 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 80110c2:	b480      	push	{r7}
 80110c4:	b083      	sub	sp, #12
 80110c6:	af00      	add	r7, sp, #0
 80110c8:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 80110ca:	687b      	ldr	r3, [r7, #4]
 80110cc:	4618      	mov	r0, r3
 80110ce:	370c      	adds	r7, #12
 80110d0:	46bd      	mov	sp, r7
 80110d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110d6:	4770      	bx	lr

080110d8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80110d8:	b480      	push	{r7}
 80110da:	b083      	sub	sp, #12
 80110dc:	af00      	add	r7, sp, #0
 80110de:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80110e0:	687b      	ldr	r3, [r7, #4]
 80110e2:	4618      	mov	r0, r3
 80110e4:	370c      	adds	r7, #12
 80110e6:	46bd      	mov	sp, r7
 80110e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110ec:	4770      	bx	lr

080110ee <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80110ee:	b480      	push	{r7}
 80110f0:	b083      	sub	sp, #12
 80110f2:	af00      	add	r7, sp, #0
 80110f4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80110f6:	687b      	ldr	r3, [r7, #4]
 80110f8:	4618      	mov	r0, r3
 80110fa:	370c      	adds	r7, #12
 80110fc:	46bd      	mov	sp, r7
 80110fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011102:	4770      	bx	lr

08011104 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011104:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011106:	b083      	sub	sp, #12
 8011108:	af00      	add	r7, sp, #0
 801110a:	6078      	str	r0, [r7, #4]
 801110c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801110e:	6878      	ldr	r0, [r7, #4]
 8011110:	f000 f86a 	bl	80111e8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011114:	4604      	mov	r4, r0
 8011116:	6838      	ldr	r0, [r7, #0]
 8011118:	f7f4 fd11 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801111c:	4603      	mov	r3, r0
 801111e:	461a      	mov	r2, r3
 8011120:	4621      	mov	r1, r4
 8011122:	4628      	mov	r0, r5
 8011124:	f000 f91c 	bl	8011360 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS9_EESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011128:	4633      	mov	r3, r6
    }
 801112a:	4618      	mov	r0, r3
 801112c:	370c      	adds	r7, #12
 801112e:	46bd      	mov	sp, r7
 8011130:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011132 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011132:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011134:	b083      	sub	sp, #12
 8011136:	af00      	add	r7, sp, #0
 8011138:	6078      	str	r0, [r7, #4]
 801113a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801113c:	6878      	ldr	r0, [r7, #4]
 801113e:	f000 f853 	bl	80111e8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011142:	4604      	mov	r4, r0
 8011144:	6838      	ldr	r0, [r7, #0]
 8011146:	f7f4 fc88 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801114a:	4603      	mov	r3, r0
 801114c:	461a      	mov	r2, r3
 801114e:	4621      	mov	r1, r4
 8011150:	4628      	mov	r0, r5
 8011152:	f000 f91c 	bl	801138e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011156:	4633      	mov	r3, r6
    }
 8011158:	4618      	mov	r0, r3
 801115a:	370c      	adds	r7, #12
 801115c:	46bd      	mov	sp, r7
 801115e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011160 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011160:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011162:	b083      	sub	sp, #12
 8011164:	af00      	add	r7, sp, #0
 8011166:	6078      	str	r0, [r7, #4]
 8011168:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801116a:	6878      	ldr	r0, [r7, #4]
 801116c:	f000 f83c 	bl	80111e8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011170:	4604      	mov	r4, r0
 8011172:	6838      	ldr	r0, [r7, #0]
 8011174:	f7f4 fc93 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8011178:	4603      	mov	r3, r0
 801117a:	461a      	mov	r2, r3
 801117c:	4621      	mov	r1, r4
 801117e:	4628      	mov	r0, r5
 8011180:	f000 f91c 	bl	80113bc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011184:	4633      	mov	r3, r6
    }
 8011186:	4618      	mov	r0, r3
 8011188:	370c      	adds	r7, #12
 801118a:	46bd      	mov	sp, r7
 801118c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801118e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801118e:	b480      	push	{r7}
 8011190:	b083      	sub	sp, #12
 8011192:	af00      	add	r7, sp, #0
 8011194:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011196:	687b      	ldr	r3, [r7, #4]
 8011198:	4618      	mov	r0, r3
 801119a:	370c      	adds	r7, #12
 801119c:	46bd      	mov	sp, r7
 801119e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80111a2:	4770      	bx	lr

080111a4 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80111a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80111a6:	b083      	sub	sp, #12
 80111a8:	af00      	add	r7, sp, #0
 80111aa:	6078      	str	r0, [r7, #4]
 80111ac:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80111ae:	6878      	ldr	r0, [r7, #4]
 80111b0:	f000 f81a 	bl	80111e8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80111b4:	4604      	mov	r4, r0
 80111b6:	6838      	ldr	r0, [r7, #0]
 80111b8:	f7f4 fc93 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80111bc:	4603      	mov	r3, r0
 80111be:	461a      	mov	r2, r3
 80111c0:	4621      	mov	r1, r4
 80111c2:	4628      	mov	r0, r5
 80111c4:	f000 f911 	bl	80113ea <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 80111c8:	4633      	mov	r3, r6
    }
 80111ca:	4618      	mov	r0, r3
 80111cc:	370c      	adds	r7, #12
 80111ce:	46bd      	mov	sp, r7
 80111d0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080111d2 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 80111d2:	b480      	push	{r7}
 80111d4:	b083      	sub	sp, #12
 80111d6:	af00      	add	r7, sp, #0
 80111d8:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 80111da:	687b      	ldr	r3, [r7, #4]
 80111dc:	4618      	mov	r0, r3
 80111de:	370c      	adds	r7, #12
 80111e0:	46bd      	mov	sp, r7
 80111e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80111e6:	4770      	bx	lr

080111e8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80111e8:	b480      	push	{r7}
 80111ea:	b083      	sub	sp, #12
 80111ec:	af00      	add	r7, sp, #0
 80111ee:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80111f0:	687b      	ldr	r3, [r7, #4]
 80111f2:	4618      	mov	r0, r3
 80111f4:	370c      	adds	r7, #12
 80111f6:	46bd      	mov	sp, r7
 80111f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80111fc:	4770      	bx	lr

080111fe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80111fe:	b480      	push	{r7}
 8011200:	b083      	sub	sp, #12
 8011202:	af00      	add	r7, sp, #0
 8011204:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 8011206:	687b      	ldr	r3, [r7, #4]
 8011208:	689b      	ldr	r3, [r3, #8]
 801120a:	4618      	mov	r0, r3
 801120c:	370c      	adds	r7, #12
 801120e:	46bd      	mov	sp, r7
 8011210:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011214:	4770      	bx	lr

08011216 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8011216:	b480      	push	{r7}
 8011218:	b083      	sub	sp, #12
 801121a:	af00      	add	r7, sp, #0
 801121c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 801121e:	687b      	ldr	r3, [r7, #4]
 8011220:	68db      	ldr	r3, [r3, #12]
 8011222:	4618      	mov	r0, r3
 8011224:	370c      	adds	r7, #12
 8011226:	46bd      	mov	sp, r7
 8011228:	f85d 7b04 	ldr.w	r7, [sp], #4
 801122c:	4770      	bx	lr

0801122e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801122e:	b480      	push	{r7}
 8011230:	b083      	sub	sp, #12
 8011232:	af00      	add	r7, sp, #0
 8011234:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 8011236:	687b      	ldr	r3, [r7, #4]
 8011238:	689b      	ldr	r3, [r3, #8]
 801123a:	4618      	mov	r0, r3
 801123c:	370c      	adds	r7, #12
 801123e:	46bd      	mov	sp, r7
 8011240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011244:	4770      	bx	lr

08011246 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8011246:	b480      	push	{r7}
 8011248:	b083      	sub	sp, #12
 801124a:	af00      	add	r7, sp, #0
 801124c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 801124e:	687b      	ldr	r3, [r7, #4]
 8011250:	68db      	ldr	r3, [r3, #12]
 8011252:	4618      	mov	r0, r3
 8011254:	370c      	adds	r7, #12
 8011256:	46bd      	mov	sp, r7
 8011258:	f85d 7b04 	ldr.w	r7, [sp], #4
 801125c:	4770      	bx	lr

0801125e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801125e:	b480      	push	{r7}
 8011260:	b083      	sub	sp, #12
 8011262:	af00      	add	r7, sp, #0
 8011264:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 8011266:	687b      	ldr	r3, [r7, #4]
 8011268:	689b      	ldr	r3, [r3, #8]
 801126a:	4618      	mov	r0, r3
 801126c:	370c      	adds	r7, #12
 801126e:	46bd      	mov	sp, r7
 8011270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011274:	4770      	bx	lr

08011276 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8011276:	b480      	push	{r7}
 8011278:	b083      	sub	sp, #12
 801127a:	af00      	add	r7, sp, #0
 801127c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 801127e:	687b      	ldr	r3, [r7, #4]
 8011280:	68db      	ldr	r3, [r3, #12]
 8011282:	4618      	mov	r0, r3
 8011284:	370c      	adds	r7, #12
 8011286:	46bd      	mov	sp, r7
 8011288:	f85d 7b04 	ldr.w	r7, [sp], #4
 801128c:	4770      	bx	lr

0801128e <_ZNSt8__detail9__variant15_Variadic_unionIJfbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 801128e:	b580      	push	{r7, lr}
 8011290:	b082      	sub	sp, #8
 8011292:	af00      	add	r7, sp, #0
 8011294:	6078      	str	r0, [r7, #4]
 8011296:	687b      	ldr	r3, [r7, #4]
 8011298:	4618      	mov	r0, r3
 801129a:	f000 f8bd 	bl	8011418 <_ZNSt8__detail9__variant15_Variadic_unionIJbEEC1Ev>
 801129e:	687b      	ldr	r3, [r7, #4]
 80112a0:	4618      	mov	r0, r3
 80112a2:	3708      	adds	r7, #8
 80112a4:	46bd      	mov	sp, r7
 80112a6:	bd80      	pop	{r7, pc}

080112a8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKS9_EESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80112a8:	b5b0      	push	{r4, r5, r7, lr}
 80112aa:	b084      	sub	sp, #16
 80112ac:	af00      	add	r7, sp, #0
 80112ae:	7338      	strb	r0, [r7, #12]
 80112b0:	60b9      	str	r1, [r7, #8]
 80112b2:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80112b4:	68b8      	ldr	r0, [r7, #8]
 80112b6:	f7ff ff0f 	bl	80110d8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80112ba:	4604      	mov	r4, r0
 80112bc:	6878      	ldr	r0, [r7, #4]
 80112be:	f7f2 fe33 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80112c2:	4603      	mov	r3, r0
 80112c4:	4619      	mov	r1, r3
 80112c6:	4620      	mov	r0, r4
 80112c8:	f000 f8b1 	bl	801142e <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESI_>
 80112cc:	462b      	mov	r3, r5
 80112ce:	4618      	mov	r0, r3
 80112d0:	3710      	adds	r7, #16
 80112d2:	46bd      	mov	sp, r7
 80112d4:	bdb0      	pop	{r4, r5, r7, pc}

080112d6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKiEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80112d6:	b5b0      	push	{r4, r5, r7, lr}
 80112d8:	b084      	sub	sp, #16
 80112da:	af00      	add	r7, sp, #0
 80112dc:	7338      	strb	r0, [r7, #12]
 80112de:	60b9      	str	r1, [r7, #8]
 80112e0:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80112e2:	68b8      	ldr	r0, [r7, #8]
 80112e4:	f7ff fef8 	bl	80110d8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80112e8:	4604      	mov	r4, r0
 80112ea:	6878      	ldr	r0, [r7, #4]
 80112ec:	f7f2 fd74 	bl	8003dd8 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 80112f0:	4603      	mov	r3, r0
 80112f2:	4619      	mov	r1, r3
 80112f4:	4620      	mov	r0, r4
 80112f6:	f000 f8b2 	bl	801145e <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESI_>
 80112fa:	462b      	mov	r3, r5
 80112fc:	4618      	mov	r0, r3
 80112fe:	3710      	adds	r7, #16
 8011300:	46bd      	mov	sp, r7
 8011302:	bdb0      	pop	{r4, r5, r7, pc}

08011304 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKfEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011304:	b5b0      	push	{r4, r5, r7, lr}
 8011306:	b084      	sub	sp, #16
 8011308:	af00      	add	r7, sp, #0
 801130a:	7338      	strb	r0, [r7, #12]
 801130c:	60b9      	str	r1, [r7, #8]
 801130e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011310:	68b8      	ldr	r0, [r7, #8]
 8011312:	f7ff fee1 	bl	80110d8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011316:	4604      	mov	r4, r0
 8011318:	6878      	ldr	r0, [r7, #4]
 801131a:	f7f2 fd91 	bl	8003e40 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 801131e:	4603      	mov	r3, r0
 8011320:	4619      	mov	r1, r3
 8011322:	4620      	mov	r0, r4
 8011324:	f000 f8b3 	bl	801148e <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESI_>
 8011328:	462b      	mov	r3, r5
 801132a:	4618      	mov	r0, r3
 801132c:	3710      	adds	r7, #16
 801132e:	46bd      	mov	sp, r7
 8011330:	bdb0      	pop	{r4, r5, r7, pc}

08011332 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKbEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011332:	b5b0      	push	{r4, r5, r7, lr}
 8011334:	b084      	sub	sp, #16
 8011336:	af00      	add	r7, sp, #0
 8011338:	7338      	strb	r0, [r7, #12]
 801133a:	60b9      	str	r1, [r7, #8]
 801133c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801133e:	68b8      	ldr	r0, [r7, #8]
 8011340:	f7ff feca 	bl	80110d8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011344:	4604      	mov	r4, r0
 8011346:	6878      	ldr	r0, [r7, #4]
 8011348:	f7f2 fdae 	bl	8003ea8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 801134c:	4603      	mov	r3, r0
 801134e:	4619      	mov	r1, r3
 8011350:	4620      	mov	r0, r4
 8011352:	f000 f8b4 	bl	80114be <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESI_>
 8011356:	462b      	mov	r3, r5
 8011358:	4618      	mov	r0, r3
 801135a:	3710      	adds	r7, #16
 801135c:	46bd      	mov	sp, r7
 801135e:	bdb0      	pop	{r4, r5, r7, pc}

08011360 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS9_EESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011360:	b5b0      	push	{r4, r5, r7, lr}
 8011362:	b084      	sub	sp, #16
 8011364:	af00      	add	r7, sp, #0
 8011366:	7338      	strb	r0, [r7, #12]
 8011368:	60b9      	str	r1, [r7, #8]
 801136a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801136c:	68b8      	ldr	r0, [r7, #8]
 801136e:	f7ff ff3b 	bl	80111e8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011372:	4604      	mov	r4, r0
 8011374:	6878      	ldr	r0, [r7, #4]
 8011376:	f7f4 fbe2 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801137a:	4603      	mov	r3, r0
 801137c:	4619      	mov	r1, r3
 801137e:	4620      	mov	r0, r4
 8011380:	f000 f8b5 	bl	80114ee <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESA_>
 8011384:	462b      	mov	r3, r5
 8011386:	4618      	mov	r0, r3
 8011388:	3710      	adds	r7, #16
 801138a:	46bd      	mov	sp, r7
 801138c:	bdb0      	pop	{r4, r5, r7, pc}

0801138e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801138e:	b5b0      	push	{r4, r5, r7, lr}
 8011390:	b084      	sub	sp, #16
 8011392:	af00      	add	r7, sp, #0
 8011394:	7338      	strb	r0, [r7, #12]
 8011396:	60b9      	str	r1, [r7, #8]
 8011398:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801139a:	68b8      	ldr	r0, [r7, #8]
 801139c:	f7ff ff24 	bl	80111e8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80113a0:	4604      	mov	r4, r0
 80113a2:	6878      	ldr	r0, [r7, #4]
 80113a4:	f7f4 fb59 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80113a8:	4603      	mov	r3, r0
 80113aa:	4619      	mov	r1, r3
 80113ac:	4620      	mov	r0, r4
 80113ae:	f000 f8af 	bl	8011510 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESA_>
 80113b2:	462b      	mov	r3, r5
 80113b4:	4618      	mov	r0, r3
 80113b6:	3710      	adds	r7, #16
 80113b8:	46bd      	mov	sp, r7
 80113ba:	bdb0      	pop	{r4, r5, r7, pc}

080113bc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80113bc:	b5b0      	push	{r4, r5, r7, lr}
 80113be:	b084      	sub	sp, #16
 80113c0:	af00      	add	r7, sp, #0
 80113c2:	7338      	strb	r0, [r7, #12]
 80113c4:	60b9      	str	r1, [r7, #8]
 80113c6:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80113c8:	68b8      	ldr	r0, [r7, #8]
 80113ca:	f7ff ff0d 	bl	80111e8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80113ce:	4604      	mov	r4, r0
 80113d0:	6878      	ldr	r0, [r7, #4]
 80113d2:	f7f4 fb64 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80113d6:	4603      	mov	r3, r0
 80113d8:	4619      	mov	r1, r3
 80113da:	4620      	mov	r0, r4
 80113dc:	f000 f8a9 	bl	8011532 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESA_>
 80113e0:	462b      	mov	r3, r5
 80113e2:	4618      	mov	r0, r3
 80113e4:	3710      	adds	r7, #16
 80113e6:	46bd      	mov	sp, r7
 80113e8:	bdb0      	pop	{r4, r5, r7, pc}

080113ea <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80113ea:	b5b0      	push	{r4, r5, r7, lr}
 80113ec:	b084      	sub	sp, #16
 80113ee:	af00      	add	r7, sp, #0
 80113f0:	7338      	strb	r0, [r7, #12]
 80113f2:	60b9      	str	r1, [r7, #8]
 80113f4:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80113f6:	68b8      	ldr	r0, [r7, #8]
 80113f8:	f7ff fef6 	bl	80111e8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80113fc:	4604      	mov	r4, r0
 80113fe:	6878      	ldr	r0, [r7, #4]
 8011400:	f7f4 fb6f 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8011404:	4603      	mov	r3, r0
 8011406:	4619      	mov	r1, r3
 8011408:	4620      	mov	r0, r4
 801140a:	f000 f8a3 	bl	8011554 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESA_>
 801140e:	462b      	mov	r3, r5
 8011410:	4618      	mov	r0, r3
 8011412:	3710      	adds	r7, #16
 8011414:	46bd      	mov	sp, r7
 8011416:	bdb0      	pop	{r4, r5, r7, pc}

08011418 <_ZNSt8__detail9__variant15_Variadic_unionIJbEEC1Ev>:
 8011418:	b480      	push	{r7}
 801141a:	b083      	sub	sp, #12
 801141c:	af00      	add	r7, sp, #0
 801141e:	6078      	str	r0, [r7, #4]
 8011420:	687b      	ldr	r3, [r7, #4]
 8011422:	4618      	mov	r0, r3
 8011424:	370c      	adds	r7, #12
 8011426:	46bd      	mov	sp, r7
 8011428:	f85d 7b04 	ldr.w	r7, [sp], #4
 801142c:	4770      	bx	lr

0801142e <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESI_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801142e:	b5b0      	push	{r4, r5, r7, lr}
 8011430:	b082      	sub	sp, #8
 8011432:	af00      	add	r7, sp, #0
 8011434:	6078      	str	r0, [r7, #4]
 8011436:	6039      	str	r1, [r7, #0]
 8011438:	687b      	ldr	r3, [r7, #4]
 801143a:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801143c:	4618      	mov	r0, r3
 801143e:	f000 f89a 	bl	8011576 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8011442:	4604      	mov	r4, r0
 8011444:	6838      	ldr	r0, [r7, #0]
 8011446:	f7f2 fd6f 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801144a:	4603      	mov	r3, r0
 801144c:	4619      	mov	r1, r3
 801144e:	4620      	mov	r0, r4
 8011450:	f000 f8b3 	bl	80115ba <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKS8_EEvOT_OT0_>
	  return {};
 8011454:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8011456:	4618      	mov	r0, r3
 8011458:	3708      	adds	r7, #8
 801145a:	46bd      	mov	sp, r7
 801145c:	bdb0      	pop	{r4, r5, r7, pc}

0801145e <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESI_>:
 801145e:	b5b0      	push	{r4, r5, r7, lr}
 8011460:	b082      	sub	sp, #8
 8011462:	af00      	add	r7, sp, #0
 8011464:	6078      	str	r0, [r7, #4]
 8011466:	6039      	str	r1, [r7, #0]
 8011468:	687b      	ldr	r3, [r7, #4]
 801146a:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801146c:	4618      	mov	r0, r3
 801146e:	f000 f882 	bl	8011576 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8011472:	4604      	mov	r4, r0
 8011474:	6838      	ldr	r0, [r7, #0]
 8011476:	f7f2 fcaf 	bl	8003dd8 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 801147a:	4603      	mov	r3, r0
 801147c:	4619      	mov	r1, r3
 801147e:	4620      	mov	r0, r4
 8011480:	f000 f8b7 	bl	80115f2 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKiEEvOT_OT0_>
	  return {};
 8011484:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8011486:	4618      	mov	r0, r3
 8011488:	3708      	adds	r7, #8
 801148a:	46bd      	mov	sp, r7
 801148c:	bdb0      	pop	{r4, r5, r7, pc}

0801148e <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESI_>:
 801148e:	b5b0      	push	{r4, r5, r7, lr}
 8011490:	b082      	sub	sp, #8
 8011492:	af00      	add	r7, sp, #0
 8011494:	6078      	str	r0, [r7, #4]
 8011496:	6039      	str	r1, [r7, #0]
 8011498:	687b      	ldr	r3, [r7, #4]
 801149a:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801149c:	4618      	mov	r0, r3
 801149e:	f000 f86a 	bl	8011576 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80114a2:	4604      	mov	r4, r0
 80114a4:	6838      	ldr	r0, [r7, #0]
 80114a6:	f7f2 fccb 	bl	8003e40 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 80114aa:	4603      	mov	r3, r0
 80114ac:	4619      	mov	r1, r3
 80114ae:	4620      	mov	r0, r4
 80114b0:	f000 f8b9 	bl	8011626 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKfEEvOT_OT0_>
	  return {};
 80114b4:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80114b6:	4618      	mov	r0, r3
 80114b8:	3708      	adds	r7, #8
 80114ba:	46bd      	mov	sp, r7
 80114bc:	bdb0      	pop	{r4, r5, r7, pc}

080114be <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESI_>:
 80114be:	b5b0      	push	{r4, r5, r7, lr}
 80114c0:	b082      	sub	sp, #8
 80114c2:	af00      	add	r7, sp, #0
 80114c4:	6078      	str	r0, [r7, #4]
 80114c6:	6039      	str	r1, [r7, #0]
 80114c8:	687b      	ldr	r3, [r7, #4]
 80114ca:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 80114cc:	4618      	mov	r0, r3
 80114ce:	f000 f852 	bl	8011576 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80114d2:	4604      	mov	r4, r0
 80114d4:	6838      	ldr	r0, [r7, #0]
 80114d6:	f7f2 fce7 	bl	8003ea8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 80114da:	4603      	mov	r3, r0
 80114dc:	4619      	mov	r1, r3
 80114de:	4620      	mov	r0, r4
 80114e0:	f000 f8bb 	bl	801165a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKbEEvOT_OT0_>
	  return {};
 80114e4:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80114e6:	4618      	mov	r0, r3
 80114e8:	3708      	adds	r7, #8
 80114ea:	46bd      	mov	sp, r7
 80114ec:	bdb0      	pop	{r4, r5, r7, pc}

080114ee <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESA_>:
	__do_visit([](auto&& __this_mem) mutable
 80114ee:	b590      	push	{r4, r7, lr}
 80114f0:	b083      	sub	sp, #12
 80114f2:	af00      	add	r7, sp, #0
 80114f4:	6078      	str	r0, [r7, #4]
 80114f6:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80114f8:	6838      	ldr	r0, [r7, #0]
 80114fa:	f7f5 fe18 	bl	800712e <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 80114fe:	4603      	mov	r3, r0
 8011500:	4618      	mov	r0, r3
 8011502:	f7f5 fe1f 	bl	8007144 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 8011506:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8011508:	4618      	mov	r0, r3
 801150a:	370c      	adds	r7, #12
 801150c:	46bd      	mov	sp, r7
 801150e:	bd90      	pop	{r4, r7, pc}

08011510 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESA_>:
 8011510:	b590      	push	{r4, r7, lr}
 8011512:	b083      	sub	sp, #12
 8011514:	af00      	add	r7, sp, #0
 8011516:	6078      	str	r0, [r7, #4]
 8011518:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 801151a:	6838      	ldr	r0, [r7, #0]
 801151c:	f7f5 fdc8 	bl	80070b0 <_ZSt11__addressofIiEPT_RS0_>
 8011520:	4603      	mov	r3, r0
 8011522:	4618      	mov	r0, r3
 8011524:	f7f5 fdcf 	bl	80070c6 <_ZSt8_DestroyIiEvPT_>
	    return {};
 8011528:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 801152a:	4618      	mov	r0, r3
 801152c:	370c      	adds	r7, #12
 801152e:	46bd      	mov	sp, r7
 8011530:	bd90      	pop	{r4, r7, pc}

08011532 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESA_>:
 8011532:	b590      	push	{r4, r7, lr}
 8011534:	b083      	sub	sp, #12
 8011536:	af00      	add	r7, sp, #0
 8011538:	6078      	str	r0, [r7, #4]
 801153a:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 801153c:	6838      	ldr	r0, [r7, #0]
 801153e:	f7f5 fdcc 	bl	80070da <_ZSt11__addressofIfEPT_RS0_>
 8011542:	4603      	mov	r3, r0
 8011544:	4618      	mov	r0, r3
 8011546:	f7f5 fdd3 	bl	80070f0 <_ZSt8_DestroyIfEvPT_>
	    return {};
 801154a:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 801154c:	4618      	mov	r0, r3
 801154e:	370c      	adds	r7, #12
 8011550:	46bd      	mov	sp, r7
 8011552:	bd90      	pop	{r4, r7, pc}

08011554 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESA_>:
 8011554:	b590      	push	{r4, r7, lr}
 8011556:	b083      	sub	sp, #12
 8011558:	af00      	add	r7, sp, #0
 801155a:	6078      	str	r0, [r7, #4]
 801155c:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 801155e:	6838      	ldr	r0, [r7, #0]
 8011560:	f7f5 fdd0 	bl	8007104 <_ZSt11__addressofIbEPT_RS0_>
 8011564:	4603      	mov	r3, r0
 8011566:	4618      	mov	r0, r3
 8011568:	f7f5 fdd7 	bl	800711a <_ZSt8_DestroyIbEvPT_>
	    return {};
 801156c:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 801156e:	4618      	mov	r0, r3
 8011570:	370c      	adds	r7, #12
 8011572:	46bd      	mov	sp, r7
 8011574:	bd90      	pop	{r4, r7, pc}

08011576 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011576:	b480      	push	{r7}
 8011578:	b083      	sub	sp, #12
 801157a:	af00      	add	r7, sp, #0
 801157c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801157e:	687b      	ldr	r3, [r7, #4]
 8011580:	4618      	mov	r0, r3
 8011582:	370c      	adds	r7, #12
 8011584:	46bd      	mov	sp, r7
 8011586:	f85d 7b04 	ldr.w	r7, [sp], #4
 801158a:	4770      	bx	lr

0801158c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>:
    addressof(_Tp& __r) noexcept
 801158c:	b580      	push	{r7, lr}
 801158e:	b082      	sub	sp, #8
 8011590:	af00      	add	r7, sp, #0
 8011592:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8011594:	6878      	ldr	r0, [r7, #4]
 8011596:	f000 f805 	bl	80115a4 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 801159a:	4603      	mov	r3, r0
 801159c:	4618      	mov	r0, r3
 801159e:	3708      	adds	r7, #8
 80115a0:	46bd      	mov	sp, r7
 80115a2:	bd80      	pop	{r7, pc}

080115a4 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80115a4:	b480      	push	{r7}
 80115a6:	b083      	sub	sp, #12
 80115a8:	af00      	add	r7, sp, #0
 80115aa:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80115ac:	687b      	ldr	r3, [r7, #4]
 80115ae:	4618      	mov	r0, r3
 80115b0:	370c      	adds	r7, #12
 80115b2:	46bd      	mov	sp, r7
 80115b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115b8:	4770      	bx	lr

080115ba <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKS8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 80115ba:	b590      	push	{r4, r7, lr}
 80115bc:	b085      	sub	sp, #20
 80115be:	af00      	add	r7, sp, #0
 80115c0:	6078      	str	r0, [r7, #4]
 80115c2:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80115c4:	687b      	ldr	r3, [r7, #4]
 80115c6:	4618      	mov	r0, r3
 80115c8:	f7ff ffe0 	bl	801158c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 80115cc:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80115ce:	6838      	ldr	r0, [r7, #0]
 80115d0:	f7f2 fcaa 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80115d4:	4604      	mov	r4, r0
        ::new (__storage)
 80115d6:	68fb      	ldr	r3, [r7, #12]
 80115d8:	4619      	mov	r1, r3
 80115da:	2018      	movs	r0, #24
 80115dc:	f7ef fd3d 	bl	800105a <_ZnwjPv>
 80115e0:	4603      	mov	r3, r0
 80115e2:	4621      	mov	r1, r4
 80115e4:	4618      	mov	r0, r3
 80115e6:	f011 fbc1 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
    }
 80115ea:	bf00      	nop
 80115ec:	3714      	adds	r7, #20
 80115ee:	46bd      	mov	sp, r7
 80115f0:	bd90      	pop	{r4, r7, pc}

080115f2 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 80115f2:	b590      	push	{r4, r7, lr}
 80115f4:	b085      	sub	sp, #20
 80115f6:	af00      	add	r7, sp, #0
 80115f8:	6078      	str	r0, [r7, #4]
 80115fa:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80115fc:	687b      	ldr	r3, [r7, #4]
 80115fe:	4618      	mov	r0, r3
 8011600:	f7ff ffc4 	bl	801158c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 8011604:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8011606:	6838      	ldr	r0, [r7, #0]
 8011608:	f7f2 fbe6 	bl	8003dd8 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 801160c:	4603      	mov	r3, r0
        ::new (__storage)
 801160e:	681c      	ldr	r4, [r3, #0]
 8011610:	68fb      	ldr	r3, [r7, #12]
 8011612:	4619      	mov	r1, r3
 8011614:	2004      	movs	r0, #4
 8011616:	f7ef fd20 	bl	800105a <_ZnwjPv>
 801161a:	4603      	mov	r3, r0
 801161c:	601c      	str	r4, [r3, #0]
    }
 801161e:	bf00      	nop
 8011620:	3714      	adds	r7, #20
 8011622:	46bd      	mov	sp, r7
 8011624:	bd90      	pop	{r4, r7, pc}

08011626 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8011626:	b590      	push	{r4, r7, lr}
 8011628:	b085      	sub	sp, #20
 801162a:	af00      	add	r7, sp, #0
 801162c:	6078      	str	r0, [r7, #4]
 801162e:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8011630:	687b      	ldr	r3, [r7, #4]
 8011632:	4618      	mov	r0, r3
 8011634:	f7ff ffaa 	bl	801158c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 8011638:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801163a:	6838      	ldr	r0, [r7, #0]
 801163c:	f7f2 fc00 	bl	8003e40 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8011640:	4603      	mov	r3, r0
        ::new (__storage)
 8011642:	681c      	ldr	r4, [r3, #0]
 8011644:	68fb      	ldr	r3, [r7, #12]
 8011646:	4619      	mov	r1, r3
 8011648:	2004      	movs	r0, #4
 801164a:	f7ef fd06 	bl	800105a <_ZnwjPv>
 801164e:	4603      	mov	r3, r0
 8011650:	601c      	str	r4, [r3, #0]
    }
 8011652:	bf00      	nop
 8011654:	3714      	adds	r7, #20
 8011656:	46bd      	mov	sp, r7
 8011658:	bd90      	pop	{r4, r7, pc}

0801165a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801165a:	b590      	push	{r4, r7, lr}
 801165c:	b085      	sub	sp, #20
 801165e:	af00      	add	r7, sp, #0
 8011660:	6078      	str	r0, [r7, #4]
 8011662:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8011664:	687b      	ldr	r3, [r7, #4]
 8011666:	4618      	mov	r0, r3
 8011668:	f7ff ff90 	bl	801158c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 801166c:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801166e:	6838      	ldr	r0, [r7, #0]
 8011670:	f7f2 fc1a 	bl	8003ea8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8011674:	4603      	mov	r3, r0
        ::new (__storage)
 8011676:	781c      	ldrb	r4, [r3, #0]
 8011678:	68fb      	ldr	r3, [r7, #12]
 801167a:	4619      	mov	r1, r3
 801167c:	2001      	movs	r0, #1
 801167e:	f7ef fcec 	bl	800105a <_ZnwjPv>
 8011682:	4603      	mov	r3, r0
 8011684:	4622      	mov	r2, r4
 8011686:	701a      	strb	r2, [r3, #0]
    }
 8011688:	bf00      	nop
 801168a:	3714      	adds	r7, #20
 801168c:	46bd      	mov	sp, r7
 801168e:	bd90      	pop	{r4, r7, pc}

08011690 <_Z41__static_initialization_and_destruction_0ii>:
 8011690:	b590      	push	{r4, r7, lr}
 8011692:	b0e7      	sub	sp, #412	; 0x19c
 8011694:	af02      	add	r7, sp, #8
 8011696:	1d3b      	adds	r3, r7, #4
 8011698:	6018      	str	r0, [r3, #0]
 801169a:	463b      	mov	r3, r7
 801169c:	6019      	str	r1, [r3, #0]
 801169e:	1d3b      	adds	r3, r7, #4
 80116a0:	681b      	ldr	r3, [r3, #0]
 80116a2:	2b01      	cmp	r3, #1
 80116a4:	f040 819d 	bne.w	80119e2 <_Z41__static_initialization_and_destruction_0ii+0x352>
 80116a8:	463b      	mov	r3, r7
 80116aa:	681b      	ldr	r3, [r3, #0]
 80116ac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80116b0:	4293      	cmp	r3, r2
 80116b2:	f040 8196 	bne.w	80119e2 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 80116b6:	f107 0314 	add.w	r3, r7, #20
 80116ba:	4618      	mov	r0, r3
 80116bc:	2322      	movs	r3, #34	; 0x22
 80116be:	461a      	mov	r2, r3
 80116c0:	2100      	movs	r1, #0
 80116c2:	f012 fbcf 	bl	8023e64 <memset>
 80116c6:	f107 0314 	add.w	r3, r7, #20
 80116ca:	223a      	movs	r2, #58	; 0x3a
 80116cc:	701a      	strb	r2, [r3, #0]
 80116ce:	f107 0314 	add.w	r3, r7, #20
 80116d2:	2201      	movs	r2, #1
 80116d4:	705a      	strb	r2, [r3, #1]
 80116d6:	f107 0314 	add.w	r3, r7, #20
 80116da:	220a      	movs	r2, #10
 80116dc:	709a      	strb	r2, [r3, #2]
 80116de:	f107 0314 	add.w	r3, r7, #20
 80116e2:	220a      	movs	r2, #10
 80116e4:	70da      	strb	r2, [r3, #3]
 80116e6:	f107 0314 	add.w	r3, r7, #20
 80116ea:	222c      	movs	r2, #44	; 0x2c
 80116ec:	711a      	strb	r2, [r3, #4]
 80116ee:	f107 0314 	add.w	r3, r7, #20
 80116f2:	220c      	movs	r2, #12
 80116f4:	715a      	strb	r2, [r3, #5]
 80116f6:	f107 0314 	add.w	r3, r7, #20
 80116fa:	222e      	movs	r2, #46	; 0x2e
 80116fc:	719a      	strb	r2, [r3, #6]
 80116fe:	f107 0314 	add.w	r3, r7, #20
 8011702:	220b      	movs	r2, #11
 8011704:	71da      	strb	r2, [r3, #7]
 8011706:	f107 0314 	add.w	r3, r7, #20
 801170a:	225b      	movs	r2, #91	; 0x5b
 801170c:	721a      	strb	r2, [r3, #8]
 801170e:	f107 0314 	add.w	r3, r7, #20
 8011712:	220d      	movs	r2, #13
 8011714:	725a      	strb	r2, [r3, #9]
 8011716:	f107 0314 	add.w	r3, r7, #20
 801171a:	225d      	movs	r2, #93	; 0x5d
 801171c:	729a      	strb	r2, [r3, #10]
 801171e:	f107 0314 	add.w	r3, r7, #20
 8011722:	220e      	movs	r2, #14
 8011724:	72da      	strb	r2, [r3, #11]
 8011726:	f107 0314 	add.w	r3, r7, #20
 801172a:	227c      	movs	r2, #124	; 0x7c
 801172c:	731a      	strb	r2, [r3, #12]
 801172e:	f107 0314 	add.w	r3, r7, #20
 8011732:	2215      	movs	r2, #21
 8011734:	735a      	strb	r2, [r3, #13]
 8011736:	f107 0314 	add.w	r3, r7, #20
 801173a:	2226      	movs	r2, #38	; 0x26
 801173c:	739a      	strb	r2, [r3, #14]
 801173e:	f107 0314 	add.w	r3, r7, #20
 8011742:	2216      	movs	r2, #22
 8011744:	73da      	strb	r2, [r3, #15]
 8011746:	f107 0314 	add.w	r3, r7, #20
 801174a:	222b      	movs	r2, #43	; 0x2b
 801174c:	741a      	strb	r2, [r3, #16]
 801174e:	f107 0314 	add.w	r3, r7, #20
 8011752:	221f      	movs	r2, #31
 8011754:	745a      	strb	r2, [r3, #17]
 8011756:	f107 0314 	add.w	r3, r7, #20
 801175a:	222d      	movs	r2, #45	; 0x2d
 801175c:	749a      	strb	r2, [r3, #18]
 801175e:	f107 0314 	add.w	r3, r7, #20
 8011762:	2220      	movs	r2, #32
 8011764:	74da      	strb	r2, [r3, #19]
 8011766:	f107 0314 	add.w	r3, r7, #20
 801176a:	222a      	movs	r2, #42	; 0x2a
 801176c:	751a      	strb	r2, [r3, #20]
 801176e:	f107 0314 	add.w	r3, r7, #20
 8011772:	2221      	movs	r2, #33	; 0x21
 8011774:	755a      	strb	r2, [r3, #21]
 8011776:	f107 0314 	add.w	r3, r7, #20
 801177a:	222f      	movs	r2, #47	; 0x2f
 801177c:	759a      	strb	r2, [r3, #22]
 801177e:	f107 0314 	add.w	r3, r7, #20
 8011782:	2222      	movs	r2, #34	; 0x22
 8011784:	75da      	strb	r2, [r3, #23]
 8011786:	f107 0314 	add.w	r3, r7, #20
 801178a:	225e      	movs	r2, #94	; 0x5e
 801178c:	761a      	strb	r2, [r3, #24]
 801178e:	f107 0314 	add.w	r3, r7, #20
 8011792:	2223      	movs	r2, #35	; 0x23
 8011794:	765a      	strb	r2, [r3, #25]
 8011796:	f107 0314 	add.w	r3, r7, #20
 801179a:	2225      	movs	r2, #37	; 0x25
 801179c:	769a      	strb	r2, [r3, #26]
 801179e:	f107 0314 	add.w	r3, r7, #20
 80117a2:	2224      	movs	r2, #36	; 0x24
 80117a4:	76da      	strb	r2, [r3, #27]
 80117a6:	f107 0314 	add.w	r3, r7, #20
 80117aa:	2228      	movs	r2, #40	; 0x28
 80117ac:	771a      	strb	r2, [r3, #28]
 80117ae:	f107 0314 	add.w	r3, r7, #20
 80117b2:	2226      	movs	r2, #38	; 0x26
 80117b4:	775a      	strb	r2, [r3, #29]
 80117b6:	f107 0314 	add.w	r3, r7, #20
 80117ba:	2229      	movs	r2, #41	; 0x29
 80117bc:	779a      	strb	r2, [r3, #30]
 80117be:	f107 0314 	add.w	r3, r7, #20
 80117c2:	2227      	movs	r2, #39	; 0x27
 80117c4:	77da      	strb	r2, [r3, #31]
 80117c6:	f107 0314 	add.w	r3, r7, #20
 80117ca:	2225      	movs	r2, #37	; 0x25
 80117cc:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80117d0:	f107 030c 	add.w	r3, r7, #12
 80117d4:	f107 0214 	add.w	r2, r7, #20
 80117d8:	601a      	str	r2, [r3, #0]
 80117da:	f107 030c 	add.w	r3, r7, #12
 80117de:	2211      	movs	r2, #17
 80117e0:	605a      	str	r2, [r3, #4]
 80117e2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80117e6:	4618      	mov	r0, r3
 80117e8:	f7f0 f948 	bl	8001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 80117ec:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80117f0:	f107 020c 	add.w	r2, r7, #12
 80117f4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80117f8:	9300      	str	r3, [sp, #0]
 80117fa:	460b      	mov	r3, r1
 80117fc:	ca06      	ldmia	r2, {r1, r2}
 80117fe:	4885      	ldr	r0, [pc, #532]	; (8011a14 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8011800:	f7f0 f954 	bl	8001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8011804:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8011808:	4618      	mov	r0, r3
 801180a:	f7f0 f943 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801180e:	2305      	movs	r3, #5
 8011810:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8011814:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8011818:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801181c:	497e      	ldr	r1, [pc, #504]	; (8011a18 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801181e:	4618      	mov	r0, r3
 8011820:	f7ef fc6a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8011824:	2306      	movs	r3, #6
 8011826:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801182a:	f207 1263 	addw	r2, r7, #355	; 0x163
 801182e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011832:	331c      	adds	r3, #28
 8011834:	4979      	ldr	r1, [pc, #484]	; (8011a1c <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8011836:	4618      	mov	r0, r3
 8011838:	f7ef fc86 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801183c:	2307      	movs	r3, #7
 801183e:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8011842:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8011846:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801184a:	3338      	adds	r3, #56	; 0x38
 801184c:	4974      	ldr	r1, [pc, #464]	; (8011a20 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801184e:	4618      	mov	r0, r3
 8011850:	f7ef fc7a 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8011854:	2308      	movs	r3, #8
 8011856:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801185a:	f207 1265 	addw	r2, r7, #357	; 0x165
 801185e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011862:	3354      	adds	r3, #84	; 0x54
 8011864:	496f      	ldr	r1, [pc, #444]	; (8011a24 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8011866:	4618      	mov	r0, r3
 8011868:	f7ef fc46 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801186c:	2309      	movs	r3, #9
 801186e:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8011872:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8011876:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801187a:	3370      	adds	r3, #112	; 0x70
 801187c:	496a      	ldr	r1, [pc, #424]	; (8011a28 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801187e:	4618      	mov	r0, r3
 8011880:	f7ef fc8a 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8011884:	2310      	movs	r3, #16
 8011886:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801188a:	f207 1267 	addw	r2, r7, #359	; 0x167
 801188e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011892:	338c      	adds	r3, #140	; 0x8c
 8011894:	4965      	ldr	r1, [pc, #404]	; (8011a2c <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8011896:	4618      	mov	r0, r3
 8011898:	f7ef fca6 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801189c:	2311      	movs	r3, #17
 801189e:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 80118a2:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 80118a6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80118aa:	33a8      	adds	r3, #168	; 0xa8
 80118ac:	4960      	ldr	r1, [pc, #384]	; (8011a30 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 80118ae:	4618      	mov	r0, r3
 80118b0:	f7ef fc72 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 80118b4:	2312      	movs	r3, #18
 80118b6:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 80118ba:	f207 1269 	addw	r2, r7, #361	; 0x169
 80118be:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80118c2:	33c4      	adds	r3, #196	; 0xc4
 80118c4:	495b      	ldr	r1, [pc, #364]	; (8011a34 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 80118c6:	4618      	mov	r0, r3
 80118c8:	f7ef fc16 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 80118cc:	2313      	movs	r3, #19
 80118ce:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 80118d2:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 80118d6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80118da:	33e0      	adds	r3, #224	; 0xe0
 80118dc:	4956      	ldr	r1, [pc, #344]	; (8011a38 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 80118de:	4618      	mov	r0, r3
 80118e0:	f7ef fc32 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 80118e4:	2314      	movs	r3, #20
 80118e6:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 80118ea:	f207 126b 	addw	r2, r7, #363	; 0x16b
 80118ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80118f2:	33fc      	adds	r3, #252	; 0xfc
 80118f4:	4951      	ldr	r1, [pc, #324]	; (8011a3c <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80118f6:	4618      	mov	r0, r3
 80118f8:	f7ef fc9e 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80118fc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8011900:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8011904:	601a      	str	r2, [r3, #0]
 8011906:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801190a:	220a      	movs	r2, #10
 801190c:	605a      	str	r2, [r3, #4]
 801190e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8011912:	4618      	mov	r0, r3
 8011914:	f7f0 f957 	bl	8001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8011918:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801191c:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8011920:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8011924:	9300      	str	r3, [sp, #0]
 8011926:	460b      	mov	r3, r1
 8011928:	ca06      	ldmia	r2, {r1, r2}
 801192a:	4845      	ldr	r0, [pc, #276]	; (8011a40 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801192c:	f7f0 f963 	bl	8001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8011930:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8011934:	4618      	mov	r0, r3
 8011936:	f7f0 f952 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801193a:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801193e:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8011942:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011946:	429c      	cmp	r4, r3
 8011948:	d004      	beq.n	8011954 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801194a:	3c1c      	subs	r4, #28
 801194c:	4620      	mov	r0, r4
 801194e:	f7ef fbc6 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8011952:	e7f6      	b.n	8011942 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8011954:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8011958:	2200      	movs	r2, #0
 801195a:	601a      	str	r2, [r3, #0]
 801195c:	605a      	str	r2, [r3, #4]
 801195e:	609a      	str	r2, [r3, #8]
 8011960:	233c      	movs	r3, #60	; 0x3c
 8011962:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8011966:	231b      	movs	r3, #27
 8011968:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801196c:	231c      	movs	r3, #28
 801196e:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8011972:	233e      	movs	r3, #62	; 0x3e
 8011974:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8011978:	2319      	movs	r3, #25
 801197a:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801197e:	231a      	movs	r3, #26
 8011980:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8011984:	233d      	movs	r3, #61	; 0x3d
 8011986:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801198a:	2318      	movs	r3, #24
 801198c:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8011990:	231d      	movs	r3, #29
 8011992:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8011996:	2321      	movs	r3, #33	; 0x21
 8011998:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801199c:	2317      	movs	r3, #23
 801199e:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 80119a2:	231e      	movs	r3, #30
 80119a4:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 80119a8:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80119ac:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 80119b0:	2304      	movs	r3, #4
 80119b2:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 80119b6:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80119ba:	4618      	mov	r0, r3
 80119bc:	f7f0 f94b 	bl	8001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 80119c0:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 80119c4:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80119c8:	9300      	str	r3, [sp, #0]
 80119ca:	4613      	mov	r3, r2
 80119cc:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 80119d0:	ca06      	ldmia	r2, {r1, r2}
 80119d2:	481c      	ldr	r0, [pc, #112]	; (8011a44 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80119d4:	f7f0 f957 	bl	8001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80119d8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80119dc:	4618      	mov	r0, r3
 80119de:	f7f0 f946 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 80119e2:	1d3b      	adds	r3, r7, #4
 80119e4:	681b      	ldr	r3, [r3, #0]
 80119e6:	2b00      	cmp	r3, #0
 80119e8:	d10e      	bne.n	8011a08 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80119ea:	463b      	mov	r3, r7
 80119ec:	681b      	ldr	r3, [r3, #0]
 80119ee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80119f2:	4293      	cmp	r3, r2
 80119f4:	d108      	bne.n	8011a08 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80119f6:	4813      	ldr	r0, [pc, #76]	; (8011a44 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80119f8:	f7f7 fdd7 	bl	80095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80119fc:	4810      	ldr	r0, [pc, #64]	; (8011a40 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80119fe:	f7f7 fde1 	bl	80095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8011a02:	4804      	ldr	r0, [pc, #16]	; (8011a14 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8011a04:	f7f7 fdeb 	bl	80095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8011a08:	bf00      	nop
 8011a0a:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8011a0e:	46bd      	mov	sp, r7
 8011a10:	bd90      	pop	{r4, r7, pc}
 8011a12:	bf00      	nop
 8011a14:	20000350 	.word	0x20000350
 8011a18:	08027480 	.word	0x08027480
 8011a1c:	08027488 	.word	0x08027488
 8011a20:	08027490 	.word	0x08027490
 8011a24:	08027498 	.word	0x08027498
 8011a28:	080274a0 	.word	0x080274a0
 8011a2c:	080274a8 	.word	0x080274a8
 8011a30:	080274ac 	.word	0x080274ac
 8011a34:	080274b4 	.word	0x080274b4
 8011a38:	080274bc 	.word	0x080274bc
 8011a3c:	080274c4 	.word	0x080274c4
 8011a40:	20000368 	.word	0x20000368
 8011a44:	20000380 	.word	0x20000380

08011a48 <_GLOBAL__sub_I__ZN5LexerC2Ev>:
 8011a48:	b580      	push	{r7, lr}
 8011a4a:	af00      	add	r7, sp, #0
 8011a4c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011a50:	2001      	movs	r0, #1
 8011a52:	f7ff fe1d 	bl	8011690 <_Z41__static_initialization_and_destruction_0ii>
 8011a56:	bd80      	pop	{r7, pc}

08011a58 <_GLOBAL__sub_D__ZN5LexerC2Ev>:
 8011a58:	b580      	push	{r7, lr}
 8011a5a:	af00      	add	r7, sp, #0
 8011a5c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011a60:	2000      	movs	r0, #0
 8011a62:	f7ff fe15 	bl	8011690 <_Z41__static_initialization_and_destruction_0ii>
 8011a66:	bd80      	pop	{r7, pc}

08011a68 <_ZNSt7__cxx119to_stringEi>:
  // NB: (v)snprintf vs sprintf.

  // DR 1261.
  inline string
  to_string(int __val)
  { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(int),
 8011a68:	b580      	push	{r7, lr}
 8011a6a:	b084      	sub	sp, #16
 8011a6c:	af02      	add	r7, sp, #8
 8011a6e:	6078      	str	r0, [r7, #4]
 8011a70:	6039      	str	r1, [r7, #0]
					   "%d", __val); }
 8011a72:	6878      	ldr	r0, [r7, #4]
 8011a74:	683b      	ldr	r3, [r7, #0]
 8011a76:	9300      	str	r3, [sp, #0]
 8011a78:	4b04      	ldr	r3, [pc, #16]	; (8011a8c <_ZNSt7__cxx119to_stringEi+0x24>)
 8011a7a:	2210      	movs	r2, #16
 8011a7c:	4904      	ldr	r1, [pc, #16]	; (8011a90 <_ZNSt7__cxx119to_stringEi+0x28>)
 8011a7e:	f000 fa01 	bl	8011e84 <_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z>
 8011a82:	6878      	ldr	r0, [r7, #4]
 8011a84:	3708      	adds	r7, #8
 8011a86:	46bd      	mov	sp, r7
 8011a88:	bd80      	pop	{r7, pc}
 8011a8a:	bf00      	nop
 8011a8c:	080274c8 	.word	0x080274c8
 8011a90:	08024f69 	.word	0x08024f69

08011a94 <_ZNSt7__cxx119to_stringEj>:

  inline string
  to_string(unsigned __val)
  { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
 8011a94:	b580      	push	{r7, lr}
 8011a96:	b084      	sub	sp, #16
 8011a98:	af02      	add	r7, sp, #8
 8011a9a:	6078      	str	r0, [r7, #4]
 8011a9c:	6039      	str	r1, [r7, #0]
					   4 * sizeof(unsigned),
					   "%u", __val); }
 8011a9e:	6878      	ldr	r0, [r7, #4]
 8011aa0:	683b      	ldr	r3, [r7, #0]
 8011aa2:	9300      	str	r3, [sp, #0]
 8011aa4:	4b04      	ldr	r3, [pc, #16]	; (8011ab8 <_ZNSt7__cxx119to_stringEj+0x24>)
 8011aa6:	2210      	movs	r2, #16
 8011aa8:	4904      	ldr	r1, [pc, #16]	; (8011abc <_ZNSt7__cxx119to_stringEj+0x28>)
 8011aaa:	f000 f9eb 	bl	8011e84 <_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z>
 8011aae:	6878      	ldr	r0, [r7, #4]
 8011ab0:	3708      	adds	r7, #8
 8011ab2:	46bd      	mov	sp, r7
 8011ab4:	bd80      	pop	{r7, pc}
 8011ab6:	bf00      	nop
 8011ab8:	080274cc 	.word	0x080274cc
 8011abc:	08024f69 	.word	0x08024f69

08011ac0 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE>:
{
	// todo dober miejsce


	void assert_arguments(int expected, arglist arguments)
	{
 8011ac0:	b580      	push	{r7, lr}
 8011ac2:	b0a6      	sub	sp, #152	; 0x98
 8011ac4:	af00      	add	r7, sp, #0
 8011ac6:	6078      	str	r0, [r7, #4]
 8011ac8:	6039      	str	r1, [r7, #0]
		if(arguments.size() != (unsigned int)expected)
 8011aca:	6838      	ldr	r0, [r7, #0]
 8011acc:	f7f0 f99c 	bl	8001e08 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8011ad0:	4602      	mov	r2, r0
 8011ad2:	687b      	ldr	r3, [r7, #4]
 8011ad4:	429a      	cmp	r2, r3
 8011ad6:	bf14      	ite	ne
 8011ad8:	2301      	movne	r3, #1
 8011ada:	2300      	moveq	r3, #0
 8011adc:	b2db      	uxtb	r3, r3
 8011ade:	2b00      	cmp	r3, #0
 8011ae0:	d053      	beq.n	8011b8a <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xca>
		{
			Transmitter::report_error(std::string("expected " + std::to_string(expected) + " arguments, found " + std::to_string(arguments.size()) + "\n"));
 8011ae2:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8011ae6:	6879      	ldr	r1, [r7, #4]
 8011ae8:	4618      	mov	r0, r3
 8011aea:	f7ff ffbd 	bl	8011a68 <_ZNSt7__cxx119to_stringEi>
 8011aee:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8011af2:	f107 0268 	add.w	r2, r7, #104	; 0x68
 8011af6:	4927      	ldr	r1, [pc, #156]	; (8011b94 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xd4>)
 8011af8:	4618      	mov	r0, r3
 8011afa:	f000 f9fb 	bl	8011ef4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
 8011afe:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8011b02:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8011b06:	4a24      	ldr	r2, [pc, #144]	; (8011b98 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xd8>)
 8011b08:	4618      	mov	r0, r3
 8011b0a:	f7fc fad7 	bl	800e0bc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8011b0e:	6838      	ldr	r0, [r7, #0]
 8011b10:	f7f0 f97a 	bl	8001e08 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8011b14:	4602      	mov	r2, r0
 8011b16:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8011b1a:	4611      	mov	r1, r2
 8011b1c:	4618      	mov	r0, r3
 8011b1e:	f7ff ffb9 	bl	8011a94 <_ZNSt7__cxx119to_stringEj>
 8011b22:	f107 0320 	add.w	r3, r7, #32
 8011b26:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8011b2a:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8011b2e:	4618      	mov	r0, r3
 8011b30:	f000 f9f8 	bl	8011f24 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>
 8011b34:	f107 0308 	add.w	r3, r7, #8
 8011b38:	f107 0120 	add.w	r1, r7, #32
 8011b3c:	4a17      	ldr	r2, [pc, #92]	; (8011b9c <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xdc>)
 8011b3e:	4618      	mov	r0, r3
 8011b40:	f7fc fabc 	bl	800e0bc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8011b44:	f107 0308 	add.w	r3, r7, #8
 8011b48:	4618      	mov	r0, r3
 8011b4a:	f006 fd81 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011b4e:	f107 0308 	add.w	r3, r7, #8
 8011b52:	4618      	mov	r0, r3
 8011b54:	f010 ff45 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011b58:	f107 0320 	add.w	r3, r7, #32
 8011b5c:	4618      	mov	r0, r3
 8011b5e:	f010 ff40 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011b62:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8011b66:	4618      	mov	r0, r3
 8011b68:	f010 ff3b 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011b6c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8011b70:	4618      	mov	r0, r3
 8011b72:	f010 ff36 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011b76:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8011b7a:	4618      	mov	r0, r3
 8011b7c:	f010 ff31 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011b80:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8011b84:	4618      	mov	r0, r3
 8011b86:	f010 ff2c 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		}
	}
 8011b8a:	bf00      	nop
 8011b8c:	3798      	adds	r7, #152	; 0x98
 8011b8e:	46bd      	mov	sp, r7
 8011b90:	bd80      	pop	{r7, pc}
 8011b92:	bf00      	nop
 8011b94:	080274d0 	.word	0x080274d0
 8011b98:	080274dc 	.word	0x080274dc
 8011b9c:	080274f0 	.word	0x080274f0

08011ba0 <_ZN12_GLOBAL__N_16resizeER6SymbolSt6vectorIP10ExpressionSaIS4_EE>:

void resize(Symbol& var, arglist arguments)
{
 8011ba0:	b590      	push	{r4, r7, lr}
 8011ba2:	b08f      	sub	sp, #60	; 0x3c
 8011ba4:	af00      	add	r7, sp, #0
 8011ba6:	6078      	str	r0, [r7, #4]
 8011ba8:	6039      	str	r1, [r7, #0]
	assert_arguments(1, arguments);
 8011baa:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011bae:	6839      	ldr	r1, [r7, #0]
 8011bb0:	4618      	mov	r0, r3
 8011bb2:	f7fc fa06 	bl	800dfc2 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 8011bb6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011bba:	4619      	mov	r1, r3
 8011bbc:	2001      	movs	r0, #1
 8011bbe:	f7ff ff7f 	bl	8011ac0 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE>
 8011bc2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011bc6:	4618      	mov	r0, r3
 8011bc8:	f7fc fa38 	bl	800e03c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
	Symbol size_symbol = EVALUATE(arguments[0]);
 8011bcc:	f7fa f928 	bl	800be20 <_ZN21Expression_calculator12get_instanceEv>
 8011bd0:	4604      	mov	r4, r0
 8011bd2:	2100      	movs	r1, #0
 8011bd4:	6838      	ldr	r0, [r7, #0]
 8011bd6:	f7f0 f927 	bl	8001e28 <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>
 8011bda:	4603      	mov	r3, r0
 8011bdc:	681a      	ldr	r2, [r3, #0]
 8011bde:	f107 0308 	add.w	r3, r7, #8
 8011be2:	4621      	mov	r1, r4
 8011be4:	4618      	mov	r0, r3
 8011be6:	f7fa f9af 	bl	800bf48 <_ZN21Expression_calculator8evaluateEP10Expression>
	size_symbol.assert_type(SYMBOL_INT);
 8011bea:	f107 0308 	add.w	r3, r7, #8
 8011bee:	2100      	movs	r1, #0
 8011bf0:	4618      	mov	r0, r3
 8011bf2:	f005 febd 	bl	8017970 <_ZN6Symbol11assert_typeE11symbol_type>
	int size = std::get<int>(size_symbol.value);
 8011bf6:	f107 0308 	add.w	r3, r7, #8
 8011bfa:	3304      	adds	r3, #4
 8011bfc:	4618      	mov	r0, r3
 8011bfe:	f7ef fe7b 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8011c02:	4603      	mov	r3, r0
 8011c04:	681b      	ldr	r3, [r3, #0]
 8011c06:	637b      	str	r3, [r7, #52]	; 0x34
	var.resize(size);
 8011c08:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8011c0a:	6878      	ldr	r0, [r7, #4]
 8011c0c:	f005 fede 	bl	80179cc <_ZN6Symbol6resizeEi>
	Symbol size_symbol = EVALUATE(arguments[0]);
 8011c10:	f107 0308 	add.w	r3, r7, #8
 8011c14:	4618      	mov	r0, r3
 8011c16:	f7ef fc5f 	bl	80014d8 <_ZN6SymbolD1Ev>
}
 8011c1a:	bf00      	nop
 8011c1c:	373c      	adds	r7, #60	; 0x3c
 8011c1e:	46bd      	mov	sp, r7
 8011c20:	bd90      	pop	{r4, r7, pc}

08011c22 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EED1Ev>:
	struct _Rb_tree_impl
 8011c22:	b580      	push	{r7, lr}
 8011c24:	b082      	sub	sp, #8
 8011c26:	af00      	add	r7, sp, #0
 8011c28:	6078      	str	r0, [r7, #4]
 8011c2a:	6878      	ldr	r0, [r7, #4]
 8011c2c:	f000 f9d0 	bl	8011fd0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEED1Ev>
 8011c30:	687b      	ldr	r3, [r7, #4]
 8011c32:	4618      	mov	r0, r3
 8011c34:	3708      	adds	r7, #8
 8011c36:	46bd      	mov	sp, r7
 8011c38:	bd80      	pop	{r7, pc}

08011c3a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EEC1Ev>:
      _Rb_tree() = default;
 8011c3a:	b580      	push	{r7, lr}
 8011c3c:	b082      	sub	sp, #8
 8011c3e:	af00      	add	r7, sp, #0
 8011c40:	6078      	str	r0, [r7, #4]
 8011c42:	687b      	ldr	r3, [r7, #4]
 8011c44:	4618      	mov	r0, r3
 8011c46:	f000 f9ae 	bl	8011fa6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EEC1Ev>
 8011c4a:	687b      	ldr	r3, [r7, #4]
 8011c4c:	4618      	mov	r0, r3
 8011c4e:	3708      	adds	r7, #8
 8011c50:	46bd      	mov	sp, r7
 8011c52:	bd80      	pop	{r7, pc}

08011c54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEEC1Ev>:
      map() = default;
 8011c54:	b580      	push	{r7, lr}
 8011c56:	b082      	sub	sp, #8
 8011c58:	af00      	add	r7, sp, #0
 8011c5a:	6078      	str	r0, [r7, #4]
 8011c5c:	687b      	ldr	r3, [r7, #4]
 8011c5e:	4618      	mov	r0, r3
 8011c60:	f7ff ffeb 	bl	8011c3a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EEC1Ev>
 8011c64:	687b      	ldr	r3, [r7, #4]
 8011c66:	4618      	mov	r0, r3
 8011c68:	3708      	adds	r7, #8
 8011c6a:	46bd      	mov	sp, r7
 8011c6c:	bd80      	pop	{r7, pc}

08011c6e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEED1Ev>:
      ~map() = default;
 8011c6e:	b580      	push	{r7, lr}
 8011c70:	b082      	sub	sp, #8
 8011c72:	af00      	add	r7, sp, #0
 8011c74:	6078      	str	r0, [r7, #4]
 8011c76:	687b      	ldr	r3, [r7, #4]
 8011c78:	4618      	mov	r0, r3
 8011c7a:	f000 f9b5 	bl	8011fe8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EED1Ev>
 8011c7e:	687b      	ldr	r3, [r7, #4]
 8011c80:	4618      	mov	r0, r3
 8011c82:	3708      	adds	r7, #8
 8011c84:	46bd      	mov	sp, r7
 8011c86:	bd80      	pop	{r7, pc}

08011c88 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>:
 8011c88:	b580      	push	{r7, lr}
 8011c8a:	b082      	sub	sp, #8
 8011c8c:	af00      	add	r7, sp, #0
 8011c8e:	6078      	str	r0, [r7, #4]
 8011c90:	687b      	ldr	r3, [r7, #4]
 8011c92:	4618      	mov	r0, r3
 8011c94:	f010 fea5 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011c98:	687b      	ldr	r3, [r7, #4]
 8011c9a:	4618      	mov	r0, r3
 8011c9c:	3708      	adds	r7, #8
 8011c9e:	46bd      	mov	sp, r7
 8011ca0:	bd80      	pop	{r7, pc}
	...

08011ca4 <_ZN14Method_handlerC1Ev>:

}

Method_handler::Method_handler()
 8011ca4:	b590      	push	{r4, r7, lr}
 8011ca6:	b08d      	sub	sp, #52	; 0x34
 8011ca8:	af00      	add	r7, sp, #0
 8011caa:	6078      	str	r0, [r7, #4]
 8011cac:	687b      	ldr	r3, [r7, #4]
 8011cae:	4618      	mov	r0, r3
 8011cb0:	f7ff ffd0 	bl	8011c54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEEC1Ev>
{
	ADD_METHOD(resize);
 8011cb4:	687c      	ldr	r4, [r7, #4]
 8011cb6:	4b0e      	ldr	r3, [pc, #56]	; (8011cf0 <_ZN14Method_handlerC1Ev+0x4c>)
 8011cb8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8011cba:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8011cbe:	f107 0310 	add.w	r3, r7, #16
 8011cc2:	490c      	ldr	r1, [pc, #48]	; (8011cf4 <_ZN14Method_handlerC1Ev+0x50>)
 8011cc4:	4618      	mov	r0, r3
 8011cc6:	f000 f9a4 	bl	8012012 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA7_KcSF_Lb1EEEOT_OT0_>
 8011cca:	f107 0308 	add.w	r3, r7, #8
 8011cce:	f107 0210 	add.w	r2, r7, #16
 8011cd2:	4621      	mov	r1, r4
 8011cd4:	4618      	mov	r0, r3
 8011cd6:	f000 f9c4 	bl	8012062 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>
 8011cda:	f107 0310 	add.w	r3, r7, #16
 8011cde:	4618      	mov	r0, r3
 8011ce0:	f7ff ffd2 	bl	8011c88 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>
}
 8011ce4:	687b      	ldr	r3, [r7, #4]
 8011ce6:	4618      	mov	r0, r3
 8011ce8:	3734      	adds	r7, #52	; 0x34
 8011cea:	46bd      	mov	sp, r7
 8011cec:	bd90      	pop	{r4, r7, pc}
 8011cee:	bf00      	nop
 8011cf0:	08011ba1 	.word	0x08011ba1
 8011cf4:	08027508 	.word	0x08027508

08011cf8 <_ZN14Method_handlerD1Ev>:

typedef void (*method_pointer)(Symbol&, arglist);

#define ADD_METHOD(x) methods.insert({#x, &x});

class Method_handler
 8011cf8:	b580      	push	{r7, lr}
 8011cfa:	b082      	sub	sp, #8
 8011cfc:	af00      	add	r7, sp, #0
 8011cfe:	6078      	str	r0, [r7, #4]
 8011d00:	687b      	ldr	r3, [r7, #4]
 8011d02:	4618      	mov	r0, r3
 8011d04:	f7ff ffb3 	bl	8011c6e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEED1Ev>
 8011d08:	687b      	ldr	r3, [r7, #4]
 8011d0a:	4618      	mov	r0, r3
 8011d0c:	3708      	adds	r7, #8
 8011d0e:	46bd      	mov	sp, r7
 8011d10:	bd80      	pop	{r7, pc}
	...

08011d14 <__tcf_0>:

void Method_handler::run_method(Method_call *mcall)
{
	static Method_handler instance;
 8011d14:	b580      	push	{r7, lr}
 8011d16:	af00      	add	r7, sp, #0
 8011d18:	4801      	ldr	r0, [pc, #4]	; (8011d20 <__tcf_0+0xc>)
 8011d1a:	f7ff ffed 	bl	8011cf8 <_ZN14Method_handlerD1Ev>
 8011d1e:	bd80      	pop	{r7, pc}
 8011d20:	20000408 	.word	0x20000408

08011d24 <_ZN14Method_handler10run_methodEP11Method_call>:
{
 8011d24:	b590      	push	{r4, r7, lr}
 8011d26:	b09f      	sub	sp, #124	; 0x7c
 8011d28:	af00      	add	r7, sp, #0
 8011d2a:	6078      	str	r0, [r7, #4]
	static Method_handler instance;
 8011d2c:	4b50      	ldr	r3, [pc, #320]	; (8011e70 <_ZN14Method_handler10run_methodEP11Method_call+0x14c>)
 8011d2e:	781b      	ldrb	r3, [r3, #0]
 8011d30:	f3bf 8f5b 	dmb	ish
 8011d34:	b2db      	uxtb	r3, r3
 8011d36:	f003 0301 	and.w	r3, r3, #1
 8011d3a:	2b00      	cmp	r3, #0
 8011d3c:	bf0c      	ite	eq
 8011d3e:	2301      	moveq	r3, #1
 8011d40:	2300      	movne	r3, #0
 8011d42:	b2db      	uxtb	r3, r3
 8011d44:	2b00      	cmp	r3, #0
 8011d46:	d013      	beq.n	8011d70 <_ZN14Method_handler10run_methodEP11Method_call+0x4c>
 8011d48:	4849      	ldr	r0, [pc, #292]	; (8011e70 <_ZN14Method_handler10run_methodEP11Method_call+0x14c>)
 8011d4a:	f010 fb99 	bl	8022480 <__cxa_guard_acquire>
 8011d4e:	4603      	mov	r3, r0
 8011d50:	2b00      	cmp	r3, #0
 8011d52:	bf14      	ite	ne
 8011d54:	2301      	movne	r3, #1
 8011d56:	2300      	moveq	r3, #0
 8011d58:	b2db      	uxtb	r3, r3
 8011d5a:	2b00      	cmp	r3, #0
 8011d5c:	d008      	beq.n	8011d70 <_ZN14Method_handler10run_methodEP11Method_call+0x4c>
 8011d5e:	4845      	ldr	r0, [pc, #276]	; (8011e74 <_ZN14Method_handler10run_methodEP11Method_call+0x150>)
 8011d60:	f7ff ffa0 	bl	8011ca4 <_ZN14Method_handlerC1Ev>
 8011d64:	4842      	ldr	r0, [pc, #264]	; (8011e70 <_ZN14Method_handler10run_methodEP11Method_call+0x14c>)
 8011d66:	f010 fb97 	bl	8022498 <__cxa_guard_release>
 8011d6a:	4843      	ldr	r0, [pc, #268]	; (8011e78 <_ZN14Method_handler10run_methodEP11Method_call+0x154>)
 8011d6c:	f011 ffd1 	bl	8023d12 <atexit>

	Position_counter::get_instance().line = mcall->call->line;
 8011d70:	687b      	ldr	r3, [r7, #4]
 8011d72:	685b      	ldr	r3, [r3, #4]
 8011d74:	681c      	ldr	r4, [r3, #0]
 8011d76:	f004 fb21 	bl	80163bc <_ZN16Position_counter12get_instanceEv>
 8011d7a:	4603      	mov	r3, r0
 8011d7c:	601c      	str	r4, [r3, #0]
	Position_counter::get_instance().position = mcall->call->position;
 8011d7e:	687b      	ldr	r3, [r7, #4]
 8011d80:	685b      	ldr	r3, [r3, #4]
 8011d82:	685c      	ldr	r4, [r3, #4]
 8011d84:	f004 fb1a 	bl	80163bc <_ZN16Position_counter12get_instanceEv>
 8011d88:	4603      	mov	r3, r0
 8011d8a:	605c      	str	r4, [r3, #4]

	auto search = instance.methods.find(mcall->call->id);
 8011d8c:	687b      	ldr	r3, [r7, #4]
 8011d8e:	685b      	ldr	r3, [r3, #4]
 8011d90:	3308      	adds	r3, #8
 8011d92:	4619      	mov	r1, r3
 8011d94:	4837      	ldr	r0, [pc, #220]	; (8011e74 <_ZN14Method_handler10run_methodEP11Method_call+0x150>)
 8011d96:	f000 f978 	bl	801208a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE4findERSI_>
 8011d9a:	4603      	mov	r3, r0
 8011d9c:	60fb      	str	r3, [r7, #12]
	if (search == instance.methods.end())
 8011d9e:	4835      	ldr	r0, [pc, #212]	; (8011e74 <_ZN14Method_handler10run_methodEP11Method_call+0x150>)
 8011da0:	f000 f982 	bl	80120a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE3endEv>
 8011da4:	4603      	mov	r3, r0
 8011da6:	613b      	str	r3, [r7, #16]
 8011da8:	f107 0210 	add.w	r2, r7, #16
 8011dac:	f107 030c 	add.w	r3, r7, #12
 8011db0:	4611      	mov	r1, r2
 8011db2:	4618      	mov	r0, r3
 8011db4:	f000 f985 	bl	80120c2 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>
 8011db8:	4603      	mov	r3, r0
 8011dba:	2b00      	cmp	r3, #0
 8011dbc:	d020      	beq.n	8011e00 <_ZN14Method_handler10run_methodEP11Method_call+0xdc>
	{
		Transmitter::report_error(std::string("method " + mcall->call->id + " not found"));
 8011dbe:	687b      	ldr	r3, [r7, #4]
 8011dc0:	685b      	ldr	r3, [r3, #4]
 8011dc2:	f103 0208 	add.w	r2, r3, #8
 8011dc6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8011dca:	492c      	ldr	r1, [pc, #176]	; (8011e7c <_ZN14Method_handler10run_methodEP11Method_call+0x158>)
 8011dcc:	4618      	mov	r0, r3
 8011dce:	f7fc f950 	bl	800e072 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 8011dd2:	f107 0314 	add.w	r3, r7, #20
 8011dd6:	f107 012c 	add.w	r1, r7, #44	; 0x2c
 8011dda:	4a29      	ldr	r2, [pc, #164]	; (8011e80 <_ZN14Method_handler10run_methodEP11Method_call+0x15c>)
 8011ddc:	4618      	mov	r0, r3
 8011dde:	f7fc f96d 	bl	800e0bc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8011de2:	f107 0314 	add.w	r3, r7, #20
 8011de6:	4618      	mov	r0, r3
 8011de8:	f006 fc32 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011dec:	f107 0314 	add.w	r3, r7, #20
 8011df0:	4618      	mov	r0, r3
 8011df2:	f010 fdf6 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011df6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8011dfa:	4618      	mov	r0, r3
 8011dfc:	f010 fdf1 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	method_pointer method = search->second;
 8011e00:	f107 030c 	add.w	r3, r7, #12
 8011e04:	4618      	mov	r0, r3
 8011e06:	f000 f970 	bl	80120ea <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEptEv>
 8011e0a:	4603      	mov	r3, r0
 8011e0c:	699b      	ldr	r3, [r3, #24]
 8011e0e:	677b      	str	r3, [r7, #116]	; 0x74

	Symbol& var = Variable_handler::get_instance().get_symbol(*mcall->vector);
 8011e10:	f006 fd4c 	bl	80188ac <_ZN16Variable_handler12get_instanceEv>
 8011e14:	4604      	mov	r4, r0
 8011e16:	687b      	ldr	r3, [r7, #4]
 8011e18:	681a      	ldr	r2, [r3, #0]
 8011e1a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8011e1e:	4611      	mov	r1, r2
 8011e20:	4618      	mov	r0, r3
 8011e22:	f7ef fca5 	bl	8001770 <_ZN8VariableC1ERKS_>
 8011e26:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8011e2a:	4619      	mov	r1, r3
 8011e2c:	4620      	mov	r0, r4
 8011e2e:	f006 fe12 	bl	8018a56 <_ZN16Variable_handler10get_symbolE8Variable>
 8011e32:	6738      	str	r0, [r7, #112]	; 0x70
 8011e34:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8011e38:	4618      	mov	r0, r3
 8011e3a:	f004 fb47 	bl	80164cc <_ZN8VariableD1Ev>

	method(var, mcall->call->arguments);
 8011e3e:	6f7c      	ldr	r4, [r7, #116]	; 0x74
 8011e40:	687b      	ldr	r3, [r7, #4]
 8011e42:	685b      	ldr	r3, [r3, #4]
 8011e44:	f103 0220 	add.w	r2, r3, #32
 8011e48:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8011e4c:	4611      	mov	r1, r2
 8011e4e:	4618      	mov	r0, r3
 8011e50:	f7fc f8b7 	bl	800dfc2 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 8011e54:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8011e58:	4619      	mov	r1, r3
 8011e5a:	6f38      	ldr	r0, [r7, #112]	; 0x70
 8011e5c:	47a0      	blx	r4
 8011e5e:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8011e62:	4618      	mov	r0, r3
 8011e64:	f7fc f8ea 	bl	800e03c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
}
 8011e68:	bf00      	nop
 8011e6a:	377c      	adds	r7, #124	; 0x7c
 8011e6c:	46bd      	mov	sp, r7
 8011e6e:	bd90      	pop	{r4, r7, pc}
 8011e70:	20000420 	.word	0x20000420
 8011e74:	20000408 	.word	0x20000408
 8011e78:	08011d15 	.word	0x08011d15
 8011e7c:	08027510 	.word	0x08027510
 8011e80:	08027518 	.word	0x08027518

08011e84 <_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z>:

  // Helper for the to_string / to_wstring functions.
  template<typename _String, typename _CharT = typename _String::value_type>
    _String
    __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
 8011e84:	b408      	push	{r3}
 8011e86:	b590      	push	{r4, r7, lr}
 8011e88:	b088      	sub	sp, #32
 8011e8a:	af00      	add	r7, sp, #0
 8011e8c:	60f8      	str	r0, [r7, #12]
 8011e8e:	60b9      	str	r1, [r7, #8]
 8011e90:	607a      	str	r2, [r7, #4]
				 __builtin_va_list), std::size_t __n,
		 const _CharT* __fmt, ...)
    {
      // XXX Eventually the result should be constructed in-place in
      // the __cxx11 string, likely with the help of internal hooks.
      _CharT* __s = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
 8011e92:	687b      	ldr	r3, [r7, #4]
 8011e94:	3307      	adds	r3, #7
 8011e96:	08db      	lsrs	r3, r3, #3
 8011e98:	00db      	lsls	r3, r3, #3
 8011e9a:	ebad 0d03 	sub.w	sp, sp, r3
 8011e9e:	466b      	mov	r3, sp
 8011ea0:	3307      	adds	r3, #7
 8011ea2:	08db      	lsrs	r3, r3, #3
 8011ea4:	00db      	lsls	r3, r3, #3
 8011ea6:	61fb      	str	r3, [r7, #28]
							  * __n));

      __builtin_va_list __args;
      __builtin_va_start(__args, __fmt);
 8011ea8:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8011eac:	613b      	str	r3, [r7, #16]

      const int __len = __convf(__s, __n, __fmt, __args);
 8011eae:	68bc      	ldr	r4, [r7, #8]
 8011eb0:	693b      	ldr	r3, [r7, #16]
 8011eb2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8011eb4:	6879      	ldr	r1, [r7, #4]
 8011eb6:	69f8      	ldr	r0, [r7, #28]
 8011eb8:	47a0      	blx	r4
 8011eba:	61b8      	str	r0, [r7, #24]

      __builtin_va_end(__args);

      return _String(__s, __s + __len);
 8011ebc:	69bb      	ldr	r3, [r7, #24]
 8011ebe:	69fa      	ldr	r2, [r7, #28]
 8011ec0:	18d4      	adds	r4, r2, r3
 8011ec2:	f107 0314 	add.w	r3, r7, #20
 8011ec6:	4618      	mov	r0, r3
 8011ec8:	f010 fafa 	bl	80224c0 <_ZNSaIcEC1Ev>
 8011ecc:	f107 0314 	add.w	r3, r7, #20
 8011ed0:	4622      	mov	r2, r4
 8011ed2:	69f9      	ldr	r1, [r7, #28]
 8011ed4:	68f8      	ldr	r0, [r7, #12]
 8011ed6:	f000 f916 	bl	8012106 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_>
 8011eda:	f107 0314 	add.w	r3, r7, #20
 8011ede:	4618      	mov	r0, r3
 8011ee0:	f010 faef 	bl	80224c2 <_ZNSaIcED1Ev>
 8011ee4:	bf00      	nop
    }
 8011ee6:	68f8      	ldr	r0, [r7, #12]
 8011ee8:	3720      	adds	r7, #32
 8011eea:	46bd      	mov	sp, r7
 8011eec:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
 8011ef0:	b001      	add	sp, #4
 8011ef2:	4770      	bx	lr

08011ef4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>:
    operator+(const _CharT* __lhs,
 8011ef4:	b580      	push	{r7, lr}
 8011ef6:	b084      	sub	sp, #16
 8011ef8:	af00      	add	r7, sp, #0
 8011efa:	60f8      	str	r0, [r7, #12]
 8011efc:	60b9      	str	r1, [r7, #8]
 8011efe:	607a      	str	r2, [r7, #4]
    { return std::move(__rhs.insert(0, __lhs)); }
 8011f00:	68ba      	ldr	r2, [r7, #8]
 8011f02:	2100      	movs	r1, #0
 8011f04:	6878      	ldr	r0, [r7, #4]
 8011f06:	f010 fea9 	bl	8022c5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc>
 8011f0a:	4603      	mov	r3, r0
 8011f0c:	4618      	mov	r0, r3
 8011f0e:	f7f6 f901 	bl	8008114 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8011f12:	4603      	mov	r3, r0
 8011f14:	4619      	mov	r1, r3
 8011f16:	68f8      	ldr	r0, [r7, #12]
 8011f18:	f010 fd49 	bl	80229ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 8011f1c:	68f8      	ldr	r0, [r7, #12]
 8011f1e:	3710      	adds	r7, #16
 8011f20:	46bd      	mov	sp, r7
 8011f22:	bd80      	pop	{r7, pc}

08011f24 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 8011f24:	b590      	push	{r4, r7, lr}
 8011f26:	b087      	sub	sp, #28
 8011f28:	af00      	add	r7, sp, #0
 8011f2a:	60f8      	str	r0, [r7, #12]
 8011f2c:	60b9      	str	r1, [r7, #8]
 8011f2e:	607a      	str	r2, [r7, #4]
      const auto __size = __lhs.size() + __rhs.size();
 8011f30:	68b8      	ldr	r0, [r7, #8]
 8011f32:	f010 fd8a 	bl	8022a4a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 8011f36:	4604      	mov	r4, r0
 8011f38:	6878      	ldr	r0, [r7, #4]
 8011f3a:	f010 fd86 	bl	8022a4a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 8011f3e:	4603      	mov	r3, r0
 8011f40:	4423      	add	r3, r4
 8011f42:	617b      	str	r3, [r7, #20]
      const bool __cond = (__size > __lhs.capacity()
 8011f44:	68b8      	ldr	r0, [r7, #8]
 8011f46:	f010 fd84 	bl	8022a52 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
 8011f4a:	4602      	mov	r2, r0
			   && __size <= __rhs.capacity());
 8011f4c:	697b      	ldr	r3, [r7, #20]
 8011f4e:	4293      	cmp	r3, r2
 8011f50:	d908      	bls.n	8011f64 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x40>
 8011f52:	6878      	ldr	r0, [r7, #4]
 8011f54:	f010 fd7d 	bl	8022a52 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
 8011f58:	4602      	mov	r2, r0
 8011f5a:	697b      	ldr	r3, [r7, #20]
 8011f5c:	4293      	cmp	r3, r2
 8011f5e:	d801      	bhi.n	8011f64 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x40>
 8011f60:	2301      	movs	r3, #1
 8011f62:	e000      	b.n	8011f66 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x42>
 8011f64:	2300      	movs	r3, #0
      const bool __cond = (__size > __lhs.capacity()
 8011f66:	74fb      	strb	r3, [r7, #19]
	            : std::move(__lhs.append(__rhs));
 8011f68:	7cfb      	ldrb	r3, [r7, #19]
 8011f6a:	2b00      	cmp	r3, #0
 8011f6c:	d00a      	beq.n	8011f84 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x60>
      return __cond ? std::move(__rhs.insert(0, __lhs))
 8011f6e:	68ba      	ldr	r2, [r7, #8]
 8011f70:	2100      	movs	r1, #0
 8011f72:	6878      	ldr	r0, [r7, #4]
 8011f74:	f010 fe68 	bl	8022c48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_>
 8011f78:	4603      	mov	r3, r0
 8011f7a:	4618      	mov	r0, r3
 8011f7c:	f7f6 f8ca 	bl	8008114 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8011f80:	4603      	mov	r3, r0
 8011f82:	e008      	b.n	8011f96 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x72>
	            : std::move(__lhs.append(__rhs));
 8011f84:	6879      	ldr	r1, [r7, #4]
 8011f86:	68b8      	ldr	r0, [r7, #8]
 8011f88:	f010 fe9a 	bl	8022cc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 8011f8c:	4603      	mov	r3, r0
 8011f8e:	4618      	mov	r0, r3
 8011f90:	f7f6 f8c0 	bl	8008114 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8011f94:	4603      	mov	r3, r0
 8011f96:	4619      	mov	r1, r3
 8011f98:	68f8      	ldr	r0, [r7, #12]
 8011f9a:	f010 fd08 	bl	80229ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 8011f9e:	68f8      	ldr	r0, [r7, #12]
 8011fa0:	371c      	adds	r7, #28
 8011fa2:	46bd      	mov	sp, r7
 8011fa4:	bd90      	pop	{r4, r7, pc}

08011fa6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 8011fa6:	b580      	push	{r7, lr}
 8011fa8:	b082      	sub	sp, #8
 8011faa:	af00      	add	r7, sp, #0
 8011fac:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 8011fae:	6878      	ldr	r0, [r7, #4]
 8011fb0:	f000 f8c4 	bl	801213c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEC1Ev>
 8011fb4:	687b      	ldr	r3, [r7, #4]
 8011fb6:	4618      	mov	r0, r3
 8011fb8:	f000 f8cc 	bl	8012154 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 8011fbc:	687b      	ldr	r3, [r7, #4]
 8011fbe:	3304      	adds	r3, #4
 8011fc0:	4618      	mov	r0, r3
 8011fc2:	f7ef f85c 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8011fc6:	687b      	ldr	r3, [r7, #4]
 8011fc8:	4618      	mov	r0, r3
 8011fca:	3708      	adds	r7, #8
 8011fcc:	46bd      	mov	sp, r7
 8011fce:	bd80      	pop	{r7, pc}

08011fd0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8011fd0:	b580      	push	{r7, lr}
 8011fd2:	b082      	sub	sp, #8
 8011fd4:	af00      	add	r7, sp, #0
 8011fd6:	6078      	str	r0, [r7, #4]
 8011fd8:	6878      	ldr	r0, [r7, #4]
 8011fda:	f000 f8c6 	bl	801216a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEED1Ev>
 8011fde:	687b      	ldr	r3, [r7, #4]
 8011fe0:	4618      	mov	r0, r3
 8011fe2:	3708      	adds	r7, #8
 8011fe4:	46bd      	mov	sp, r7
 8011fe6:	bd80      	pop	{r7, pc}

08011fe8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8011fe8:	b580      	push	{r7, lr}
 8011fea:	b082      	sub	sp, #8
 8011fec:	af00      	add	r7, sp, #0
 8011fee:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 8011ff0:	6878      	ldr	r0, [r7, #4]
 8011ff2:	f000 f8e4 	bl	80121be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 8011ff6:	4603      	mov	r3, r0
 8011ff8:	4619      	mov	r1, r3
 8011ffa:	6878      	ldr	r0, [r7, #4]
 8011ffc:	f000 f8c0 	bl	8012180 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>
 8012000:	687b      	ldr	r3, [r7, #4]
 8012002:	4618      	mov	r0, r3
 8012004:	f7ff fe0d 	bl	8011c22 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EED1Ev>
 8012008:	687b      	ldr	r3, [r7, #4]
 801200a:	4618      	mov	r0, r3
 801200c:	3708      	adds	r7, #8
 801200e:	46bd      	mov	sp, r7
 8012010:	bd80      	pop	{r7, pc}

08012012 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA7_KcSF_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8012012:	b5b0      	push	{r4, r5, r7, lr}
 8012014:	b086      	sub	sp, #24
 8012016:	af00      	add	r7, sp, #0
 8012018:	60f8      	str	r0, [r7, #12]
 801201a:	60b9      	str	r1, [r7, #8]
 801201c:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801201e:	68fc      	ldr	r4, [r7, #12]
 8012020:	68b8      	ldr	r0, [r7, #8]
 8012022:	f7ef fdaf 	bl	8001b84 <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 8012026:	4605      	mov	r5, r0
 8012028:	f107 0314 	add.w	r3, r7, #20
 801202c:	4618      	mov	r0, r3
 801202e:	f010 fa47 	bl	80224c0 <_ZNSaIcEC1Ev>
 8012032:	f107 0314 	add.w	r3, r7, #20
 8012036:	461a      	mov	r2, r3
 8012038:	4629      	mov	r1, r5
 801203a:	4620      	mov	r0, r4
 801203c:	f7ef fd71 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8012040:	f107 0314 	add.w	r3, r7, #20
 8012044:	4618      	mov	r0, r3
 8012046:	f010 fa3c 	bl	80224c2 <_ZNSaIcED1Ev>
 801204a:	6878      	ldr	r0, [r7, #4]
 801204c:	f000 f8c3 	bl	80121d6 <_ZSt7forwardIPFvR6SymbolSt6vectorIP10ExpressionSaIS4_EEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8012050:	4603      	mov	r3, r0
 8012052:	681a      	ldr	r2, [r3, #0]
 8012054:	68fb      	ldr	r3, [r7, #12]
 8012056:	619a      	str	r2, [r3, #24]
 8012058:	68fb      	ldr	r3, [r7, #12]
 801205a:	4618      	mov	r0, r3
 801205c:	3718      	adds	r7, #24
 801205e:	46bd      	mov	sp, r7
 8012060:	bdb0      	pop	{r4, r5, r7, pc}

08012062 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>:
      insert(value_type&& __x)
 8012062:	b590      	push	{r4, r7, lr}
 8012064:	b085      	sub	sp, #20
 8012066:	af00      	add	r7, sp, #0
 8012068:	60f8      	str	r0, [r7, #12]
 801206a:	60b9      	str	r1, [r7, #8]
 801206c:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 801206e:	68bc      	ldr	r4, [r7, #8]
 8012070:	6878      	ldr	r0, [r7, #4]
 8012072:	f000 f8bb 	bl	80121ec <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEONSt16remove_referenceIT_E4typeEOSK_>
 8012076:	4602      	mov	r2, r0
 8012078:	68fb      	ldr	r3, [r7, #12]
 801207a:	4621      	mov	r1, r4
 801207c:	4618      	mov	r0, r3
 801207e:	f000 f8c0 	bl	8012202 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_>
 8012082:	68f8      	ldr	r0, [r7, #12]
 8012084:	3714      	adds	r7, #20
 8012086:	46bd      	mov	sp, r7
 8012088:	bd90      	pop	{r4, r7, pc}

0801208a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE4findERSI_>:
      find(const key_type& __x)
 801208a:	b580      	push	{r7, lr}
 801208c:	b082      	sub	sp, #8
 801208e:	af00      	add	r7, sp, #0
 8012090:	6078      	str	r0, [r7, #4]
 8012092:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 8012094:	687b      	ldr	r3, [r7, #4]
 8012096:	6839      	ldr	r1, [r7, #0]
 8012098:	4618      	mov	r0, r3
 801209a:	f000 f901 	bl	80122a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_>
 801209e:	4603      	mov	r3, r0
 80120a0:	4618      	mov	r0, r3
 80120a2:	3708      	adds	r7, #8
 80120a4:	46bd      	mov	sp, r7
 80120a6:	bd80      	pop	{r7, pc}

080120a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 80120a8:	b580      	push	{r7, lr}
 80120aa:	b082      	sub	sp, #8
 80120ac:	af00      	add	r7, sp, #0
 80120ae:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 80120b0:	687b      	ldr	r3, [r7, #4]
 80120b2:	4618      	mov	r0, r3
 80120b4:	f000 f930 	bl	8012318 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 80120b8:	4603      	mov	r3, r0
 80120ba:	4618      	mov	r0, r3
 80120bc:	3708      	adds	r7, #8
 80120be:	46bd      	mov	sp, r7
 80120c0:	bd80      	pop	{r7, pc}

080120c2 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 80120c2:	b480      	push	{r7}
 80120c4:	b083      	sub	sp, #12
 80120c6:	af00      	add	r7, sp, #0
 80120c8:	6078      	str	r0, [r7, #4]
 80120ca:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 80120cc:	687b      	ldr	r3, [r7, #4]
 80120ce:	681a      	ldr	r2, [r3, #0]
 80120d0:	683b      	ldr	r3, [r7, #0]
 80120d2:	681b      	ldr	r3, [r3, #0]
 80120d4:	429a      	cmp	r2, r3
 80120d6:	bf0c      	ite	eq
 80120d8:	2301      	moveq	r3, #1
 80120da:	2300      	movne	r3, #0
 80120dc:	b2db      	uxtb	r3, r3
 80120de:	4618      	mov	r0, r3
 80120e0:	370c      	adds	r7, #12
 80120e2:	46bd      	mov	sp, r7
 80120e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80120e8:	4770      	bx	lr

080120ea <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 80120ea:	b580      	push	{r7, lr}
 80120ec:	b082      	sub	sp, #8
 80120ee:	af00      	add	r7, sp, #0
 80120f0:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 80120f2:	687b      	ldr	r3, [r7, #4]
 80120f4:	681b      	ldr	r3, [r3, #0]
 80120f6:	4618      	mov	r0, r3
 80120f8:	f000 f91f 	bl	801233a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 80120fc:	4603      	mov	r3, r0
 80120fe:	4618      	mov	r0, r3
 8012100:	3708      	adds	r7, #8
 8012102:	46bd      	mov	sp, r7
 8012104:	bd80      	pop	{r7, pc}

08012106 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_>:
        basic_string(_InputIterator __beg, _InputIterator __end,
 8012106:	b590      	push	{r4, r7, lr}
 8012108:	b085      	sub	sp, #20
 801210a:	af00      	add	r7, sp, #0
 801210c:	60f8      	str	r0, [r7, #12]
 801210e:	60b9      	str	r1, [r7, #8]
 8012110:	607a      	str	r2, [r7, #4]
 8012112:	603b      	str	r3, [r7, #0]
	: _M_dataplus(_M_local_data(), __a)
 8012114:	68fc      	ldr	r4, [r7, #12]
 8012116:	68f8      	ldr	r0, [r7, #12]
 8012118:	f010 fb52 	bl	80227c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
 801211c:	4603      	mov	r3, r0
 801211e:	683a      	ldr	r2, [r7, #0]
 8012120:	4619      	mov	r1, r3
 8012122:	4620      	mov	r0, r4
 8012124:	f010 fe20 	bl	8022d68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
	{ _M_construct(__beg, __end); }
 8012128:	687a      	ldr	r2, [r7, #4]
 801212a:	68b9      	ldr	r1, [r7, #8]
 801212c:	68f8      	ldr	r0, [r7, #12]
 801212e:	f000 f912 	bl	8012356 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_>
 8012132:	68fb      	ldr	r3, [r7, #12]
 8012134:	4618      	mov	r0, r3
 8012136:	3714      	adds	r7, #20
 8012138:	46bd      	mov	sp, r7
 801213a:	bd90      	pop	{r4, r7, pc}

0801213c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 801213c:	b580      	push	{r7, lr}
 801213e:	b082      	sub	sp, #8
 8012140:	af00      	add	r7, sp, #0
 8012142:	6078      	str	r0, [r7, #4]
 8012144:	6878      	ldr	r0, [r7, #4]
 8012146:	f000 f915 	bl	8012374 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEEC1Ev>
 801214a:	687b      	ldr	r3, [r7, #4]
 801214c:	4618      	mov	r0, r3
 801214e:	3708      	adds	r7, #8
 8012150:	46bd      	mov	sp, r7
 8012152:	bd80      	pop	{r7, pc}

08012154 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
 8012154:	b480      	push	{r7}
 8012156:	b083      	sub	sp, #12
 8012158:	af00      	add	r7, sp, #0
 801215a:	6078      	str	r0, [r7, #4]
      { }
 801215c:	687b      	ldr	r3, [r7, #4]
 801215e:	4618      	mov	r0, r3
 8012160:	370c      	adds	r7, #12
 8012162:	46bd      	mov	sp, r7
 8012164:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012168:	4770      	bx	lr

0801216a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801216a:	b480      	push	{r7}
 801216c:	b083      	sub	sp, #12
 801216e:	af00      	add	r7, sp, #0
 8012170:	6078      	str	r0, [r7, #4]
 8012172:	687b      	ldr	r3, [r7, #4]
 8012174:	4618      	mov	r0, r3
 8012176:	370c      	adds	r7, #12
 8012178:	46bd      	mov	sp, r7
 801217a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801217e:	4770      	bx	lr

08012180 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012180:	b580      	push	{r7, lr}
 8012182:	b084      	sub	sp, #16
 8012184:	af00      	add	r7, sp, #0
 8012186:	6078      	str	r0, [r7, #4]
 8012188:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 801218a:	683b      	ldr	r3, [r7, #0]
 801218c:	2b00      	cmp	r3, #0
 801218e:	d012      	beq.n	80121b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E+0x36>
	  _M_erase(_S_right(__x));
 8012190:	6838      	ldr	r0, [r7, #0]
 8012192:	f000 f8fa 	bl	801238a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 8012196:	4603      	mov	r3, r0
 8012198:	4619      	mov	r1, r3
 801219a:	6878      	ldr	r0, [r7, #4]
 801219c:	f7ff fff0 	bl	8012180 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>
	  _Link_type __y = _S_left(__x);
 80121a0:	6838      	ldr	r0, [r7, #0]
 80121a2:	f000 f8fe 	bl	80123a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 80121a6:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 80121a8:	6839      	ldr	r1, [r7, #0]
 80121aa:	6878      	ldr	r0, [r7, #4]
 80121ac:	f000 f905 	bl	80123ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISH_E>
	  __x = __y;
 80121b0:	68fb      	ldr	r3, [r7, #12]
 80121b2:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80121b4:	e7e9      	b.n	801218a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E+0xa>
    }
 80121b6:	bf00      	nop
 80121b8:	3710      	adds	r7, #16
 80121ba:	46bd      	mov	sp, r7
 80121bc:	bd80      	pop	{r7, pc}

080121be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 80121be:	b480      	push	{r7}
 80121c0:	b083      	sub	sp, #12
 80121c2:	af00      	add	r7, sp, #0
 80121c4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 80121c6:	687b      	ldr	r3, [r7, #4]
 80121c8:	689b      	ldr	r3, [r3, #8]
 80121ca:	4618      	mov	r0, r3
 80121cc:	370c      	adds	r7, #12
 80121ce:	46bd      	mov	sp, r7
 80121d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80121d4:	4770      	bx	lr

080121d6 <_ZSt7forwardIPFvR6SymbolSt6vectorIP10ExpressionSaIS4_EEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80121d6:	b480      	push	{r7}
 80121d8:	b083      	sub	sp, #12
 80121da:	af00      	add	r7, sp, #0
 80121dc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80121de:	687b      	ldr	r3, [r7, #4]
 80121e0:	4618      	mov	r0, r3
 80121e2:	370c      	adds	r7, #12
 80121e4:	46bd      	mov	sp, r7
 80121e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80121ea:	4770      	bx	lr

080121ec <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEONSt16remove_referenceIT_E4typeEOSK_>:
    move(_Tp&& __t) noexcept
 80121ec:	b480      	push	{r7}
 80121ee:	b083      	sub	sp, #12
 80121f0:	af00      	add	r7, sp, #0
 80121f2:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80121f4:	687b      	ldr	r3, [r7, #4]
 80121f6:	4618      	mov	r0, r3
 80121f8:	370c      	adds	r7, #12
 80121fa:	46bd      	mov	sp, r7
 80121fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012200:	4770      	bx	lr

08012202 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012202:	b5b0      	push	{r4, r5, r7, lr}
 8012204:	b08e      	sub	sp, #56	; 0x38
 8012206:	af02      	add	r7, sp, #8
 8012208:	60f8      	str	r0, [r7, #12]
 801220a:	60b9      	str	r1, [r7, #8]
 801220c:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 801220e:	f107 031c 	add.w	r3, r7, #28
 8012212:	6879      	ldr	r1, [r7, #4]
 8012214:	4618      	mov	r0, r3
 8012216:	f000 f966 	bl	80124e6 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERSH_>
 801221a:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 801221c:	f107 0314 	add.w	r3, r7, #20
 8012220:	68b9      	ldr	r1, [r7, #8]
 8012222:	4618      	mov	r0, r3
 8012224:	f000 f8da 	bl	80123dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 8012228:	69bb      	ldr	r3, [r7, #24]
 801222a:	2b00      	cmp	r3, #0
 801222c:	d022      	beq.n	8012274 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 801222e:	f107 0310 	add.w	r3, r7, #16
 8012232:	68b9      	ldr	r1, [r7, #8]
 8012234:	4618      	mov	r0, r3
 8012236:	f000 f962 	bl	80124fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeC1ERSN_>
	  return _Res(_M_insert_(__res.first, __res.second,
 801223a:	697c      	ldr	r4, [r7, #20]
 801223c:	69bd      	ldr	r5, [r7, #24]
 801223e:	6878      	ldr	r0, [r7, #4]
 8012240:	f000 f96c 	bl	801251c <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012244:	4602      	mov	r2, r0
 8012246:	f107 0310 	add.w	r3, r7, #16
 801224a:	9300      	str	r3, [sp, #0]
 801224c:	4613      	mov	r3, r2
 801224e:	462a      	mov	r2, r5
 8012250:	4621      	mov	r1, r4
 8012252:	68b8      	ldr	r0, [r7, #8]
 8012254:	f000 f96d 	bl	8012532 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_>
 8012258:	4603      	mov	r3, r0
 801225a:	623b      	str	r3, [r7, #32]
		      true);
 801225c:	2301      	movs	r3, #1
 801225e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8012262:	f107 0227 	add.w	r2, r7, #39	; 0x27
 8012266:	f107 0320 	add.w	r3, r7, #32
 801226a:	4619      	mov	r1, r3
 801226c:	68f8      	ldr	r0, [r7, #12]
 801226e:	f000 f9a9 	bl	80125c4 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>
 8012272:	e011      	b.n	8012298 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 8012274:	697a      	ldr	r2, [r7, #20]
 8012276:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801227a:	4611      	mov	r1, r2
 801227c:	4618      	mov	r0, r3
 801227e:	f000 f9ba 	bl	80125f6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 8012282:	2300      	movs	r3, #0
 8012284:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8012288:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 801228c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012290:	4619      	mov	r1, r3
 8012292:	68f8      	ldr	r0, [r7, #12]
 8012294:	f000 f996 	bl	80125c4 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>
    }
 8012298:	68f8      	ldr	r0, [r7, #12]
 801229a:	3730      	adds	r7, #48	; 0x30
 801229c:	46bd      	mov	sp, r7
 801229e:	bdb0      	pop	{r4, r5, r7, pc}

080122a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80122a0:	b590      	push	{r4, r7, lr}
 80122a2:	b085      	sub	sp, #20
 80122a4:	af00      	add	r7, sp, #0
 80122a6:	6078      	str	r0, [r7, #4]
 80122a8:	6039      	str	r1, [r7, #0]
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 80122aa:	6878      	ldr	r0, [r7, #4]
 80122ac:	f7ff ff87 	bl	80121be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 80122b0:	4604      	mov	r4, r0
 80122b2:	6878      	ldr	r0, [r7, #4]
 80122b4:	f000 f9ae 	bl	8012614 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 80122b8:	4602      	mov	r2, r0
 80122ba:	683b      	ldr	r3, [r7, #0]
 80122bc:	4621      	mov	r1, r4
 80122be:	6878      	ldr	r0, [r7, #4]
 80122c0:	f000 f9b4 	bl	801262c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_>
 80122c4:	4603      	mov	r3, r0
 80122c6:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 80122c8:	6878      	ldr	r0, [r7, #4]
 80122ca:	f000 f825 	bl	8012318 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 80122ce:	4603      	mov	r3, r0
 80122d0:	60fb      	str	r3, [r7, #12]
 80122d2:	f107 020c 	add.w	r2, r7, #12
 80122d6:	f107 0308 	add.w	r3, r7, #8
 80122da:	4611      	mov	r1, r2
 80122dc:	4618      	mov	r0, r3
 80122de:	f7ff fef0 	bl	80120c2 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>
 80122e2:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 80122e4:	2b00      	cmp	r3, #0
 80122e6:	d10d      	bne.n	8012304 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 80122e8:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 80122ea:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 80122ec:	4618      	mov	r0, r3
 80122ee:	f000 f9ce 	bl	801268e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80122f2:	4603      	mov	r3, r0
 80122f4:	461a      	mov	r2, r3
 80122f6:	6839      	ldr	r1, [r7, #0]
 80122f8:	4620      	mov	r0, r4
 80122fa:	f7f3 f99d 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80122fe:	4603      	mov	r3, r0
 8012300:	2b00      	cmp	r3, #0
 8012302:	d004      	beq.n	801230e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8012304:	6878      	ldr	r0, [r7, #4]
 8012306:	f000 f807 	bl	8012318 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 801230a:	4603      	mov	r3, r0
 801230c:	e000      	b.n	8012310 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x70>
 801230e:	68bb      	ldr	r3, [r7, #8]
    }
 8012310:	4618      	mov	r0, r3
 8012312:	3714      	adds	r7, #20
 8012314:	46bd      	mov	sp, r7
 8012316:	bd90      	pop	{r4, r7, pc}

08012318 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8012318:	b580      	push	{r7, lr}
 801231a:	b084      	sub	sp, #16
 801231c:	af00      	add	r7, sp, #0
 801231e:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8012320:	687b      	ldr	r3, [r7, #4]
 8012322:	1d1a      	adds	r2, r3, #4
 8012324:	f107 030c 	add.w	r3, r7, #12
 8012328:	4611      	mov	r1, r2
 801232a:	4618      	mov	r0, r3
 801232c:	f000 f963 	bl	80125f6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 8012330:	68fb      	ldr	r3, [r7, #12]
 8012332:	4618      	mov	r0, r3
 8012334:	3710      	adds	r7, #16
 8012336:	46bd      	mov	sp, r7
 8012338:	bd80      	pop	{r7, pc}

0801233a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>:
      _M_valptr()
 801233a:	b580      	push	{r7, lr}
 801233c:	b082      	sub	sp, #8
 801233e:	af00      	add	r7, sp, #0
 8012340:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8012342:	687b      	ldr	r3, [r7, #4]
 8012344:	3310      	adds	r3, #16
 8012346:	4618      	mov	r0, r3
 8012348:	f000 f9ad 	bl	80126a6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>
 801234c:	4603      	mov	r3, r0
 801234e:	4618      	mov	r0, r3
 8012350:	3708      	adds	r7, #8
 8012352:	46bd      	mov	sp, r7
 8012354:	bd80      	pop	{r7, pc}

08012356 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_>:
        _M_construct(_InIterator __beg, _InIterator __end)
 8012356:	b580      	push	{r7, lr}
 8012358:	b084      	sub	sp, #16
 801235a:	af00      	add	r7, sp, #0
 801235c:	60f8      	str	r0, [r7, #12]
 801235e:	60b9      	str	r1, [r7, #8]
 8012360:	607a      	str	r2, [r7, #4]
	  _M_construct_aux(__beg, __end, _Integral());
 8012362:	687a      	ldr	r2, [r7, #4]
 8012364:	68b9      	ldr	r1, [r7, #8]
 8012366:	68f8      	ldr	r0, [r7, #12]
 8012368:	f000 f9a9 	bl	80126be <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type>
        }
 801236c:	bf00      	nop
 801236e:	3710      	adds	r7, #16
 8012370:	46bd      	mov	sp, r7
 8012372:	bd80      	pop	{r7, pc}

08012374 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8012374:	b480      	push	{r7}
 8012376:	b083      	sub	sp, #12
 8012378:	af00      	add	r7, sp, #0
 801237a:	6078      	str	r0, [r7, #4]
 801237c:	687b      	ldr	r3, [r7, #4]
 801237e:	4618      	mov	r0, r3
 8012380:	370c      	adds	r7, #12
 8012382:	46bd      	mov	sp, r7
 8012384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012388:	4770      	bx	lr

0801238a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801238a:	b480      	push	{r7}
 801238c:	b083      	sub	sp, #12
 801238e:	af00      	add	r7, sp, #0
 8012390:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8012392:	687b      	ldr	r3, [r7, #4]
 8012394:	68db      	ldr	r3, [r3, #12]
 8012396:	4618      	mov	r0, r3
 8012398:	370c      	adds	r7, #12
 801239a:	46bd      	mov	sp, r7
 801239c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123a0:	4770      	bx	lr

080123a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80123a2:	b480      	push	{r7}
 80123a4:	b083      	sub	sp, #12
 80123a6:	af00      	add	r7, sp, #0
 80123a8:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 80123aa:	687b      	ldr	r3, [r7, #4]
 80123ac:	689b      	ldr	r3, [r3, #8]
 80123ae:	4618      	mov	r0, r3
 80123b0:	370c      	adds	r7, #12
 80123b2:	46bd      	mov	sp, r7
 80123b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123b8:	4770      	bx	lr

080123ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80123ba:	b580      	push	{r7, lr}
 80123bc:	b082      	sub	sp, #8
 80123be:	af00      	add	r7, sp, #0
 80123c0:	6078      	str	r0, [r7, #4]
 80123c2:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 80123c4:	6839      	ldr	r1, [r7, #0]
 80123c6:	6878      	ldr	r0, [r7, #4]
 80123c8:	f000 f98a 	bl	80126e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISH_E>
	_M_put_node(__p);
 80123cc:	6839      	ldr	r1, [r7, #0]
 80123ce:	6878      	ldr	r0, [r7, #4]
 80123d0:	f000 f99b 	bl	801270a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_put_nodeEPSt13_Rb_tree_nodeISH_E>
      }
 80123d4:	bf00      	nop
 80123d6:	3708      	adds	r7, #8
 80123d8:	46bd      	mov	sp, r7
 80123da:	bd80      	pop	{r7, pc}

080123dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80123dc:	b590      	push	{r4, r7, lr}
 80123de:	b08b      	sub	sp, #44	; 0x2c
 80123e0:	af00      	add	r7, sp, #0
 80123e2:	60f8      	str	r0, [r7, #12]
 80123e4:	60b9      	str	r1, [r7, #8]
 80123e6:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 80123e8:	68b8      	ldr	r0, [r7, #8]
 80123ea:	f7ff fee8 	bl	80121be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 80123ee:	4603      	mov	r3, r0
 80123f0:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 80123f2:	68b8      	ldr	r0, [r7, #8]
 80123f4:	f000 f90e 	bl	8012614 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 80123f8:	4603      	mov	r3, r0
 80123fa:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 80123fc:	2301      	movs	r3, #1
 80123fe:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8012402:	69bb      	ldr	r3, [r7, #24]
 8012404:	2b00      	cmp	r3, #0
 8012406:	d020      	beq.n	801244a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 8012408:	69bb      	ldr	r3, [r7, #24]
 801240a:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 801240c:	68bc      	ldr	r4, [r7, #8]
 801240e:	69bb      	ldr	r3, [r7, #24]
 8012410:	4618      	mov	r0, r3
 8012412:	f000 f98c 	bl	801272e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 8012416:	4603      	mov	r3, r0
 8012418:	461a      	mov	r2, r3
 801241a:	6879      	ldr	r1, [r7, #4]
 801241c:	4620      	mov	r0, r4
 801241e:	f7f3 f90b 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8012422:	4603      	mov	r3, r0
 8012424:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8012428:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801242c:	2b00      	cmp	r3, #0
 801242e:	d005      	beq.n	801243c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x60>
 8012430:	69bb      	ldr	r3, [r7, #24]
 8012432:	4618      	mov	r0, r3
 8012434:	f7ff ffb5 	bl	80123a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 8012438:	4603      	mov	r3, r0
 801243a:	e004      	b.n	8012446 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x6a>
 801243c:	69bb      	ldr	r3, [r7, #24]
 801243e:	4618      	mov	r0, r3
 8012440:	f7ff ffa3 	bl	801238a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 8012444:	4603      	mov	r3, r0
 8012446:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8012448:	e7db      	b.n	8012402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 801244a:	697a      	ldr	r2, [r7, #20]
 801244c:	f107 0310 	add.w	r3, r7, #16
 8012450:	4611      	mov	r1, r2
 8012452:	4618      	mov	r0, r3
 8012454:	f000 f8cf 	bl	80125f6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8012458:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801245c:	2b00      	cmp	r3, #0
 801245e:	d01d      	beq.n	801249c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 8012460:	68b8      	ldr	r0, [r7, #8]
 8012462:	f000 f977 	bl	8012754 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE5beginEv>
 8012466:	4603      	mov	r3, r0
 8012468:	61fb      	str	r3, [r7, #28]
 801246a:	f107 021c 	add.w	r2, r7, #28
 801246e:	f107 0310 	add.w	r3, r7, #16
 8012472:	4611      	mov	r1, r2
 8012474:	4618      	mov	r0, r3
 8012476:	f7ff fe24 	bl	80120c2 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>
 801247a:	4603      	mov	r3, r0
 801247c:	2b00      	cmp	r3, #0
 801247e:	d008      	beq.n	8012492 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 8012480:	f107 0214 	add.w	r2, r7, #20
 8012484:	f107 0318 	add.w	r3, r7, #24
 8012488:	4619      	mov	r1, r3
 801248a:	68f8      	ldr	r0, [r7, #12]
 801248c:	f000 f973 	bl	8012776 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>
 8012490:	e025      	b.n	80124de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 8012492:	f107 0310 	add.w	r3, r7, #16
 8012496:	4618      	mov	r0, r3
 8012498:	f000 f986 	bl	80127a8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 801249c:	68bc      	ldr	r4, [r7, #8]
 801249e:	693b      	ldr	r3, [r7, #16]
 80124a0:	4618      	mov	r0, r3
 80124a2:	f000 f8f4 	bl	801268e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80124a6:	4603      	mov	r3, r0
 80124a8:	687a      	ldr	r2, [r7, #4]
 80124aa:	4619      	mov	r1, r3
 80124ac:	4620      	mov	r0, r4
 80124ae:	f7f3 f8c3 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80124b2:	4603      	mov	r3, r0
 80124b4:	2b00      	cmp	r3, #0
 80124b6:	d008      	beq.n	80124ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 80124b8:	f107 0214 	add.w	r2, r7, #20
 80124bc:	f107 0318 	add.w	r3, r7, #24
 80124c0:	4619      	mov	r1, r3
 80124c2:	68f8      	ldr	r0, [r7, #12]
 80124c4:	f000 f957 	bl	8012776 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>
 80124c8:	e009      	b.n	80124de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 80124ca:	2300      	movs	r3, #0
 80124cc:	623b      	str	r3, [r7, #32]
 80124ce:	f107 0220 	add.w	r2, r7, #32
 80124d2:	f107 0310 	add.w	r3, r7, #16
 80124d6:	4619      	mov	r1, r3
 80124d8:	68f8      	ldr	r0, [r7, #12]
 80124da:	f7f3 f80f 	bl	80054fc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80124de:	68f8      	ldr	r0, [r7, #12]
 80124e0:	372c      	adds	r7, #44	; 0x2c
 80124e2:	46bd      	mov	sp, r7
 80124e4:	bd90      	pop	{r4, r7, pc}

080124e6 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERSH_>:
      operator()(_Pair& __x) const
 80124e6:	b480      	push	{r7}
 80124e8:	b083      	sub	sp, #12
 80124ea:	af00      	add	r7, sp, #0
 80124ec:	6078      	str	r0, [r7, #4]
 80124ee:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 80124f0:	683b      	ldr	r3, [r7, #0]
 80124f2:	4618      	mov	r0, r3
 80124f4:	370c      	adds	r7, #12
 80124f6:	46bd      	mov	sp, r7
 80124f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80124fc:	4770      	bx	lr

080124fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeC1ERSN_>:
	_Alloc_node(_Rb_tree& __t)
 80124fe:	b480      	push	{r7}
 8012500:	b083      	sub	sp, #12
 8012502:	af00      	add	r7, sp, #0
 8012504:	6078      	str	r0, [r7, #4]
 8012506:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 8012508:	687b      	ldr	r3, [r7, #4]
 801250a:	683a      	ldr	r2, [r7, #0]
 801250c:	601a      	str	r2, [r3, #0]
 801250e:	687b      	ldr	r3, [r7, #4]
 8012510:	4618      	mov	r0, r3
 8012512:	370c      	adds	r7, #12
 8012514:	46bd      	mov	sp, r7
 8012516:	f85d 7b04 	ldr.w	r7, [sp], #4
 801251a:	4770      	bx	lr

0801251c <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801251c:	b480      	push	{r7}
 801251e:	b083      	sub	sp, #12
 8012520:	af00      	add	r7, sp, #0
 8012522:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012524:	687b      	ldr	r3, [r7, #4]
 8012526:	4618      	mov	r0, r3
 8012528:	370c      	adds	r7, #12
 801252a:	46bd      	mov	sp, r7
 801252c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012530:	4770      	bx	lr

08012532 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012532:	b5b0      	push	{r4, r5, r7, lr}
 8012534:	b088      	sub	sp, #32
 8012536:	af00      	add	r7, sp, #0
 8012538:	60f8      	str	r0, [r7, #12]
 801253a:	60b9      	str	r1, [r7, #8]
 801253c:	607a      	str	r2, [r7, #4]
 801253e:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8012540:	68bb      	ldr	r3, [r7, #8]
 8012542:	2b00      	cmp	r3, #0
 8012544:	d11a      	bne.n	801257c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8012546:	68f8      	ldr	r0, [r7, #12]
 8012548:	f000 f864 	bl	8012614 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 801254c:	4602      	mov	r2, r0
 801254e:	687b      	ldr	r3, [r7, #4]
 8012550:	4293      	cmp	r3, r2
 8012552:	d013      	beq.n	801257c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8012554:	68fc      	ldr	r4, [r7, #12]
 8012556:	f107 0310 	add.w	r3, r7, #16
 801255a:	6839      	ldr	r1, [r7, #0]
 801255c:	4618      	mov	r0, r3
 801255e:	f7ff ffc2 	bl	80124e6 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERSH_>
 8012562:	4605      	mov	r5, r0
 8012564:	6878      	ldr	r0, [r7, #4]
 8012566:	f000 f892 	bl	801268e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801256a:	4603      	mov	r3, r0
 801256c:	461a      	mov	r2, r3
 801256e:	4629      	mov	r1, r5
 8012570:	4620      	mov	r0, r4
 8012572:	f7f3 f861 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8012576:	4603      	mov	r3, r0
 8012578:	2b00      	cmp	r3, #0
 801257a:	d001      	beq.n	8012580 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4e>
 801257c:	2301      	movs	r3, #1
 801257e:	e000      	b.n	8012582 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x50>
 8012580:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8012582:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8012584:	6838      	ldr	r0, [r7, #0]
 8012586:	f7ff ffc9 	bl	801251c <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801258a:	4603      	mov	r3, r0
 801258c:	4619      	mov	r1, r3
 801258e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8012590:	f000 f91b 	bl	80127ca <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeclISH_EEPSt13_Rb_tree_nodeISH_EOT_>
 8012594:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8012596:	68fb      	ldr	r3, [r7, #12]
 8012598:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 801259a:	7ff8      	ldrb	r0, [r7, #31]
 801259c:	687a      	ldr	r2, [r7, #4]
 801259e:	69b9      	ldr	r1, [r7, #24]
 80125a0:	f00f ffe6 	bl	8022570 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 80125a4:	68fb      	ldr	r3, [r7, #12]
 80125a6:	695b      	ldr	r3, [r3, #20]
 80125a8:	1c5a      	adds	r2, r3, #1
 80125aa:	68fb      	ldr	r3, [r7, #12]
 80125ac:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 80125ae:	f107 0314 	add.w	r3, r7, #20
 80125b2:	69b9      	ldr	r1, [r7, #24]
 80125b4:	4618      	mov	r0, r3
 80125b6:	f000 f81e 	bl	80125f6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 80125ba:	697b      	ldr	r3, [r7, #20]
      }
 80125bc:	4618      	mov	r0, r3
 80125be:	3720      	adds	r7, #32
 80125c0:	46bd      	mov	sp, r7
 80125c2:	bdb0      	pop	{r4, r5, r7, pc}

080125c4 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80125c4:	b580      	push	{r7, lr}
 80125c6:	b084      	sub	sp, #16
 80125c8:	af00      	add	r7, sp, #0
 80125ca:	60f8      	str	r0, [r7, #12]
 80125cc:	60b9      	str	r1, [r7, #8]
 80125ce:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80125d0:	68b8      	ldr	r0, [r7, #8]
 80125d2:	f000 f90e 	bl	80127f2 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 80125d6:	4602      	mov	r2, r0
 80125d8:	68fb      	ldr	r3, [r7, #12]
 80125da:	6812      	ldr	r2, [r2, #0]
 80125dc:	601a      	str	r2, [r3, #0]
 80125de:	6878      	ldr	r0, [r7, #4]
 80125e0:	f7f6 f84e 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 80125e4:	4603      	mov	r3, r0
 80125e6:	781a      	ldrb	r2, [r3, #0]
 80125e8:	68fb      	ldr	r3, [r7, #12]
 80125ea:	711a      	strb	r2, [r3, #4]
 80125ec:	68fb      	ldr	r3, [r7, #12]
 80125ee:	4618      	mov	r0, r3
 80125f0:	3710      	adds	r7, #16
 80125f2:	46bd      	mov	sp, r7
 80125f4:	bd80      	pop	{r7, pc}

080125f6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80125f6:	b480      	push	{r7}
 80125f8:	b083      	sub	sp, #12
 80125fa:	af00      	add	r7, sp, #0
 80125fc:	6078      	str	r0, [r7, #4]
 80125fe:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8012600:	687b      	ldr	r3, [r7, #4]
 8012602:	683a      	ldr	r2, [r7, #0]
 8012604:	601a      	str	r2, [r3, #0]
 8012606:	687b      	ldr	r3, [r7, #4]
 8012608:	4618      	mov	r0, r3
 801260a:	370c      	adds	r7, #12
 801260c:	46bd      	mov	sp, r7
 801260e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012612:	4770      	bx	lr

08012614 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8012614:	b480      	push	{r7}
 8012616:	b083      	sub	sp, #12
 8012618:	af00      	add	r7, sp, #0
 801261a:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 801261c:	687b      	ldr	r3, [r7, #4]
 801261e:	3304      	adds	r3, #4
 8012620:	4618      	mov	r0, r3
 8012622:	370c      	adds	r7, #12
 8012624:	46bd      	mov	sp, r7
 8012626:	f85d 7b04 	ldr.w	r7, [sp], #4
 801262a:	4770      	bx	lr

0801262c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801262c:	b590      	push	{r4, r7, lr}
 801262e:	b087      	sub	sp, #28
 8012630:	af00      	add	r7, sp, #0
 8012632:	60f8      	str	r0, [r7, #12]
 8012634:	60b9      	str	r1, [r7, #8]
 8012636:	607a      	str	r2, [r7, #4]
 8012638:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 801263a:	68bb      	ldr	r3, [r7, #8]
 801263c:	2b00      	cmp	r3, #0
 801263e:	d01b      	beq.n	8012678 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8012640:	68fc      	ldr	r4, [r7, #12]
 8012642:	68b8      	ldr	r0, [r7, #8]
 8012644:	f000 f873 	bl	801272e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 8012648:	4603      	mov	r3, r0
 801264a:	683a      	ldr	r2, [r7, #0]
 801264c:	4619      	mov	r1, r3
 801264e:	4620      	mov	r0, r4
 8012650:	f7f2 fff2 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8012654:	4603      	mov	r3, r0
 8012656:	f083 0301 	eor.w	r3, r3, #1
 801265a:	b2db      	uxtb	r3, r3
 801265c:	2b00      	cmp	r3, #0
 801265e:	d006      	beq.n	801266e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 8012660:	68bb      	ldr	r3, [r7, #8]
 8012662:	607b      	str	r3, [r7, #4]
 8012664:	68b8      	ldr	r0, [r7, #8]
 8012666:	f7ff fe9c 	bl	80123a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 801266a:	60b8      	str	r0, [r7, #8]
 801266c:	e7e5      	b.n	801263a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 801266e:	68b8      	ldr	r0, [r7, #8]
 8012670:	f7ff fe8b 	bl	801238a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 8012674:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8012676:	e7e0      	b.n	801263a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 8012678:	f107 0314 	add.w	r3, r7, #20
 801267c:	6879      	ldr	r1, [r7, #4]
 801267e:	4618      	mov	r0, r3
 8012680:	f7ff ffb9 	bl	80125f6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 8012684:	697b      	ldr	r3, [r7, #20]
    }
 8012686:	4618      	mov	r0, r3
 8012688:	371c      	adds	r7, #28
 801268a:	46bd      	mov	sp, r7
 801268c:	bd90      	pop	{r4, r7, pc}

0801268e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 801268e:	b580      	push	{r7, lr}
 8012690:	b082      	sub	sp, #8
 8012692:	af00      	add	r7, sp, #0
 8012694:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8012696:	6878      	ldr	r0, [r7, #4]
 8012698:	f000 f849 	bl	801272e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 801269c:	4603      	mov	r3, r0
 801269e:	4618      	mov	r0, r3
 80126a0:	3708      	adds	r7, #8
 80126a2:	46bd      	mov	sp, r7
 80126a4:	bd80      	pop	{r7, pc}

080126a6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 80126a6:	b580      	push	{r7, lr}
 80126a8:	b082      	sub	sp, #8
 80126aa:	af00      	add	r7, sp, #0
 80126ac:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 80126ae:	6878      	ldr	r0, [r7, #4]
 80126b0:	f000 f8aa 	bl	8012808 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>
 80126b4:	4603      	mov	r3, r0
 80126b6:	4618      	mov	r0, r3
 80126b8:	3708      	adds	r7, #8
 80126ba:	46bd      	mov	sp, r7
 80126bc:	bd80      	pop	{r7, pc}

080126be <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type>:
        _M_construct_aux(_InIterator __beg, _InIterator __end,
 80126be:	b590      	push	{r4, r7, lr}
 80126c0:	b087      	sub	sp, #28
 80126c2:	af00      	add	r7, sp, #0
 80126c4:	60f8      	str	r0, [r7, #12]
 80126c6:	60b9      	str	r1, [r7, #8]
 80126c8:	607a      	str	r2, [r7, #4]
 80126ca:	703b      	strb	r3, [r7, #0]
          _M_construct(__beg, __end, _Tag());
 80126cc:	4623      	mov	r3, r4
 80126ce:	687a      	ldr	r2, [r7, #4]
 80126d0:	68b9      	ldr	r1, [r7, #8]
 80126d2:	68f8      	ldr	r0, [r7, #12]
 80126d4:	f000 f8b8 	bl	8012848 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
	}
 80126d8:	bf00      	nop
 80126da:	371c      	adds	r7, #28
 80126dc:	46bd      	mov	sp, r7
 80126de:	bd90      	pop	{r4, r7, pc}

080126e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80126e0:	b590      	push	{r4, r7, lr}
 80126e2:	b083      	sub	sp, #12
 80126e4:	af00      	add	r7, sp, #0
 80126e6:	6078      	str	r0, [r7, #4]
 80126e8:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 80126ea:	6878      	ldr	r0, [r7, #4]
 80126ec:	f000 f8f4 	bl	80128d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 80126f0:	4604      	mov	r4, r0
 80126f2:	6838      	ldr	r0, [r7, #0]
 80126f4:	f7ff fe21 	bl	801233a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 80126f8:	4603      	mov	r3, r0
 80126fa:	4619      	mov	r1, r3
 80126fc:	4620      	mov	r0, r4
 80126fe:	f000 f8f6 	bl	80128ee <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE7destroyISI_EEvRSK_PT_>
      }
 8012702:	bf00      	nop
 8012704:	370c      	adds	r7, #12
 8012706:	46bd      	mov	sp, r7
 8012708:	bd90      	pop	{r4, r7, pc}

0801270a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_put_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 801270a:	b580      	push	{r7, lr}
 801270c:	b082      	sub	sp, #8
 801270e:	af00      	add	r7, sp, #0
 8012710:	6078      	str	r0, [r7, #4]
 8012712:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8012714:	6878      	ldr	r0, [r7, #4]
 8012716:	f000 f8df 	bl	80128d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 801271a:	4603      	mov	r3, r0
 801271c:	2201      	movs	r2, #1
 801271e:	6839      	ldr	r1, [r7, #0]
 8012720:	4618      	mov	r0, r3
 8012722:	f000 f8f1 	bl	8012908 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE10deallocateERSK_PSJ_j>
 8012726:	bf00      	nop
 8012728:	3708      	adds	r7, #8
 801272a:	46bd      	mov	sp, r7
 801272c:	bd80      	pop	{r7, pc}

0801272e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>:
      _S_key(_Const_Link_type __x)
 801272e:	b580      	push	{r7, lr}
 8012730:	b084      	sub	sp, #16
 8012732:	af00      	add	r7, sp, #0
 8012734:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8012736:	6878      	ldr	r0, [r7, #4]
 8012738:	f000 f8f5 	bl	8012926 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 801273c:	4602      	mov	r2, r0
 801273e:	f107 030c 	add.w	r3, r7, #12
 8012742:	4611      	mov	r1, r2
 8012744:	4618      	mov	r0, r3
 8012746:	f000 f8fc 	bl	8012942 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERKSH_>
 801274a:	4603      	mov	r3, r0
      }
 801274c:	4618      	mov	r0, r3
 801274e:	3710      	adds	r7, #16
 8012750:	46bd      	mov	sp, r7
 8012752:	bd80      	pop	{r7, pc}

08012754 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8012754:	b580      	push	{r7, lr}
 8012756:	b084      	sub	sp, #16
 8012758:	af00      	add	r7, sp, #0
 801275a:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 801275c:	687b      	ldr	r3, [r7, #4]
 801275e:	68da      	ldr	r2, [r3, #12]
 8012760:	f107 030c 	add.w	r3, r7, #12
 8012764:	4611      	mov	r1, r2
 8012766:	4618      	mov	r0, r3
 8012768:	f7ff ff45 	bl	80125f6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 801276c:	68fb      	ldr	r3, [r7, #12]
 801276e:	4618      	mov	r0, r3
 8012770:	3710      	adds	r7, #16
 8012772:	46bd      	mov	sp, r7
 8012774:	bd80      	pop	{r7, pc}

08012776 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8012776:	b580      	push	{r7, lr}
 8012778:	b084      	sub	sp, #16
 801277a:	af00      	add	r7, sp, #0
 801277c:	60f8      	str	r0, [r7, #12]
 801277e:	60b9      	str	r1, [r7, #8]
 8012780:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8012782:	68b8      	ldr	r0, [r7, #8]
 8012784:	f000 f8e9 	bl	801295a <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISM_E4typeE>
 8012788:	4603      	mov	r3, r0
 801278a:	681a      	ldr	r2, [r3, #0]
 801278c:	68fb      	ldr	r3, [r7, #12]
 801278e:	601a      	str	r2, [r3, #0]
 8012790:	6878      	ldr	r0, [r7, #4]
 8012792:	f7f3 fe22 	bl	80063da <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8012796:	4603      	mov	r3, r0
 8012798:	681a      	ldr	r2, [r3, #0]
 801279a:	68fb      	ldr	r3, [r7, #12]
 801279c:	605a      	str	r2, [r3, #4]
 801279e:	68fb      	ldr	r3, [r7, #12]
 80127a0:	4618      	mov	r0, r3
 80127a2:	3710      	adds	r7, #16
 80127a4:	46bd      	mov	sp, r7
 80127a6:	bd80      	pop	{r7, pc}

080127a8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 80127a8:	b580      	push	{r7, lr}
 80127aa:	b082      	sub	sp, #8
 80127ac:	af00      	add	r7, sp, #0
 80127ae:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 80127b0:	687b      	ldr	r3, [r7, #4]
 80127b2:	681b      	ldr	r3, [r3, #0]
 80127b4:	4618      	mov	r0, r3
 80127b6:	f00f fed9 	bl	802256c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 80127ba:	4602      	mov	r2, r0
 80127bc:	687b      	ldr	r3, [r7, #4]
 80127be:	601a      	str	r2, [r3, #0]
	return *this;
 80127c0:	687b      	ldr	r3, [r7, #4]
      }
 80127c2:	4618      	mov	r0, r3
 80127c4:	3708      	adds	r7, #8
 80127c6:	46bd      	mov	sp, r7
 80127c8:	bd80      	pop	{r7, pc}

080127ca <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeclISH_EEPSt13_Rb_tree_nodeISH_EOT_>:
	  operator()(_Arg&& __arg) const
 80127ca:	b590      	push	{r4, r7, lr}
 80127cc:	b083      	sub	sp, #12
 80127ce:	af00      	add	r7, sp, #0
 80127d0:	6078      	str	r0, [r7, #4]
 80127d2:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 80127d4:	687b      	ldr	r3, [r7, #4]
 80127d6:	681c      	ldr	r4, [r3, #0]
 80127d8:	6838      	ldr	r0, [r7, #0]
 80127da:	f7ff fe9f 	bl	801251c <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80127de:	4603      	mov	r3, r0
 80127e0:	4619      	mov	r1, r3
 80127e2:	4620      	mov	r0, r4
 80127e4:	f000 f8c4 	bl	8012970 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_create_nodeIJSH_EEEPSt13_Rb_tree_nodeISH_EDpOT_>
 80127e8:	4603      	mov	r3, r0
 80127ea:	4618      	mov	r0, r3
 80127ec:	370c      	adds	r7, #12
 80127ee:	46bd      	mov	sp, r7
 80127f0:	bd90      	pop	{r4, r7, pc}

080127f2 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80127f2:	b480      	push	{r7}
 80127f4:	b083      	sub	sp, #12
 80127f6:	af00      	add	r7, sp, #0
 80127f8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80127fa:	687b      	ldr	r3, [r7, #4]
 80127fc:	4618      	mov	r0, r3
 80127fe:	370c      	adds	r7, #12
 8012800:	46bd      	mov	sp, r7
 8012802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012806:	4770      	bx	lr

08012808 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>:
      _M_addr() noexcept
 8012808:	b480      	push	{r7}
 801280a:	b083      	sub	sp, #12
 801280c:	af00      	add	r7, sp, #0
 801280e:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8012810:	687b      	ldr	r3, [r7, #4]
 8012812:	4618      	mov	r0, r3
 8012814:	370c      	adds	r7, #12
 8012816:	46bd      	mov	sp, r7
 8012818:	f85d 7b04 	ldr.w	r7, [sp], #4
 801281c:	4770      	bx	lr

0801281e <_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_>:
    distance(_InputIterator __first, _InputIterator __last)
 801281e:	b5b0      	push	{r4, r5, r7, lr}
 8012820:	b082      	sub	sp, #8
 8012822:	af00      	add	r7, sp, #0
 8012824:	6078      	str	r0, [r7, #4]
 8012826:	6039      	str	r1, [r7, #0]
      return std::__distance(__first, __last,
 8012828:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 801282a:	1d3b      	adds	r3, r7, #4
 801282c:	4618      	mov	r0, r3
 801282e:	f000 f8c6 	bl	80129be <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__distance(__first, __last,
 8012832:	462a      	mov	r2, r5
 8012834:	6839      	ldr	r1, [r7, #0]
 8012836:	4620      	mov	r0, r4
 8012838:	f000 f8cb 	bl	80129d2 <_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag>
 801283c:	4603      	mov	r3, r0
    }
 801283e:	4618      	mov	r0, r3
 8012840:	3708      	adds	r7, #8
 8012842:	46bd      	mov	sp, r7
 8012844:	bdb0      	pop	{r4, r5, r7, pc}
	...

08012848 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
 8012848:	b580      	push	{r7, lr}
 801284a:	b086      	sub	sp, #24
 801284c:	af00      	add	r7, sp, #0
 801284e:	60f8      	str	r0, [r7, #12]
 8012850:	60b9      	str	r1, [r7, #8]
 8012852:	607a      	str	r2, [r7, #4]
 8012854:	703b      	strb	r3, [r7, #0]
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 8012856:	68b8      	ldr	r0, [r7, #8]
 8012858:	f000 f8a1 	bl	801299e <_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_>
 801285c:	4603      	mov	r3, r0
 801285e:	2b00      	cmp	r3, #0
 8012860:	d005      	beq.n	801286e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x26>
 8012862:	68ba      	ldr	r2, [r7, #8]
 8012864:	687b      	ldr	r3, [r7, #4]
 8012866:	429a      	cmp	r2, r3
 8012868:	d001      	beq.n	801286e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x26>
 801286a:	2301      	movs	r3, #1
 801286c:	e000      	b.n	8012870 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x28>
 801286e:	2300      	movs	r3, #0
 8012870:	2b00      	cmp	r3, #0
 8012872:	d002      	beq.n	801287a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x32>
	  std::__throw_logic_error(__N("basic_string::"
 8012874:	4817      	ldr	r0, [pc, #92]	; (80128d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x8c>)
 8012876:	f00f feda 	bl	802262e <_ZSt19__throw_logic_errorPKc>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 801287a:	6879      	ldr	r1, [r7, #4]
 801287c:	68b8      	ldr	r0, [r7, #8]
 801287e:	f7ff ffce 	bl	801281e <_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_>
 8012882:	4603      	mov	r3, r0
 8012884:	617b      	str	r3, [r7, #20]
	if (__dnew > size_type(_S_local_capacity))
 8012886:	697b      	ldr	r3, [r7, #20]
 8012888:	2b0f      	cmp	r3, #15
 801288a:	d910      	bls.n	80128ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x66>
	    _M_data(_M_create(__dnew, size_type(0)));
 801288c:	f107 0314 	add.w	r3, r7, #20
 8012890:	2200      	movs	r2, #0
 8012892:	4619      	mov	r1, r3
 8012894:	68f8      	ldr	r0, [r7, #12]
 8012896:	f00f ff9d 	bl	80227d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 801289a:	4603      	mov	r3, r0
 801289c:	4619      	mov	r1, r3
 801289e:	68f8      	ldr	r0, [r7, #12]
 80128a0:	f00f ff8a 	bl	80227b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
 80128a4:	697b      	ldr	r3, [r7, #20]
 80128a6:	4619      	mov	r1, r3
 80128a8:	68f8      	ldr	r0, [r7, #12]
 80128aa:	f00f ff8b 	bl	80227c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>
	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 80128ae:	68f8      	ldr	r0, [r7, #12]
 80128b0:	f00f ff84 	bl	80227bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
 80128b4:	4603      	mov	r3, r0
 80128b6:	687a      	ldr	r2, [r7, #4]
 80128b8:	68b9      	ldr	r1, [r7, #8]
 80128ba:	4618      	mov	r0, r3
 80128bc:	f00f ffef 	bl	802289e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>
	_M_set_length(__dnew);
 80128c0:	697b      	ldr	r3, [r7, #20]
 80128c2:	4619      	mov	r1, r3
 80128c4:	68f8      	ldr	r0, [r7, #12]
 80128c6:	f00f ff7f 	bl	80227c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>
      }
 80128ca:	bf00      	nop
 80128cc:	3718      	adds	r7, #24
 80128ce:	46bd      	mov	sp, r7
 80128d0:	bd80      	pop	{r7, pc}
 80128d2:	bf00      	nop
 80128d4:	08027524 	.word	0x08027524

080128d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 80128d8:	b480      	push	{r7}
 80128da:	b083      	sub	sp, #12
 80128dc:	af00      	add	r7, sp, #0
 80128de:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80128e0:	687b      	ldr	r3, [r7, #4]
 80128e2:	4618      	mov	r0, r3
 80128e4:	370c      	adds	r7, #12
 80128e6:	46bd      	mov	sp, r7
 80128e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80128ec:	4770      	bx	lr

080128ee <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE7destroyISI_EEvRSK_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 80128ee:	b580      	push	{r7, lr}
 80128f0:	b082      	sub	sp, #8
 80128f2:	af00      	add	r7, sp, #0
 80128f4:	6078      	str	r0, [r7, #4]
 80128f6:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 80128f8:	6839      	ldr	r1, [r7, #0]
 80128fa:	6878      	ldr	r0, [r7, #4]
 80128fc:	f000 f878 	bl	80129f0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE7destroyISJ_EEvPT_>
 8012900:	bf00      	nop
 8012902:	3708      	adds	r7, #8
 8012904:	46bd      	mov	sp, r7
 8012906:	bd80      	pop	{r7, pc}

08012908 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE10deallocateERSK_PSJ_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8012908:	b580      	push	{r7, lr}
 801290a:	b084      	sub	sp, #16
 801290c:	af00      	add	r7, sp, #0
 801290e:	60f8      	str	r0, [r7, #12]
 8012910:	60b9      	str	r1, [r7, #8]
 8012912:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8012914:	687a      	ldr	r2, [r7, #4]
 8012916:	68b9      	ldr	r1, [r7, #8]
 8012918:	68f8      	ldr	r0, [r7, #12]
 801291a:	f000 f875 	bl	8012a08 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE10deallocateEPSK_j>
 801291e:	bf00      	nop
 8012920:	3710      	adds	r7, #16
 8012922:	46bd      	mov	sp, r7
 8012924:	bd80      	pop	{r7, pc}

08012926 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>:
      _M_valptr() const
 8012926:	b580      	push	{r7, lr}
 8012928:	b082      	sub	sp, #8
 801292a:	af00      	add	r7, sp, #0
 801292c:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 801292e:	687b      	ldr	r3, [r7, #4]
 8012930:	3310      	adds	r3, #16
 8012932:	4618      	mov	r0, r3
 8012934:	f000 f874 	bl	8012a20 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>
 8012938:	4603      	mov	r3, r0
 801293a:	4618      	mov	r0, r3
 801293c:	3708      	adds	r7, #8
 801293e:	46bd      	mov	sp, r7
 8012940:	bd80      	pop	{r7, pc}

08012942 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERKSH_>:
      operator()(const _Pair& __x) const
 8012942:	b480      	push	{r7}
 8012944:	b083      	sub	sp, #12
 8012946:	af00      	add	r7, sp, #0
 8012948:	6078      	str	r0, [r7, #4]
 801294a:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 801294c:	683b      	ldr	r3, [r7, #0]
 801294e:	4618      	mov	r0, r3
 8012950:	370c      	adds	r7, #12
 8012952:	46bd      	mov	sp, r7
 8012954:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012958:	4770      	bx	lr

0801295a <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801295a:	b480      	push	{r7}
 801295c:	b083      	sub	sp, #12
 801295e:	af00      	add	r7, sp, #0
 8012960:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012962:	687b      	ldr	r3, [r7, #4]
 8012964:	4618      	mov	r0, r3
 8012966:	370c      	adds	r7, #12
 8012968:	46bd      	mov	sp, r7
 801296a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801296e:	4770      	bx	lr

08012970 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_create_nodeIJSH_EEEPSt13_Rb_tree_nodeISH_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8012970:	b580      	push	{r7, lr}
 8012972:	b084      	sub	sp, #16
 8012974:	af00      	add	r7, sp, #0
 8012976:	6078      	str	r0, [r7, #4]
 8012978:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 801297a:	6878      	ldr	r0, [r7, #4]
 801297c:	f000 f85c 	bl	8012a38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_get_nodeEv>
 8012980:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8012982:	6838      	ldr	r0, [r7, #0]
 8012984:	f7ff fdca 	bl	801251c <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012988:	4603      	mov	r3, r0
 801298a:	461a      	mov	r2, r3
 801298c:	68f9      	ldr	r1, [r7, #12]
 801298e:	6878      	ldr	r0, [r7, #4]
 8012990:	f000 f863 	bl	8012a5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE17_M_construct_nodeIJSH_EEEvPSt13_Rb_tree_nodeISH_EDpOT_>
	  return __tmp;
 8012994:	68fb      	ldr	r3, [r7, #12]
	}
 8012996:	4618      	mov	r0, r3
 8012998:	3710      	adds	r7, #16
 801299a:	46bd      	mov	sp, r7
 801299c:	bd80      	pop	{r7, pc}

0801299e <_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_>:
    __is_null_pointer(_Type* __ptr)
 801299e:	b480      	push	{r7}
 80129a0:	b083      	sub	sp, #12
 80129a2:	af00      	add	r7, sp, #0
 80129a4:	6078      	str	r0, [r7, #4]
    { return __ptr == 0; }
 80129a6:	687b      	ldr	r3, [r7, #4]
 80129a8:	2b00      	cmp	r3, #0
 80129aa:	bf0c      	ite	eq
 80129ac:	2301      	moveq	r3, #1
 80129ae:	2300      	movne	r3, #0
 80129b0:	b2db      	uxtb	r3, r3
 80129b2:	4618      	mov	r0, r3
 80129b4:	370c      	adds	r7, #12
 80129b6:	46bd      	mov	sp, r7
 80129b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80129bc:	4770      	bx	lr

080129be <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
 80129be:	b480      	push	{r7}
 80129c0:	b083      	sub	sp, #12
 80129c2:	af00      	add	r7, sp, #0
 80129c4:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 80129c6:	4618      	mov	r0, r3
 80129c8:	370c      	adds	r7, #12
 80129ca:	46bd      	mov	sp, r7
 80129cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80129d0:	4770      	bx	lr

080129d2 <_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 80129d2:	b480      	push	{r7}
 80129d4:	b085      	sub	sp, #20
 80129d6:	af00      	add	r7, sp, #0
 80129d8:	60f8      	str	r0, [r7, #12]
 80129da:	60b9      	str	r1, [r7, #8]
 80129dc:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 80129de:	68ba      	ldr	r2, [r7, #8]
 80129e0:	68fb      	ldr	r3, [r7, #12]
 80129e2:	1ad3      	subs	r3, r2, r3
    }
 80129e4:	4618      	mov	r0, r3
 80129e6:	3714      	adds	r7, #20
 80129e8:	46bd      	mov	sp, r7
 80129ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80129ee:	4770      	bx	lr

080129f0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE7destroyISJ_EEvPT_>:
	destroy(_Up* __p)
 80129f0:	b580      	push	{r7, lr}
 80129f2:	b082      	sub	sp, #8
 80129f4:	af00      	add	r7, sp, #0
 80129f6:	6078      	str	r0, [r7, #4]
 80129f8:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 80129fa:	6838      	ldr	r0, [r7, #0]
 80129fc:	f7ff f944 	bl	8011c88 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>
 8012a00:	bf00      	nop
 8012a02:	3708      	adds	r7, #8
 8012a04:	46bd      	mov	sp, r7
 8012a06:	bd80      	pop	{r7, pc}

08012a08 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE10deallocateEPSK_j>:
      deallocate(pointer __p, size_type)
 8012a08:	b580      	push	{r7, lr}
 8012a0a:	b084      	sub	sp, #16
 8012a0c:	af00      	add	r7, sp, #0
 8012a0e:	60f8      	str	r0, [r7, #12]
 8012a10:	60b9      	str	r1, [r7, #8]
 8012a12:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8012a14:	68b8      	ldr	r0, [r7, #8]
 8012a16:	f00f fd2f 	bl	8022478 <_ZdlPv>
      }
 8012a1a:	3710      	adds	r7, #16
 8012a1c:	46bd      	mov	sp, r7
 8012a1e:	bd80      	pop	{r7, pc}

08012a20 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8012a20:	b580      	push	{r7, lr}
 8012a22:	b082      	sub	sp, #8
 8012a24:	af00      	add	r7, sp, #0
 8012a26:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8012a28:	6878      	ldr	r0, [r7, #4]
 8012a2a:	f000 f836 	bl	8012a9a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>
 8012a2e:	4603      	mov	r3, r0
 8012a30:	4618      	mov	r0, r3
 8012a32:	3708      	adds	r7, #8
 8012a34:	46bd      	mov	sp, r7
 8012a36:	bd80      	pop	{r7, pc}

08012a38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_get_nodeEv>:
      _M_get_node()
 8012a38:	b580      	push	{r7, lr}
 8012a3a:	b082      	sub	sp, #8
 8012a3c:	af00      	add	r7, sp, #0
 8012a3e:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 8012a40:	6878      	ldr	r0, [r7, #4]
 8012a42:	f7ff ff49 	bl	80128d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8012a46:	4603      	mov	r3, r0
 8012a48:	2101      	movs	r1, #1
 8012a4a:	4618      	mov	r0, r3
 8012a4c:	f000 f830 	bl	8012ab0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE8allocateERSK_j>
 8012a50:	4603      	mov	r3, r0
 8012a52:	4618      	mov	r0, r3
 8012a54:	3708      	adds	r7, #8
 8012a56:	46bd      	mov	sp, r7
 8012a58:	bd80      	pop	{r7, pc}

08012a5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE17_M_construct_nodeIJSH_EEEvPSt13_Rb_tree_nodeISH_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8012a5a:	b5b0      	push	{r4, r5, r7, lr}
 8012a5c:	b084      	sub	sp, #16
 8012a5e:	af00      	add	r7, sp, #0
 8012a60:	60f8      	str	r0, [r7, #12]
 8012a62:	60b9      	str	r1, [r7, #8]
 8012a64:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8012a66:	68bb      	ldr	r3, [r7, #8]
 8012a68:	4619      	mov	r1, r3
 8012a6a:	202c      	movs	r0, #44	; 0x2c
 8012a6c:	f7ee faf5 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8012a70:	68f8      	ldr	r0, [r7, #12]
 8012a72:	f7ff ff31 	bl	80128d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8012a76:	4604      	mov	r4, r0
 8012a78:	68b8      	ldr	r0, [r7, #8]
 8012a7a:	f7ff fc5e 	bl	801233a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 8012a7e:	4605      	mov	r5, r0
 8012a80:	6878      	ldr	r0, [r7, #4]
 8012a82:	f7ff fd4b 	bl	801251c <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012a86:	4603      	mov	r3, r0
 8012a88:	461a      	mov	r2, r3
 8012a8a:	4629      	mov	r1, r5
 8012a8c:	4620      	mov	r0, r4
 8012a8e:	f000 f81e 	bl	8012ace <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE9constructISI_JSI_EEEvRSK_PT_DpOT0_>
	}
 8012a92:	bf00      	nop
 8012a94:	3710      	adds	r7, #16
 8012a96:	46bd      	mov	sp, r7
 8012a98:	bdb0      	pop	{r4, r5, r7, pc}

08012a9a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>:
      _M_addr() const noexcept
 8012a9a:	b480      	push	{r7}
 8012a9c:	b083      	sub	sp, #12
 8012a9e:	af00      	add	r7, sp, #0
 8012aa0:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8012aa2:	687b      	ldr	r3, [r7, #4]
 8012aa4:	4618      	mov	r0, r3
 8012aa6:	370c      	adds	r7, #12
 8012aa8:	46bd      	mov	sp, r7
 8012aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012aae:	4770      	bx	lr

08012ab0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE8allocateERSK_j>:
      allocate(allocator_type& __a, size_type __n)
 8012ab0:	b580      	push	{r7, lr}
 8012ab2:	b082      	sub	sp, #8
 8012ab4:	af00      	add	r7, sp, #0
 8012ab6:	6078      	str	r0, [r7, #4]
 8012ab8:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8012aba:	2200      	movs	r2, #0
 8012abc:	6839      	ldr	r1, [r7, #0]
 8012abe:	6878      	ldr	r0, [r7, #4]
 8012ac0:	f000 f818 	bl	8012af4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv>
 8012ac4:	4603      	mov	r3, r0
 8012ac6:	4618      	mov	r0, r3
 8012ac8:	3708      	adds	r7, #8
 8012aca:	46bd      	mov	sp, r7
 8012acc:	bd80      	pop	{r7, pc}

08012ace <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE9constructISI_JSI_EEEvRSK_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8012ace:	b580      	push	{r7, lr}
 8012ad0:	b084      	sub	sp, #16
 8012ad2:	af00      	add	r7, sp, #0
 8012ad4:	60f8      	str	r0, [r7, #12]
 8012ad6:	60b9      	str	r1, [r7, #8]
 8012ad8:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8012ada:	6878      	ldr	r0, [r7, #4]
 8012adc:	f7ff fd1e 	bl	801251c <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012ae0:	4603      	mov	r3, r0
 8012ae2:	461a      	mov	r2, r3
 8012ae4:	68b9      	ldr	r1, [r7, #8]
 8012ae6:	68f8      	ldr	r0, [r7, #12]
 8012ae8:	f000 f839 	bl	8012b5e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE9constructISJ_JSJ_EEEvPT_DpOT0_>
 8012aec:	bf00      	nop
 8012aee:	3710      	adds	r7, #16
 8012af0:	46bd      	mov	sp, r7
 8012af2:	bd80      	pop	{r7, pc}

08012af4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8012af4:	b580      	push	{r7, lr}
 8012af6:	b084      	sub	sp, #16
 8012af8:	af00      	add	r7, sp, #0
 8012afa:	60f8      	str	r0, [r7, #12]
 8012afc:	60b9      	str	r1, [r7, #8]
 8012afe:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8012b00:	68f8      	ldr	r0, [r7, #12]
 8012b02:	f000 f845 	bl	8012b90 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv>
 8012b06:	4602      	mov	r2, r0
 8012b08:	68bb      	ldr	r3, [r7, #8]
 8012b0a:	4293      	cmp	r3, r2
 8012b0c:	bf8c      	ite	hi
 8012b0e:	2301      	movhi	r3, #1
 8012b10:	2300      	movls	r3, #0
 8012b12:	b2db      	uxtb	r3, r3
 8012b14:	2b00      	cmp	r3, #0
 8012b16:	d001      	beq.n	8012b1c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8012b18:	f00f fd86 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8012b1c:	68bb      	ldr	r3, [r7, #8]
 8012b1e:	222c      	movs	r2, #44	; 0x2c
 8012b20:	fb02 f303 	mul.w	r3, r2, r3
 8012b24:	4618      	mov	r0, r3
 8012b26:	f00f fcba 	bl	802249e <_Znwj>
 8012b2a:	4603      	mov	r3, r0
 8012b2c:	bf00      	nop
      }
 8012b2e:	4618      	mov	r0, r3
 8012b30:	3710      	adds	r7, #16
 8012b32:	46bd      	mov	sp, r7
 8012b34:	bd80      	pop	{r7, pc}

08012b36 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1EOSG_>:
      constexpr pair(pair&&) = default;
 8012b36:	b580      	push	{r7, lr}
 8012b38:	b082      	sub	sp, #8
 8012b3a:	af00      	add	r7, sp, #0
 8012b3c:	6078      	str	r0, [r7, #4]
 8012b3e:	6039      	str	r1, [r7, #0]
 8012b40:	687b      	ldr	r3, [r7, #4]
 8012b42:	683a      	ldr	r2, [r7, #0]
 8012b44:	4611      	mov	r1, r2
 8012b46:	4618      	mov	r0, r3
 8012b48:	f010 f910 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8012b4c:	683b      	ldr	r3, [r7, #0]
 8012b4e:	699a      	ldr	r2, [r3, #24]
 8012b50:	687b      	ldr	r3, [r7, #4]
 8012b52:	619a      	str	r2, [r3, #24]
 8012b54:	687b      	ldr	r3, [r7, #4]
 8012b56:	4618      	mov	r0, r3
 8012b58:	3708      	adds	r7, #8
 8012b5a:	46bd      	mov	sp, r7
 8012b5c:	bd80      	pop	{r7, pc}

08012b5e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE9constructISJ_JSJ_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8012b5e:	b590      	push	{r4, r7, lr}
 8012b60:	b085      	sub	sp, #20
 8012b62:	af00      	add	r7, sp, #0
 8012b64:	60f8      	str	r0, [r7, #12]
 8012b66:	60b9      	str	r1, [r7, #8]
 8012b68:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8012b6a:	6878      	ldr	r0, [r7, #4]
 8012b6c:	f7ff fcd6 	bl	801251c <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012b70:	4604      	mov	r4, r0
 8012b72:	68bb      	ldr	r3, [r7, #8]
 8012b74:	4619      	mov	r1, r3
 8012b76:	201c      	movs	r0, #28
 8012b78:	f7ee fa6f 	bl	800105a <_ZnwjPv>
 8012b7c:	4603      	mov	r3, r0
 8012b7e:	4621      	mov	r1, r4
 8012b80:	4618      	mov	r0, r3
 8012b82:	f7ff ffd8 	bl	8012b36 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1EOSG_>
 8012b86:	bf00      	nop
 8012b88:	3714      	adds	r7, #20
 8012b8a:	46bd      	mov	sp, r7
 8012b8c:	bd90      	pop	{r4, r7, pc}
	...

08012b90 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8012b90:	b480      	push	{r7}
 8012b92:	b083      	sub	sp, #12
 8012b94:	af00      	add	r7, sp, #0
 8012b96:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8012b98:	4b03      	ldr	r3, [pc, #12]	; (8012ba8 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv+0x18>)
      }
 8012b9a:	4618      	mov	r0, r3
 8012b9c:	370c      	adds	r7, #12
 8012b9e:	46bd      	mov	sp, r7
 8012ba0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012ba4:	4770      	bx	lr
 8012ba6:	bf00      	nop
 8012ba8:	02e8ba2e 	.word	0x02e8ba2e

08012bac <_Z41__static_initialization_and_destruction_0ii>:
 8012bac:	b590      	push	{r4, r7, lr}
 8012bae:	b0e7      	sub	sp, #412	; 0x19c
 8012bb0:	af02      	add	r7, sp, #8
 8012bb2:	1d3b      	adds	r3, r7, #4
 8012bb4:	6018      	str	r0, [r3, #0]
 8012bb6:	463b      	mov	r3, r7
 8012bb8:	6019      	str	r1, [r3, #0]
 8012bba:	1d3b      	adds	r3, r7, #4
 8012bbc:	681b      	ldr	r3, [r3, #0]
 8012bbe:	2b01      	cmp	r3, #1
 8012bc0:	f040 819d 	bne.w	8012efe <_Z41__static_initialization_and_destruction_0ii+0x352>
 8012bc4:	463b      	mov	r3, r7
 8012bc6:	681b      	ldr	r3, [r3, #0]
 8012bc8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012bcc:	4293      	cmp	r3, r2
 8012bce:	f040 8196 	bne.w	8012efe <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8012bd2:	f107 0314 	add.w	r3, r7, #20
 8012bd6:	4618      	mov	r0, r3
 8012bd8:	2322      	movs	r3, #34	; 0x22
 8012bda:	461a      	mov	r2, r3
 8012bdc:	2100      	movs	r1, #0
 8012bde:	f011 f941 	bl	8023e64 <memset>
 8012be2:	f107 0314 	add.w	r3, r7, #20
 8012be6:	223a      	movs	r2, #58	; 0x3a
 8012be8:	701a      	strb	r2, [r3, #0]
 8012bea:	f107 0314 	add.w	r3, r7, #20
 8012bee:	2201      	movs	r2, #1
 8012bf0:	705a      	strb	r2, [r3, #1]
 8012bf2:	f107 0314 	add.w	r3, r7, #20
 8012bf6:	220a      	movs	r2, #10
 8012bf8:	709a      	strb	r2, [r3, #2]
 8012bfa:	f107 0314 	add.w	r3, r7, #20
 8012bfe:	220a      	movs	r2, #10
 8012c00:	70da      	strb	r2, [r3, #3]
 8012c02:	f107 0314 	add.w	r3, r7, #20
 8012c06:	222c      	movs	r2, #44	; 0x2c
 8012c08:	711a      	strb	r2, [r3, #4]
 8012c0a:	f107 0314 	add.w	r3, r7, #20
 8012c0e:	220c      	movs	r2, #12
 8012c10:	715a      	strb	r2, [r3, #5]
 8012c12:	f107 0314 	add.w	r3, r7, #20
 8012c16:	222e      	movs	r2, #46	; 0x2e
 8012c18:	719a      	strb	r2, [r3, #6]
 8012c1a:	f107 0314 	add.w	r3, r7, #20
 8012c1e:	220b      	movs	r2, #11
 8012c20:	71da      	strb	r2, [r3, #7]
 8012c22:	f107 0314 	add.w	r3, r7, #20
 8012c26:	225b      	movs	r2, #91	; 0x5b
 8012c28:	721a      	strb	r2, [r3, #8]
 8012c2a:	f107 0314 	add.w	r3, r7, #20
 8012c2e:	220d      	movs	r2, #13
 8012c30:	725a      	strb	r2, [r3, #9]
 8012c32:	f107 0314 	add.w	r3, r7, #20
 8012c36:	225d      	movs	r2, #93	; 0x5d
 8012c38:	729a      	strb	r2, [r3, #10]
 8012c3a:	f107 0314 	add.w	r3, r7, #20
 8012c3e:	220e      	movs	r2, #14
 8012c40:	72da      	strb	r2, [r3, #11]
 8012c42:	f107 0314 	add.w	r3, r7, #20
 8012c46:	227c      	movs	r2, #124	; 0x7c
 8012c48:	731a      	strb	r2, [r3, #12]
 8012c4a:	f107 0314 	add.w	r3, r7, #20
 8012c4e:	2215      	movs	r2, #21
 8012c50:	735a      	strb	r2, [r3, #13]
 8012c52:	f107 0314 	add.w	r3, r7, #20
 8012c56:	2226      	movs	r2, #38	; 0x26
 8012c58:	739a      	strb	r2, [r3, #14]
 8012c5a:	f107 0314 	add.w	r3, r7, #20
 8012c5e:	2216      	movs	r2, #22
 8012c60:	73da      	strb	r2, [r3, #15]
 8012c62:	f107 0314 	add.w	r3, r7, #20
 8012c66:	222b      	movs	r2, #43	; 0x2b
 8012c68:	741a      	strb	r2, [r3, #16]
 8012c6a:	f107 0314 	add.w	r3, r7, #20
 8012c6e:	221f      	movs	r2, #31
 8012c70:	745a      	strb	r2, [r3, #17]
 8012c72:	f107 0314 	add.w	r3, r7, #20
 8012c76:	222d      	movs	r2, #45	; 0x2d
 8012c78:	749a      	strb	r2, [r3, #18]
 8012c7a:	f107 0314 	add.w	r3, r7, #20
 8012c7e:	2220      	movs	r2, #32
 8012c80:	74da      	strb	r2, [r3, #19]
 8012c82:	f107 0314 	add.w	r3, r7, #20
 8012c86:	222a      	movs	r2, #42	; 0x2a
 8012c88:	751a      	strb	r2, [r3, #20]
 8012c8a:	f107 0314 	add.w	r3, r7, #20
 8012c8e:	2221      	movs	r2, #33	; 0x21
 8012c90:	755a      	strb	r2, [r3, #21]
 8012c92:	f107 0314 	add.w	r3, r7, #20
 8012c96:	222f      	movs	r2, #47	; 0x2f
 8012c98:	759a      	strb	r2, [r3, #22]
 8012c9a:	f107 0314 	add.w	r3, r7, #20
 8012c9e:	2222      	movs	r2, #34	; 0x22
 8012ca0:	75da      	strb	r2, [r3, #23]
 8012ca2:	f107 0314 	add.w	r3, r7, #20
 8012ca6:	225e      	movs	r2, #94	; 0x5e
 8012ca8:	761a      	strb	r2, [r3, #24]
 8012caa:	f107 0314 	add.w	r3, r7, #20
 8012cae:	2223      	movs	r2, #35	; 0x23
 8012cb0:	765a      	strb	r2, [r3, #25]
 8012cb2:	f107 0314 	add.w	r3, r7, #20
 8012cb6:	2225      	movs	r2, #37	; 0x25
 8012cb8:	769a      	strb	r2, [r3, #26]
 8012cba:	f107 0314 	add.w	r3, r7, #20
 8012cbe:	2224      	movs	r2, #36	; 0x24
 8012cc0:	76da      	strb	r2, [r3, #27]
 8012cc2:	f107 0314 	add.w	r3, r7, #20
 8012cc6:	2228      	movs	r2, #40	; 0x28
 8012cc8:	771a      	strb	r2, [r3, #28]
 8012cca:	f107 0314 	add.w	r3, r7, #20
 8012cce:	2226      	movs	r2, #38	; 0x26
 8012cd0:	775a      	strb	r2, [r3, #29]
 8012cd2:	f107 0314 	add.w	r3, r7, #20
 8012cd6:	2229      	movs	r2, #41	; 0x29
 8012cd8:	779a      	strb	r2, [r3, #30]
 8012cda:	f107 0314 	add.w	r3, r7, #20
 8012cde:	2227      	movs	r2, #39	; 0x27
 8012ce0:	77da      	strb	r2, [r3, #31]
 8012ce2:	f107 0314 	add.w	r3, r7, #20
 8012ce6:	2225      	movs	r2, #37	; 0x25
 8012ce8:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8012cec:	f107 030c 	add.w	r3, r7, #12
 8012cf0:	f107 0214 	add.w	r2, r7, #20
 8012cf4:	601a      	str	r2, [r3, #0]
 8012cf6:	f107 030c 	add.w	r3, r7, #12
 8012cfa:	2211      	movs	r2, #17
 8012cfc:	605a      	str	r2, [r3, #4]
 8012cfe:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8012d02:	4618      	mov	r0, r3
 8012d04:	f7ee feba 	bl	8001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8012d08:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8012d0c:	f107 020c 	add.w	r2, r7, #12
 8012d10:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8012d14:	9300      	str	r3, [sp, #0]
 8012d16:	460b      	mov	r3, r1
 8012d18:	ca06      	ldmia	r2, {r1, r2}
 8012d1a:	4885      	ldr	r0, [pc, #532]	; (8012f30 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8012d1c:	f7ee fec6 	bl	8001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8012d20:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8012d24:	4618      	mov	r0, r3
 8012d26:	f7ee feb5 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8012d2a:	2305      	movs	r3, #5
 8012d2c:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8012d30:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8012d34:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012d38:	497e      	ldr	r1, [pc, #504]	; (8012f34 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8012d3a:	4618      	mov	r0, r3
 8012d3c:	f7ee f9dc 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8012d40:	2306      	movs	r3, #6
 8012d42:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8012d46:	f207 1263 	addw	r2, r7, #355	; 0x163
 8012d4a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012d4e:	331c      	adds	r3, #28
 8012d50:	4979      	ldr	r1, [pc, #484]	; (8012f38 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8012d52:	4618      	mov	r0, r3
 8012d54:	f7ee f9f8 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8012d58:	2307      	movs	r3, #7
 8012d5a:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8012d5e:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8012d62:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012d66:	3338      	adds	r3, #56	; 0x38
 8012d68:	4974      	ldr	r1, [pc, #464]	; (8012f3c <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8012d6a:	4618      	mov	r0, r3
 8012d6c:	f7ee f9ec 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8012d70:	2308      	movs	r3, #8
 8012d72:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8012d76:	f207 1265 	addw	r2, r7, #357	; 0x165
 8012d7a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012d7e:	3354      	adds	r3, #84	; 0x54
 8012d80:	496f      	ldr	r1, [pc, #444]	; (8012f40 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8012d82:	4618      	mov	r0, r3
 8012d84:	f7ee f9b8 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8012d88:	2309      	movs	r3, #9
 8012d8a:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8012d8e:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8012d92:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012d96:	3370      	adds	r3, #112	; 0x70
 8012d98:	496a      	ldr	r1, [pc, #424]	; (8012f44 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8012d9a:	4618      	mov	r0, r3
 8012d9c:	f7ee f9fc 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8012da0:	2310      	movs	r3, #16
 8012da2:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8012da6:	f207 1267 	addw	r2, r7, #359	; 0x167
 8012daa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012dae:	338c      	adds	r3, #140	; 0x8c
 8012db0:	4965      	ldr	r1, [pc, #404]	; (8012f48 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8012db2:	4618      	mov	r0, r3
 8012db4:	f7ee fa18 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8012db8:	2311      	movs	r3, #17
 8012dba:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8012dbe:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8012dc2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012dc6:	33a8      	adds	r3, #168	; 0xa8
 8012dc8:	4960      	ldr	r1, [pc, #384]	; (8012f4c <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8012dca:	4618      	mov	r0, r3
 8012dcc:	f7ee f9e4 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8012dd0:	2312      	movs	r3, #18
 8012dd2:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8012dd6:	f207 1269 	addw	r2, r7, #361	; 0x169
 8012dda:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012dde:	33c4      	adds	r3, #196	; 0xc4
 8012de0:	495b      	ldr	r1, [pc, #364]	; (8012f50 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8012de2:	4618      	mov	r0, r3
 8012de4:	f7ee f988 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8012de8:	2313      	movs	r3, #19
 8012dea:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8012dee:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8012df2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012df6:	33e0      	adds	r3, #224	; 0xe0
 8012df8:	4956      	ldr	r1, [pc, #344]	; (8012f54 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8012dfa:	4618      	mov	r0, r3
 8012dfc:	f7ee f9a4 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8012e00:	2314      	movs	r3, #20
 8012e02:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8012e06:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8012e0a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012e0e:	33fc      	adds	r3, #252	; 0xfc
 8012e10:	4951      	ldr	r1, [pc, #324]	; (8012f58 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8012e12:	4618      	mov	r0, r3
 8012e14:	f7ee fa10 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8012e18:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8012e1c:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8012e20:	601a      	str	r2, [r3, #0]
 8012e22:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8012e26:	220a      	movs	r2, #10
 8012e28:	605a      	str	r2, [r3, #4]
 8012e2a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8012e2e:	4618      	mov	r0, r3
 8012e30:	f7ee fec9 	bl	8001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8012e34:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8012e38:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8012e3c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8012e40:	9300      	str	r3, [sp, #0]
 8012e42:	460b      	mov	r3, r1
 8012e44:	ca06      	ldmia	r2, {r1, r2}
 8012e46:	4845      	ldr	r0, [pc, #276]	; (8012f5c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8012e48:	f7ee fed5 	bl	8001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8012e4c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8012e50:	4618      	mov	r0, r3
 8012e52:	f7ee fec4 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8012e56:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8012e5a:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8012e5e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012e62:	429c      	cmp	r4, r3
 8012e64:	d004      	beq.n	8012e70 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8012e66:	3c1c      	subs	r4, #28
 8012e68:	4620      	mov	r0, r4
 8012e6a:	f7ee f938 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8012e6e:	e7f6      	b.n	8012e5e <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8012e70:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8012e74:	2200      	movs	r2, #0
 8012e76:	601a      	str	r2, [r3, #0]
 8012e78:	605a      	str	r2, [r3, #4]
 8012e7a:	609a      	str	r2, [r3, #8]
 8012e7c:	233c      	movs	r3, #60	; 0x3c
 8012e7e:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8012e82:	231b      	movs	r3, #27
 8012e84:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8012e88:	231c      	movs	r3, #28
 8012e8a:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8012e8e:	233e      	movs	r3, #62	; 0x3e
 8012e90:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8012e94:	2319      	movs	r3, #25
 8012e96:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8012e9a:	231a      	movs	r3, #26
 8012e9c:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8012ea0:	233d      	movs	r3, #61	; 0x3d
 8012ea2:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8012ea6:	2318      	movs	r3, #24
 8012ea8:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8012eac:	231d      	movs	r3, #29
 8012eae:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8012eb2:	2321      	movs	r3, #33	; 0x21
 8012eb4:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8012eb8:	2317      	movs	r3, #23
 8012eba:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8012ebe:	231e      	movs	r3, #30
 8012ec0:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8012ec4:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8012ec8:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8012ecc:	2304      	movs	r3, #4
 8012ece:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8012ed2:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8012ed6:	4618      	mov	r0, r3
 8012ed8:	f7ee febd 	bl	8001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8012edc:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8012ee0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8012ee4:	9300      	str	r3, [sp, #0]
 8012ee6:	4613      	mov	r3, r2
 8012ee8:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8012eec:	ca06      	ldmia	r2, {r1, r2}
 8012eee:	481c      	ldr	r0, [pc, #112]	; (8012f60 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8012ef0:	f7ee fec9 	bl	8001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8012ef4:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8012ef8:	4618      	mov	r0, r3
 8012efa:	f7ee feb8 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8012efe:	1d3b      	adds	r3, r7, #4
 8012f00:	681b      	ldr	r3, [r3, #0]
 8012f02:	2b00      	cmp	r3, #0
 8012f04:	d10e      	bne.n	8012f24 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8012f06:	463b      	mov	r3, r7
 8012f08:	681b      	ldr	r3, [r3, #0]
 8012f0a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012f0e:	4293      	cmp	r3, r2
 8012f10:	d108      	bne.n	8012f24 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8012f12:	4813      	ldr	r0, [pc, #76]	; (8012f60 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8012f14:	f7f6 fb49 	bl	80095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8012f18:	4810      	ldr	r0, [pc, #64]	; (8012f5c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8012f1a:	f7f6 fb53 	bl	80095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8012f1e:	4804      	ldr	r0, [pc, #16]	; (8012f30 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8012f20:	f7f6 fb5d 	bl	80095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8012f24:	bf00      	nop
 8012f26:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8012f2a:	46bd      	mov	sp, r7
 8012f2c:	bd90      	pop	{r4, r7, pc}
 8012f2e:	bf00      	nop
 8012f30:	200003c0 	.word	0x200003c0
 8012f34:	08027550 	.word	0x08027550
 8012f38:	08027558 	.word	0x08027558
 8012f3c:	08027560 	.word	0x08027560
 8012f40:	08027568 	.word	0x08027568
 8012f44:	08027570 	.word	0x08027570
 8012f48:	08027578 	.word	0x08027578
 8012f4c:	0802757c 	.word	0x0802757c
 8012f50:	08027584 	.word	0x08027584
 8012f54:	0802758c 	.word	0x0802758c
 8012f58:	08027594 	.word	0x08027594
 8012f5c:	200003d8 	.word	0x200003d8
 8012f60:	200003f0 	.word	0x200003f0

08012f64 <_GLOBAL__sub_I__ZN14Method_handlerC2Ev>:
 8012f64:	b580      	push	{r7, lr}
 8012f66:	af00      	add	r7, sp, #0
 8012f68:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012f6c:	2001      	movs	r0, #1
 8012f6e:	f7ff fe1d 	bl	8012bac <_Z41__static_initialization_and_destruction_0ii>
 8012f72:	bd80      	pop	{r7, pc}

08012f74 <_GLOBAL__sub_D__ZN14Method_handlerC2Ev>:
 8012f74:	b580      	push	{r7, lr}
 8012f76:	af00      	add	r7, sp, #0
 8012f78:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012f7c:	2000      	movs	r0, #0
 8012f7e:	f7ff fe15 	bl	8012bac <_Z41__static_initialization_and_destruction_0ii>
 8012f82:	bd80      	pop	{r7, pc}

08012f84 <_ZN6ParserC1Ev>:
	delete setup;
	delete loop;
	delete finish;
}

Parser::Parser()
 8012f84:	b580      	push	{r7, lr}
 8012f86:	b082      	sub	sp, #8
 8012f88:	af00      	add	r7, sp, #0
 8012f8a:	6078      	str	r0, [r7, #4]
 8012f8c:	687b      	ldr	r3, [r7, #4]
 8012f8e:	4618      	mov	r0, r3
 8012f90:	f7fb ffb5 	bl	800eefe <_ZN5TokenC1Ev>
{

}
 8012f94:	687b      	ldr	r3, [r7, #4]
 8012f96:	4618      	mov	r0, r3
 8012f98:	3708      	adds	r7, #8
 8012f9a:	46bd      	mov	sp, r7
 8012f9c:	bd80      	pop	{r7, pc}
	...

08012fa0 <_ZN6Parser11parse_whileEv>:

While_statement* Parser::parse_while()
{
 8012fa0:	b580      	push	{r7, lr}
 8012fa2:	b092      	sub	sp, #72	; 0x48
 8012fa4:	af00      	add	r7, sp, #0
 8012fa6:	6078      	str	r0, [r7, #4]
	auto st = new While_statement();
 8012fa8:	2008      	movs	r0, #8
 8012faa:	f00f fa78 	bl	802249e <_Znwj>
 8012fae:	4603      	mov	r3, r0
 8012fb0:	2200      	movs	r2, #0
 8012fb2:	601a      	str	r2, [r3, #0]
 8012fb4:	2200      	movs	r2, #0
 8012fb6:	605a      	str	r2, [r3, #4]
 8012fb8:	647b      	str	r3, [r7, #68]	; 0x44
	st->condition = parse_expression();
 8012fba:	6878      	ldr	r0, [r7, #4]
 8012fbc:	f007 fbac 	bl	801a718 <_ZN6Parser16parse_expressionEv>
 8012fc0:	4602      	mov	r2, r0
 8012fc2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8012fc4:	601a      	str	r2, [r3, #0]
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 8012fc6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8012fca:	4618      	mov	r0, r3
 8012fcc:	f00f fa78 	bl	80224c0 <_ZNSaIcEC1Ev>
 8012fd0:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8012fd4:	f107 030c 	add.w	r3, r7, #12
 8012fd8:	4921      	ldr	r1, [pc, #132]	; (8013060 <_ZN6Parser11parse_whileEv+0xc0>)
 8012fda:	4618      	mov	r0, r3
 8012fdc:	f7ee fda1 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8012fe0:	f107 030c 	add.w	r3, r7, #12
 8012fe4:	461a      	mov	r2, r3
 8012fe6:	210a      	movs	r1, #10
 8012fe8:	6878      	ldr	r0, [r7, #4]
 8012fea:	f000 fad5 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8012fee:	f107 030c 	add.w	r3, r7, #12
 8012ff2:	4618      	mov	r0, r3
 8012ff4:	f00f fcf5 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8012ff8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8012ffc:	4618      	mov	r0, r3
 8012ffe:	f00f fa60 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013002:	6878      	ldr	r0, [r7, #4]
 8013004:	f000 fdeb 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	st->while_body = parse_body();
 8013008:	6878      	ldr	r0, [r7, #4]
 801300a:	f000 fd85 	bl	8013b18 <_ZN6Parser10parse_bodyEv>
 801300e:	4602      	mov	r2, r0
 8013010:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8013012:	605a      	str	r2, [r3, #4]
	assert_token(TOKEN_END, "\"end\" after if body");
 8013014:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013018:	4618      	mov	r0, r3
 801301a:	f00f fa51 	bl	80224c0 <_ZNSaIcEC1Ev>
 801301e:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8013022:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013026:	490f      	ldr	r1, [pc, #60]	; (8013064 <_ZN6Parser11parse_whileEv+0xc4>)
 8013028:	4618      	mov	r0, r3
 801302a:	f7ee fd7a 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801302e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013032:	461a      	mov	r2, r3
 8013034:	2114      	movs	r1, #20
 8013036:	6878      	ldr	r0, [r7, #4]
 8013038:	f000 faae 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801303c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013040:	4618      	mov	r0, r3
 8013042:	f00f fcce 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013046:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801304a:	4618      	mov	r0, r3
 801304c:	f00f fa39 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013050:	6878      	ldr	r0, [r7, #4]
 8013052:	f000 fdc4 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	return st;
 8013056:	6c7b      	ldr	r3, [r7, #68]	; 0x44
}
 8013058:	4618      	mov	r0, r3
 801305a:	3748      	adds	r7, #72	; 0x48
 801305c:	46bd      	mov	sp, r7
 801305e:	bd80      	pop	{r7, pc}
 8013060:	08027598 	.word	0x08027598
 8013064:	080275c0 	.word	0x080275c0

08013068 <_ZN6Parser20parse_elseif_contentEP12If_statement>:

void Parser::parse_elseif_content(If_statement *st)
{
 8013068:	b590      	push	{r4, r7, lr}
 801306a:	b08d      	sub	sp, #52	; 0x34
 801306c:	af00      	add	r7, sp, #0
 801306e:	6078      	str	r0, [r7, #4]
 8013070:	6039      	str	r1, [r7, #0]
	get_next_token();
 8013072:	6878      	ldr	r0, [r7, #4]
 8013074:	f000 fdb3 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	st->conditions.push_back(parse_expression());
 8013078:	683c      	ldr	r4, [r7, #0]
 801307a:	6878      	ldr	r0, [r7, #4]
 801307c:	f007 fb4c 	bl	801a718 <_ZN6Parser16parse_expressionEv>
 8013080:	4603      	mov	r3, r0
 8013082:	60fb      	str	r3, [r7, #12]
 8013084:	f107 030c 	add.w	r3, r7, #12
 8013088:	4619      	mov	r1, r3
 801308a:	4620      	mov	r0, r4
 801308c:	f000 ff60 	bl	8013f50 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 8013090:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013094:	4618      	mov	r0, r3
 8013096:	f00f fa13 	bl	80224c0 <_ZNSaIcEC1Ev>
 801309a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 801309e:	f107 0310 	add.w	r3, r7, #16
 80130a2:	4915      	ldr	r1, [pc, #84]	; (80130f8 <_ZN6Parser20parse_elseif_contentEP12If_statement+0x90>)
 80130a4:	4618      	mov	r0, r3
 80130a6:	f7ee fd3c 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80130aa:	f107 0310 	add.w	r3, r7, #16
 80130ae:	461a      	mov	r2, r3
 80130b0:	210a      	movs	r1, #10
 80130b2:	6878      	ldr	r0, [r7, #4]
 80130b4:	f000 fa70 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80130b8:	f107 0310 	add.w	r3, r7, #16
 80130bc:	4618      	mov	r0, r3
 80130be:	f00f fc90 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80130c2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80130c6:	4618      	mov	r0, r3
 80130c8:	f00f f9fb 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 80130cc:	6878      	ldr	r0, [r7, #4]
 80130ce:	f000 fd86 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 80130d2:	683b      	ldr	r3, [r7, #0]
 80130d4:	f103 040c 	add.w	r4, r3, #12
 80130d8:	6878      	ldr	r0, [r7, #4]
 80130da:	f000 fd1d 	bl	8013b18 <_ZN6Parser10parse_bodyEv>
 80130de:	4603      	mov	r3, r0
 80130e0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80130e2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80130e6:	4619      	mov	r1, r3
 80130e8:	4620      	mov	r0, r4
 80130ea:	f000 ff42 	bl	8013f72 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 80130ee:	bf00      	nop
 80130f0:	3734      	adds	r7, #52	; 0x34
 80130f2:	46bd      	mov	sp, r7
 80130f4:	bd90      	pop	{r4, r7, pc}
 80130f6:	bf00      	nop
 80130f8:	08027598 	.word	0x08027598

080130fc <_ZN6Parser18parse_else_contentEP12If_statement>:

void Parser::parse_else_content(If_statement *st)
{
 80130fc:	b590      	push	{r4, r7, lr}
 80130fe:	b08b      	sub	sp, #44	; 0x2c
 8013100:	af00      	add	r7, sp, #0
 8013102:	6078      	str	r0, [r7, #4]
 8013104:	6039      	str	r1, [r7, #0]
	get_next_token();
 8013106:	6878      	ldr	r0, [r7, #4]
 8013108:	f000 fd69 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after \"else\"");
 801310c:	f107 0320 	add.w	r3, r7, #32
 8013110:	4618      	mov	r0, r3
 8013112:	f00f f9d5 	bl	80224c0 <_ZNSaIcEC1Ev>
 8013116:	f107 0220 	add.w	r2, r7, #32
 801311a:	f107 0308 	add.w	r3, r7, #8
 801311e:	4915      	ldr	r1, [pc, #84]	; (8013174 <_ZN6Parser18parse_else_contentEP12If_statement+0x78>)
 8013120:	4618      	mov	r0, r3
 8013122:	f7ee fcfe 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013126:	f107 0308 	add.w	r3, r7, #8
 801312a:	461a      	mov	r2, r3
 801312c:	210a      	movs	r1, #10
 801312e:	6878      	ldr	r0, [r7, #4]
 8013130:	f000 fa32 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013134:	f107 0308 	add.w	r3, r7, #8
 8013138:	4618      	mov	r0, r3
 801313a:	f00f fc52 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801313e:	f107 0320 	add.w	r3, r7, #32
 8013142:	4618      	mov	r0, r3
 8013144:	f00f f9bd 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013148:	6878      	ldr	r0, [r7, #4]
 801314a:	f000 fd48 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 801314e:	683b      	ldr	r3, [r7, #0]
 8013150:	f103 040c 	add.w	r4, r3, #12
 8013154:	6878      	ldr	r0, [r7, #4]
 8013156:	f000 fcdf 	bl	8013b18 <_ZN6Parser10parse_bodyEv>
 801315a:	4603      	mov	r3, r0
 801315c:	627b      	str	r3, [r7, #36]	; 0x24
 801315e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013162:	4619      	mov	r1, r3
 8013164:	4620      	mov	r0, r4
 8013166:	f000 ff04 	bl	8013f72 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 801316a:	bf00      	nop
 801316c:	372c      	adds	r7, #44	; 0x2c
 801316e:	46bd      	mov	sp, r7
 8013170:	bd90      	pop	{r4, r7, pc}
 8013172:	bf00      	nop
 8013174:	080275d4 	.word	0x080275d4

08013178 <_ZN6Parser16parse_if_contentEP12If_statement>:

void Parser::parse_if_content(If_statement *st)
{
 8013178:	b590      	push	{r4, r7, lr}
 801317a:	b08d      	sub	sp, #52	; 0x34
 801317c:	af00      	add	r7, sp, #0
 801317e:	6078      	str	r0, [r7, #4]
 8013180:	6039      	str	r1, [r7, #0]
	st->conditions.push_back(parse_expression());
 8013182:	683c      	ldr	r4, [r7, #0]
 8013184:	6878      	ldr	r0, [r7, #4]
 8013186:	f007 fac7 	bl	801a718 <_ZN6Parser16parse_expressionEv>
 801318a:	4603      	mov	r3, r0
 801318c:	60fb      	str	r3, [r7, #12]
 801318e:	f107 030c 	add.w	r3, r7, #12
 8013192:	4619      	mov	r1, r3
 8013194:	4620      	mov	r0, r4
 8013196:	f000 fedb 	bl	8013f50 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 801319a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801319e:	4618      	mov	r0, r3
 80131a0:	f00f f98e 	bl	80224c0 <_ZNSaIcEC1Ev>
 80131a4:	f107 0228 	add.w	r2, r7, #40	; 0x28
 80131a8:	f107 0310 	add.w	r3, r7, #16
 80131ac:	4914      	ldr	r1, [pc, #80]	; (8013200 <_ZN6Parser16parse_if_contentEP12If_statement+0x88>)
 80131ae:	4618      	mov	r0, r3
 80131b0:	f7ee fcb7 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80131b4:	f107 0310 	add.w	r3, r7, #16
 80131b8:	461a      	mov	r2, r3
 80131ba:	210a      	movs	r1, #10
 80131bc:	6878      	ldr	r0, [r7, #4]
 80131be:	f000 f9eb 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80131c2:	f107 0310 	add.w	r3, r7, #16
 80131c6:	4618      	mov	r0, r3
 80131c8:	f00f fc0b 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80131cc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80131d0:	4618      	mov	r0, r3
 80131d2:	f00f f976 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 80131d6:	6878      	ldr	r0, [r7, #4]
 80131d8:	f000 fd01 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 80131dc:	683b      	ldr	r3, [r7, #0]
 80131de:	f103 040c 	add.w	r4, r3, #12
 80131e2:	6878      	ldr	r0, [r7, #4]
 80131e4:	f000 fc98 	bl	8013b18 <_ZN6Parser10parse_bodyEv>
 80131e8:	4603      	mov	r3, r0
 80131ea:	62fb      	str	r3, [r7, #44]	; 0x2c
 80131ec:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80131f0:	4619      	mov	r1, r3
 80131f2:	4620      	mov	r0, r4
 80131f4:	f000 febd 	bl	8013f72 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 80131f8:	bf00      	nop
 80131fa:	3734      	adds	r7, #52	; 0x34
 80131fc:	46bd      	mov	sp, r7
 80131fe:	bd90      	pop	{r4, r7, pc}
 8013200:	08027598 	.word	0x08027598

08013204 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 8013204:	b580      	push	{r7, lr}
 8013206:	b082      	sub	sp, #8
 8013208:	af00      	add	r7, sp, #0
 801320a:	6078      	str	r0, [r7, #4]
 801320c:	687b      	ldr	r3, [r7, #4]
 801320e:	4618      	mov	r0, r3
 8013210:	f000 fec0 	bl	8013f94 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1Ev>
 8013214:	687b      	ldr	r3, [r7, #4]
 8013216:	4618      	mov	r0, r3
 8013218:	3708      	adds	r7, #8
 801321a:	46bd      	mov	sp, r7
 801321c:	bd80      	pop	{r7, pc}

0801321e <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>:
      vector() = default;
 801321e:	b580      	push	{r7, lr}
 8013220:	b082      	sub	sp, #8
 8013222:	af00      	add	r7, sp, #0
 8013224:	6078      	str	r0, [r7, #4]
 8013226:	687b      	ldr	r3, [r7, #4]
 8013228:	4618      	mov	r0, r3
 801322a:	f7ff ffeb 	bl	8013204 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1Ev>
 801322e:	687b      	ldr	r3, [r7, #4]
 8013230:	4618      	mov	r0, r3
 8013232:	3708      	adds	r7, #8
 8013234:	46bd      	mov	sp, r7
 8013236:	bd80      	pop	{r7, pc}

08013238 <_ZNSt12_Vector_baseIP4BodySaIS1_EEC1Ev>:
      _Vector_base() = default;
 8013238:	b580      	push	{r7, lr}
 801323a:	b082      	sub	sp, #8
 801323c:	af00      	add	r7, sp, #0
 801323e:	6078      	str	r0, [r7, #4]
 8013240:	687b      	ldr	r3, [r7, #4]
 8013242:	4618      	mov	r0, r3
 8013244:	f000 feb6 	bl	8013fb4 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implC1Ev>
 8013248:	687b      	ldr	r3, [r7, #4]
 801324a:	4618      	mov	r0, r3
 801324c:	3708      	adds	r7, #8
 801324e:	46bd      	mov	sp, r7
 8013250:	bd80      	pop	{r7, pc}

08013252 <_ZNSt6vectorIP4BodySaIS1_EEC1Ev>:
      vector() = default;
 8013252:	b580      	push	{r7, lr}
 8013254:	b082      	sub	sp, #8
 8013256:	af00      	add	r7, sp, #0
 8013258:	6078      	str	r0, [r7, #4]
 801325a:	687b      	ldr	r3, [r7, #4]
 801325c:	4618      	mov	r0, r3
 801325e:	f7ff ffeb 	bl	8013238 <_ZNSt12_Vector_baseIP4BodySaIS1_EEC1Ev>
 8013262:	687b      	ldr	r3, [r7, #4]
 8013264:	4618      	mov	r0, r3
 8013266:	3708      	adds	r7, #8
 8013268:	46bd      	mov	sp, r7
 801326a:	bd80      	pop	{r7, pc}

0801326c <_ZN12If_statementC1Ev>:
public:
	~Body();
	std::vector<Statement*> statements;
};

class If_statement
 801326c:	b580      	push	{r7, lr}
 801326e:	b082      	sub	sp, #8
 8013270:	af00      	add	r7, sp, #0
 8013272:	6078      	str	r0, [r7, #4]
 8013274:	687b      	ldr	r3, [r7, #4]
 8013276:	4618      	mov	r0, r3
 8013278:	f7ff ffd1 	bl	801321e <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>
 801327c:	687b      	ldr	r3, [r7, #4]
 801327e:	330c      	adds	r3, #12
 8013280:	4618      	mov	r0, r3
 8013282:	f7ff ffe6 	bl	8013252 <_ZNSt6vectorIP4BodySaIS1_EEC1Ev>
 8013286:	687b      	ldr	r3, [r7, #4]
 8013288:	4618      	mov	r0, r3
 801328a:	3708      	adds	r7, #8
 801328c:	46bd      	mov	sp, r7
 801328e:	bd80      	pop	{r7, pc}

08013290 <_ZN6Parser8parse_ifEv>:

If_statement* Parser::parse_if()
{
 8013290:	b590      	push	{r4, r7, lr}
 8013292:	b08b      	sub	sp, #44	; 0x2c
 8013294:	af00      	add	r7, sp, #0
 8013296:	6078      	str	r0, [r7, #4]
	auto st = new If_statement();
 8013298:	2018      	movs	r0, #24
 801329a:	f00f f900 	bl	802249e <_Znwj>
 801329e:	4603      	mov	r3, r0
 80132a0:	461c      	mov	r4, r3
 80132a2:	4622      	mov	r2, r4
 80132a4:	2300      	movs	r3, #0
 80132a6:	6013      	str	r3, [r2, #0]
 80132a8:	6053      	str	r3, [r2, #4]
 80132aa:	6093      	str	r3, [r2, #8]
 80132ac:	60d3      	str	r3, [r2, #12]
 80132ae:	6113      	str	r3, [r2, #16]
 80132b0:	6153      	str	r3, [r2, #20]
 80132b2:	4620      	mov	r0, r4
 80132b4:	f7ff ffda 	bl	801326c <_ZN12If_statementC1Ev>
 80132b8:	627c      	str	r4, [r7, #36]	; 0x24

	parse_if_content(st);
 80132ba:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80132bc:	6878      	ldr	r0, [r7, #4]
 80132be:	f7ff ff5b 	bl	8013178 <_ZN6Parser16parse_if_contentEP12If_statement>
	while (token_buffer.type == TOKEN_ELSEIF)
 80132c2:	687b      	ldr	r3, [r7, #4]
 80132c4:	781b      	ldrb	r3, [r3, #0]
 80132c6:	2b11      	cmp	r3, #17
 80132c8:	d104      	bne.n	80132d4 <_ZN6Parser8parse_ifEv+0x44>
	{
		parse_elseif_content(st);
 80132ca:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80132cc:	6878      	ldr	r0, [r7, #4]
 80132ce:	f7ff fecb 	bl	8013068 <_ZN6Parser20parse_elseif_contentEP12If_statement>
	while (token_buffer.type == TOKEN_ELSEIF)
 80132d2:	e7f6      	b.n	80132c2 <_ZN6Parser8parse_ifEv+0x32>
	}
	if (token_buffer.type == TOKEN_ELSE)
 80132d4:	687b      	ldr	r3, [r7, #4]
 80132d6:	781b      	ldrb	r3, [r3, #0]
 80132d8:	2b12      	cmp	r3, #18
 80132da:	d103      	bne.n	80132e4 <_ZN6Parser8parse_ifEv+0x54>
	{
		parse_else_content(st);
 80132dc:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80132de:	6878      	ldr	r0, [r7, #4]
 80132e0:	f7ff ff0c 	bl	80130fc <_ZN6Parser18parse_else_contentEP12If_statement>
	}
	assert_token(TOKEN_END, "\"end\" after if body");
 80132e4:	f107 0320 	add.w	r3, r7, #32
 80132e8:	4618      	mov	r0, r3
 80132ea:	f00f f8e9 	bl	80224c0 <_ZNSaIcEC1Ev>
 80132ee:	f107 0220 	add.w	r2, r7, #32
 80132f2:	f107 0308 	add.w	r3, r7, #8
 80132f6:	490e      	ldr	r1, [pc, #56]	; (8013330 <_ZN6Parser8parse_ifEv+0xa0>)
 80132f8:	4618      	mov	r0, r3
 80132fa:	f7ee fc12 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80132fe:	f107 0308 	add.w	r3, r7, #8
 8013302:	461a      	mov	r2, r3
 8013304:	2114      	movs	r1, #20
 8013306:	6878      	ldr	r0, [r7, #4]
 8013308:	f000 f946 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801330c:	f107 0308 	add.w	r3, r7, #8
 8013310:	4618      	mov	r0, r3
 8013312:	f00f fb66 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013316:	f107 0320 	add.w	r3, r7, #32
 801331a:	4618      	mov	r0, r3
 801331c:	f00f f8d1 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013320:	6878      	ldr	r0, [r7, #4]
 8013322:	f000 fc5c 	bl	8013bde <_ZN6Parser14get_next_tokenEv>

	return st;
 8013326:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 8013328:	4618      	mov	r0, r3
 801332a:	372c      	adds	r7, #44	; 0x2c
 801332c:	46bd      	mov	sp, r7
 801332e:	bd90      	pop	{r4, r7, pc}
 8013330:	080275c0 	.word	0x080275c0

08013334 <_ZN6Parser20parse_variable_indexEP8Variable>:

void Parser::parse_variable_index(Variable *var)
{
 8013334:	b580      	push	{r7, lr}
 8013336:	b08a      	sub	sp, #40	; 0x28
 8013338:	af00      	add	r7, sp, #0
 801333a:	6078      	str	r0, [r7, #4]
 801333c:	6039      	str	r1, [r7, #0]
	if (token_buffer.type == TOKEN_LEFT_SQUARE)
 801333e:	687b      	ldr	r3, [r7, #4]
 8013340:	781b      	ldrb	r3, [r3, #0]
 8013342:	2b0d      	cmp	r3, #13
 8013344:	d12a      	bne.n	801339c <_ZN6Parser20parse_variable_indexEP8Variable+0x68>
	{
		get_next_token();
 8013346:	6878      	ldr	r0, [r7, #4]
 8013348:	f000 fc49 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		var->index = parse_expression();
 801334c:	6878      	ldr	r0, [r7, #4]
 801334e:	f007 f9e3 	bl	801a718 <_ZN6Parser16parse_expressionEv>
 8013352:	4602      	mov	r2, r0
 8013354:	683b      	ldr	r3, [r7, #0]
 8013356:	61da      	str	r2, [r3, #28]
		assert_token(TOKEN_RIGHT_SQUARE, "closing square bracket");
 8013358:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801335c:	4618      	mov	r0, r3
 801335e:	f00f f8af 	bl	80224c0 <_ZNSaIcEC1Ev>
 8013362:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8013366:	f107 030c 	add.w	r3, r7, #12
 801336a:	4910      	ldr	r1, [pc, #64]	; (80133ac <_ZN6Parser20parse_variable_indexEP8Variable+0x78>)
 801336c:	4618      	mov	r0, r3
 801336e:	f7ee fbd8 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013372:	f107 030c 	add.w	r3, r7, #12
 8013376:	461a      	mov	r2, r3
 8013378:	210e      	movs	r1, #14
 801337a:	6878      	ldr	r0, [r7, #4]
 801337c:	f000 f90c 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013380:	f107 030c 	add.w	r3, r7, #12
 8013384:	4618      	mov	r0, r3
 8013386:	f00f fb2c 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801338a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801338e:	4618      	mov	r0, r3
 8013390:	f00f f897 	bl	80224c2 <_ZNSaIcED1Ev>
		get_next_token();
 8013394:	6878      	ldr	r0, [r7, #4]
 8013396:	f000 fc22 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	}
	else
	{
		var->index = nullptr;
	}
}
 801339a:	e002      	b.n	80133a2 <_ZN6Parser20parse_variable_indexEP8Variable+0x6e>
		var->index = nullptr;
 801339c:	683b      	ldr	r3, [r7, #0]
 801339e:	2200      	movs	r2, #0
 80133a0:	61da      	str	r2, [r3, #28]
}
 80133a2:	bf00      	nop
 80133a4:	3728      	adds	r7, #40	; 0x28
 80133a6:	46bd      	mov	sp, r7
 80133a8:	bd80      	pop	{r7, pc}
 80133aa:	bf00      	nop
 80133ac:	080275ec 	.word	0x080275ec

080133b0 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Parser::parse_member_selection_id(std::string &id)
{
 80133b0:	b580      	push	{r7, lr}
 80133b2:	b096      	sub	sp, #88	; 0x58
 80133b4:	af00      	add	r7, sp, #0
 80133b6:	6078      	str	r0, [r7, #4]
 80133b8:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_COLON, "colon operator \":\"");
 80133ba:	f107 0320 	add.w	r3, r7, #32
 80133be:	4618      	mov	r0, r3
 80133c0:	f00f f87e 	bl	80224c0 <_ZNSaIcEC1Ev>
 80133c4:	f107 0220 	add.w	r2, r7, #32
 80133c8:	f107 0308 	add.w	r3, r7, #8
 80133cc:	4929      	ldr	r1, [pc, #164]	; (8013474 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc4>)
 80133ce:	4618      	mov	r0, r3
 80133d0:	f7ee fba7 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80133d4:	f107 0308 	add.w	r3, r7, #8
 80133d8:	461a      	mov	r2, r3
 80133da:	2101      	movs	r1, #1
 80133dc:	6878      	ldr	r0, [r7, #4]
 80133de:	f000 f8db 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80133e2:	f107 0308 	add.w	r3, r7, #8
 80133e6:	4618      	mov	r0, r3
 80133e8:	f00f fafb 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80133ec:	f107 0320 	add.w	r3, r7, #32
 80133f0:	4618      	mov	r0, r3
 80133f2:	f00f f866 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 80133f6:	6878      	ldr	r0, [r7, #4]
 80133f8:	f000 fbf1 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_IDENTIFIER, "identifier");
 80133fc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013400:	4618      	mov	r0, r3
 8013402:	f00f f85d 	bl	80224c0 <_ZNSaIcEC1Ev>
 8013406:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 801340a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801340e:	491a      	ldr	r1, [pc, #104]	; (8013478 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc8>)
 8013410:	4618      	mov	r0, r3
 8013412:	f7ee fb86 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013416:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801341a:	461a      	mov	r2, r3
 801341c:	2102      	movs	r1, #2
 801341e:	6878      	ldr	r0, [r7, #4]
 8013420:	f000 f8ba 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013424:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013428:	4618      	mov	r0, r3
 801342a:	f00f fada 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801342e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013432:	4618      	mov	r0, r3
 8013434:	f00f f845 	bl	80224c2 <_ZNSaIcED1Ev>
	id = std::string(std::get<std::string>(token_buffer.value));
 8013438:	687b      	ldr	r3, [r7, #4]
 801343a:	3304      	adds	r3, #4
 801343c:	4618      	mov	r0, r3
 801343e:	f000 fdc9 	bl	8013fd4 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8013442:	4602      	mov	r2, r0
 8013444:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013448:	4611      	mov	r1, r2
 801344a:	4618      	mov	r0, r3
 801344c:	f00f fc8e 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8013450:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013454:	4619      	mov	r1, r3
 8013456:	6838      	ldr	r0, [r7, #0]
 8013458:	f00f facf 	bl	80229fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 801345c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013460:	4618      	mov	r0, r3
 8013462:	f00f fabe 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	get_next_token();
 8013466:	6878      	ldr	r0, [r7, #4]
 8013468:	f000 fbb9 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
}
 801346c:	bf00      	nop
 801346e:	3758      	adds	r7, #88	; 0x58
 8013470:	46bd      	mov	sp, r7
 8013472:	bd80      	pop	{r7, pc}
 8013474:	08027604 	.word	0x08027604
 8013478:	08027618 	.word	0x08027618

0801347c <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable>:

void Parser::parse_variable_id(std::string &id, Variable *var)
{
 801347c:	b580      	push	{r7, lr}
 801347e:	b08a      	sub	sp, #40	; 0x28
 8013480:	af00      	add	r7, sp, #0
 8013482:	60f8      	str	r0, [r7, #12]
 8013484:	60b9      	str	r1, [r7, #8]
 8013486:	607a      	str	r2, [r7, #4]
	if (id == "Arg")
 8013488:	491b      	ldr	r1, [pc, #108]	; (80134f8 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x7c>)
 801348a:	68b8      	ldr	r0, [r7, #8]
 801348c:	f000 fdae 	bl	8013fec <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 8013490:	4603      	mov	r3, r0
 8013492:	2b00      	cmp	r3, #0
 8013494:	d007      	beq.n	80134a6 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x2a>
	{
		var->type = VARIABLE_ARG;
 8013496:	687b      	ldr	r3, [r7, #4]
 8013498:	2201      	movs	r2, #1
 801349a:	701a      	strb	r2, [r3, #0]
		parse_member_selection_id(id);
 801349c:	68b9      	ldr	r1, [r7, #8]
 801349e:	68f8      	ldr	r0, [r7, #12]
 80134a0:	f7ff ff86 	bl	80133b0 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80134a4:	e011      	b.n	80134ca <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x4e>
	}
	else if (id == "Par")
 80134a6:	4915      	ldr	r1, [pc, #84]	; (80134fc <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x80>)
 80134a8:	68b8      	ldr	r0, [r7, #8]
 80134aa:	f000 fd9f 	bl	8013fec <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 80134ae:	4603      	mov	r3, r0
 80134b0:	2b00      	cmp	r3, #0
 80134b2:	d007      	beq.n	80134c4 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x48>
	{
		var->type = VARIABLE_PAR;
 80134b4:	687b      	ldr	r3, [r7, #4]
 80134b6:	2202      	movs	r2, #2
 80134b8:	701a      	strb	r2, [r3, #0]
		parse_member_selection_id(id);
 80134ba:	68b9      	ldr	r1, [r7, #8]
 80134bc:	68f8      	ldr	r0, [r7, #12]
 80134be:	f7ff ff77 	bl	80133b0 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80134c2:	e002      	b.n	80134ca <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x4e>
	}
	else
	{
		var->type = VARIABLE_LOCAL;
 80134c4:	687b      	ldr	r3, [r7, #4]
 80134c6:	2200      	movs	r2, #0
 80134c8:	701a      	strb	r2, [r3, #0]
	}

	var->id = std::string(id);
 80134ca:	f107 0310 	add.w	r3, r7, #16
 80134ce:	68b9      	ldr	r1, [r7, #8]
 80134d0:	4618      	mov	r0, r3
 80134d2:	f00f fc4b 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80134d6:	687b      	ldr	r3, [r7, #4]
 80134d8:	3304      	adds	r3, #4
 80134da:	f107 0210 	add.w	r2, r7, #16
 80134de:	4611      	mov	r1, r2
 80134e0:	4618      	mov	r0, r3
 80134e2:	f00f fa8a 	bl	80229fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 80134e6:	f107 0310 	add.w	r3, r7, #16
 80134ea:	4618      	mov	r0, r3
 80134ec:	f00f fa79 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 80134f0:	bf00      	nop
 80134f2:	3728      	adds	r7, #40	; 0x28
 80134f4:	46bd      	mov	sp, r7
 80134f6:	bd80      	pop	{r7, pc}
 80134f8:	08027624 	.word	0x08027624
 80134fc:	08027628 	.word	0x08027628

08013500 <_ZN8VariableC1Ev>:
 8013500:	b580      	push	{r7, lr}
 8013502:	b082      	sub	sp, #8
 8013504:	af00      	add	r7, sp, #0
 8013506:	6078      	str	r0, [r7, #4]
 8013508:	687b      	ldr	r3, [r7, #4]
 801350a:	3304      	adds	r3, #4
 801350c:	4618      	mov	r0, r3
 801350e:	f00f fa47 	bl	80229a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8013512:	687b      	ldr	r3, [r7, #4]
 8013514:	4618      	mov	r0, r3
 8013516:	3708      	adds	r7, #8
 8013518:	46bd      	mov	sp, r7
 801351a:	bd80      	pop	{r7, pc}

0801351c <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Variable* Parser::parse_variable(std::string &id)
{
 801351c:	b590      	push	{r4, r7, lr}
 801351e:	b085      	sub	sp, #20
 8013520:	af00      	add	r7, sp, #0
 8013522:	6078      	str	r0, [r7, #4]
 8013524:	6039      	str	r1, [r7, #0]
	auto var = new Variable();
 8013526:	2020      	movs	r0, #32
 8013528:	f00e ffb9 	bl	802249e <_Znwj>
 801352c:	4603      	mov	r3, r0
 801352e:	461c      	mov	r4, r3
 8013530:	4620      	mov	r0, r4
 8013532:	2320      	movs	r3, #32
 8013534:	461a      	mov	r2, r3
 8013536:	2100      	movs	r1, #0
 8013538:	f010 fc94 	bl	8023e64 <memset>
 801353c:	4620      	mov	r0, r4
 801353e:	f7ff ffdf 	bl	8013500 <_ZN8VariableC1Ev>
 8013542:	60fc      	str	r4, [r7, #12]
	parse_variable_id(id, var);
 8013544:	68fa      	ldr	r2, [r7, #12]
 8013546:	6839      	ldr	r1, [r7, #0]
 8013548:	6878      	ldr	r0, [r7, #4]
 801354a:	f7ff ff97 	bl	801347c <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable>
	parse_variable_index(var);
 801354e:	68f9      	ldr	r1, [r7, #12]
 8013550:	6878      	ldr	r0, [r7, #4]
 8013552:	f7ff feef 	bl	8013334 <_ZN6Parser20parse_variable_indexEP8Variable>
	return var;
 8013556:	68fb      	ldr	r3, [r7, #12]
}
 8013558:	4618      	mov	r0, r3
 801355a:	3714      	adds	r7, #20
 801355c:	46bd      	mov	sp, r7
 801355e:	bd90      	pop	{r4, r7, pc}

08013560 <_ZN6Parser16parse_assignmentEP8Variable>:

Assignment* Parser::parse_assignment(Variable* var)
{
 8013560:	b580      	push	{r7, lr}
 8013562:	b084      	sub	sp, #16
 8013564:	af00      	add	r7, sp, #0
 8013566:	6078      	str	r0, [r7, #4]
 8013568:	6039      	str	r1, [r7, #0]
	auto st = new Assignment();
 801356a:	2008      	movs	r0, #8
 801356c:	f00e ff97 	bl	802249e <_Znwj>
 8013570:	4603      	mov	r3, r0
 8013572:	2200      	movs	r2, #0
 8013574:	601a      	str	r2, [r3, #0]
 8013576:	2200      	movs	r2, #0
 8013578:	605a      	str	r2, [r3, #4]
 801357a:	60fb      	str	r3, [r7, #12]
	st->var = var;
 801357c:	68fb      	ldr	r3, [r7, #12]
 801357e:	683a      	ldr	r2, [r7, #0]
 8013580:	601a      	str	r2, [r3, #0]
	st->value = parse_expression();
 8013582:	6878      	ldr	r0, [r7, #4]
 8013584:	f007 f8c8 	bl	801a718 <_ZN6Parser16parse_expressionEv>
 8013588:	4602      	mov	r2, r0
 801358a:	68fb      	ldr	r3, [r7, #12]
 801358c:	605a      	str	r2, [r3, #4]
	return st;
 801358e:	68fb      	ldr	r3, [r7, #12]
}
 8013590:	4618      	mov	r0, r3
 8013592:	3710      	adds	r7, #16
 8013594:	46bd      	mov	sp, r7
 8013596:	bd80      	pop	{r7, pc}

08013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Parser::assert_token(token_type type, const std::string message)
{
 8013598:	b580      	push	{r7, lr}
 801359a:	b096      	sub	sp, #88	; 0x58
 801359c:	af00      	add	r7, sp, #0
 801359e:	60f8      	str	r0, [r7, #12]
 80135a0:	460b      	mov	r3, r1
 80135a2:	607a      	str	r2, [r7, #4]
 80135a4:	72fb      	strb	r3, [r7, #11]
	if (token_buffer.type != type)
 80135a6:	68fb      	ldr	r3, [r7, #12]
 80135a8:	781b      	ldrb	r3, [r3, #0]
 80135aa:	7afa      	ldrb	r2, [r7, #11]
 80135ac:	429a      	cmp	r2, r3
 80135ae:	d02a      	beq.n	8013606 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6e>
	{
		std::string msg = "expected " + message + "\n";
 80135b0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80135b4:	687a      	ldr	r2, [r7, #4]
 80135b6:	4916      	ldr	r1, [pc, #88]	; (8013610 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78>)
 80135b8:	4618      	mov	r0, r3
 80135ba:	f7fa fd5a 	bl	800e072 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 80135be:	f107 0310 	add.w	r3, r7, #16
 80135c2:	f107 0128 	add.w	r1, r7, #40	; 0x28
 80135c6:	4a13      	ldr	r2, [pc, #76]	; (8013614 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>)
 80135c8:	4618      	mov	r0, r3
 80135ca:	f7fa fd77 	bl	800e0bc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 80135ce:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80135d2:	4618      	mov	r0, r3
 80135d4:	f00f fa05 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		Transmitter::report_error(msg);
 80135d8:	f107 0210 	add.w	r2, r7, #16
 80135dc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80135e0:	4611      	mov	r1, r2
 80135e2:	4618      	mov	r0, r3
 80135e4:	f00f fbc2 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80135e8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80135ec:	4618      	mov	r0, r3
 80135ee:	f005 f82f 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80135f2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80135f6:	4618      	mov	r0, r3
 80135f8:	f00f f9f3 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		std::string msg = "expected " + message + "\n";
 80135fc:	f107 0310 	add.w	r3, r7, #16
 8013600:	4618      	mov	r0, r3
 8013602:	f00f f9ee 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8013606:	bf00      	nop
 8013608:	3758      	adds	r7, #88	; 0x58
 801360a:	46bd      	mov	sp, r7
 801360c:	bd80      	pop	{r7, pc}
 801360e:	bf00      	nop
 8013610:	0802762c 	.word	0x0802762c
 8013614:	08027638 	.word	0x08027638

08013618 <_ZN6Parser24parse_function_argumentsEP13Function_call>:

void Parser::parse_function_arguments(Function_call *f)
{
 8013618:	b590      	push	{r4, r7, lr}
 801361a:	b085      	sub	sp, #20
 801361c:	af00      	add	r7, sp, #0
 801361e:	6078      	str	r0, [r7, #4]
 8013620:	6039      	str	r1, [r7, #0]
	if (token_buffer.type != TOKEN_RIGHT_BRACKET)
 8013622:	687b      	ldr	r3, [r7, #4]
 8013624:	781b      	ldrb	r3, [r3, #0]
 8013626:	2b27      	cmp	r3, #39	; 0x27
 8013628:	d023      	beq.n	8013672 <_ZN6Parser24parse_function_argumentsEP13Function_call+0x5a>
	{
		f->arguments.push_back(parse_expression());
 801362a:	683b      	ldr	r3, [r7, #0]
 801362c:	f103 0420 	add.w	r4, r3, #32
 8013630:	6878      	ldr	r0, [r7, #4]
 8013632:	f007 f871 	bl	801a718 <_ZN6Parser16parse_expressionEv>
 8013636:	4603      	mov	r3, r0
 8013638:	60bb      	str	r3, [r7, #8]
 801363a:	f107 0308 	add.w	r3, r7, #8
 801363e:	4619      	mov	r1, r3
 8013640:	4620      	mov	r0, r4
 8013642:	f000 fc85 	bl	8013f50 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
		while (token_buffer.type == TOKEN_COMA)
 8013646:	687b      	ldr	r3, [r7, #4]
 8013648:	781b      	ldrb	r3, [r3, #0]
 801364a:	2b0c      	cmp	r3, #12
 801364c:	d111      	bne.n	8013672 <_ZN6Parser24parse_function_argumentsEP13Function_call+0x5a>
		{
			get_next_token();
 801364e:	6878      	ldr	r0, [r7, #4]
 8013650:	f000 fac5 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
			f->arguments.push_back(parse_expression());
 8013654:	683b      	ldr	r3, [r7, #0]
 8013656:	f103 0420 	add.w	r4, r3, #32
 801365a:	6878      	ldr	r0, [r7, #4]
 801365c:	f007 f85c 	bl	801a718 <_ZN6Parser16parse_expressionEv>
 8013660:	4603      	mov	r3, r0
 8013662:	60fb      	str	r3, [r7, #12]
 8013664:	f107 030c 	add.w	r3, r7, #12
 8013668:	4619      	mov	r1, r3
 801366a:	4620      	mov	r0, r4
 801366c:	f000 fc70 	bl	8013f50 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
		while (token_buffer.type == TOKEN_COMA)
 8013670:	e7e9      	b.n	8013646 <_ZN6Parser24parse_function_argumentsEP13Function_call+0x2e>
		}
	}
}
 8013672:	bf00      	nop
 8013674:	3714      	adds	r7, #20
 8013676:	46bd      	mov	sp, r7
 8013678:	bd90      	pop	{r4, r7, pc}

0801367a <_ZN13Function_callC1Ev>:
	variable_type type;
	std::string id;
	Expression* index;
};

class Function_call
 801367a:	b580      	push	{r7, lr}
 801367c:	b082      	sub	sp, #8
 801367e:	af00      	add	r7, sp, #0
 8013680:	6078      	str	r0, [r7, #4]
 8013682:	687b      	ldr	r3, [r7, #4]
 8013684:	3308      	adds	r3, #8
 8013686:	4618      	mov	r0, r3
 8013688:	f00f f98a 	bl	80229a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 801368c:	687b      	ldr	r3, [r7, #4]
 801368e:	3320      	adds	r3, #32
 8013690:	4618      	mov	r0, r3
 8013692:	f7ff fdc4 	bl	801321e <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>
 8013696:	687b      	ldr	r3, [r7, #4]
 8013698:	4618      	mov	r0, r3
 801369a:	3708      	adds	r7, #8
 801369c:	46bd      	mov	sp, r7
 801369e:	bd80      	pop	{r7, pc}

080136a0 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Function_call* Parser::parse_function_call(std::string &id)
{
 80136a0:	b590      	push	{r4, r7, lr}
 80136a2:	b091      	sub	sp, #68	; 0x44
 80136a4:	af00      	add	r7, sp, #0
 80136a6:	6078      	str	r0, [r7, #4]
 80136a8:	6039      	str	r1, [r7, #0]
	auto f = new Function_call();
 80136aa:	202c      	movs	r0, #44	; 0x2c
 80136ac:	f00e fef7 	bl	802249e <_Znwj>
 80136b0:	4603      	mov	r3, r0
 80136b2:	461c      	mov	r4, r3
 80136b4:	4620      	mov	r0, r4
 80136b6:	232c      	movs	r3, #44	; 0x2c
 80136b8:	461a      	mov	r2, r3
 80136ba:	2100      	movs	r1, #0
 80136bc:	f010 fbd2 	bl	8023e64 <memset>
 80136c0:	4620      	mov	r0, r4
 80136c2:	f7ff ffda 	bl	801367a <_ZN13Function_callC1Ev>
 80136c6:	63fc      	str	r4, [r7, #60]	; 0x3c
	f->id = std::string(id);
 80136c8:	f107 0308 	add.w	r3, r7, #8
 80136cc:	6839      	ldr	r1, [r7, #0]
 80136ce:	4618      	mov	r0, r3
 80136d0:	f00f fb4c 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80136d4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80136d6:	3308      	adds	r3, #8
 80136d8:	f107 0208 	add.w	r2, r7, #8
 80136dc:	4611      	mov	r1, r2
 80136de:	4618      	mov	r0, r3
 80136e0:	f00f f98b 	bl	80229fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 80136e4:	f107 0308 	add.w	r3, r7, #8
 80136e8:	4618      	mov	r0, r3
 80136ea:	f00f f97a 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	f->line = Position_counter::get_instance().line;
 80136ee:	f002 fe65 	bl	80163bc <_ZN16Position_counter12get_instanceEv>
 80136f2:	4603      	mov	r3, r0
 80136f4:	681a      	ldr	r2, [r3, #0]
 80136f6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80136f8:	601a      	str	r2, [r3, #0]
	f->position = Position_counter::get_instance().position;
 80136fa:	f002 fe5f 	bl	80163bc <_ZN16Position_counter12get_instanceEv>
 80136fe:	4603      	mov	r3, r0
 8013700:	685a      	ldr	r2, [r3, #4]
 8013702:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8013704:	605a      	str	r2, [r3, #4]
	get_next_token();
 8013706:	6878      	ldr	r0, [r7, #4]
 8013708:	f000 fa69 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	parse_function_arguments(f);
 801370c:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 801370e:	6878      	ldr	r0, [r7, #4]
 8013710:	f7ff ff82 	bl	8013618 <_ZN6Parser24parse_function_argumentsEP13Function_call>
	assert_token(TOKEN_RIGHT_BRACKET, "closing bracket");
 8013714:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8013718:	4618      	mov	r0, r3
 801371a:	f00e fed1 	bl	80224c0 <_ZNSaIcEC1Ev>
 801371e:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8013722:	f107 0320 	add.w	r3, r7, #32
 8013726:	490e      	ldr	r1, [pc, #56]	; (8013760 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc0>)
 8013728:	4618      	mov	r0, r3
 801372a:	f7ee f9fa 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801372e:	f107 0320 	add.w	r3, r7, #32
 8013732:	461a      	mov	r2, r3
 8013734:	2127      	movs	r1, #39	; 0x27
 8013736:	6878      	ldr	r0, [r7, #4]
 8013738:	f7ff ff2e 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801373c:	f107 0320 	add.w	r3, r7, #32
 8013740:	4618      	mov	r0, r3
 8013742:	f00f f94e 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013746:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801374a:	4618      	mov	r0, r3
 801374c:	f00e feb9 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013750:	6878      	ldr	r0, [r7, #4]
 8013752:	f000 fa44 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	return f;
 8013756:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
}
 8013758:	4618      	mov	r0, r3
 801375a:	3744      	adds	r7, #68	; 0x44
 801375c:	46bd      	mov	sp, r7
 801375e:	bd90      	pop	{r4, r7, pc}
 8013760:	0802763c 	.word	0x0802763c

08013764 <_ZN6Parser17parse_method_callEP8Variable>:

Method_call* Parser::parse_method_call(Variable* var)
{
 8013764:	b590      	push	{r4, r7, lr}
 8013766:	b099      	sub	sp, #100	; 0x64
 8013768:	af00      	add	r7, sp, #0
 801376a:	6078      	str	r0, [r7, #4]
 801376c:	6039      	str	r1, [r7, #0]
	auto m = new Method_call();
 801376e:	2008      	movs	r0, #8
 8013770:	f00e fe95 	bl	802249e <_Znwj>
 8013774:	4603      	mov	r3, r0
 8013776:	2200      	movs	r2, #0
 8013778:	601a      	str	r2, [r3, #0]
 801377a:	2200      	movs	r2, #0
 801377c:	605a      	str	r2, [r3, #4]
 801377e:	65fb      	str	r3, [r7, #92]	; 0x5c
	m->vector = var;
 8013780:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8013782:	683a      	ldr	r2, [r7, #0]
 8013784:	601a      	str	r2, [r3, #0]
	assert_token(TOKEN_IDENTIFIER, "method identifier");
 8013786:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801378a:	4618      	mov	r0, r3
 801378c:	f00e fe98 	bl	80224c0 <_ZNSaIcEC1Ev>
 8013790:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8013794:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013798:	492a      	ldr	r1, [pc, #168]	; (8013844 <_ZN6Parser17parse_method_callEP8Variable+0xe0>)
 801379a:	4618      	mov	r0, r3
 801379c:	f7ee f9c1 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80137a0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80137a4:	461a      	mov	r2, r3
 80137a6:	2102      	movs	r1, #2
 80137a8:	6878      	ldr	r0, [r7, #4]
 80137aa:	f7ff fef5 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80137ae:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80137b2:	4618      	mov	r0, r3
 80137b4:	f00f f915 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80137b8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80137bc:	4618      	mov	r0, r3
 80137be:	f00e fe80 	bl	80224c2 <_ZNSaIcED1Ev>
	std::string id = std::get<std::string>(token_buffer.value);
 80137c2:	687b      	ldr	r3, [r7, #4]
 80137c4:	3304      	adds	r3, #4
 80137c6:	4618      	mov	r0, r3
 80137c8:	f000 fc04 	bl	8013fd4 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 80137cc:	4602      	mov	r2, r0
 80137ce:	f107 030c 	add.w	r3, r7, #12
 80137d2:	4611      	mov	r1, r2
 80137d4:	4618      	mov	r0, r3
 80137d6:	f00f fac9 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 80137da:	6878      	ldr	r0, [r7, #4]
 80137dc:	f000 f9ff 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_LEFT_BRACKET, "opening bracket");
 80137e0:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80137e4:	4618      	mov	r0, r3
 80137e6:	f00e fe6b 	bl	80224c0 <_ZNSaIcEC1Ev>
 80137ea:	f107 0258 	add.w	r2, r7, #88	; 0x58
 80137ee:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80137f2:	4915      	ldr	r1, [pc, #84]	; (8013848 <_ZN6Parser17parse_method_callEP8Variable+0xe4>)
 80137f4:	4618      	mov	r0, r3
 80137f6:	f7ee f994 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80137fa:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80137fe:	461a      	mov	r2, r3
 8013800:	2126      	movs	r1, #38	; 0x26
 8013802:	6878      	ldr	r0, [r7, #4]
 8013804:	f7ff fec8 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013808:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801380c:	4618      	mov	r0, r3
 801380e:	f00f f8e8 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013812:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8013816:	4618      	mov	r0, r3
 8013818:	f00e fe53 	bl	80224c2 <_ZNSaIcED1Ev>
	m->call = parse_function_call(id);
 801381c:	f107 030c 	add.w	r3, r7, #12
 8013820:	4619      	mov	r1, r3
 8013822:	6878      	ldr	r0, [r7, #4]
 8013824:	f7ff ff3c 	bl	80136a0 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013828:	4602      	mov	r2, r0
 801382a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801382c:	605a      	str	r2, [r3, #4]
	return m;
 801382e:	6dfc      	ldr	r4, [r7, #92]	; 0x5c
	std::string id = std::get<std::string>(token_buffer.value);
 8013830:	f107 030c 	add.w	r3, r7, #12
 8013834:	4618      	mov	r0, r3
 8013836:	f00f f8d4 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	return m;
 801383a:	4623      	mov	r3, r4
}
 801383c:	4618      	mov	r0, r3
 801383e:	3764      	adds	r7, #100	; 0x64
 8013840:	46bd      	mov	sp, r7
 8013842:	bd90      	pop	{r4, r7, pc}
 8013844:	0802764c 	.word	0x0802764c
 8013848:	08027660 	.word	0x08027660

0801384c <_ZN6Parser26parse_identifier_statementEP9Statement>:

void Parser::parse_identifier_statement(Statement *s)
{
 801384c:	b580      	push	{r7, lr}
 801384e:	b094      	sub	sp, #80	; 0x50
 8013850:	af00      	add	r7, sp, #0
 8013852:	6078      	str	r0, [r7, #4]
 8013854:	6039      	str	r1, [r7, #0]
	std::string id = std::get<std::string>(token_buffer.value);
 8013856:	687b      	ldr	r3, [r7, #4]
 8013858:	3304      	adds	r3, #4
 801385a:	4618      	mov	r0, r3
 801385c:	f000 fbba 	bl	8013fd4 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8013860:	4602      	mov	r2, r0
 8013862:	f107 030c 	add.w	r3, r7, #12
 8013866:	4611      	mov	r1, r2
 8013868:	4618      	mov	r0, r3
 801386a:	f00f fa7f 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 801386e:	6878      	ldr	r0, [r7, #4]
 8013870:	f000 f9b5 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	if (token_buffer.type == TOKEN_LEFT_BRACKET)
 8013874:	687b      	ldr	r3, [r7, #4]
 8013876:	781b      	ldrb	r3, [r3, #0]
 8013878:	2b26      	cmp	r3, #38	; 0x26
 801387a:	d113      	bne.n	80138a4 <_ZN6Parser26parse_identifier_statementEP9Statement+0x58>
	{
		s->type = STATEMENT_FUNCTION_CALL;
 801387c:	683b      	ldr	r3, [r7, #0]
 801387e:	2201      	movs	r2, #1
 8013880:	701a      	strb	r2, [r3, #0]
		s->content = parse_function_call(id);
 8013882:	f107 030c 	add.w	r3, r7, #12
 8013886:	4619      	mov	r1, r3
 8013888:	6878      	ldr	r0, [r7, #4]
 801388a:	f7ff ff09 	bl	80136a0 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801388e:	4603      	mov	r3, r0
 8013890:	627b      	str	r3, [r7, #36]	; 0x24
 8013892:	683b      	ldr	r3, [r7, #0]
 8013894:	3304      	adds	r3, #4
 8013896:	f107 0224 	add.w	r2, r7, #36	; 0x24
 801389a:	4611      	mov	r1, r2
 801389c:	4618      	mov	r0, r3
 801389e:	f000 fbb8 	bl	8014012 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 80138a2:	e051      	b.n	8013948 <_ZN6Parser26parse_identifier_statementEP9Statement+0xfc>
	}
	else
	{
		auto var = parse_variable(id);
 80138a4:	f107 030c 	add.w	r3, r7, #12
 80138a8:	4619      	mov	r1, r3
 80138aa:	6878      	ldr	r0, [r7, #4]
 80138ac:	f7ff fe36 	bl	801351c <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80138b0:	64f8      	str	r0, [r7, #76]	; 0x4c
		if(token_buffer.type == TOKEN_ASSIGN)
 80138b2:	687b      	ldr	r3, [r7, #4]
 80138b4:	781b      	ldrb	r3, [r3, #0]
 80138b6:	2b18      	cmp	r3, #24
 80138b8:	d114      	bne.n	80138e4 <_ZN6Parser26parse_identifier_statementEP9Statement+0x98>
		{
			s->type = STATEMENT_ASSIGNMENT;
 80138ba:	683b      	ldr	r3, [r7, #0]
 80138bc:	2200      	movs	r2, #0
 80138be:	701a      	strb	r2, [r3, #0]
			get_next_token();
 80138c0:	6878      	ldr	r0, [r7, #4]
 80138c2:	f000 f98c 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
			s->content = parse_assignment(var);
 80138c6:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 80138c8:	6878      	ldr	r0, [r7, #4]
 80138ca:	f7ff fe49 	bl	8013560 <_ZN6Parser16parse_assignmentEP8Variable>
 80138ce:	4603      	mov	r3, r0
 80138d0:	62bb      	str	r3, [r7, #40]	; 0x28
 80138d2:	683b      	ldr	r3, [r7, #0]
 80138d4:	3304      	adds	r3, #4
 80138d6:	f107 0228 	add.w	r2, r7, #40	; 0x28
 80138da:	4611      	mov	r1, r2
 80138dc:	4618      	mov	r0, r3
 80138de:	f000 fbc2 	bl	8014066 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 80138e2:	e031      	b.n	8013948 <_ZN6Parser26parse_identifier_statementEP9Statement+0xfc>
		}
		else
		{
			assert_token(TOKEN_DOT, "method call or assignment");
 80138e4:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80138e8:	4618      	mov	r0, r3
 80138ea:	f00e fde9 	bl	80224c0 <_ZNSaIcEC1Ev>
 80138ee:	f107 0244 	add.w	r2, r7, #68	; 0x44
 80138f2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80138f6:	4919      	ldr	r1, [pc, #100]	; (801395c <_ZN6Parser26parse_identifier_statementEP9Statement+0x110>)
 80138f8:	4618      	mov	r0, r3
 80138fa:	f7ee f912 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80138fe:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8013902:	461a      	mov	r2, r3
 8013904:	210b      	movs	r1, #11
 8013906:	6878      	ldr	r0, [r7, #4]
 8013908:	f7ff fe46 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801390c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8013910:	4618      	mov	r0, r3
 8013912:	f00f f866 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013916:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801391a:	4618      	mov	r0, r3
 801391c:	f00e fdd1 	bl	80224c2 <_ZNSaIcED1Ev>
			s->type = STATEMENT_METHOD_CALL;
 8013920:	683b      	ldr	r3, [r7, #0]
 8013922:	2202      	movs	r2, #2
 8013924:	701a      	strb	r2, [r3, #0]
			get_next_token();
 8013926:	6878      	ldr	r0, [r7, #4]
 8013928:	f000 f959 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
			s->content = parse_method_call(var);
 801392c:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 801392e:	6878      	ldr	r0, [r7, #4]
 8013930:	f7ff ff18 	bl	8013764 <_ZN6Parser17parse_method_callEP8Variable>
 8013934:	4603      	mov	r3, r0
 8013936:	64bb      	str	r3, [r7, #72]	; 0x48
 8013938:	683b      	ldr	r3, [r7, #0]
 801393a:	3304      	adds	r3, #4
 801393c:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8013940:	4611      	mov	r1, r2
 8013942:	4618      	mov	r0, r3
 8013944:	f000 fbb9 	bl	80140ba <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
	std::string id = std::get<std::string>(token_buffer.value);
 8013948:	f107 030c 	add.w	r3, r7, #12
 801394c:	4618      	mov	r0, r3
 801394e:	f00f f848 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		}
	}
}
 8013952:	bf00      	nop
 8013954:	3750      	adds	r7, #80	; 0x50
 8013956:	46bd      	mov	sp, r7
 8013958:	bd80      	pop	{r7, pc}
 801395a:	bf00      	nop
 801395c:	08027670 	.word	0x08027670

08013960 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>:
      variant() = default;
 8013960:	b580      	push	{r7, lr}
 8013962:	b082      	sub	sp, #8
 8013964:	af00      	add	r7, sp, #0
 8013966:	6078      	str	r0, [r7, #4]
 8013968:	687b      	ldr	r3, [r7, #4]
 801396a:	4618      	mov	r0, r3
 801396c:	f000 fc1a 	bl	80141a4 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>
 8013970:	687b      	ldr	r3, [r7, #4]
 8013972:	4618      	mov	r0, r3
 8013974:	3708      	adds	r7, #8
 8013976:	46bd      	mov	sp, r7
 8013978:	bd80      	pop	{r7, pc}

0801397a <_ZN9StatementC1Ev>:
	STATEMENT_IF
}statement_type;

typedef std::variant<Assignment*, Function_call*, Method_call*, While_statement*, If_statement*> statement_content;

class Statement
 801397a:	b580      	push	{r7, lr}
 801397c:	b082      	sub	sp, #8
 801397e:	af00      	add	r7, sp, #0
 8013980:	6078      	str	r0, [r7, #4]
 8013982:	687b      	ldr	r3, [r7, #4]
 8013984:	3304      	adds	r3, #4
 8013986:	4618      	mov	r0, r3
 8013988:	f7ff ffea 	bl	8013960 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>
 801398c:	687b      	ldr	r3, [r7, #4]
 801398e:	4618      	mov	r0, r3
 8013990:	3708      	adds	r7, #8
 8013992:	46bd      	mov	sp, r7
 8013994:	bd80      	pop	{r7, pc}
	...

08013998 <_ZN6Parser15parse_statementEv>:

Statement* Parser::parse_statement() //todo refactor
{
 8013998:	b590      	push	{r4, r7, lr}
 801399a:	b08d      	sub	sp, #52	; 0x34
 801399c:	af00      	add	r7, sp, #0
 801399e:	6078      	str	r0, [r7, #4]
	auto s = new Statement();
 80139a0:	200c      	movs	r0, #12
 80139a2:	f00e fd7c 	bl	802249e <_Znwj>
 80139a6:	4603      	mov	r3, r0
 80139a8:	461c      	mov	r4, r3
 80139aa:	2300      	movs	r3, #0
 80139ac:	7023      	strb	r3, [r4, #0]
 80139ae:	2300      	movs	r3, #0
 80139b0:	6063      	str	r3, [r4, #4]
 80139b2:	2300      	movs	r3, #0
 80139b4:	7223      	strb	r3, [r4, #8]
 80139b6:	4620      	mov	r0, r4
 80139b8:	f7ff ffdf 	bl	801397a <_ZN9StatementC1Ev>
 80139bc:	62fc      	str	r4, [r7, #44]	; 0x2c
	switch (token_buffer.type)
 80139be:	687b      	ldr	r3, [r7, #4]
 80139c0:	781b      	ldrb	r3, [r3, #0]
 80139c2:	2b13      	cmp	r3, #19
 80139c4:	d00b      	beq.n	80139de <_ZN6Parser15parse_statementEv+0x46>
 80139c6:	2b13      	cmp	r3, #19
 80139c8:	dc31      	bgt.n	8013a2e <_ZN6Parser15parse_statementEv+0x96>
 80139ca:	2b02      	cmp	r3, #2
 80139cc:	d002      	beq.n	80139d4 <_ZN6Parser15parse_statementEv+0x3c>
 80139ce:	2b10      	cmp	r3, #16
 80139d0:	d019      	beq.n	8013a06 <_ZN6Parser15parse_statementEv+0x6e>
 80139d2:	e02c      	b.n	8013a2e <_ZN6Parser15parse_statementEv+0x96>
	{
	case TOKEN_IDENTIFIER:
		parse_identifier_statement(s);
 80139d4:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80139d6:	6878      	ldr	r0, [r7, #4]
 80139d8:	f7ff ff38 	bl	801384c <_ZN6Parser26parse_identifier_statementEP9Statement>
		break;
 80139dc:	e044      	b.n	8013a68 <_ZN6Parser15parse_statementEv+0xd0>
	case TOKEN_WHILE:
		s->type = STATEMENT_WHILE;
 80139de:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80139e0:	2203      	movs	r2, #3
 80139e2:	701a      	strb	r2, [r3, #0]
		get_next_token();
 80139e4:	6878      	ldr	r0, [r7, #4]
 80139e6:	f000 f8fa 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		s->content = parse_while();
 80139ea:	6878      	ldr	r0, [r7, #4]
 80139ec:	f7ff fad8 	bl	8012fa0 <_ZN6Parser11parse_whileEv>
 80139f0:	4603      	mov	r3, r0
 80139f2:	60bb      	str	r3, [r7, #8]
 80139f4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80139f6:	3304      	adds	r3, #4
 80139f8:	f107 0208 	add.w	r2, r7, #8
 80139fc:	4611      	mov	r1, r2
 80139fe:	4618      	mov	r0, r3
 8013a00:	f000 fbdd 	bl	80141be <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8013a04:	e030      	b.n	8013a68 <_ZN6Parser15parse_statementEv+0xd0>
	case TOKEN_IF:
		s->type = STATEMENT_IF;
 8013a06:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013a08:	2204      	movs	r2, #4
 8013a0a:	701a      	strb	r2, [r3, #0]
		get_next_token();
 8013a0c:	6878      	ldr	r0, [r7, #4]
 8013a0e:	f000 f8e6 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		s->content = parse_if();
 8013a12:	6878      	ldr	r0, [r7, #4]
 8013a14:	f7ff fc3c 	bl	8013290 <_ZN6Parser8parse_ifEv>
 8013a18:	4603      	mov	r3, r0
 8013a1a:	60fb      	str	r3, [r7, #12]
 8013a1c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013a1e:	3304      	adds	r3, #4
 8013a20:	f107 020c 	add.w	r2, r7, #12
 8013a24:	4611      	mov	r1, r2
 8013a26:	4618      	mov	r0, r3
 8013a28:	f000 fbf3 	bl	8014212 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8013a2c:	e01c      	b.n	8013a68 <_ZN6Parser15parse_statementEv+0xd0>
	default:
		Transmitter::report_error("expected statement:\nidentifier, if, while\n");
 8013a2e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013a32:	4618      	mov	r0, r3
 8013a34:	f00e fd44 	bl	80224c0 <_ZNSaIcEC1Ev>
 8013a38:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8013a3c:	f107 0310 	add.w	r3, r7, #16
 8013a40:	490c      	ldr	r1, [pc, #48]	; (8013a74 <_ZN6Parser15parse_statementEv+0xdc>)
 8013a42:	4618      	mov	r0, r3
 8013a44:	f7ee f86d 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013a48:	f107 0310 	add.w	r3, r7, #16
 8013a4c:	4618      	mov	r0, r3
 8013a4e:	f004 fdff 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013a52:	f107 0310 	add.w	r3, r7, #16
 8013a56:	4618      	mov	r0, r3
 8013a58:	f00e ffc3 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013a5c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013a60:	4618      	mov	r0, r3
 8013a62:	f00e fd2e 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 8013a66:	bf00      	nop
	}
	return s;
 8013a68:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 8013a6a:	4618      	mov	r0, r3
 8013a6c:	3734      	adds	r7, #52	; 0x34
 8013a6e:	46bd      	mov	sp, r7
 8013a70:	bd90      	pop	{r4, r7, pc}
 8013a72:	bf00      	nop
 8013a74:	0802768c 	.word	0x0802768c

08013a78 <_ZN6Parser24is_token_statement_firstEv>:

bool Parser::is_token_statement_first()
{
 8013a78:	b480      	push	{r7}
 8013a7a:	b083      	sub	sp, #12
 8013a7c:	af00      	add	r7, sp, #0
 8013a7e:	6078      	str	r0, [r7, #4]
	return token_buffer.type == TOKEN_IDENTIFIER
 8013a80:	687b      	ldr	r3, [r7, #4]
 8013a82:	781b      	ldrb	r3, [r3, #0]
			|| token_buffer.type == TOKEN_WHILE
			|| token_buffer.type == TOKEN_IF;
 8013a84:	2b02      	cmp	r3, #2
 8013a86:	d007      	beq.n	8013a98 <_ZN6Parser24is_token_statement_firstEv+0x20>
			|| token_buffer.type == TOKEN_WHILE
 8013a88:	687b      	ldr	r3, [r7, #4]
 8013a8a:	781b      	ldrb	r3, [r3, #0]
 8013a8c:	2b13      	cmp	r3, #19
 8013a8e:	d003      	beq.n	8013a98 <_ZN6Parser24is_token_statement_firstEv+0x20>
			|| token_buffer.type == TOKEN_IF;
 8013a90:	687b      	ldr	r3, [r7, #4]
 8013a92:	781b      	ldrb	r3, [r3, #0]
 8013a94:	2b10      	cmp	r3, #16
 8013a96:	d101      	bne.n	8013a9c <_ZN6Parser24is_token_statement_firstEv+0x24>
 8013a98:	2301      	movs	r3, #1
 8013a9a:	e000      	b.n	8013a9e <_ZN6Parser24is_token_statement_firstEv+0x26>
 8013a9c:	2300      	movs	r3, #0
}
 8013a9e:	4618      	mov	r0, r3
 8013aa0:	370c      	adds	r7, #12
 8013aa2:	46bd      	mov	sp, r7
 8013aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013aa8:	4770      	bx	lr

08013aaa <_ZN6Parser13skip_newlinesEv>:

void Parser::skip_newlines()
{
 8013aaa:	b580      	push	{r7, lr}
 8013aac:	b082      	sub	sp, #8
 8013aae:	af00      	add	r7, sp, #0
 8013ab0:	6078      	str	r0, [r7, #4]
	while (token_buffer.type == TOKEN_NEWLINE)
 8013ab2:	687b      	ldr	r3, [r7, #4]
 8013ab4:	781b      	ldrb	r3, [r3, #0]
 8013ab6:	2b0a      	cmp	r3, #10
 8013ab8:	d103      	bne.n	8013ac2 <_ZN6Parser13skip_newlinesEv+0x18>
	{
		get_next_token();
 8013aba:	6878      	ldr	r0, [r7, #4]
 8013abc:	f000 f88f 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	while (token_buffer.type == TOKEN_NEWLINE)
 8013ac0:	e7f7      	b.n	8013ab2 <_ZN6Parser13skip_newlinesEv+0x8>
	}
}
 8013ac2:	bf00      	nop
 8013ac4:	3708      	adds	r7, #8
 8013ac6:	46bd      	mov	sp, r7
 8013ac8:	bd80      	pop	{r7, pc}

08013aca <_ZNSt12_Vector_baseIP9StatementSaIS1_EEC1Ev>:
      _Vector_base() = default;
 8013aca:	b580      	push	{r7, lr}
 8013acc:	b082      	sub	sp, #8
 8013ace:	af00      	add	r7, sp, #0
 8013ad0:	6078      	str	r0, [r7, #4]
 8013ad2:	687b      	ldr	r3, [r7, #4]
 8013ad4:	4618      	mov	r0, r3
 8013ad6:	f000 fbc6 	bl	8014266 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implC1Ev>
 8013ada:	687b      	ldr	r3, [r7, #4]
 8013adc:	4618      	mov	r0, r3
 8013ade:	3708      	adds	r7, #8
 8013ae0:	46bd      	mov	sp, r7
 8013ae2:	bd80      	pop	{r7, pc}

08013ae4 <_ZNSt6vectorIP9StatementSaIS1_EEC1Ev>:
      vector() = default;
 8013ae4:	b580      	push	{r7, lr}
 8013ae6:	b082      	sub	sp, #8
 8013ae8:	af00      	add	r7, sp, #0
 8013aea:	6078      	str	r0, [r7, #4]
 8013aec:	687b      	ldr	r3, [r7, #4]
 8013aee:	4618      	mov	r0, r3
 8013af0:	f7ff ffeb 	bl	8013aca <_ZNSt12_Vector_baseIP9StatementSaIS1_EEC1Ev>
 8013af4:	687b      	ldr	r3, [r7, #4]
 8013af6:	4618      	mov	r0, r3
 8013af8:	3708      	adds	r7, #8
 8013afa:	46bd      	mov	sp, r7
 8013afc:	bd80      	pop	{r7, pc}

08013afe <_ZN4BodyC1Ev>:
class Body
 8013afe:	b580      	push	{r7, lr}
 8013b00:	b082      	sub	sp, #8
 8013b02:	af00      	add	r7, sp, #0
 8013b04:	6078      	str	r0, [r7, #4]
 8013b06:	687b      	ldr	r3, [r7, #4]
 8013b08:	4618      	mov	r0, r3
 8013b0a:	f7ff ffeb 	bl	8013ae4 <_ZNSt6vectorIP9StatementSaIS1_EEC1Ev>
 8013b0e:	687b      	ldr	r3, [r7, #4]
 8013b10:	4618      	mov	r0, r3
 8013b12:	3708      	adds	r7, #8
 8013b14:	46bd      	mov	sp, r7
 8013b16:	bd80      	pop	{r7, pc}

08013b18 <_ZN6Parser10parse_bodyEv>:

Body* Parser::parse_body()
{
 8013b18:	b590      	push	{r4, r7, lr}
 8013b1a:	b085      	sub	sp, #20
 8013b1c:	af00      	add	r7, sp, #0
 8013b1e:	6078      	str	r0, [r7, #4]
	auto bod = new Body();
 8013b20:	200c      	movs	r0, #12
 8013b22:	f00e fcbc 	bl	802249e <_Znwj>
 8013b26:	4603      	mov	r3, r0
 8013b28:	461c      	mov	r4, r3
 8013b2a:	4622      	mov	r2, r4
 8013b2c:	2300      	movs	r3, #0
 8013b2e:	6013      	str	r3, [r2, #0]
 8013b30:	6053      	str	r3, [r2, #4]
 8013b32:	6093      	str	r3, [r2, #8]
 8013b34:	4620      	mov	r0, r4
 8013b36:	f7ff ffe2 	bl	8013afe <_ZN4BodyC1Ev>
 8013b3a:	60fc      	str	r4, [r7, #12]
	while (is_token_statement_first())
 8013b3c:	6878      	ldr	r0, [r7, #4]
 8013b3e:	f7ff ff9b 	bl	8013a78 <_ZN6Parser24is_token_statement_firstEv>
 8013b42:	4603      	mov	r3, r0
 8013b44:	2b00      	cmp	r3, #0
 8013b46:	d00f      	beq.n	8013b68 <_ZN6Parser10parse_bodyEv+0x50>
	{
		bod->statements.push_back(parse_statement());
 8013b48:	68fc      	ldr	r4, [r7, #12]
 8013b4a:	6878      	ldr	r0, [r7, #4]
 8013b4c:	f7ff ff24 	bl	8013998 <_ZN6Parser15parse_statementEv>
 8013b50:	4603      	mov	r3, r0
 8013b52:	60bb      	str	r3, [r7, #8]
 8013b54:	f107 0308 	add.w	r3, r7, #8
 8013b58:	4619      	mov	r1, r3
 8013b5a:	4620      	mov	r0, r4
 8013b5c:	f000 fb93 	bl	8014286 <_ZNSt6vectorIP9StatementSaIS1_EE9push_backEOS1_>
		skip_newlines();
 8013b60:	6878      	ldr	r0, [r7, #4]
 8013b62:	f7ff ffa2 	bl	8013aaa <_ZN6Parser13skip_newlinesEv>
	while (is_token_statement_first())
 8013b66:	e7e9      	b.n	8013b3c <_ZN6Parser10parse_bodyEv+0x24>
	}
	return bod;
 8013b68:	68fb      	ldr	r3, [r7, #12]
}
 8013b6a:	4618      	mov	r0, r3
 8013b6c:	3714      	adds	r7, #20
 8013b6e:	46bd      	mov	sp, r7
 8013b70:	bd90      	pop	{r4, r7, pc}

08013b72 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8013b72:	b580      	push	{r7, lr}
 8013b74:	b082      	sub	sp, #8
 8013b76:	af00      	add	r7, sp, #0
 8013b78:	6078      	str	r0, [r7, #4]
 8013b7a:	6039      	str	r1, [r7, #0]
 8013b7c:	687b      	ldr	r3, [r7, #4]
 8013b7e:	683a      	ldr	r2, [r7, #0]
 8013b80:	4611      	mov	r1, r2
 8013b82:	4618      	mov	r0, r3
 8013b84:	f000 fd32 	bl	80145ec <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>
 8013b88:	687b      	ldr	r3, [r7, #4]
 8013b8a:	4618      	mov	r0, r3
 8013b8c:	3708      	adds	r7, #8
 8013b8e:	46bd      	mov	sp, r7
 8013b90:	bd80      	pop	{r7, pc}

08013b92 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS6_>:
    class variant
 8013b92:	b580      	push	{r7, lr}
 8013b94:	b082      	sub	sp, #8
 8013b96:	af00      	add	r7, sp, #0
 8013b98:	6078      	str	r0, [r7, #4]
 8013b9a:	6039      	str	r1, [r7, #0]
 8013b9c:	687b      	ldr	r3, [r7, #4]
 8013b9e:	683a      	ldr	r2, [r7, #0]
 8013ba0:	4611      	mov	r1, r2
 8013ba2:	4618      	mov	r0, r3
 8013ba4:	f7ff ffe5 	bl	8013b72 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>
 8013ba8:	687b      	ldr	r3, [r7, #4]
 8013baa:	4618      	mov	r0, r3
 8013bac:	3708      	adds	r7, #8
 8013bae:	46bd      	mov	sp, r7
 8013bb0:	bd80      	pop	{r7, pc}

08013bb2 <_ZN5TokenaSEOS_>:
 8013bb2:	b580      	push	{r7, lr}
 8013bb4:	b082      	sub	sp, #8
 8013bb6:	af00      	add	r7, sp, #0
 8013bb8:	6078      	str	r0, [r7, #4]
 8013bba:	6039      	str	r1, [r7, #0]
 8013bbc:	683b      	ldr	r3, [r7, #0]
 8013bbe:	781a      	ldrb	r2, [r3, #0]
 8013bc0:	687b      	ldr	r3, [r7, #4]
 8013bc2:	701a      	strb	r2, [r3, #0]
 8013bc4:	683b      	ldr	r3, [r7, #0]
 8013bc6:	1d1a      	adds	r2, r3, #4
 8013bc8:	687b      	ldr	r3, [r7, #4]
 8013bca:	3304      	adds	r3, #4
 8013bcc:	4611      	mov	r1, r2
 8013bce:	4618      	mov	r0, r3
 8013bd0:	f7ff ffdf 	bl	8013b92 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS6_>
 8013bd4:	687b      	ldr	r3, [r7, #4]
 8013bd6:	4618      	mov	r0, r3
 8013bd8:	3708      	adds	r7, #8
 8013bda:	46bd      	mov	sp, r7
 8013bdc:	bd80      	pop	{r7, pc}

08013bde <_ZN6Parser14get_next_tokenEv>:

void Parser::get_next_token()
{
 8013bde:	b580      	push	{r7, lr}
 8013be0:	b090      	sub	sp, #64	; 0x40
 8013be2:	af00      	add	r7, sp, #0
 8013be4:	6078      	str	r0, [r7, #4]
	token_buffer = Lexer::build_token();
 8013be6:	f107 0308 	add.w	r3, r7, #8
 8013bea:	4618      	mov	r0, r3
 8013bec:	f7fb fd3a 	bl	800f664 <_ZN5Lexer11build_tokenEv>
 8013bf0:	687b      	ldr	r3, [r7, #4]
 8013bf2:	f107 0208 	add.w	r2, r7, #8
 8013bf6:	4611      	mov	r1, r2
 8013bf8:	4618      	mov	r0, r3
 8013bfa:	f7ff ffda 	bl	8013bb2 <_ZN5TokenaSEOS_>
 8013bfe:	f107 0308 	add.w	r3, r7, #8
 8013c02:	4618      	mov	r0, r3
 8013c04:	f7fb f989 	bl	800ef1a <_ZN5TokenD1Ev>
	if (token_buffer.type == TOKEN_ERROR)
 8013c08:	687b      	ldr	r3, [r7, #4]
 8013c0a:	781b      	ldrb	r3, [r3, #0]
 8013c0c:	2b00      	cmp	r3, #0
 8013c0e:	d115      	bne.n	8013c3c <_ZN6Parser14get_next_tokenEv+0x5e>
	{
		Transmitter::report_error(std::get<std::string>(token_buffer.value));
 8013c10:	687b      	ldr	r3, [r7, #4]
 8013c12:	3304      	adds	r3, #4
 8013c14:	4618      	mov	r0, r3
 8013c16:	f000 f9dd 	bl	8013fd4 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8013c1a:	4602      	mov	r2, r0
 8013c1c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013c20:	4611      	mov	r1, r2
 8013c22:	4618      	mov	r0, r3
 8013c24:	f00f f8a2 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8013c28:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013c2c:	4618      	mov	r0, r3
 8013c2e:	f004 fd0f 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013c32:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013c36:	4618      	mov	r0, r3
 8013c38:	f00e fed3 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8013c3c:	bf00      	nop
 8013c3e:	3740      	adds	r7, #64	; 0x40
 8013c40:	46bd      	mov	sp, r7
 8013c42:	bd80      	pop	{r7, pc}

08013c44 <_ZN6Parser11parse_setupEP7Program>:

void Parser::parse_setup(Program *Prog)
{
 8013c44:	b580      	push	{r7, lr}
 8013c46:	b090      	sub	sp, #64	; 0x40
 8013c48:	af00      	add	r7, sp, #0
 8013c4a:	6078      	str	r0, [r7, #4]
 8013c4c:	6039      	str	r1, [r7, #0]
	get_next_token();
 8013c4e:	6878      	ldr	r0, [r7, #4]
 8013c50:	f7ff ffc5 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_SETUP, "\"setup\" keyword");
 8013c54:	f107 0320 	add.w	r3, r7, #32
 8013c58:	4618      	mov	r0, r3
 8013c5a:	f00e fc31 	bl	80224c0 <_ZNSaIcEC1Ev>
 8013c5e:	f107 0220 	add.w	r2, r7, #32
 8013c62:	f107 0308 	add.w	r3, r7, #8
 8013c66:	4923      	ldr	r1, [pc, #140]	; (8013cf4 <_ZN6Parser11parse_setupEP7Program+0xb0>)
 8013c68:	4618      	mov	r0, r3
 8013c6a:	f7ed ff5a 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013c6e:	f107 0308 	add.w	r3, r7, #8
 8013c72:	461a      	mov	r2, r3
 8013c74:	2107      	movs	r1, #7
 8013c76:	6878      	ldr	r0, [r7, #4]
 8013c78:	f7ff fc8e 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013c7c:	f107 0308 	add.w	r3, r7, #8
 8013c80:	4618      	mov	r0, r3
 8013c82:	f00e feae 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013c86:	f107 0320 	add.w	r3, r7, #32
 8013c8a:	4618      	mov	r0, r3
 8013c8c:	f00e fc19 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013c90:	6878      	ldr	r0, [r7, #4]
 8013c92:	f7ff ffa4 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after setup");
 8013c96:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013c9a:	4618      	mov	r0, r3
 8013c9c:	f00e fc10 	bl	80224c0 <_ZNSaIcEC1Ev>
 8013ca0:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8013ca4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013ca8:	4913      	ldr	r1, [pc, #76]	; (8013cf8 <_ZN6Parser11parse_setupEP7Program+0xb4>)
 8013caa:	4618      	mov	r0, r3
 8013cac:	f7ed ff39 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013cb0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013cb4:	461a      	mov	r2, r3
 8013cb6:	210a      	movs	r1, #10
 8013cb8:	6878      	ldr	r0, [r7, #4]
 8013cba:	f7ff fc6d 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013cbe:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013cc2:	4618      	mov	r0, r3
 8013cc4:	f00e fe8d 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013cc8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013ccc:	4618      	mov	r0, r3
 8013cce:	f00e fbf8 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013cd2:	6878      	ldr	r0, [r7, #4]
 8013cd4:	f7ff ff83 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 8013cd8:	6878      	ldr	r0, [r7, #4]
 8013cda:	f7ff fee6 	bl	8013aaa <_ZN6Parser13skip_newlinesEv>
	Prog->setup = parse_body();
 8013cde:	6878      	ldr	r0, [r7, #4]
 8013ce0:	f7ff ff1a 	bl	8013b18 <_ZN6Parser10parse_bodyEv>
 8013ce4:	4602      	mov	r2, r0
 8013ce6:	683b      	ldr	r3, [r7, #0]
 8013ce8:	601a      	str	r2, [r3, #0]
}
 8013cea:	bf00      	nop
 8013cec:	3740      	adds	r7, #64	; 0x40
 8013cee:	46bd      	mov	sp, r7
 8013cf0:	bd80      	pop	{r7, pc}
 8013cf2:	bf00      	nop
 8013cf4:	080276b8 	.word	0x080276b8
 8013cf8:	080276c8 	.word	0x080276c8

08013cfc <_ZN6Parser10parse_loopEP7Program>:

void Parser::parse_loop(Program *Prog)
{
 8013cfc:	b580      	push	{r7, lr}
 8013cfe:	b090      	sub	sp, #64	; 0x40
 8013d00:	af00      	add	r7, sp, #0
 8013d02:	6078      	str	r0, [r7, #4]
 8013d04:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_LOOP, "\"loop\" keyword");
 8013d06:	f107 0320 	add.w	r3, r7, #32
 8013d0a:	4618      	mov	r0, r3
 8013d0c:	f00e fbd8 	bl	80224c0 <_ZNSaIcEC1Ev>
 8013d10:	f107 0220 	add.w	r2, r7, #32
 8013d14:	f107 0308 	add.w	r3, r7, #8
 8013d18:	4922      	ldr	r1, [pc, #136]	; (8013da4 <_ZN6Parser10parse_loopEP7Program+0xa8>)
 8013d1a:	4618      	mov	r0, r3
 8013d1c:	f7ed ff01 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013d20:	f107 0308 	add.w	r3, r7, #8
 8013d24:	461a      	mov	r2, r3
 8013d26:	2108      	movs	r1, #8
 8013d28:	6878      	ldr	r0, [r7, #4]
 8013d2a:	f7ff fc35 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013d2e:	f107 0308 	add.w	r3, r7, #8
 8013d32:	4618      	mov	r0, r3
 8013d34:	f00e fe55 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013d38:	f107 0320 	add.w	r3, r7, #32
 8013d3c:	4618      	mov	r0, r3
 8013d3e:	f00e fbc0 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013d42:	6878      	ldr	r0, [r7, #4]
 8013d44:	f7ff ff4b 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after loop");
 8013d48:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013d4c:	4618      	mov	r0, r3
 8013d4e:	f00e fbb7 	bl	80224c0 <_ZNSaIcEC1Ev>
 8013d52:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8013d56:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013d5a:	4913      	ldr	r1, [pc, #76]	; (8013da8 <_ZN6Parser10parse_loopEP7Program+0xac>)
 8013d5c:	4618      	mov	r0, r3
 8013d5e:	f7ed fee0 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013d62:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013d66:	461a      	mov	r2, r3
 8013d68:	210a      	movs	r1, #10
 8013d6a:	6878      	ldr	r0, [r7, #4]
 8013d6c:	f7ff fc14 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013d70:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013d74:	4618      	mov	r0, r3
 8013d76:	f00e fe34 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013d7a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013d7e:	4618      	mov	r0, r3
 8013d80:	f00e fb9f 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013d84:	6878      	ldr	r0, [r7, #4]
 8013d86:	f7ff ff2a 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 8013d8a:	6878      	ldr	r0, [r7, #4]
 8013d8c:	f7ff fe8d 	bl	8013aaa <_ZN6Parser13skip_newlinesEv>
	Prog->loop = parse_body();
 8013d90:	6878      	ldr	r0, [r7, #4]
 8013d92:	f7ff fec1 	bl	8013b18 <_ZN6Parser10parse_bodyEv>
 8013d96:	4602      	mov	r2, r0
 8013d98:	683b      	ldr	r3, [r7, #0]
 8013d9a:	605a      	str	r2, [r3, #4]
}
 8013d9c:	bf00      	nop
 8013d9e:	3740      	adds	r7, #64	; 0x40
 8013da0:	46bd      	mov	sp, r7
 8013da2:	bd80      	pop	{r7, pc}
 8013da4:	080276e0 	.word	0x080276e0
 8013da8:	080276f0 	.word	0x080276f0

08013dac <_ZN6Parser12parse_finishEP7Program>:

void Parser::parse_finish(Program *Prog)
{
 8013dac:	b580      	push	{r7, lr}
 8013dae:	b090      	sub	sp, #64	; 0x40
 8013db0:	af00      	add	r7, sp, #0
 8013db2:	6078      	str	r0, [r7, #4]
 8013db4:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_FINISH, "\"finish\" keyword");
 8013db6:	f107 0320 	add.w	r3, r7, #32
 8013dba:	4618      	mov	r0, r3
 8013dbc:	f00e fb80 	bl	80224c0 <_ZNSaIcEC1Ev>
 8013dc0:	f107 0220 	add.w	r2, r7, #32
 8013dc4:	f107 0308 	add.w	r3, r7, #8
 8013dc8:	4922      	ldr	r1, [pc, #136]	; (8013e54 <_ZN6Parser12parse_finishEP7Program+0xa8>)
 8013dca:	4618      	mov	r0, r3
 8013dcc:	f7ed fea9 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013dd0:	f107 0308 	add.w	r3, r7, #8
 8013dd4:	461a      	mov	r2, r3
 8013dd6:	2109      	movs	r1, #9
 8013dd8:	6878      	ldr	r0, [r7, #4]
 8013dda:	f7ff fbdd 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013dde:	f107 0308 	add.w	r3, r7, #8
 8013de2:	4618      	mov	r0, r3
 8013de4:	f00e fdfd 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013de8:	f107 0320 	add.w	r3, r7, #32
 8013dec:	4618      	mov	r0, r3
 8013dee:	f00e fb68 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013df2:	6878      	ldr	r0, [r7, #4]
 8013df4:	f7ff fef3 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after finish");
 8013df8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013dfc:	4618      	mov	r0, r3
 8013dfe:	f00e fb5f 	bl	80224c0 <_ZNSaIcEC1Ev>
 8013e02:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8013e06:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013e0a:	4913      	ldr	r1, [pc, #76]	; (8013e58 <_ZN6Parser12parse_finishEP7Program+0xac>)
 8013e0c:	4618      	mov	r0, r3
 8013e0e:	f7ed fe88 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013e12:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013e16:	461a      	mov	r2, r3
 8013e18:	210a      	movs	r1, #10
 8013e1a:	6878      	ldr	r0, [r7, #4]
 8013e1c:	f7ff fbbc 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013e20:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013e24:	4618      	mov	r0, r3
 8013e26:	f00e fddc 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013e2a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013e2e:	4618      	mov	r0, r3
 8013e30:	f00e fb47 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013e34:	6878      	ldr	r0, [r7, #4]
 8013e36:	f7ff fed2 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 8013e3a:	6878      	ldr	r0, [r7, #4]
 8013e3c:	f7ff fe35 	bl	8013aaa <_ZN6Parser13skip_newlinesEv>
	Prog->finish = parse_body();
 8013e40:	6878      	ldr	r0, [r7, #4]
 8013e42:	f7ff fe69 	bl	8013b18 <_ZN6Parser10parse_bodyEv>
 8013e46:	4602      	mov	r2, r0
 8013e48:	683b      	ldr	r3, [r7, #0]
 8013e4a:	609a      	str	r2, [r3, #8]
}
 8013e4c:	bf00      	nop
 8013e4e:	3740      	adds	r7, #64	; 0x40
 8013e50:	46bd      	mov	sp, r7
 8013e52:	bd80      	pop	{r7, pc}
 8013e54:	08027708 	.word	0x08027708
 8013e58:	0802771c 	.word	0x0802771c

08013e5c <_ZN6ParserD1Ev>:
	Body *setup;
	Body *loop;
	Body *finish;
};

class Parser
 8013e5c:	b580      	push	{r7, lr}
 8013e5e:	b082      	sub	sp, #8
 8013e60:	af00      	add	r7, sp, #0
 8013e62:	6078      	str	r0, [r7, #4]
 8013e64:	687b      	ldr	r3, [r7, #4]
 8013e66:	4618      	mov	r0, r3
 8013e68:	f7fb f857 	bl	800ef1a <_ZN5TokenD1Ev>
 8013e6c:	687b      	ldr	r3, [r7, #4]
 8013e6e:	4618      	mov	r0, r3
 8013e70:	3708      	adds	r7, #8
 8013e72:	46bd      	mov	sp, r7
 8013e74:	bd80      	pop	{r7, pc}
	...

08013e78 <__tcf_0>:

Program* Parser::parse_program()
{
	static Parser Par;
 8013e78:	b580      	push	{r7, lr}
 8013e7a:	af00      	add	r7, sp, #0
 8013e7c:	4801      	ldr	r0, [pc, #4]	; (8013e84 <__tcf_0+0xc>)
 8013e7e:	f7ff ffed 	bl	8013e5c <_ZN6ParserD1Ev>
 8013e82:	bd80      	pop	{r7, pc}
 8013e84:	2000046c 	.word	0x2000046c

08013e88 <_ZN6Parser13parse_programEv>:
{
 8013e88:	b580      	push	{r7, lr}
 8013e8a:	b088      	sub	sp, #32
 8013e8c:	af00      	add	r7, sp, #0
	static Parser Par;
 8013e8e:	4b2c      	ldr	r3, [pc, #176]	; (8013f40 <_ZN6Parser13parse_programEv+0xb8>)
 8013e90:	781b      	ldrb	r3, [r3, #0]
 8013e92:	f3bf 8f5b 	dmb	ish
 8013e96:	b2db      	uxtb	r3, r3
 8013e98:	f003 0301 	and.w	r3, r3, #1
 8013e9c:	2b00      	cmp	r3, #0
 8013e9e:	bf0c      	ite	eq
 8013ea0:	2301      	moveq	r3, #1
 8013ea2:	2300      	movne	r3, #0
 8013ea4:	b2db      	uxtb	r3, r3
 8013ea6:	2b00      	cmp	r3, #0
 8013ea8:	d013      	beq.n	8013ed2 <_ZN6Parser13parse_programEv+0x4a>
 8013eaa:	4825      	ldr	r0, [pc, #148]	; (8013f40 <_ZN6Parser13parse_programEv+0xb8>)
 8013eac:	f00e fae8 	bl	8022480 <__cxa_guard_acquire>
 8013eb0:	4603      	mov	r3, r0
 8013eb2:	2b00      	cmp	r3, #0
 8013eb4:	bf14      	ite	ne
 8013eb6:	2301      	movne	r3, #1
 8013eb8:	2300      	moveq	r3, #0
 8013eba:	b2db      	uxtb	r3, r3
 8013ebc:	2b00      	cmp	r3, #0
 8013ebe:	d008      	beq.n	8013ed2 <_ZN6Parser13parse_programEv+0x4a>
 8013ec0:	4820      	ldr	r0, [pc, #128]	; (8013f44 <_ZN6Parser13parse_programEv+0xbc>)
 8013ec2:	f7ff f85f 	bl	8012f84 <_ZN6ParserC1Ev>
 8013ec6:	481e      	ldr	r0, [pc, #120]	; (8013f40 <_ZN6Parser13parse_programEv+0xb8>)
 8013ec8:	f00e fae6 	bl	8022498 <__cxa_guard_release>
 8013ecc:	481e      	ldr	r0, [pc, #120]	; (8013f48 <_ZN6Parser13parse_programEv+0xc0>)
 8013ece:	f00f ff20 	bl	8023d12 <atexit>
	auto Prog = new Program();
 8013ed2:	200c      	movs	r0, #12
 8013ed4:	f00e fae3 	bl	802249e <_Znwj>
 8013ed8:	4603      	mov	r3, r0
 8013eda:	2200      	movs	r2, #0
 8013edc:	601a      	str	r2, [r3, #0]
 8013ede:	2200      	movs	r2, #0
 8013ee0:	605a      	str	r2, [r3, #4]
 8013ee2:	2200      	movs	r2, #0
 8013ee4:	609a      	str	r2, [r3, #8]
 8013ee6:	61fb      	str	r3, [r7, #28]
	Par.parse_setup(Prog);
 8013ee8:	69f9      	ldr	r1, [r7, #28]
 8013eea:	4816      	ldr	r0, [pc, #88]	; (8013f44 <_ZN6Parser13parse_programEv+0xbc>)
 8013eec:	f7ff feaa 	bl	8013c44 <_ZN6Parser11parse_setupEP7Program>
	Par.parse_loop(Prog);
 8013ef0:	69f9      	ldr	r1, [r7, #28]
 8013ef2:	4814      	ldr	r0, [pc, #80]	; (8013f44 <_ZN6Parser13parse_programEv+0xbc>)
 8013ef4:	f7ff ff02 	bl	8013cfc <_ZN6Parser10parse_loopEP7Program>
	Par.parse_finish(Prog);
 8013ef8:	69f9      	ldr	r1, [r7, #28]
 8013efa:	4812      	ldr	r0, [pc, #72]	; (8013f44 <_ZN6Parser13parse_programEv+0xbc>)
 8013efc:	f7ff ff56 	bl	8013dac <_ZN6Parser12parse_finishEP7Program>
	Par.assert_token(TOKEN_END_OF_FILE, "end of file");
 8013f00:	f107 0318 	add.w	r3, r7, #24
 8013f04:	4618      	mov	r0, r3
 8013f06:	f00e fadb 	bl	80224c0 <_ZNSaIcEC1Ev>
 8013f0a:	f107 0218 	add.w	r2, r7, #24
 8013f0e:	463b      	mov	r3, r7
 8013f10:	490e      	ldr	r1, [pc, #56]	; (8013f4c <_ZN6Parser13parse_programEv+0xc4>)
 8013f12:	4618      	mov	r0, r3
 8013f14:	f7ed fe05 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013f18:	463b      	mov	r3, r7
 8013f1a:	461a      	mov	r2, r3
 8013f1c:	2125      	movs	r1, #37	; 0x25
 8013f1e:	4809      	ldr	r0, [pc, #36]	; (8013f44 <_ZN6Parser13parse_programEv+0xbc>)
 8013f20:	f7ff fb3a 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013f24:	463b      	mov	r3, r7
 8013f26:	4618      	mov	r0, r3
 8013f28:	f00e fd5b 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013f2c:	f107 0318 	add.w	r3, r7, #24
 8013f30:	4618      	mov	r0, r3
 8013f32:	f00e fac6 	bl	80224c2 <_ZNSaIcED1Ev>
	return Prog;
 8013f36:	69fb      	ldr	r3, [r7, #28]
}
 8013f38:	4618      	mov	r0, r3
 8013f3a:	3720      	adds	r7, #32
 8013f3c:	46bd      	mov	sp, r7
 8013f3e:	bd80      	pop	{r7, pc}
 8013f40:	2000048c 	.word	0x2000048c
 8013f44:	2000046c 	.word	0x2000046c
 8013f48:	08013e79 	.word	0x08013e79
 8013f4c:	08027734 	.word	0x08027734

08013f50 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 8013f50:	b580      	push	{r7, lr}
 8013f52:	b082      	sub	sp, #8
 8013f54:	af00      	add	r7, sp, #0
 8013f56:	6078      	str	r0, [r7, #4]
 8013f58:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8013f5a:	6838      	ldr	r0, [r7, #0]
 8013f5c:	f000 fb5c 	bl	8014618 <_ZSt4moveIRP10ExpressionEONSt16remove_referenceIT_E4typeEOS4_>
 8013f60:	4603      	mov	r3, r0
 8013f62:	4619      	mov	r1, r3
 8013f64:	6878      	ldr	r0, [r7, #4]
 8013f66:	f000 fb62 	bl	801462e <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8013f6a:	bf00      	nop
 8013f6c:	3708      	adds	r7, #8
 8013f6e:	46bd      	mov	sp, r7
 8013f70:	bd80      	pop	{r7, pc}

08013f72 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 8013f72:	b580      	push	{r7, lr}
 8013f74:	b082      	sub	sp, #8
 8013f76:	af00      	add	r7, sp, #0
 8013f78:	6078      	str	r0, [r7, #4]
 8013f7a:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8013f7c:	6838      	ldr	r0, [r7, #0]
 8013f7e:	f000 fb88 	bl	8014692 <_ZSt4moveIRP4BodyEONSt16remove_referenceIT_E4typeEOS4_>
 8013f82:	4603      	mov	r3, r0
 8013f84:	4619      	mov	r1, r3
 8013f86:	6878      	ldr	r0, [r7, #4]
 8013f88:	f000 fb8e 	bl	80146a8 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8013f8c:	bf00      	nop
 8013f8e:	3708      	adds	r7, #8
 8013f90:	46bd      	mov	sp, r7
 8013f92:	bd80      	pop	{r7, pc}

08013f94 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8013f94:	b580      	push	{r7, lr}
 8013f96:	b082      	sub	sp, #8
 8013f98:	af00      	add	r7, sp, #0
 8013f9a:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8013f9c:	6878      	ldr	r0, [r7, #4]
 8013f9e:	f000 fbb5 	bl	801470c <_ZNSaIP10ExpressionEC1Ev>
 8013fa2:	687b      	ldr	r3, [r7, #4]
 8013fa4:	4618      	mov	r0, r3
 8013fa6:	f7fa fb68 	bl	800e67a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 8013faa:	687b      	ldr	r3, [r7, #4]
 8013fac:	4618      	mov	r0, r3
 8013fae:	3708      	adds	r7, #8
 8013fb0:	46bd      	mov	sp, r7
 8013fb2:	bd80      	pop	{r7, pc}

08013fb4 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8013fb4:	b580      	push	{r7, lr}
 8013fb6:	b082      	sub	sp, #8
 8013fb8:	af00      	add	r7, sp, #0
 8013fba:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8013fbc:	6878      	ldr	r0, [r7, #4]
 8013fbe:	f000 fbb1 	bl	8014724 <_ZNSaIP4BodyEC1Ev>
 8013fc2:	687b      	ldr	r3, [r7, #4]
 8013fc4:	4618      	mov	r0, r3
 8013fc6:	f000 fbb9 	bl	801473c <_ZNSt12_Vector_baseIP4BodySaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 8013fca:	687b      	ldr	r3, [r7, #4]
 8013fcc:	4618      	mov	r0, r3
 8013fce:	3708      	adds	r7, #8
 8013fd0:	46bd      	mov	sp, r7
 8013fd2:	bd80      	pop	{r7, pc}

08013fd4 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8013fd4:	b580      	push	{r7, lr}
 8013fd6:	b082      	sub	sp, #8
 8013fd8:	af00      	add	r7, sp, #0
 8013fda:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8013fdc:	6878      	ldr	r0, [r7, #4]
 8013fde:	f7fc f803 	bl	800ffe8 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8013fe2:	4603      	mov	r3, r0
    }
 8013fe4:	4618      	mov	r0, r3
 8013fe6:	3708      	adds	r7, #8
 8013fe8:	46bd      	mov	sp, r7
 8013fea:	bd80      	pop	{r7, pc}

08013fec <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>:
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 8013fec:	b580      	push	{r7, lr}
 8013fee:	b082      	sub	sp, #8
 8013ff0:	af00      	add	r7, sp, #0
 8013ff2:	6078      	str	r0, [r7, #4]
 8013ff4:	6039      	str	r1, [r7, #0]
    { return __lhs.compare(__rhs) == 0; }
 8013ff6:	6839      	ldr	r1, [r7, #0]
 8013ff8:	6878      	ldr	r0, [r7, #4]
 8013ffa:	f00e fea1 	bl	8022d40 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
 8013ffe:	4603      	mov	r3, r0
 8014000:	2b00      	cmp	r3, #0
 8014002:	bf0c      	ite	eq
 8014004:	2301      	moveq	r3, #1
 8014006:	2300      	movne	r3, #0
 8014008:	b2db      	uxtb	r3, r3
 801400a:	4618      	mov	r0, r3
 801400c:	3708      	adds	r7, #8
 801400e:	46bd      	mov	sp, r7
 8014010:	bd80      	pop	{r7, pc}

08014012 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8014012:	b590      	push	{r4, r7, lr}
 8014014:	b085      	sub	sp, #20
 8014016:	af00      	add	r7, sp, #0
 8014018:	6078      	str	r0, [r7, #4]
 801401a:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801401c:	2301      	movs	r3, #1
 801401e:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8014020:	6878      	ldr	r0, [r7, #4]
 8014022:	f7ee fd3e 	bl	8002aa2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8014026:	4603      	mov	r3, r0
 8014028:	2b01      	cmp	r3, #1
 801402a:	bf0c      	ite	eq
 801402c:	2301      	moveq	r3, #1
 801402e:	2300      	movne	r3, #0
 8014030:	b2db      	uxtb	r3, r3
 8014032:	2b00      	cmp	r3, #0
 8014034:	d00a      	beq.n	801404c <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8014036:	6838      	ldr	r0, [r7, #0]
 8014038:	f000 fbb2 	bl	80147a0 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801403c:	4603      	mov	r3, r0
 801403e:	681c      	ldr	r4, [r3, #0]
 8014040:	6878      	ldr	r0, [r7, #4]
 8014042:	f7ee fdb3 	bl	8002bac <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014046:	4603      	mov	r3, r0
 8014048:	601c      	str	r4, [r3, #0]
 801404a:	e007      	b.n	801405c <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801404c:	6838      	ldr	r0, [r7, #0]
 801404e:	f000 fba7 	bl	80147a0 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014052:	4603      	mov	r3, r0
 8014054:	4619      	mov	r1, r3
 8014056:	6878      	ldr	r0, [r7, #4]
 8014058:	f000 fbad 	bl	80147b6 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801405c:	687b      	ldr	r3, [r7, #4]
	}
 801405e:	4618      	mov	r0, r3
 8014060:	3714      	adds	r7, #20
 8014062:	46bd      	mov	sp, r7
 8014064:	bd90      	pop	{r4, r7, pc}

08014066 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8014066:	b590      	push	{r4, r7, lr}
 8014068:	b085      	sub	sp, #20
 801406a:	af00      	add	r7, sp, #0
 801406c:	6078      	str	r0, [r7, #4]
 801406e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8014070:	2300      	movs	r3, #0
 8014072:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8014074:	6878      	ldr	r0, [r7, #4]
 8014076:	f7ee fd14 	bl	8002aa2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 801407a:	4603      	mov	r3, r0
 801407c:	2b00      	cmp	r3, #0
 801407e:	bf0c      	ite	eq
 8014080:	2301      	moveq	r3, #1
 8014082:	2300      	movne	r3, #0
 8014084:	b2db      	uxtb	r3, r3
 8014086:	2b00      	cmp	r3, #0
 8014088:	d00a      	beq.n	80140a0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801408a:	6838      	ldr	r0, [r7, #0]
 801408c:	f000 fbac 	bl	80147e8 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 8014090:	4603      	mov	r3, r0
 8014092:	681c      	ldr	r4, [r3, #0]
 8014094:	6878      	ldr	r0, [r7, #4]
 8014096:	f7ee fd39 	bl	8002b0c <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801409a:	4603      	mov	r3, r0
 801409c:	601c      	str	r4, [r3, #0]
 801409e:	e007      	b.n	80140b0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80140a0:	6838      	ldr	r0, [r7, #0]
 80140a2:	f000 fba1 	bl	80147e8 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 80140a6:	4603      	mov	r3, r0
 80140a8:	4619      	mov	r1, r3
 80140aa:	6878      	ldr	r0, [r7, #4]
 80140ac:	f000 fba7 	bl	80147fe <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 80140b0:	687b      	ldr	r3, [r7, #4]
	}
 80140b2:	4618      	mov	r0, r3
 80140b4:	3714      	adds	r7, #20
 80140b6:	46bd      	mov	sp, r7
 80140b8:	bd90      	pop	{r4, r7, pc}

080140ba <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 80140ba:	b590      	push	{r4, r7, lr}
 80140bc:	b085      	sub	sp, #20
 80140be:	af00      	add	r7, sp, #0
 80140c0:	6078      	str	r0, [r7, #4]
 80140c2:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80140c4:	2302      	movs	r3, #2
 80140c6:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80140c8:	6878      	ldr	r0, [r7, #4]
 80140ca:	f7ee fcea 	bl	8002aa2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 80140ce:	4603      	mov	r3, r0
 80140d0:	2b02      	cmp	r3, #2
 80140d2:	bf0c      	ite	eq
 80140d4:	2301      	moveq	r3, #1
 80140d6:	2300      	movne	r3, #0
 80140d8:	b2db      	uxtb	r3, r3
 80140da:	2b00      	cmp	r3, #0
 80140dc:	d00a      	beq.n	80140f4 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80140de:	6838      	ldr	r0, [r7, #0]
 80140e0:	f000 fba6 	bl	8014830 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 80140e4:	4603      	mov	r3, r0
 80140e6:	681c      	ldr	r4, [r3, #0]
 80140e8:	6878      	ldr	r0, [r7, #4]
 80140ea:	f7ee fdc1 	bl	8002c70 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80140ee:	4603      	mov	r3, r0
 80140f0:	601c      	str	r4, [r3, #0]
 80140f2:	e007      	b.n	8014104 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80140f4:	6838      	ldr	r0, [r7, #0]
 80140f6:	f000 fb9b 	bl	8014830 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 80140fa:	4603      	mov	r3, r0
 80140fc:	4619      	mov	r1, r3
 80140fe:	6878      	ldr	r0, [r7, #4]
 8014100:	f000 fba1 	bl	8014846 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj2EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8014104:	687b      	ldr	r3, [r7, #4]
	}
 8014106:	4618      	mov	r0, r3
 8014108:	3714      	adds	r7, #20
 801410a:	46bd      	mov	sp, r7
 801410c:	bd90      	pop	{r4, r7, pc}

0801410e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801410e:	b580      	push	{r7, lr}
 8014110:	b082      	sub	sp, #8
 8014112:	af00      	add	r7, sp, #0
 8014114:	6078      	str	r0, [r7, #4]
 8014116:	7039      	strb	r1, [r7, #0]
 8014118:	687b      	ldr	r3, [r7, #4]
 801411a:	4611      	mov	r1, r2
 801411c:	4618      	mov	r0, r3
 801411e:	f000 fbc9 	bl	80148b4 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8014122:	687b      	ldr	r3, [r7, #4]
 8014124:	4618      	mov	r0, r3
 8014126:	3708      	adds	r7, #8
 8014128:	46bd      	mov	sp, r7
 801412a:	bd80      	pop	{r7, pc}

0801412c <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801412c:	b580      	push	{r7, lr}
 801412e:	b082      	sub	sp, #8
 8014130:	af00      	add	r7, sp, #0
 8014132:	6078      	str	r0, [r7, #4]
 8014134:	7039      	strb	r1, [r7, #0]
 8014136:	687b      	ldr	r3, [r7, #4]
 8014138:	4611      	mov	r1, r2
 801413a:	4618      	mov	r0, r3
 801413c:	f7ff ffe7 	bl	801410e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8014140:	687b      	ldr	r3, [r7, #4]
 8014142:	4618      	mov	r0, r3
 8014144:	3708      	adds	r7, #8
 8014146:	46bd      	mov	sp, r7
 8014148:	bd80      	pop	{r7, pc}

0801414a <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801414a:	b580      	push	{r7, lr}
 801414c:	b082      	sub	sp, #8
 801414e:	af00      	add	r7, sp, #0
 8014150:	6078      	str	r0, [r7, #4]
 8014152:	7039      	strb	r1, [r7, #0]
 8014154:	687b      	ldr	r3, [r7, #4]
 8014156:	4611      	mov	r1, r2
 8014158:	4618      	mov	r0, r3
 801415a:	f7ff ffe7 	bl	801412c <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801415e:	687b      	ldr	r3, [r7, #4]
 8014160:	4618      	mov	r0, r3
 8014162:	3708      	adds	r7, #8
 8014164:	46bd      	mov	sp, r7
 8014166:	bd80      	pop	{r7, pc}

08014168 <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8014168:	b580      	push	{r7, lr}
 801416a:	b082      	sub	sp, #8
 801416c:	af00      	add	r7, sp, #0
 801416e:	6078      	str	r0, [r7, #4]
 8014170:	7039      	strb	r1, [r7, #0]
 8014172:	687b      	ldr	r3, [r7, #4]
 8014174:	4611      	mov	r1, r2
 8014176:	4618      	mov	r0, r3
 8014178:	f7ff ffe7 	bl	801414a <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801417c:	687b      	ldr	r3, [r7, #4]
 801417e:	4618      	mov	r0, r3
 8014180:	3708      	adds	r7, #8
 8014182:	46bd      	mov	sp, r7
 8014184:	bd80      	pop	{r7, pc}

08014186 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8014186:	b580      	push	{r7, lr}
 8014188:	b082      	sub	sp, #8
 801418a:	af00      	add	r7, sp, #0
 801418c:	6078      	str	r0, [r7, #4]
 801418e:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 8014190:	687b      	ldr	r3, [r7, #4]
 8014192:	4611      	mov	r1, r2
 8014194:	4618      	mov	r0, r3
 8014196:	f7ff ffe7 	bl	8014168 <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801419a:	687b      	ldr	r3, [r7, #4]
 801419c:	4618      	mov	r0, r3
 801419e:	3708      	adds	r7, #8
 80141a0:	46bd      	mov	sp, r7
 80141a2:	bd80      	pop	{r7, pc}

080141a4 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>:
      _Variant_base()
 80141a4:	b580      	push	{r7, lr}
 80141a6:	b082      	sub	sp, #8
 80141a8:	af00      	add	r7, sp, #0
 80141aa:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 80141ac:	4619      	mov	r1, r3
 80141ae:	6878      	ldr	r0, [r7, #4]
 80141b0:	f7ff ffe9 	bl	8014186 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80141b4:	687b      	ldr	r3, [r7, #4]
 80141b6:	4618      	mov	r0, r3
 80141b8:	3708      	adds	r7, #8
 80141ba:	46bd      	mov	sp, r7
 80141bc:	bd80      	pop	{r7, pc}

080141be <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 80141be:	b590      	push	{r4, r7, lr}
 80141c0:	b085      	sub	sp, #20
 80141c2:	af00      	add	r7, sp, #0
 80141c4:	6078      	str	r0, [r7, #4]
 80141c6:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80141c8:	2303      	movs	r3, #3
 80141ca:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80141cc:	6878      	ldr	r0, [r7, #4]
 80141ce:	f7ee fc68 	bl	8002aa2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 80141d2:	4603      	mov	r3, r0
 80141d4:	2b03      	cmp	r3, #3
 80141d6:	bf0c      	ite	eq
 80141d8:	2301      	moveq	r3, #1
 80141da:	2300      	movne	r3, #0
 80141dc:	b2db      	uxtb	r3, r3
 80141de:	2b00      	cmp	r3, #0
 80141e0:	d00a      	beq.n	80141f8 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80141e2:	6838      	ldr	r0, [r7, #0]
 80141e4:	f000 fb78 	bl	80148d8 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 80141e8:	4603      	mov	r3, r0
 80141ea:	681c      	ldr	r4, [r3, #0]
 80141ec:	6878      	ldr	r0, [r7, #4]
 80141ee:	f7ee fdb3 	bl	8002d58 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80141f2:	4603      	mov	r3, r0
 80141f4:	601c      	str	r4, [r3, #0]
 80141f6:	e007      	b.n	8014208 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80141f8:	6838      	ldr	r0, [r7, #0]
 80141fa:	f000 fb6d 	bl	80148d8 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 80141fe:	4603      	mov	r3, r0
 8014200:	4619      	mov	r1, r3
 8014202:	6878      	ldr	r0, [r7, #4]
 8014204:	f000 fb73 	bl	80148ee <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj3EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8014208:	687b      	ldr	r3, [r7, #4]
	}
 801420a:	4618      	mov	r0, r3
 801420c:	3714      	adds	r7, #20
 801420e:	46bd      	mov	sp, r7
 8014210:	bd90      	pop	{r4, r7, pc}

08014212 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8014212:	b590      	push	{r4, r7, lr}
 8014214:	b085      	sub	sp, #20
 8014216:	af00      	add	r7, sp, #0
 8014218:	6078      	str	r0, [r7, #4]
 801421a:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801421c:	2304      	movs	r3, #4
 801421e:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8014220:	6878      	ldr	r0, [r7, #4]
 8014222:	f7ee fc3e 	bl	8002aa2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8014226:	4603      	mov	r3, r0
 8014228:	2b04      	cmp	r3, #4
 801422a:	bf0c      	ite	eq
 801422c:	2301      	moveq	r3, #1
 801422e:	2300      	movne	r3, #0
 8014230:	b2db      	uxtb	r3, r3
 8014232:	2b00      	cmp	r3, #0
 8014234:	d00a      	beq.n	801424c <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8014236:	6838      	ldr	r0, [r7, #0]
 8014238:	f000 fb72 	bl	8014920 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 801423c:	4603      	mov	r3, r0
 801423e:	681c      	ldr	r4, [r3, #0]
 8014240:	6878      	ldr	r0, [r7, #4]
 8014242:	f7ee fe0f 	bl	8002e64 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014246:	4603      	mov	r3, r0
 8014248:	601c      	str	r4, [r3, #0]
 801424a:	e007      	b.n	801425c <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801424c:	6838      	ldr	r0, [r7, #0]
 801424e:	f000 fb67 	bl	8014920 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014252:	4603      	mov	r3, r0
 8014254:	4619      	mov	r1, r3
 8014256:	6878      	ldr	r0, [r7, #4]
 8014258:	f000 fb6d 	bl	8014936 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801425c:	687b      	ldr	r3, [r7, #4]
	}
 801425e:	4618      	mov	r0, r3
 8014260:	3714      	adds	r7, #20
 8014262:	46bd      	mov	sp, r7
 8014264:	bd90      	pop	{r4, r7, pc}

08014266 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8014266:	b580      	push	{r7, lr}
 8014268:	b082      	sub	sp, #8
 801426a:	af00      	add	r7, sp, #0
 801426c:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801426e:	6878      	ldr	r0, [r7, #4]
 8014270:	f000 fb7a 	bl	8014968 <_ZNSaIP9StatementEC1Ev>
 8014274:	687b      	ldr	r3, [r7, #4]
 8014276:	4618      	mov	r0, r3
 8014278:	f000 fb82 	bl	8014980 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801427c:	687b      	ldr	r3, [r7, #4]
 801427e:	4618      	mov	r0, r3
 8014280:	3708      	adds	r7, #8
 8014282:	46bd      	mov	sp, r7
 8014284:	bd80      	pop	{r7, pc}

08014286 <_ZNSt6vectorIP9StatementSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 8014286:	b580      	push	{r7, lr}
 8014288:	b082      	sub	sp, #8
 801428a:	af00      	add	r7, sp, #0
 801428c:	6078      	str	r0, [r7, #4]
 801428e:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8014290:	6838      	ldr	r0, [r7, #0]
 8014292:	f000 fba7 	bl	80149e4 <_ZSt4moveIRP9StatementEONSt16remove_referenceIT_E4typeEOS4_>
 8014296:	4603      	mov	r3, r0
 8014298:	4619      	mov	r1, r3
 801429a:	6878      	ldr	r0, [r7, #4]
 801429c:	f000 fbad 	bl	80149fa <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 80142a0:	bf00      	nop
 80142a2:	3708      	adds	r7, #8
 80142a4:	46bd      	mov	sp, r7
 80142a6:	bd80      	pop	{r7, pc}

080142a8 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 80142a8:	b480      	push	{r7}
 80142aa:	b083      	sub	sp, #12
 80142ac:	af00      	add	r7, sp, #0
 80142ae:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 80142b0:	687b      	ldr	r3, [r7, #4]
    }
 80142b2:	4618      	mov	r0, r3
 80142b4:	370c      	adds	r7, #12
 80142b6:	46bd      	mov	sp, r7
 80142b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80142bc:	4770      	bx	lr

080142be <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80142be:	b580      	push	{r7, lr}
 80142c0:	b082      	sub	sp, #8
 80142c2:	af00      	add	r7, sp, #0
 80142c4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80142c6:	6878      	ldr	r0, [r7, #4]
 80142c8:	f7fc fdba 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80142cc:	4603      	mov	r3, r0
 80142ce:	4618      	mov	r0, r3
 80142d0:	f7fb fe79 	bl	800ffc6 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80142d4:	4603      	mov	r3, r0
	}
 80142d6:	4618      	mov	r0, r3
 80142d8:	3708      	adds	r7, #8
 80142da:	46bd      	mov	sp, r7
 80142dc:	bd80      	pop	{r7, pc}

080142de <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80142de:	b5b0      	push	{r4, r5, r7, lr}
 80142e0:	b084      	sub	sp, #16
 80142e2:	af00      	add	r7, sp, #0
 80142e4:	6078      	str	r0, [r7, #4]
 80142e6:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80142e8:	6878      	ldr	r0, [r7, #4]
 80142ea:	f000 fbb8 	bl	8014a5e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80142ee:	4604      	mov	r4, r0
 80142f0:	6838      	ldr	r0, [r7, #0]
 80142f2:	f7fc fda5 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80142f6:	4603      	mov	r3, r0
 80142f8:	4618      	mov	r0, r3
 80142fa:	f7ff ffe0 	bl	80142be <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESK_EEDcOSF_>
 80142fe:	4601      	mov	r1, r0
 8014300:	f107 030c 	add.w	r3, r7, #12
 8014304:	461a      	mov	r2, r3
 8014306:	4620      	mov	r0, r4
 8014308:	f000 fbb4 	bl	8014a74 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRS8_St17integral_constantIjLj0EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 801430c:	462b      	mov	r3, r5
      }
 801430e:	4618      	mov	r0, r3
 8014310:	3710      	adds	r7, #16
 8014312:	46bd      	mov	sp, r7
 8014314:	bdb0      	pop	{r4, r5, r7, pc}

08014316 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014316:	b5b0      	push	{r4, r5, r7, lr}
 8014318:	b082      	sub	sp, #8
 801431a:	af00      	add	r7, sp, #0
 801431c:	6078      	str	r0, [r7, #4]
 801431e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8014320:	6878      	ldr	r0, [r7, #4]
 8014322:	f000 fb9c 	bl	8014a5e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014326:	4604      	mov	r4, r0
 8014328:	6838      	ldr	r0, [r7, #0]
 801432a:	f7fc fd89 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801432e:	4603      	mov	r3, r0
 8014330:	4619      	mov	r1, r3
 8014332:	4620      	mov	r0, r4
 8014334:	f7ff ffd3 	bl	80142de <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014338:	462b      	mov	r3, r5
      }
 801433a:	4618      	mov	r0, r3
 801433c:	3708      	adds	r7, #8
 801433e:	46bd      	mov	sp, r7
 8014340:	bdb0      	pop	{r4, r5, r7, pc}

08014342 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014342:	b5b0      	push	{r4, r5, r7, lr}
 8014344:	b082      	sub	sp, #8
 8014346:	af00      	add	r7, sp, #0
 8014348:	6078      	str	r0, [r7, #4]
 801434a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801434c:	6878      	ldr	r0, [r7, #4]
 801434e:	f000 fb86 	bl	8014a5e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014352:	4604      	mov	r4, r0
 8014354:	6838      	ldr	r0, [r7, #0]
 8014356:	f7fc fd73 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801435a:	4603      	mov	r3, r0
 801435c:	4619      	mov	r1, r3
 801435e:	4620      	mov	r0, r4
 8014360:	f7ff ffd9 	bl	8014316 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014364:	462b      	mov	r3, r5
      }
 8014366:	4618      	mov	r0, r3
 8014368:	3708      	adds	r7, #8
 801436a:	46bd      	mov	sp, r7
 801436c:	bdb0      	pop	{r4, r5, r7, pc}

0801436e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801436e:	b580      	push	{r7, lr}
 8014370:	b082      	sub	sp, #8
 8014372:	af00      	add	r7, sp, #0
 8014374:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8014376:	6878      	ldr	r0, [r7, #4]
 8014378:	f7fc fd62 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801437c:	4603      	mov	r3, r0
 801437e:	4618      	mov	r0, r3
 8014380:	f7fb fe8a 	bl	8010098 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8014384:	4603      	mov	r3, r0
	}
 8014386:	4618      	mov	r0, r3
 8014388:	3708      	adds	r7, #8
 801438a:	46bd      	mov	sp, r7
 801438c:	bd80      	pop	{r7, pc}

0801438e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801438e:	b5b0      	push	{r4, r5, r7, lr}
 8014390:	b084      	sub	sp, #16
 8014392:	af00      	add	r7, sp, #0
 8014394:	6078      	str	r0, [r7, #4]
 8014396:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8014398:	6878      	ldr	r0, [r7, #4]
 801439a:	f000 fb60 	bl	8014a5e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 801439e:	4604      	mov	r4, r0
 80143a0:	6838      	ldr	r0, [r7, #0]
 80143a2:	f7fc fd4d 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80143a6:	4603      	mov	r3, r0
 80143a8:	4618      	mov	r0, r3
 80143aa:	f7ff ffe0 	bl	801436e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESK_EEDcOSF_>
 80143ae:	4601      	mov	r1, r0
 80143b0:	f107 030c 	add.w	r3, r7, #12
 80143b4:	461a      	mov	r2, r3
 80143b6:	4620      	mov	r0, r4
 80143b8:	f000 fb7a 	bl	8014ab0 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 80143bc:	462b      	mov	r3, r5
      }
 80143be:	4618      	mov	r0, r3
 80143c0:	3710      	adds	r7, #16
 80143c2:	46bd      	mov	sp, r7
 80143c4:	bdb0      	pop	{r4, r5, r7, pc}

080143c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80143c6:	b5b0      	push	{r4, r5, r7, lr}
 80143c8:	b082      	sub	sp, #8
 80143ca:	af00      	add	r7, sp, #0
 80143cc:	6078      	str	r0, [r7, #4]
 80143ce:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80143d0:	6878      	ldr	r0, [r7, #4]
 80143d2:	f000 fb44 	bl	8014a5e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80143d6:	4604      	mov	r4, r0
 80143d8:	6838      	ldr	r0, [r7, #0]
 80143da:	f7fc fd31 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80143de:	4603      	mov	r3, r0
 80143e0:	4619      	mov	r1, r3
 80143e2:	4620      	mov	r0, r4
 80143e4:	f7ff ffd3 	bl	801438e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80143e8:	462b      	mov	r3, r5
      }
 80143ea:	4618      	mov	r0, r3
 80143ec:	3708      	adds	r7, #8
 80143ee:	46bd      	mov	sp, r7
 80143f0:	bdb0      	pop	{r4, r5, r7, pc}

080143f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80143f2:	b5b0      	push	{r4, r5, r7, lr}
 80143f4:	b082      	sub	sp, #8
 80143f6:	af00      	add	r7, sp, #0
 80143f8:	6078      	str	r0, [r7, #4]
 80143fa:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80143fc:	6878      	ldr	r0, [r7, #4]
 80143fe:	f000 fb2e 	bl	8014a5e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014402:	4604      	mov	r4, r0
 8014404:	6838      	ldr	r0, [r7, #0]
 8014406:	f7fc fd1b 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801440a:	4603      	mov	r3, r0
 801440c:	4619      	mov	r1, r3
 801440e:	4620      	mov	r0, r4
 8014410:	f7ff ffd9 	bl	80143c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014414:	462b      	mov	r3, r5
      }
 8014416:	4618      	mov	r0, r3
 8014418:	3708      	adds	r7, #8
 801441a:	46bd      	mov	sp, r7
 801441c:	bdb0      	pop	{r4, r5, r7, pc}

0801441e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801441e:	b580      	push	{r7, lr}
 8014420:	b082      	sub	sp, #8
 8014422:	af00      	add	r7, sp, #0
 8014424:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8014426:	6878      	ldr	r0, [r7, #4]
 8014428:	f7fc fd0a 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801442c:	4603      	mov	r3, r0
 801442e:	4618      	mov	r0, r3
 8014430:	f7fb feae 	bl	8010190 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8014434:	4603      	mov	r3, r0
	}
 8014436:	4618      	mov	r0, r3
 8014438:	3708      	adds	r7, #8
 801443a:	46bd      	mov	sp, r7
 801443c:	bd80      	pop	{r7, pc}

0801443e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801443e:	b5b0      	push	{r4, r5, r7, lr}
 8014440:	b084      	sub	sp, #16
 8014442:	af00      	add	r7, sp, #0
 8014444:	6078      	str	r0, [r7, #4]
 8014446:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8014448:	6878      	ldr	r0, [r7, #4]
 801444a:	f000 fb08 	bl	8014a5e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 801444e:	4604      	mov	r4, r0
 8014450:	6838      	ldr	r0, [r7, #0]
 8014452:	f7fc fcf5 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014456:	4603      	mov	r3, r0
 8014458:	4618      	mov	r0, r3
 801445a:	f7ff ffe0 	bl	801441e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESK_EEDcOSF_>
 801445e:	4601      	mov	r1, r0
 8014460:	f107 030c 	add.w	r3, r7, #12
 8014464:	461a      	mov	r2, r3
 8014466:	4620      	mov	r0, r4
 8014468:	f000 fb40 	bl	8014aec <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 801446c:	462b      	mov	r3, r5
      }
 801446e:	4618      	mov	r0, r3
 8014470:	3710      	adds	r7, #16
 8014472:	46bd      	mov	sp, r7
 8014474:	bdb0      	pop	{r4, r5, r7, pc}

08014476 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014476:	b5b0      	push	{r4, r5, r7, lr}
 8014478:	b082      	sub	sp, #8
 801447a:	af00      	add	r7, sp, #0
 801447c:	6078      	str	r0, [r7, #4]
 801447e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8014480:	6878      	ldr	r0, [r7, #4]
 8014482:	f000 faec 	bl	8014a5e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014486:	4604      	mov	r4, r0
 8014488:	6838      	ldr	r0, [r7, #0]
 801448a:	f7fc fcd9 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801448e:	4603      	mov	r3, r0
 8014490:	4619      	mov	r1, r3
 8014492:	4620      	mov	r0, r4
 8014494:	f7ff ffd3 	bl	801443e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014498:	462b      	mov	r3, r5
      }
 801449a:	4618      	mov	r0, r3
 801449c:	3708      	adds	r7, #8
 801449e:	46bd      	mov	sp, r7
 80144a0:	bdb0      	pop	{r4, r5, r7, pc}

080144a2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80144a2:	b5b0      	push	{r4, r5, r7, lr}
 80144a4:	b082      	sub	sp, #8
 80144a6:	af00      	add	r7, sp, #0
 80144a8:	6078      	str	r0, [r7, #4]
 80144aa:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80144ac:	6878      	ldr	r0, [r7, #4]
 80144ae:	f000 fad6 	bl	8014a5e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80144b2:	4604      	mov	r4, r0
 80144b4:	6838      	ldr	r0, [r7, #0]
 80144b6:	f7fc fcc3 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80144ba:	4603      	mov	r3, r0
 80144bc:	4619      	mov	r1, r3
 80144be:	4620      	mov	r0, r4
 80144c0:	f7ff ffd9 	bl	8014476 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80144c4:	462b      	mov	r3, r5
      }
 80144c6:	4618      	mov	r0, r3
 80144c8:	3708      	adds	r7, #8
 80144ca:	46bd      	mov	sp, r7
 80144cc:	bdb0      	pop	{r4, r5, r7, pc}

080144ce <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80144ce:	b580      	push	{r7, lr}
 80144d0:	b082      	sub	sp, #8
 80144d2:	af00      	add	r7, sp, #0
 80144d4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80144d6:	6878      	ldr	r0, [r7, #4]
 80144d8:	f7fc fcb2 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80144dc:	4603      	mov	r3, r0
 80144de:	4618      	mov	r0, r3
 80144e0:	f7fc fab9 	bl	8010a56 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80144e4:	4603      	mov	r3, r0
	}
 80144e6:	4618      	mov	r0, r3
 80144e8:	3708      	adds	r7, #8
 80144ea:	46bd      	mov	sp, r7
 80144ec:	bd80      	pop	{r7, pc}

080144ee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80144ee:	b5b0      	push	{r4, r5, r7, lr}
 80144f0:	b084      	sub	sp, #16
 80144f2:	af00      	add	r7, sp, #0
 80144f4:	6078      	str	r0, [r7, #4]
 80144f6:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80144f8:	6878      	ldr	r0, [r7, #4]
 80144fa:	f000 fab0 	bl	8014a5e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80144fe:	4604      	mov	r4, r0
 8014500:	6838      	ldr	r0, [r7, #0]
 8014502:	f7fc fc9d 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014506:	4603      	mov	r3, r0
 8014508:	4618      	mov	r0, r3
 801450a:	f7ff ffe0 	bl	80144ce <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESK_EEDcOSF_>
 801450e:	4601      	mov	r1, r0
 8014510:	f107 030c 	add.w	r3, r7, #12
 8014514:	461a      	mov	r2, r3
 8014516:	4620      	mov	r0, r4
 8014518:	f000 fb06 	bl	8014b28 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 801451c:	462b      	mov	r3, r5
      }
 801451e:	4618      	mov	r0, r3
 8014520:	3710      	adds	r7, #16
 8014522:	46bd      	mov	sp, r7
 8014524:	bdb0      	pop	{r4, r5, r7, pc}

08014526 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014526:	b5b0      	push	{r4, r5, r7, lr}
 8014528:	b082      	sub	sp, #8
 801452a:	af00      	add	r7, sp, #0
 801452c:	6078      	str	r0, [r7, #4]
 801452e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8014530:	6878      	ldr	r0, [r7, #4]
 8014532:	f000 fa94 	bl	8014a5e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014536:	4604      	mov	r4, r0
 8014538:	6838      	ldr	r0, [r7, #0]
 801453a:	f7fc fc81 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801453e:	4603      	mov	r3, r0
 8014540:	4619      	mov	r1, r3
 8014542:	4620      	mov	r0, r4
 8014544:	f7ff ffd3 	bl	80144ee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014548:	462b      	mov	r3, r5
      }
 801454a:	4618      	mov	r0, r3
 801454c:	3708      	adds	r7, #8
 801454e:	46bd      	mov	sp, r7
 8014550:	bdb0      	pop	{r4, r5, r7, pc}

08014552 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014552:	b5b0      	push	{r4, r5, r7, lr}
 8014554:	b082      	sub	sp, #8
 8014556:	af00      	add	r7, sp, #0
 8014558:	6078      	str	r0, [r7, #4]
 801455a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801455c:	6878      	ldr	r0, [r7, #4]
 801455e:	f000 fa7e 	bl	8014a5e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014562:	4604      	mov	r4, r0
 8014564:	6838      	ldr	r0, [r7, #0]
 8014566:	f7fc fc6b 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801456a:	4603      	mov	r3, r0
 801456c:	4619      	mov	r1, r3
 801456e:	4620      	mov	r0, r4
 8014570:	f7ff ffd9 	bl	8014526 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014574:	462b      	mov	r3, r5
      }
 8014576:	4618      	mov	r0, r3
 8014578:	3708      	adds	r7, #8
 801457a:	46bd      	mov	sp, r7
 801457c:	bdb0      	pop	{r4, r5, r7, pc}

0801457e <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSL_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 801457e:	b580      	push	{r7, lr}
 8014580:	b082      	sub	sp, #8
 8014582:	af00      	add	r7, sp, #0
 8014584:	6078      	str	r0, [r7, #4]
 8014586:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8014588:	683b      	ldr	r3, [r7, #0]
 801458a:	009b      	lsls	r3, r3, #2
 801458c:	687a      	ldr	r2, [r7, #4]
 801458e:	4413      	add	r3, r2
 8014590:	4618      	mov	r0, r3
 8014592:	f000 fae7 	bl	8014b64 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 8014596:	4603      	mov	r3, r0
	}
 8014598:	4618      	mov	r0, r3
 801459a:	3708      	adds	r7, #8
 801459c:	46bd      	mov	sp, r7
 801459e:	bd80      	pop	{r7, pc}

080145a0 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 80145a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80145a2:	b085      	sub	sp, #20
 80145a4:	af00      	add	r7, sp, #0
 80145a6:	6078      	str	r0, [r7, #4]
 80145a8:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 80145aa:	4b0f      	ldr	r3, [pc, #60]	; (80145e8 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_+0x48>)
 80145ac:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 80145ae:	6838      	ldr	r0, [r7, #0]
 80145b0:	f7fb fb26 	bl	800fc00 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80145b4:	4603      	mov	r3, r0
 80145b6:	4619      	mov	r1, r3
 80145b8:	68f8      	ldr	r0, [r7, #12]
 80145ba:	f7ff ffe0 	bl	801457e <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSL_jDpT_>
 80145be:	4603      	mov	r3, r0
 80145c0:	681b      	ldr	r3, [r3, #0]
 80145c2:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 80145c4:	68bc      	ldr	r4, [r7, #8]
 80145c6:	6878      	ldr	r0, [r7, #4]
 80145c8:	f000 fad7 	bl	8014b7a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80145cc:	4605      	mov	r5, r0
 80145ce:	6838      	ldr	r0, [r7, #0]
 80145d0:	f7fc fc36 	bl	8010e40 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80145d4:	4603      	mov	r3, r0
 80145d6:	4619      	mov	r1, r3
 80145d8:	4628      	mov	r0, r5
 80145da:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 80145dc:	4633      	mov	r3, r6
    }
 80145de:	4618      	mov	r0, r3
 80145e0:	3714      	adds	r7, #20
 80145e2:	46bd      	mov	sp, r7
 80145e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80145e6:	bf00      	nop
 80145e8:	08027e68 	.word	0x08027e68

080145ec <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>:
      operator=(_Move_assign_base&& __rhs)
 80145ec:	b580      	push	{r7, lr}
 80145ee:	b084      	sub	sp, #16
 80145f0:	af00      	add	r7, sp, #0
 80145f2:	6078      	str	r0, [r7, #4]
 80145f4:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80145f6:	687b      	ldr	r3, [r7, #4]
 80145f8:	60fb      	str	r3, [r7, #12]
 80145fa:	6838      	ldr	r0, [r7, #0]
 80145fc:	f7ff fe54 	bl	80142a8 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8014600:	4602      	mov	r2, r0
 8014602:	f107 030c 	add.w	r3, r7, #12
 8014606:	4611      	mov	r1, r2
 8014608:	4618      	mov	r0, r3
 801460a:	f7ff ffc9 	bl	80145a0 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>
	return *this;
 801460e:	687b      	ldr	r3, [r7, #4]
      }
 8014610:	4618      	mov	r0, r3
 8014612:	3710      	adds	r7, #16
 8014614:	46bd      	mov	sp, r7
 8014616:	bd80      	pop	{r7, pc}

08014618 <_ZSt4moveIRP10ExpressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8014618:	b480      	push	{r7}
 801461a:	b083      	sub	sp, #12
 801461c:	af00      	add	r7, sp, #0
 801461e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8014620:	687b      	ldr	r3, [r7, #4]
 8014622:	4618      	mov	r0, r3
 8014624:	370c      	adds	r7, #12
 8014626:	46bd      	mov	sp, r7
 8014628:	f85d 7b04 	ldr.w	r7, [sp], #4
 801462c:	4770      	bx	lr

0801462e <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801462e:	b5b0      	push	{r4, r5, r7, lr}
 8014630:	b082      	sub	sp, #8
 8014632:	af00      	add	r7, sp, #0
 8014634:	6078      	str	r0, [r7, #4]
 8014636:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8014638:	687b      	ldr	r3, [r7, #4]
 801463a:	685a      	ldr	r2, [r3, #4]
 801463c:	687b      	ldr	r3, [r7, #4]
 801463e:	689b      	ldr	r3, [r3, #8]
 8014640:	429a      	cmp	r2, r3
 8014642:	d011      	beq.n	8014668 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8014644:	687c      	ldr	r4, [r7, #4]
 8014646:	687b      	ldr	r3, [r7, #4]
 8014648:	685d      	ldr	r5, [r3, #4]
 801464a:	6838      	ldr	r0, [r7, #0]
 801464c:	f000 faa0 	bl	8014b90 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014650:	4603      	mov	r3, r0
 8014652:	461a      	mov	r2, r3
 8014654:	4629      	mov	r1, r5
 8014656:	4620      	mov	r0, r4
 8014658:	f000 faa5 	bl	8014ba6 <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801465c:	687b      	ldr	r3, [r7, #4]
 801465e:	685b      	ldr	r3, [r3, #4]
 8014660:	1d1a      	adds	r2, r3, #4
 8014662:	687b      	ldr	r3, [r7, #4]
 8014664:	605a      	str	r2, [r3, #4]
 8014666:	e00c      	b.n	8014682 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8014668:	6878      	ldr	r0, [r7, #4]
 801466a:	f000 faaf 	bl	8014bcc <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 801466e:	4604      	mov	r4, r0
 8014670:	6838      	ldr	r0, [r7, #0]
 8014672:	f000 fa8d 	bl	8014b90 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014676:	4603      	mov	r3, r0
 8014678:	461a      	mov	r2, r3
 801467a:	4621      	mov	r1, r4
 801467c:	6878      	ldr	r0, [r7, #4]
 801467e:	f000 fab7 	bl	8014bf0 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8014682:	6878      	ldr	r0, [r7, #4]
 8014684:	f000 fb30 	bl	8014ce8 <_ZNSt6vectorIP10ExpressionSaIS1_EE4backEv>
 8014688:	4603      	mov	r3, r0
      }
 801468a:	4618      	mov	r0, r3
 801468c:	3708      	adds	r7, #8
 801468e:	46bd      	mov	sp, r7
 8014690:	bdb0      	pop	{r4, r5, r7, pc}

08014692 <_ZSt4moveIRP4BodyEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8014692:	b480      	push	{r7}
 8014694:	b083      	sub	sp, #12
 8014696:	af00      	add	r7, sp, #0
 8014698:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801469a:	687b      	ldr	r3, [r7, #4]
 801469c:	4618      	mov	r0, r3
 801469e:	370c      	adds	r7, #12
 80146a0:	46bd      	mov	sp, r7
 80146a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80146a6:	4770      	bx	lr

080146a8 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 80146a8:	b5b0      	push	{r4, r5, r7, lr}
 80146aa:	b082      	sub	sp, #8
 80146ac:	af00      	add	r7, sp, #0
 80146ae:	6078      	str	r0, [r7, #4]
 80146b0:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 80146b2:	687b      	ldr	r3, [r7, #4]
 80146b4:	685a      	ldr	r2, [r3, #4]
 80146b6:	687b      	ldr	r3, [r7, #4]
 80146b8:	689b      	ldr	r3, [r3, #8]
 80146ba:	429a      	cmp	r2, r3
 80146bc:	d011      	beq.n	80146e2 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 80146be:	687c      	ldr	r4, [r7, #4]
 80146c0:	687b      	ldr	r3, [r7, #4]
 80146c2:	685d      	ldr	r5, [r3, #4]
 80146c4:	6838      	ldr	r0, [r7, #0]
 80146c6:	f000 fb2a 	bl	8014d1e <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 80146ca:	4603      	mov	r3, r0
 80146cc:	461a      	mov	r2, r3
 80146ce:	4629      	mov	r1, r5
 80146d0:	4620      	mov	r0, r4
 80146d2:	f000 fb2f 	bl	8014d34 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 80146d6:	687b      	ldr	r3, [r7, #4]
 80146d8:	685b      	ldr	r3, [r3, #4]
 80146da:	1d1a      	adds	r2, r3, #4
 80146dc:	687b      	ldr	r3, [r7, #4]
 80146de:	605a      	str	r2, [r3, #4]
 80146e0:	e00c      	b.n	80146fc <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 80146e2:	6878      	ldr	r0, [r7, #4]
 80146e4:	f7ee fbe8 	bl	8002eb8 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 80146e8:	4604      	mov	r4, r0
 80146ea:	6838      	ldr	r0, [r7, #0]
 80146ec:	f000 fb17 	bl	8014d1e <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 80146f0:	4603      	mov	r3, r0
 80146f2:	461a      	mov	r2, r3
 80146f4:	4621      	mov	r1, r4
 80146f6:	6878      	ldr	r0, [r7, #4]
 80146f8:	f000 fb30 	bl	8014d5c <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 80146fc:	6878      	ldr	r0, [r7, #4]
 80146fe:	f7ed fc06 	bl	8001f0e <_ZNSt6vectorIP4BodySaIS1_EE4backEv>
 8014702:	4603      	mov	r3, r0
      }
 8014704:	4618      	mov	r0, r3
 8014706:	3708      	adds	r7, #8
 8014708:	46bd      	mov	sp, r7
 801470a:	bdb0      	pop	{r4, r5, r7, pc}

0801470c <_ZNSaIP10ExpressionEC1Ev>:
 801470c:	b580      	push	{r7, lr}
 801470e:	b082      	sub	sp, #8
 8014710:	af00      	add	r7, sp, #0
 8014712:	6078      	str	r0, [r7, #4]
 8014714:	6878      	ldr	r0, [r7, #4]
 8014716:	f000 fb9d 	bl	8014e54 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1Ev>
 801471a:	687b      	ldr	r3, [r7, #4]
 801471c:	4618      	mov	r0, r3
 801471e:	3708      	adds	r7, #8
 8014720:	46bd      	mov	sp, r7
 8014722:	bd80      	pop	{r7, pc}

08014724 <_ZNSaIP4BodyEC1Ev>:
 8014724:	b580      	push	{r7, lr}
 8014726:	b082      	sub	sp, #8
 8014728:	af00      	add	r7, sp, #0
 801472a:	6078      	str	r0, [r7, #4]
 801472c:	6878      	ldr	r0, [r7, #4]
 801472e:	f000 fb9c 	bl	8014e6a <_ZN9__gnu_cxx13new_allocatorIP4BodyEC1Ev>
 8014732:	687b      	ldr	r3, [r7, #4]
 8014734:	4618      	mov	r0, r3
 8014736:	3708      	adds	r7, #8
 8014738:	46bd      	mov	sp, r7
 801473a:	bd80      	pop	{r7, pc}

0801473c <_ZNSt12_Vector_baseIP4BodySaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801473c:	b480      	push	{r7}
 801473e:	b083      	sub	sp, #12
 8014740:	af00      	add	r7, sp, #0
 8014742:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8014744:	687b      	ldr	r3, [r7, #4]
 8014746:	2200      	movs	r2, #0
 8014748:	601a      	str	r2, [r3, #0]
 801474a:	687b      	ldr	r3, [r7, #4]
 801474c:	2200      	movs	r2, #0
 801474e:	605a      	str	r2, [r3, #4]
 8014750:	687b      	ldr	r3, [r7, #4]
 8014752:	2200      	movs	r2, #0
 8014754:	609a      	str	r2, [r3, #8]
	{ }
 8014756:	687b      	ldr	r3, [r7, #4]
 8014758:	4618      	mov	r0, r3
 801475a:	370c      	adds	r7, #12
 801475c:	46bd      	mov	sp, r7
 801475e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014762:	4770      	bx	lr

08014764 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8014764:	b580      	push	{r7, lr}
 8014766:	b084      	sub	sp, #16
 8014768:	af00      	add	r7, sp, #0
 801476a:	60f8      	str	r0, [r7, #12]
 801476c:	60b9      	str	r1, [r7, #8]
 801476e:	607a      	str	r2, [r7, #4]
	if (__p)
 8014770:	68bb      	ldr	r3, [r7, #8]
 8014772:	2b00      	cmp	r3, #0
 8014774:	d005      	beq.n	8014782 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8014776:	68fb      	ldr	r3, [r7, #12]
 8014778:	687a      	ldr	r2, [r7, #4]
 801477a:	68b9      	ldr	r1, [r7, #8]
 801477c:	4618      	mov	r0, r3
 801477e:	f000 fb7f 	bl	8014e80 <_ZNSt16allocator_traitsISaIP4BodyEE10deallocateERS2_PS1_j>
      }
 8014782:	bf00      	nop
 8014784:	3710      	adds	r7, #16
 8014786:	46bd      	mov	sp, r7
 8014788:	bd80      	pop	{r7, pc}

0801478a <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 801478a:	b480      	push	{r7}
 801478c:	b083      	sub	sp, #12
 801478e:	af00      	add	r7, sp, #0
 8014790:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8014792:	687b      	ldr	r3, [r7, #4]
 8014794:	4618      	mov	r0, r3
 8014796:	370c      	adds	r7, #12
 8014798:	46bd      	mov	sp, r7
 801479a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801479e:	4770      	bx	lr

080147a0 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80147a0:	b480      	push	{r7}
 80147a2:	b083      	sub	sp, #12
 80147a4:	af00      	add	r7, sp, #0
 80147a6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80147a8:	687b      	ldr	r3, [r7, #4]
 80147aa:	4618      	mov	r0, r3
 80147ac:	370c      	adds	r7, #12
 80147ae:	46bd      	mov	sp, r7
 80147b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80147b4:	4770      	bx	lr

080147b6 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 80147b6:	b580      	push	{r7, lr}
 80147b8:	b082      	sub	sp, #8
 80147ba:	af00      	add	r7, sp, #0
 80147bc:	6078      	str	r0, [r7, #4]
 80147be:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80147c0:	687b      	ldr	r3, [r7, #4]
 80147c2:	4618      	mov	r0, r3
 80147c4:	f000 fb6b 	bl	8014e9e <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80147c8:	6838      	ldr	r0, [r7, #0]
 80147ca:	f7ff ffe9 	bl	80147a0 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 80147ce:	4603      	mov	r3, r0
 80147d0:	4619      	mov	r1, r3
 80147d2:	6878      	ldr	r0, [r7, #4]
 80147d4:	f000 fb70 	bl	8014eb8 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS4_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80147d8:	6878      	ldr	r0, [r7, #4]
 80147da:	f7ee f9e7 	bl	8002bac <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80147de:	4603      	mov	r3, r0
	}
 80147e0:	4618      	mov	r0, r3
 80147e2:	3708      	adds	r7, #8
 80147e4:	46bd      	mov	sp, r7
 80147e6:	bd80      	pop	{r7, pc}

080147e8 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80147e8:	b480      	push	{r7}
 80147ea:	b083      	sub	sp, #12
 80147ec:	af00      	add	r7, sp, #0
 80147ee:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80147f0:	687b      	ldr	r3, [r7, #4]
 80147f2:	4618      	mov	r0, r3
 80147f4:	370c      	adds	r7, #12
 80147f6:	46bd      	mov	sp, r7
 80147f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80147fc:	4770      	bx	lr

080147fe <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 80147fe:	b580      	push	{r7, lr}
 8014800:	b082      	sub	sp, #8
 8014802:	af00      	add	r7, sp, #0
 8014804:	6078      	str	r0, [r7, #4]
 8014806:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014808:	687b      	ldr	r3, [r7, #4]
 801480a:	4618      	mov	r0, r3
 801480c:	f000 fb47 	bl	8014e9e <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014810:	6838      	ldr	r0, [r7, #0]
 8014812:	f7ff ffe9 	bl	80147e8 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 8014816:	4603      	mov	r3, r0
 8014818:	4619      	mov	r1, r3
 801481a:	6878      	ldr	r0, [r7, #4]
 801481c:	f000 fb6b 	bl	8014ef6 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS2_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014820:	6878      	ldr	r0, [r7, #4]
 8014822:	f7ee f973 	bl	8002b0c <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014826:	4603      	mov	r3, r0
	}
 8014828:	4618      	mov	r0, r3
 801482a:	3708      	adds	r7, #8
 801482c:	46bd      	mov	sp, r7
 801482e:	bd80      	pop	{r7, pc}

08014830 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014830:	b480      	push	{r7}
 8014832:	b083      	sub	sp, #12
 8014834:	af00      	add	r7, sp, #0
 8014836:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014838:	687b      	ldr	r3, [r7, #4]
 801483a:	4618      	mov	r0, r3
 801483c:	370c      	adds	r7, #12
 801483e:	46bd      	mov	sp, r7
 8014840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014844:	4770      	bx	lr

08014846 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj2EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014846:	b580      	push	{r7, lr}
 8014848:	b082      	sub	sp, #8
 801484a:	af00      	add	r7, sp, #0
 801484c:	6078      	str	r0, [r7, #4]
 801484e:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014850:	687b      	ldr	r3, [r7, #4]
 8014852:	4618      	mov	r0, r3
 8014854:	f000 fb23 	bl	8014e9e <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014858:	6838      	ldr	r0, [r7, #0]
 801485a:	f7ff ffe9 	bl	8014830 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801485e:	4603      	mov	r3, r0
 8014860:	4619      	mov	r1, r3
 8014862:	6878      	ldr	r0, [r7, #4]
 8014864:	f000 fb66 	bl	8014f34 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014868:	6878      	ldr	r0, [r7, #4]
 801486a:	f7ee fa01 	bl	8002c70 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801486e:	4603      	mov	r3, r0
	}
 8014870:	4618      	mov	r0, r3
 8014872:	3708      	adds	r7, #8
 8014874:	46bd      	mov	sp, r7
 8014876:	bd80      	pop	{r7, pc}

08014878 <_ZNSt8__detail9__variant14_UninitializedIP10AssignmentLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8014878:	b480      	push	{r7}
 801487a:	b083      	sub	sp, #12
 801487c:	af00      	add	r7, sp, #0
 801487e:	6078      	str	r0, [r7, #4]
 8014880:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 8014882:	687b      	ldr	r3, [r7, #4]
 8014884:	2200      	movs	r2, #0
 8014886:	601a      	str	r2, [r3, #0]
	{ }
 8014888:	687b      	ldr	r3, [r7, #4]
 801488a:	4618      	mov	r0, r3
 801488c:	370c      	adds	r7, #12
 801488e:	46bd      	mov	sp, r7
 8014890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014894:	4770      	bx	lr

08014896 <_ZNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8014896:	b580      	push	{r7, lr}
 8014898:	b082      	sub	sp, #8
 801489a:	af00      	add	r7, sp, #0
 801489c:	6078      	str	r0, [r7, #4]
 801489e:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 80148a0:	687b      	ldr	r3, [r7, #4]
 80148a2:	4611      	mov	r1, r2
 80148a4:	4618      	mov	r0, r3
 80148a6:	f7ff ffe7 	bl	8014878 <_ZNSt8__detail9__variant14_UninitializedIP10AssignmentLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 80148aa:	687b      	ldr	r3, [r7, #4]
 80148ac:	4618      	mov	r0, r3
 80148ae:	3708      	adds	r7, #8
 80148b0:	46bd      	mov	sp, r7
 80148b2:	bd80      	pop	{r7, pc}

080148b4 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 80148b4:	b580      	push	{r7, lr}
 80148b6:	b082      	sub	sp, #8
 80148b8:	af00      	add	r7, sp, #0
 80148ba:	6078      	str	r0, [r7, #4]
 80148bc:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 80148be:	687b      	ldr	r3, [r7, #4]
 80148c0:	4611      	mov	r1, r2
 80148c2:	4618      	mov	r0, r3
 80148c4:	f7ff ffe7 	bl	8014896 <_ZNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 80148c8:	687b      	ldr	r3, [r7, #4]
 80148ca:	2200      	movs	r2, #0
 80148cc:	711a      	strb	r2, [r3, #4]
	{ }
 80148ce:	687b      	ldr	r3, [r7, #4]
 80148d0:	4618      	mov	r0, r3
 80148d2:	3708      	adds	r7, #8
 80148d4:	46bd      	mov	sp, r7
 80148d6:	bd80      	pop	{r7, pc}

080148d8 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80148d8:	b480      	push	{r7}
 80148da:	b083      	sub	sp, #12
 80148dc:	af00      	add	r7, sp, #0
 80148de:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80148e0:	687b      	ldr	r3, [r7, #4]
 80148e2:	4618      	mov	r0, r3
 80148e4:	370c      	adds	r7, #12
 80148e6:	46bd      	mov	sp, r7
 80148e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80148ec:	4770      	bx	lr

080148ee <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj3EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 80148ee:	b580      	push	{r7, lr}
 80148f0:	b082      	sub	sp, #8
 80148f2:	af00      	add	r7, sp, #0
 80148f4:	6078      	str	r0, [r7, #4]
 80148f6:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80148f8:	687b      	ldr	r3, [r7, #4]
 80148fa:	4618      	mov	r0, r3
 80148fc:	f000 facf 	bl	8014e9e <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014900:	6838      	ldr	r0, [r7, #0]
 8014902:	f7ff ffe9 	bl	80148d8 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014906:	4603      	mov	r3, r0
 8014908:	4619      	mov	r1, r3
 801490a:	6878      	ldr	r0, [r7, #4]
 801490c:	f000 fb31 	bl	8014f72 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS8_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014910:	6878      	ldr	r0, [r7, #4]
 8014912:	f7ee fa21 	bl	8002d58 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014916:	4603      	mov	r3, r0
	}
 8014918:	4618      	mov	r0, r3
 801491a:	3708      	adds	r7, #8
 801491c:	46bd      	mov	sp, r7
 801491e:	bd80      	pop	{r7, pc}

08014920 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014920:	b480      	push	{r7}
 8014922:	b083      	sub	sp, #12
 8014924:	af00      	add	r7, sp, #0
 8014926:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014928:	687b      	ldr	r3, [r7, #4]
 801492a:	4618      	mov	r0, r3
 801492c:	370c      	adds	r7, #12
 801492e:	46bd      	mov	sp, r7
 8014930:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014934:	4770      	bx	lr

08014936 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014936:	b580      	push	{r7, lr}
 8014938:	b082      	sub	sp, #8
 801493a:	af00      	add	r7, sp, #0
 801493c:	6078      	str	r0, [r7, #4]
 801493e:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014940:	687b      	ldr	r3, [r7, #4]
 8014942:	4618      	mov	r0, r3
 8014944:	f000 faab 	bl	8014e9e <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014948:	6838      	ldr	r0, [r7, #0]
 801494a:	f7ff ffe9 	bl	8014920 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 801494e:	4603      	mov	r3, r0
 8014950:	4619      	mov	r1, r3
 8014952:	6878      	ldr	r0, [r7, #4]
 8014954:	f000 fb2c 	bl	8014fb0 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014958:	6878      	ldr	r0, [r7, #4]
 801495a:	f7ee fa83 	bl	8002e64 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801495e:	4603      	mov	r3, r0
	}
 8014960:	4618      	mov	r0, r3
 8014962:	3708      	adds	r7, #8
 8014964:	46bd      	mov	sp, r7
 8014966:	bd80      	pop	{r7, pc}

08014968 <_ZNSaIP9StatementEC1Ev>:
 8014968:	b580      	push	{r7, lr}
 801496a:	b082      	sub	sp, #8
 801496c:	af00      	add	r7, sp, #0
 801496e:	6078      	str	r0, [r7, #4]
 8014970:	6878      	ldr	r0, [r7, #4]
 8014972:	f000 fb3c 	bl	8014fee <_ZN9__gnu_cxx13new_allocatorIP9StatementEC1Ev>
 8014976:	687b      	ldr	r3, [r7, #4]
 8014978:	4618      	mov	r0, r3
 801497a:	3708      	adds	r7, #8
 801497c:	46bd      	mov	sp, r7
 801497e:	bd80      	pop	{r7, pc}

08014980 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8014980:	b480      	push	{r7}
 8014982:	b083      	sub	sp, #12
 8014984:	af00      	add	r7, sp, #0
 8014986:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8014988:	687b      	ldr	r3, [r7, #4]
 801498a:	2200      	movs	r2, #0
 801498c:	601a      	str	r2, [r3, #0]
 801498e:	687b      	ldr	r3, [r7, #4]
 8014990:	2200      	movs	r2, #0
 8014992:	605a      	str	r2, [r3, #4]
 8014994:	687b      	ldr	r3, [r7, #4]
 8014996:	2200      	movs	r2, #0
 8014998:	609a      	str	r2, [r3, #8]
	{ }
 801499a:	687b      	ldr	r3, [r7, #4]
 801499c:	4618      	mov	r0, r3
 801499e:	370c      	adds	r7, #12
 80149a0:	46bd      	mov	sp, r7
 80149a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80149a6:	4770      	bx	lr

080149a8 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 80149a8:	b580      	push	{r7, lr}
 80149aa:	b084      	sub	sp, #16
 80149ac:	af00      	add	r7, sp, #0
 80149ae:	60f8      	str	r0, [r7, #12]
 80149b0:	60b9      	str	r1, [r7, #8]
 80149b2:	607a      	str	r2, [r7, #4]
	if (__p)
 80149b4:	68bb      	ldr	r3, [r7, #8]
 80149b6:	2b00      	cmp	r3, #0
 80149b8:	d005      	beq.n	80149c6 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 80149ba:	68fb      	ldr	r3, [r7, #12]
 80149bc:	687a      	ldr	r2, [r7, #4]
 80149be:	68b9      	ldr	r1, [r7, #8]
 80149c0:	4618      	mov	r0, r3
 80149c2:	f000 fb1f 	bl	8015004 <_ZNSt16allocator_traitsISaIP9StatementEE10deallocateERS2_PS1_j>
      }
 80149c6:	bf00      	nop
 80149c8:	3710      	adds	r7, #16
 80149ca:	46bd      	mov	sp, r7
 80149cc:	bd80      	pop	{r7, pc}

080149ce <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 80149ce:	b480      	push	{r7}
 80149d0:	b083      	sub	sp, #12
 80149d2:	af00      	add	r7, sp, #0
 80149d4:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80149d6:	687b      	ldr	r3, [r7, #4]
 80149d8:	4618      	mov	r0, r3
 80149da:	370c      	adds	r7, #12
 80149dc:	46bd      	mov	sp, r7
 80149de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80149e2:	4770      	bx	lr

080149e4 <_ZSt4moveIRP9StatementEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 80149e4:	b480      	push	{r7}
 80149e6:	b083      	sub	sp, #12
 80149e8:	af00      	add	r7, sp, #0
 80149ea:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80149ec:	687b      	ldr	r3, [r7, #4]
 80149ee:	4618      	mov	r0, r3
 80149f0:	370c      	adds	r7, #12
 80149f2:	46bd      	mov	sp, r7
 80149f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80149f8:	4770      	bx	lr

080149fa <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 80149fa:	b5b0      	push	{r4, r5, r7, lr}
 80149fc:	b082      	sub	sp, #8
 80149fe:	af00      	add	r7, sp, #0
 8014a00:	6078      	str	r0, [r7, #4]
 8014a02:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8014a04:	687b      	ldr	r3, [r7, #4]
 8014a06:	685a      	ldr	r2, [r3, #4]
 8014a08:	687b      	ldr	r3, [r7, #4]
 8014a0a:	689b      	ldr	r3, [r3, #8]
 8014a0c:	429a      	cmp	r2, r3
 8014a0e:	d011      	beq.n	8014a34 <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8014a10:	687c      	ldr	r4, [r7, #4]
 8014a12:	687b      	ldr	r3, [r7, #4]
 8014a14:	685d      	ldr	r5, [r3, #4]
 8014a16:	6838      	ldr	r0, [r7, #0]
 8014a18:	f000 fb03 	bl	8015022 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014a1c:	4603      	mov	r3, r0
 8014a1e:	461a      	mov	r2, r3
 8014a20:	4629      	mov	r1, r5
 8014a22:	4620      	mov	r0, r4
 8014a24:	f000 fb08 	bl	8015038 <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8014a28:	687b      	ldr	r3, [r7, #4]
 8014a2a:	685b      	ldr	r3, [r3, #4]
 8014a2c:	1d1a      	adds	r2, r3, #4
 8014a2e:	687b      	ldr	r3, [r7, #4]
 8014a30:	605a      	str	r2, [r3, #4]
 8014a32:	e00c      	b.n	8014a4e <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8014a34:	6878      	ldr	r0, [r7, #4]
 8014a36:	f7ed f966 	bl	8001d06 <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 8014a3a:	4604      	mov	r4, r0
 8014a3c:	6838      	ldr	r0, [r7, #0]
 8014a3e:	f000 faf0 	bl	8015022 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014a42:	4603      	mov	r3, r0
 8014a44:	461a      	mov	r2, r3
 8014a46:	4621      	mov	r1, r4
 8014a48:	6878      	ldr	r0, [r7, #4]
 8014a4a:	f000 fb09 	bl	8015060 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8014a4e:	6878      	ldr	r0, [r7, #4]
 8014a50:	f000 fb82 	bl	8015158 <_ZNSt6vectorIP9StatementSaIS1_EE4backEv>
 8014a54:	4603      	mov	r3, r0
      }
 8014a56:	4618      	mov	r0, r3
 8014a58:	3708      	adds	r7, #8
 8014a5a:	46bd      	mov	sp, r7
 8014a5c:	bdb0      	pop	{r4, r5, r7, pc}

08014a5e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014a5e:	b480      	push	{r7}
 8014a60:	b083      	sub	sp, #12
 8014a62:	af00      	add	r7, sp, #0
 8014a64:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014a66:	687b      	ldr	r3, [r7, #4]
 8014a68:	4618      	mov	r0, r3
 8014a6a:	370c      	adds	r7, #12
 8014a6c:	46bd      	mov	sp, r7
 8014a6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014a72:	4770      	bx	lr

08014a74 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRS8_St17integral_constantIjLj0EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014a74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014a78:	b084      	sub	sp, #16
 8014a7a:	af00      	add	r7, sp, #0
 8014a7c:	60f8      	str	r0, [r7, #12]
 8014a7e:	60b9      	str	r1, [r7, #8]
 8014a80:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014a82:	68f8      	ldr	r0, [r7, #12]
 8014a84:	f000 f879 	bl	8014b7a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014a88:	4604      	mov	r4, r0
 8014a8a:	68b8      	ldr	r0, [r7, #8]
 8014a8c:	f7f1 f857 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8014a90:	4605      	mov	r5, r0
 8014a92:	6878      	ldr	r0, [r7, #4]
 8014a94:	f7ef f9ab 	bl	8003dee <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014a98:	4603      	mov	r3, r0
 8014a9a:	462a      	mov	r2, r5
 8014a9c:	4621      	mov	r1, r4
 8014a9e:	4630      	mov	r0, r6
 8014aa0:	f000 fb75 	bl	801518e <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRS9_St17integral_constantIjLj0EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014aa4:	4643      	mov	r3, r8
    }
 8014aa6:	4618      	mov	r0, r3
 8014aa8:	3710      	adds	r7, #16
 8014aaa:	46bd      	mov	sp, r7
 8014aac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014ab0 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014ab0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014ab4:	b084      	sub	sp, #16
 8014ab6:	af00      	add	r7, sp, #0
 8014ab8:	60f8      	str	r0, [r7, #12]
 8014aba:	60b9      	str	r1, [r7, #8]
 8014abc:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014abe:	68f8      	ldr	r0, [r7, #12]
 8014ac0:	f000 f85b 	bl	8014b7a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014ac4:	4604      	mov	r4, r0
 8014ac6:	68b8      	ldr	r0, [r7, #8]
 8014ac8:	f7f0 ffc7 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8014acc:	4605      	mov	r5, r0
 8014ace:	6878      	ldr	r0, [r7, #4]
 8014ad0:	f7ef f9c1 	bl	8003e56 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014ad4:	4603      	mov	r3, r0
 8014ad6:	462a      	mov	r2, r5
 8014ad8:	4621      	mov	r1, r4
 8014ada:	4630      	mov	r0, r6
 8014adc:	f000 fb75 	bl	80151ca <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014ae0:	4643      	mov	r3, r8
    }
 8014ae2:	4618      	mov	r0, r3
 8014ae4:	3710      	adds	r7, #16
 8014ae6:	46bd      	mov	sp, r7
 8014ae8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014aec <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014aec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014af0:	b084      	sub	sp, #16
 8014af2:	af00      	add	r7, sp, #0
 8014af4:	60f8      	str	r0, [r7, #12]
 8014af6:	60b9      	str	r1, [r7, #8]
 8014af8:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014afa:	68f8      	ldr	r0, [r7, #12]
 8014afc:	f000 f83d 	bl	8014b7a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014b00:	4604      	mov	r4, r0
 8014b02:	68b8      	ldr	r0, [r7, #8]
 8014b04:	f7f0 ffcb 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8014b08:	4605      	mov	r5, r0
 8014b0a:	6878      	ldr	r0, [r7, #4]
 8014b0c:	f7ef f9d7 	bl	8003ebe <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014b10:	4603      	mov	r3, r0
 8014b12:	462a      	mov	r2, r5
 8014b14:	4621      	mov	r1, r4
 8014b16:	4630      	mov	r0, r6
 8014b18:	f000 fb75 	bl	8015206 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014b1c:	4643      	mov	r3, r8
    }
 8014b1e:	4618      	mov	r0, r3
 8014b20:	3710      	adds	r7, #16
 8014b22:	46bd      	mov	sp, r7
 8014b24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014b28 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014b28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014b2c:	b084      	sub	sp, #16
 8014b2e:	af00      	add	r7, sp, #0
 8014b30:	60f8      	str	r0, [r7, #12]
 8014b32:	60b9      	str	r1, [r7, #8]
 8014b34:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014b36:	68f8      	ldr	r0, [r7, #12]
 8014b38:	f000 f81f 	bl	8014b7a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014b3c:	4604      	mov	r4, r0
 8014b3e:	68b8      	ldr	r0, [r7, #8]
 8014b40:	f7f0 ffcf 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8014b44:	4605      	mov	r5, r0
 8014b46:	6878      	ldr	r0, [r7, #4]
 8014b48:	f7ef f9f9 	bl	8003f3e <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014b4c:	4603      	mov	r3, r0
 8014b4e:	462a      	mov	r2, r5
 8014b50:	4621      	mov	r1, r4
 8014b52:	4630      	mov	r0, r6
 8014b54:	f000 fb75 	bl	8015242 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014b58:	4643      	mov	r3, r8
    }
 8014b5a:	4618      	mov	r0, r3
 8014b5c:	3710      	adds	r7, #16
 8014b5e:	46bd      	mov	sp, r7
 8014b60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014b64 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 8014b64:	b480      	push	{r7}
 8014b66:	b083      	sub	sp, #12
 8014b68:	af00      	add	r7, sp, #0
 8014b6a:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8014b6c:	687b      	ldr	r3, [r7, #4]
 8014b6e:	4618      	mov	r0, r3
 8014b70:	370c      	adds	r7, #12
 8014b72:	46bd      	mov	sp, r7
 8014b74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014b78:	4770      	bx	lr

08014b7a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014b7a:	b480      	push	{r7}
 8014b7c:	b083      	sub	sp, #12
 8014b7e:	af00      	add	r7, sp, #0
 8014b80:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014b82:	687b      	ldr	r3, [r7, #4]
 8014b84:	4618      	mov	r0, r3
 8014b86:	370c      	adds	r7, #12
 8014b88:	46bd      	mov	sp, r7
 8014b8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014b8e:	4770      	bx	lr

08014b90 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014b90:	b480      	push	{r7}
 8014b92:	b083      	sub	sp, #12
 8014b94:	af00      	add	r7, sp, #0
 8014b96:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014b98:	687b      	ldr	r3, [r7, #4]
 8014b9a:	4618      	mov	r0, r3
 8014b9c:	370c      	adds	r7, #12
 8014b9e:	46bd      	mov	sp, r7
 8014ba0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ba4:	4770      	bx	lr

08014ba6 <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8014ba6:	b580      	push	{r7, lr}
 8014ba8:	b084      	sub	sp, #16
 8014baa:	af00      	add	r7, sp, #0
 8014bac:	60f8      	str	r0, [r7, #12]
 8014bae:	60b9      	str	r1, [r7, #8]
 8014bb0:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8014bb2:	6878      	ldr	r0, [r7, #4]
 8014bb4:	f7ff ffec 	bl	8014b90 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014bb8:	4603      	mov	r3, r0
 8014bba:	461a      	mov	r2, r3
 8014bbc:	68b9      	ldr	r1, [r7, #8]
 8014bbe:	68f8      	ldr	r0, [r7, #12]
 8014bc0:	f000 fb5d 	bl	801527e <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 8014bc4:	bf00      	nop
 8014bc6:	3710      	adds	r7, #16
 8014bc8:	46bd      	mov	sp, r7
 8014bca:	bd80      	pop	{r7, pc}

08014bcc <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8014bcc:	b580      	push	{r7, lr}
 8014bce:	b084      	sub	sp, #16
 8014bd0:	af00      	add	r7, sp, #0
 8014bd2:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8014bd4:	687b      	ldr	r3, [r7, #4]
 8014bd6:	1d1a      	adds	r2, r3, #4
 8014bd8:	f107 030c 	add.w	r3, r7, #12
 8014bdc:	4611      	mov	r1, r2
 8014bde:	4618      	mov	r0, r3
 8014be0:	f000 fb63 	bl	80152aa <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8014be4:	68fb      	ldr	r3, [r7, #12]
 8014be6:	4618      	mov	r0, r3
 8014be8:	3710      	adds	r7, #16
 8014bea:	46bd      	mov	sp, r7
 8014bec:	bd80      	pop	{r7, pc}
	...

08014bf0 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      void
      vector<_Tp, _Alloc>::
 8014bf0:	b5b0      	push	{r4, r5, r7, lr}
 8014bf2:	b08c      	sub	sp, #48	; 0x30
 8014bf4:	af00      	add	r7, sp, #0
 8014bf6:	60f8      	str	r0, [r7, #12]
 8014bf8:	60b9      	str	r1, [r7, #8]
 8014bfa:	607a      	str	r2, [r7, #4]
    void
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
 8014bfc:	4a39      	ldr	r2, [pc, #228]	; (8014ce4 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 8014bfe:	2101      	movs	r1, #1
 8014c00:	68f8      	ldr	r0, [r7, #12]
 8014c02:	f000 fb62 	bl	80152ca <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc>
 8014c06:	62f8      	str	r0, [r7, #44]	; 0x2c
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
      pointer __old_start = this->_M_impl._M_start;
 8014c08:	68fb      	ldr	r3, [r7, #12]
 8014c0a:	681b      	ldr	r3, [r3, #0]
 8014c0c:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 8014c0e:	68fb      	ldr	r3, [r7, #12]
 8014c10:	685b      	ldr	r3, [r3, #4]
 8014c12:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8014c14:	68f8      	ldr	r0, [r7, #12]
 8014c16:	f000 fb9f 	bl	8015358 <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 8014c1a:	4603      	mov	r3, r0
 8014c1c:	617b      	str	r3, [r7, #20]
 8014c1e:	f107 0214 	add.w	r2, r7, #20
 8014c22:	f107 0308 	add.w	r3, r7, #8
 8014c26:	4611      	mov	r1, r2
 8014c28:	4618      	mov	r0, r3
 8014c2a:	f000 fba5 	bl	8015378 <_ZN9__gnu_cxxmiIPP10ExpressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 8014c2e:	4603      	mov	r3, r0
 8014c30:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8014c32:	68fb      	ldr	r3, [r7, #12]
 8014c34:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8014c36:	4618      	mov	r0, r3
 8014c38:	f7f9 fd33 	bl	800e6a2 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 8014c3c:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 8014c3e:	69fb      	ldr	r3, [r7, #28]
 8014c40:	61bb      	str	r3, [r7, #24]
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
 8014c42:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8014c44:	6a3b      	ldr	r3, [r7, #32]
 8014c46:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 8014c48:	69fa      	ldr	r2, [r7, #28]
 8014c4a:	18d5      	adds	r5, r2, r3
 8014c4c:	6878      	ldr	r0, [r7, #4]
 8014c4e:	f7ff ff9f 	bl	8014b90 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014c52:	4603      	mov	r3, r0
 8014c54:	461a      	mov	r2, r3
 8014c56:	4629      	mov	r1, r5
 8014c58:	4620      	mov	r0, r4
 8014c5a:	f7ff ffa4 	bl	8014ba6 <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
 8014c5e:	2300      	movs	r3, #0
 8014c60:	61bb      	str	r3, [r7, #24]

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014c62:	f107 0308 	add.w	r3, r7, #8
 8014c66:	4618      	mov	r0, r3
 8014c68:	f000 fbaf 	bl	80153ca <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8014c6c:	4603      	mov	r3, r0
 8014c6e:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 8014c70:	68fb      	ldr	r3, [r7, #12]
 8014c72:	4618      	mov	r0, r3
 8014c74:	f7f9 fb51 	bl	800e31a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8014c78:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014c7a:	69fa      	ldr	r2, [r7, #28]
 8014c7c:	4621      	mov	r1, r4
 8014c7e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8014c80:	f000 fb8f 	bl	80153a2 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014c84:	61b8      	str	r0, [r7, #24]

	      ++__new_finish;
 8014c86:	69bb      	ldr	r3, [r7, #24]
 8014c88:	3304      	adds	r3, #4
 8014c8a:	61bb      	str	r3, [r7, #24]

	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014c8c:	f107 0308 	add.w	r3, r7, #8
 8014c90:	4618      	mov	r0, r3
 8014c92:	f000 fb9a 	bl	80153ca <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8014c96:	4603      	mov	r3, r0
 8014c98:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 8014c9a:	68fb      	ldr	r3, [r7, #12]
 8014c9c:	4618      	mov	r0, r3
 8014c9e:	f7f9 fb3c 	bl	800e31a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8014ca2:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014ca4:	69ba      	ldr	r2, [r7, #24]
 8014ca6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8014ca8:	4620      	mov	r0, r4
 8014caa:	f000 fb7a 	bl	80153a2 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014cae:	61b8      	str	r0, [r7, #24]
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
 8014cb0:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 8014cb2:	68fb      	ldr	r3, [r7, #12]
 8014cb4:	689a      	ldr	r2, [r3, #8]
 8014cb6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8014cb8:	1ad3      	subs	r3, r2, r3
 8014cba:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 8014cbc:	461a      	mov	r2, r3
 8014cbe:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8014cc0:	f7f9 fc46 	bl	800e550 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 8014cc4:	68fb      	ldr	r3, [r7, #12]
 8014cc6:	69fa      	ldr	r2, [r7, #28]
 8014cc8:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 8014cca:	68fb      	ldr	r3, [r7, #12]
 8014ccc:	69ba      	ldr	r2, [r7, #24]
 8014cce:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8014cd0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8014cd2:	009b      	lsls	r3, r3, #2
 8014cd4:	69fa      	ldr	r2, [r7, #28]
 8014cd6:	441a      	add	r2, r3
 8014cd8:	68fb      	ldr	r3, [r7, #12]
 8014cda:	609a      	str	r2, [r3, #8]
    }
 8014cdc:	bf00      	nop
 8014cde:	3730      	adds	r7, #48	; 0x30
 8014ce0:	46bd      	mov	sp, r7
 8014ce2:	bdb0      	pop	{r4, r5, r7, pc}
 8014ce4:	08027754 	.word	0x08027754

08014ce8 <_ZNSt6vectorIP10ExpressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 8014ce8:	b580      	push	{r7, lr}
 8014cea:	b084      	sub	sp, #16
 8014cec:	af00      	add	r7, sp, #0
 8014cee:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 8014cf0:	6878      	ldr	r0, [r7, #4]
 8014cf2:	f7ff ff6b 	bl	8014bcc <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 8014cf6:	4603      	mov	r3, r0
 8014cf8:	60fb      	str	r3, [r7, #12]
 8014cfa:	f107 030c 	add.w	r3, r7, #12
 8014cfe:	2101      	movs	r1, #1
 8014d00:	4618      	mov	r0, r3
 8014d02:	f000 fb6d 	bl	80153e0 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEmiEi>
 8014d06:	4603      	mov	r3, r0
 8014d08:	60bb      	str	r3, [r7, #8]
 8014d0a:	f107 0308 	add.w	r3, r7, #8
 8014d0e:	4618      	mov	r0, r3
 8014d10:	f000 fb7f 	bl	8015412 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 8014d14:	4603      	mov	r3, r0
      }
 8014d16:	4618      	mov	r0, r3
 8014d18:	3710      	adds	r7, #16
 8014d1a:	46bd      	mov	sp, r7
 8014d1c:	bd80      	pop	{r7, pc}

08014d1e <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014d1e:	b480      	push	{r7}
 8014d20:	b083      	sub	sp, #12
 8014d22:	af00      	add	r7, sp, #0
 8014d24:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014d26:	687b      	ldr	r3, [r7, #4]
 8014d28:	4618      	mov	r0, r3
 8014d2a:	370c      	adds	r7, #12
 8014d2c:	46bd      	mov	sp, r7
 8014d2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d32:	4770      	bx	lr

08014d34 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8014d34:	b580      	push	{r7, lr}
 8014d36:	b084      	sub	sp, #16
 8014d38:	af00      	add	r7, sp, #0
 8014d3a:	60f8      	str	r0, [r7, #12]
 8014d3c:	60b9      	str	r1, [r7, #8]
 8014d3e:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8014d40:	6878      	ldr	r0, [r7, #4]
 8014d42:	f7ff ffec 	bl	8014d1e <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 8014d46:	4603      	mov	r3, r0
 8014d48:	461a      	mov	r2, r3
 8014d4a:	68b9      	ldr	r1, [r7, #8]
 8014d4c:	68f8      	ldr	r0, [r7, #12]
 8014d4e:	f000 fb6c 	bl	801542a <_ZN9__gnu_cxx13new_allocatorIP4BodyE9constructIS2_JS2_EEEvPT_DpOT0_>
 8014d52:	bf00      	nop
 8014d54:	3710      	adds	r7, #16
 8014d56:	46bd      	mov	sp, r7
 8014d58:	bd80      	pop	{r7, pc}
	...

08014d5c <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 8014d5c:	b5b0      	push	{r4, r5, r7, lr}
 8014d5e:	b08c      	sub	sp, #48	; 0x30
 8014d60:	af00      	add	r7, sp, #0
 8014d62:	60f8      	str	r0, [r7, #12]
 8014d64:	60b9      	str	r1, [r7, #8]
 8014d66:	607a      	str	r2, [r7, #4]
      const size_type __len =
 8014d68:	4a39      	ldr	r2, [pc, #228]	; (8014e50 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 8014d6a:	2101      	movs	r1, #1
 8014d6c:	68f8      	ldr	r0, [r7, #12]
 8014d6e:	f000 fb72 	bl	8015456 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc>
 8014d72:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 8014d74:	68fb      	ldr	r3, [r7, #12]
 8014d76:	681b      	ldr	r3, [r3, #0]
 8014d78:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 8014d7a:	68fb      	ldr	r3, [r7, #12]
 8014d7c:	685b      	ldr	r3, [r3, #4]
 8014d7e:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8014d80:	68f8      	ldr	r0, [r7, #12]
 8014d82:	f000 fbaf 	bl	80154e4 <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>
 8014d86:	4603      	mov	r3, r0
 8014d88:	617b      	str	r3, [r7, #20]
 8014d8a:	f107 0214 	add.w	r2, r7, #20
 8014d8e:	f107 0308 	add.w	r3, r7, #8
 8014d92:	4611      	mov	r1, r2
 8014d94:	4618      	mov	r0, r3
 8014d96:	f000 fbb5 	bl	8015504 <_ZN9__gnu_cxxmiIPP4BodySt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 8014d9a:	4603      	mov	r3, r0
 8014d9c:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8014d9e:	68fb      	ldr	r3, [r7, #12]
 8014da0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8014da2:	4618      	mov	r0, r3
 8014da4:	f000 fbc3 	bl	801552e <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj>
 8014da8:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 8014daa:	69fb      	ldr	r3, [r7, #28]
 8014dac:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 8014dae:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8014db0:	6a3b      	ldr	r3, [r7, #32]
 8014db2:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 8014db4:	69fa      	ldr	r2, [r7, #28]
 8014db6:	18d5      	adds	r5, r2, r3
 8014db8:	6878      	ldr	r0, [r7, #4]
 8014dba:	f7ff ffb0 	bl	8014d1e <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 8014dbe:	4603      	mov	r3, r0
 8014dc0:	461a      	mov	r2, r3
 8014dc2:	4629      	mov	r1, r5
 8014dc4:	4620      	mov	r0, r4
 8014dc6:	f7ff ffb5 	bl	8014d34 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 8014dca:	2300      	movs	r3, #0
 8014dcc:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014dce:	f107 0308 	add.w	r3, r7, #8
 8014dd2:	4618      	mov	r0, r3
 8014dd4:	f000 fbd3 	bl	801557e <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 8014dd8:	4603      	mov	r3, r0
 8014dda:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 8014ddc:	68fb      	ldr	r3, [r7, #12]
 8014dde:	4618      	mov	r0, r3
 8014de0:	f7ff fcd3 	bl	801478a <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 8014de4:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014de6:	69fa      	ldr	r2, [r7, #28]
 8014de8:	4621      	mov	r1, r4
 8014dea:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8014dec:	f000 fbb3 	bl	8015556 <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014df0:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 8014df2:	69bb      	ldr	r3, [r7, #24]
 8014df4:	3304      	adds	r3, #4
 8014df6:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014df8:	f107 0308 	add.w	r3, r7, #8
 8014dfc:	4618      	mov	r0, r3
 8014dfe:	f000 fbbe 	bl	801557e <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 8014e02:	4603      	mov	r3, r0
 8014e04:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 8014e06:	68fb      	ldr	r3, [r7, #12]
 8014e08:	4618      	mov	r0, r3
 8014e0a:	f7ff fcbe 	bl	801478a <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 8014e0e:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014e10:	69ba      	ldr	r2, [r7, #24]
 8014e12:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8014e14:	4620      	mov	r0, r4
 8014e16:	f000 fb9e 	bl	8015556 <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014e1a:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 8014e1c:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 8014e1e:	68fb      	ldr	r3, [r7, #12]
 8014e20:	689a      	ldr	r2, [r3, #8]
 8014e22:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8014e24:	1ad3      	subs	r3, r2, r3
 8014e26:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 8014e28:	461a      	mov	r2, r3
 8014e2a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8014e2c:	f7ff fc9a 	bl	8014764 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 8014e30:	68fb      	ldr	r3, [r7, #12]
 8014e32:	69fa      	ldr	r2, [r7, #28]
 8014e34:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 8014e36:	68fb      	ldr	r3, [r7, #12]
 8014e38:	69ba      	ldr	r2, [r7, #24]
 8014e3a:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8014e3c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8014e3e:	009b      	lsls	r3, r3, #2
 8014e40:	69fa      	ldr	r2, [r7, #28]
 8014e42:	441a      	add	r2, r3
 8014e44:	68fb      	ldr	r3, [r7, #12]
 8014e46:	609a      	str	r2, [r3, #8]
    }
 8014e48:	bf00      	nop
 8014e4a:	3730      	adds	r7, #48	; 0x30
 8014e4c:	46bd      	mov	sp, r7
 8014e4e:	bdb0      	pop	{r4, r5, r7, pc}
 8014e50:	08027754 	.word	0x08027754

08014e54 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8014e54:	b480      	push	{r7}
 8014e56:	b083      	sub	sp, #12
 8014e58:	af00      	add	r7, sp, #0
 8014e5a:	6078      	str	r0, [r7, #4]
 8014e5c:	687b      	ldr	r3, [r7, #4]
 8014e5e:	4618      	mov	r0, r3
 8014e60:	370c      	adds	r7, #12
 8014e62:	46bd      	mov	sp, r7
 8014e64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e68:	4770      	bx	lr

08014e6a <_ZN9__gnu_cxx13new_allocatorIP4BodyEC1Ev>:
 8014e6a:	b480      	push	{r7}
 8014e6c:	b083      	sub	sp, #12
 8014e6e:	af00      	add	r7, sp, #0
 8014e70:	6078      	str	r0, [r7, #4]
 8014e72:	687b      	ldr	r3, [r7, #4]
 8014e74:	4618      	mov	r0, r3
 8014e76:	370c      	adds	r7, #12
 8014e78:	46bd      	mov	sp, r7
 8014e7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e7e:	4770      	bx	lr

08014e80 <_ZNSt16allocator_traitsISaIP4BodyEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8014e80:	b580      	push	{r7, lr}
 8014e82:	b084      	sub	sp, #16
 8014e84:	af00      	add	r7, sp, #0
 8014e86:	60f8      	str	r0, [r7, #12]
 8014e88:	60b9      	str	r1, [r7, #8]
 8014e8a:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8014e8c:	687a      	ldr	r2, [r7, #4]
 8014e8e:	68b9      	ldr	r1, [r7, #8]
 8014e90:	68f8      	ldr	r0, [r7, #12]
 8014e92:	f000 fb7f 	bl	8015594 <_ZN9__gnu_cxx13new_allocatorIP4BodyE10deallocateEPS2_j>
 8014e96:	bf00      	nop
 8014e98:	3710      	adds	r7, #16
 8014e9a:	46bd      	mov	sp, r7
 8014e9c:	bd80      	pop	{r7, pc}

08014e9e <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>:
      void _M_reset()
 8014e9e:	b480      	push	{r7}
 8014ea0:	b083      	sub	sp, #12
 8014ea2:	af00      	add	r7, sp, #0
 8014ea4:	6078      	str	r0, [r7, #4]
      { _M_index = variant_npos; }
 8014ea6:	687b      	ldr	r3, [r7, #4]
 8014ea8:	22ff      	movs	r2, #255	; 0xff
 8014eaa:	711a      	strb	r2, [r3, #4]
 8014eac:	bf00      	nop
 8014eae:	370c      	adds	r7, #12
 8014eb0:	46bd      	mov	sp, r7
 8014eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014eb6:	4770      	bx	lr

08014eb8 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS4_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8014eb8:	b590      	push	{r4, r7, lr}
 8014eba:	b085      	sub	sp, #20
 8014ebc:	af00      	add	r7, sp, #0
 8014ebe:	6078      	str	r0, [r7, #4]
 8014ec0:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8014ec2:	687b      	ldr	r3, [r7, #4]
 8014ec4:	2201      	movs	r2, #1
 8014ec6:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8014ec8:	6878      	ldr	r0, [r7, #4]
 8014eca:	f7ed fe5e 	bl	8002b8a <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8014ece:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8014ed0:	6838      	ldr	r0, [r7, #0]
 8014ed2:	f7ff fc65 	bl	80147a0 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014ed6:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8014ed8:	681c      	ldr	r4, [r3, #0]
 8014eda:	68f8      	ldr	r0, [r7, #12]
 8014edc:	f000 fb66 	bl	80155ac <_ZSt9addressofIP13Function_callEPT_RS2_>
 8014ee0:	4603      	mov	r3, r0
 8014ee2:	4619      	mov	r1, r3
 8014ee4:	2004      	movs	r0, #4
 8014ee6:	f7ec f8b8 	bl	800105a <_ZnwjPv>
 8014eea:	4603      	mov	r3, r0
 8014eec:	601c      	str	r4, [r3, #0]
    }
 8014eee:	bf00      	nop
 8014ef0:	3714      	adds	r7, #20
 8014ef2:	46bd      	mov	sp, r7
 8014ef4:	bd90      	pop	{r4, r7, pc}

08014ef6 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS2_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8014ef6:	b590      	push	{r4, r7, lr}
 8014ef8:	b085      	sub	sp, #20
 8014efa:	af00      	add	r7, sp, #0
 8014efc:	6078      	str	r0, [r7, #4]
 8014efe:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8014f00:	687b      	ldr	r3, [r7, #4]
 8014f02:	2200      	movs	r2, #0
 8014f04:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8014f06:	6878      	ldr	r0, [r7, #4]
 8014f08:	f7ed fdef 	bl	8002aea <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8014f0c:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8014f0e:	6838      	ldr	r0, [r7, #0]
 8014f10:	f7ff fc6a 	bl	80147e8 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 8014f14:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8014f16:	681c      	ldr	r4, [r3, #0]
 8014f18:	68f8      	ldr	r0, [r7, #12]
 8014f1a:	f000 fb53 	bl	80155c4 <_ZSt9addressofIP10AssignmentEPT_RS2_>
 8014f1e:	4603      	mov	r3, r0
 8014f20:	4619      	mov	r1, r3
 8014f22:	2004      	movs	r0, #4
 8014f24:	f7ec f899 	bl	800105a <_ZnwjPv>
 8014f28:	4603      	mov	r3, r0
 8014f2a:	601c      	str	r4, [r3, #0]
    }
 8014f2c:	bf00      	nop
 8014f2e:	3714      	adds	r7, #20
 8014f30:	46bd      	mov	sp, r7
 8014f32:	bd90      	pop	{r4, r7, pc}

08014f34 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8014f34:	b590      	push	{r4, r7, lr}
 8014f36:	b085      	sub	sp, #20
 8014f38:	af00      	add	r7, sp, #0
 8014f3a:	6078      	str	r0, [r7, #4]
 8014f3c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8014f3e:	687b      	ldr	r3, [r7, #4]
 8014f40:	2202      	movs	r2, #2
 8014f42:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8014f44:	6878      	ldr	r0, [r7, #4]
 8014f46:	f7ed fe82 	bl	8002c4e <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8014f4a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8014f4c:	6838      	ldr	r0, [r7, #0]
 8014f4e:	f7ff fc6f 	bl	8014830 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014f52:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8014f54:	681c      	ldr	r4, [r3, #0]
 8014f56:	68f8      	ldr	r0, [r7, #12]
 8014f58:	f000 fb40 	bl	80155dc <_ZSt9addressofIP11Method_callEPT_RS2_>
 8014f5c:	4603      	mov	r3, r0
 8014f5e:	4619      	mov	r1, r3
 8014f60:	2004      	movs	r0, #4
 8014f62:	f7ec f87a 	bl	800105a <_ZnwjPv>
 8014f66:	4603      	mov	r3, r0
 8014f68:	601c      	str	r4, [r3, #0]
    }
 8014f6a:	bf00      	nop
 8014f6c:	3714      	adds	r7, #20
 8014f6e:	46bd      	mov	sp, r7
 8014f70:	bd90      	pop	{r4, r7, pc}

08014f72 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS8_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8014f72:	b590      	push	{r4, r7, lr}
 8014f74:	b085      	sub	sp, #20
 8014f76:	af00      	add	r7, sp, #0
 8014f78:	6078      	str	r0, [r7, #4]
 8014f7a:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8014f7c:	687b      	ldr	r3, [r7, #4]
 8014f7e:	2203      	movs	r2, #3
 8014f80:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8014f82:	6878      	ldr	r0, [r7, #4]
 8014f84:	f7ed fed7 	bl	8002d36 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8014f88:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8014f8a:	6838      	ldr	r0, [r7, #0]
 8014f8c:	f7ff fca4 	bl	80148d8 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014f90:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8014f92:	681c      	ldr	r4, [r3, #0]
 8014f94:	68f8      	ldr	r0, [r7, #12]
 8014f96:	f000 fb2d 	bl	80155f4 <_ZSt9addressofIP15While_statementEPT_RS2_>
 8014f9a:	4603      	mov	r3, r0
 8014f9c:	4619      	mov	r1, r3
 8014f9e:	2004      	movs	r0, #4
 8014fa0:	f7ec f85b 	bl	800105a <_ZnwjPv>
 8014fa4:	4603      	mov	r3, r0
 8014fa6:	601c      	str	r4, [r3, #0]
    }
 8014fa8:	bf00      	nop
 8014faa:	3714      	adds	r7, #20
 8014fac:	46bd      	mov	sp, r7
 8014fae:	bd90      	pop	{r4, r7, pc}

08014fb0 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8014fb0:	b590      	push	{r4, r7, lr}
 8014fb2:	b085      	sub	sp, #20
 8014fb4:	af00      	add	r7, sp, #0
 8014fb6:	6078      	str	r0, [r7, #4]
 8014fb8:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8014fba:	687b      	ldr	r3, [r7, #4]
 8014fbc:	2204      	movs	r2, #4
 8014fbe:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8014fc0:	6878      	ldr	r0, [r7, #4]
 8014fc2:	f7ed ff3e 	bl	8002e42 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8014fc6:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8014fc8:	6838      	ldr	r0, [r7, #0]
 8014fca:	f7ff fca9 	bl	8014920 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014fce:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8014fd0:	681c      	ldr	r4, [r3, #0]
 8014fd2:	68f8      	ldr	r0, [r7, #12]
 8014fd4:	f000 fb1a 	bl	801560c <_ZSt9addressofIP12If_statementEPT_RS2_>
 8014fd8:	4603      	mov	r3, r0
 8014fda:	4619      	mov	r1, r3
 8014fdc:	2004      	movs	r0, #4
 8014fde:	f7ec f83c 	bl	800105a <_ZnwjPv>
 8014fe2:	4603      	mov	r3, r0
 8014fe4:	601c      	str	r4, [r3, #0]
    }
 8014fe6:	bf00      	nop
 8014fe8:	3714      	adds	r7, #20
 8014fea:	46bd      	mov	sp, r7
 8014fec:	bd90      	pop	{r4, r7, pc}

08014fee <_ZN9__gnu_cxx13new_allocatorIP9StatementEC1Ev>:
 8014fee:	b480      	push	{r7}
 8014ff0:	b083      	sub	sp, #12
 8014ff2:	af00      	add	r7, sp, #0
 8014ff4:	6078      	str	r0, [r7, #4]
 8014ff6:	687b      	ldr	r3, [r7, #4]
 8014ff8:	4618      	mov	r0, r3
 8014ffa:	370c      	adds	r7, #12
 8014ffc:	46bd      	mov	sp, r7
 8014ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015002:	4770      	bx	lr

08015004 <_ZNSt16allocator_traitsISaIP9StatementEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8015004:	b580      	push	{r7, lr}
 8015006:	b084      	sub	sp, #16
 8015008:	af00      	add	r7, sp, #0
 801500a:	60f8      	str	r0, [r7, #12]
 801500c:	60b9      	str	r1, [r7, #8]
 801500e:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8015010:	687a      	ldr	r2, [r7, #4]
 8015012:	68b9      	ldr	r1, [r7, #8]
 8015014:	68f8      	ldr	r0, [r7, #12]
 8015016:	f000 fb05 	bl	8015624 <_ZN9__gnu_cxx13new_allocatorIP9StatementE10deallocateEPS2_j>
 801501a:	bf00      	nop
 801501c:	3710      	adds	r7, #16
 801501e:	46bd      	mov	sp, r7
 8015020:	bd80      	pop	{r7, pc}

08015022 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8015022:	b480      	push	{r7}
 8015024:	b083      	sub	sp, #12
 8015026:	af00      	add	r7, sp, #0
 8015028:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801502a:	687b      	ldr	r3, [r7, #4]
 801502c:	4618      	mov	r0, r3
 801502e:	370c      	adds	r7, #12
 8015030:	46bd      	mov	sp, r7
 8015032:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015036:	4770      	bx	lr

08015038 <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8015038:	b580      	push	{r7, lr}
 801503a:	b084      	sub	sp, #16
 801503c:	af00      	add	r7, sp, #0
 801503e:	60f8      	str	r0, [r7, #12]
 8015040:	60b9      	str	r1, [r7, #8]
 8015042:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8015044:	6878      	ldr	r0, [r7, #4]
 8015046:	f7ff ffec 	bl	8015022 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 801504a:	4603      	mov	r3, r0
 801504c:	461a      	mov	r2, r3
 801504e:	68b9      	ldr	r1, [r7, #8]
 8015050:	68f8      	ldr	r0, [r7, #12]
 8015052:	f000 faf3 	bl	801563c <_ZN9__gnu_cxx13new_allocatorIP9StatementE9constructIS2_JS2_EEEvPT_DpOT0_>
 8015056:	bf00      	nop
 8015058:	3710      	adds	r7, #16
 801505a:	46bd      	mov	sp, r7
 801505c:	bd80      	pop	{r7, pc}
	...

08015060 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 8015060:	b5b0      	push	{r4, r5, r7, lr}
 8015062:	b08c      	sub	sp, #48	; 0x30
 8015064:	af00      	add	r7, sp, #0
 8015066:	60f8      	str	r0, [r7, #12]
 8015068:	60b9      	str	r1, [r7, #8]
 801506a:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801506c:	4a39      	ldr	r2, [pc, #228]	; (8015154 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801506e:	2101      	movs	r1, #1
 8015070:	68f8      	ldr	r0, [r7, #12]
 8015072:	f000 faf9 	bl	8015668 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc>
 8015076:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 8015078:	68fb      	ldr	r3, [r7, #12]
 801507a:	681b      	ldr	r3, [r3, #0]
 801507c:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801507e:	68fb      	ldr	r3, [r7, #12]
 8015080:	685b      	ldr	r3, [r3, #4]
 8015082:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8015084:	68f8      	ldr	r0, [r7, #12]
 8015086:	f7ec fe2e 	bl	8001ce6 <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>
 801508a:	4603      	mov	r3, r0
 801508c:	617b      	str	r3, [r7, #20]
 801508e:	f107 0214 	add.w	r2, r7, #20
 8015092:	f107 0308 	add.w	r3, r7, #8
 8015096:	4611      	mov	r1, r2
 8015098:	4618      	mov	r0, r3
 801509a:	f000 fb2c 	bl	80156f6 <_ZN9__gnu_cxxmiIPP9StatementSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801509e:	4603      	mov	r3, r0
 80150a0:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 80150a2:	68fb      	ldr	r3, [r7, #12]
 80150a4:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80150a6:	4618      	mov	r0, r3
 80150a8:	f000 fb3a 	bl	8015720 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj>
 80150ac:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 80150ae:	69fb      	ldr	r3, [r7, #28]
 80150b0:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 80150b2:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 80150b4:	6a3b      	ldr	r3, [r7, #32]
 80150b6:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 80150b8:	69fa      	ldr	r2, [r7, #28]
 80150ba:	18d5      	adds	r5, r2, r3
 80150bc:	6878      	ldr	r0, [r7, #4]
 80150be:	f7ff ffb0 	bl	8015022 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 80150c2:	4603      	mov	r3, r0
 80150c4:	461a      	mov	r2, r3
 80150c6:	4629      	mov	r1, r5
 80150c8:	4620      	mov	r0, r4
 80150ca:	f7ff ffb5 	bl	8015038 <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 80150ce:	2300      	movs	r3, #0
 80150d0:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 80150d2:	f107 0308 	add.w	r3, r7, #8
 80150d6:	4618      	mov	r0, r3
 80150d8:	f7ed fcd8 	bl	8002a8c <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 80150dc:	4603      	mov	r3, r0
 80150de:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 80150e0:	68fb      	ldr	r3, [r7, #12]
 80150e2:	4618      	mov	r0, r3
 80150e4:	f7ff fc73 	bl	80149ce <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 80150e8:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 80150ea:	69fa      	ldr	r2, [r7, #28]
 80150ec:	4621      	mov	r1, r4
 80150ee:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80150f0:	f000 fb2a 	bl	8015748 <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 80150f4:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 80150f6:	69bb      	ldr	r3, [r7, #24]
 80150f8:	3304      	adds	r3, #4
 80150fa:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 80150fc:	f107 0308 	add.w	r3, r7, #8
 8015100:	4618      	mov	r0, r3
 8015102:	f7ed fcc3 	bl	8002a8c <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8015106:	4603      	mov	r3, r0
 8015108:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801510a:	68fb      	ldr	r3, [r7, #12]
 801510c:	4618      	mov	r0, r3
 801510e:	f7ff fc5e 	bl	80149ce <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 8015112:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8015114:	69ba      	ldr	r2, [r7, #24]
 8015116:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8015118:	4620      	mov	r0, r4
 801511a:	f000 fb15 	bl	8015748 <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801511e:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 8015120:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 8015122:	68fb      	ldr	r3, [r7, #12]
 8015124:	689a      	ldr	r2, [r3, #8]
 8015126:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8015128:	1ad3      	subs	r3, r2, r3
 801512a:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801512c:	461a      	mov	r2, r3
 801512e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8015130:	f7ff fc3a 	bl	80149a8 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 8015134:	68fb      	ldr	r3, [r7, #12]
 8015136:	69fa      	ldr	r2, [r7, #28]
 8015138:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801513a:	68fb      	ldr	r3, [r7, #12]
 801513c:	69ba      	ldr	r2, [r7, #24]
 801513e:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8015140:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8015142:	009b      	lsls	r3, r3, #2
 8015144:	69fa      	ldr	r2, [r7, #28]
 8015146:	441a      	add	r2, r3
 8015148:	68fb      	ldr	r3, [r7, #12]
 801514a:	609a      	str	r2, [r3, #8]
    }
 801514c:	bf00      	nop
 801514e:	3730      	adds	r7, #48	; 0x30
 8015150:	46bd      	mov	sp, r7
 8015152:	bdb0      	pop	{r4, r5, r7, pc}
 8015154:	08027754 	.word	0x08027754

08015158 <_ZNSt6vectorIP9StatementSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 8015158:	b580      	push	{r7, lr}
 801515a:	b084      	sub	sp, #16
 801515c:	af00      	add	r7, sp, #0
 801515e:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 8015160:	6878      	ldr	r0, [r7, #4]
 8015162:	f7ec fdd0 	bl	8001d06 <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 8015166:	4603      	mov	r3, r0
 8015168:	60fb      	str	r3, [r7, #12]
 801516a:	f107 030c 	add.w	r3, r7, #12
 801516e:	2101      	movs	r1, #1
 8015170:	4618      	mov	r0, r3
 8015172:	f000 fafd 	bl	8015770 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEmiEi>
 8015176:	4603      	mov	r3, r0
 8015178:	60bb      	str	r3, [r7, #8]
 801517a:	f107 0308 	add.w	r3, r7, #8
 801517e:	4618      	mov	r0, r3
 8015180:	f7ec fdfa 	bl	8001d78 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>
 8015184:	4603      	mov	r3, r0
      }
 8015186:	4618      	mov	r0, r3
 8015188:	3710      	adds	r7, #16
 801518a:	46bd      	mov	sp, r7
 801518c:	bd80      	pop	{r7, pc}

0801518e <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRS9_St17integral_constantIjLj0EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801518e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015192:	b084      	sub	sp, #16
 8015194:	af00      	add	r7, sp, #0
 8015196:	7338      	strb	r0, [r7, #12]
 8015198:	60b9      	str	r1, [r7, #8]
 801519a:	607a      	str	r2, [r7, #4]
 801519c:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801519e:	68b8      	ldr	r0, [r7, #8]
 80151a0:	f7ff fceb 	bl	8014b7a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80151a4:	4604      	mov	r4, r0
 80151a6:	6878      	ldr	r0, [r7, #4]
 80151a8:	f7f0 fcc9 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80151ac:	4605      	mov	r5, r0
 80151ae:	6838      	ldr	r0, [r7, #0]
 80151b0:	f7ee fe1d 	bl	8003dee <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80151b4:	4632      	mov	r2, r6
 80151b6:	4629      	mov	r1, r5
 80151b8:	4620      	mov	r0, r4
 80151ba:	f000 faf2 	bl	80157a2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_>
 80151be:	4643      	mov	r3, r8
 80151c0:	4618      	mov	r0, r3
 80151c2:	3710      	adds	r7, #16
 80151c4:	46bd      	mov	sp, r7
 80151c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080151ca <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80151ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80151ce:	b084      	sub	sp, #16
 80151d0:	af00      	add	r7, sp, #0
 80151d2:	7338      	strb	r0, [r7, #12]
 80151d4:	60b9      	str	r1, [r7, #8]
 80151d6:	607a      	str	r2, [r7, #4]
 80151d8:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80151da:	68b8      	ldr	r0, [r7, #8]
 80151dc:	f7ff fccd 	bl	8014b7a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80151e0:	4604      	mov	r4, r0
 80151e2:	6878      	ldr	r0, [r7, #4]
 80151e4:	f7f0 fc39 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80151e8:	4605      	mov	r5, r0
 80151ea:	6838      	ldr	r0, [r7, #0]
 80151ec:	f7ee fe33 	bl	8003e56 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80151f0:	4632      	mov	r2, r6
 80151f2:	4629      	mov	r1, r5
 80151f4:	4620      	mov	r0, r4
 80151f6:	f000 fb1d 	bl	8015834 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_>
 80151fa:	4643      	mov	r3, r8
 80151fc:	4618      	mov	r0, r3
 80151fe:	3710      	adds	r7, #16
 8015200:	46bd      	mov	sp, r7
 8015202:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015206 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8015206:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801520a:	b084      	sub	sp, #16
 801520c:	af00      	add	r7, sp, #0
 801520e:	7338      	strb	r0, [r7, #12]
 8015210:	60b9      	str	r1, [r7, #8]
 8015212:	607a      	str	r2, [r7, #4]
 8015214:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8015216:	68b8      	ldr	r0, [r7, #8]
 8015218:	f7ff fcaf 	bl	8014b7a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 801521c:	4604      	mov	r4, r0
 801521e:	6878      	ldr	r0, [r7, #4]
 8015220:	f7f0 fc3d 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8015224:	4605      	mov	r5, r0
 8015226:	6838      	ldr	r0, [r7, #0]
 8015228:	f7ee fe49 	bl	8003ebe <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 801522c:	4632      	mov	r2, r6
 801522e:	4629      	mov	r1, r5
 8015230:	4620      	mov	r0, r4
 8015232:	f000 fb46 	bl	80158c2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_>
 8015236:	4643      	mov	r3, r8
 8015238:	4618      	mov	r0, r3
 801523a:	3710      	adds	r7, #16
 801523c:	46bd      	mov	sp, r7
 801523e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015242 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8015242:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015246:	b084      	sub	sp, #16
 8015248:	af00      	add	r7, sp, #0
 801524a:	7338      	strb	r0, [r7, #12]
 801524c:	60b9      	str	r1, [r7, #8]
 801524e:	607a      	str	r2, [r7, #4]
 8015250:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8015252:	68b8      	ldr	r0, [r7, #8]
 8015254:	f7ff fc91 	bl	8014b7a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8015258:	4604      	mov	r4, r0
 801525a:	6878      	ldr	r0, [r7, #4]
 801525c:	f7f0 fc41 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8015260:	4605      	mov	r5, r0
 8015262:	6838      	ldr	r0, [r7, #0]
 8015264:	f7ee fe6b 	bl	8003f3e <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8015268:	4632      	mov	r2, r6
 801526a:	4629      	mov	r1, r5
 801526c:	4620      	mov	r0, r4
 801526e:	f000 fb6f 	bl	8015950 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_>
 8015272:	4643      	mov	r3, r8
 8015274:	4618      	mov	r0, r3
 8015276:	3710      	adds	r7, #16
 8015278:	46bd      	mov	sp, r7
 801527a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801527e <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801527e:	b590      	push	{r4, r7, lr}
 8015280:	b085      	sub	sp, #20
 8015282:	af00      	add	r7, sp, #0
 8015284:	60f8      	str	r0, [r7, #12]
 8015286:	60b9      	str	r1, [r7, #8]
 8015288:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801528a:	6878      	ldr	r0, [r7, #4]
 801528c:	f7ff fc80 	bl	8014b90 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8015290:	4603      	mov	r3, r0
 8015292:	681c      	ldr	r4, [r3, #0]
 8015294:	68bb      	ldr	r3, [r7, #8]
 8015296:	4619      	mov	r1, r3
 8015298:	2004      	movs	r0, #4
 801529a:	f7eb fede 	bl	800105a <_ZnwjPv>
 801529e:	4603      	mov	r3, r0
 80152a0:	601c      	str	r4, [r3, #0]
 80152a2:	bf00      	nop
 80152a4:	3714      	adds	r7, #20
 80152a6:	46bd      	mov	sp, r7
 80152a8:	bd90      	pop	{r4, r7, pc}

080152aa <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 80152aa:	b480      	push	{r7}
 80152ac:	b083      	sub	sp, #12
 80152ae:	af00      	add	r7, sp, #0
 80152b0:	6078      	str	r0, [r7, #4]
 80152b2:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 80152b4:	683b      	ldr	r3, [r7, #0]
 80152b6:	681a      	ldr	r2, [r3, #0]
 80152b8:	687b      	ldr	r3, [r7, #4]
 80152ba:	601a      	str	r2, [r3, #0]
 80152bc:	687b      	ldr	r3, [r7, #4]
 80152be:	4618      	mov	r0, r3
 80152c0:	370c      	adds	r7, #12
 80152c2:	46bd      	mov	sp, r7
 80152c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80152c8:	4770      	bx	lr

080152ca <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 80152ca:	b590      	push	{r4, r7, lr}
 80152cc:	b087      	sub	sp, #28
 80152ce:	af00      	add	r7, sp, #0
 80152d0:	60f8      	str	r0, [r7, #12]
 80152d2:	60b9      	str	r1, [r7, #8]
 80152d4:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 80152d6:	68f8      	ldr	r0, [r7, #12]
 80152d8:	f000 fb82 	bl	80159e0 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 80152dc:	4604      	mov	r4, r0
 80152de:	68f8      	ldr	r0, [r7, #12]
 80152e0:	f7ec fd92 	bl	8001e08 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 80152e4:	4603      	mov	r3, r0
 80152e6:	1ae2      	subs	r2, r4, r3
 80152e8:	68bb      	ldr	r3, [r7, #8]
 80152ea:	429a      	cmp	r2, r3
 80152ec:	bf34      	ite	cc
 80152ee:	2301      	movcc	r3, #1
 80152f0:	2300      	movcs	r3, #0
 80152f2:	b2db      	uxtb	r3, r3
 80152f4:	2b00      	cmp	r3, #0
 80152f6:	d002      	beq.n	80152fe <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 80152f8:	6878      	ldr	r0, [r7, #4]
 80152fa:	f00d f99e 	bl	802263a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 80152fe:	68f8      	ldr	r0, [r7, #12]
 8015300:	f7ec fd82 	bl	8001e08 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8015304:	4604      	mov	r4, r0
 8015306:	68f8      	ldr	r0, [r7, #12]
 8015308:	f7ec fd7e 	bl	8001e08 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 801530c:	4603      	mov	r3, r0
 801530e:	613b      	str	r3, [r7, #16]
 8015310:	f107 0208 	add.w	r2, r7, #8
 8015314:	f107 0310 	add.w	r3, r7, #16
 8015318:	4611      	mov	r1, r2
 801531a:	4618      	mov	r0, r3
 801531c:	f000 fb71 	bl	8015a02 <_ZSt3maxIjERKT_S2_S2_>
 8015320:	4603      	mov	r3, r0
 8015322:	681b      	ldr	r3, [r3, #0]
 8015324:	4423      	add	r3, r4
 8015326:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8015328:	68f8      	ldr	r0, [r7, #12]
 801532a:	f7ec fd6d 	bl	8001e08 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 801532e:	4602      	mov	r2, r0
 8015330:	697b      	ldr	r3, [r7, #20]
 8015332:	4293      	cmp	r3, r2
 8015334:	d306      	bcc.n	8015344 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 8015336:	68f8      	ldr	r0, [r7, #12]
 8015338:	f000 fb52 	bl	80159e0 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 801533c:	4602      	mov	r2, r0
 801533e:	697b      	ldr	r3, [r7, #20]
 8015340:	4293      	cmp	r3, r2
 8015342:	d904      	bls.n	801534e <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 8015344:	68f8      	ldr	r0, [r7, #12]
 8015346:	f000 fb4b 	bl	80159e0 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 801534a:	4603      	mov	r3, r0
 801534c:	e000      	b.n	8015350 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801534e:	697b      	ldr	r3, [r7, #20]
      }
 8015350:	4618      	mov	r0, r3
 8015352:	371c      	adds	r7, #28
 8015354:	46bd      	mov	sp, r7
 8015356:	bd90      	pop	{r4, r7, pc}

08015358 <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8015358:	b580      	push	{r7, lr}
 801535a:	b084      	sub	sp, #16
 801535c:	af00      	add	r7, sp, #0
 801535e:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8015360:	687a      	ldr	r2, [r7, #4]
 8015362:	f107 030c 	add.w	r3, r7, #12
 8015366:	4611      	mov	r1, r2
 8015368:	4618      	mov	r0, r3
 801536a:	f7ff ff9e 	bl	80152aa <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801536e:	68fb      	ldr	r3, [r7, #12]
 8015370:	4618      	mov	r0, r3
 8015372:	3710      	adds	r7, #16
 8015374:	46bd      	mov	sp, r7
 8015376:	bd80      	pop	{r7, pc}

08015378 <_ZN9__gnu_cxxmiIPP10ExpressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 8015378:	b590      	push	{r4, r7, lr}
 801537a:	b083      	sub	sp, #12
 801537c:	af00      	add	r7, sp, #0
 801537e:	6078      	str	r0, [r7, #4]
 8015380:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8015382:	6878      	ldr	r0, [r7, #4]
 8015384:	f000 f821 	bl	80153ca <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8015388:	4603      	mov	r3, r0
 801538a:	681c      	ldr	r4, [r3, #0]
 801538c:	6838      	ldr	r0, [r7, #0]
 801538e:	f000 f81c 	bl	80153ca <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8015392:	4603      	mov	r3, r0
 8015394:	681b      	ldr	r3, [r3, #0]
 8015396:	1ae3      	subs	r3, r4, r3
 8015398:	109b      	asrs	r3, r3, #2
 801539a:	4618      	mov	r0, r3
 801539c:	370c      	adds	r7, #12
 801539e:	46bd      	mov	sp, r7
 80153a0:	bd90      	pop	{r4, r7, pc}

080153a2 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 80153a2:	b590      	push	{r4, r7, lr}
 80153a4:	b089      	sub	sp, #36	; 0x24
 80153a6:	af02      	add	r7, sp, #8
 80153a8:	60f8      	str	r0, [r7, #12]
 80153aa:	60b9      	str	r1, [r7, #8]
 80153ac:	607a      	str	r2, [r7, #4]
 80153ae:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 80153b0:	f88d 4000 	strb.w	r4, [sp]
 80153b4:	683b      	ldr	r3, [r7, #0]
 80153b6:	687a      	ldr	r2, [r7, #4]
 80153b8:	68b9      	ldr	r1, [r7, #8]
 80153ba:	68f8      	ldr	r0, [r7, #12]
 80153bc:	f000 fb35 	bl	8015a2a <_ZNSt6vectorIP10ExpressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 80153c0:	4603      	mov	r3, r0
      }
 80153c2:	4618      	mov	r0, r3
 80153c4:	371c      	adds	r7, #28
 80153c6:	46bd      	mov	sp, r7
 80153c8:	bd90      	pop	{r4, r7, pc}

080153ca <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 80153ca:	b480      	push	{r7}
 80153cc:	b083      	sub	sp, #12
 80153ce:	af00      	add	r7, sp, #0
 80153d0:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 80153d2:	687b      	ldr	r3, [r7, #4]
 80153d4:	4618      	mov	r0, r3
 80153d6:	370c      	adds	r7, #12
 80153d8:	46bd      	mov	sp, r7
 80153da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80153de:	4770      	bx	lr

080153e0 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 80153e0:	b580      	push	{r7, lr}
 80153e2:	b084      	sub	sp, #16
 80153e4:	af00      	add	r7, sp, #0
 80153e6:	6078      	str	r0, [r7, #4]
 80153e8:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 80153ea:	687b      	ldr	r3, [r7, #4]
 80153ec:	681a      	ldr	r2, [r3, #0]
 80153ee:	683b      	ldr	r3, [r7, #0]
 80153f0:	009b      	lsls	r3, r3, #2
 80153f2:	425b      	negs	r3, r3
 80153f4:	4413      	add	r3, r2
 80153f6:	60fb      	str	r3, [r7, #12]
 80153f8:	f107 020c 	add.w	r2, r7, #12
 80153fc:	f107 0308 	add.w	r3, r7, #8
 8015400:	4611      	mov	r1, r2
 8015402:	4618      	mov	r0, r3
 8015404:	f7ff ff51 	bl	80152aa <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8015408:	68bb      	ldr	r3, [r7, #8]
 801540a:	4618      	mov	r0, r3
 801540c:	3710      	adds	r7, #16
 801540e:	46bd      	mov	sp, r7
 8015410:	bd80      	pop	{r7, pc}

08015412 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8015412:	b480      	push	{r7}
 8015414:	b083      	sub	sp, #12
 8015416:	af00      	add	r7, sp, #0
 8015418:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801541a:	687b      	ldr	r3, [r7, #4]
 801541c:	681b      	ldr	r3, [r3, #0]
 801541e:	4618      	mov	r0, r3
 8015420:	370c      	adds	r7, #12
 8015422:	46bd      	mov	sp, r7
 8015424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015428:	4770      	bx	lr

0801542a <_ZN9__gnu_cxx13new_allocatorIP4BodyE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801542a:	b590      	push	{r4, r7, lr}
 801542c:	b085      	sub	sp, #20
 801542e:	af00      	add	r7, sp, #0
 8015430:	60f8      	str	r0, [r7, #12]
 8015432:	60b9      	str	r1, [r7, #8]
 8015434:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8015436:	6878      	ldr	r0, [r7, #4]
 8015438:	f7ff fc71 	bl	8014d1e <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 801543c:	4603      	mov	r3, r0
 801543e:	681c      	ldr	r4, [r3, #0]
 8015440:	68bb      	ldr	r3, [r7, #8]
 8015442:	4619      	mov	r1, r3
 8015444:	2004      	movs	r0, #4
 8015446:	f7eb fe08 	bl	800105a <_ZnwjPv>
 801544a:	4603      	mov	r3, r0
 801544c:	601c      	str	r4, [r3, #0]
 801544e:	bf00      	nop
 8015450:	3714      	adds	r7, #20
 8015452:	46bd      	mov	sp, r7
 8015454:	bd90      	pop	{r4, r7, pc}

08015456 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 8015456:	b590      	push	{r4, r7, lr}
 8015458:	b087      	sub	sp, #28
 801545a:	af00      	add	r7, sp, #0
 801545c:	60f8      	str	r0, [r7, #12]
 801545e:	60b9      	str	r1, [r7, #8]
 8015460:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 8015462:	68f8      	ldr	r0, [r7, #12]
 8015464:	f000 faf3 	bl	8015a4e <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 8015468:	4604      	mov	r4, r0
 801546a:	68f8      	ldr	r0, [r7, #12]
 801546c:	f7ec fd3f 	bl	8001eee <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 8015470:	4603      	mov	r3, r0
 8015472:	1ae2      	subs	r2, r4, r3
 8015474:	68bb      	ldr	r3, [r7, #8]
 8015476:	429a      	cmp	r2, r3
 8015478:	bf34      	ite	cc
 801547a:	2301      	movcc	r3, #1
 801547c:	2300      	movcs	r3, #0
 801547e:	b2db      	uxtb	r3, r3
 8015480:	2b00      	cmp	r3, #0
 8015482:	d002      	beq.n	801548a <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 8015484:	6878      	ldr	r0, [r7, #4]
 8015486:	f00d f8d8 	bl	802263a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801548a:	68f8      	ldr	r0, [r7, #12]
 801548c:	f7ec fd2f 	bl	8001eee <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 8015490:	4604      	mov	r4, r0
 8015492:	68f8      	ldr	r0, [r7, #12]
 8015494:	f7ec fd2b 	bl	8001eee <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 8015498:	4603      	mov	r3, r0
 801549a:	613b      	str	r3, [r7, #16]
 801549c:	f107 0208 	add.w	r2, r7, #8
 80154a0:	f107 0310 	add.w	r3, r7, #16
 80154a4:	4611      	mov	r1, r2
 80154a6:	4618      	mov	r0, r3
 80154a8:	f000 faab 	bl	8015a02 <_ZSt3maxIjERKT_S2_S2_>
 80154ac:	4603      	mov	r3, r0
 80154ae:	681b      	ldr	r3, [r3, #0]
 80154b0:	4423      	add	r3, r4
 80154b2:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 80154b4:	68f8      	ldr	r0, [r7, #12]
 80154b6:	f7ec fd1a 	bl	8001eee <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 80154ba:	4602      	mov	r2, r0
 80154bc:	697b      	ldr	r3, [r7, #20]
 80154be:	4293      	cmp	r3, r2
 80154c0:	d306      	bcc.n	80154d0 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x7a>
 80154c2:	68f8      	ldr	r0, [r7, #12]
 80154c4:	f000 fac3 	bl	8015a4e <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 80154c8:	4602      	mov	r2, r0
 80154ca:	697b      	ldr	r3, [r7, #20]
 80154cc:	4293      	cmp	r3, r2
 80154ce:	d904      	bls.n	80154da <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x84>
 80154d0:	68f8      	ldr	r0, [r7, #12]
 80154d2:	f000 fabc 	bl	8015a4e <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 80154d6:	4603      	mov	r3, r0
 80154d8:	e000      	b.n	80154dc <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x86>
 80154da:	697b      	ldr	r3, [r7, #20]
      }
 80154dc:	4618      	mov	r0, r3
 80154de:	371c      	adds	r7, #28
 80154e0:	46bd      	mov	sp, r7
 80154e2:	bd90      	pop	{r4, r7, pc}

080154e4 <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80154e4:	b580      	push	{r7, lr}
 80154e6:	b084      	sub	sp, #16
 80154e8:	af00      	add	r7, sp, #0
 80154ea:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 80154ec:	687a      	ldr	r2, [r7, #4]
 80154ee:	f107 030c 	add.w	r3, r7, #12
 80154f2:	4611      	mov	r1, r2
 80154f4:	4618      	mov	r0, r3
 80154f6:	f7ee fc5f 	bl	8003db8 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80154fa:	68fb      	ldr	r3, [r7, #12]
 80154fc:	4618      	mov	r0, r3
 80154fe:	3710      	adds	r7, #16
 8015500:	46bd      	mov	sp, r7
 8015502:	bd80      	pop	{r7, pc}

08015504 <_ZN9__gnu_cxxmiIPP4BodySt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 8015504:	b590      	push	{r4, r7, lr}
 8015506:	b083      	sub	sp, #12
 8015508:	af00      	add	r7, sp, #0
 801550a:	6078      	str	r0, [r7, #4]
 801550c:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801550e:	6878      	ldr	r0, [r7, #4]
 8015510:	f000 f835 	bl	801557e <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 8015514:	4603      	mov	r3, r0
 8015516:	681c      	ldr	r4, [r3, #0]
 8015518:	6838      	ldr	r0, [r7, #0]
 801551a:	f000 f830 	bl	801557e <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 801551e:	4603      	mov	r3, r0
 8015520:	681b      	ldr	r3, [r3, #0]
 8015522:	1ae3      	subs	r3, r4, r3
 8015524:	109b      	asrs	r3, r3, #2
 8015526:	4618      	mov	r0, r3
 8015528:	370c      	adds	r7, #12
 801552a:	46bd      	mov	sp, r7
 801552c:	bd90      	pop	{r4, r7, pc}

0801552e <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801552e:	b580      	push	{r7, lr}
 8015530:	b082      	sub	sp, #8
 8015532:	af00      	add	r7, sp, #0
 8015534:	6078      	str	r0, [r7, #4]
 8015536:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8015538:	683b      	ldr	r3, [r7, #0]
 801553a:	2b00      	cmp	r3, #0
 801553c:	d006      	beq.n	801554c <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj+0x1e>
 801553e:	687b      	ldr	r3, [r7, #4]
 8015540:	6839      	ldr	r1, [r7, #0]
 8015542:	4618      	mov	r0, r3
 8015544:	f000 fa94 	bl	8015a70 <_ZNSt16allocator_traitsISaIP4BodyEE8allocateERS2_j>
 8015548:	4603      	mov	r3, r0
 801554a:	e000      	b.n	801554e <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj+0x20>
 801554c:	2300      	movs	r3, #0
      }
 801554e:	4618      	mov	r0, r3
 8015550:	3708      	adds	r7, #8
 8015552:	46bd      	mov	sp, r7
 8015554:	bd80      	pop	{r7, pc}

08015556 <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8015556:	b590      	push	{r4, r7, lr}
 8015558:	b089      	sub	sp, #36	; 0x24
 801555a:	af02      	add	r7, sp, #8
 801555c:	60f8      	str	r0, [r7, #12]
 801555e:	60b9      	str	r1, [r7, #8]
 8015560:	607a      	str	r2, [r7, #4]
 8015562:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8015564:	f88d 4000 	strb.w	r4, [sp]
 8015568:	683b      	ldr	r3, [r7, #0]
 801556a:	687a      	ldr	r2, [r7, #4]
 801556c:	68b9      	ldr	r1, [r7, #8]
 801556e:	68f8      	ldr	r0, [r7, #12]
 8015570:	f000 fa8d 	bl	8015a8e <_ZNSt6vectorIP4BodySaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 8015574:	4603      	mov	r3, r0
      }
 8015576:	4618      	mov	r0, r3
 8015578:	371c      	adds	r7, #28
 801557a:	46bd      	mov	sp, r7
 801557c:	bd90      	pop	{r4, r7, pc}

0801557e <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801557e:	b480      	push	{r7}
 8015580:	b083      	sub	sp, #12
 8015582:	af00      	add	r7, sp, #0
 8015584:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8015586:	687b      	ldr	r3, [r7, #4]
 8015588:	4618      	mov	r0, r3
 801558a:	370c      	adds	r7, #12
 801558c:	46bd      	mov	sp, r7
 801558e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015592:	4770      	bx	lr

08015594 <_ZN9__gnu_cxx13new_allocatorIP4BodyE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8015594:	b580      	push	{r7, lr}
 8015596:	b084      	sub	sp, #16
 8015598:	af00      	add	r7, sp, #0
 801559a:	60f8      	str	r0, [r7, #12]
 801559c:	60b9      	str	r1, [r7, #8]
 801559e:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80155a0:	68b8      	ldr	r0, [r7, #8]
 80155a2:	f00c ff69 	bl	8022478 <_ZdlPv>
      }
 80155a6:	3710      	adds	r7, #16
 80155a8:	46bd      	mov	sp, r7
 80155aa:	bd80      	pop	{r7, pc}

080155ac <_ZSt9addressofIP13Function_callEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 80155ac:	b580      	push	{r7, lr}
 80155ae:	b082      	sub	sp, #8
 80155b0:	af00      	add	r7, sp, #0
 80155b2:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 80155b4:	6878      	ldr	r0, [r7, #4]
 80155b6:	f7f6 fa26 	bl	800ba06 <_ZSt11__addressofIP13Function_callEPT_RS2_>
 80155ba:	4603      	mov	r3, r0
 80155bc:	4618      	mov	r0, r3
 80155be:	3708      	adds	r7, #8
 80155c0:	46bd      	mov	sp, r7
 80155c2:	bd80      	pop	{r7, pc}

080155c4 <_ZSt9addressofIP10AssignmentEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 80155c4:	b580      	push	{r7, lr}
 80155c6:	b082      	sub	sp, #8
 80155c8:	af00      	add	r7, sp, #0
 80155ca:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 80155cc:	6878      	ldr	r0, [r7, #4]
 80155ce:	f000 fa70 	bl	8015ab2 <_ZSt11__addressofIP10AssignmentEPT_RS2_>
 80155d2:	4603      	mov	r3, r0
 80155d4:	4618      	mov	r0, r3
 80155d6:	3708      	adds	r7, #8
 80155d8:	46bd      	mov	sp, r7
 80155da:	bd80      	pop	{r7, pc}

080155dc <_ZSt9addressofIP11Method_callEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 80155dc:	b580      	push	{r7, lr}
 80155de:	b082      	sub	sp, #8
 80155e0:	af00      	add	r7, sp, #0
 80155e2:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 80155e4:	6878      	ldr	r0, [r7, #4]
 80155e6:	f000 fa6f 	bl	8015ac8 <_ZSt11__addressofIP11Method_callEPT_RS2_>
 80155ea:	4603      	mov	r3, r0
 80155ec:	4618      	mov	r0, r3
 80155ee:	3708      	adds	r7, #8
 80155f0:	46bd      	mov	sp, r7
 80155f2:	bd80      	pop	{r7, pc}

080155f4 <_ZSt9addressofIP15While_statementEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 80155f4:	b580      	push	{r7, lr}
 80155f6:	b082      	sub	sp, #8
 80155f8:	af00      	add	r7, sp, #0
 80155fa:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 80155fc:	6878      	ldr	r0, [r7, #4]
 80155fe:	f000 fa6e 	bl	8015ade <_ZSt11__addressofIP15While_statementEPT_RS2_>
 8015602:	4603      	mov	r3, r0
 8015604:	4618      	mov	r0, r3
 8015606:	3708      	adds	r7, #8
 8015608:	46bd      	mov	sp, r7
 801560a:	bd80      	pop	{r7, pc}

0801560c <_ZSt9addressofIP12If_statementEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801560c:	b580      	push	{r7, lr}
 801560e:	b082      	sub	sp, #8
 8015610:	af00      	add	r7, sp, #0
 8015612:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015614:	6878      	ldr	r0, [r7, #4]
 8015616:	f000 fa6d 	bl	8015af4 <_ZSt11__addressofIP12If_statementEPT_RS2_>
 801561a:	4603      	mov	r3, r0
 801561c:	4618      	mov	r0, r3
 801561e:	3708      	adds	r7, #8
 8015620:	46bd      	mov	sp, r7
 8015622:	bd80      	pop	{r7, pc}

08015624 <_ZN9__gnu_cxx13new_allocatorIP9StatementE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8015624:	b580      	push	{r7, lr}
 8015626:	b084      	sub	sp, #16
 8015628:	af00      	add	r7, sp, #0
 801562a:	60f8      	str	r0, [r7, #12]
 801562c:	60b9      	str	r1, [r7, #8]
 801562e:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8015630:	68b8      	ldr	r0, [r7, #8]
 8015632:	f00c ff21 	bl	8022478 <_ZdlPv>
      }
 8015636:	3710      	adds	r7, #16
 8015638:	46bd      	mov	sp, r7
 801563a:	bd80      	pop	{r7, pc}

0801563c <_ZN9__gnu_cxx13new_allocatorIP9StatementE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801563c:	b590      	push	{r4, r7, lr}
 801563e:	b085      	sub	sp, #20
 8015640:	af00      	add	r7, sp, #0
 8015642:	60f8      	str	r0, [r7, #12]
 8015644:	60b9      	str	r1, [r7, #8]
 8015646:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8015648:	6878      	ldr	r0, [r7, #4]
 801564a:	f7ff fcea 	bl	8015022 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 801564e:	4603      	mov	r3, r0
 8015650:	681c      	ldr	r4, [r3, #0]
 8015652:	68bb      	ldr	r3, [r7, #8]
 8015654:	4619      	mov	r1, r3
 8015656:	2004      	movs	r0, #4
 8015658:	f7eb fcff 	bl	800105a <_ZnwjPv>
 801565c:	4603      	mov	r3, r0
 801565e:	601c      	str	r4, [r3, #0]
 8015660:	bf00      	nop
 8015662:	3714      	adds	r7, #20
 8015664:	46bd      	mov	sp, r7
 8015666:	bd90      	pop	{r4, r7, pc}

08015668 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 8015668:	b590      	push	{r4, r7, lr}
 801566a:	b087      	sub	sp, #28
 801566c:	af00      	add	r7, sp, #0
 801566e:	60f8      	str	r0, [r7, #12]
 8015670:	60b9      	str	r1, [r7, #8]
 8015672:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 8015674:	68f8      	ldr	r0, [r7, #12]
 8015676:	f000 fa48 	bl	8015b0a <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 801567a:	4604      	mov	r4, r0
 801567c:	68f8      	ldr	r0, [r7, #12]
 801567e:	f000 fa55 	bl	8015b2c <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015682:	4603      	mov	r3, r0
 8015684:	1ae2      	subs	r2, r4, r3
 8015686:	68bb      	ldr	r3, [r7, #8]
 8015688:	429a      	cmp	r2, r3
 801568a:	bf34      	ite	cc
 801568c:	2301      	movcc	r3, #1
 801568e:	2300      	movcs	r3, #0
 8015690:	b2db      	uxtb	r3, r3
 8015692:	2b00      	cmp	r3, #0
 8015694:	d002      	beq.n	801569c <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 8015696:	6878      	ldr	r0, [r7, #4]
 8015698:	f00c ffcf 	bl	802263a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801569c:	68f8      	ldr	r0, [r7, #12]
 801569e:	f000 fa45 	bl	8015b2c <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 80156a2:	4604      	mov	r4, r0
 80156a4:	68f8      	ldr	r0, [r7, #12]
 80156a6:	f000 fa41 	bl	8015b2c <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 80156aa:	4603      	mov	r3, r0
 80156ac:	613b      	str	r3, [r7, #16]
 80156ae:	f107 0208 	add.w	r2, r7, #8
 80156b2:	f107 0310 	add.w	r3, r7, #16
 80156b6:	4611      	mov	r1, r2
 80156b8:	4618      	mov	r0, r3
 80156ba:	f000 f9a2 	bl	8015a02 <_ZSt3maxIjERKT_S2_S2_>
 80156be:	4603      	mov	r3, r0
 80156c0:	681b      	ldr	r3, [r3, #0]
 80156c2:	4423      	add	r3, r4
 80156c4:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 80156c6:	68f8      	ldr	r0, [r7, #12]
 80156c8:	f000 fa30 	bl	8015b2c <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 80156cc:	4602      	mov	r2, r0
 80156ce:	697b      	ldr	r3, [r7, #20]
 80156d0:	4293      	cmp	r3, r2
 80156d2:	d306      	bcc.n	80156e2 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x7a>
 80156d4:	68f8      	ldr	r0, [r7, #12]
 80156d6:	f000 fa18 	bl	8015b0a <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 80156da:	4602      	mov	r2, r0
 80156dc:	697b      	ldr	r3, [r7, #20]
 80156de:	4293      	cmp	r3, r2
 80156e0:	d904      	bls.n	80156ec <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x84>
 80156e2:	68f8      	ldr	r0, [r7, #12]
 80156e4:	f000 fa11 	bl	8015b0a <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 80156e8:	4603      	mov	r3, r0
 80156ea:	e000      	b.n	80156ee <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x86>
 80156ec:	697b      	ldr	r3, [r7, #20]
      }
 80156ee:	4618      	mov	r0, r3
 80156f0:	371c      	adds	r7, #28
 80156f2:	46bd      	mov	sp, r7
 80156f4:	bd90      	pop	{r4, r7, pc}

080156f6 <_ZN9__gnu_cxxmiIPP9StatementSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 80156f6:	b590      	push	{r4, r7, lr}
 80156f8:	b083      	sub	sp, #12
 80156fa:	af00      	add	r7, sp, #0
 80156fc:	6078      	str	r0, [r7, #4]
 80156fe:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8015700:	6878      	ldr	r0, [r7, #4]
 8015702:	f7ed f9c3 	bl	8002a8c <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8015706:	4603      	mov	r3, r0
 8015708:	681c      	ldr	r4, [r3, #0]
 801570a:	6838      	ldr	r0, [r7, #0]
 801570c:	f7ed f9be 	bl	8002a8c <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8015710:	4603      	mov	r3, r0
 8015712:	681b      	ldr	r3, [r3, #0]
 8015714:	1ae3      	subs	r3, r4, r3
 8015716:	109b      	asrs	r3, r3, #2
 8015718:	4618      	mov	r0, r3
 801571a:	370c      	adds	r7, #12
 801571c:	46bd      	mov	sp, r7
 801571e:	bd90      	pop	{r4, r7, pc}

08015720 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8015720:	b580      	push	{r7, lr}
 8015722:	b082      	sub	sp, #8
 8015724:	af00      	add	r7, sp, #0
 8015726:	6078      	str	r0, [r7, #4]
 8015728:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801572a:	683b      	ldr	r3, [r7, #0]
 801572c:	2b00      	cmp	r3, #0
 801572e:	d006      	beq.n	801573e <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj+0x1e>
 8015730:	687b      	ldr	r3, [r7, #4]
 8015732:	6839      	ldr	r1, [r7, #0]
 8015734:	4618      	mov	r0, r3
 8015736:	f000 fa09 	bl	8015b4c <_ZNSt16allocator_traitsISaIP9StatementEE8allocateERS2_j>
 801573a:	4603      	mov	r3, r0
 801573c:	e000      	b.n	8015740 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj+0x20>
 801573e:	2300      	movs	r3, #0
      }
 8015740:	4618      	mov	r0, r3
 8015742:	3708      	adds	r7, #8
 8015744:	46bd      	mov	sp, r7
 8015746:	bd80      	pop	{r7, pc}

08015748 <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8015748:	b590      	push	{r4, r7, lr}
 801574a:	b089      	sub	sp, #36	; 0x24
 801574c:	af02      	add	r7, sp, #8
 801574e:	60f8      	str	r0, [r7, #12]
 8015750:	60b9      	str	r1, [r7, #8]
 8015752:	607a      	str	r2, [r7, #4]
 8015754:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8015756:	f88d 4000 	strb.w	r4, [sp]
 801575a:	683b      	ldr	r3, [r7, #0]
 801575c:	687a      	ldr	r2, [r7, #4]
 801575e:	68b9      	ldr	r1, [r7, #8]
 8015760:	68f8      	ldr	r0, [r7, #12]
 8015762:	f000 fa02 	bl	8015b6a <_ZNSt6vectorIP9StatementSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 8015766:	4603      	mov	r3, r0
      }
 8015768:	4618      	mov	r0, r3
 801576a:	371c      	adds	r7, #28
 801576c:	46bd      	mov	sp, r7
 801576e:	bd90      	pop	{r4, r7, pc}

08015770 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 8015770:	b580      	push	{r7, lr}
 8015772:	b084      	sub	sp, #16
 8015774:	af00      	add	r7, sp, #0
 8015776:	6078      	str	r0, [r7, #4]
 8015778:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801577a:	687b      	ldr	r3, [r7, #4]
 801577c:	681a      	ldr	r2, [r3, #0]
 801577e:	683b      	ldr	r3, [r7, #0]
 8015780:	009b      	lsls	r3, r3, #2
 8015782:	425b      	negs	r3, r3
 8015784:	4413      	add	r3, r2
 8015786:	60fb      	str	r3, [r7, #12]
 8015788:	f107 020c 	add.w	r2, r7, #12
 801578c:	f107 0308 	add.w	r3, r7, #8
 8015790:	4611      	mov	r1, r2
 8015792:	4618      	mov	r0, r3
 8015794:	f7ed f96a 	bl	8002a6c <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8015798:	68bb      	ldr	r3, [r7, #8]
 801579a:	4618      	mov	r0, r3
 801579c:	3710      	adds	r7, #16
 801579e:	46bd      	mov	sp, r7
 80157a0:	bd80      	pop	{r7, pc}

080157a2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80157a2:	b5b0      	push	{r4, r5, r7, lr}
 80157a4:	b084      	sub	sp, #16
 80157a6:	af00      	add	r7, sp, #0
 80157a8:	60f8      	str	r0, [r7, #12]
 80157aa:	60b9      	str	r1, [r7, #8]
 80157ac:	713a      	strb	r2, [r7, #4]
 80157ae:	68fb      	ldr	r3, [r7, #12]
 80157b0:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80157b2:	7e1b      	ldrb	r3, [r3, #24]
 80157b4:	461c      	mov	r4, r3
 80157b6:	1d3b      	adds	r3, r7, #4
 80157b8:	4618      	mov	r0, r3
 80157ba:	f7ef fb5d 	bl	8004e78 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 80157be:	4603      	mov	r3, r0
 80157c0:	429c      	cmp	r4, r3
 80157c2:	bf0c      	ite	eq
 80157c4:	2301      	moveq	r3, #1
 80157c6:	2300      	movne	r3, #0
 80157c8:	b2db      	uxtb	r3, r3
 80157ca:	2b00      	cmp	r3, #0
 80157cc:	d00e      	beq.n	80157ec <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80157ce:	68b8      	ldr	r0, [r7, #8]
 80157d0:	f7f2 fca0 	bl	8008114 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 80157d4:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80157d6:	68fb      	ldr	r3, [r7, #12]
 80157d8:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80157da:	4618      	mov	r0, r3
 80157dc:	f000 f819 	bl	8015812 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 80157e0:	4603      	mov	r3, r0
 80157e2:	4621      	mov	r1, r4
 80157e4:	4618      	mov	r0, r3
 80157e6:	f00d f908 	bl	80229fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
	    return {};
 80157ea:	e00d      	b.n	8015808 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80157ec:	68fb      	ldr	r3, [r7, #12]
 80157ee:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 80157f0:	4618      	mov	r0, r3
 80157f2:	f7fe fd59 	bl	80142a8 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 80157f6:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 80157f8:	68b8      	ldr	r0, [r7, #8]
 80157fa:	f7f2 fc8b 	bl	8008114 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 80157fe:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015800:	4619      	mov	r1, r3
 8015802:	4620      	mov	r0, r4
 8015804:	f7fa fc0c 	bl	8010020 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015808:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 801580a:	4618      	mov	r0, r3
 801580c:	3710      	adds	r7, #16
 801580e:	46bd      	mov	sp, r7
 8015810:	bdb0      	pop	{r4, r5, r7, pc}

08015812 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015812:	b590      	push	{r4, r7, lr}
 8015814:	b083      	sub	sp, #12
 8015816:	af00      	add	r7, sp, #0
 8015818:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801581a:	6878      	ldr	r0, [r7, #4]
 801581c:	f000 f9b7 	bl	8015b8e <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015820:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015822:	4619      	mov	r1, r3
 8015824:	4620      	mov	r0, r4
 8015826:	f7fa fbbd 	bl	800ffa4 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 801582a:	4603      	mov	r3, r0
    }
 801582c:	4618      	mov	r0, r3
 801582e:	370c      	adds	r7, #12
 8015830:	46bd      	mov	sp, r7
 8015832:	bd90      	pop	{r4, r7, pc}

08015834 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015834:	b5b0      	push	{r4, r5, r7, lr}
 8015836:	b084      	sub	sp, #16
 8015838:	af00      	add	r7, sp, #0
 801583a:	60f8      	str	r0, [r7, #12]
 801583c:	60b9      	str	r1, [r7, #8]
 801583e:	713a      	strb	r2, [r7, #4]
 8015840:	68fb      	ldr	r3, [r7, #12]
 8015842:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015844:	7e1b      	ldrb	r3, [r3, #24]
 8015846:	461c      	mov	r4, r3
 8015848:	1d3b      	adds	r3, r7, #4
 801584a:	4618      	mov	r0, r3
 801584c:	f7ef fb63 	bl	8004f16 <_ZNKSt17integral_constantIjLj1EEcvjEv>
 8015850:	4603      	mov	r3, r0
 8015852:	429c      	cmp	r4, r3
 8015854:	bf0c      	ite	eq
 8015856:	2301      	moveq	r3, #1
 8015858:	2300      	movne	r3, #0
 801585a:	b2db      	uxtb	r3, r3
 801585c:	2b00      	cmp	r3, #0
 801585e:	d00c      	beq.n	801587a <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015860:	68b8      	ldr	r0, [r7, #8]
 8015862:	f7f2 fbeb 	bl	800803c <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 8015866:	4603      	mov	r3, r0
 8015868:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 801586a:	68fb      	ldr	r3, [r7, #12]
 801586c:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 801586e:	4618      	mov	r0, r3
 8015870:	f000 f816 	bl	80158a0 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015874:	4603      	mov	r3, r0
 8015876:	601c      	str	r4, [r3, #0]
	    return {};
 8015878:	e00d      	b.n	8015896 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 801587a:	68fb      	ldr	r3, [r7, #12]
 801587c:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 801587e:	4618      	mov	r0, r3
 8015880:	f7fe fd12 	bl	80142a8 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015884:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015886:	68b8      	ldr	r0, [r7, #8]
 8015888:	f7f2 fbd8 	bl	800803c <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 801588c:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 801588e:	4619      	mov	r1, r3
 8015890:	4620      	mov	r0, r4
 8015892:	f7fa fc2f 	bl	80100f4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015896:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015898:	4618      	mov	r0, r3
 801589a:	3710      	adds	r7, #16
 801589c:	46bd      	mov	sp, r7
 801589e:	bdb0      	pop	{r4, r5, r7, pc}

080158a0 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80158a0:	b590      	push	{r4, r7, lr}
 80158a2:	b083      	sub	sp, #12
 80158a4:	af00      	add	r7, sp, #0
 80158a6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80158a8:	6878      	ldr	r0, [r7, #4]
 80158aa:	f000 f970 	bl	8015b8e <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80158ae:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80158b0:	4619      	mov	r1, r3
 80158b2:	4620      	mov	r0, r4
 80158b4:	f7fa fbde 	bl	8010074 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80158b8:	4603      	mov	r3, r0
    }
 80158ba:	4618      	mov	r0, r3
 80158bc:	370c      	adds	r7, #12
 80158be:	46bd      	mov	sp, r7
 80158c0:	bd90      	pop	{r4, r7, pc}

080158c2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80158c2:	b5b0      	push	{r4, r5, r7, lr}
 80158c4:	b084      	sub	sp, #16
 80158c6:	af00      	add	r7, sp, #0
 80158c8:	60f8      	str	r0, [r7, #12]
 80158ca:	60b9      	str	r1, [r7, #8]
 80158cc:	713a      	strb	r2, [r7, #4]
 80158ce:	68fb      	ldr	r3, [r7, #12]
 80158d0:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80158d2:	7e1b      	ldrb	r3, [r3, #24]
 80158d4:	461c      	mov	r4, r3
 80158d6:	1d3b      	adds	r3, r7, #4
 80158d8:	4618      	mov	r0, r3
 80158da:	f7ef fb6c 	bl	8004fb6 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 80158de:	4603      	mov	r3, r0
 80158e0:	429c      	cmp	r4, r3
 80158e2:	bf0c      	ite	eq
 80158e4:	2301      	moveq	r3, #1
 80158e6:	2300      	movne	r3, #0
 80158e8:	b2db      	uxtb	r3, r3
 80158ea:	2b00      	cmp	r3, #0
 80158ec:	d00c      	beq.n	8015908 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80158ee:	68b8      	ldr	r0, [r7, #8]
 80158f0:	f7f2 fbc8 	bl	8008084 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 80158f4:	4603      	mov	r3, r0
 80158f6:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80158f8:	68fb      	ldr	r3, [r7, #12]
 80158fa:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80158fc:	4618      	mov	r0, r3
 80158fe:	f000 f816 	bl	801592e <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015902:	4603      	mov	r3, r0
 8015904:	601c      	str	r4, [r3, #0]
	    return {};
 8015906:	e00d      	b.n	8015924 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015908:	68fb      	ldr	r3, [r7, #12]
 801590a:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 801590c:	4618      	mov	r0, r3
 801590e:	f7fe fccb 	bl	80142a8 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015912:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015914:	68b8      	ldr	r0, [r7, #8]
 8015916:	f7f2 fbb5 	bl	8008084 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 801591a:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 801591c:	4619      	mov	r1, r3
 801591e:	4620      	mov	r0, r4
 8015920:	f7fa fc64 	bl	80101ec <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015924:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015926:	4618      	mov	r0, r3
 8015928:	3710      	adds	r7, #16
 801592a:	46bd      	mov	sp, r7
 801592c:	bdb0      	pop	{r4, r5, r7, pc}

0801592e <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801592e:	b590      	push	{r4, r7, lr}
 8015930:	b083      	sub	sp, #12
 8015932:	af00      	add	r7, sp, #0
 8015934:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015936:	6878      	ldr	r0, [r7, #4]
 8015938:	f000 f929 	bl	8015b8e <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801593c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801593e:	4619      	mov	r1, r3
 8015940:	4620      	mov	r0, r4
 8015942:	f7fa fc13 	bl	801016c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8015946:	4603      	mov	r3, r0
    }
 8015948:	4618      	mov	r0, r3
 801594a:	370c      	adds	r7, #12
 801594c:	46bd      	mov	sp, r7
 801594e:	bd90      	pop	{r4, r7, pc}

08015950 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015950:	b5b0      	push	{r4, r5, r7, lr}
 8015952:	b084      	sub	sp, #16
 8015954:	af00      	add	r7, sp, #0
 8015956:	60f8      	str	r0, [r7, #12]
 8015958:	60b9      	str	r1, [r7, #8]
 801595a:	713a      	strb	r2, [r7, #4]
 801595c:	68fb      	ldr	r3, [r7, #12]
 801595e:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015960:	7e1b      	ldrb	r3, [r3, #24]
 8015962:	461c      	mov	r4, r3
 8015964:	1d3b      	adds	r3, r7, #4
 8015966:	4618      	mov	r0, r3
 8015968:	f7ef fb89 	bl	800507e <_ZNKSt17integral_constantIjLj3EEcvjEv>
 801596c:	4603      	mov	r3, r0
 801596e:	429c      	cmp	r4, r3
 8015970:	bf0c      	ite	eq
 8015972:	2301      	moveq	r3, #1
 8015974:	2300      	movne	r3, #0
 8015976:	b2db      	uxtb	r3, r3
 8015978:	2b00      	cmp	r3, #0
 801597a:	d00d      	beq.n	8015998 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_+0x48>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 801597c:	68b8      	ldr	r0, [r7, #8]
 801597e:	f7f2 fba5 	bl	80080cc <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8015982:	4603      	mov	r3, r0
 8015984:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015986:	68fb      	ldr	r3, [r7, #12]
 8015988:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 801598a:	4618      	mov	r0, r3
 801598c:	f000 f817 	bl	80159be <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015990:	4603      	mov	r3, r0
 8015992:	4622      	mov	r2, r4
 8015994:	701a      	strb	r2, [r3, #0]
	    return {};
 8015996:	e00d      	b.n	80159b4 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_+0x64>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015998:	68fb      	ldr	r3, [r7, #12]
 801599a:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 801599c:	4618      	mov	r0, r3
 801599e:	f7fe fc83 	bl	80142a8 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 80159a2:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 80159a4:	68b8      	ldr	r0, [r7, #8]
 80159a6:	f7f2 fb91 	bl	80080cc <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 80159aa:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 80159ac:	4619      	mov	r1, r3
 80159ae:	4620      	mov	r0, r4
 80159b0:	f000 f8f8 	bl	8015ba4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj3EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 80159b4:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80159b6:	4618      	mov	r0, r3
 80159b8:	3710      	adds	r7, #16
 80159ba:	46bd      	mov	sp, r7
 80159bc:	bdb0      	pop	{r4, r5, r7, pc}

080159be <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80159be:	b590      	push	{r4, r7, lr}
 80159c0:	b083      	sub	sp, #12
 80159c2:	af00      	add	r7, sp, #0
 80159c4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80159c6:	6878      	ldr	r0, [r7, #4]
 80159c8:	f000 f8e1 	bl	8015b8e <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80159cc:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80159ce:	4619      	mov	r1, r3
 80159d0:	4620      	mov	r0, r4
 80159d2:	f7fb f82e 	bl	8010a32 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80159d6:	4603      	mov	r3, r0
    }
 80159d8:	4618      	mov	r0, r3
 80159da:	370c      	adds	r7, #12
 80159dc:	46bd      	mov	sp, r7
 80159de:	bd90      	pop	{r4, r7, pc}

080159e0 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 80159e0:	b580      	push	{r7, lr}
 80159e2:	b082      	sub	sp, #8
 80159e4:	af00      	add	r7, sp, #0
 80159e6:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 80159e8:	687b      	ldr	r3, [r7, #4]
 80159ea:	4618      	mov	r0, r3
 80159ec:	f7f8 fc1d 	bl	800e22a <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 80159f0:	4603      	mov	r3, r0
 80159f2:	4618      	mov	r0, r3
 80159f4:	f000 f8ef 	bl	8015bd6 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>
 80159f8:	4603      	mov	r3, r0
 80159fa:	4618      	mov	r0, r3
 80159fc:	3708      	adds	r7, #8
 80159fe:	46bd      	mov	sp, r7
 8015a00:	bd80      	pop	{r7, pc}

08015a02 <_ZSt3maxIjERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
 8015a02:	b480      	push	{r7}
 8015a04:	b083      	sub	sp, #12
 8015a06:	af00      	add	r7, sp, #0
 8015a08:	6078      	str	r0, [r7, #4]
 8015a0a:	6039      	str	r1, [r7, #0]
      if (__a < __b)
 8015a0c:	687b      	ldr	r3, [r7, #4]
 8015a0e:	681a      	ldr	r2, [r3, #0]
 8015a10:	683b      	ldr	r3, [r7, #0]
 8015a12:	681b      	ldr	r3, [r3, #0]
 8015a14:	429a      	cmp	r2, r3
 8015a16:	d201      	bcs.n	8015a1c <_ZSt3maxIjERKT_S2_S2_+0x1a>
	return __b;
 8015a18:	683b      	ldr	r3, [r7, #0]
 8015a1a:	e000      	b.n	8015a1e <_ZSt3maxIjERKT_S2_S2_+0x1c>
      return __a;
 8015a1c:	687b      	ldr	r3, [r7, #4]
    }
 8015a1e:	4618      	mov	r0, r3
 8015a20:	370c      	adds	r7, #12
 8015a22:	46bd      	mov	sp, r7
 8015a24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015a28:	4770      	bx	lr

08015a2a <_ZNSt6vectorIP10ExpressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015a2a:	b580      	push	{r7, lr}
 8015a2c:	b084      	sub	sp, #16
 8015a2e:	af00      	add	r7, sp, #0
 8015a30:	60f8      	str	r0, [r7, #12]
 8015a32:	60b9      	str	r1, [r7, #8]
 8015a34:	607a      	str	r2, [r7, #4]
 8015a36:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015a38:	683b      	ldr	r3, [r7, #0]
 8015a3a:	687a      	ldr	r2, [r7, #4]
 8015a3c:	68b9      	ldr	r1, [r7, #8]
 8015a3e:	68f8      	ldr	r0, [r7, #12]
 8015a40:	f000 f8e3 	bl	8015c0a <_ZSt12__relocate_aIPP10ExpressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015a44:	4603      	mov	r3, r0
      }
 8015a46:	4618      	mov	r0, r3
 8015a48:	3710      	adds	r7, #16
 8015a4a:	46bd      	mov	sp, r7
 8015a4c:	bd80      	pop	{r7, pc}

08015a4e <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015a4e:	b580      	push	{r7, lr}
 8015a50:	b082      	sub	sp, #8
 8015a52:	af00      	add	r7, sp, #0
 8015a54:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015a56:	687b      	ldr	r3, [r7, #4]
 8015a58:	4618      	mov	r0, r3
 8015a5a:	f000 f90d 	bl	8015c78 <_ZNKSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 8015a5e:	4603      	mov	r3, r0
 8015a60:	4618      	mov	r0, r3
 8015a62:	f000 f8ef 	bl	8015c44 <_ZNSt6vectorIP4BodySaIS1_EE11_S_max_sizeERKS2_>
 8015a66:	4603      	mov	r3, r0
 8015a68:	4618      	mov	r0, r3
 8015a6a:	3708      	adds	r7, #8
 8015a6c:	46bd      	mov	sp, r7
 8015a6e:	bd80      	pop	{r7, pc}

08015a70 <_ZNSt16allocator_traitsISaIP4BodyEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 8015a70:	b580      	push	{r7, lr}
 8015a72:	b082      	sub	sp, #8
 8015a74:	af00      	add	r7, sp, #0
 8015a76:	6078      	str	r0, [r7, #4]
 8015a78:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8015a7a:	2200      	movs	r2, #0
 8015a7c:	6839      	ldr	r1, [r7, #0]
 8015a7e:	6878      	ldr	r0, [r7, #4]
 8015a80:	f000 f905 	bl	8015c8e <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv>
 8015a84:	4603      	mov	r3, r0
 8015a86:	4618      	mov	r0, r3
 8015a88:	3708      	adds	r7, #8
 8015a8a:	46bd      	mov	sp, r7
 8015a8c:	bd80      	pop	{r7, pc}

08015a8e <_ZNSt6vectorIP4BodySaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015a8e:	b580      	push	{r7, lr}
 8015a90:	b084      	sub	sp, #16
 8015a92:	af00      	add	r7, sp, #0
 8015a94:	60f8      	str	r0, [r7, #12]
 8015a96:	60b9      	str	r1, [r7, #8]
 8015a98:	607a      	str	r2, [r7, #4]
 8015a9a:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015a9c:	683b      	ldr	r3, [r7, #0]
 8015a9e:	687a      	ldr	r2, [r7, #4]
 8015aa0:	68b9      	ldr	r1, [r7, #8]
 8015aa2:	68f8      	ldr	r0, [r7, #12]
 8015aa4:	f000 f912 	bl	8015ccc <_ZSt12__relocate_aIPP4BodyS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015aa8:	4603      	mov	r3, r0
      }
 8015aaa:	4618      	mov	r0, r3
 8015aac:	3710      	adds	r7, #16
 8015aae:	46bd      	mov	sp, r7
 8015ab0:	bd80      	pop	{r7, pc}

08015ab2 <_ZSt11__addressofIP10AssignmentEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015ab2:	b480      	push	{r7}
 8015ab4:	b083      	sub	sp, #12
 8015ab6:	af00      	add	r7, sp, #0
 8015ab8:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015aba:	687b      	ldr	r3, [r7, #4]
 8015abc:	4618      	mov	r0, r3
 8015abe:	370c      	adds	r7, #12
 8015ac0:	46bd      	mov	sp, r7
 8015ac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015ac6:	4770      	bx	lr

08015ac8 <_ZSt11__addressofIP11Method_callEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015ac8:	b480      	push	{r7}
 8015aca:	b083      	sub	sp, #12
 8015acc:	af00      	add	r7, sp, #0
 8015ace:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015ad0:	687b      	ldr	r3, [r7, #4]
 8015ad2:	4618      	mov	r0, r3
 8015ad4:	370c      	adds	r7, #12
 8015ad6:	46bd      	mov	sp, r7
 8015ad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015adc:	4770      	bx	lr

08015ade <_ZSt11__addressofIP15While_statementEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015ade:	b480      	push	{r7}
 8015ae0:	b083      	sub	sp, #12
 8015ae2:	af00      	add	r7, sp, #0
 8015ae4:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015ae6:	687b      	ldr	r3, [r7, #4]
 8015ae8:	4618      	mov	r0, r3
 8015aea:	370c      	adds	r7, #12
 8015aec:	46bd      	mov	sp, r7
 8015aee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015af2:	4770      	bx	lr

08015af4 <_ZSt11__addressofIP12If_statementEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015af4:	b480      	push	{r7}
 8015af6:	b083      	sub	sp, #12
 8015af8:	af00      	add	r7, sp, #0
 8015afa:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015afc:	687b      	ldr	r3, [r7, #4]
 8015afe:	4618      	mov	r0, r3
 8015b00:	370c      	adds	r7, #12
 8015b02:	46bd      	mov	sp, r7
 8015b04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b08:	4770      	bx	lr

08015b0a <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015b0a:	b580      	push	{r7, lr}
 8015b0c:	b082      	sub	sp, #8
 8015b0e:	af00      	add	r7, sp, #0
 8015b10:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015b12:	687b      	ldr	r3, [r7, #4]
 8015b14:	4618      	mov	r0, r3
 8015b16:	f000 f910 	bl	8015d3a <_ZNKSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 8015b1a:	4603      	mov	r3, r0
 8015b1c:	4618      	mov	r0, r3
 8015b1e:	f000 f8f2 	bl	8015d06 <_ZNSt6vectorIP9StatementSaIS1_EE11_S_max_sizeERKS2_>
 8015b22:	4603      	mov	r3, r0
 8015b24:	4618      	mov	r0, r3
 8015b26:	3708      	adds	r7, #8
 8015b28:	46bd      	mov	sp, r7
 8015b2a:	bd80      	pop	{r7, pc}

08015b2c <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8015b2c:	b480      	push	{r7}
 8015b2e:	b083      	sub	sp, #12
 8015b30:	af00      	add	r7, sp, #0
 8015b32:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8015b34:	687b      	ldr	r3, [r7, #4]
 8015b36:	685a      	ldr	r2, [r3, #4]
 8015b38:	687b      	ldr	r3, [r7, #4]
 8015b3a:	681b      	ldr	r3, [r3, #0]
 8015b3c:	1ad3      	subs	r3, r2, r3
 8015b3e:	109b      	asrs	r3, r3, #2
 8015b40:	4618      	mov	r0, r3
 8015b42:	370c      	adds	r7, #12
 8015b44:	46bd      	mov	sp, r7
 8015b46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b4a:	4770      	bx	lr

08015b4c <_ZNSt16allocator_traitsISaIP9StatementEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 8015b4c:	b580      	push	{r7, lr}
 8015b4e:	b082      	sub	sp, #8
 8015b50:	af00      	add	r7, sp, #0
 8015b52:	6078      	str	r0, [r7, #4]
 8015b54:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8015b56:	2200      	movs	r2, #0
 8015b58:	6839      	ldr	r1, [r7, #0]
 8015b5a:	6878      	ldr	r0, [r7, #4]
 8015b5c:	f000 f8f8 	bl	8015d50 <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv>
 8015b60:	4603      	mov	r3, r0
 8015b62:	4618      	mov	r0, r3
 8015b64:	3708      	adds	r7, #8
 8015b66:	46bd      	mov	sp, r7
 8015b68:	bd80      	pop	{r7, pc}

08015b6a <_ZNSt6vectorIP9StatementSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015b6a:	b580      	push	{r7, lr}
 8015b6c:	b084      	sub	sp, #16
 8015b6e:	af00      	add	r7, sp, #0
 8015b70:	60f8      	str	r0, [r7, #12]
 8015b72:	60b9      	str	r1, [r7, #8]
 8015b74:	607a      	str	r2, [r7, #4]
 8015b76:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015b78:	683b      	ldr	r3, [r7, #0]
 8015b7a:	687a      	ldr	r2, [r7, #4]
 8015b7c:	68b9      	ldr	r1, [r7, #8]
 8015b7e:	68f8      	ldr	r0, [r7, #12]
 8015b80:	f000 f905 	bl	8015d8e <_ZSt12__relocate_aIPP9StatementS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015b84:	4603      	mov	r3, r0
      }
 8015b86:	4618      	mov	r0, r3
 8015b88:	3710      	adds	r7, #16
 8015b8a:	46bd      	mov	sp, r7
 8015b8c:	bd80      	pop	{r7, pc}

08015b8e <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8015b8e:	b480      	push	{r7}
 8015b90:	b083      	sub	sp, #12
 8015b92:	af00      	add	r7, sp, #0
 8015b94:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8015b96:	687b      	ldr	r3, [r7, #4]
 8015b98:	4618      	mov	r0, r3
 8015b9a:	370c      	adds	r7, #12
 8015b9c:	46bd      	mov	sp, r7
 8015b9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015ba2:	4770      	bx	lr

08015ba4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj3EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8015ba4:	b580      	push	{r7, lr}
 8015ba6:	b082      	sub	sp, #8
 8015ba8:	af00      	add	r7, sp, #0
 8015baa:	6078      	str	r0, [r7, #4]
 8015bac:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8015bae:	687b      	ldr	r3, [r7, #4]
 8015bb0:	4618      	mov	r0, r3
 8015bb2:	f7fa f902 	bl	800fdba <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8015bb6:	6838      	ldr	r0, [r7, #0]
 8015bb8:	f7f2 fd62 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8015bbc:	4603      	mov	r3, r0
 8015bbe:	4619      	mov	r1, r3
 8015bc0:	6878      	ldr	r0, [r7, #4]
 8015bc2:	f000 f901 	bl	8015dc8 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8015bc6:	6878      	ldr	r0, [r7, #4]
 8015bc8:	f000 f91e 	bl	8015e08 <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8015bcc:	4603      	mov	r3, r0
	}
 8015bce:	4618      	mov	r0, r3
 8015bd0:	3708      	adds	r7, #8
 8015bd2:	46bd      	mov	sp, r7
 8015bd4:	bd80      	pop	{r7, pc}

08015bd6 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8015bd6:	b580      	push	{r7, lr}
 8015bd8:	b084      	sub	sp, #16
 8015bda:	af00      	add	r7, sp, #0
 8015bdc:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8015bde:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8015be2:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8015be4:	6878      	ldr	r0, [r7, #4]
 8015be6:	f000 f93f 	bl	8015e68 <_ZNSt16allocator_traitsISaIP10ExpressionEE8max_sizeERKS2_>
 8015bea:	4603      	mov	r3, r0
 8015bec:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8015bee:	f107 0208 	add.w	r2, r7, #8
 8015bf2:	f107 030c 	add.w	r3, r7, #12
 8015bf6:	4611      	mov	r1, r2
 8015bf8:	4618      	mov	r0, r3
 8015bfa:	f000 f921 	bl	8015e40 <_ZSt3minIjERKT_S2_S2_>
 8015bfe:	4603      	mov	r3, r0
 8015c00:	681b      	ldr	r3, [r3, #0]
      }
 8015c02:	4618      	mov	r0, r3
 8015c04:	3710      	adds	r7, #16
 8015c06:	46bd      	mov	sp, r7
 8015c08:	bd80      	pop	{r7, pc}

08015c0a <_ZSt12__relocate_aIPP10ExpressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    }

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8015c0a:	b5b0      	push	{r4, r5, r7, lr}
 8015c0c:	b084      	sub	sp, #16
 8015c0e:	af00      	add	r7, sp, #0
 8015c10:	60f8      	str	r0, [r7, #12]
 8015c12:	60b9      	str	r1, [r7, #8]
 8015c14:	607a      	str	r2, [r7, #4]
 8015c16:	603b      	str	r3, [r7, #0]
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return __relocate_a_1(std::__niter_base(__first),
 8015c18:	68f8      	ldr	r0, [r7, #12]
 8015c1a:	f7f8 fea3 	bl	800e964 <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 8015c1e:	4604      	mov	r4, r0
 8015c20:	68b8      	ldr	r0, [r7, #8]
 8015c22:	f7f8 fe9f 	bl	800e964 <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 8015c26:	4605      	mov	r5, r0
 8015c28:	6878      	ldr	r0, [r7, #4]
 8015c2a:	f7f8 fe9b 	bl	800e964 <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 8015c2e:	4602      	mov	r2, r0
 8015c30:	683b      	ldr	r3, [r7, #0]
 8015c32:	4629      	mov	r1, r5
 8015c34:	4620      	mov	r0, r4
 8015c36:	f000 f923 	bl	8015e80 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8015c3a:	4603      	mov	r3, r0
			    std::__niter_base(__last),
			    std::__niter_base(__result), __alloc);
    }
 8015c3c:	4618      	mov	r0, r3
 8015c3e:	3710      	adds	r7, #16
 8015c40:	46bd      	mov	sp, r7
 8015c42:	bdb0      	pop	{r4, r5, r7, pc}

08015c44 <_ZNSt6vectorIP4BodySaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8015c44:	b580      	push	{r7, lr}
 8015c46:	b084      	sub	sp, #16
 8015c48:	af00      	add	r7, sp, #0
 8015c4a:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8015c4c:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8015c50:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8015c52:	6878      	ldr	r0, [r7, #4]
 8015c54:	f000 f932 	bl	8015ebc <_ZNSt16allocator_traitsISaIP4BodyEE8max_sizeERKS2_>
 8015c58:	4603      	mov	r3, r0
 8015c5a:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8015c5c:	f107 0208 	add.w	r2, r7, #8
 8015c60:	f107 030c 	add.w	r3, r7, #12
 8015c64:	4611      	mov	r1, r2
 8015c66:	4618      	mov	r0, r3
 8015c68:	f000 f8ea 	bl	8015e40 <_ZSt3minIjERKT_S2_S2_>
 8015c6c:	4603      	mov	r3, r0
 8015c6e:	681b      	ldr	r3, [r3, #0]
      }
 8015c70:	4618      	mov	r0, r3
 8015c72:	3710      	adds	r7, #16
 8015c74:	46bd      	mov	sp, r7
 8015c76:	bd80      	pop	{r7, pc}

08015c78 <_ZNKSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8015c78:	b480      	push	{r7}
 8015c7a:	b083      	sub	sp, #12
 8015c7c:	af00      	add	r7, sp, #0
 8015c7e:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8015c80:	687b      	ldr	r3, [r7, #4]
 8015c82:	4618      	mov	r0, r3
 8015c84:	370c      	adds	r7, #12
 8015c86:	46bd      	mov	sp, r7
 8015c88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015c8c:	4770      	bx	lr

08015c8e <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8015c8e:	b580      	push	{r7, lr}
 8015c90:	b084      	sub	sp, #16
 8015c92:	af00      	add	r7, sp, #0
 8015c94:	60f8      	str	r0, [r7, #12]
 8015c96:	60b9      	str	r1, [r7, #8]
 8015c98:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8015c9a:	68f8      	ldr	r0, [r7, #12]
 8015c9c:	f000 f91a 	bl	8015ed4 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>
 8015ca0:	4602      	mov	r2, r0
 8015ca2:	68bb      	ldr	r3, [r7, #8]
 8015ca4:	4293      	cmp	r3, r2
 8015ca6:	bf8c      	ite	hi
 8015ca8:	2301      	movhi	r3, #1
 8015caa:	2300      	movls	r3, #0
 8015cac:	b2db      	uxtb	r3, r3
 8015cae:	2b00      	cmp	r3, #0
 8015cb0:	d001      	beq.n	8015cb6 <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8015cb2:	f00c fcb9 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8015cb6:	68bb      	ldr	r3, [r7, #8]
 8015cb8:	009b      	lsls	r3, r3, #2
 8015cba:	4618      	mov	r0, r3
 8015cbc:	f00c fbef 	bl	802249e <_Znwj>
 8015cc0:	4603      	mov	r3, r0
 8015cc2:	bf00      	nop
      }
 8015cc4:	4618      	mov	r0, r3
 8015cc6:	3710      	adds	r7, #16
 8015cc8:	46bd      	mov	sp, r7
 8015cca:	bd80      	pop	{r7, pc}

08015ccc <_ZSt12__relocate_aIPP4BodyS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8015ccc:	b5b0      	push	{r4, r5, r7, lr}
 8015cce:	b084      	sub	sp, #16
 8015cd0:	af00      	add	r7, sp, #0
 8015cd2:	60f8      	str	r0, [r7, #12]
 8015cd4:	60b9      	str	r1, [r7, #8]
 8015cd6:	607a      	str	r2, [r7, #4]
 8015cd8:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8015cda:	68f8      	ldr	r0, [r7, #12]
 8015cdc:	f000 f906 	bl	8015eec <_ZSt12__niter_baseIPP4BodyET_S3_>
 8015ce0:	4604      	mov	r4, r0
 8015ce2:	68b8      	ldr	r0, [r7, #8]
 8015ce4:	f000 f902 	bl	8015eec <_ZSt12__niter_baseIPP4BodyET_S3_>
 8015ce8:	4605      	mov	r5, r0
 8015cea:	6878      	ldr	r0, [r7, #4]
 8015cec:	f000 f8fe 	bl	8015eec <_ZSt12__niter_baseIPP4BodyET_S3_>
 8015cf0:	4602      	mov	r2, r0
 8015cf2:	683b      	ldr	r3, [r7, #0]
 8015cf4:	4629      	mov	r1, r5
 8015cf6:	4620      	mov	r0, r4
 8015cf8:	f000 f903 	bl	8015f02 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8015cfc:	4603      	mov	r3, r0
    }
 8015cfe:	4618      	mov	r0, r3
 8015d00:	3710      	adds	r7, #16
 8015d02:	46bd      	mov	sp, r7
 8015d04:	bdb0      	pop	{r4, r5, r7, pc}

08015d06 <_ZNSt6vectorIP9StatementSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8015d06:	b580      	push	{r7, lr}
 8015d08:	b084      	sub	sp, #16
 8015d0a:	af00      	add	r7, sp, #0
 8015d0c:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8015d0e:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8015d12:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8015d14:	6878      	ldr	r0, [r7, #4]
 8015d16:	f000 f912 	bl	8015f3e <_ZNSt16allocator_traitsISaIP9StatementEE8max_sizeERKS2_>
 8015d1a:	4603      	mov	r3, r0
 8015d1c:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8015d1e:	f107 0208 	add.w	r2, r7, #8
 8015d22:	f107 030c 	add.w	r3, r7, #12
 8015d26:	4611      	mov	r1, r2
 8015d28:	4618      	mov	r0, r3
 8015d2a:	f000 f889 	bl	8015e40 <_ZSt3minIjERKT_S2_S2_>
 8015d2e:	4603      	mov	r3, r0
 8015d30:	681b      	ldr	r3, [r3, #0]
      }
 8015d32:	4618      	mov	r0, r3
 8015d34:	3710      	adds	r7, #16
 8015d36:	46bd      	mov	sp, r7
 8015d38:	bd80      	pop	{r7, pc}

08015d3a <_ZNKSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8015d3a:	b480      	push	{r7}
 8015d3c:	b083      	sub	sp, #12
 8015d3e:	af00      	add	r7, sp, #0
 8015d40:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8015d42:	687b      	ldr	r3, [r7, #4]
 8015d44:	4618      	mov	r0, r3
 8015d46:	370c      	adds	r7, #12
 8015d48:	46bd      	mov	sp, r7
 8015d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015d4e:	4770      	bx	lr

08015d50 <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8015d50:	b580      	push	{r7, lr}
 8015d52:	b084      	sub	sp, #16
 8015d54:	af00      	add	r7, sp, #0
 8015d56:	60f8      	str	r0, [r7, #12]
 8015d58:	60b9      	str	r1, [r7, #8]
 8015d5a:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8015d5c:	68f8      	ldr	r0, [r7, #12]
 8015d5e:	f000 f8fa 	bl	8015f56 <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>
 8015d62:	4602      	mov	r2, r0
 8015d64:	68bb      	ldr	r3, [r7, #8]
 8015d66:	4293      	cmp	r3, r2
 8015d68:	bf8c      	ite	hi
 8015d6a:	2301      	movhi	r3, #1
 8015d6c:	2300      	movls	r3, #0
 8015d6e:	b2db      	uxtb	r3, r3
 8015d70:	2b00      	cmp	r3, #0
 8015d72:	d001      	beq.n	8015d78 <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8015d74:	f00c fc58 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8015d78:	68bb      	ldr	r3, [r7, #8]
 8015d7a:	009b      	lsls	r3, r3, #2
 8015d7c:	4618      	mov	r0, r3
 8015d7e:	f00c fb8e 	bl	802249e <_Znwj>
 8015d82:	4603      	mov	r3, r0
 8015d84:	bf00      	nop
      }
 8015d86:	4618      	mov	r0, r3
 8015d88:	3710      	adds	r7, #16
 8015d8a:	46bd      	mov	sp, r7
 8015d8c:	bd80      	pop	{r7, pc}

08015d8e <_ZSt12__relocate_aIPP9StatementS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8015d8e:	b5b0      	push	{r4, r5, r7, lr}
 8015d90:	b084      	sub	sp, #16
 8015d92:	af00      	add	r7, sp, #0
 8015d94:	60f8      	str	r0, [r7, #12]
 8015d96:	60b9      	str	r1, [r7, #8]
 8015d98:	607a      	str	r2, [r7, #4]
 8015d9a:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8015d9c:	68f8      	ldr	r0, [r7, #12]
 8015d9e:	f000 f8e6 	bl	8015f6e <_ZSt12__niter_baseIPP9StatementET_S3_>
 8015da2:	4604      	mov	r4, r0
 8015da4:	68b8      	ldr	r0, [r7, #8]
 8015da6:	f000 f8e2 	bl	8015f6e <_ZSt12__niter_baseIPP9StatementET_S3_>
 8015daa:	4605      	mov	r5, r0
 8015dac:	6878      	ldr	r0, [r7, #4]
 8015dae:	f000 f8de 	bl	8015f6e <_ZSt12__niter_baseIPP9StatementET_S3_>
 8015db2:	4602      	mov	r2, r0
 8015db4:	683b      	ldr	r3, [r7, #0]
 8015db6:	4629      	mov	r1, r5
 8015db8:	4620      	mov	r0, r4
 8015dba:	f000 f8e3 	bl	8015f84 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8015dbe:	4603      	mov	r3, r0
    }
 8015dc0:	4618      	mov	r0, r3
 8015dc2:	3710      	adds	r7, #16
 8015dc4:	46bd      	mov	sp, r7
 8015dc6:	bdb0      	pop	{r4, r5, r7, pc}

08015dc8 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8015dc8:	b590      	push	{r4, r7, lr}
 8015dca:	b085      	sub	sp, #20
 8015dcc:	af00      	add	r7, sp, #0
 8015dce:	6078      	str	r0, [r7, #4]
 8015dd0:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8015dd2:	687b      	ldr	r3, [r7, #4]
 8015dd4:	2203      	movs	r2, #3
 8015dd6:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8015dd8:	6878      	ldr	r0, [r7, #4]
 8015dda:	f7fa fe3c 	bl	8010a56 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8015dde:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8015de0:	6838      	ldr	r0, [r7, #0]
 8015de2:	f7f2 fc4d 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8015de6:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8015de8:	781c      	ldrb	r4, [r3, #0]
 8015dea:	68f8      	ldr	r0, [r7, #12]
 8015dec:	f7f2 fe34 	bl	8008a58 <_ZSt9addressofIbEPT_RS0_>
 8015df0:	4603      	mov	r3, r0
 8015df2:	4619      	mov	r1, r3
 8015df4:	2001      	movs	r0, #1
 8015df6:	f7eb f930 	bl	800105a <_ZnwjPv>
 8015dfa:	4603      	mov	r3, r0
 8015dfc:	4622      	mov	r2, r4
 8015dfe:	701a      	strb	r2, [r3, #0]
    }
 8015e00:	bf00      	nop
 8015e02:	3714      	adds	r7, #20
 8015e04:	46bd      	mov	sp, r7
 8015e06:	bd90      	pop	{r4, r7, pc}

08015e08 <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 8015e08:	b580      	push	{r7, lr}
 8015e0a:	b082      	sub	sp, #8
 8015e0c:	af00      	add	r7, sp, #0
 8015e0e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8015e10:	6878      	ldr	r0, [r7, #4]
 8015e12:	f7f9 fef5 	bl	800fc00 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8015e16:	4603      	mov	r3, r0
 8015e18:	2b03      	cmp	r3, #3
 8015e1a:	bf14      	ite	ne
 8015e1c:	2301      	movne	r3, #1
 8015e1e:	2300      	moveq	r3, #0
 8015e20:	b2db      	uxtb	r3, r3
 8015e22:	2b00      	cmp	r3, #0
 8015e24:	d002      	beq.n	8015e2c <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8015e26:	4805      	ldr	r0, [pc, #20]	; (8015e3c <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 8015e28:	f7eb f923 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8015e2c:	6878      	ldr	r0, [r7, #4]
 8015e2e:	f7fa fe12 	bl	8010a56 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8015e32:	4603      	mov	r3, r0
    }
 8015e34:	4618      	mov	r0, r3
 8015e36:	3708      	adds	r7, #8
 8015e38:	46bd      	mov	sp, r7
 8015e3a:	bd80      	pop	{r7, pc}
 8015e3c:	08027740 	.word	0x08027740

08015e40 <_ZSt3minIjERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
 8015e40:	b480      	push	{r7}
 8015e42:	b083      	sub	sp, #12
 8015e44:	af00      	add	r7, sp, #0
 8015e46:	6078      	str	r0, [r7, #4]
 8015e48:	6039      	str	r1, [r7, #0]
      if (__b < __a)
 8015e4a:	683b      	ldr	r3, [r7, #0]
 8015e4c:	681a      	ldr	r2, [r3, #0]
 8015e4e:	687b      	ldr	r3, [r7, #4]
 8015e50:	681b      	ldr	r3, [r3, #0]
 8015e52:	429a      	cmp	r2, r3
 8015e54:	d201      	bcs.n	8015e5a <_ZSt3minIjERKT_S2_S2_+0x1a>
	return __b;
 8015e56:	683b      	ldr	r3, [r7, #0]
 8015e58:	e000      	b.n	8015e5c <_ZSt3minIjERKT_S2_S2_+0x1c>
      return __a;
 8015e5a:	687b      	ldr	r3, [r7, #4]
    }
 8015e5c:	4618      	mov	r0, r3
 8015e5e:	370c      	adds	r7, #12
 8015e60:	46bd      	mov	sp, r7
 8015e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015e66:	4770      	bx	lr

08015e68 <_ZNSt16allocator_traitsISaIP10ExpressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8015e68:	b580      	push	{r7, lr}
 8015e6a:	b082      	sub	sp, #8
 8015e6c:	af00      	add	r7, sp, #0
 8015e6e:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8015e70:	6878      	ldr	r0, [r7, #4]
 8015e72:	f7f8 fd5d 	bl	800e930 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>
 8015e76:	4603      	mov	r3, r0
 8015e78:	4618      	mov	r0, r3
 8015e7a:	3708      	adds	r7, #8
 8015e7c:	46bd      	mov	sp, r7
 8015e7e:	bd80      	pop	{r7, pc}

08015e80 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8015e80:	b580      	push	{r7, lr}
 8015e82:	b086      	sub	sp, #24
 8015e84:	af00      	add	r7, sp, #0
 8015e86:	60f8      	str	r0, [r7, #12]
 8015e88:	60b9      	str	r1, [r7, #8]
 8015e8a:	607a      	str	r2, [r7, #4]
 8015e8c:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8015e8e:	68ba      	ldr	r2, [r7, #8]
 8015e90:	68fb      	ldr	r3, [r7, #12]
 8015e92:	1ad3      	subs	r3, r2, r3
 8015e94:	109b      	asrs	r3, r3, #2
 8015e96:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8015e98:	697b      	ldr	r3, [r7, #20]
 8015e9a:	2b00      	cmp	r3, #0
 8015e9c:	dd06      	ble.n	8015eac <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8015e9e:	697b      	ldr	r3, [r7, #20]
 8015ea0:	009b      	lsls	r3, r3, #2
 8015ea2:	461a      	mov	r2, r3
 8015ea4:	68f9      	ldr	r1, [r7, #12]
 8015ea6:	6878      	ldr	r0, [r7, #4]
 8015ea8:	f00d ffc2 	bl	8023e30 <memmove>
      return __result + __count;
 8015eac:	697b      	ldr	r3, [r7, #20]
 8015eae:	009b      	lsls	r3, r3, #2
 8015eb0:	687a      	ldr	r2, [r7, #4]
 8015eb2:	4413      	add	r3, r2
    }
 8015eb4:	4618      	mov	r0, r3
 8015eb6:	3718      	adds	r7, #24
 8015eb8:	46bd      	mov	sp, r7
 8015eba:	bd80      	pop	{r7, pc}

08015ebc <_ZNSt16allocator_traitsISaIP4BodyEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8015ebc:	b580      	push	{r7, lr}
 8015ebe:	b082      	sub	sp, #8
 8015ec0:	af00      	add	r7, sp, #0
 8015ec2:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8015ec4:	6878      	ldr	r0, [r7, #4]
 8015ec6:	f000 f805 	bl	8015ed4 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>
 8015eca:	4603      	mov	r3, r0
 8015ecc:	4618      	mov	r0, r3
 8015ece:	3708      	adds	r7, #8
 8015ed0:	46bd      	mov	sp, r7
 8015ed2:	bd80      	pop	{r7, pc}

08015ed4 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8015ed4:	b480      	push	{r7}
 8015ed6:	b083      	sub	sp, #12
 8015ed8:	af00      	add	r7, sp, #0
 8015eda:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8015edc:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8015ee0:	4618      	mov	r0, r3
 8015ee2:	370c      	adds	r7, #12
 8015ee4:	46bd      	mov	sp, r7
 8015ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015eea:	4770      	bx	lr

08015eec <_ZSt12__niter_baseIPP4BodyET_S3_>:
    __niter_base(_Iterator __it)
 8015eec:	b480      	push	{r7}
 8015eee:	b083      	sub	sp, #12
 8015ef0:	af00      	add	r7, sp, #0
 8015ef2:	6078      	str	r0, [r7, #4]
    { return __it; }
 8015ef4:	687b      	ldr	r3, [r7, #4]
 8015ef6:	4618      	mov	r0, r3
 8015ef8:	370c      	adds	r7, #12
 8015efa:	46bd      	mov	sp, r7
 8015efc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f00:	4770      	bx	lr

08015f02 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8015f02:	b580      	push	{r7, lr}
 8015f04:	b086      	sub	sp, #24
 8015f06:	af00      	add	r7, sp, #0
 8015f08:	60f8      	str	r0, [r7, #12]
 8015f0a:	60b9      	str	r1, [r7, #8]
 8015f0c:	607a      	str	r2, [r7, #4]
 8015f0e:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8015f10:	68ba      	ldr	r2, [r7, #8]
 8015f12:	68fb      	ldr	r3, [r7, #12]
 8015f14:	1ad3      	subs	r3, r2, r3
 8015f16:	109b      	asrs	r3, r3, #2
 8015f18:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8015f1a:	697b      	ldr	r3, [r7, #20]
 8015f1c:	2b00      	cmp	r3, #0
 8015f1e:	dd06      	ble.n	8015f2e <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8015f20:	697b      	ldr	r3, [r7, #20]
 8015f22:	009b      	lsls	r3, r3, #2
 8015f24:	461a      	mov	r2, r3
 8015f26:	68f9      	ldr	r1, [r7, #12]
 8015f28:	6878      	ldr	r0, [r7, #4]
 8015f2a:	f00d ff81 	bl	8023e30 <memmove>
      return __result + __count;
 8015f2e:	697b      	ldr	r3, [r7, #20]
 8015f30:	009b      	lsls	r3, r3, #2
 8015f32:	687a      	ldr	r2, [r7, #4]
 8015f34:	4413      	add	r3, r2
    }
 8015f36:	4618      	mov	r0, r3
 8015f38:	3718      	adds	r7, #24
 8015f3a:	46bd      	mov	sp, r7
 8015f3c:	bd80      	pop	{r7, pc}

08015f3e <_ZNSt16allocator_traitsISaIP9StatementEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8015f3e:	b580      	push	{r7, lr}
 8015f40:	b082      	sub	sp, #8
 8015f42:	af00      	add	r7, sp, #0
 8015f44:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8015f46:	6878      	ldr	r0, [r7, #4]
 8015f48:	f000 f805 	bl	8015f56 <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>
 8015f4c:	4603      	mov	r3, r0
 8015f4e:	4618      	mov	r0, r3
 8015f50:	3708      	adds	r7, #8
 8015f52:	46bd      	mov	sp, r7
 8015f54:	bd80      	pop	{r7, pc}

08015f56 <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8015f56:	b480      	push	{r7}
 8015f58:	b083      	sub	sp, #12
 8015f5a:	af00      	add	r7, sp, #0
 8015f5c:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8015f5e:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8015f62:	4618      	mov	r0, r3
 8015f64:	370c      	adds	r7, #12
 8015f66:	46bd      	mov	sp, r7
 8015f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f6c:	4770      	bx	lr

08015f6e <_ZSt12__niter_baseIPP9StatementET_S3_>:
    __niter_base(_Iterator __it)
 8015f6e:	b480      	push	{r7}
 8015f70:	b083      	sub	sp, #12
 8015f72:	af00      	add	r7, sp, #0
 8015f74:	6078      	str	r0, [r7, #4]
    { return __it; }
 8015f76:	687b      	ldr	r3, [r7, #4]
 8015f78:	4618      	mov	r0, r3
 8015f7a:	370c      	adds	r7, #12
 8015f7c:	46bd      	mov	sp, r7
 8015f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f82:	4770      	bx	lr

08015f84 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8015f84:	b580      	push	{r7, lr}
 8015f86:	b086      	sub	sp, #24
 8015f88:	af00      	add	r7, sp, #0
 8015f8a:	60f8      	str	r0, [r7, #12]
 8015f8c:	60b9      	str	r1, [r7, #8]
 8015f8e:	607a      	str	r2, [r7, #4]
 8015f90:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8015f92:	68ba      	ldr	r2, [r7, #8]
 8015f94:	68fb      	ldr	r3, [r7, #12]
 8015f96:	1ad3      	subs	r3, r2, r3
 8015f98:	109b      	asrs	r3, r3, #2
 8015f9a:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8015f9c:	697b      	ldr	r3, [r7, #20]
 8015f9e:	2b00      	cmp	r3, #0
 8015fa0:	dd06      	ble.n	8015fb0 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8015fa2:	697b      	ldr	r3, [r7, #20]
 8015fa4:	009b      	lsls	r3, r3, #2
 8015fa6:	461a      	mov	r2, r3
 8015fa8:	68f9      	ldr	r1, [r7, #12]
 8015faa:	6878      	ldr	r0, [r7, #4]
 8015fac:	f00d ff40 	bl	8023e30 <memmove>
      return __result + __count;
 8015fb0:	697b      	ldr	r3, [r7, #20]
 8015fb2:	009b      	lsls	r3, r3, #2
 8015fb4:	687a      	ldr	r2, [r7, #4]
 8015fb6:	4413      	add	r3, r2
    }
 8015fb8:	4618      	mov	r0, r3
 8015fba:	3718      	adds	r7, #24
 8015fbc:	46bd      	mov	sp, r7
 8015fbe:	bd80      	pop	{r7, pc}

08015fc0 <_Z41__static_initialization_and_destruction_0ii>:
 8015fc0:	b590      	push	{r4, r7, lr}
 8015fc2:	b0e7      	sub	sp, #412	; 0x19c
 8015fc4:	af02      	add	r7, sp, #8
 8015fc6:	1d3b      	adds	r3, r7, #4
 8015fc8:	6018      	str	r0, [r3, #0]
 8015fca:	463b      	mov	r3, r7
 8015fcc:	6019      	str	r1, [r3, #0]
 8015fce:	1d3b      	adds	r3, r7, #4
 8015fd0:	681b      	ldr	r3, [r3, #0]
 8015fd2:	2b01      	cmp	r3, #1
 8015fd4:	f040 819d 	bne.w	8016312 <_Z41__static_initialization_and_destruction_0ii+0x352>
 8015fd8:	463b      	mov	r3, r7
 8015fda:	681b      	ldr	r3, [r3, #0]
 8015fdc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8015fe0:	4293      	cmp	r3, r2
 8015fe2:	f040 8196 	bne.w	8016312 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8015fe6:	f107 0314 	add.w	r3, r7, #20
 8015fea:	4618      	mov	r0, r3
 8015fec:	2322      	movs	r3, #34	; 0x22
 8015fee:	461a      	mov	r2, r3
 8015ff0:	2100      	movs	r1, #0
 8015ff2:	f00d ff37 	bl	8023e64 <memset>
 8015ff6:	f107 0314 	add.w	r3, r7, #20
 8015ffa:	223a      	movs	r2, #58	; 0x3a
 8015ffc:	701a      	strb	r2, [r3, #0]
 8015ffe:	f107 0314 	add.w	r3, r7, #20
 8016002:	2201      	movs	r2, #1
 8016004:	705a      	strb	r2, [r3, #1]
 8016006:	f107 0314 	add.w	r3, r7, #20
 801600a:	220a      	movs	r2, #10
 801600c:	709a      	strb	r2, [r3, #2]
 801600e:	f107 0314 	add.w	r3, r7, #20
 8016012:	220a      	movs	r2, #10
 8016014:	70da      	strb	r2, [r3, #3]
 8016016:	f107 0314 	add.w	r3, r7, #20
 801601a:	222c      	movs	r2, #44	; 0x2c
 801601c:	711a      	strb	r2, [r3, #4]
 801601e:	f107 0314 	add.w	r3, r7, #20
 8016022:	220c      	movs	r2, #12
 8016024:	715a      	strb	r2, [r3, #5]
 8016026:	f107 0314 	add.w	r3, r7, #20
 801602a:	222e      	movs	r2, #46	; 0x2e
 801602c:	719a      	strb	r2, [r3, #6]
 801602e:	f107 0314 	add.w	r3, r7, #20
 8016032:	220b      	movs	r2, #11
 8016034:	71da      	strb	r2, [r3, #7]
 8016036:	f107 0314 	add.w	r3, r7, #20
 801603a:	225b      	movs	r2, #91	; 0x5b
 801603c:	721a      	strb	r2, [r3, #8]
 801603e:	f107 0314 	add.w	r3, r7, #20
 8016042:	220d      	movs	r2, #13
 8016044:	725a      	strb	r2, [r3, #9]
 8016046:	f107 0314 	add.w	r3, r7, #20
 801604a:	225d      	movs	r2, #93	; 0x5d
 801604c:	729a      	strb	r2, [r3, #10]
 801604e:	f107 0314 	add.w	r3, r7, #20
 8016052:	220e      	movs	r2, #14
 8016054:	72da      	strb	r2, [r3, #11]
 8016056:	f107 0314 	add.w	r3, r7, #20
 801605a:	227c      	movs	r2, #124	; 0x7c
 801605c:	731a      	strb	r2, [r3, #12]
 801605e:	f107 0314 	add.w	r3, r7, #20
 8016062:	2215      	movs	r2, #21
 8016064:	735a      	strb	r2, [r3, #13]
 8016066:	f107 0314 	add.w	r3, r7, #20
 801606a:	2226      	movs	r2, #38	; 0x26
 801606c:	739a      	strb	r2, [r3, #14]
 801606e:	f107 0314 	add.w	r3, r7, #20
 8016072:	2216      	movs	r2, #22
 8016074:	73da      	strb	r2, [r3, #15]
 8016076:	f107 0314 	add.w	r3, r7, #20
 801607a:	222b      	movs	r2, #43	; 0x2b
 801607c:	741a      	strb	r2, [r3, #16]
 801607e:	f107 0314 	add.w	r3, r7, #20
 8016082:	221f      	movs	r2, #31
 8016084:	745a      	strb	r2, [r3, #17]
 8016086:	f107 0314 	add.w	r3, r7, #20
 801608a:	222d      	movs	r2, #45	; 0x2d
 801608c:	749a      	strb	r2, [r3, #18]
 801608e:	f107 0314 	add.w	r3, r7, #20
 8016092:	2220      	movs	r2, #32
 8016094:	74da      	strb	r2, [r3, #19]
 8016096:	f107 0314 	add.w	r3, r7, #20
 801609a:	222a      	movs	r2, #42	; 0x2a
 801609c:	751a      	strb	r2, [r3, #20]
 801609e:	f107 0314 	add.w	r3, r7, #20
 80160a2:	2221      	movs	r2, #33	; 0x21
 80160a4:	755a      	strb	r2, [r3, #21]
 80160a6:	f107 0314 	add.w	r3, r7, #20
 80160aa:	222f      	movs	r2, #47	; 0x2f
 80160ac:	759a      	strb	r2, [r3, #22]
 80160ae:	f107 0314 	add.w	r3, r7, #20
 80160b2:	2222      	movs	r2, #34	; 0x22
 80160b4:	75da      	strb	r2, [r3, #23]
 80160b6:	f107 0314 	add.w	r3, r7, #20
 80160ba:	225e      	movs	r2, #94	; 0x5e
 80160bc:	761a      	strb	r2, [r3, #24]
 80160be:	f107 0314 	add.w	r3, r7, #20
 80160c2:	2223      	movs	r2, #35	; 0x23
 80160c4:	765a      	strb	r2, [r3, #25]
 80160c6:	f107 0314 	add.w	r3, r7, #20
 80160ca:	2225      	movs	r2, #37	; 0x25
 80160cc:	769a      	strb	r2, [r3, #26]
 80160ce:	f107 0314 	add.w	r3, r7, #20
 80160d2:	2224      	movs	r2, #36	; 0x24
 80160d4:	76da      	strb	r2, [r3, #27]
 80160d6:	f107 0314 	add.w	r3, r7, #20
 80160da:	2228      	movs	r2, #40	; 0x28
 80160dc:	771a      	strb	r2, [r3, #28]
 80160de:	f107 0314 	add.w	r3, r7, #20
 80160e2:	2226      	movs	r2, #38	; 0x26
 80160e4:	775a      	strb	r2, [r3, #29]
 80160e6:	f107 0314 	add.w	r3, r7, #20
 80160ea:	2229      	movs	r2, #41	; 0x29
 80160ec:	779a      	strb	r2, [r3, #30]
 80160ee:	f107 0314 	add.w	r3, r7, #20
 80160f2:	2227      	movs	r2, #39	; 0x27
 80160f4:	77da      	strb	r2, [r3, #31]
 80160f6:	f107 0314 	add.w	r3, r7, #20
 80160fa:	2225      	movs	r2, #37	; 0x25
 80160fc:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8016100:	f107 030c 	add.w	r3, r7, #12
 8016104:	f107 0214 	add.w	r2, r7, #20
 8016108:	601a      	str	r2, [r3, #0]
 801610a:	f107 030c 	add.w	r3, r7, #12
 801610e:	2211      	movs	r2, #17
 8016110:	605a      	str	r2, [r3, #4]
 8016112:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016116:	4618      	mov	r0, r3
 8016118:	f7eb fcb0 	bl	8001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801611c:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8016120:	f107 020c 	add.w	r2, r7, #12
 8016124:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016128:	9300      	str	r3, [sp, #0]
 801612a:	460b      	mov	r3, r1
 801612c:	ca06      	ldmia	r2, {r1, r2}
 801612e:	4885      	ldr	r0, [pc, #532]	; (8016344 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8016130:	f7eb fcbc 	bl	8001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8016134:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016138:	4618      	mov	r0, r3
 801613a:	f7eb fcab 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801613e:	2305      	movs	r3, #5
 8016140:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8016144:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8016148:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801614c:	497e      	ldr	r1, [pc, #504]	; (8016348 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801614e:	4618      	mov	r0, r3
 8016150:	f7ea ffd2 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8016154:	2306      	movs	r3, #6
 8016156:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801615a:	f207 1263 	addw	r2, r7, #355	; 0x163
 801615e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016162:	331c      	adds	r3, #28
 8016164:	4979      	ldr	r1, [pc, #484]	; (801634c <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8016166:	4618      	mov	r0, r3
 8016168:	f7ea ffee 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801616c:	2307      	movs	r3, #7
 801616e:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8016172:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8016176:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801617a:	3338      	adds	r3, #56	; 0x38
 801617c:	4974      	ldr	r1, [pc, #464]	; (8016350 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801617e:	4618      	mov	r0, r3
 8016180:	f7ea ffe2 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8016184:	2308      	movs	r3, #8
 8016186:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801618a:	f207 1265 	addw	r2, r7, #357	; 0x165
 801618e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016192:	3354      	adds	r3, #84	; 0x54
 8016194:	496f      	ldr	r1, [pc, #444]	; (8016354 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8016196:	4618      	mov	r0, r3
 8016198:	f7ea ffae 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801619c:	2309      	movs	r3, #9
 801619e:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 80161a2:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 80161a6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80161aa:	3370      	adds	r3, #112	; 0x70
 80161ac:	496a      	ldr	r1, [pc, #424]	; (8016358 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 80161ae:	4618      	mov	r0, r3
 80161b0:	f7ea fff2 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 80161b4:	2310      	movs	r3, #16
 80161b6:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 80161ba:	f207 1267 	addw	r2, r7, #359	; 0x167
 80161be:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80161c2:	338c      	adds	r3, #140	; 0x8c
 80161c4:	4965      	ldr	r1, [pc, #404]	; (801635c <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 80161c6:	4618      	mov	r0, r3
 80161c8:	f7eb f80e 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 80161cc:	2311      	movs	r3, #17
 80161ce:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 80161d2:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 80161d6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80161da:	33a8      	adds	r3, #168	; 0xa8
 80161dc:	4960      	ldr	r1, [pc, #384]	; (8016360 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 80161de:	4618      	mov	r0, r3
 80161e0:	f7ea ffda 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 80161e4:	2312      	movs	r3, #18
 80161e6:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 80161ea:	f207 1269 	addw	r2, r7, #361	; 0x169
 80161ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80161f2:	33c4      	adds	r3, #196	; 0xc4
 80161f4:	495b      	ldr	r1, [pc, #364]	; (8016364 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 80161f6:	4618      	mov	r0, r3
 80161f8:	f7ea ff7e 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 80161fc:	2313      	movs	r3, #19
 80161fe:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8016202:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8016206:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801620a:	33e0      	adds	r3, #224	; 0xe0
 801620c:	4956      	ldr	r1, [pc, #344]	; (8016368 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801620e:	4618      	mov	r0, r3
 8016210:	f7ea ff9a 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8016214:	2314      	movs	r3, #20
 8016216:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801621a:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801621e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016222:	33fc      	adds	r3, #252	; 0xfc
 8016224:	4951      	ldr	r1, [pc, #324]	; (801636c <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8016226:	4618      	mov	r0, r3
 8016228:	f7eb f806 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801622c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016230:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8016234:	601a      	str	r2, [r3, #0]
 8016236:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801623a:	220a      	movs	r2, #10
 801623c:	605a      	str	r2, [r3, #4]
 801623e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016242:	4618      	mov	r0, r3
 8016244:	f7eb fcbf 	bl	8001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8016248:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801624c:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8016250:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016254:	9300      	str	r3, [sp, #0]
 8016256:	460b      	mov	r3, r1
 8016258:	ca06      	ldmia	r2, {r1, r2}
 801625a:	4845      	ldr	r0, [pc, #276]	; (8016370 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801625c:	f7eb fccb 	bl	8001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8016260:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016264:	4618      	mov	r0, r3
 8016266:	f7eb fcba 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801626a:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801626e:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8016272:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016276:	429c      	cmp	r4, r3
 8016278:	d004      	beq.n	8016284 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801627a:	3c1c      	subs	r4, #28
 801627c:	4620      	mov	r0, r4
 801627e:	f7ea ff2e 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8016282:	e7f6      	b.n	8016272 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8016284:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8016288:	2200      	movs	r2, #0
 801628a:	601a      	str	r2, [r3, #0]
 801628c:	605a      	str	r2, [r3, #4]
 801628e:	609a      	str	r2, [r3, #8]
 8016290:	233c      	movs	r3, #60	; 0x3c
 8016292:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8016296:	231b      	movs	r3, #27
 8016298:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801629c:	231c      	movs	r3, #28
 801629e:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 80162a2:	233e      	movs	r3, #62	; 0x3e
 80162a4:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 80162a8:	2319      	movs	r3, #25
 80162aa:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 80162ae:	231a      	movs	r3, #26
 80162b0:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 80162b4:	233d      	movs	r3, #61	; 0x3d
 80162b6:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 80162ba:	2318      	movs	r3, #24
 80162bc:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 80162c0:	231d      	movs	r3, #29
 80162c2:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 80162c6:	2321      	movs	r3, #33	; 0x21
 80162c8:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 80162cc:	2317      	movs	r3, #23
 80162ce:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 80162d2:	231e      	movs	r3, #30
 80162d4:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 80162d8:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80162dc:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 80162e0:	2304      	movs	r3, #4
 80162e2:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 80162e6:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80162ea:	4618      	mov	r0, r3
 80162ec:	f7eb fcb3 	bl	8001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 80162f0:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 80162f4:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80162f8:	9300      	str	r3, [sp, #0]
 80162fa:	4613      	mov	r3, r2
 80162fc:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8016300:	ca06      	ldmia	r2, {r1, r2}
 8016302:	481c      	ldr	r0, [pc, #112]	; (8016374 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8016304:	f7eb fcbf 	bl	8001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8016308:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801630c:	4618      	mov	r0, r3
 801630e:	f7eb fcae 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8016312:	1d3b      	adds	r3, r7, #4
 8016314:	681b      	ldr	r3, [r3, #0]
 8016316:	2b00      	cmp	r3, #0
 8016318:	d10e      	bne.n	8016338 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801631a:	463b      	mov	r3, r7
 801631c:	681b      	ldr	r3, [r3, #0]
 801631e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016322:	4293      	cmp	r3, r2
 8016324:	d108      	bne.n	8016338 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8016326:	4813      	ldr	r0, [pc, #76]	; (8016374 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8016328:	f7f3 f93f 	bl	80095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801632c:	4810      	ldr	r0, [pc, #64]	; (8016370 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801632e:	f7f3 f949 	bl	80095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8016332:	4804      	ldr	r0, [pc, #16]	; (8016344 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8016334:	f7f3 f953 	bl	80095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8016338:	bf00      	nop
 801633a:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801633e:	46bd      	mov	sp, r7
 8016340:	bd90      	pop	{r4, r7, pc}
 8016342:	bf00      	nop
 8016344:	20000424 	.word	0x20000424
 8016348:	0802779c 	.word	0x0802779c
 801634c:	080277a4 	.word	0x080277a4
 8016350:	080277ac 	.word	0x080277ac
 8016354:	080277b4 	.word	0x080277b4
 8016358:	080277bc 	.word	0x080277bc
 801635c:	080277c4 	.word	0x080277c4
 8016360:	080277c8 	.word	0x080277c8
 8016364:	080277d0 	.word	0x080277d0
 8016368:	080277d8 	.word	0x080277d8
 801636c:	080277e0 	.word	0x080277e0
 8016370:	2000043c 	.word	0x2000043c
 8016374:	20000454 	.word	0x20000454

08016378 <_GLOBAL__sub_I__ZN7ProgramD2Ev>:
 8016378:	b580      	push	{r7, lr}
 801637a:	af00      	add	r7, sp, #0
 801637c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016380:	2001      	movs	r0, #1
 8016382:	f7ff fe1d 	bl	8015fc0 <_Z41__static_initialization_and_destruction_0ii>
 8016386:	bd80      	pop	{r7, pc}

08016388 <_GLOBAL__sub_D__ZN7ProgramD2Ev>:
 8016388:	b580      	push	{r7, lr}
 801638a:	af00      	add	r7, sp, #0
 801638c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016390:	2000      	movs	r0, #0
 8016392:	f7ff fe15 	bl	8015fc0 <_Z41__static_initialization_and_destruction_0ii>
 8016396:	bd80      	pop	{r7, pc}

08016398 <_ZN16Position_counterC1Ev>:
#include <Position_counter.h>

Position_counter::Position_counter()
 8016398:	b480      	push	{r7}
 801639a:	b083      	sub	sp, #12
 801639c:	af00      	add	r7, sp, #0
 801639e:	6078      	str	r0, [r7, #4]
{
	line = 1;
 80163a0:	687b      	ldr	r3, [r7, #4]
 80163a2:	2201      	movs	r2, #1
 80163a4:	601a      	str	r2, [r3, #0]
	position = 0;
 80163a6:	687b      	ldr	r3, [r7, #4]
 80163a8:	2200      	movs	r2, #0
 80163aa:	605a      	str	r2, [r3, #4]
}
 80163ac:	687b      	ldr	r3, [r7, #4]
 80163ae:	4618      	mov	r0, r3
 80163b0:	370c      	adds	r7, #12
 80163b2:	46bd      	mov	sp, r7
 80163b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80163b8:	4770      	bx	lr
	...

080163bc <_ZN16Position_counter12get_instanceEv>:

Position_counter& Position_counter::get_instance()
{
 80163bc:	b580      	push	{r7, lr}
 80163be:	af00      	add	r7, sp, #0
	static Position_counter instance;
 80163c0:	4b10      	ldr	r3, [pc, #64]	; (8016404 <_ZN16Position_counter12get_instanceEv+0x48>)
 80163c2:	781b      	ldrb	r3, [r3, #0]
 80163c4:	f3bf 8f5b 	dmb	ish
 80163c8:	b2db      	uxtb	r3, r3
 80163ca:	f003 0301 	and.w	r3, r3, #1
 80163ce:	2b00      	cmp	r3, #0
 80163d0:	bf0c      	ite	eq
 80163d2:	2301      	moveq	r3, #1
 80163d4:	2300      	movne	r3, #0
 80163d6:	b2db      	uxtb	r3, r3
 80163d8:	2b00      	cmp	r3, #0
 80163da:	d010      	beq.n	80163fe <_ZN16Position_counter12get_instanceEv+0x42>
 80163dc:	4809      	ldr	r0, [pc, #36]	; (8016404 <_ZN16Position_counter12get_instanceEv+0x48>)
 80163de:	f00c f84f 	bl	8022480 <__cxa_guard_acquire>
 80163e2:	4603      	mov	r3, r0
 80163e4:	2b00      	cmp	r3, #0
 80163e6:	bf14      	ite	ne
 80163e8:	2301      	movne	r3, #1
 80163ea:	2300      	moveq	r3, #0
 80163ec:	b2db      	uxtb	r3, r3
 80163ee:	2b00      	cmp	r3, #0
 80163f0:	d005      	beq.n	80163fe <_ZN16Position_counter12get_instanceEv+0x42>
 80163f2:	4805      	ldr	r0, [pc, #20]	; (8016408 <_ZN16Position_counter12get_instanceEv+0x4c>)
 80163f4:	f7ff ffd0 	bl	8016398 <_ZN16Position_counterC1Ev>
 80163f8:	4802      	ldr	r0, [pc, #8]	; (8016404 <_ZN16Position_counter12get_instanceEv+0x48>)
 80163fa:	f00c f84d 	bl	8022498 <__cxa_guard_release>
	return instance;
 80163fe:	4b02      	ldr	r3, [pc, #8]	; (8016408 <_ZN16Position_counter12get_instanceEv+0x4c>)
}
 8016400:	4618      	mov	r0, r3
 8016402:	bd80      	pop	{r7, pc}
 8016404:	20000498 	.word	0x20000498
 8016408:	20000490 	.word	0x20000490

0801640c <_ZN16Position_counter15update_positionEh>:

void Position_counter::update_position(uint8_t rx_buffer)
{
 801640c:	b480      	push	{r7}
 801640e:	b083      	sub	sp, #12
 8016410:	af00      	add	r7, sp, #0
 8016412:	6078      	str	r0, [r7, #4]
 8016414:	460b      	mov	r3, r1
 8016416:	70fb      	strb	r3, [r7, #3]
	if (rx_buffer == '\n')
 8016418:	78fb      	ldrb	r3, [r7, #3]
 801641a:	2b0a      	cmp	r3, #10
 801641c:	d108      	bne.n	8016430 <_ZN16Position_counter15update_positionEh+0x24>
	{
		++line;
 801641e:	687b      	ldr	r3, [r7, #4]
 8016420:	681b      	ldr	r3, [r3, #0]
 8016422:	1c5a      	adds	r2, r3, #1
 8016424:	687b      	ldr	r3, [r7, #4]
 8016426:	601a      	str	r2, [r3, #0]
		position = 0;
 8016428:	687b      	ldr	r3, [r7, #4]
 801642a:	2200      	movs	r2, #0
 801642c:	605a      	str	r2, [r3, #4]
	}
	else
	{
		++position;
	}
}
 801642e:	e004      	b.n	801643a <_ZN16Position_counter15update_positionEh+0x2e>
		++position;
 8016430:	687b      	ldr	r3, [r7, #4]
 8016432:	685b      	ldr	r3, [r3, #4]
 8016434:	1c5a      	adds	r2, r3, #1
 8016436:	687b      	ldr	r3, [r7, #4]
 8016438:	605a      	str	r2, [r3, #4]
}
 801643a:	bf00      	nop
 801643c:	370c      	adds	r7, #12
 801643e:	46bd      	mov	sp, r7
 8016440:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016444:	4770      	bx	lr

08016446 <_ZN13Function_callD1Ev>:
	{
		delete b;
	}
}

Function_call::~Function_call()
 8016446:	b590      	push	{r4, r7, lr}
 8016448:	b087      	sub	sp, #28
 801644a:	af00      	add	r7, sp, #0
 801644c:	6078      	str	r0, [r7, #4]
{
	for (Expression *e : arguments)
 801644e:	687b      	ldr	r3, [r7, #4]
 8016450:	3320      	adds	r3, #32
 8016452:	617b      	str	r3, [r7, #20]
 8016454:	6978      	ldr	r0, [r7, #20]
 8016456:	f7fe ff7f 	bl	8015358 <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 801645a:	4603      	mov	r3, r0
 801645c:	60fb      	str	r3, [r7, #12]
 801645e:	6978      	ldr	r0, [r7, #20]
 8016460:	f7fe fbb4 	bl	8014bcc <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 8016464:	4603      	mov	r3, r0
 8016466:	60bb      	str	r3, [r7, #8]
 8016468:	f107 0208 	add.w	r2, r7, #8
 801646c:	f107 030c 	add.w	r3, r7, #12
 8016470:	4611      	mov	r1, r2
 8016472:	4618      	mov	r0, r3
 8016474:	f000 f843 	bl	80164fe <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8016478:	4603      	mov	r3, r0
 801647a:	2b00      	cmp	r3, #0
 801647c:	d017      	beq.n	80164ae <_ZN13Function_callD1Ev+0x68>
 801647e:	f107 030c 	add.w	r3, r7, #12
 8016482:	4618      	mov	r0, r3
 8016484:	f7fe ffc5 	bl	8015412 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 8016488:	4603      	mov	r3, r0
 801648a:	681b      	ldr	r3, [r3, #0]
 801648c:	613b      	str	r3, [r7, #16]
	{
		delete e;
 801648e:	693c      	ldr	r4, [r7, #16]
 8016490:	2c00      	cmp	r4, #0
 8016492:	d006      	beq.n	80164a2 <_ZN13Function_callD1Ev+0x5c>
 8016494:	4620      	mov	r0, r4
 8016496:	f7f3 fc86 	bl	8009da6 <_ZN10ExpressionD1Ev>
 801649a:	2114      	movs	r1, #20
 801649c:	4620      	mov	r0, r4
 801649e:	f00b ffed 	bl	802247c <_ZdlPvj>
	for (Expression *e : arguments)
 80164a2:	f107 030c 	add.w	r3, r7, #12
 80164a6:	4618      	mov	r0, r3
 80164a8:	f000 f841 	bl	801652e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>
 80164ac:	e7dc      	b.n	8016468 <_ZN13Function_callD1Ev+0x22>
Function_call::~Function_call()
 80164ae:	687b      	ldr	r3, [r7, #4]
 80164b0:	3320      	adds	r3, #32
 80164b2:	4618      	mov	r0, r3
 80164b4:	f7f7 fdc2 	bl	800e03c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
 80164b8:	687b      	ldr	r3, [r7, #4]
 80164ba:	3308      	adds	r3, #8
 80164bc:	4618      	mov	r0, r3
 80164be:	f00c fa90 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 80164c2:	687b      	ldr	r3, [r7, #4]
 80164c4:	4618      	mov	r0, r3
 80164c6:	371c      	adds	r7, #28
 80164c8:	46bd      	mov	sp, r7
 80164ca:	bd90      	pop	{r4, r7, pc}

080164cc <_ZN8VariableD1Ev>:
{
	delete value;
	delete var;
}

Variable::~Variable()
 80164cc:	b590      	push	{r4, r7, lr}
 80164ce:	b083      	sub	sp, #12
 80164d0:	af00      	add	r7, sp, #0
 80164d2:	6078      	str	r0, [r7, #4]
{
	delete index;
 80164d4:	687b      	ldr	r3, [r7, #4]
 80164d6:	69dc      	ldr	r4, [r3, #28]
 80164d8:	2c00      	cmp	r4, #0
 80164da:	d006      	beq.n	80164ea <_ZN8VariableD1Ev+0x1e>
 80164dc:	4620      	mov	r0, r4
 80164de:	f7f3 fc62 	bl	8009da6 <_ZN10ExpressionD1Ev>
 80164e2:	2114      	movs	r1, #20
 80164e4:	4620      	mov	r0, r4
 80164e6:	f00b ffc9 	bl	802247c <_ZdlPvj>
Variable::~Variable()
 80164ea:	687b      	ldr	r3, [r7, #4]
 80164ec:	3304      	adds	r3, #4
 80164ee:	4618      	mov	r0, r3
 80164f0:	f00c fa77 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 80164f4:	687b      	ldr	r3, [r7, #4]
 80164f6:	4618      	mov	r0, r3
 80164f8:	370c      	adds	r7, #12
 80164fa:	46bd      	mov	sp, r7
 80164fc:	bd90      	pop	{r4, r7, pc}

080164fe <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 80164fe:	b590      	push	{r4, r7, lr}
 8016500:	b083      	sub	sp, #12
 8016502:	af00      	add	r7, sp, #0
 8016504:	6078      	str	r0, [r7, #4]
 8016506:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 8016508:	6878      	ldr	r0, [r7, #4]
 801650a:	f7fe ff5e 	bl	80153ca <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801650e:	4603      	mov	r3, r0
 8016510:	681c      	ldr	r4, [r3, #0]
 8016512:	6838      	ldr	r0, [r7, #0]
 8016514:	f7fe ff59 	bl	80153ca <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8016518:	4603      	mov	r3, r0
 801651a:	681b      	ldr	r3, [r3, #0]
 801651c:	429c      	cmp	r4, r3
 801651e:	bf14      	ite	ne
 8016520:	2301      	movne	r3, #1
 8016522:	2300      	moveq	r3, #0
 8016524:	b2db      	uxtb	r3, r3
 8016526:	4618      	mov	r0, r3
 8016528:	370c      	adds	r7, #12
 801652a:	46bd      	mov	sp, r7
 801652c:	bd90      	pop	{r4, r7, pc}

0801652e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 801652e:	b480      	push	{r7}
 8016530:	b083      	sub	sp, #12
 8016532:	af00      	add	r7, sp, #0
 8016534:	6078      	str	r0, [r7, #4]
	++_M_current;
 8016536:	687b      	ldr	r3, [r7, #4]
 8016538:	681b      	ldr	r3, [r3, #0]
 801653a:	1d1a      	adds	r2, r3, #4
 801653c:	687b      	ldr	r3, [r7, #4]
 801653e:	601a      	str	r2, [r3, #0]
	return *this;
 8016540:	687b      	ldr	r3, [r7, #4]
      }
 8016542:	4618      	mov	r0, r3
 8016544:	370c      	adds	r7, #12
 8016546:	46bd      	mov	sp, r7
 8016548:	f85d 7b04 	ldr.w	r7, [sp], #4
 801654c:	4770      	bx	lr
	...

08016550 <_Z41__static_initialization_and_destruction_0ii>:
 8016550:	b590      	push	{r4, r7, lr}
 8016552:	b0e7      	sub	sp, #412	; 0x19c
 8016554:	af02      	add	r7, sp, #8
 8016556:	1d3b      	adds	r3, r7, #4
 8016558:	6018      	str	r0, [r3, #0]
 801655a:	463b      	mov	r3, r7
 801655c:	6019      	str	r1, [r3, #0]
 801655e:	1d3b      	adds	r3, r7, #4
 8016560:	681b      	ldr	r3, [r3, #0]
 8016562:	2b01      	cmp	r3, #1
 8016564:	f040 819d 	bne.w	80168a2 <_Z41__static_initialization_and_destruction_0ii+0x352>
 8016568:	463b      	mov	r3, r7
 801656a:	681b      	ldr	r3, [r3, #0]
 801656c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016570:	4293      	cmp	r3, r2
 8016572:	f040 8196 	bne.w	80168a2 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8016576:	f107 0314 	add.w	r3, r7, #20
 801657a:	4618      	mov	r0, r3
 801657c:	2322      	movs	r3, #34	; 0x22
 801657e:	461a      	mov	r2, r3
 8016580:	2100      	movs	r1, #0
 8016582:	f00d fc6f 	bl	8023e64 <memset>
 8016586:	f107 0314 	add.w	r3, r7, #20
 801658a:	223a      	movs	r2, #58	; 0x3a
 801658c:	701a      	strb	r2, [r3, #0]
 801658e:	f107 0314 	add.w	r3, r7, #20
 8016592:	2201      	movs	r2, #1
 8016594:	705a      	strb	r2, [r3, #1]
 8016596:	f107 0314 	add.w	r3, r7, #20
 801659a:	220a      	movs	r2, #10
 801659c:	709a      	strb	r2, [r3, #2]
 801659e:	f107 0314 	add.w	r3, r7, #20
 80165a2:	220a      	movs	r2, #10
 80165a4:	70da      	strb	r2, [r3, #3]
 80165a6:	f107 0314 	add.w	r3, r7, #20
 80165aa:	222c      	movs	r2, #44	; 0x2c
 80165ac:	711a      	strb	r2, [r3, #4]
 80165ae:	f107 0314 	add.w	r3, r7, #20
 80165b2:	220c      	movs	r2, #12
 80165b4:	715a      	strb	r2, [r3, #5]
 80165b6:	f107 0314 	add.w	r3, r7, #20
 80165ba:	222e      	movs	r2, #46	; 0x2e
 80165bc:	719a      	strb	r2, [r3, #6]
 80165be:	f107 0314 	add.w	r3, r7, #20
 80165c2:	220b      	movs	r2, #11
 80165c4:	71da      	strb	r2, [r3, #7]
 80165c6:	f107 0314 	add.w	r3, r7, #20
 80165ca:	225b      	movs	r2, #91	; 0x5b
 80165cc:	721a      	strb	r2, [r3, #8]
 80165ce:	f107 0314 	add.w	r3, r7, #20
 80165d2:	220d      	movs	r2, #13
 80165d4:	725a      	strb	r2, [r3, #9]
 80165d6:	f107 0314 	add.w	r3, r7, #20
 80165da:	225d      	movs	r2, #93	; 0x5d
 80165dc:	729a      	strb	r2, [r3, #10]
 80165de:	f107 0314 	add.w	r3, r7, #20
 80165e2:	220e      	movs	r2, #14
 80165e4:	72da      	strb	r2, [r3, #11]
 80165e6:	f107 0314 	add.w	r3, r7, #20
 80165ea:	227c      	movs	r2, #124	; 0x7c
 80165ec:	731a      	strb	r2, [r3, #12]
 80165ee:	f107 0314 	add.w	r3, r7, #20
 80165f2:	2215      	movs	r2, #21
 80165f4:	735a      	strb	r2, [r3, #13]
 80165f6:	f107 0314 	add.w	r3, r7, #20
 80165fa:	2226      	movs	r2, #38	; 0x26
 80165fc:	739a      	strb	r2, [r3, #14]
 80165fe:	f107 0314 	add.w	r3, r7, #20
 8016602:	2216      	movs	r2, #22
 8016604:	73da      	strb	r2, [r3, #15]
 8016606:	f107 0314 	add.w	r3, r7, #20
 801660a:	222b      	movs	r2, #43	; 0x2b
 801660c:	741a      	strb	r2, [r3, #16]
 801660e:	f107 0314 	add.w	r3, r7, #20
 8016612:	221f      	movs	r2, #31
 8016614:	745a      	strb	r2, [r3, #17]
 8016616:	f107 0314 	add.w	r3, r7, #20
 801661a:	222d      	movs	r2, #45	; 0x2d
 801661c:	749a      	strb	r2, [r3, #18]
 801661e:	f107 0314 	add.w	r3, r7, #20
 8016622:	2220      	movs	r2, #32
 8016624:	74da      	strb	r2, [r3, #19]
 8016626:	f107 0314 	add.w	r3, r7, #20
 801662a:	222a      	movs	r2, #42	; 0x2a
 801662c:	751a      	strb	r2, [r3, #20]
 801662e:	f107 0314 	add.w	r3, r7, #20
 8016632:	2221      	movs	r2, #33	; 0x21
 8016634:	755a      	strb	r2, [r3, #21]
 8016636:	f107 0314 	add.w	r3, r7, #20
 801663a:	222f      	movs	r2, #47	; 0x2f
 801663c:	759a      	strb	r2, [r3, #22]
 801663e:	f107 0314 	add.w	r3, r7, #20
 8016642:	2222      	movs	r2, #34	; 0x22
 8016644:	75da      	strb	r2, [r3, #23]
 8016646:	f107 0314 	add.w	r3, r7, #20
 801664a:	225e      	movs	r2, #94	; 0x5e
 801664c:	761a      	strb	r2, [r3, #24]
 801664e:	f107 0314 	add.w	r3, r7, #20
 8016652:	2223      	movs	r2, #35	; 0x23
 8016654:	765a      	strb	r2, [r3, #25]
 8016656:	f107 0314 	add.w	r3, r7, #20
 801665a:	2225      	movs	r2, #37	; 0x25
 801665c:	769a      	strb	r2, [r3, #26]
 801665e:	f107 0314 	add.w	r3, r7, #20
 8016662:	2224      	movs	r2, #36	; 0x24
 8016664:	76da      	strb	r2, [r3, #27]
 8016666:	f107 0314 	add.w	r3, r7, #20
 801666a:	2228      	movs	r2, #40	; 0x28
 801666c:	771a      	strb	r2, [r3, #28]
 801666e:	f107 0314 	add.w	r3, r7, #20
 8016672:	2226      	movs	r2, #38	; 0x26
 8016674:	775a      	strb	r2, [r3, #29]
 8016676:	f107 0314 	add.w	r3, r7, #20
 801667a:	2229      	movs	r2, #41	; 0x29
 801667c:	779a      	strb	r2, [r3, #30]
 801667e:	f107 0314 	add.w	r3, r7, #20
 8016682:	2227      	movs	r2, #39	; 0x27
 8016684:	77da      	strb	r2, [r3, #31]
 8016686:	f107 0314 	add.w	r3, r7, #20
 801668a:	2225      	movs	r2, #37	; 0x25
 801668c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8016690:	f107 030c 	add.w	r3, r7, #12
 8016694:	f107 0214 	add.w	r2, r7, #20
 8016698:	601a      	str	r2, [r3, #0]
 801669a:	f107 030c 	add.w	r3, r7, #12
 801669e:	2211      	movs	r2, #17
 80166a0:	605a      	str	r2, [r3, #4]
 80166a2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80166a6:	4618      	mov	r0, r3
 80166a8:	f7eb f9e8 	bl	8001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 80166ac:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80166b0:	f107 020c 	add.w	r2, r7, #12
 80166b4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80166b8:	9300      	str	r3, [sp, #0]
 80166ba:	460b      	mov	r3, r1
 80166bc:	ca06      	ldmia	r2, {r1, r2}
 80166be:	4885      	ldr	r0, [pc, #532]	; (80168d4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80166c0:	f7eb f9f4 	bl	8001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80166c4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80166c8:	4618      	mov	r0, r3
 80166ca:	f7eb f9e3 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 80166ce:	2305      	movs	r3, #5
 80166d0:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 80166d4:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 80166d8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80166dc:	497e      	ldr	r1, [pc, #504]	; (80168d8 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 80166de:	4618      	mov	r0, r3
 80166e0:	f7ea fd0a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 80166e4:	2306      	movs	r3, #6
 80166e6:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 80166ea:	f207 1263 	addw	r2, r7, #355	; 0x163
 80166ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80166f2:	331c      	adds	r3, #28
 80166f4:	4979      	ldr	r1, [pc, #484]	; (80168dc <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 80166f6:	4618      	mov	r0, r3
 80166f8:	f7ea fd26 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 80166fc:	2307      	movs	r3, #7
 80166fe:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8016702:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8016706:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801670a:	3338      	adds	r3, #56	; 0x38
 801670c:	4974      	ldr	r1, [pc, #464]	; (80168e0 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801670e:	4618      	mov	r0, r3
 8016710:	f7ea fd1a 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8016714:	2308      	movs	r3, #8
 8016716:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801671a:	f207 1265 	addw	r2, r7, #357	; 0x165
 801671e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016722:	3354      	adds	r3, #84	; 0x54
 8016724:	496f      	ldr	r1, [pc, #444]	; (80168e4 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8016726:	4618      	mov	r0, r3
 8016728:	f7ea fce6 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801672c:	2309      	movs	r3, #9
 801672e:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8016732:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8016736:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801673a:	3370      	adds	r3, #112	; 0x70
 801673c:	496a      	ldr	r1, [pc, #424]	; (80168e8 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801673e:	4618      	mov	r0, r3
 8016740:	f7ea fd2a 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8016744:	2310      	movs	r3, #16
 8016746:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801674a:	f207 1267 	addw	r2, r7, #359	; 0x167
 801674e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016752:	338c      	adds	r3, #140	; 0x8c
 8016754:	4965      	ldr	r1, [pc, #404]	; (80168ec <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8016756:	4618      	mov	r0, r3
 8016758:	f7ea fd46 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801675c:	2311      	movs	r3, #17
 801675e:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8016762:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8016766:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801676a:	33a8      	adds	r3, #168	; 0xa8
 801676c:	4960      	ldr	r1, [pc, #384]	; (80168f0 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801676e:	4618      	mov	r0, r3
 8016770:	f7ea fd12 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8016774:	2312      	movs	r3, #18
 8016776:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801677a:	f207 1269 	addw	r2, r7, #361	; 0x169
 801677e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016782:	33c4      	adds	r3, #196	; 0xc4
 8016784:	495b      	ldr	r1, [pc, #364]	; (80168f4 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8016786:	4618      	mov	r0, r3
 8016788:	f7ea fcb6 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801678c:	2313      	movs	r3, #19
 801678e:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8016792:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8016796:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801679a:	33e0      	adds	r3, #224	; 0xe0
 801679c:	4956      	ldr	r1, [pc, #344]	; (80168f8 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801679e:	4618      	mov	r0, r3
 80167a0:	f7ea fcd2 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 80167a4:	2314      	movs	r3, #20
 80167a6:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 80167aa:	f207 126b 	addw	r2, r7, #363	; 0x16b
 80167ae:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80167b2:	33fc      	adds	r3, #252	; 0xfc
 80167b4:	4951      	ldr	r1, [pc, #324]	; (80168fc <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80167b6:	4618      	mov	r0, r3
 80167b8:	f7ea fd3e 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80167bc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80167c0:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80167c4:	601a      	str	r2, [r3, #0]
 80167c6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80167ca:	220a      	movs	r2, #10
 80167cc:	605a      	str	r2, [r3, #4]
 80167ce:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80167d2:	4618      	mov	r0, r3
 80167d4:	f7eb f9f7 	bl	8001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80167d8:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80167dc:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80167e0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80167e4:	9300      	str	r3, [sp, #0]
 80167e6:	460b      	mov	r3, r1
 80167e8:	ca06      	ldmia	r2, {r1, r2}
 80167ea:	4845      	ldr	r0, [pc, #276]	; (8016900 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80167ec:	f7eb fa03 	bl	8001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 80167f0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80167f4:	4618      	mov	r0, r3
 80167f6:	f7eb f9f2 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 80167fa:	f107 0448 	add.w	r4, r7, #72	; 0x48
 80167fe:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8016802:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016806:	429c      	cmp	r4, r3
 8016808:	d004      	beq.n	8016814 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801680a:	3c1c      	subs	r4, #28
 801680c:	4620      	mov	r0, r4
 801680e:	f7ea fc66 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8016812:	e7f6      	b.n	8016802 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8016814:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8016818:	2200      	movs	r2, #0
 801681a:	601a      	str	r2, [r3, #0]
 801681c:	605a      	str	r2, [r3, #4]
 801681e:	609a      	str	r2, [r3, #8]
 8016820:	233c      	movs	r3, #60	; 0x3c
 8016822:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8016826:	231b      	movs	r3, #27
 8016828:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801682c:	231c      	movs	r3, #28
 801682e:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8016832:	233e      	movs	r3, #62	; 0x3e
 8016834:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8016838:	2319      	movs	r3, #25
 801683a:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801683e:	231a      	movs	r3, #26
 8016840:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8016844:	233d      	movs	r3, #61	; 0x3d
 8016846:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801684a:	2318      	movs	r3, #24
 801684c:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8016850:	231d      	movs	r3, #29
 8016852:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8016856:	2321      	movs	r3, #33	; 0x21
 8016858:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801685c:	2317      	movs	r3, #23
 801685e:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8016862:	231e      	movs	r3, #30
 8016864:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8016868:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801686c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8016870:	2304      	movs	r3, #4
 8016872:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8016876:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801687a:	4618      	mov	r0, r3
 801687c:	f7eb f9eb 	bl	8001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8016880:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8016884:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016888:	9300      	str	r3, [sp, #0]
 801688a:	4613      	mov	r3, r2
 801688c:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8016890:	ca06      	ldmia	r2, {r1, r2}
 8016892:	481c      	ldr	r0, [pc, #112]	; (8016904 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8016894:	f7eb f9f7 	bl	8001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8016898:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801689c:	4618      	mov	r0, r3
 801689e:	f7eb f9e6 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 80168a2:	1d3b      	adds	r3, r7, #4
 80168a4:	681b      	ldr	r3, [r3, #0]
 80168a6:	2b00      	cmp	r3, #0
 80168a8:	d10e      	bne.n	80168c8 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80168aa:	463b      	mov	r3, r7
 80168ac:	681b      	ldr	r3, [r3, #0]
 80168ae:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80168b2:	4293      	cmp	r3, r2
 80168b4:	d108      	bne.n	80168c8 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80168b6:	4813      	ldr	r0, [pc, #76]	; (8016904 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80168b8:	f7f2 fe77 	bl	80095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80168bc:	4810      	ldr	r0, [pc, #64]	; (8016900 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80168be:	f7f2 fe81 	bl	80095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80168c2:	4804      	ldr	r0, [pc, #16]	; (80168d4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80168c4:	f7f2 fe8b 	bl	80095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80168c8:	bf00      	nop
 80168ca:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80168ce:	46bd      	mov	sp, r7
 80168d0:	bd90      	pop	{r4, r7, pc}
 80168d2:	bf00      	nop
 80168d4:	2000049c 	.word	0x2000049c
 80168d8:	08027824 	.word	0x08027824
 80168dc:	0802782c 	.word	0x0802782c
 80168e0:	08027834 	.word	0x08027834
 80168e4:	0802783c 	.word	0x0802783c
 80168e8:	08027844 	.word	0x08027844
 80168ec:	0802784c 	.word	0x0802784c
 80168f0:	08027850 	.word	0x08027850
 80168f4:	08027858 	.word	0x08027858
 80168f8:	08027860 	.word	0x08027860
 80168fc:	08027868 	.word	0x08027868
 8016900:	200004b4 	.word	0x200004b4
 8016904:	200004cc 	.word	0x200004cc

08016908 <_GLOBAL__sub_I__ZN4BodyD2Ev>:
 8016908:	b580      	push	{r7, lr}
 801690a:	af00      	add	r7, sp, #0
 801690c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016910:	2001      	movs	r0, #1
 8016912:	f7ff fe1d 	bl	8016550 <_Z41__static_initialization_and_destruction_0ii>
 8016916:	bd80      	pop	{r7, pc}

08016918 <_GLOBAL__sub_D__ZN4BodyD2Ev>:
 8016918:	b580      	push	{r7, lr}
 801691a:	af00      	add	r7, sp, #0
 801691c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016920:	2000      	movs	r0, #0
 8016922:	f7ff fe15 	bl	8016550 <_Z41__static_initialization_and_destruction_0ii>
 8016926:	bd80      	pop	{r7, pc}

08016928 <_ZN6SymbolC1Ei>:
#include "Symbol.h"
#include "Transmitter.h"

Symbol::Symbol(int value)
 8016928:	b580      	push	{r7, lr}
 801692a:	b082      	sub	sp, #8
 801692c:	af00      	add	r7, sp, #0
 801692e:	6078      	str	r0, [r7, #4]
 8016930:	6039      	str	r1, [r7, #0]
 8016932:	687b      	ldr	r3, [r7, #4]
 8016934:	3304      	adds	r3, #4
 8016936:	4618      	mov	r0, r3
 8016938:	f7f5 ff76 	bl	800c828 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_INT;
 801693c:	687b      	ldr	r3, [r7, #4]
 801693e:	2200      	movs	r2, #0
 8016940:	701a      	strb	r2, [r3, #0]
	this->value = value;
 8016942:	687b      	ldr	r3, [r7, #4]
 8016944:	3304      	adds	r3, #4
 8016946:	463a      	mov	r2, r7
 8016948:	4611      	mov	r1, r2
 801694a:	4618      	mov	r0, r3
 801694c:	f001 f86d 	bl	8017a2a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 8016950:	687b      	ldr	r3, [r7, #4]
 8016952:	4618      	mov	r0, r3
 8016954:	3708      	adds	r7, #8
 8016956:	46bd      	mov	sp, r7
 8016958:	bd80      	pop	{r7, pc}

0801695a <_ZN6SymbolC1Ef>:

Symbol::Symbol(float value)
 801695a:	b580      	push	{r7, lr}
 801695c:	b082      	sub	sp, #8
 801695e:	af00      	add	r7, sp, #0
 8016960:	6078      	str	r0, [r7, #4]
 8016962:	ed87 0a00 	vstr	s0, [r7]
 8016966:	687b      	ldr	r3, [r7, #4]
 8016968:	3304      	adds	r3, #4
 801696a:	4618      	mov	r0, r3
 801696c:	f7f5 ff5c 	bl	800c828 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_FLOAT;
 8016970:	687b      	ldr	r3, [r7, #4]
 8016972:	2201      	movs	r2, #1
 8016974:	701a      	strb	r2, [r3, #0]
	this->value = value;
 8016976:	687b      	ldr	r3, [r7, #4]
 8016978:	3304      	adds	r3, #4
 801697a:	463a      	mov	r2, r7
 801697c:	4611      	mov	r1, r2
 801697e:	4618      	mov	r0, r3
 8016980:	f001 f87d 	bl	8017a7e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 8016984:	687b      	ldr	r3, [r7, #4]
 8016986:	4618      	mov	r0, r3
 8016988:	3708      	adds	r7, #8
 801698a:	46bd      	mov	sp, r7
 801698c:	bd80      	pop	{r7, pc}

0801698e <_ZN6SymbolC1Eb>:

Symbol::Symbol(bool value)
 801698e:	b580      	push	{r7, lr}
 8016990:	b082      	sub	sp, #8
 8016992:	af00      	add	r7, sp, #0
 8016994:	6078      	str	r0, [r7, #4]
 8016996:	460b      	mov	r3, r1
 8016998:	70fb      	strb	r3, [r7, #3]
 801699a:	687b      	ldr	r3, [r7, #4]
 801699c:	3304      	adds	r3, #4
 801699e:	4618      	mov	r0, r3
 80169a0:	f7f5 ff42 	bl	800c828 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_BOOL;
 80169a4:	687b      	ldr	r3, [r7, #4]
 80169a6:	2202      	movs	r2, #2
 80169a8:	701a      	strb	r2, [r3, #0]
	this->value = value;
 80169aa:	687b      	ldr	r3, [r7, #4]
 80169ac:	3304      	adds	r3, #4
 80169ae:	1cfa      	adds	r2, r7, #3
 80169b0:	4611      	mov	r1, r2
 80169b2:	4618      	mov	r0, r3
 80169b4:	f001 f88d 	bl	8017ad2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 80169b8:	687b      	ldr	r3, [r7, #4]
 80169ba:	4618      	mov	r0, r3
 80169bc:	3708      	adds	r7, #8
 80169be:	46bd      	mov	sp, r7
 80169c0:	bd80      	pop	{r7, pc}

080169c2 <_ZN6SymbolC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol::Symbol(std::string value)
 80169c2:	b580      	push	{r7, lr}
 80169c4:	b082      	sub	sp, #8
 80169c6:	af00      	add	r7, sp, #0
 80169c8:	6078      	str	r0, [r7, #4]
 80169ca:	6039      	str	r1, [r7, #0]
 80169cc:	687b      	ldr	r3, [r7, #4]
 80169ce:	3304      	adds	r3, #4
 80169d0:	4618      	mov	r0, r3
 80169d2:	f7f5 ff29 	bl	800c828 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_STRING;
 80169d6:	687b      	ldr	r3, [r7, #4]
 80169d8:	2203      	movs	r2, #3
 80169da:	701a      	strb	r2, [r3, #0]
	this->value = value;
 80169dc:	687b      	ldr	r3, [r7, #4]
 80169de:	3304      	adds	r3, #4
 80169e0:	6839      	ldr	r1, [r7, #0]
 80169e2:	4618      	mov	r0, r3
 80169e4:	f001 f8a0 	bl	8017b28 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 80169e8:	687b      	ldr	r3, [r7, #4]
 80169ea:	4618      	mov	r0, r3
 80169ec:	3708      	adds	r7, #8
 80169ee:	46bd      	mov	sp, r7
 80169f0:	bd80      	pop	{r7, pc}

080169f2 <_ZN6SymbolC1EPKc>:

Symbol::Symbol(const char *value)
 80169f2:	b580      	push	{r7, lr}
 80169f4:	b08a      	sub	sp, #40	; 0x28
 80169f6:	af00      	add	r7, sp, #0
 80169f8:	6078      	str	r0, [r7, #4]
 80169fa:	6039      	str	r1, [r7, #0]
 80169fc:	687b      	ldr	r3, [r7, #4]
 80169fe:	3304      	adds	r3, #4
 8016a00:	4618      	mov	r0, r3
 8016a02:	f7f5 ff11 	bl	800c828 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_STRING;
 8016a06:	687b      	ldr	r3, [r7, #4]
 8016a08:	2203      	movs	r2, #3
 8016a0a:	701a      	strb	r2, [r3, #0]
	this->value = std::string(value);
 8016a0c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016a10:	4618      	mov	r0, r3
 8016a12:	f00b fd55 	bl	80224c0 <_ZNSaIcEC1Ev>
 8016a16:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8016a1a:	f107 030c 	add.w	r3, r7, #12
 8016a1e:	6839      	ldr	r1, [r7, #0]
 8016a20:	4618      	mov	r0, r3
 8016a22:	f7eb f87e 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016a26:	687b      	ldr	r3, [r7, #4]
 8016a28:	3304      	adds	r3, #4
 8016a2a:	f107 020c 	add.w	r2, r7, #12
 8016a2e:	4611      	mov	r1, r2
 8016a30:	4618      	mov	r0, r3
 8016a32:	f001 f8b2 	bl	8017b9a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8016a36:	f107 030c 	add.w	r3, r7, #12
 8016a3a:	4618      	mov	r0, r3
 8016a3c:	f00b ffd1 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016a40:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016a44:	4618      	mov	r0, r3
 8016a46:	f00b fd3c 	bl	80224c2 <_ZNSaIcED1Ev>
}
 8016a4a:	687b      	ldr	r3, [r7, #4]
 8016a4c:	4618      	mov	r0, r3
 8016a4e:	3728      	adds	r7, #40	; 0x28
 8016a50:	46bd      	mov	sp, r7
 8016a52:	bd80      	pop	{r7, pc}

08016a54 <_ZN6SymbolC1ESt16initializer_listIS_E>:

Symbol::Symbol(std::initializer_list<Symbol> value)
 8016a54:	b580      	push	{r7, lr}
 8016a56:	b088      	sub	sp, #32
 8016a58:	af00      	add	r7, sp, #0
 8016a5a:	60f8      	str	r0, [r7, #12]
 8016a5c:	1d3b      	adds	r3, r7, #4
 8016a5e:	e883 0006 	stmia.w	r3, {r1, r2}
 8016a62:	68fb      	ldr	r3, [r7, #12]
 8016a64:	3304      	adds	r3, #4
 8016a66:	4618      	mov	r0, r3
 8016a68:	f7f5 fede 	bl	800c828 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_CONTAINER;
 8016a6c:	68fb      	ldr	r3, [r7, #12]
 8016a6e:	2204      	movs	r2, #4
 8016a70:	701a      	strb	r2, [r3, #0]
	this->value = std::vector<Symbol>(value);
 8016a72:	f107 031c 	add.w	r3, r7, #28
 8016a76:	4618      	mov	r0, r3
 8016a78:	f001 f8bb 	bl	8017bf2 <_ZNSaI6SymbolEC1Ev>
 8016a7c:	f107 031c 	add.w	r3, r7, #28
 8016a80:	f107 0010 	add.w	r0, r7, #16
 8016a84:	1d3a      	adds	r2, r7, #4
 8016a86:	ca06      	ldmia	r2, {r1, r2}
 8016a88:	f001 f8bf 	bl	8017c0a <_ZNSt6vectorI6SymbolSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
 8016a8c:	68fb      	ldr	r3, [r7, #12]
 8016a8e:	3304      	adds	r3, #4
 8016a90:	f107 0210 	add.w	r2, r7, #16
 8016a94:	4611      	mov	r1, r2
 8016a96:	4618      	mov	r0, r3
 8016a98:	f001 f8d8 	bl	8017c4c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8016a9c:	f107 0310 	add.w	r3, r7, #16
 8016aa0:	4618      	mov	r0, r3
 8016aa2:	f7f0 fedf 	bl	8007864 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
 8016aa6:	f107 031c 	add.w	r3, r7, #28
 8016aaa:	4618      	mov	r0, r3
 8016aac:	f7f1 fd2e 	bl	800850c <_ZNSaI6SymbolED1Ev>
}
 8016ab0:	68fb      	ldr	r3, [r7, #12]
 8016ab2:	4618      	mov	r0, r3
 8016ab4:	3720      	adds	r7, #32
 8016ab6:	46bd      	mov	sp, r7
 8016ab8:	bd80      	pop	{r7, pc}
	...

08016abc <_ZN6SymbolixES_>:

Symbol& Symbol::operator[](Symbol idx)
{
 8016abc:	b580      	push	{r7, lr}
 8016abe:	b098      	sub	sp, #96	; 0x60
 8016ac0:	af00      	add	r7, sp, #0
 8016ac2:	6078      	str	r0, [r7, #4]
 8016ac4:	6039      	str	r1, [r7, #0]
	if (idx.type != SYMBOL_INT)
 8016ac6:	683b      	ldr	r3, [r7, #0]
 8016ac8:	781b      	ldrb	r3, [r3, #0]
 8016aca:	2b00      	cmp	r3, #0
 8016acc:	d01b      	beq.n	8016b06 <_ZN6SymbolixES_+0x4a>
	{
		Transmitter::report_error("index must be an integer");
 8016ace:	f107 0320 	add.w	r3, r7, #32
 8016ad2:	4618      	mov	r0, r3
 8016ad4:	f00b fcf4 	bl	80224c0 <_ZNSaIcEC1Ev>
 8016ad8:	f107 0220 	add.w	r2, r7, #32
 8016adc:	f107 0308 	add.w	r3, r7, #8
 8016ae0:	493a      	ldr	r1, [pc, #232]	; (8016bcc <_ZN6SymbolixES_+0x110>)
 8016ae2:	4618      	mov	r0, r3
 8016ae4:	f7eb f81d 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016ae8:	f107 0308 	add.w	r3, r7, #8
 8016aec:	4618      	mov	r0, r3
 8016aee:	f001 fdaf 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016af2:	f107 0308 	add.w	r3, r7, #8
 8016af6:	4618      	mov	r0, r3
 8016af8:	f00b ff73 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016afc:	f107 0320 	add.w	r3, r7, #32
 8016b00:	4618      	mov	r0, r3
 8016b02:	f00b fcde 	bl	80224c2 <_ZNSaIcED1Ev>
	}
	int i = std::get<int>(idx.value);
 8016b06:	683b      	ldr	r3, [r7, #0]
 8016b08:	3304      	adds	r3, #4
 8016b0a:	4618      	mov	r0, r3
 8016b0c:	f7ea fef4 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016b10:	4603      	mov	r3, r0
 8016b12:	681b      	ldr	r3, [r3, #0]
 8016b14:	65fb      	str	r3, [r7, #92]	; 0x5c

	if (i < 0)
 8016b16:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016b18:	2b00      	cmp	r3, #0
 8016b1a:	da1b      	bge.n	8016b54 <_ZN6SymbolixES_+0x98>
	{
		Transmitter::report_error("index must be positive");
 8016b1c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016b20:	4618      	mov	r0, r3
 8016b22:	f00b fccd 	bl	80224c0 <_ZNSaIcEC1Ev>
 8016b26:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8016b2a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016b2e:	4928      	ldr	r1, [pc, #160]	; (8016bd0 <_ZN6SymbolixES_+0x114>)
 8016b30:	4618      	mov	r0, r3
 8016b32:	f7ea fff6 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016b36:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016b3a:	4618      	mov	r0, r3
 8016b3c:	f001 fd88 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016b40:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016b44:	4618      	mov	r0, r3
 8016b46:	f00b ff4c 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016b4a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016b4e:	4618      	mov	r0, r3
 8016b50:	f00b fcb7 	bl	80224c2 <_ZNSaIcED1Ev>
	}

	if (type == SYMBOL_CONTAINER)
 8016b54:	687b      	ldr	r3, [r7, #4]
 8016b56:	781b      	ldrb	r3, [r3, #0]
 8016b58:	2b04      	cmp	r3, #4
 8016b5a:	d10c      	bne.n	8016b76 <_ZN6SymbolixES_+0xba>
	{
		return std::get<std::vector<Symbol>>(value)[i];
 8016b5c:	687b      	ldr	r3, [r7, #4]
 8016b5e:	3304      	adds	r3, #4
 8016b60:	4618      	mov	r0, r3
 8016b62:	f001 f89f 	bl	8017ca4 <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>
 8016b66:	4602      	mov	r2, r0
 8016b68:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016b6a:	4619      	mov	r1, r3
 8016b6c:	4610      	mov	r0, r2
 8016b6e:	f001 f8a5 	bl	8017cbc <_ZNSt6vectorI6SymbolSaIS0_EEixEj>
 8016b72:	4603      	mov	r3, r0
 8016b74:	e026      	b.n	8016bc4 <_ZN6SymbolixES_+0x108>
	}
	else
	{
		Transmitter::report_error(
 8016b76:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8016b7a:	4618      	mov	r0, r3
 8016b7c:	f00b fca0 	bl	80224c0 <_ZNSaIcEC1Ev>
 8016b80:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8016b84:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016b88:	4912      	ldr	r1, [pc, #72]	; (8016bd4 <_ZN6SymbolixES_+0x118>)
 8016b8a:	4618      	mov	r0, r3
 8016b8c:	f7ea ffc9 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016b90:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016b94:	4618      	mov	r0, r3
 8016b96:	f001 fd5b 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
				"cannot perform [] operation on non container");
 8016b9a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016b9e:	4618      	mov	r0, r3
 8016ba0:	f00b ff1f 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016ba4:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8016ba8:	4618      	mov	r0, r3
 8016baa:	f00b fc8a 	bl	80224c2 <_ZNSaIcED1Ev>
		return std::get<std::vector<Symbol>>(value)[0];
 8016bae:	687b      	ldr	r3, [r7, #4]
 8016bb0:	3304      	adds	r3, #4
 8016bb2:	4618      	mov	r0, r3
 8016bb4:	f001 f876 	bl	8017ca4 <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>
 8016bb8:	4603      	mov	r3, r0
 8016bba:	2100      	movs	r1, #0
 8016bbc:	4618      	mov	r0, r3
 8016bbe:	f001 f87d 	bl	8017cbc <_ZNSt6vectorI6SymbolSaIS0_EEixEj>
 8016bc2:	4603      	mov	r3, r0
	}
}
 8016bc4:	4618      	mov	r0, r3
 8016bc6:	3760      	adds	r7, #96	; 0x60
 8016bc8:	46bd      	mov	sp, r7
 8016bca:	bd80      	pop	{r7, pc}
 8016bcc:	08027880 	.word	0x08027880
 8016bd0:	0802789c 	.word	0x0802789c
 8016bd4:	080278b4 	.word	0x080278b4

08016bd8 <_ZN6SymbolplES_>:

Symbol Symbol::operator+(Symbol other)
{
 8016bd8:	b590      	push	{r4, r7, lr}
 8016bda:	ed2d 8b02 	vpush	{d8}
 8016bde:	b08d      	sub	sp, #52	; 0x34
 8016be0:	af00      	add	r7, sp, #0
 8016be2:	60f8      	str	r0, [r7, #12]
 8016be4:	60b9      	str	r1, [r7, #8]
 8016be6:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8016be8:	6879      	ldr	r1, [r7, #4]
 8016bea:	68b8      	ldr	r0, [r7, #8]
 8016bec:	f000 fe92 	bl	8017914 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8016bf0:	68bb      	ldr	r3, [r7, #8]
 8016bf2:	781b      	ldrb	r3, [r3, #0]
 8016bf4:	2b03      	cmp	r3, #3
 8016bf6:	d85a      	bhi.n	8016cae <_ZN6SymbolplES_+0xd6>
 8016bf8:	a201      	add	r2, pc, #4	; (adr r2, 8016c00 <_ZN6SymbolplES_+0x28>)
 8016bfa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016bfe:	bf00      	nop
 8016c00:	08016c11 	.word	0x08016c11
 8016c04:	08016c33 	.word	0x08016c33
 8016c08:	08016c5d 	.word	0x08016c5d
 8016c0c:	08016c8d 	.word	0x08016c8d
	{
	case SYMBOL_INT:
		std::get<int>(this->value) += std::get<int>(other.value);
 8016c10:	687b      	ldr	r3, [r7, #4]
 8016c12:	3304      	adds	r3, #4
 8016c14:	4618      	mov	r0, r3
 8016c16:	f7ea fe6f 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016c1a:	4603      	mov	r3, r0
 8016c1c:	681c      	ldr	r4, [r3, #0]
 8016c1e:	68bb      	ldr	r3, [r7, #8]
 8016c20:	3304      	adds	r3, #4
 8016c22:	4618      	mov	r0, r3
 8016c24:	f7ea fe68 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016c28:	4603      	mov	r3, r0
 8016c2a:	681a      	ldr	r2, [r3, #0]
 8016c2c:	4422      	add	r2, r4
 8016c2e:	601a      	str	r2, [r3, #0]
		break;
 8016c30:	e05a      	b.n	8016ce8 <_ZN6SymbolplES_+0x110>
	case SYMBOL_FLOAT:
		std::get<float>(this->value) += std::get<float>(other.value);
 8016c32:	687b      	ldr	r3, [r7, #4]
 8016c34:	3304      	adds	r3, #4
 8016c36:	4618      	mov	r0, r3
 8016c38:	f000 fdca 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016c3c:	4603      	mov	r3, r0
 8016c3e:	ed93 8a00 	vldr	s16, [r3]
 8016c42:	68bb      	ldr	r3, [r7, #8]
 8016c44:	3304      	adds	r3, #4
 8016c46:	4618      	mov	r0, r3
 8016c48:	f000 fdc2 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016c4c:	4603      	mov	r3, r0
 8016c4e:	edd3 7a00 	vldr	s15, [r3]
 8016c52:	ee78 7a27 	vadd.f32	s15, s16, s15
 8016c56:	edc3 7a00 	vstr	s15, [r3]
		break;
 8016c5a:	e045      	b.n	8016ce8 <_ZN6SymbolplES_+0x110>
	case SYMBOL_BOOL:
		std::get<bool>(this->value) += std::get<bool>(other.value);
 8016c5c:	687b      	ldr	r3, [r7, #4]
 8016c5e:	3304      	adds	r3, #4
 8016c60:	4618      	mov	r0, r3
 8016c62:	f7ea fc47 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016c66:	4603      	mov	r3, r0
 8016c68:	781c      	ldrb	r4, [r3, #0]
 8016c6a:	68bb      	ldr	r3, [r7, #8]
 8016c6c:	3304      	adds	r3, #4
 8016c6e:	4618      	mov	r0, r3
 8016c70:	f7ea fc40 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016c74:	4603      	mov	r3, r0
 8016c76:	781a      	ldrb	r2, [r3, #0]
 8016c78:	4611      	mov	r1, r2
 8016c7a:	4622      	mov	r2, r4
 8016c7c:	440a      	add	r2, r1
 8016c7e:	2a00      	cmp	r2, #0
 8016c80:	bf14      	ite	ne
 8016c82:	2201      	movne	r2, #1
 8016c84:	2200      	moveq	r2, #0
 8016c86:	b2d2      	uxtb	r2, r2
 8016c88:	701a      	strb	r2, [r3, #0]
		break;
 8016c8a:	e02d      	b.n	8016ce8 <_ZN6SymbolplES_+0x110>
	case SYMBOL_STRING:
		std::get<std::string>(this->value) += std::get<std::string>(
				other.value);
 8016c8c:	687b      	ldr	r3, [r7, #4]
 8016c8e:	3304      	adds	r3, #4
 8016c90:	4618      	mov	r0, r3
 8016c92:	f001 f823 	bl	8017cdc <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016c96:	4604      	mov	r4, r0
		std::get<std::string>(this->value) += std::get<std::string>(
 8016c98:	68bb      	ldr	r3, [r7, #8]
 8016c9a:	3304      	adds	r3, #4
 8016c9c:	4618      	mov	r0, r3
 8016c9e:	f001 f81d 	bl	8017cdc <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016ca2:	4603      	mov	r3, r0
				other.value);
 8016ca4:	4621      	mov	r1, r4
 8016ca6:	4618      	mov	r0, r3
 8016ca8:	f00c f810 	bl	8022ccc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
		break;
 8016cac:	e01c      	b.n	8016ce8 <_ZN6SymbolplES_+0x110>
	default:
		Transmitter::report_error("invalid type for addidion");
 8016cae:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016cb2:	4618      	mov	r0, r3
 8016cb4:	f00b fc04 	bl	80224c0 <_ZNSaIcEC1Ev>
 8016cb8:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8016cbc:	f107 0314 	add.w	r3, r7, #20
 8016cc0:	490e      	ldr	r1, [pc, #56]	; (8016cfc <_ZN6SymbolplES_+0x124>)
 8016cc2:	4618      	mov	r0, r3
 8016cc4:	f7ea ff2d 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016cc8:	f107 0314 	add.w	r3, r7, #20
 8016ccc:	4618      	mov	r0, r3
 8016cce:	f001 fcbf 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016cd2:	f107 0314 	add.w	r3, r7, #20
 8016cd6:	4618      	mov	r0, r3
 8016cd8:	f00b fe83 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016cdc:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016ce0:	4618      	mov	r0, r3
 8016ce2:	f00b fbee 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 8016ce6:	bf00      	nop
	}

	return *this;
 8016ce8:	68b9      	ldr	r1, [r7, #8]
 8016cea:	68f8      	ldr	r0, [r7, #12]
 8016cec:	f7f1 fbc8 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 8016cf0:	68f8      	ldr	r0, [r7, #12]
 8016cf2:	3734      	adds	r7, #52	; 0x34
 8016cf4:	46bd      	mov	sp, r7
 8016cf6:	ecbd 8b02 	vpop	{d8}
 8016cfa:	bd90      	pop	{r4, r7, pc}
 8016cfc:	080278e4 	.word	0x080278e4

08016d00 <_ZN6SymbolmiES_>:

Symbol Symbol::operator-(Symbol other)
{
 8016d00:	b590      	push	{r4, r7, lr}
 8016d02:	ed2d 8b02 	vpush	{d8}
 8016d06:	b08d      	sub	sp, #52	; 0x34
 8016d08:	af00      	add	r7, sp, #0
 8016d0a:	60f8      	str	r0, [r7, #12]
 8016d0c:	60b9      	str	r1, [r7, #8]
 8016d0e:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8016d10:	6879      	ldr	r1, [r7, #4]
 8016d12:	68b8      	ldr	r0, [r7, #8]
 8016d14:	f000 fdfe 	bl	8017914 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8016d18:	68bb      	ldr	r3, [r7, #8]
 8016d1a:	781b      	ldrb	r3, [r3, #0]
 8016d1c:	2b00      	cmp	r3, #0
 8016d1e:	d002      	beq.n	8016d26 <_ZN6SymbolmiES_+0x26>
 8016d20:	2b01      	cmp	r3, #1
 8016d22:	d011      	beq.n	8016d48 <_ZN6SymbolmiES_+0x48>
 8016d24:	e025      	b.n	8016d72 <_ZN6SymbolmiES_+0x72>
	{
	case SYMBOL_INT:
		std::get<int>(this->value) -= std::get<int>(other.value);
 8016d26:	687b      	ldr	r3, [r7, #4]
 8016d28:	3304      	adds	r3, #4
 8016d2a:	4618      	mov	r0, r3
 8016d2c:	f7ea fde4 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016d30:	4603      	mov	r3, r0
 8016d32:	681c      	ldr	r4, [r3, #0]
 8016d34:	68bb      	ldr	r3, [r7, #8]
 8016d36:	3304      	adds	r3, #4
 8016d38:	4618      	mov	r0, r3
 8016d3a:	f7ea fddd 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016d3e:	4603      	mov	r3, r0
 8016d40:	681a      	ldr	r2, [r3, #0]
 8016d42:	1b12      	subs	r2, r2, r4
 8016d44:	601a      	str	r2, [r3, #0]
		break;
 8016d46:	e031      	b.n	8016dac <_ZN6SymbolmiES_+0xac>
	case SYMBOL_FLOAT:
		std::get<float>(this->value) -= std::get<float>(other.value);
 8016d48:	687b      	ldr	r3, [r7, #4]
 8016d4a:	3304      	adds	r3, #4
 8016d4c:	4618      	mov	r0, r3
 8016d4e:	f000 fd3f 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016d52:	4603      	mov	r3, r0
 8016d54:	ed93 8a00 	vldr	s16, [r3]
 8016d58:	68bb      	ldr	r3, [r7, #8]
 8016d5a:	3304      	adds	r3, #4
 8016d5c:	4618      	mov	r0, r3
 8016d5e:	f000 fd37 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016d62:	4603      	mov	r3, r0
 8016d64:	edd3 7a00 	vldr	s15, [r3]
 8016d68:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8016d6c:	edc3 7a00 	vstr	s15, [r3]
		break;
 8016d70:	e01c      	b.n	8016dac <_ZN6SymbolmiES_+0xac>
	default:
		Transmitter::report_error("invalid type for substraction");
 8016d72:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016d76:	4618      	mov	r0, r3
 8016d78:	f00b fba2 	bl	80224c0 <_ZNSaIcEC1Ev>
 8016d7c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8016d80:	f107 0314 	add.w	r3, r7, #20
 8016d84:	490e      	ldr	r1, [pc, #56]	; (8016dc0 <_ZN6SymbolmiES_+0xc0>)
 8016d86:	4618      	mov	r0, r3
 8016d88:	f7ea fecb 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016d8c:	f107 0314 	add.w	r3, r7, #20
 8016d90:	4618      	mov	r0, r3
 8016d92:	f001 fc5d 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016d96:	f107 0314 	add.w	r3, r7, #20
 8016d9a:	4618      	mov	r0, r3
 8016d9c:	f00b fe21 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016da0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016da4:	4618      	mov	r0, r3
 8016da6:	f00b fb8c 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 8016daa:	bf00      	nop
	}

	return *this;
 8016dac:	68b9      	ldr	r1, [r7, #8]
 8016dae:	68f8      	ldr	r0, [r7, #12]
 8016db0:	f7f1 fb66 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 8016db4:	68f8      	ldr	r0, [r7, #12]
 8016db6:	3734      	adds	r7, #52	; 0x34
 8016db8:	46bd      	mov	sp, r7
 8016dba:	ecbd 8b02 	vpop	{d8}
 8016dbe:	bd90      	pop	{r4, r7, pc}
 8016dc0:	08027900 	.word	0x08027900

08016dc4 <_ZN6SymbolaaES_>:

Symbol Symbol::operator&&(Symbol other)
{
 8016dc4:	b590      	push	{r4, r7, lr}
 8016dc6:	b08d      	sub	sp, #52	; 0x34
 8016dc8:	af00      	add	r7, sp, #0
 8016dca:	60f8      	str	r0, [r7, #12]
 8016dcc:	60b9      	str	r1, [r7, #8]
 8016dce:	607a      	str	r2, [r7, #4]
	if (type != SYMBOL_BOOL || other.type != SYMBOL_BOOL)
 8016dd0:	68bb      	ldr	r3, [r7, #8]
 8016dd2:	781b      	ldrb	r3, [r3, #0]
 8016dd4:	2b02      	cmp	r3, #2
 8016dd6:	d103      	bne.n	8016de0 <_ZN6SymbolaaES_+0x1c>
 8016dd8:	687b      	ldr	r3, [r7, #4]
 8016dda:	781b      	ldrb	r3, [r3, #0]
 8016ddc:	2b02      	cmp	r3, #2
 8016dde:	d01b      	beq.n	8016e18 <_ZN6SymbolaaES_+0x54>
	{
		Transmitter::report_error("operator and needs boolean expressions");
 8016de0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016de4:	4618      	mov	r0, r3
 8016de6:	f00b fb6b 	bl	80224c0 <_ZNSaIcEC1Ev>
 8016dea:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8016dee:	f107 0314 	add.w	r3, r7, #20
 8016df2:	491c      	ldr	r1, [pc, #112]	; (8016e64 <_ZN6SymbolaaES_+0xa0>)
 8016df4:	4618      	mov	r0, r3
 8016df6:	f7ea fe94 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016dfa:	f107 0314 	add.w	r3, r7, #20
 8016dfe:	4618      	mov	r0, r3
 8016e00:	f001 fc26 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016e04:	f107 0314 	add.w	r3, r7, #20
 8016e08:	4618      	mov	r0, r3
 8016e0a:	f00b fdea 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016e0e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016e12:	4618      	mov	r0, r3
 8016e14:	f00b fb55 	bl	80224c2 <_ZNSaIcED1Ev>
	}

	std::get<bool>(this->value) = std::get<bool>(this->value)
 8016e18:	68bb      	ldr	r3, [r7, #8]
 8016e1a:	3304      	adds	r3, #4
 8016e1c:	4618      	mov	r0, r3
 8016e1e:	f7ea fb69 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016e22:	4603      	mov	r3, r0
 8016e24:	781b      	ldrb	r3, [r3, #0]
			&& std::get<bool>(other.value);
 8016e26:	2b00      	cmp	r3, #0
 8016e28:	d00a      	beq.n	8016e40 <_ZN6SymbolaaES_+0x7c>
 8016e2a:	687b      	ldr	r3, [r7, #4]
 8016e2c:	3304      	adds	r3, #4
 8016e2e:	4618      	mov	r0, r3
 8016e30:	f7ea fb60 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016e34:	4603      	mov	r3, r0
 8016e36:	781b      	ldrb	r3, [r3, #0]
 8016e38:	2b00      	cmp	r3, #0
 8016e3a:	d001      	beq.n	8016e40 <_ZN6SymbolaaES_+0x7c>
 8016e3c:	2401      	movs	r4, #1
 8016e3e:	e000      	b.n	8016e42 <_ZN6SymbolaaES_+0x7e>
 8016e40:	2400      	movs	r4, #0
	std::get<bool>(this->value) = std::get<bool>(this->value)
 8016e42:	68bb      	ldr	r3, [r7, #8]
 8016e44:	3304      	adds	r3, #4
 8016e46:	4618      	mov	r0, r3
 8016e48:	f7ea fb54 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016e4c:	4603      	mov	r3, r0
 8016e4e:	4622      	mov	r2, r4
 8016e50:	701a      	strb	r2, [r3, #0]

	return *this;
 8016e52:	68b9      	ldr	r1, [r7, #8]
 8016e54:	68f8      	ldr	r0, [r7, #12]
 8016e56:	f7f1 fb13 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 8016e5a:	68f8      	ldr	r0, [r7, #12]
 8016e5c:	3734      	adds	r7, #52	; 0x34
 8016e5e:	46bd      	mov	sp, r7
 8016e60:	bd90      	pop	{r4, r7, pc}
 8016e62:	bf00      	nop
 8016e64:	08027920 	.word	0x08027920

08016e68 <_ZN6SymbolooES_>:

Symbol Symbol::operator||(Symbol other)
{
 8016e68:	b590      	push	{r4, r7, lr}
 8016e6a:	b08d      	sub	sp, #52	; 0x34
 8016e6c:	af00      	add	r7, sp, #0
 8016e6e:	60f8      	str	r0, [r7, #12]
 8016e70:	60b9      	str	r1, [r7, #8]
 8016e72:	607a      	str	r2, [r7, #4]
	if (type != SYMBOL_BOOL || other.type != SYMBOL_BOOL)
 8016e74:	68bb      	ldr	r3, [r7, #8]
 8016e76:	781b      	ldrb	r3, [r3, #0]
 8016e78:	2b02      	cmp	r3, #2
 8016e7a:	d103      	bne.n	8016e84 <_ZN6SymbolooES_+0x1c>
 8016e7c:	687b      	ldr	r3, [r7, #4]
 8016e7e:	781b      	ldrb	r3, [r3, #0]
 8016e80:	2b02      	cmp	r3, #2
 8016e82:	d01b      	beq.n	8016ebc <_ZN6SymbolooES_+0x54>
	{
		Transmitter::report_error("operator or needs boolean expressions");
 8016e84:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016e88:	4618      	mov	r0, r3
 8016e8a:	f00b fb19 	bl	80224c0 <_ZNSaIcEC1Ev>
 8016e8e:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8016e92:	f107 0314 	add.w	r3, r7, #20
 8016e96:	491c      	ldr	r1, [pc, #112]	; (8016f08 <_ZN6SymbolooES_+0xa0>)
 8016e98:	4618      	mov	r0, r3
 8016e9a:	f7ea fe42 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016e9e:	f107 0314 	add.w	r3, r7, #20
 8016ea2:	4618      	mov	r0, r3
 8016ea4:	f001 fbd4 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016ea8:	f107 0314 	add.w	r3, r7, #20
 8016eac:	4618      	mov	r0, r3
 8016eae:	f00b fd98 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016eb2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016eb6:	4618      	mov	r0, r3
 8016eb8:	f00b fb03 	bl	80224c2 <_ZNSaIcED1Ev>
	}

	std::get<bool>(this->value) = std::get<bool>(this->value)
 8016ebc:	68bb      	ldr	r3, [r7, #8]
 8016ebe:	3304      	adds	r3, #4
 8016ec0:	4618      	mov	r0, r3
 8016ec2:	f7ea fb17 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016ec6:	4603      	mov	r3, r0
 8016ec8:	781b      	ldrb	r3, [r3, #0]
			|| std::get<bool>(other.value);
 8016eca:	2b00      	cmp	r3, #0
 8016ecc:	d108      	bne.n	8016ee0 <_ZN6SymbolooES_+0x78>
 8016ece:	687b      	ldr	r3, [r7, #4]
 8016ed0:	3304      	adds	r3, #4
 8016ed2:	4618      	mov	r0, r3
 8016ed4:	f7ea fb0e 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016ed8:	4603      	mov	r3, r0
 8016eda:	781b      	ldrb	r3, [r3, #0]
 8016edc:	2b00      	cmp	r3, #0
 8016ede:	d001      	beq.n	8016ee4 <_ZN6SymbolooES_+0x7c>
 8016ee0:	2401      	movs	r4, #1
 8016ee2:	e000      	b.n	8016ee6 <_ZN6SymbolooES_+0x7e>
 8016ee4:	2400      	movs	r4, #0
	std::get<bool>(this->value) = std::get<bool>(this->value)
 8016ee6:	68bb      	ldr	r3, [r7, #8]
 8016ee8:	3304      	adds	r3, #4
 8016eea:	4618      	mov	r0, r3
 8016eec:	f7ea fb02 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016ef0:	4603      	mov	r3, r0
 8016ef2:	4622      	mov	r2, r4
 8016ef4:	701a      	strb	r2, [r3, #0]

	return *this;
 8016ef6:	68b9      	ldr	r1, [r7, #8]
 8016ef8:	68f8      	ldr	r0, [r7, #12]
 8016efa:	f7f1 fac1 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 8016efe:	68f8      	ldr	r0, [r7, #12]
 8016f00:	3734      	adds	r7, #52	; 0x34
 8016f02:	46bd      	mov	sp, r7
 8016f04:	bd90      	pop	{r4, r7, pc}
 8016f06:	bf00      	nop
 8016f08:	08027948 	.word	0x08027948

08016f0c <_ZN6SymbolntEv>:

Symbol Symbol::operator!()
{
 8016f0c:	b590      	push	{r4, r7, lr}
 8016f0e:	b08b      	sub	sp, #44	; 0x2c
 8016f10:	af00      	add	r7, sp, #0
 8016f12:	6078      	str	r0, [r7, #4]
 8016f14:	6039      	str	r1, [r7, #0]
	if (type != SYMBOL_BOOL)
 8016f16:	683b      	ldr	r3, [r7, #0]
 8016f18:	781b      	ldrb	r3, [r3, #0]
 8016f1a:	2b02      	cmp	r3, #2
 8016f1c:	d01b      	beq.n	8016f56 <_ZN6SymbolntEv+0x4a>
	{
		Transmitter::report_error("operator ! needs boolean expressions");
 8016f1e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016f22:	4618      	mov	r0, r3
 8016f24:	f00b facc 	bl	80224c0 <_ZNSaIcEC1Ev>
 8016f28:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8016f2c:	f107 030c 	add.w	r3, r7, #12
 8016f30:	4916      	ldr	r1, [pc, #88]	; (8016f8c <_ZN6SymbolntEv+0x80>)
 8016f32:	4618      	mov	r0, r3
 8016f34:	f7ea fdf5 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016f38:	f107 030c 	add.w	r3, r7, #12
 8016f3c:	4618      	mov	r0, r3
 8016f3e:	f001 fb87 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016f42:	f107 030c 	add.w	r3, r7, #12
 8016f46:	4618      	mov	r0, r3
 8016f48:	f00b fd4b 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016f4c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016f50:	4618      	mov	r0, r3
 8016f52:	f00b fab6 	bl	80224c2 <_ZNSaIcED1Ev>
	}

	std::get<bool>(this->value) = !(std::get<bool>(this->value));
 8016f56:	683b      	ldr	r3, [r7, #0]
 8016f58:	3304      	adds	r3, #4
 8016f5a:	4618      	mov	r0, r3
 8016f5c:	f7ea faca 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016f60:	4603      	mov	r3, r0
 8016f62:	781b      	ldrb	r3, [r3, #0]
 8016f64:	f083 0301 	eor.w	r3, r3, #1
 8016f68:	b2dc      	uxtb	r4, r3
 8016f6a:	683b      	ldr	r3, [r7, #0]
 8016f6c:	3304      	adds	r3, #4
 8016f6e:	4618      	mov	r0, r3
 8016f70:	f7ea fac0 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016f74:	4603      	mov	r3, r0
 8016f76:	4622      	mov	r2, r4
 8016f78:	701a      	strb	r2, [r3, #0]

	return *this;
 8016f7a:	6839      	ldr	r1, [r7, #0]
 8016f7c:	6878      	ldr	r0, [r7, #4]
 8016f7e:	f7f1 fa7f 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 8016f82:	6878      	ldr	r0, [r7, #4]
 8016f84:	372c      	adds	r7, #44	; 0x2c
 8016f86:	46bd      	mov	sp, r7
 8016f88:	bd90      	pop	{r4, r7, pc}
 8016f8a:	bf00      	nop
 8016f8c:	08027970 	.word	0x08027970

08016f90 <_ZN6SymbolgtES_>:

Symbol Symbol::operator>(Symbol other)
{
 8016f90:	b590      	push	{r4, r7, lr}
 8016f92:	ed2d 8b02 	vpush	{d8}
 8016f96:	b08d      	sub	sp, #52	; 0x34
 8016f98:	af00      	add	r7, sp, #0
 8016f9a:	60f8      	str	r0, [r7, #12]
 8016f9c:	60b9      	str	r1, [r7, #8]
 8016f9e:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8016fa0:	6879      	ldr	r1, [r7, #4]
 8016fa2:	68b8      	ldr	r0, [r7, #8]
 8016fa4:	f000 fcb6 	bl	8017914 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8016fa8:	68bb      	ldr	r3, [r7, #8]
 8016faa:	781b      	ldrb	r3, [r3, #0]
 8016fac:	2b00      	cmp	r3, #0
 8016fae:	d002      	beq.n	8016fb6 <_ZN6SymbolgtES_+0x26>
 8016fb0:	2b01      	cmp	r3, #1
 8016fb2:	d01d      	beq.n	8016ff0 <_ZN6SymbolgtES_+0x60>
 8016fb4:	e03e      	b.n	8017034 <_ZN6SymbolgtES_+0xa4>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) > std::get<int>(other.value));
 8016fb6:	68bb      	ldr	r3, [r7, #8]
 8016fb8:	3304      	adds	r3, #4
 8016fba:	4618      	mov	r0, r3
 8016fbc:	f7ea fc9c 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016fc0:	4603      	mov	r3, r0
 8016fc2:	681c      	ldr	r4, [r3, #0]
 8016fc4:	687b      	ldr	r3, [r7, #4]
 8016fc6:	3304      	adds	r3, #4
 8016fc8:	4618      	mov	r0, r3
 8016fca:	f7ea fc95 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016fce:	4603      	mov	r3, r0
 8016fd0:	681b      	ldr	r3, [r3, #0]
 8016fd2:	429c      	cmp	r4, r3
 8016fd4:	bfcc      	ite	gt
 8016fd6:	2301      	movgt	r3, #1
 8016fd8:	2300      	movle	r3, #0
 8016fda:	b2db      	uxtb	r3, r3
 8016fdc:	74bb      	strb	r3, [r7, #18]
 8016fde:	68bb      	ldr	r3, [r7, #8]
 8016fe0:	3304      	adds	r3, #4
 8016fe2:	f107 0212 	add.w	r2, r7, #18
 8016fe6:	4611      	mov	r1, r2
 8016fe8:	4618      	mov	r0, r3
 8016fea:	f000 fe83 	bl	8017cf4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8016fee:	e03e      	b.n	801706e <_ZN6SymbolgtES_+0xde>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) > std::get<float>(other.value));
 8016ff0:	68bb      	ldr	r3, [r7, #8]
 8016ff2:	3304      	adds	r3, #4
 8016ff4:	4618      	mov	r0, r3
 8016ff6:	f000 fbeb 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016ffa:	4603      	mov	r3, r0
 8016ffc:	ed93 8a00 	vldr	s16, [r3]
 8017000:	687b      	ldr	r3, [r7, #4]
 8017002:	3304      	adds	r3, #4
 8017004:	4618      	mov	r0, r3
 8017006:	f000 fbe3 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801700a:	4603      	mov	r3, r0
 801700c:	edd3 7a00 	vldr	s15, [r3]
 8017010:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8017014:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017018:	bfcc      	ite	gt
 801701a:	2301      	movgt	r3, #1
 801701c:	2300      	movle	r3, #0
 801701e:	b2db      	uxtb	r3, r3
 8017020:	74fb      	strb	r3, [r7, #19]
 8017022:	68bb      	ldr	r3, [r7, #8]
 8017024:	3304      	adds	r3, #4
 8017026:	f107 0213 	add.w	r2, r7, #19
 801702a:	4611      	mov	r1, r2
 801702c:	4618      	mov	r0, r3
 801702e:	f000 fe61 	bl	8017cf4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8017032:	e01c      	b.n	801706e <_ZN6SymbolgtES_+0xde>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017034:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017038:	4618      	mov	r0, r3
 801703a:	f00b fa41 	bl	80224c0 <_ZNSaIcEC1Ev>
 801703e:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017042:	f107 0314 	add.w	r3, r7, #20
 8017046:	490f      	ldr	r1, [pc, #60]	; (8017084 <_ZN6SymbolgtES_+0xf4>)
 8017048:	4618      	mov	r0, r3
 801704a:	f7ea fd6a 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801704e:	f107 0314 	add.w	r3, r7, #20
 8017052:	4618      	mov	r0, r3
 8017054:	f001 fafc 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017058:	f107 0314 	add.w	r3, r7, #20
 801705c:	4618      	mov	r0, r3
 801705e:	f00b fcc0 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017062:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017066:	4618      	mov	r0, r3
 8017068:	f00b fa2b 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 801706c:	bf00      	nop
	}

	return *this;
 801706e:	68b9      	ldr	r1, [r7, #8]
 8017070:	68f8      	ldr	r0, [r7, #12]
 8017072:	f7f1 fa05 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 8017076:	68f8      	ldr	r0, [r7, #12]
 8017078:	3734      	adds	r7, #52	; 0x34
 801707a:	46bd      	mov	sp, r7
 801707c:	ecbd 8b02 	vpop	{d8}
 8017080:	bd90      	pop	{r4, r7, pc}
 8017082:	bf00      	nop
 8017084:	08027998 	.word	0x08027998

08017088 <_ZN6SymbolgeES_>:

Symbol Symbol::operator>=(Symbol other)
{
 8017088:	b590      	push	{r4, r7, lr}
 801708a:	ed2d 8b02 	vpush	{d8}
 801708e:	b08d      	sub	sp, #52	; 0x34
 8017090:	af00      	add	r7, sp, #0
 8017092:	60f8      	str	r0, [r7, #12]
 8017094:	60b9      	str	r1, [r7, #8]
 8017096:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017098:	6879      	ldr	r1, [r7, #4]
 801709a:	68b8      	ldr	r0, [r7, #8]
 801709c:	f000 fc3a 	bl	8017914 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 80170a0:	68bb      	ldr	r3, [r7, #8]
 80170a2:	781b      	ldrb	r3, [r3, #0]
 80170a4:	2b00      	cmp	r3, #0
 80170a6:	d002      	beq.n	80170ae <_ZN6SymbolgeES_+0x26>
 80170a8:	2b01      	cmp	r3, #1
 80170aa:	d01d      	beq.n	80170e8 <_ZN6SymbolgeES_+0x60>
 80170ac:	e03e      	b.n	801712c <_ZN6SymbolgeES_+0xa4>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) >= std::get<int>(other.value));
 80170ae:	68bb      	ldr	r3, [r7, #8]
 80170b0:	3304      	adds	r3, #4
 80170b2:	4618      	mov	r0, r3
 80170b4:	f7ea fc20 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80170b8:	4603      	mov	r3, r0
 80170ba:	681c      	ldr	r4, [r3, #0]
 80170bc:	687b      	ldr	r3, [r7, #4]
 80170be:	3304      	adds	r3, #4
 80170c0:	4618      	mov	r0, r3
 80170c2:	f7ea fc19 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80170c6:	4603      	mov	r3, r0
 80170c8:	681b      	ldr	r3, [r3, #0]
 80170ca:	429c      	cmp	r4, r3
 80170cc:	bfac      	ite	ge
 80170ce:	2301      	movge	r3, #1
 80170d0:	2300      	movlt	r3, #0
 80170d2:	b2db      	uxtb	r3, r3
 80170d4:	74bb      	strb	r3, [r7, #18]
 80170d6:	68bb      	ldr	r3, [r7, #8]
 80170d8:	3304      	adds	r3, #4
 80170da:	f107 0212 	add.w	r2, r7, #18
 80170de:	4611      	mov	r1, r2
 80170e0:	4618      	mov	r0, r3
 80170e2:	f000 fe07 	bl	8017cf4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 80170e6:	e03e      	b.n	8017166 <_ZN6SymbolgeES_+0xde>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) >= std::get<float>(other.value));
 80170e8:	68bb      	ldr	r3, [r7, #8]
 80170ea:	3304      	adds	r3, #4
 80170ec:	4618      	mov	r0, r3
 80170ee:	f000 fb6f 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80170f2:	4603      	mov	r3, r0
 80170f4:	ed93 8a00 	vldr	s16, [r3]
 80170f8:	687b      	ldr	r3, [r7, #4]
 80170fa:	3304      	adds	r3, #4
 80170fc:	4618      	mov	r0, r3
 80170fe:	f000 fb67 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017102:	4603      	mov	r3, r0
 8017104:	edd3 7a00 	vldr	s15, [r3]
 8017108:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801710c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017110:	bfac      	ite	ge
 8017112:	2301      	movge	r3, #1
 8017114:	2300      	movlt	r3, #0
 8017116:	b2db      	uxtb	r3, r3
 8017118:	74fb      	strb	r3, [r7, #19]
 801711a:	68bb      	ldr	r3, [r7, #8]
 801711c:	3304      	adds	r3, #4
 801711e:	f107 0213 	add.w	r2, r7, #19
 8017122:	4611      	mov	r1, r2
 8017124:	4618      	mov	r0, r3
 8017126:	f000 fde5 	bl	8017cf4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 801712a:	e01c      	b.n	8017166 <_ZN6SymbolgeES_+0xde>
	default:
		Transmitter::report_error("invalid type for comparison");
 801712c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017130:	4618      	mov	r0, r3
 8017132:	f00b f9c5 	bl	80224c0 <_ZNSaIcEC1Ev>
 8017136:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801713a:	f107 0314 	add.w	r3, r7, #20
 801713e:	490f      	ldr	r1, [pc, #60]	; (801717c <_ZN6SymbolgeES_+0xf4>)
 8017140:	4618      	mov	r0, r3
 8017142:	f7ea fcee 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017146:	f107 0314 	add.w	r3, r7, #20
 801714a:	4618      	mov	r0, r3
 801714c:	f001 fa80 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017150:	f107 0314 	add.w	r3, r7, #20
 8017154:	4618      	mov	r0, r3
 8017156:	f00b fc44 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801715a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801715e:	4618      	mov	r0, r3
 8017160:	f00b f9af 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 8017164:	bf00      	nop
	}

	return *this;
 8017166:	68b9      	ldr	r1, [r7, #8]
 8017168:	68f8      	ldr	r0, [r7, #12]
 801716a:	f7f1 f989 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 801716e:	68f8      	ldr	r0, [r7, #12]
 8017170:	3734      	adds	r7, #52	; 0x34
 8017172:	46bd      	mov	sp, r7
 8017174:	ecbd 8b02 	vpop	{d8}
 8017178:	bd90      	pop	{r4, r7, pc}
 801717a:	bf00      	nop
 801717c:	08027998 	.word	0x08027998

08017180 <_ZN6SymbolltES_>:

Symbol Symbol::operator<(Symbol other)
{
 8017180:	b590      	push	{r4, r7, lr}
 8017182:	ed2d 8b02 	vpush	{d8}
 8017186:	b08d      	sub	sp, #52	; 0x34
 8017188:	af00      	add	r7, sp, #0
 801718a:	60f8      	str	r0, [r7, #12]
 801718c:	60b9      	str	r1, [r7, #8]
 801718e:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017190:	6879      	ldr	r1, [r7, #4]
 8017192:	68b8      	ldr	r0, [r7, #8]
 8017194:	f000 fbbe 	bl	8017914 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017198:	68bb      	ldr	r3, [r7, #8]
 801719a:	781b      	ldrb	r3, [r3, #0]
 801719c:	2b00      	cmp	r3, #0
 801719e:	d002      	beq.n	80171a6 <_ZN6SymbolltES_+0x26>
 80171a0:	2b01      	cmp	r3, #1
 80171a2:	d01d      	beq.n	80171e0 <_ZN6SymbolltES_+0x60>
 80171a4:	e03e      	b.n	8017224 <_ZN6SymbolltES_+0xa4>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) < std::get<int>(other.value));
 80171a6:	68bb      	ldr	r3, [r7, #8]
 80171a8:	3304      	adds	r3, #4
 80171aa:	4618      	mov	r0, r3
 80171ac:	f7ea fba4 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80171b0:	4603      	mov	r3, r0
 80171b2:	681c      	ldr	r4, [r3, #0]
 80171b4:	687b      	ldr	r3, [r7, #4]
 80171b6:	3304      	adds	r3, #4
 80171b8:	4618      	mov	r0, r3
 80171ba:	f7ea fb9d 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80171be:	4603      	mov	r3, r0
 80171c0:	681b      	ldr	r3, [r3, #0]
 80171c2:	429c      	cmp	r4, r3
 80171c4:	bfb4      	ite	lt
 80171c6:	2301      	movlt	r3, #1
 80171c8:	2300      	movge	r3, #0
 80171ca:	b2db      	uxtb	r3, r3
 80171cc:	74bb      	strb	r3, [r7, #18]
 80171ce:	68bb      	ldr	r3, [r7, #8]
 80171d0:	3304      	adds	r3, #4
 80171d2:	f107 0212 	add.w	r2, r7, #18
 80171d6:	4611      	mov	r1, r2
 80171d8:	4618      	mov	r0, r3
 80171da:	f000 fd8b 	bl	8017cf4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 80171de:	e03e      	b.n	801725e <_ZN6SymbolltES_+0xde>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) < std::get<float>(other.value));
 80171e0:	68bb      	ldr	r3, [r7, #8]
 80171e2:	3304      	adds	r3, #4
 80171e4:	4618      	mov	r0, r3
 80171e6:	f000 faf3 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80171ea:	4603      	mov	r3, r0
 80171ec:	ed93 8a00 	vldr	s16, [r3]
 80171f0:	687b      	ldr	r3, [r7, #4]
 80171f2:	3304      	adds	r3, #4
 80171f4:	4618      	mov	r0, r3
 80171f6:	f000 faeb 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80171fa:	4603      	mov	r3, r0
 80171fc:	edd3 7a00 	vldr	s15, [r3]
 8017200:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8017204:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017208:	bf4c      	ite	mi
 801720a:	2301      	movmi	r3, #1
 801720c:	2300      	movpl	r3, #0
 801720e:	b2db      	uxtb	r3, r3
 8017210:	74fb      	strb	r3, [r7, #19]
 8017212:	68bb      	ldr	r3, [r7, #8]
 8017214:	3304      	adds	r3, #4
 8017216:	f107 0213 	add.w	r2, r7, #19
 801721a:	4611      	mov	r1, r2
 801721c:	4618      	mov	r0, r3
 801721e:	f000 fd69 	bl	8017cf4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8017222:	e01c      	b.n	801725e <_ZN6SymbolltES_+0xde>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017224:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017228:	4618      	mov	r0, r3
 801722a:	f00b f949 	bl	80224c0 <_ZNSaIcEC1Ev>
 801722e:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017232:	f107 0314 	add.w	r3, r7, #20
 8017236:	490f      	ldr	r1, [pc, #60]	; (8017274 <_ZN6SymbolltES_+0xf4>)
 8017238:	4618      	mov	r0, r3
 801723a:	f7ea fc72 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801723e:	f107 0314 	add.w	r3, r7, #20
 8017242:	4618      	mov	r0, r3
 8017244:	f001 fa04 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017248:	f107 0314 	add.w	r3, r7, #20
 801724c:	4618      	mov	r0, r3
 801724e:	f00b fbc8 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017252:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017256:	4618      	mov	r0, r3
 8017258:	f00b f933 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 801725c:	bf00      	nop
	}

	return *this;
 801725e:	68b9      	ldr	r1, [r7, #8]
 8017260:	68f8      	ldr	r0, [r7, #12]
 8017262:	f7f1 f90d 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 8017266:	68f8      	ldr	r0, [r7, #12]
 8017268:	3734      	adds	r7, #52	; 0x34
 801726a:	46bd      	mov	sp, r7
 801726c:	ecbd 8b02 	vpop	{d8}
 8017270:	bd90      	pop	{r4, r7, pc}
 8017272:	bf00      	nop
 8017274:	08027998 	.word	0x08027998

08017278 <_ZN6SymbolleES_>:

Symbol Symbol::operator<=(Symbol other)
{
 8017278:	b590      	push	{r4, r7, lr}
 801727a:	ed2d 8b02 	vpush	{d8}
 801727e:	b08d      	sub	sp, #52	; 0x34
 8017280:	af00      	add	r7, sp, #0
 8017282:	60f8      	str	r0, [r7, #12]
 8017284:	60b9      	str	r1, [r7, #8]
 8017286:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017288:	6879      	ldr	r1, [r7, #4]
 801728a:	68b8      	ldr	r0, [r7, #8]
 801728c:	f000 fb42 	bl	8017914 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017290:	68bb      	ldr	r3, [r7, #8]
 8017292:	781b      	ldrb	r3, [r3, #0]
 8017294:	2b00      	cmp	r3, #0
 8017296:	d002      	beq.n	801729e <_ZN6SymbolleES_+0x26>
 8017298:	2b01      	cmp	r3, #1
 801729a:	d01d      	beq.n	80172d8 <_ZN6SymbolleES_+0x60>
 801729c:	e03e      	b.n	801731c <_ZN6SymbolleES_+0xa4>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) <= std::get<int>(other.value));
 801729e:	68bb      	ldr	r3, [r7, #8]
 80172a0:	3304      	adds	r3, #4
 80172a2:	4618      	mov	r0, r3
 80172a4:	f7ea fb28 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80172a8:	4603      	mov	r3, r0
 80172aa:	681c      	ldr	r4, [r3, #0]
 80172ac:	687b      	ldr	r3, [r7, #4]
 80172ae:	3304      	adds	r3, #4
 80172b0:	4618      	mov	r0, r3
 80172b2:	f7ea fb21 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80172b6:	4603      	mov	r3, r0
 80172b8:	681b      	ldr	r3, [r3, #0]
 80172ba:	429c      	cmp	r4, r3
 80172bc:	bfd4      	ite	le
 80172be:	2301      	movle	r3, #1
 80172c0:	2300      	movgt	r3, #0
 80172c2:	b2db      	uxtb	r3, r3
 80172c4:	74bb      	strb	r3, [r7, #18]
 80172c6:	68bb      	ldr	r3, [r7, #8]
 80172c8:	3304      	adds	r3, #4
 80172ca:	f107 0212 	add.w	r2, r7, #18
 80172ce:	4611      	mov	r1, r2
 80172d0:	4618      	mov	r0, r3
 80172d2:	f000 fd0f 	bl	8017cf4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 80172d6:	e03e      	b.n	8017356 <_ZN6SymbolleES_+0xde>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) <= std::get<float>(other.value));
 80172d8:	68bb      	ldr	r3, [r7, #8]
 80172da:	3304      	adds	r3, #4
 80172dc:	4618      	mov	r0, r3
 80172de:	f000 fa77 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80172e2:	4603      	mov	r3, r0
 80172e4:	ed93 8a00 	vldr	s16, [r3]
 80172e8:	687b      	ldr	r3, [r7, #4]
 80172ea:	3304      	adds	r3, #4
 80172ec:	4618      	mov	r0, r3
 80172ee:	f000 fa6f 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80172f2:	4603      	mov	r3, r0
 80172f4:	edd3 7a00 	vldr	s15, [r3]
 80172f8:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80172fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017300:	bf94      	ite	ls
 8017302:	2301      	movls	r3, #1
 8017304:	2300      	movhi	r3, #0
 8017306:	b2db      	uxtb	r3, r3
 8017308:	74fb      	strb	r3, [r7, #19]
 801730a:	68bb      	ldr	r3, [r7, #8]
 801730c:	3304      	adds	r3, #4
 801730e:	f107 0213 	add.w	r2, r7, #19
 8017312:	4611      	mov	r1, r2
 8017314:	4618      	mov	r0, r3
 8017316:	f000 fced 	bl	8017cf4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 801731a:	e01c      	b.n	8017356 <_ZN6SymbolleES_+0xde>
	default:
		Transmitter::report_error("invalid type for comparison");
 801731c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017320:	4618      	mov	r0, r3
 8017322:	f00b f8cd 	bl	80224c0 <_ZNSaIcEC1Ev>
 8017326:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801732a:	f107 0314 	add.w	r3, r7, #20
 801732e:	490f      	ldr	r1, [pc, #60]	; (801736c <_ZN6SymbolleES_+0xf4>)
 8017330:	4618      	mov	r0, r3
 8017332:	f7ea fbf6 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017336:	f107 0314 	add.w	r3, r7, #20
 801733a:	4618      	mov	r0, r3
 801733c:	f001 f988 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017340:	f107 0314 	add.w	r3, r7, #20
 8017344:	4618      	mov	r0, r3
 8017346:	f00b fb4c 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801734a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801734e:	4618      	mov	r0, r3
 8017350:	f00b f8b7 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 8017354:	bf00      	nop
	}

	return *this;
 8017356:	68b9      	ldr	r1, [r7, #8]
 8017358:	68f8      	ldr	r0, [r7, #12]
 801735a:	f7f1 f891 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 801735e:	68f8      	ldr	r0, [r7, #12]
 8017360:	3734      	adds	r7, #52	; 0x34
 8017362:	46bd      	mov	sp, r7
 8017364:	ecbd 8b02 	vpop	{d8}
 8017368:	bd90      	pop	{r4, r7, pc}
 801736a:	bf00      	nop
 801736c:	08027998 	.word	0x08027998

08017370 <_ZN6SymboleqES_>:

Symbol Symbol::operator==(Symbol other)
{
 8017370:	b590      	push	{r4, r7, lr}
 8017372:	ed2d 8b02 	vpush	{d8}
 8017376:	b08d      	sub	sp, #52	; 0x34
 8017378:	af00      	add	r7, sp, #0
 801737a:	60f8      	str	r0, [r7, #12]
 801737c:	60b9      	str	r1, [r7, #8]
 801737e:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017380:	6879      	ldr	r1, [r7, #4]
 8017382:	68b8      	ldr	r0, [r7, #8]
 8017384:	f000 fac6 	bl	8017914 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017388:	68bb      	ldr	r3, [r7, #8]
 801738a:	781b      	ldrb	r3, [r3, #0]
 801738c:	2b02      	cmp	r3, #2
 801738e:	d045      	beq.n	801741c <_ZN6SymboleqES_+0xac>
 8017390:	2b02      	cmp	r3, #2
 8017392:	dc60      	bgt.n	8017456 <_ZN6SymboleqES_+0xe6>
 8017394:	2b00      	cmp	r3, #0
 8017396:	d002      	beq.n	801739e <_ZN6SymboleqES_+0x2e>
 8017398:	2b01      	cmp	r3, #1
 801739a:	d01d      	beq.n	80173d8 <_ZN6SymboleqES_+0x68>
 801739c:	e05b      	b.n	8017456 <_ZN6SymboleqES_+0xe6>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) == std::get<int>(other.value));
 801739e:	68bb      	ldr	r3, [r7, #8]
 80173a0:	3304      	adds	r3, #4
 80173a2:	4618      	mov	r0, r3
 80173a4:	f7ea faa8 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80173a8:	4603      	mov	r3, r0
 80173aa:	681c      	ldr	r4, [r3, #0]
 80173ac:	687b      	ldr	r3, [r7, #4]
 80173ae:	3304      	adds	r3, #4
 80173b0:	4618      	mov	r0, r3
 80173b2:	f7ea faa1 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80173b6:	4603      	mov	r3, r0
 80173b8:	681b      	ldr	r3, [r3, #0]
 80173ba:	429c      	cmp	r4, r3
 80173bc:	bf0c      	ite	eq
 80173be:	2301      	moveq	r3, #1
 80173c0:	2300      	movne	r3, #0
 80173c2:	b2db      	uxtb	r3, r3
 80173c4:	747b      	strb	r3, [r7, #17]
 80173c6:	68bb      	ldr	r3, [r7, #8]
 80173c8:	3304      	adds	r3, #4
 80173ca:	f107 0211 	add.w	r2, r7, #17
 80173ce:	4611      	mov	r1, r2
 80173d0:	4618      	mov	r0, r3
 80173d2:	f000 fc8f 	bl	8017cf4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 80173d6:	e05b      	b.n	8017490 <_ZN6SymboleqES_+0x120>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) == std::get<float>(other.value));
 80173d8:	68bb      	ldr	r3, [r7, #8]
 80173da:	3304      	adds	r3, #4
 80173dc:	4618      	mov	r0, r3
 80173de:	f000 f9f7 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80173e2:	4603      	mov	r3, r0
 80173e4:	ed93 8a00 	vldr	s16, [r3]
 80173e8:	687b      	ldr	r3, [r7, #4]
 80173ea:	3304      	adds	r3, #4
 80173ec:	4618      	mov	r0, r3
 80173ee:	f000 f9ef 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80173f2:	4603      	mov	r3, r0
 80173f4:	edd3 7a00 	vldr	s15, [r3]
 80173f8:	eeb4 8a67 	vcmp.f32	s16, s15
 80173fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017400:	bf0c      	ite	eq
 8017402:	2301      	moveq	r3, #1
 8017404:	2300      	movne	r3, #0
 8017406:	b2db      	uxtb	r3, r3
 8017408:	74bb      	strb	r3, [r7, #18]
 801740a:	68bb      	ldr	r3, [r7, #8]
 801740c:	3304      	adds	r3, #4
 801740e:	f107 0212 	add.w	r2, r7, #18
 8017412:	4611      	mov	r1, r2
 8017414:	4618      	mov	r0, r3
 8017416:	f000 fc6d 	bl	8017cf4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 801741a:	e039      	b.n	8017490 <_ZN6SymboleqES_+0x120>
	case SYMBOL_BOOL:
		this->value = (std::get<bool>(this->value) == std::get<bool>(other.value));
 801741c:	68bb      	ldr	r3, [r7, #8]
 801741e:	3304      	adds	r3, #4
 8017420:	4618      	mov	r0, r3
 8017422:	f7ea f867 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017426:	4603      	mov	r3, r0
 8017428:	781c      	ldrb	r4, [r3, #0]
 801742a:	687b      	ldr	r3, [r7, #4]
 801742c:	3304      	adds	r3, #4
 801742e:	4618      	mov	r0, r3
 8017430:	f7ea f860 	bl	80014f4 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017434:	4603      	mov	r3, r0
 8017436:	781b      	ldrb	r3, [r3, #0]
 8017438:	429c      	cmp	r4, r3
 801743a:	bf0c      	ite	eq
 801743c:	2301      	moveq	r3, #1
 801743e:	2300      	movne	r3, #0
 8017440:	b2db      	uxtb	r3, r3
 8017442:	74fb      	strb	r3, [r7, #19]
 8017444:	68bb      	ldr	r3, [r7, #8]
 8017446:	3304      	adds	r3, #4
 8017448:	f107 0213 	add.w	r2, r7, #19
 801744c:	4611      	mov	r1, r2
 801744e:	4618      	mov	r0, r3
 8017450:	f000 fc50 	bl	8017cf4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8017454:	e01c      	b.n	8017490 <_ZN6SymboleqES_+0x120>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017456:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801745a:	4618      	mov	r0, r3
 801745c:	f00b f830 	bl	80224c0 <_ZNSaIcEC1Ev>
 8017460:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017464:	f107 0314 	add.w	r3, r7, #20
 8017468:	490e      	ldr	r1, [pc, #56]	; (80174a4 <_ZN6SymboleqES_+0x134>)
 801746a:	4618      	mov	r0, r3
 801746c:	f7ea fb59 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017470:	f107 0314 	add.w	r3, r7, #20
 8017474:	4618      	mov	r0, r3
 8017476:	f001 f8eb 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801747a:	f107 0314 	add.w	r3, r7, #20
 801747e:	4618      	mov	r0, r3
 8017480:	f00b faaf 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017484:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017488:	4618      	mov	r0, r3
 801748a:	f00b f81a 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 801748e:	bf00      	nop
	}

	return *this;
 8017490:	68b9      	ldr	r1, [r7, #8]
 8017492:	68f8      	ldr	r0, [r7, #12]
 8017494:	f7f0 fff4 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 8017498:	68f8      	ldr	r0, [r7, #12]
 801749a:	3734      	adds	r7, #52	; 0x34
 801749c:	46bd      	mov	sp, r7
 801749e:	ecbd 8b02 	vpop	{d8}
 80174a2:	bd90      	pop	{r4, r7, pc}
 80174a4:	08027998 	.word	0x08027998

080174a8 <_ZN6SymbolngEv>:

	return *this;
}

Symbol Symbol::operator-()
{
 80174a8:	b590      	push	{r4, r7, lr}
 80174aa:	ed2d 8b02 	vpush	{d8}
 80174ae:	b08b      	sub	sp, #44	; 0x2c
 80174b0:	af00      	add	r7, sp, #0
 80174b2:	6078      	str	r0, [r7, #4]
 80174b4:	6039      	str	r1, [r7, #0]
	switch (type)
 80174b6:	683b      	ldr	r3, [r7, #0]
 80174b8:	781b      	ldrb	r3, [r3, #0]
 80174ba:	2b00      	cmp	r3, #0
 80174bc:	d002      	beq.n	80174c4 <_ZN6SymbolngEv+0x1c>
 80174be:	2b01      	cmp	r3, #1
 80174c0:	d010      	beq.n	80174e4 <_ZN6SymbolngEv+0x3c>
 80174c2:	e022      	b.n	801750a <_ZN6SymbolngEv+0x62>
	{
	case SYMBOL_INT:
		std::get<int>(this->value) = (-std::get<int>(this->value));
 80174c4:	683b      	ldr	r3, [r7, #0]
 80174c6:	3304      	adds	r3, #4
 80174c8:	4618      	mov	r0, r3
 80174ca:	f7ea fa15 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80174ce:	4603      	mov	r3, r0
 80174d0:	681b      	ldr	r3, [r3, #0]
 80174d2:	425c      	negs	r4, r3
 80174d4:	683b      	ldr	r3, [r7, #0]
 80174d6:	3304      	adds	r3, #4
 80174d8:	4618      	mov	r0, r3
 80174da:	f7ea fa0d 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80174de:	4603      	mov	r3, r0
 80174e0:	601c      	str	r4, [r3, #0]
		break;
 80174e2:	e02f      	b.n	8017544 <_ZN6SymbolngEv+0x9c>
	case SYMBOL_FLOAT:
		std::get<float>(this->value) = (-std::get<float>(this->value));
 80174e4:	683b      	ldr	r3, [r7, #0]
 80174e6:	3304      	adds	r3, #4
 80174e8:	4618      	mov	r0, r3
 80174ea:	f000 f971 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80174ee:	4603      	mov	r3, r0
 80174f0:	edd3 7a00 	vldr	s15, [r3]
 80174f4:	eeb1 8a67 	vneg.f32	s16, s15
 80174f8:	683b      	ldr	r3, [r7, #0]
 80174fa:	3304      	adds	r3, #4
 80174fc:	4618      	mov	r0, r3
 80174fe:	f000 f967 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017502:	4603      	mov	r3, r0
 8017504:	ed83 8a00 	vstr	s16, [r3]
		break;
 8017508:	e01c      	b.n	8017544 <_ZN6SymbolngEv+0x9c>
	default:
		Transmitter::report_error("invalid type for minus unary operator");
 801750a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801750e:	4618      	mov	r0, r3
 8017510:	f00a ffd6 	bl	80224c0 <_ZNSaIcEC1Ev>
 8017514:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017518:	f107 030c 	add.w	r3, r7, #12
 801751c:	490e      	ldr	r1, [pc, #56]	; (8017558 <_ZN6SymbolngEv+0xb0>)
 801751e:	4618      	mov	r0, r3
 8017520:	f7ea faff 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017524:	f107 030c 	add.w	r3, r7, #12
 8017528:	4618      	mov	r0, r3
 801752a:	f001 f891 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801752e:	f107 030c 	add.w	r3, r7, #12
 8017532:	4618      	mov	r0, r3
 8017534:	f00b fa55 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017538:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801753c:	4618      	mov	r0, r3
 801753e:	f00a ffc0 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 8017542:	bf00      	nop
	}

	return *this;
 8017544:	6839      	ldr	r1, [r7, #0]
 8017546:	6878      	ldr	r0, [r7, #4]
 8017548:	f7f0 ff9a 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 801754c:	6878      	ldr	r0, [r7, #4]
 801754e:	372c      	adds	r7, #44	; 0x2c
 8017550:	46bd      	mov	sp, r7
 8017552:	ecbd 8b02 	vpop	{d8}
 8017556:	bd90      	pop	{r4, r7, pc}
 8017558:	080279b4 	.word	0x080279b4

0801755c <_ZN6SymbolmlES_>:

Symbol Symbol::operator*(Symbol other)
{
 801755c:	b590      	push	{r4, r7, lr}
 801755e:	ed2d 8b02 	vpush	{d8}
 8017562:	b08f      	sub	sp, #60	; 0x3c
 8017564:	af00      	add	r7, sp, #0
 8017566:	60f8      	str	r0, [r7, #12]
 8017568:	60b9      	str	r1, [r7, #8]
 801756a:	607a      	str	r2, [r7, #4]
	assert_types(other);
 801756c:	6879      	ldr	r1, [r7, #4]
 801756e:	68b8      	ldr	r0, [r7, #8]
 8017570:	f000 f9d0 	bl	8017914 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017574:	68bb      	ldr	r3, [r7, #8]
 8017576:	781b      	ldrb	r3, [r3, #0]
 8017578:	2b00      	cmp	r3, #0
 801757a:	d002      	beq.n	8017582 <_ZN6SymbolmlES_+0x26>
 801757c:	2b01      	cmp	r3, #1
 801757e:	d01a      	beq.n	80175b6 <_ZN6SymbolmlES_+0x5a>
 8017580:	e036      	b.n	80175f0 <_ZN6SymbolmlES_+0x94>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) * std::get<int>(other.value));
 8017582:	68bb      	ldr	r3, [r7, #8]
 8017584:	3304      	adds	r3, #4
 8017586:	4618      	mov	r0, r3
 8017588:	f7ea f9b6 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801758c:	4603      	mov	r3, r0
 801758e:	681c      	ldr	r4, [r3, #0]
 8017590:	687b      	ldr	r3, [r7, #4]
 8017592:	3304      	adds	r3, #4
 8017594:	4618      	mov	r0, r3
 8017596:	f7ea f9af 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801759a:	4603      	mov	r3, r0
 801759c:	681b      	ldr	r3, [r3, #0]
 801759e:	fb03 f304 	mul.w	r3, r3, r4
 80175a2:	617b      	str	r3, [r7, #20]
 80175a4:	68bb      	ldr	r3, [r7, #8]
 80175a6:	3304      	adds	r3, #4
 80175a8:	f107 0214 	add.w	r2, r7, #20
 80175ac:	4611      	mov	r1, r2
 80175ae:	4618      	mov	r0, r3
 80175b0:	f000 fbcb 	bl	8017d4a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 80175b4:	e039      	b.n	801762a <_ZN6SymbolmlES_+0xce>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) * std::get<float>(other.value));
 80175b6:	68bb      	ldr	r3, [r7, #8]
 80175b8:	3304      	adds	r3, #4
 80175ba:	4618      	mov	r0, r3
 80175bc:	f000 f908 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80175c0:	4603      	mov	r3, r0
 80175c2:	ed93 8a00 	vldr	s16, [r3]
 80175c6:	687b      	ldr	r3, [r7, #4]
 80175c8:	3304      	adds	r3, #4
 80175ca:	4618      	mov	r0, r3
 80175cc:	f000 f900 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80175d0:	4603      	mov	r3, r0
 80175d2:	edd3 7a00 	vldr	s15, [r3]
 80175d6:	ee68 7a27 	vmul.f32	s15, s16, s15
 80175da:	edc7 7a06 	vstr	s15, [r7, #24]
 80175de:	68bb      	ldr	r3, [r7, #8]
 80175e0:	3304      	adds	r3, #4
 80175e2:	f107 0218 	add.w	r2, r7, #24
 80175e6:	4611      	mov	r1, r2
 80175e8:	4618      	mov	r0, r3
 80175ea:	f000 fbd8 	bl	8017d9e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 80175ee:	e01c      	b.n	801762a <_ZN6SymbolmlES_+0xce>
	default:
		Transmitter::report_error("invalid type for multiplication");
 80175f0:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80175f4:	4618      	mov	r0, r3
 80175f6:	f00a ff63 	bl	80224c0 <_ZNSaIcEC1Ev>
 80175fa:	f107 0234 	add.w	r2, r7, #52	; 0x34
 80175fe:	f107 031c 	add.w	r3, r7, #28
 8017602:	490f      	ldr	r1, [pc, #60]	; (8017640 <_ZN6SymbolmlES_+0xe4>)
 8017604:	4618      	mov	r0, r3
 8017606:	f7ea fa8c 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801760a:	f107 031c 	add.w	r3, r7, #28
 801760e:	4618      	mov	r0, r3
 8017610:	f001 f81e 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017614:	f107 031c 	add.w	r3, r7, #28
 8017618:	4618      	mov	r0, r3
 801761a:	f00b f9e2 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801761e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8017622:	4618      	mov	r0, r3
 8017624:	f00a ff4d 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 8017628:	bf00      	nop
	}

	return *this;
 801762a:	68b9      	ldr	r1, [r7, #8]
 801762c:	68f8      	ldr	r0, [r7, #12]
 801762e:	f7f0 ff27 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 8017632:	68f8      	ldr	r0, [r7, #12]
 8017634:	373c      	adds	r7, #60	; 0x3c
 8017636:	46bd      	mov	sp, r7
 8017638:	ecbd 8b02 	vpop	{d8}
 801763c:	bd90      	pop	{r4, r7, pc}
 801763e:	bf00      	nop
 8017640:	080279dc 	.word	0x080279dc

08017644 <_ZN6SymboldvES_>:

Symbol Symbol::operator/(Symbol other)
{
 8017644:	b590      	push	{r4, r7, lr}
 8017646:	ed2d 8b02 	vpush	{d8}
 801764a:	b08f      	sub	sp, #60	; 0x3c
 801764c:	af00      	add	r7, sp, #0
 801764e:	60f8      	str	r0, [r7, #12]
 8017650:	60b9      	str	r1, [r7, #8]
 8017652:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017654:	6879      	ldr	r1, [r7, #4]
 8017656:	68b8      	ldr	r0, [r7, #8]
 8017658:	f000 f95c 	bl	8017914 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 801765c:	68bb      	ldr	r3, [r7, #8]
 801765e:	781b      	ldrb	r3, [r3, #0]
 8017660:	2b00      	cmp	r3, #0
 8017662:	d002      	beq.n	801766a <_ZN6SymboldvES_+0x26>
 8017664:	2b01      	cmp	r3, #1
 8017666:	d01a      	beq.n	801769e <_ZN6SymboldvES_+0x5a>
 8017668:	e036      	b.n	80176d8 <_ZN6SymboldvES_+0x94>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) / std::get<int>(other.value));
 801766a:	68bb      	ldr	r3, [r7, #8]
 801766c:	3304      	adds	r3, #4
 801766e:	4618      	mov	r0, r3
 8017670:	f7ea f942 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017674:	4603      	mov	r3, r0
 8017676:	681c      	ldr	r4, [r3, #0]
 8017678:	687b      	ldr	r3, [r7, #4]
 801767a:	3304      	adds	r3, #4
 801767c:	4618      	mov	r0, r3
 801767e:	f7ea f93b 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017682:	4603      	mov	r3, r0
 8017684:	681b      	ldr	r3, [r3, #0]
 8017686:	fb94 f3f3 	sdiv	r3, r4, r3
 801768a:	617b      	str	r3, [r7, #20]
 801768c:	68bb      	ldr	r3, [r7, #8]
 801768e:	3304      	adds	r3, #4
 8017690:	f107 0214 	add.w	r2, r7, #20
 8017694:	4611      	mov	r1, r2
 8017696:	4618      	mov	r0, r3
 8017698:	f000 fb57 	bl	8017d4a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 801769c:	e039      	b.n	8017712 <_ZN6SymboldvES_+0xce>
	case SYMBOL_FLOAT:
		this->value = (std::get<float>(this->value) / std::get<float>(other.value));
 801769e:	68bb      	ldr	r3, [r7, #8]
 80176a0:	3304      	adds	r3, #4
 80176a2:	4618      	mov	r0, r3
 80176a4:	f000 f894 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80176a8:	4603      	mov	r3, r0
 80176aa:	ed93 8a00 	vldr	s16, [r3]
 80176ae:	687b      	ldr	r3, [r7, #4]
 80176b0:	3304      	adds	r3, #4
 80176b2:	4618      	mov	r0, r3
 80176b4:	f000 f88c 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80176b8:	4603      	mov	r3, r0
 80176ba:	ed93 7a00 	vldr	s14, [r3]
 80176be:	eec8 7a07 	vdiv.f32	s15, s16, s14
 80176c2:	edc7 7a06 	vstr	s15, [r7, #24]
 80176c6:	68bb      	ldr	r3, [r7, #8]
 80176c8:	3304      	adds	r3, #4
 80176ca:	f107 0218 	add.w	r2, r7, #24
 80176ce:	4611      	mov	r1, r2
 80176d0:	4618      	mov	r0, r3
 80176d2:	f000 fb64 	bl	8017d9e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 80176d6:	e01c      	b.n	8017712 <_ZN6SymboldvES_+0xce>
	default:
		Transmitter::report_error("invalid type for multiplication");
 80176d8:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80176dc:	4618      	mov	r0, r3
 80176de:	f00a feef 	bl	80224c0 <_ZNSaIcEC1Ev>
 80176e2:	f107 0234 	add.w	r2, r7, #52	; 0x34
 80176e6:	f107 031c 	add.w	r3, r7, #28
 80176ea:	490f      	ldr	r1, [pc, #60]	; (8017728 <_ZN6SymboldvES_+0xe4>)
 80176ec:	4618      	mov	r0, r3
 80176ee:	f7ea fa18 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80176f2:	f107 031c 	add.w	r3, r7, #28
 80176f6:	4618      	mov	r0, r3
 80176f8:	f000 ffaa 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80176fc:	f107 031c 	add.w	r3, r7, #28
 8017700:	4618      	mov	r0, r3
 8017702:	f00b f96e 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017706:	f107 0334 	add.w	r3, r7, #52	; 0x34
 801770a:	4618      	mov	r0, r3
 801770c:	f00a fed9 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 8017710:	bf00      	nop
	}

	return *this;
 8017712:	68b9      	ldr	r1, [r7, #8]
 8017714:	68f8      	ldr	r0, [r7, #12]
 8017716:	f7f0 feb3 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 801771a:	68f8      	ldr	r0, [r7, #12]
 801771c:	373c      	adds	r7, #60	; 0x3c
 801771e:	46bd      	mov	sp, r7
 8017720:	ecbd 8b02 	vpop	{d8}
 8017724:	bd90      	pop	{r4, r7, pc}
 8017726:	bf00      	nop
 8017728:	080279dc 	.word	0x080279dc

0801772c <_ZN6SymbolrmES_>:

Symbol Symbol::operator%(Symbol other)
{
 801772c:	b590      	push	{r4, r7, lr}
 801772e:	b08d      	sub	sp, #52	; 0x34
 8017730:	af00      	add	r7, sp, #0
 8017732:	60f8      	str	r0, [r7, #12]
 8017734:	60b9      	str	r1, [r7, #8]
 8017736:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017738:	6879      	ldr	r1, [r7, #4]
 801773a:	68b8      	ldr	r0, [r7, #8]
 801773c:	f000 f8ea 	bl	8017914 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017740:	68bb      	ldr	r3, [r7, #8]
 8017742:	781b      	ldrb	r3, [r3, #0]
 8017744:	2b00      	cmp	r3, #0
 8017746:	d11c      	bne.n	8017782 <_ZN6SymbolrmES_+0x56>
	{
	case SYMBOL_INT:
		this->value = (std::get<int>(this->value) % std::get<int>(other.value));
 8017748:	68bb      	ldr	r3, [r7, #8]
 801774a:	3304      	adds	r3, #4
 801774c:	4618      	mov	r0, r3
 801774e:	f7ea f8d3 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017752:	4603      	mov	r3, r0
 8017754:	681c      	ldr	r4, [r3, #0]
 8017756:	687b      	ldr	r3, [r7, #4]
 8017758:	3304      	adds	r3, #4
 801775a:	4618      	mov	r0, r3
 801775c:	f7ea f8cc 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017760:	4603      	mov	r3, r0
 8017762:	681b      	ldr	r3, [r3, #0]
 8017764:	fb94 f2f3 	sdiv	r2, r4, r3
 8017768:	fb03 f302 	mul.w	r3, r3, r2
 801776c:	1ae3      	subs	r3, r4, r3
 801776e:	613b      	str	r3, [r7, #16]
 8017770:	68bb      	ldr	r3, [r7, #8]
 8017772:	3304      	adds	r3, #4
 8017774:	f107 0210 	add.w	r2, r7, #16
 8017778:	4611      	mov	r1, r2
 801777a:	4618      	mov	r0, r3
 801777c:	f000 fae5 	bl	8017d4a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8017780:	e01c      	b.n	80177bc <_ZN6SymbolrmES_+0x90>
	default:
		Transmitter::report_error("invalid type for multiplication");
 8017782:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017786:	4618      	mov	r0, r3
 8017788:	f00a fe9a 	bl	80224c0 <_ZNSaIcEC1Ev>
 801778c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017790:	f107 0314 	add.w	r3, r7, #20
 8017794:	490d      	ldr	r1, [pc, #52]	; (80177cc <_ZN6SymbolrmES_+0xa0>)
 8017796:	4618      	mov	r0, r3
 8017798:	f7ea f9c3 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801779c:	f107 0314 	add.w	r3, r7, #20
 80177a0:	4618      	mov	r0, r3
 80177a2:	f000 ff55 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80177a6:	f107 0314 	add.w	r3, r7, #20
 80177aa:	4618      	mov	r0, r3
 80177ac:	f00b f919 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80177b0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80177b4:	4618      	mov	r0, r3
 80177b6:	f00a fe84 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 80177ba:	bf00      	nop
	}

	return *this;
 80177bc:	68b9      	ldr	r1, [r7, #8]
 80177be:	68f8      	ldr	r0, [r7, #12]
 80177c0:	f7f0 fe5e 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 80177c4:	68f8      	ldr	r0, [r7, #12]
 80177c6:	3734      	adds	r7, #52	; 0x34
 80177c8:	46bd      	mov	sp, r7
 80177ca:	bd90      	pop	{r4, r7, pc}
 80177cc:	080279dc 	.word	0x080279dc

080177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 80177d0:	b580      	push	{r7, lr}
 80177d2:	b082      	sub	sp, #8
 80177d4:	af00      	add	r7, sp, #0
 80177d6:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 80177d8:	6878      	ldr	r0, [r7, #4]
 80177da:	f7f0 ff35 	bl	8008648 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80177de:	4603      	mov	r3, r0
    }
 80177e0:	4618      	mov	r0, r3
 80177e2:	3708      	adds	r7, #8
 80177e4:	46bd      	mov	sp, r7
 80177e6:	bd80      	pop	{r7, pc}

080177e8 <_ZN6SymboleoES_>:

Symbol Symbol::operator^(Symbol other)
{
 80177e8:	b5b0      	push	{r4, r5, r7, lr}
 80177ea:	b08e      	sub	sp, #56	; 0x38
 80177ec:	af00      	add	r7, sp, #0
 80177ee:	60f8      	str	r0, [r7, #12]
 80177f0:	60b9      	str	r1, [r7, #8]
 80177f2:	607a      	str	r2, [r7, #4]
	assert_types(other);
 80177f4:	6879      	ldr	r1, [r7, #4]
 80177f6:	68b8      	ldr	r0, [r7, #8]
 80177f8:	f000 f88c 	bl	8017914 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 80177fc:	68bb      	ldr	r3, [r7, #8]
 80177fe:	781b      	ldrb	r3, [r3, #0]
 8017800:	2b00      	cmp	r3, #0
 8017802:	d002      	beq.n	801780a <_ZN6SymboleoES_+0x22>
 8017804:	2b01      	cmp	r3, #1
 8017806:	d02f      	beq.n	8017868 <_ZN6SymboleoES_+0x80>
 8017808:	e05d      	b.n	80178c6 <_ZN6SymboleoES_+0xde>
	{
	case SYMBOL_INT:
		this->value = (int)pow(std::get<int>(this->value), std::get<int>(other.value));
 801780a:	68bb      	ldr	r3, [r7, #8]
 801780c:	3304      	adds	r3, #4
 801780e:	4618      	mov	r0, r3
 8017810:	f7ea f872 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017814:	4603      	mov	r3, r0
 8017816:	681b      	ldr	r3, [r3, #0]
 8017818:	4618      	mov	r0, r3
 801781a:	f7e8 fea3 	bl	8000564 <__aeabi_i2d>
 801781e:	4604      	mov	r4, r0
 8017820:	460d      	mov	r5, r1
 8017822:	687b      	ldr	r3, [r7, #4]
 8017824:	3304      	adds	r3, #4
 8017826:	4618      	mov	r0, r3
 8017828:	f7ea f866 	bl	80018f8 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801782c:	4603      	mov	r3, r0
 801782e:	681b      	ldr	r3, [r3, #0]
 8017830:	4618      	mov	r0, r3
 8017832:	f7e8 fe97 	bl	8000564 <__aeabi_i2d>
 8017836:	4602      	mov	r2, r0
 8017838:	460b      	mov	r3, r1
 801783a:	ec43 2b11 	vmov	d1, r2, r3
 801783e:	ec45 4b10 	vmov	d0, r4, r5
 8017842:	f00b faab 	bl	8022d9c <pow>
 8017846:	ec53 2b10 	vmov	r2, r3, d0
 801784a:	4610      	mov	r0, r2
 801784c:	4619      	mov	r1, r3
 801784e:	f7e9 f9a3 	bl	8000b98 <__aeabi_d2iz>
 8017852:	4603      	mov	r3, r0
 8017854:	617b      	str	r3, [r7, #20]
 8017856:	68bb      	ldr	r3, [r7, #8]
 8017858:	3304      	adds	r3, #4
 801785a:	f107 0214 	add.w	r2, r7, #20
 801785e:	4611      	mov	r1, r2
 8017860:	4618      	mov	r0, r3
 8017862:	f000 fa72 	bl	8017d4a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8017866:	e04b      	b.n	8017900 <_ZN6SymboleoES_+0x118>
	case SYMBOL_FLOAT:
		this->value = (float)pow(std::get<float>(this->value), std::get<float>(other.value));
 8017868:	68bb      	ldr	r3, [r7, #8]
 801786a:	3304      	adds	r3, #4
 801786c:	4618      	mov	r0, r3
 801786e:	f7ff ffaf 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017872:	4603      	mov	r3, r0
 8017874:	681b      	ldr	r3, [r3, #0]
 8017876:	4618      	mov	r0, r3
 8017878:	f7e8 fe86 	bl	8000588 <__aeabi_f2d>
 801787c:	4604      	mov	r4, r0
 801787e:	460d      	mov	r5, r1
 8017880:	687b      	ldr	r3, [r7, #4]
 8017882:	3304      	adds	r3, #4
 8017884:	4618      	mov	r0, r3
 8017886:	f7ff ffa3 	bl	80177d0 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801788a:	4603      	mov	r3, r0
 801788c:	681b      	ldr	r3, [r3, #0]
 801788e:	4618      	mov	r0, r3
 8017890:	f7e8 fe7a 	bl	8000588 <__aeabi_f2d>
 8017894:	4602      	mov	r2, r0
 8017896:	460b      	mov	r3, r1
 8017898:	ec43 2b11 	vmov	d1, r2, r3
 801789c:	ec45 4b10 	vmov	d0, r4, r5
 80178a0:	f00b fa7c 	bl	8022d9c <pow>
 80178a4:	ec53 2b10 	vmov	r2, r3, d0
 80178a8:	4610      	mov	r0, r2
 80178aa:	4619      	mov	r1, r3
 80178ac:	f7e9 f9bc 	bl	8000c28 <__aeabi_d2f>
 80178b0:	4603      	mov	r3, r0
 80178b2:	61bb      	str	r3, [r7, #24]
 80178b4:	68bb      	ldr	r3, [r7, #8]
 80178b6:	3304      	adds	r3, #4
 80178b8:	f107 0218 	add.w	r2, r7, #24
 80178bc:	4611      	mov	r1, r2
 80178be:	4618      	mov	r0, r3
 80178c0:	f000 fa6d 	bl	8017d9e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 80178c4:	e01c      	b.n	8017900 <_ZN6SymboleoES_+0x118>
	default:
		Transmitter::report_error("invalid type for multiplication");
 80178c6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80178ca:	4618      	mov	r0, r3
 80178cc:	f00a fdf8 	bl	80224c0 <_ZNSaIcEC1Ev>
 80178d0:	f107 0234 	add.w	r2, r7, #52	; 0x34
 80178d4:	f107 031c 	add.w	r3, r7, #28
 80178d8:	490d      	ldr	r1, [pc, #52]	; (8017910 <_ZN6SymboleoES_+0x128>)
 80178da:	4618      	mov	r0, r3
 80178dc:	f7ea f921 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80178e0:	f107 031c 	add.w	r3, r7, #28
 80178e4:	4618      	mov	r0, r3
 80178e6:	f000 feb3 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80178ea:	f107 031c 	add.w	r3, r7, #28
 80178ee:	4618      	mov	r0, r3
 80178f0:	f00b f877 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80178f4:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80178f8:	4618      	mov	r0, r3
 80178fa:	f00a fde2 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 80178fe:	bf00      	nop
	}

	return *this;
 8017900:	68b9      	ldr	r1, [r7, #8]
 8017902:	68f8      	ldr	r0, [r7, #12]
 8017904:	f7f0 fdbc 	bl	8008480 <_ZN6SymbolC1ERKS_>
}
 8017908:	68f8      	ldr	r0, [r7, #12]
 801790a:	3738      	adds	r7, #56	; 0x38
 801790c:	46bd      	mov	sp, r7
 801790e:	bdb0      	pop	{r4, r5, r7, pc}
 8017910:	080279dc 	.word	0x080279dc

08017914 <_ZN6Symbol12assert_typesERKS_>:

void Symbol::assert_types(const Symbol &other)
{
 8017914:	b580      	push	{r7, lr}
 8017916:	b08a      	sub	sp, #40	; 0x28
 8017918:	af00      	add	r7, sp, #0
 801791a:	6078      	str	r0, [r7, #4]
 801791c:	6039      	str	r1, [r7, #0]
	if (type != other.type)
 801791e:	687b      	ldr	r3, [r7, #4]
 8017920:	781a      	ldrb	r2, [r3, #0]
 8017922:	683b      	ldr	r3, [r7, #0]
 8017924:	781b      	ldrb	r3, [r3, #0]
 8017926:	429a      	cmp	r2, r3
 8017928:	d01b      	beq.n	8017962 <_ZN6Symbol12assert_typesERKS_+0x4e>
	{
		Transmitter::report_error("types mismatch");
 801792a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801792e:	4618      	mov	r0, r3
 8017930:	f00a fdc6 	bl	80224c0 <_ZNSaIcEC1Ev>
 8017934:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017938:	f107 030c 	add.w	r3, r7, #12
 801793c:	490b      	ldr	r1, [pc, #44]	; (801796c <_ZN6Symbol12assert_typesERKS_+0x58>)
 801793e:	4618      	mov	r0, r3
 8017940:	f7ea f8ef 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017944:	f107 030c 	add.w	r3, r7, #12
 8017948:	4618      	mov	r0, r3
 801794a:	f000 fe81 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801794e:	f107 030c 	add.w	r3, r7, #12
 8017952:	4618      	mov	r0, r3
 8017954:	f00b f845 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017958:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801795c:	4618      	mov	r0, r3
 801795e:	f00a fdb0 	bl	80224c2 <_ZNSaIcED1Ev>
	}
}
 8017962:	bf00      	nop
 8017964:	3728      	adds	r7, #40	; 0x28
 8017966:	46bd      	mov	sp, r7
 8017968:	bd80      	pop	{r7, pc}
 801796a:	bf00      	nop
 801796c:	080279fc 	.word	0x080279fc

08017970 <_ZN6Symbol11assert_typeE11symbol_type>:

void Symbol::assert_type(symbol_type type)
{
 8017970:	b580      	push	{r7, lr}
 8017972:	b08a      	sub	sp, #40	; 0x28
 8017974:	af00      	add	r7, sp, #0
 8017976:	6078      	str	r0, [r7, #4]
 8017978:	460b      	mov	r3, r1
 801797a:	70fb      	strb	r3, [r7, #3]
	if(this->type != type)
 801797c:	687b      	ldr	r3, [r7, #4]
 801797e:	781b      	ldrb	r3, [r3, #0]
 8017980:	78fa      	ldrb	r2, [r7, #3]
 8017982:	429a      	cmp	r2, r3
 8017984:	d01b      	beq.n	80179be <_ZN6Symbol11assert_typeE11symbol_type+0x4e>
	{
		Transmitter::report_error(std::string("")); //todo message
 8017986:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801798a:	4618      	mov	r0, r3
 801798c:	f00a fd98 	bl	80224c0 <_ZNSaIcEC1Ev>
 8017990:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017994:	f107 030c 	add.w	r3, r7, #12
 8017998:	490b      	ldr	r1, [pc, #44]	; (80179c8 <_ZN6Symbol11assert_typeE11symbol_type+0x58>)
 801799a:	4618      	mov	r0, r3
 801799c:	f7ea f8c1 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80179a0:	f107 030c 	add.w	r3, r7, #12
 80179a4:	4618      	mov	r0, r3
 80179a6:	f000 fe53 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80179aa:	f107 030c 	add.w	r3, r7, #12
 80179ae:	4618      	mov	r0, r3
 80179b0:	f00b f817 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80179b4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80179b8:	4618      	mov	r0, r3
 80179ba:	f00a fd82 	bl	80224c2 <_ZNSaIcED1Ev>
	}
}
 80179be:	bf00      	nop
 80179c0:	3728      	adds	r7, #40	; 0x28
 80179c2:	46bd      	mov	sp, r7
 80179c4:	bd80      	pop	{r7, pc}
 80179c6:	bf00      	nop
 80179c8:	08027a0c 	.word	0x08027a0c

080179cc <_ZN6Symbol6resizeEi>:

void Symbol::resize(int size)
{
 80179cc:	b580      	push	{r7, lr}
 80179ce:	b086      	sub	sp, #24
 80179d0:	af00      	add	r7, sp, #0
 80179d2:	6078      	str	r0, [r7, #4]
 80179d4:	6039      	str	r1, [r7, #0]
	std::vector<Symbol> vec = std::get<std::vector<Symbol>>(value);
 80179d6:	687b      	ldr	r3, [r7, #4]
 80179d8:	3304      	adds	r3, #4
 80179da:	4618      	mov	r0, r3
 80179dc:	f000 f962 	bl	8017ca4 <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>
 80179e0:	4602      	mov	r2, r0
 80179e2:	f107 030c 	add.w	r3, r7, #12
 80179e6:	4611      	mov	r1, r2
 80179e8:	4618      	mov	r0, r3
 80179ea:	f7f0 f9cc 	bl	8007d86 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
	if(vec.size() < (unsigned int)size)
 80179ee:	f107 030c 	add.w	r3, r7, #12
 80179f2:	4618      	mov	r0, r3
 80179f4:	f7ef f8d9 	bl	8006baa <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 80179f8:	4602      	mov	r2, r0
 80179fa:	683b      	ldr	r3, [r7, #0]
 80179fc:	429a      	cmp	r2, r3
 80179fe:	bf34      	ite	cc
 8017a00:	2301      	movcc	r3, #1
 8017a02:	2300      	movcs	r3, #0
 8017a04:	b2db      	uxtb	r3, r3
 8017a06:	2b00      	cmp	r3, #0
 8017a08:	d006      	beq.n	8017a18 <_ZN6Symbol6resizeEi+0x4c>
	{
		vec.reserve(size);
 8017a0a:	683a      	ldr	r2, [r7, #0]
 8017a0c:	f107 030c 	add.w	r3, r7, #12
 8017a10:	4611      	mov	r1, r2
 8017a12:	4618      	mov	r0, r3
 8017a14:	f000 f9ee 	bl	8017df4 <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj>
	std::vector<Symbol> vec = std::get<std::vector<Symbol>>(value);
 8017a18:	f107 030c 	add.w	r3, r7, #12
 8017a1c:	4618      	mov	r0, r3
 8017a1e:	f7ef ff21 	bl	8007864 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
	}
}
 8017a22:	bf00      	nop
 8017a24:	3718      	adds	r7, #24
 8017a26:	46bd      	mov	sp, r7
 8017a28:	bd80      	pop	{r7, pc}

08017a2a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 8017a2a:	b590      	push	{r4, r7, lr}
 8017a2c:	b085      	sub	sp, #20
 8017a2e:	af00      	add	r7, sp, #0
 8017a30:	6078      	str	r0, [r7, #4]
 8017a32:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017a34:	2300      	movs	r3, #0
 8017a36:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017a38:	6878      	ldr	r0, [r7, #4]
 8017a3a:	f7e9 fd67 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017a3e:	4603      	mov	r3, r0
 8017a40:	2b00      	cmp	r3, #0
 8017a42:	bf0c      	ite	eq
 8017a44:	2301      	moveq	r3, #1
 8017a46:	2300      	movne	r3, #0
 8017a48:	b2db      	uxtb	r3, r3
 8017a4a:	2b00      	cmp	r3, #0
 8017a4c:	d00a      	beq.n	8017a64 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017a4e:	6838      	ldr	r0, [r7, #0]
 8017a50:	f7ee f803 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8017a54:	4603      	mov	r3, r0
 8017a56:	681c      	ldr	r4, [r3, #0]
 8017a58:	6878      	ldr	r0, [r7, #4]
 8017a5a:	f7e9 ff7b 	bl	8001954 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017a5e:	4603      	mov	r3, r0
 8017a60:	601c      	str	r4, [r3, #0]
 8017a62:	e007      	b.n	8017a74 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017a64:	6838      	ldr	r0, [r7, #0]
 8017a66:	f7ed fff8 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8017a6a:	4603      	mov	r3, r0
 8017a6c:	4619      	mov	r1, r3
 8017a6e:	6878      	ldr	r0, [r7, #4]
 8017a70:	f000 fa1a 	bl	8017ea8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 8017a74:	687b      	ldr	r3, [r7, #4]
	}
 8017a76:	4618      	mov	r0, r3
 8017a78:	3714      	adds	r7, #20
 8017a7a:	46bd      	mov	sp, r7
 8017a7c:	bd90      	pop	{r4, r7, pc}

08017a7e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 8017a7e:	b590      	push	{r4, r7, lr}
 8017a80:	b085      	sub	sp, #20
 8017a82:	af00      	add	r7, sp, #0
 8017a84:	6078      	str	r0, [r7, #4]
 8017a86:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017a88:	2301      	movs	r3, #1
 8017a8a:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017a8c:	6878      	ldr	r0, [r7, #4]
 8017a8e:	f7e9 fd3d 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017a92:	4603      	mov	r3, r0
 8017a94:	2b01      	cmp	r3, #1
 8017a96:	bf0c      	ite	eq
 8017a98:	2301      	moveq	r3, #1
 8017a9a:	2300      	movne	r3, #0
 8017a9c:	b2db      	uxtb	r3, r3
 8017a9e:	2b00      	cmp	r3, #0
 8017aa0:	d00a      	beq.n	8017ab8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017aa2:	6838      	ldr	r0, [r7, #0]
 8017aa4:	f7ed fffb 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8017aa8:	4603      	mov	r3, r0
 8017aaa:	681c      	ldr	r4, [r3, #0]
 8017aac:	6878      	ldr	r0, [r7, #4]
 8017aae:	f7f0 fdcb 	bl	8008648 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017ab2:	4603      	mov	r3, r0
 8017ab4:	601c      	str	r4, [r3, #0]
 8017ab6:	e007      	b.n	8017ac8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017ab8:	6838      	ldr	r0, [r7, #0]
 8017aba:	f7ed fff0 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8017abe:	4603      	mov	r3, r0
 8017ac0:	4619      	mov	r1, r3
 8017ac2:	6878      	ldr	r0, [r7, #4]
 8017ac4:	f000 fa09 	bl	8017eda <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 8017ac8:	687b      	ldr	r3, [r7, #4]
	}
 8017aca:	4618      	mov	r0, r3
 8017acc:	3714      	adds	r7, #20
 8017ace:	46bd      	mov	sp, r7
 8017ad0:	bd90      	pop	{r4, r7, pc}

08017ad2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 8017ad2:	b590      	push	{r4, r7, lr}
 8017ad4:	b085      	sub	sp, #20
 8017ad6:	af00      	add	r7, sp, #0
 8017ad8:	6078      	str	r0, [r7, #4]
 8017ada:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017adc:	2302      	movs	r3, #2
 8017ade:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017ae0:	6878      	ldr	r0, [r7, #4]
 8017ae2:	f7e9 fd13 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017ae6:	4603      	mov	r3, r0
 8017ae8:	2b02      	cmp	r3, #2
 8017aea:	bf0c      	ite	eq
 8017aec:	2301      	moveq	r3, #1
 8017aee:	2300      	movne	r3, #0
 8017af0:	b2db      	uxtb	r3, r3
 8017af2:	2b00      	cmp	r3, #0
 8017af4:	d00b      	beq.n	8017b0e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3c>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017af6:	6838      	ldr	r0, [r7, #0]
 8017af8:	f7ed fff3 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8017afc:	4603      	mov	r3, r0
 8017afe:	781c      	ldrb	r4, [r3, #0]
 8017b00:	6878      	ldr	r0, [r7, #4]
 8017b02:	f7e9 fd5d 	bl	80015c0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017b06:	4603      	mov	r3, r0
 8017b08:	4622      	mov	r2, r4
 8017b0a:	701a      	strb	r2, [r3, #0]
 8017b0c:	e007      	b.n	8017b1e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4c>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017b0e:	6838      	ldr	r0, [r7, #0]
 8017b10:	f7ed ffe7 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8017b14:	4603      	mov	r3, r0
 8017b16:	4619      	mov	r1, r3
 8017b18:	6878      	ldr	r0, [r7, #4]
 8017b1a:	f000 f9f7 	bl	8017f0c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJRbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 8017b1e:	687b      	ldr	r3, [r7, #4]
	}
 8017b20:	4618      	mov	r0, r3
 8017b22:	3714      	adds	r7, #20
 8017b24:	46bd      	mov	sp, r7
 8017b26:	bd90      	pop	{r4, r7, pc}

08017b28 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 8017b28:	b590      	push	{r4, r7, lr}
 8017b2a:	b08b      	sub	sp, #44	; 0x2c
 8017b2c:	af00      	add	r7, sp, #0
 8017b2e:	6078      	str	r0, [r7, #4]
 8017b30:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017b32:	2303      	movs	r3, #3
 8017b34:	627b      	str	r3, [r7, #36]	; 0x24
	  if (index() == __index)
 8017b36:	6878      	ldr	r0, [r7, #4]
 8017b38:	f7e9 fce8 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017b3c:	4603      	mov	r3, r0
 8017b3e:	2b03      	cmp	r3, #3
 8017b40:	bf0c      	ite	eq
 8017b42:	2301      	moveq	r3, #1
 8017b44:	2300      	movne	r3, #0
 8017b46:	b2db      	uxtb	r3, r3
 8017b48:	2b00      	cmp	r3, #0
 8017b4a:	d00c      	beq.n	8017b66 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017b4c:	6838      	ldr	r0, [r7, #0]
 8017b4e:	f7ed fff6 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017b52:	4604      	mov	r4, r0
 8017b54:	6878      	ldr	r0, [r7, #4]
 8017b56:	f7f0 fdeb 	bl	8008730 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017b5a:	4603      	mov	r3, r0
 8017b5c:	4621      	mov	r1, r4
 8017b5e:	4618      	mov	r0, r3
 8017b60:	f00a ff45 	bl	80229ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
 8017b64:	e014      	b.n	8017b90 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x68>
		operator=(variant(std::forward<_Tp>(__rhs)));
 8017b66:	6838      	ldr	r0, [r7, #0]
 8017b68:	f7ed ffe9 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017b6c:	4602      	mov	r2, r0
 8017b6e:	f107 0308 	add.w	r3, r7, #8
 8017b72:	4611      	mov	r1, r2
 8017b74:	4618      	mov	r0, r3
 8017b76:	f000 f9fb 	bl	8017f70 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRS5_vvS5_vEEOT_>
 8017b7a:	f107 0308 	add.w	r3, r7, #8
 8017b7e:	4619      	mov	r1, r3
 8017b80:	6878      	ldr	r0, [r7, #4]
 8017b82:	f7ed fab3 	bl	80050ec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 8017b86:	f107 0308 	add.w	r3, r7, #8
 8017b8a:	4618      	mov	r0, r3
 8017b8c:	f7e9 fc97 	bl	80014be <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
	  return *this;
 8017b90:	687b      	ldr	r3, [r7, #4]
	}
 8017b92:	4618      	mov	r0, r3
 8017b94:	372c      	adds	r7, #44	; 0x2c
 8017b96:	46bd      	mov	sp, r7
 8017b98:	bd90      	pop	{r4, r7, pc}

08017b9a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8017b9a:	b590      	push	{r4, r7, lr}
 8017b9c:	b085      	sub	sp, #20
 8017b9e:	af00      	add	r7, sp, #0
 8017ba0:	6078      	str	r0, [r7, #4]
 8017ba2:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017ba4:	2303      	movs	r3, #3
 8017ba6:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017ba8:	6878      	ldr	r0, [r7, #4]
 8017baa:	f7e9 fcaf 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017bae:	4603      	mov	r3, r0
 8017bb0:	2b03      	cmp	r3, #3
 8017bb2:	bf0c      	ite	eq
 8017bb4:	2301      	moveq	r3, #1
 8017bb6:	2300      	movne	r3, #0
 8017bb8:	b2db      	uxtb	r3, r3
 8017bba:	2b00      	cmp	r3, #0
 8017bbc:	d00c      	beq.n	8017bd8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017bbe:	6838      	ldr	r0, [r7, #0]
 8017bc0:	f7f0 fd89 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8017bc4:	4604      	mov	r4, r0
 8017bc6:	6878      	ldr	r0, [r7, #4]
 8017bc8:	f7f0 fdb2 	bl	8008730 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017bcc:	4603      	mov	r3, r0
 8017bce:	4621      	mov	r1, r4
 8017bd0:	4618      	mov	r0, r3
 8017bd2:	f00a ff12 	bl	80229fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8017bd6:	e007      	b.n	8017be8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017bd8:	6838      	ldr	r0, [r7, #0]
 8017bda:	f7f0 fd7c 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8017bde:	4603      	mov	r3, r0
 8017be0:	4619      	mov	r1, r3
 8017be2:	6878      	ldr	r0, [r7, #4]
 8017be4:	f7f0 faa1 	bl	800812a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8017be8:	687b      	ldr	r3, [r7, #4]
	}
 8017bea:	4618      	mov	r0, r3
 8017bec:	3714      	adds	r7, #20
 8017bee:	46bd      	mov	sp, r7
 8017bf0:	bd90      	pop	{r4, r7, pc}

08017bf2 <_ZNSaI6SymbolEC1Ev>:
 8017bf2:	b580      	push	{r7, lr}
 8017bf4:	b082      	sub	sp, #8
 8017bf6:	af00      	add	r7, sp, #0
 8017bf8:	6078      	str	r0, [r7, #4]
 8017bfa:	6878      	ldr	r0, [r7, #4]
 8017bfc:	f000 f9cb 	bl	8017f96 <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1Ev>
 8017c00:	687b      	ldr	r3, [r7, #4]
 8017c02:	4618      	mov	r0, r3
 8017c04:	3708      	adds	r7, #8
 8017c06:	46bd      	mov	sp, r7
 8017c08:	bd80      	pop	{r7, pc}

08017c0a <_ZNSt6vectorI6SymbolSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
 8017c0a:	b5b0      	push	{r4, r5, r7, lr}
 8017c0c:	b086      	sub	sp, #24
 8017c0e:	af00      	add	r7, sp, #0
 8017c10:	60f8      	str	r0, [r7, #12]
 8017c12:	1d38      	adds	r0, r7, #4
 8017c14:	e880 0006 	stmia.w	r0, {r1, r2}
 8017c18:	603b      	str	r3, [r7, #0]
      : _Base(__a)
 8017c1a:	68fb      	ldr	r3, [r7, #12]
 8017c1c:	6839      	ldr	r1, [r7, #0]
 8017c1e:	4618      	mov	r0, r3
 8017c20:	f7f1 f9fd 	bl	800901e <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
 8017c24:	1d3b      	adds	r3, r7, #4
 8017c26:	4618      	mov	r0, r3
 8017c28:	f000 f9c0 	bl	8017fac <_ZNKSt16initializer_listI6SymbolE5beginEv>
 8017c2c:	4604      	mov	r4, r0
 8017c2e:	1d3b      	adds	r3, r7, #4
 8017c30:	4618      	mov	r0, r3
 8017c32:	f000 f9c7 	bl	8017fc4 <_ZNKSt16initializer_listI6SymbolE3endEv>
 8017c36:	4602      	mov	r2, r0
 8017c38:	462b      	mov	r3, r5
 8017c3a:	4621      	mov	r1, r4
 8017c3c:	68f8      	ldr	r0, [r7, #12]
 8017c3e:	f000 f9e7 	bl	8018010 <_ZNSt6vectorI6SymbolSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
 8017c42:	68fb      	ldr	r3, [r7, #12]
 8017c44:	4618      	mov	r0, r3
 8017c46:	3718      	adds	r7, #24
 8017c48:	46bd      	mov	sp, r7
 8017c4a:	bdb0      	pop	{r4, r5, r7, pc}

08017c4c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8017c4c:	b590      	push	{r4, r7, lr}
 8017c4e:	b085      	sub	sp, #20
 8017c50:	af00      	add	r7, sp, #0
 8017c52:	6078      	str	r0, [r7, #4]
 8017c54:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017c56:	2304      	movs	r3, #4
 8017c58:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017c5a:	6878      	ldr	r0, [r7, #4]
 8017c5c:	f7e9 fc56 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017c60:	4603      	mov	r3, r0
 8017c62:	2b04      	cmp	r3, #4
 8017c64:	bf0c      	ite	eq
 8017c66:	2301      	moveq	r3, #1
 8017c68:	2300      	movne	r3, #0
 8017c6a:	b2db      	uxtb	r3, r3
 8017c6c:	2b00      	cmp	r3, #0
 8017c6e:	d00c      	beq.n	8017c8a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017c70:	6838      	ldr	r0, [r7, #0]
 8017c72:	f7f0 fdb7 	bl	80087e4 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 8017c76:	4604      	mov	r4, r0
 8017c78:	6878      	ldr	r0, [r7, #4]
 8017c7a:	f7f0 fdff 	bl	800887c <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017c7e:	4603      	mov	r3, r0
 8017c80:	4621      	mov	r1, r4
 8017c82:	4618      	mov	r0, r3
 8017c84:	f7f0 fa75 	bl	8008172 <_ZNSt6vectorI6SymbolSaIS0_EEaSEOS2_>
 8017c88:	e007      	b.n	8017c9a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017c8a:	6838      	ldr	r0, [r7, #0]
 8017c8c:	f7f0 fdaa 	bl	80087e4 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 8017c90:	4603      	mov	r3, r0
 8017c92:	4619      	mov	r1, r3
 8017c94:	6878      	ldr	r0, [r7, #4]
 8017c96:	f7f0 fa81 	bl	800819c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8017c9a:	687b      	ldr	r3, [r7, #4]
	}
 8017c9c:	4618      	mov	r0, r3
 8017c9e:	3714      	adds	r7, #20
 8017ca0:	46bd      	mov	sp, r7
 8017ca2:	bd90      	pop	{r4, r7, pc}

08017ca4 <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8017ca4:	b580      	push	{r7, lr}
 8017ca6:	b082      	sub	sp, #8
 8017ca8:	af00      	add	r7, sp, #0
 8017caa:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8017cac:	6878      	ldr	r0, [r7, #4]
 8017cae:	f7f0 fde5 	bl	800887c <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017cb2:	4603      	mov	r3, r0
    }
 8017cb4:	4618      	mov	r0, r3
 8017cb6:	3708      	adds	r7, #8
 8017cb8:	46bd      	mov	sp, r7
 8017cba:	bd80      	pop	{r7, pc}

08017cbc <_ZNSt6vectorI6SymbolSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8017cbc:	b480      	push	{r7}
 8017cbe:	b083      	sub	sp, #12
 8017cc0:	af00      	add	r7, sp, #0
 8017cc2:	6078      	str	r0, [r7, #4]
 8017cc4:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 8017cc6:	687b      	ldr	r3, [r7, #4]
 8017cc8:	681a      	ldr	r2, [r3, #0]
 8017cca:	683b      	ldr	r3, [r7, #0]
 8017ccc:	015b      	lsls	r3, r3, #5
 8017cce:	4413      	add	r3, r2
      }
 8017cd0:	4618      	mov	r0, r3
 8017cd2:	370c      	adds	r7, #12
 8017cd4:	46bd      	mov	sp, r7
 8017cd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017cda:	4770      	bx	lr

08017cdc <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8017cdc:	b580      	push	{r7, lr}
 8017cde:	b082      	sub	sp, #8
 8017ce0:	af00      	add	r7, sp, #0
 8017ce2:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8017ce4:	6878      	ldr	r0, [r7, #4]
 8017ce6:	f7f0 fd23 	bl	8008730 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017cea:	4603      	mov	r3, r0
    }
 8017cec:	4618      	mov	r0, r3
 8017cee:	3708      	adds	r7, #8
 8017cf0:	46bd      	mov	sp, r7
 8017cf2:	bd80      	pop	{r7, pc}

08017cf4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8017cf4:	b590      	push	{r4, r7, lr}
 8017cf6:	b085      	sub	sp, #20
 8017cf8:	af00      	add	r7, sp, #0
 8017cfa:	6078      	str	r0, [r7, #4]
 8017cfc:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017cfe:	2302      	movs	r3, #2
 8017d00:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017d02:	6878      	ldr	r0, [r7, #4]
 8017d04:	f7e9 fc02 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017d08:	4603      	mov	r3, r0
 8017d0a:	2b02      	cmp	r3, #2
 8017d0c:	bf0c      	ite	eq
 8017d0e:	2301      	moveq	r3, #1
 8017d10:	2300      	movne	r3, #0
 8017d12:	b2db      	uxtb	r3, r3
 8017d14:	2b00      	cmp	r3, #0
 8017d16:	d00b      	beq.n	8017d30 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3c>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017d18:	6838      	ldr	r0, [r7, #0]
 8017d1a:	f7f0 fcb1 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8017d1e:	4603      	mov	r3, r0
 8017d20:	781c      	ldrb	r4, [r3, #0]
 8017d22:	6878      	ldr	r0, [r7, #4]
 8017d24:	f7e9 fc4c 	bl	80015c0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017d28:	4603      	mov	r3, r0
 8017d2a:	4622      	mov	r2, r4
 8017d2c:	701a      	strb	r2, [r3, #0]
 8017d2e:	e007      	b.n	8017d40 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4c>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017d30:	6838      	ldr	r0, [r7, #0]
 8017d32:	f7f0 fca5 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8017d36:	4603      	mov	r3, r0
 8017d38:	4619      	mov	r1, r3
 8017d3a:	6878      	ldr	r0, [r7, #4]
 8017d3c:	f7f0 f9d1 	bl	80080e2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8017d40:	687b      	ldr	r3, [r7, #4]
	}
 8017d42:	4618      	mov	r0, r3
 8017d44:	3714      	adds	r7, #20
 8017d46:	46bd      	mov	sp, r7
 8017d48:	bd90      	pop	{r4, r7, pc}

08017d4a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8017d4a:	b590      	push	{r4, r7, lr}
 8017d4c:	b085      	sub	sp, #20
 8017d4e:	af00      	add	r7, sp, #0
 8017d50:	6078      	str	r0, [r7, #4]
 8017d52:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017d54:	2300      	movs	r3, #0
 8017d56:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017d58:	6878      	ldr	r0, [r7, #4]
 8017d5a:	f7e9 fbd7 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017d5e:	4603      	mov	r3, r0
 8017d60:	2b00      	cmp	r3, #0
 8017d62:	bf0c      	ite	eq
 8017d64:	2301      	moveq	r3, #1
 8017d66:	2300      	movne	r3, #0
 8017d68:	b2db      	uxtb	r3, r3
 8017d6a:	2b00      	cmp	r3, #0
 8017d6c:	d00a      	beq.n	8017d84 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017d6e:	6838      	ldr	r0, [r7, #0]
 8017d70:	f7f0 fc16 	bl	80085a0 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8017d74:	4603      	mov	r3, r0
 8017d76:	681c      	ldr	r4, [r3, #0]
 8017d78:	6878      	ldr	r0, [r7, #4]
 8017d7a:	f7e9 fdeb 	bl	8001954 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017d7e:	4603      	mov	r3, r0
 8017d80:	601c      	str	r4, [r3, #0]
 8017d82:	e007      	b.n	8017d94 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017d84:	6838      	ldr	r0, [r7, #0]
 8017d86:	f7f0 fc0b 	bl	80085a0 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8017d8a:	4603      	mov	r3, r0
 8017d8c:	4619      	mov	r1, r3
 8017d8e:	6878      	ldr	r0, [r7, #4]
 8017d90:	f7f0 f95f 	bl	8008052 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8017d94:	687b      	ldr	r3, [r7, #4]
	}
 8017d96:	4618      	mov	r0, r3
 8017d98:	3714      	adds	r7, #20
 8017d9a:	46bd      	mov	sp, r7
 8017d9c:	bd90      	pop	{r4, r7, pc}

08017d9e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8017d9e:	b590      	push	{r4, r7, lr}
 8017da0:	b085      	sub	sp, #20
 8017da2:	af00      	add	r7, sp, #0
 8017da4:	6078      	str	r0, [r7, #4]
 8017da6:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017da8:	2301      	movs	r3, #1
 8017daa:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017dac:	6878      	ldr	r0, [r7, #4]
 8017dae:	f7e9 fbad 	bl	800150c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017db2:	4603      	mov	r3, r0
 8017db4:	2b01      	cmp	r3, #1
 8017db6:	bf0c      	ite	eq
 8017db8:	2301      	moveq	r3, #1
 8017dba:	2300      	movne	r3, #0
 8017dbc:	b2db      	uxtb	r3, r3
 8017dbe:	2b00      	cmp	r3, #0
 8017dc0:	d00a      	beq.n	8017dd8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017dc2:	6838      	ldr	r0, [r7, #0]
 8017dc4:	f7f0 fc16 	bl	80085f4 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8017dc8:	4603      	mov	r3, r0
 8017dca:	681c      	ldr	r4, [r3, #0]
 8017dcc:	6878      	ldr	r0, [r7, #4]
 8017dce:	f7f0 fc3b 	bl	8008648 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017dd2:	4603      	mov	r3, r0
 8017dd4:	601c      	str	r4, [r3, #0]
 8017dd6:	e007      	b.n	8017de8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017dd8:	6838      	ldr	r0, [r7, #0]
 8017dda:	f7f0 fc0b 	bl	80085f4 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8017dde:	4603      	mov	r3, r0
 8017de0:	4619      	mov	r1, r3
 8017de2:	6878      	ldr	r0, [r7, #4]
 8017de4:	f7f0 f959 	bl	800809a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8017de8:	687b      	ldr	r3, [r7, #4]
	}
 8017dea:	4618      	mov	r0, r3
 8017dec:	3714      	adds	r7, #20
 8017dee:	46bd      	mov	sp, r7
 8017df0:	bd90      	pop	{r4, r7, pc}
	...

08017df4 <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj>:
    vector<_Tp, _Alloc>::
 8017df4:	b5b0      	push	{r4, r5, r7, lr}
 8017df6:	b084      	sub	sp, #16
 8017df8:	af00      	add	r7, sp, #0
 8017dfa:	6078      	str	r0, [r7, #4]
 8017dfc:	6039      	str	r1, [r7, #0]
      if (__n > this->max_size())
 8017dfe:	6878      	ldr	r0, [r7, #4]
 8017e00:	f000 f93f 	bl	8018082 <_ZNKSt6vectorI6SymbolSaIS0_EE8max_sizeEv>
 8017e04:	4602      	mov	r2, r0
 8017e06:	683b      	ldr	r3, [r7, #0]
 8017e08:	4293      	cmp	r3, r2
 8017e0a:	bf8c      	ite	hi
 8017e0c:	2301      	movhi	r3, #1
 8017e0e:	2300      	movls	r3, #0
 8017e10:	b2db      	uxtb	r3, r3
 8017e12:	2b00      	cmp	r3, #0
 8017e14:	d002      	beq.n	8017e1c <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj+0x28>
	__throw_length_error(__N("vector::reserve"));
 8017e16:	4823      	ldr	r0, [pc, #140]	; (8017ea4 <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj+0xb0>)
 8017e18:	f00a fc0f 	bl	802263a <_ZSt20__throw_length_errorPKc>
      if (this->capacity() < __n)
 8017e1c:	6878      	ldr	r0, [r7, #4]
 8017e1e:	f7ee fed4 	bl	8006bca <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>
 8017e22:	4602      	mov	r2, r0
 8017e24:	683b      	ldr	r3, [r7, #0]
 8017e26:	4293      	cmp	r3, r2
 8017e28:	bf8c      	ite	hi
 8017e2a:	2301      	movhi	r3, #1
 8017e2c:	2300      	movls	r3, #0
 8017e2e:	b2db      	uxtb	r3, r3
 8017e30:	2b00      	cmp	r3, #0
 8017e32:	d033      	beq.n	8017e9c <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj+0xa8>
	  const size_type __old_size = size();
 8017e34:	6878      	ldr	r0, [r7, #4]
 8017e36:	f7ee feb8 	bl	8006baa <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 8017e3a:	60f8      	str	r0, [r7, #12]
	      __tmp = this->_M_allocate(__n);
 8017e3c:	687b      	ldr	r3, [r7, #4]
 8017e3e:	6839      	ldr	r1, [r7, #0]
 8017e40:	4618      	mov	r0, r3
 8017e42:	f7ef fb0b 	bl	800745c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 8017e46:	60b8      	str	r0, [r7, #8]
	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
 8017e48:	687b      	ldr	r3, [r7, #4]
 8017e4a:	681c      	ldr	r4, [r3, #0]
 8017e4c:	687b      	ldr	r3, [r7, #4]
 8017e4e:	685d      	ldr	r5, [r3, #4]
			  __tmp, _M_get_Tp_allocator());
 8017e50:	687b      	ldr	r3, [r7, #4]
 8017e52:	4618      	mov	r0, r3
 8017e54:	f7ee fe58 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8017e58:	4603      	mov	r3, r0
	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
 8017e5a:	68ba      	ldr	r2, [r7, #8]
 8017e5c:	4629      	mov	r1, r5
 8017e5e:	4620      	mov	r0, r4
 8017e60:	f000 f920 	bl	80180a4 <_ZNSt6vectorI6SymbolSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	  _M_deallocate(this->_M_impl._M_start,
 8017e64:	6878      	ldr	r0, [r7, #4]
 8017e66:	687b      	ldr	r3, [r7, #4]
 8017e68:	6819      	ldr	r1, [r3, #0]
			this->_M_impl._M_end_of_storage
 8017e6a:	687b      	ldr	r3, [r7, #4]
 8017e6c:	689a      	ldr	r2, [r3, #8]
			- this->_M_impl._M_start);
 8017e6e:	687b      	ldr	r3, [r7, #4]
 8017e70:	681b      	ldr	r3, [r3, #0]
 8017e72:	1ad3      	subs	r3, r2, r3
 8017e74:	115b      	asrs	r3, r3, #5
	  _M_deallocate(this->_M_impl._M_start,
 8017e76:	461a      	mov	r2, r3
 8017e78:	f7ee fe76 	bl	8006b68 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
	  this->_M_impl._M_start = __tmp;
 8017e7c:	687b      	ldr	r3, [r7, #4]
 8017e7e:	68ba      	ldr	r2, [r7, #8]
 8017e80:	601a      	str	r2, [r3, #0]
	  this->_M_impl._M_finish = __tmp + __old_size;
 8017e82:	68fb      	ldr	r3, [r7, #12]
 8017e84:	015b      	lsls	r3, r3, #5
 8017e86:	68ba      	ldr	r2, [r7, #8]
 8017e88:	441a      	add	r2, r3
 8017e8a:	687b      	ldr	r3, [r7, #4]
 8017e8c:	605a      	str	r2, [r3, #4]
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 8017e8e:	687b      	ldr	r3, [r7, #4]
 8017e90:	681a      	ldr	r2, [r3, #0]
 8017e92:	683b      	ldr	r3, [r7, #0]
 8017e94:	015b      	lsls	r3, r3, #5
 8017e96:	441a      	add	r2, r3
 8017e98:	687b      	ldr	r3, [r7, #4]
 8017e9a:	609a      	str	r2, [r3, #8]
    }
 8017e9c:	bf00      	nop
 8017e9e:	3710      	adds	r7, #16
 8017ea0:	46bd      	mov	sp, r7
 8017ea2:	bdb0      	pop	{r4, r5, r7, pc}
 8017ea4:	08027a10 	.word	0x08027a10

08017ea8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 8017ea8:	b580      	push	{r7, lr}
 8017eaa:	b082      	sub	sp, #8
 8017eac:	af00      	add	r7, sp, #0
 8017eae:	6078      	str	r0, [r7, #4]
 8017eb0:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8017eb2:	687b      	ldr	r3, [r7, #4]
 8017eb4:	4618      	mov	r0, r3
 8017eb6:	f7ea fff1 	bl	8002e9c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8017eba:	6838      	ldr	r0, [r7, #0]
 8017ebc:	f7ed fdcd 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8017ec0:	4603      	mov	r3, r0
 8017ec2:	4619      	mov	r1, r3
 8017ec4:	6878      	ldr	r0, [r7, #4]
 8017ec6:	f000 f901 	bl	80180cc <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8017eca:	6878      	ldr	r0, [r7, #4]
 8017ecc:	f7e9 fd42 	bl	8001954 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017ed0:	4603      	mov	r3, r0
	}
 8017ed2:	4618      	mov	r0, r3
 8017ed4:	3708      	adds	r7, #8
 8017ed6:	46bd      	mov	sp, r7
 8017ed8:	bd80      	pop	{r7, pc}

08017eda <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 8017eda:	b580      	push	{r7, lr}
 8017edc:	b082      	sub	sp, #8
 8017ede:	af00      	add	r7, sp, #0
 8017ee0:	6078      	str	r0, [r7, #4]
 8017ee2:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8017ee4:	687b      	ldr	r3, [r7, #4]
 8017ee6:	4618      	mov	r0, r3
 8017ee8:	f7ea ffd8 	bl	8002e9c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8017eec:	6838      	ldr	r0, [r7, #0]
 8017eee:	f7ed fdd6 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8017ef2:	4603      	mov	r3, r0
 8017ef4:	4619      	mov	r1, r3
 8017ef6:	6878      	ldr	r0, [r7, #4]
 8017ef8:	f000 f907 	bl	801810a <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8017efc:	6878      	ldr	r0, [r7, #4]
 8017efe:	f7f0 fba3 	bl	8008648 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017f02:	4603      	mov	r3, r0
	}
 8017f04:	4618      	mov	r0, r3
 8017f06:	3708      	adds	r7, #8
 8017f08:	46bd      	mov	sp, r7
 8017f0a:	bd80      	pop	{r7, pc}

08017f0c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJRbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 8017f0c:	b580      	push	{r7, lr}
 8017f0e:	b082      	sub	sp, #8
 8017f10:	af00      	add	r7, sp, #0
 8017f12:	6078      	str	r0, [r7, #4]
 8017f14:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8017f16:	687b      	ldr	r3, [r7, #4]
 8017f18:	4618      	mov	r0, r3
 8017f1a:	f7ea ffbf 	bl	8002e9c <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8017f1e:	6838      	ldr	r0, [r7, #0]
 8017f20:	f7ed fddf 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8017f24:	4603      	mov	r3, r0
 8017f26:	4619      	mov	r1, r3
 8017f28:	6878      	ldr	r0, [r7, #4]
 8017f2a:	f000 f90d 	bl	8018148 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8017f2e:	6878      	ldr	r0, [r7, #4]
 8017f30:	f7e9 fb46 	bl	80015c0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017f34:	4603      	mov	r3, r0
	}
 8017f36:	4618      	mov	r0, r3
 8017f38:	3708      	adds	r7, #8
 8017f3a:	46bd      	mov	sp, r7
 8017f3c:	bd80      	pop	{r7, pc}

08017f3e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 8017f3e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017f40:	b085      	sub	sp, #20
 8017f42:	af00      	add	r7, sp, #0
 8017f44:	60f8      	str	r0, [r7, #12]
 8017f46:	7239      	strb	r1, [r7, #8]
 8017f48:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 8017f4a:	68fc      	ldr	r4, [r7, #12]
 8017f4c:	6878      	ldr	r0, [r7, #4]
 8017f4e:	f7ed fdf6 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017f52:	4603      	mov	r3, r0
 8017f54:	461a      	mov	r2, r3
 8017f56:	4631      	mov	r1, r6
 8017f58:	4620      	mov	r0, r4
 8017f5a:	f000 f959 	bl	8018210 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8017f5e:	4629      	mov	r1, r5
 8017f60:	68f8      	ldr	r0, [r7, #12]
 8017f62:	f7ee fd0e 	bl	8006982 <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 8017f66:	68fb      	ldr	r3, [r7, #12]
 8017f68:	4618      	mov	r0, r3
 8017f6a:	3714      	adds	r7, #20
 8017f6c:	46bd      	mov	sp, r7
 8017f6e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017f70 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRS5_vvS5_vEEOT_>:
	variant(_Tp&& __t)
 8017f70:	b590      	push	{r4, r7, lr}
 8017f72:	b083      	sub	sp, #12
 8017f74:	af00      	add	r7, sp, #0
 8017f76:	6078      	str	r0, [r7, #4]
 8017f78:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 8017f7a:	6838      	ldr	r0, [r7, #0]
 8017f7c:	f7ed fddf 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017f80:	4603      	mov	r3, r0
 8017f82:	461a      	mov	r2, r3
 8017f84:	4621      	mov	r1, r4
 8017f86:	6878      	ldr	r0, [r7, #4]
 8017f88:	f7ff ffd9 	bl	8017f3e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8017f8c:	687b      	ldr	r3, [r7, #4]
 8017f8e:	4618      	mov	r0, r3
 8017f90:	370c      	adds	r7, #12
 8017f92:	46bd      	mov	sp, r7
 8017f94:	bd90      	pop	{r4, r7, pc}

08017f96 <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8017f96:	b480      	push	{r7}
 8017f98:	b083      	sub	sp, #12
 8017f9a:	af00      	add	r7, sp, #0
 8017f9c:	6078      	str	r0, [r7, #4]
 8017f9e:	687b      	ldr	r3, [r7, #4]
 8017fa0:	4618      	mov	r0, r3
 8017fa2:	370c      	adds	r7, #12
 8017fa4:	46bd      	mov	sp, r7
 8017fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017faa:	4770      	bx	lr

08017fac <_ZNKSt16initializer_listI6SymbolE5beginEv>:
      begin() const noexcept { return _M_array; }
 8017fac:	b480      	push	{r7}
 8017fae:	b083      	sub	sp, #12
 8017fb0:	af00      	add	r7, sp, #0
 8017fb2:	6078      	str	r0, [r7, #4]
 8017fb4:	687b      	ldr	r3, [r7, #4]
 8017fb6:	681b      	ldr	r3, [r3, #0]
 8017fb8:	4618      	mov	r0, r3
 8017fba:	370c      	adds	r7, #12
 8017fbc:	46bd      	mov	sp, r7
 8017fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017fc2:	4770      	bx	lr

08017fc4 <_ZNKSt16initializer_listI6SymbolE3endEv>:
      end() const noexcept { return begin() + size(); }
 8017fc4:	b590      	push	{r4, r7, lr}
 8017fc6:	b083      	sub	sp, #12
 8017fc8:	af00      	add	r7, sp, #0
 8017fca:	6078      	str	r0, [r7, #4]
 8017fcc:	6878      	ldr	r0, [r7, #4]
 8017fce:	f7ff ffed 	bl	8017fac <_ZNKSt16initializer_listI6SymbolE5beginEv>
 8017fd2:	4604      	mov	r4, r0
 8017fd4:	6878      	ldr	r0, [r7, #4]
 8017fd6:	f000 f930 	bl	801823a <_ZNKSt16initializer_listI6SymbolE4sizeEv>
 8017fda:	4603      	mov	r3, r0
 8017fdc:	015b      	lsls	r3, r3, #5
 8017fde:	4423      	add	r3, r4
 8017fe0:	4618      	mov	r0, r3
 8017fe2:	370c      	adds	r7, #12
 8017fe4:	46bd      	mov	sp, r7
 8017fe6:	bd90      	pop	{r4, r7, pc}

08017fe8 <_ZSt8distanceIPK6SymbolENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
 8017fe8:	b5b0      	push	{r4, r5, r7, lr}
 8017fea:	b082      	sub	sp, #8
 8017fec:	af00      	add	r7, sp, #0
 8017fee:	6078      	str	r0, [r7, #4]
 8017ff0:	6039      	str	r1, [r7, #0]
      return std::__distance(__first, __last,
 8017ff2:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 8017ff4:	1d3b      	adds	r3, r7, #4
 8017ff6:	4618      	mov	r0, r3
 8017ff8:	f000 f92b 	bl	8018252 <_ZSt19__iterator_categoryIPK6SymbolENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
 8017ffc:	462a      	mov	r2, r5
 8017ffe:	6839      	ldr	r1, [r7, #0]
 8018000:	4620      	mov	r0, r4
 8018002:	f000 f930 	bl	8018266 <_ZSt10__distanceIPK6SymbolENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
 8018006:	4603      	mov	r3, r0
    }
 8018008:	4618      	mov	r0, r3
 801800a:	3708      	adds	r7, #8
 801800c:	46bd      	mov	sp, r7
 801800e:	bdb0      	pop	{r4, r5, r7, pc}

08018010 <_ZNSt6vectorI6SymbolSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
 8018010:	b590      	push	{r4, r7, lr}
 8018012:	b087      	sub	sp, #28
 8018014:	af00      	add	r7, sp, #0
 8018016:	60f8      	str	r0, [r7, #12]
 8018018:	60b9      	str	r1, [r7, #8]
 801801a:	607a      	str	r2, [r7, #4]
 801801c:	703b      	strb	r3, [r7, #0]
	  const size_type __n = std::distance(__first, __last);
 801801e:	6879      	ldr	r1, [r7, #4]
 8018020:	68b8      	ldr	r0, [r7, #8]
 8018022:	f7ff ffe1 	bl	8017fe8 <_ZSt8distanceIPK6SymbolENSt15iterator_traitsIT_E15difference_typeES4_S4_>
 8018026:	4603      	mov	r3, r0
 8018028:	617b      	str	r3, [r7, #20]
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
 801802a:	68fc      	ldr	r4, [r7, #12]
 801802c:	68fb      	ldr	r3, [r7, #12]
 801802e:	4618      	mov	r0, r3
 8018030:	f7ee fd6a 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8018034:	4603      	mov	r3, r0
 8018036:	4619      	mov	r1, r3
 8018038:	6978      	ldr	r0, [r7, #20]
 801803a:	f000 f925 	bl	8018288 <_ZNSt6vectorI6SymbolSaIS0_EE17_S_check_init_lenEjRKS1_>
 801803e:	4603      	mov	r3, r0
 8018040:	4619      	mov	r1, r3
 8018042:	4620      	mov	r0, r4
 8018044:	f7ef fa0a 	bl	800745c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 8018048:	4602      	mov	r2, r0
	  this->_M_impl._M_start
 801804a:	68fb      	ldr	r3, [r7, #12]
 801804c:	601a      	str	r2, [r3, #0]
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 801804e:	68fb      	ldr	r3, [r7, #12]
 8018050:	681a      	ldr	r2, [r3, #0]
 8018052:	697b      	ldr	r3, [r7, #20]
 8018054:	015b      	lsls	r3, r3, #5
 8018056:	441a      	add	r2, r3
 8018058:	68fb      	ldr	r3, [r7, #12]
 801805a:	609a      	str	r2, [r3, #8]
	    std::__uninitialized_copy_a(__first, __last,
 801805c:	68fb      	ldr	r3, [r7, #12]
 801805e:	681c      	ldr	r4, [r3, #0]
					_M_get_Tp_allocator());
 8018060:	68fb      	ldr	r3, [r7, #12]
 8018062:	4618      	mov	r0, r3
 8018064:	f7ee fd50 	bl	8006b08 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8018068:	4603      	mov	r3, r0
	    std::__uninitialized_copy_a(__first, __last,
 801806a:	4622      	mov	r2, r4
 801806c:	6879      	ldr	r1, [r7, #4]
 801806e:	68b8      	ldr	r0, [r7, #8]
 8018070:	f000 f932 	bl	80182d8 <_ZSt22__uninitialized_copy_aIPK6SymbolPS0_S0_ET0_T_S5_S4_RSaIT1_E>
 8018074:	4602      	mov	r2, r0
	  this->_M_impl._M_finish =
 8018076:	68fb      	ldr	r3, [r7, #12]
 8018078:	605a      	str	r2, [r3, #4]
	}
 801807a:	bf00      	nop
 801807c:	371c      	adds	r7, #28
 801807e:	46bd      	mov	sp, r7
 8018080:	bd90      	pop	{r4, r7, pc}

08018082 <_ZNKSt6vectorI6SymbolSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8018082:	b580      	push	{r7, lr}
 8018084:	b082      	sub	sp, #8
 8018086:	af00      	add	r7, sp, #0
 8018088:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801808a:	687b      	ldr	r3, [r7, #4]
 801808c:	4618      	mov	r0, r3
 801808e:	f7ee fd46 	bl	8006b1e <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8018092:	4603      	mov	r3, r0
 8018094:	4618      	mov	r0, r3
 8018096:	f000 f930 	bl	80182fa <_ZNSt6vectorI6SymbolSaIS0_EE11_S_max_sizeERKS1_>
 801809a:	4603      	mov	r3, r0
 801809c:	4618      	mov	r0, r3
 801809e:	3708      	adds	r7, #8
 80180a0:	46bd      	mov	sp, r7
 80180a2:	bd80      	pop	{r7, pc}

080180a4 <_ZNSt6vectorI6SymbolSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 80180a4:	b590      	push	{r4, r7, lr}
 80180a6:	b089      	sub	sp, #36	; 0x24
 80180a8:	af02      	add	r7, sp, #8
 80180aa:	60f8      	str	r0, [r7, #12]
 80180ac:	60b9      	str	r1, [r7, #8]
 80180ae:	607a      	str	r2, [r7, #4]
 80180b0:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 80180b2:	f88d 4000 	strb.w	r4, [sp]
 80180b6:	683b      	ldr	r3, [r7, #0]
 80180b8:	687a      	ldr	r2, [r7, #4]
 80180ba:	68b9      	ldr	r1, [r7, #8]
 80180bc:	68f8      	ldr	r0, [r7, #12]
 80180be:	f000 f936 	bl	801832e <_ZNSt6vectorI6SymbolSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 80180c2:	4603      	mov	r3, r0
      }
 80180c4:	4618      	mov	r0, r3
 80180c6:	371c      	adds	r7, #28
 80180c8:	46bd      	mov	sp, r7
 80180ca:	bd90      	pop	{r4, r7, pc}

080180cc <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80180cc:	b590      	push	{r4, r7, lr}
 80180ce:	b085      	sub	sp, #20
 80180d0:	af00      	add	r7, sp, #0
 80180d2:	6078      	str	r0, [r7, #4]
 80180d4:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80180d6:	687b      	ldr	r3, [r7, #4]
 80180d8:	2200      	movs	r2, #0
 80180da:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80180dc:	6878      	ldr	r0, [r7, #4]
 80180de:	f7e9 fc28 	bl	8001932 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80180e2:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80180e4:	6838      	ldr	r0, [r7, #0]
 80180e6:	f7ed fcb8 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80180ea:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80180ec:	681c      	ldr	r4, [r3, #0]
 80180ee:	68f8      	ldr	r0, [r7, #12]
 80180f0:	f7f0 fc9a 	bl	8008a28 <_ZSt9addressofIiEPT_RS0_>
 80180f4:	4603      	mov	r3, r0
 80180f6:	4619      	mov	r1, r3
 80180f8:	2004      	movs	r0, #4
 80180fa:	f7e8 ffae 	bl	800105a <_ZnwjPv>
 80180fe:	4603      	mov	r3, r0
 8018100:	601c      	str	r4, [r3, #0]
    }
 8018102:	bf00      	nop
 8018104:	3714      	adds	r7, #20
 8018106:	46bd      	mov	sp, r7
 8018108:	bd90      	pop	{r4, r7, pc}

0801810a <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801810a:	b590      	push	{r4, r7, lr}
 801810c:	b085      	sub	sp, #20
 801810e:	af00      	add	r7, sp, #0
 8018110:	6078      	str	r0, [r7, #4]
 8018112:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8018114:	687b      	ldr	r3, [r7, #4]
 8018116:	2201      	movs	r2, #1
 8018118:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801811a:	6878      	ldr	r0, [r7, #4]
 801811c:	f7eb fbd8 	bl	80038d0 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8018120:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8018122:	6838      	ldr	r0, [r7, #0]
 8018124:	f7ed fcbb 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8018128:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801812a:	681c      	ldr	r4, [r3, #0]
 801812c:	68f8      	ldr	r0, [r7, #12]
 801812e:	f7f0 fc87 	bl	8008a40 <_ZSt9addressofIfEPT_RS0_>
 8018132:	4603      	mov	r3, r0
 8018134:	4619      	mov	r1, r3
 8018136:	2004      	movs	r0, #4
 8018138:	f7e8 ff8f 	bl	800105a <_ZnwjPv>
 801813c:	4603      	mov	r3, r0
 801813e:	601c      	str	r4, [r3, #0]
    }
 8018140:	bf00      	nop
 8018142:	3714      	adds	r7, #20
 8018144:	46bd      	mov	sp, r7
 8018146:	bd90      	pop	{r4, r7, pc}

08018148 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8018148:	b590      	push	{r4, r7, lr}
 801814a:	b085      	sub	sp, #20
 801814c:	af00      	add	r7, sp, #0
 801814e:	6078      	str	r0, [r7, #4]
 8018150:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8018152:	687b      	ldr	r3, [r7, #4]
 8018154:	2202      	movs	r2, #2
 8018156:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8018158:	6878      	ldr	r0, [r7, #4]
 801815a:	f7e9 fa1f 	bl	800159c <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 801815e:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8018160:	6838      	ldr	r0, [r7, #0]
 8018162:	f7ed fcbe 	bl	8005ae2 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8018166:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8018168:	781c      	ldrb	r4, [r3, #0]
 801816a:	68f8      	ldr	r0, [r7, #12]
 801816c:	f7f0 fc74 	bl	8008a58 <_ZSt9addressofIbEPT_RS0_>
 8018170:	4603      	mov	r3, r0
 8018172:	4619      	mov	r1, r3
 8018174:	2001      	movs	r0, #1
 8018176:	f7e8 ff70 	bl	800105a <_ZnwjPv>
 801817a:	4603      	mov	r3, r0
 801817c:	4622      	mov	r2, r4
 801817e:	701a      	strb	r2, [r3, #0]
    }
 8018180:	bf00      	nop
 8018182:	3714      	adds	r7, #20
 8018184:	46bd      	mov	sp, r7
 8018186:	bd90      	pop	{r4, r7, pc}

08018188 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8018188:	b590      	push	{r4, r7, lr}
 801818a:	b085      	sub	sp, #20
 801818c:	af00      	add	r7, sp, #0
 801818e:	60f8      	str	r0, [r7, #12]
 8018190:	7239      	strb	r1, [r7, #8]
 8018192:	607a      	str	r2, [r7, #4]
 8018194:	68fb      	ldr	r3, [r7, #12]
 8018196:	687a      	ldr	r2, [r7, #4]
 8018198:	4621      	mov	r1, r4
 801819a:	4618      	mov	r0, r3
 801819c:	f000 f94a 	bl	8018434 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 80181a0:	68fb      	ldr	r3, [r7, #12]
 80181a2:	4618      	mov	r0, r3
 80181a4:	3714      	adds	r7, #20
 80181a6:	46bd      	mov	sp, r7
 80181a8:	bd90      	pop	{r4, r7, pc}

080181aa <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80181aa:	b590      	push	{r4, r7, lr}
 80181ac:	b085      	sub	sp, #20
 80181ae:	af00      	add	r7, sp, #0
 80181b0:	60f8      	str	r0, [r7, #12]
 80181b2:	7239      	strb	r1, [r7, #8]
 80181b4:	607a      	str	r2, [r7, #4]
 80181b6:	68fb      	ldr	r3, [r7, #12]
 80181b8:	687a      	ldr	r2, [r7, #4]
 80181ba:	4621      	mov	r1, r4
 80181bc:	4618      	mov	r0, r3
 80181be:	f7ff ffe3 	bl	8018188 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 80181c2:	68fb      	ldr	r3, [r7, #12]
 80181c4:	4618      	mov	r0, r3
 80181c6:	3714      	adds	r7, #20
 80181c8:	46bd      	mov	sp, r7
 80181ca:	bd90      	pop	{r4, r7, pc}

080181cc <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80181cc:	b590      	push	{r4, r7, lr}
 80181ce:	b085      	sub	sp, #20
 80181d0:	af00      	add	r7, sp, #0
 80181d2:	60f8      	str	r0, [r7, #12]
 80181d4:	7239      	strb	r1, [r7, #8]
 80181d6:	607a      	str	r2, [r7, #4]
 80181d8:	68fb      	ldr	r3, [r7, #12]
 80181da:	687a      	ldr	r2, [r7, #4]
 80181dc:	4621      	mov	r1, r4
 80181de:	4618      	mov	r0, r3
 80181e0:	f7ff ffe3 	bl	80181aa <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 80181e4:	68fb      	ldr	r3, [r7, #12]
 80181e6:	4618      	mov	r0, r3
 80181e8:	3714      	adds	r7, #20
 80181ea:	46bd      	mov	sp, r7
 80181ec:	bd90      	pop	{r4, r7, pc}

080181ee <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80181ee:	b590      	push	{r4, r7, lr}
 80181f0:	b085      	sub	sp, #20
 80181f2:	af00      	add	r7, sp, #0
 80181f4:	60f8      	str	r0, [r7, #12]
 80181f6:	7239      	strb	r1, [r7, #8]
 80181f8:	607a      	str	r2, [r7, #4]
 80181fa:	68fb      	ldr	r3, [r7, #12]
 80181fc:	687a      	ldr	r2, [r7, #4]
 80181fe:	4621      	mov	r1, r4
 8018200:	4618      	mov	r0, r3
 8018202:	f7ff ffe3 	bl	80181cc <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8018206:	68fb      	ldr	r3, [r7, #12]
 8018208:	4618      	mov	r0, r3
 801820a:	3714      	adds	r7, #20
 801820c:	46bd      	mov	sp, r7
 801820e:	bd90      	pop	{r4, r7, pc}

08018210 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8018210:	b5b0      	push	{r4, r5, r7, lr}
 8018212:	b084      	sub	sp, #16
 8018214:	af00      	add	r7, sp, #0
 8018216:	60f8      	str	r0, [r7, #12]
 8018218:	7239      	strb	r1, [r7, #8]
 801821a:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 801821c:	68fc      	ldr	r4, [r7, #12]
 801821e:	6878      	ldr	r0, [r7, #4]
 8018220:	f7ed fc8d 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018224:	4603      	mov	r3, r0
 8018226:	461a      	mov	r2, r3
 8018228:	4629      	mov	r1, r5
 801822a:	4620      	mov	r0, r4
 801822c:	f7ff ffdf 	bl	80181ee <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8018230:	68fb      	ldr	r3, [r7, #12]
 8018232:	4618      	mov	r0, r3
 8018234:	3710      	adds	r7, #16
 8018236:	46bd      	mov	sp, r7
 8018238:	bdb0      	pop	{r4, r5, r7, pc}

0801823a <_ZNKSt16initializer_listI6SymbolE4sizeEv>:
      size() const noexcept { return _M_len; }
 801823a:	b480      	push	{r7}
 801823c:	b083      	sub	sp, #12
 801823e:	af00      	add	r7, sp, #0
 8018240:	6078      	str	r0, [r7, #4]
 8018242:	687b      	ldr	r3, [r7, #4]
 8018244:	685b      	ldr	r3, [r3, #4]
 8018246:	4618      	mov	r0, r3
 8018248:	370c      	adds	r7, #12
 801824a:	46bd      	mov	sp, r7
 801824c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018250:	4770      	bx	lr

08018252 <_ZSt19__iterator_categoryIPK6SymbolENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
 8018252:	b480      	push	{r7}
 8018254:	b083      	sub	sp, #12
 8018256:	af00      	add	r7, sp, #0
 8018258:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 801825a:	4618      	mov	r0, r3
 801825c:	370c      	adds	r7, #12
 801825e:	46bd      	mov	sp, r7
 8018260:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018264:	4770      	bx	lr

08018266 <_ZSt10__distanceIPK6SymbolENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 8018266:	b480      	push	{r7}
 8018268:	b085      	sub	sp, #20
 801826a:	af00      	add	r7, sp, #0
 801826c:	60f8      	str	r0, [r7, #12]
 801826e:	60b9      	str	r1, [r7, #8]
 8018270:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 8018272:	68ba      	ldr	r2, [r7, #8]
 8018274:	68fb      	ldr	r3, [r7, #12]
 8018276:	1ad3      	subs	r3, r2, r3
 8018278:	115b      	asrs	r3, r3, #5
    }
 801827a:	4618      	mov	r0, r3
 801827c:	3714      	adds	r7, #20
 801827e:	46bd      	mov	sp, r7
 8018280:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018284:	4770      	bx	lr
	...

08018288 <_ZNSt6vectorI6SymbolSaIS0_EE17_S_check_init_lenEjRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
 8018288:	b590      	push	{r4, r7, lr}
 801828a:	b085      	sub	sp, #20
 801828c:	af00      	add	r7, sp, #0
 801828e:	6078      	str	r0, [r7, #4]
 8018290:	6039      	str	r1, [r7, #0]
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 8018292:	f107 030c 	add.w	r3, r7, #12
 8018296:	6839      	ldr	r1, [r7, #0]
 8018298:	4618      	mov	r0, r3
 801829a:	f7f0 fe9e 	bl	8008fda <_ZNSaI6SymbolEC1ERKS0_>
 801829e:	f107 030c 	add.w	r3, r7, #12
 80182a2:	4618      	mov	r0, r3
 80182a4:	f000 f829 	bl	80182fa <_ZNSt6vectorI6SymbolSaIS0_EE11_S_max_sizeERKS1_>
 80182a8:	4602      	mov	r2, r0
 80182aa:	687b      	ldr	r3, [r7, #4]
 80182ac:	4293      	cmp	r3, r2
 80182ae:	bf8c      	ite	hi
 80182b0:	2301      	movhi	r3, #1
 80182b2:	2300      	movls	r3, #0
 80182b4:	b2dc      	uxtb	r4, r3
 80182b6:	f107 030c 	add.w	r3, r7, #12
 80182ba:	4618      	mov	r0, r3
 80182bc:	f7f0 f926 	bl	800850c <_ZNSaI6SymbolED1Ev>
 80182c0:	2c00      	cmp	r4, #0
 80182c2:	d002      	beq.n	80182ca <_ZNSt6vectorI6SymbolSaIS0_EE17_S_check_init_lenEjRKS1_+0x42>
	  __throw_length_error(
 80182c4:	4803      	ldr	r0, [pc, #12]	; (80182d4 <_ZNSt6vectorI6SymbolSaIS0_EE17_S_check_init_lenEjRKS1_+0x4c>)
 80182c6:	f00a f9b8 	bl	802263a <_ZSt20__throw_length_errorPKc>
	return __n;
 80182ca:	687b      	ldr	r3, [r7, #4]
      }
 80182cc:	4618      	mov	r0, r3
 80182ce:	3714      	adds	r7, #20
 80182d0:	46bd      	mov	sp, r7
 80182d2:	bd90      	pop	{r4, r7, pc}
 80182d4:	08027a20 	.word	0x08027a20

080182d8 <_ZSt22__uninitialized_copy_aIPK6SymbolPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 80182d8:	b580      	push	{r7, lr}
 80182da:	b084      	sub	sp, #16
 80182dc:	af00      	add	r7, sp, #0
 80182de:	60f8      	str	r0, [r7, #12]
 80182e0:	60b9      	str	r1, [r7, #8]
 80182e2:	607a      	str	r2, [r7, #4]
 80182e4:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 80182e6:	687a      	ldr	r2, [r7, #4]
 80182e8:	68b9      	ldr	r1, [r7, #8]
 80182ea:	68f8      	ldr	r0, [r7, #12]
 80182ec:	f000 f8ba 	bl	8018464 <_ZSt18uninitialized_copyIPK6SymbolPS0_ET0_T_S5_S4_>
 80182f0:	4603      	mov	r3, r0
 80182f2:	4618      	mov	r0, r3
 80182f4:	3710      	adds	r7, #16
 80182f6:	46bd      	mov	sp, r7
 80182f8:	bd80      	pop	{r7, pc}

080182fa <_ZNSt6vectorI6SymbolSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 80182fa:	b580      	push	{r7, lr}
 80182fc:	b084      	sub	sp, #16
 80182fe:	af00      	add	r7, sp, #0
 8018300:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8018302:	f06f 437c 	mvn.w	r3, #4227858432	; 0xfc000000
 8018306:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8018308:	6878      	ldr	r0, [r7, #4]
 801830a:	f000 f8bd 	bl	8018488 <_ZNSt16allocator_traitsISaI6SymbolEE8max_sizeERKS1_>
 801830e:	4603      	mov	r3, r0
 8018310:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8018312:	f107 0208 	add.w	r2, r7, #8
 8018316:	f107 030c 	add.w	r3, r7, #12
 801831a:	4611      	mov	r1, r2
 801831c:	4618      	mov	r0, r3
 801831e:	f7fd fd8f 	bl	8015e40 <_ZSt3minIjERKT_S2_S2_>
 8018322:	4603      	mov	r3, r0
 8018324:	681b      	ldr	r3, [r3, #0]
      }
 8018326:	4618      	mov	r0, r3
 8018328:	3710      	adds	r7, #16
 801832a:	46bd      	mov	sp, r7
 801832c:	bd80      	pop	{r7, pc}

0801832e <_ZNSt6vectorI6SymbolSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801832e:	b580      	push	{r7, lr}
 8018330:	b084      	sub	sp, #16
 8018332:	af00      	add	r7, sp, #0
 8018334:	60f8      	str	r0, [r7, #12]
 8018336:	60b9      	str	r1, [r7, #8]
 8018338:	607a      	str	r2, [r7, #4]
 801833a:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801833c:	683b      	ldr	r3, [r7, #0]
 801833e:	687a      	ldr	r2, [r7, #4]
 8018340:	68b9      	ldr	r1, [r7, #8]
 8018342:	68f8      	ldr	r0, [r7, #12]
 8018344:	f000 f8ac 	bl	80184a0 <_ZSt12__relocate_aIP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>
 8018348:	4603      	mov	r3, r0
      }
 801834a:	4618      	mov	r0, r3
 801834c:	3710      	adds	r7, #16
 801834e:	46bd      	mov	sp, r7
 8018350:	bd80      	pop	{r7, pc}

08018352 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8018352:	b590      	push	{r4, r7, lr}
 8018354:	b085      	sub	sp, #20
 8018356:	af00      	add	r7, sp, #0
 8018358:	60f8      	str	r0, [r7, #12]
 801835a:	7239      	strb	r1, [r7, #8]
 801835c:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 801835e:	6878      	ldr	r0, [r7, #4]
 8018360:	f7ed fbed 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018364:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 8018366:	68fb      	ldr	r3, [r7, #12]
 8018368:	4618      	mov	r0, r3
 801836a:	f7ef fa96 	bl	800789a <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 801836e:	4603      	mov	r3, r0
 8018370:	4619      	mov	r1, r3
 8018372:	2018      	movs	r0, #24
 8018374:	f7e8 fe71 	bl	800105a <_ZnwjPv>
 8018378:	4603      	mov	r3, r0
 801837a:	4621      	mov	r1, r4
 801837c:	4618      	mov	r0, r3
 801837e:	f00a fcf5 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	}
 8018382:	68fb      	ldr	r3, [r7, #12]
 8018384:	4618      	mov	r0, r3
 8018386:	3714      	adds	r7, #20
 8018388:	46bd      	mov	sp, r7
 801838a:	bd90      	pop	{r4, r7, pc}

0801838c <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801838c:	b5b0      	push	{r4, r5, r7, lr}
 801838e:	b084      	sub	sp, #16
 8018390:	af00      	add	r7, sp, #0
 8018392:	60f8      	str	r0, [r7, #12]
 8018394:	7239      	strb	r1, [r7, #8]
 8018396:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8018398:	68fc      	ldr	r4, [r7, #12]
 801839a:	6878      	ldr	r0, [r7, #4]
 801839c:	f7ed fbcf 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80183a0:	4603      	mov	r3, r0
 80183a2:	461a      	mov	r2, r3
 80183a4:	4629      	mov	r1, r5
 80183a6:	4620      	mov	r0, r4
 80183a8:	f7ff ffd3 	bl	8018352 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 80183ac:	68fb      	ldr	r3, [r7, #12]
 80183ae:	4618      	mov	r0, r3
 80183b0:	3710      	adds	r7, #16
 80183b2:	46bd      	mov	sp, r7
 80183b4:	bdb0      	pop	{r4, r5, r7, pc}

080183b6 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80183b6:	b5b0      	push	{r4, r5, r7, lr}
 80183b8:	b084      	sub	sp, #16
 80183ba:	af00      	add	r7, sp, #0
 80183bc:	60f8      	str	r0, [r7, #12]
 80183be:	7239      	strb	r1, [r7, #8]
 80183c0:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80183c2:	68fc      	ldr	r4, [r7, #12]
 80183c4:	6878      	ldr	r0, [r7, #4]
 80183c6:	f7ed fbba 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80183ca:	4603      	mov	r3, r0
 80183cc:	461a      	mov	r2, r3
 80183ce:	4629      	mov	r1, r5
 80183d0:	4620      	mov	r0, r4
 80183d2:	f7ff ffdb 	bl	801838c <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 80183d6:	68fb      	ldr	r3, [r7, #12]
 80183d8:	4618      	mov	r0, r3
 80183da:	3710      	adds	r7, #16
 80183dc:	46bd      	mov	sp, r7
 80183de:	bdb0      	pop	{r4, r5, r7, pc}

080183e0 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80183e0:	b5b0      	push	{r4, r5, r7, lr}
 80183e2:	b084      	sub	sp, #16
 80183e4:	af00      	add	r7, sp, #0
 80183e6:	60f8      	str	r0, [r7, #12]
 80183e8:	7239      	strb	r1, [r7, #8]
 80183ea:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80183ec:	68fc      	ldr	r4, [r7, #12]
 80183ee:	6878      	ldr	r0, [r7, #4]
 80183f0:	f7ed fba5 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80183f4:	4603      	mov	r3, r0
 80183f6:	461a      	mov	r2, r3
 80183f8:	4629      	mov	r1, r5
 80183fa:	4620      	mov	r0, r4
 80183fc:	f7ff ffdb 	bl	80183b6 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8018400:	68fb      	ldr	r3, [r7, #12]
 8018402:	4618      	mov	r0, r3
 8018404:	3710      	adds	r7, #16
 8018406:	46bd      	mov	sp, r7
 8018408:	bdb0      	pop	{r4, r5, r7, pc}

0801840a <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 801840a:	b5b0      	push	{r4, r5, r7, lr}
 801840c:	b084      	sub	sp, #16
 801840e:	af00      	add	r7, sp, #0
 8018410:	60f8      	str	r0, [r7, #12]
 8018412:	7239      	strb	r1, [r7, #8]
 8018414:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8018416:	68fc      	ldr	r4, [r7, #12]
 8018418:	6878      	ldr	r0, [r7, #4]
 801841a:	f7ed fb90 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801841e:	4603      	mov	r3, r0
 8018420:	461a      	mov	r2, r3
 8018422:	4629      	mov	r1, r5
 8018424:	4620      	mov	r0, r4
 8018426:	f7ff ffdb 	bl	80183e0 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801842a:	68fb      	ldr	r3, [r7, #12]
 801842c:	4618      	mov	r0, r3
 801842e:	3710      	adds	r7, #16
 8018430:	46bd      	mov	sp, r7
 8018432:	bdb0      	pop	{r4, r5, r7, pc}

08018434 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8018434:	b5b0      	push	{r4, r5, r7, lr}
 8018436:	b084      	sub	sp, #16
 8018438:	af00      	add	r7, sp, #0
 801843a:	60f8      	str	r0, [r7, #12]
 801843c:	7239      	strb	r1, [r7, #8]
 801843e:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 8018440:	68fc      	ldr	r4, [r7, #12]
 8018442:	6878      	ldr	r0, [r7, #4]
 8018444:	f7ed fb7b 	bl	8005b3e <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018448:	4603      	mov	r3, r0
 801844a:	461a      	mov	r2, r3
 801844c:	4629      	mov	r1, r5
 801844e:	4620      	mov	r0, r4
 8018450:	f7ff ffdb 	bl	801840a <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8018454:	68fb      	ldr	r3, [r7, #12]
 8018456:	2203      	movs	r2, #3
 8018458:	761a      	strb	r2, [r3, #24]
	{ }
 801845a:	68fb      	ldr	r3, [r7, #12]
 801845c:	4618      	mov	r0, r3
 801845e:	3710      	adds	r7, #16
 8018460:	46bd      	mov	sp, r7
 8018462:	bdb0      	pop	{r4, r5, r7, pc}

08018464 <_ZSt18uninitialized_copyIPK6SymbolPS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 8018464:	b580      	push	{r7, lr}
 8018466:	b086      	sub	sp, #24
 8018468:	af00      	add	r7, sp, #0
 801846a:	60f8      	str	r0, [r7, #12]
 801846c:	60b9      	str	r1, [r7, #8]
 801846e:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 8018470:	2301      	movs	r3, #1
 8018472:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 8018474:	687a      	ldr	r2, [r7, #4]
 8018476:	68b9      	ldr	r1, [r7, #8]
 8018478:	68f8      	ldr	r0, [r7, #12]
 801847a:	f000 f82e 	bl	80184da <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK6SymbolPS2_EET0_T_S7_S6_>
 801847e:	4603      	mov	r3, r0
    }
 8018480:	4618      	mov	r0, r3
 8018482:	3718      	adds	r7, #24
 8018484:	46bd      	mov	sp, r7
 8018486:	bd80      	pop	{r7, pc}

08018488 <_ZNSt16allocator_traitsISaI6SymbolEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 8018488:	b580      	push	{r7, lr}
 801848a:	b082      	sub	sp, #8
 801848c:	af00      	add	r7, sp, #0
 801848e:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8018490:	6878      	ldr	r0, [r7, #4]
 8018492:	f7f0 fa0f 	bl	80088b4 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>
 8018496:	4603      	mov	r3, r0
 8018498:	4618      	mov	r0, r3
 801849a:	3708      	adds	r7, #8
 801849c:	46bd      	mov	sp, r7
 801849e:	bd80      	pop	{r7, pc}

080184a0 <_ZSt12__relocate_aIP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 80184a0:	b5b0      	push	{r4, r5, r7, lr}
 80184a2:	b084      	sub	sp, #16
 80184a4:	af00      	add	r7, sp, #0
 80184a6:	60f8      	str	r0, [r7, #12]
 80184a8:	60b9      	str	r1, [r7, #8]
 80184aa:	607a      	str	r2, [r7, #4]
 80184ac:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 80184ae:	68f8      	ldr	r0, [r7, #12]
 80184b0:	f7ef fc14 	bl	8007cdc <_ZSt12__niter_baseIP6SymbolET_S2_>
 80184b4:	4604      	mov	r4, r0
 80184b6:	68b8      	ldr	r0, [r7, #8]
 80184b8:	f7ef fc10 	bl	8007cdc <_ZSt12__niter_baseIP6SymbolET_S2_>
 80184bc:	4605      	mov	r5, r0
 80184be:	6878      	ldr	r0, [r7, #4]
 80184c0:	f7ef fc0c 	bl	8007cdc <_ZSt12__niter_baseIP6SymbolET_S2_>
 80184c4:	4602      	mov	r2, r0
 80184c6:	683b      	ldr	r3, [r7, #0]
 80184c8:	4629      	mov	r1, r5
 80184ca:	4620      	mov	r0, r4
 80184cc:	f000 f825 	bl	801851a <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>
 80184d0:	4603      	mov	r3, r0
    }
 80184d2:	4618      	mov	r0, r3
 80184d4:	3710      	adds	r7, #16
 80184d6:	46bd      	mov	sp, r7
 80184d8:	bdb0      	pop	{r4, r5, r7, pc}

080184da <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK6SymbolPS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 80184da:	b580      	push	{r7, lr}
 80184dc:	b086      	sub	sp, #24
 80184de:	af00      	add	r7, sp, #0
 80184e0:	60f8      	str	r0, [r7, #12]
 80184e2:	60b9      	str	r1, [r7, #8]
 80184e4:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 80184e6:	687b      	ldr	r3, [r7, #4]
 80184e8:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 80184ea:	68fa      	ldr	r2, [r7, #12]
 80184ec:	68bb      	ldr	r3, [r7, #8]
 80184ee:	429a      	cmp	r2, r3
 80184f0:	d00e      	beq.n	8018510 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK6SymbolPS2_EET0_T_S7_S6_+0x36>
		std::_Construct(std::__addressof(*__cur), *__first);
 80184f2:	6978      	ldr	r0, [r7, #20]
 80184f4:	f7ef feb9 	bl	800826a <_ZSt11__addressofI6SymbolEPT_RS1_>
 80184f8:	4603      	mov	r3, r0
 80184fa:	68f9      	ldr	r1, [r7, #12]
 80184fc:	4618      	mov	r0, r3
 80184fe:	f7f0 fa1a 	bl	8008936 <_ZSt10_ConstructI6SymbolJRKS0_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 8018502:	68fb      	ldr	r3, [r7, #12]
 8018504:	3320      	adds	r3, #32
 8018506:	60fb      	str	r3, [r7, #12]
 8018508:	697b      	ldr	r3, [r7, #20]
 801850a:	3320      	adds	r3, #32
 801850c:	617b      	str	r3, [r7, #20]
 801850e:	e7ec      	b.n	80184ea <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK6SymbolPS2_EET0_T_S7_S6_+0x10>
	      return __cur;
 8018510:	697b      	ldr	r3, [r7, #20]
	}
 8018512:	4618      	mov	r0, r3
 8018514:	3718      	adds	r7, #24
 8018516:	46bd      	mov	sp, r7
 8018518:	bd80      	pop	{r7, pc}

0801851a <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
 801851a:	b590      	push	{r4, r7, lr}
 801851c:	b087      	sub	sp, #28
 801851e:	af00      	add	r7, sp, #0
 8018520:	60f8      	str	r0, [r7, #12]
 8018522:	60b9      	str	r1, [r7, #8]
 8018524:	607a      	str	r2, [r7, #4]
 8018526:	603b      	str	r3, [r7, #0]
      _ForwardIterator __cur = __result;
 8018528:	687b      	ldr	r3, [r7, #4]
 801852a:	617b      	str	r3, [r7, #20]
      for (; __first != __last; ++__first, (void)++__cur)
 801852c:	68fa      	ldr	r2, [r7, #12]
 801852e:	68bb      	ldr	r3, [r7, #8]
 8018530:	429a      	cmp	r2, r3
 8018532:	d013      	beq.n	801855c <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_+0x42>
	std::__relocate_object_a(std::__addressof(*__cur),
 8018534:	6978      	ldr	r0, [r7, #20]
 8018536:	f7ef fe98 	bl	800826a <_ZSt11__addressofI6SymbolEPT_RS1_>
 801853a:	4604      	mov	r4, r0
 801853c:	68f8      	ldr	r0, [r7, #12]
 801853e:	f7ef fe94 	bl	800826a <_ZSt11__addressofI6SymbolEPT_RS1_>
 8018542:	4603      	mov	r3, r0
 8018544:	683a      	ldr	r2, [r7, #0]
 8018546:	4619      	mov	r1, r3
 8018548:	4620      	mov	r0, r4
 801854a:	f000 f80c 	bl	8018566 <_ZSt19__relocate_object_aI6SymbolS0_SaIS0_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
 801854e:	68fb      	ldr	r3, [r7, #12]
 8018550:	3320      	adds	r3, #32
 8018552:	60fb      	str	r3, [r7, #12]
 8018554:	697b      	ldr	r3, [r7, #20]
 8018556:	3320      	adds	r3, #32
 8018558:	617b      	str	r3, [r7, #20]
 801855a:	e7e7      	b.n	801852c <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_+0x12>
      return __cur;
 801855c:	697b      	ldr	r3, [r7, #20]
    }
 801855e:	4618      	mov	r0, r3
 8018560:	371c      	adds	r7, #28
 8018562:	46bd      	mov	sp, r7
 8018564:	bd90      	pop	{r4, r7, pc}

08018566 <_ZSt19__relocate_object_aI6SymbolS0_SaIS0_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __dest, _Up* __orig, _Allocator& __alloc)
 8018566:	b580      	push	{r7, lr}
 8018568:	b084      	sub	sp, #16
 801856a:	af00      	add	r7, sp, #0
 801856c:	60f8      	str	r0, [r7, #12]
 801856e:	60b9      	str	r1, [r7, #8]
 8018570:	607a      	str	r2, [r7, #4]
      __traits::construct(__alloc, __dest, std::move(*__orig));
 8018572:	68b8      	ldr	r0, [r7, #8]
 8018574:	f000 f812 	bl	801859c <_ZSt4moveIR6SymbolEONSt16remove_referenceIT_E4typeEOS3_>
 8018578:	4603      	mov	r3, r0
 801857a:	461a      	mov	r2, r3
 801857c:	68f9      	ldr	r1, [r7, #12]
 801857e:	6878      	ldr	r0, [r7, #4]
 8018580:	f000 f817 	bl	80185b2 <_ZNSt16allocator_traitsISaI6SymbolEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
 8018584:	68b8      	ldr	r0, [r7, #8]
 8018586:	f7ef fe70 	bl	800826a <_ZSt11__addressofI6SymbolEPT_RS1_>
 801858a:	4603      	mov	r3, r0
 801858c:	4619      	mov	r1, r3
 801858e:	6878      	ldr	r0, [r7, #4]
 8018590:	f000 f822 	bl	80185d8 <_ZNSt16allocator_traitsISaI6SymbolEE7destroyIS0_EEvRS1_PT_>
    }
 8018594:	bf00      	nop
 8018596:	3710      	adds	r7, #16
 8018598:	46bd      	mov	sp, r7
 801859a:	bd80      	pop	{r7, pc}

0801859c <_ZSt4moveIR6SymbolEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 801859c:	b480      	push	{r7}
 801859e:	b083      	sub	sp, #12
 80185a0:	af00      	add	r7, sp, #0
 80185a2:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80185a4:	687b      	ldr	r3, [r7, #4]
 80185a6:	4618      	mov	r0, r3
 80185a8:	370c      	adds	r7, #12
 80185aa:	46bd      	mov	sp, r7
 80185ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80185b0:	4770      	bx	lr

080185b2 <_ZNSt16allocator_traitsISaI6SymbolEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80185b2:	b580      	push	{r7, lr}
 80185b4:	b084      	sub	sp, #16
 80185b6:	af00      	add	r7, sp, #0
 80185b8:	60f8      	str	r0, [r7, #12]
 80185ba:	60b9      	str	r1, [r7, #8]
 80185bc:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 80185be:	6878      	ldr	r0, [r7, #4]
 80185c0:	f000 f817 	bl	80185f2 <_ZSt7forwardI6SymbolEOT_RNSt16remove_referenceIS1_E4typeE>
 80185c4:	4603      	mov	r3, r0
 80185c6:	461a      	mov	r2, r3
 80185c8:	68b9      	ldr	r1, [r7, #8]
 80185ca:	68f8      	ldr	r0, [r7, #12]
 80185cc:	f000 f81c 	bl	8018608 <_ZN9__gnu_cxx13new_allocatorI6SymbolE9constructIS1_JS1_EEEvPT_DpOT0_>
 80185d0:	bf00      	nop
 80185d2:	3710      	adds	r7, #16
 80185d4:	46bd      	mov	sp, r7
 80185d6:	bd80      	pop	{r7, pc}

080185d8 <_ZNSt16allocator_traitsISaI6SymbolEE7destroyIS0_EEvRS1_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 80185d8:	b580      	push	{r7, lr}
 80185da:	b082      	sub	sp, #8
 80185dc:	af00      	add	r7, sp, #0
 80185de:	6078      	str	r0, [r7, #4]
 80185e0:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 80185e2:	6839      	ldr	r1, [r7, #0]
 80185e4:	6878      	ldr	r0, [r7, #4]
 80185e6:	f000 f827 	bl	8018638 <_ZN9__gnu_cxx13new_allocatorI6SymbolE7destroyIS1_EEvPT_>
 80185ea:	bf00      	nop
 80185ec:	3708      	adds	r7, #8
 80185ee:	46bd      	mov	sp, r7
 80185f0:	bd80      	pop	{r7, pc}

080185f2 <_ZSt7forwardI6SymbolEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80185f2:	b480      	push	{r7}
 80185f4:	b083      	sub	sp, #12
 80185f6:	af00      	add	r7, sp, #0
 80185f8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80185fa:	687b      	ldr	r3, [r7, #4]
 80185fc:	4618      	mov	r0, r3
 80185fe:	370c      	adds	r7, #12
 8018600:	46bd      	mov	sp, r7
 8018602:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018606:	4770      	bx	lr

08018608 <_ZN9__gnu_cxx13new_allocatorI6SymbolE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8018608:	b590      	push	{r4, r7, lr}
 801860a:	b085      	sub	sp, #20
 801860c:	af00      	add	r7, sp, #0
 801860e:	60f8      	str	r0, [r7, #12]
 8018610:	60b9      	str	r1, [r7, #8]
 8018612:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8018614:	6878      	ldr	r0, [r7, #4]
 8018616:	f7ff ffec 	bl	80185f2 <_ZSt7forwardI6SymbolEOT_RNSt16remove_referenceIS1_E4typeE>
 801861a:	4604      	mov	r4, r0
 801861c:	68bb      	ldr	r3, [r7, #8]
 801861e:	4619      	mov	r1, r3
 8018620:	2020      	movs	r0, #32
 8018622:	f7e8 fd1a 	bl	800105a <_ZnwjPv>
 8018626:	4603      	mov	r3, r0
 8018628:	4621      	mov	r1, r4
 801862a:	4618      	mov	r0, r3
 801862c:	f7f3 fc76 	bl	800bf1c <_ZN6SymbolC1EOS_>
 8018630:	bf00      	nop
 8018632:	3714      	adds	r7, #20
 8018634:	46bd      	mov	sp, r7
 8018636:	bd90      	pop	{r4, r7, pc}

08018638 <_ZN9__gnu_cxx13new_allocatorI6SymbolE7destroyIS1_EEvPT_>:
	destroy(_Up* __p)
 8018638:	b580      	push	{r7, lr}
 801863a:	b082      	sub	sp, #8
 801863c:	af00      	add	r7, sp, #0
 801863e:	6078      	str	r0, [r7, #4]
 8018640:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8018642:	6838      	ldr	r0, [r7, #0]
 8018644:	f7e8 ff48 	bl	80014d8 <_ZN6SymbolD1Ev>
 8018648:	bf00      	nop
 801864a:	3708      	adds	r7, #8
 801864c:	46bd      	mov	sp, r7
 801864e:	bd80      	pop	{r7, pc}

08018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
{
	return rx_buffer;
}

void Transmitter::report_error(std::string message)
{
 8018650:	b590      	push	{r4, r7, lr}
 8018652:	b0af      	sub	sp, #188	; 0xbc
 8018654:	af00      	add	r7, sp, #0
 8018656:	6078      	str	r0, [r7, #4]
	std::string line = itoa(Position_counter::get_instance().line, nullptr, 10);
 8018658:	f7fd feb0 	bl	80163bc <_ZN16Position_counter12get_instanceEv>
 801865c:	4603      	mov	r3, r0
 801865e:	681b      	ldr	r3, [r3, #0]
 8018660:	220a      	movs	r2, #10
 8018662:	2100      	movs	r1, #0
 8018664:	4618      	mov	r0, r3
 8018666:	f00b fbb5 	bl	8023dd4 <itoa>
 801866a:	4604      	mov	r4, r0
 801866c:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8018670:	4618      	mov	r0, r3
 8018672:	f009 ff25 	bl	80224c0 <_ZNSaIcEC1Ev>
 8018676:	f107 0250 	add.w	r2, r7, #80	; 0x50
 801867a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801867e:	4621      	mov	r1, r4
 8018680:	4618      	mov	r0, r3
 8018682:	f7e9 fa4e 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8018686:	f107 0350 	add.w	r3, r7, #80	; 0x50
 801868a:	4618      	mov	r0, r3
 801868c:	f009 ff19 	bl	80224c2 <_ZNSaIcED1Ev>
	std::string position = itoa(Position_counter::get_instance().position, nullptr, 10);
 8018690:	f7fd fe94 	bl	80163bc <_ZN16Position_counter12get_instanceEv>
 8018694:	4603      	mov	r3, r0
 8018696:	685b      	ldr	r3, [r3, #4]
 8018698:	220a      	movs	r2, #10
 801869a:	2100      	movs	r1, #0
 801869c:	4618      	mov	r0, r3
 801869e:	f00b fb99 	bl	8023dd4 <itoa>
 80186a2:	4604      	mov	r4, r0
 80186a4:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80186a8:	4618      	mov	r0, r3
 80186aa:	f009 ff09 	bl	80224c0 <_ZNSaIcEC1Ev>
 80186ae:	f107 0254 	add.w	r2, r7, #84	; 0x54
 80186b2:	f107 0320 	add.w	r3, r7, #32
 80186b6:	4621      	mov	r1, r4
 80186b8:	4618      	mov	r0, r3
 80186ba:	f7e9 fa32 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80186be:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80186c2:	4618      	mov	r0, r3
 80186c4:	f009 fefd 	bl	80224c2 <_ZNSaIcED1Ev>

	std::string full_message = message + "\nin line: " + line
 80186c8:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 80186cc:	4a28      	ldr	r2, [pc, #160]	; (8018770 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x120>)
 80186ce:	6879      	ldr	r1, [r7, #4]
 80186d0:	4618      	mov	r0, r3
 80186d2:	f000 f895 	bl	8018800 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_>
 80186d6:	f107 0388 	add.w	r3, r7, #136	; 0x88
 80186da:	f107 0238 	add.w	r2, r7, #56	; 0x38
 80186de:	f107 01a0 	add.w	r1, r7, #160	; 0xa0
 80186e2:	4618      	mov	r0, r3
 80186e4:	f000 f89f 	bl	8018826 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>
			+ " in position: " + position + "\n";
 80186e8:	f107 0370 	add.w	r3, r7, #112	; 0x70
 80186ec:	f107 0188 	add.w	r1, r7, #136	; 0x88
 80186f0:	4a20      	ldr	r2, [pc, #128]	; (8018774 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x124>)
 80186f2:	4618      	mov	r0, r3
 80186f4:	f7f5 fce2 	bl	800e0bc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 80186f8:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80186fc:	f107 0220 	add.w	r2, r7, #32
 8018700:	f107 0170 	add.w	r1, r7, #112	; 0x70
 8018704:	4618      	mov	r0, r3
 8018706:	f000 f88e 	bl	8018826 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>
 801870a:	f107 0308 	add.w	r3, r7, #8
 801870e:	f107 0158 	add.w	r1, r7, #88	; 0x58
 8018712:	4a19      	ldr	r2, [pc, #100]	; (8018778 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x128>)
 8018714:	4618      	mov	r0, r3
 8018716:	f7f5 fcd1 	bl	800e0bc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 801871a:	f107 0358 	add.w	r3, r7, #88	; 0x58
 801871e:	4618      	mov	r0, r3
 8018720:	f00a f95f 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018724:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8018728:	4618      	mov	r0, r3
 801872a:	f00a f95a 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	std::string full_message = message + "\nin line: " + line
 801872e:	f107 0388 	add.w	r3, r7, #136	; 0x88
 8018732:	4618      	mov	r0, r3
 8018734:	f00a f955 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018738:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801873c:	4618      	mov	r0, r3
 801873e:	f00a f950 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>

	while (1)
	{
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 8018742:	f107 0308 	add.w	r3, r7, #8
 8018746:	4618      	mov	r0, r3
 8018748:	f00a faea 	bl	8022d20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 801874c:	4604      	mov	r4, r0
				full_message.length(), 100);
 801874e:	f107 0308 	add.w	r3, r7, #8
 8018752:	4618      	mov	r0, r3
 8018754:	f00a f97b 	bl	8022a4e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
 8018758:	4603      	mov	r3, r0
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 801875a:	b29a      	uxth	r2, r3
 801875c:	2364      	movs	r3, #100	; 0x64
 801875e:	4621      	mov	r1, r4
 8018760:	4806      	ldr	r0, [pc, #24]	; (801877c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x12c>)
 8018762:	f008 fd6f 	bl	8021244 <HAL_UART_Transmit>
		HAL_Delay(500);
 8018766:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 801876a:	f007 f8ef 	bl	801f94c <HAL_Delay>
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 801876e:	e7e8      	b.n	8018742 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xf2>
 8018770:	08027a80 	.word	0x08027a80
 8018774:	08027a8c 	.word	0x08027a8c
 8018778:	08027a9c 	.word	0x08027a9c
 801877c:	2000060c 	.word	0x2000060c

08018780 <_ZN11Transmitter15start_listeningEv>:
	}
}

void Transmitter::start_listening()
{
 8018780:	b580      	push	{r7, lr}
 8018782:	af00      	add	r7, sp, #0
	HAL_UART_Receive_IT(&huart1, &rx_buffer, 1);
 8018784:	2201      	movs	r2, #1
 8018786:	4903      	ldr	r1, [pc, #12]	; (8018794 <_ZN11Transmitter15start_listeningEv+0x14>)
 8018788:	4803      	ldr	r0, [pc, #12]	; (8018798 <_ZN11Transmitter15start_listeningEv+0x18>)
 801878a:	f008 febe 	bl	802150a <HAL_UART_Receive_IT>
}
 801878e:	bf00      	nop
 8018790:	bd80      	pop	{r7, pc}
 8018792:	bf00      	nop
 8018794:	200004e4 	.word	0x200004e4
 8018798:	2000060c 	.word	0x2000060c

0801879c <_ZN11Transmitter17receive_code_charEv>:

char Transmitter::receive_code_char()
{
 801879c:	b580      	push	{r7, lr}
 801879e:	af00      	add	r7, sp, #0
    static uint8_t tx_buffer = 'c';
	HAL_UART_Transmit(&huart1, &tx_buffer, 1, 100);
 80187a0:	2364      	movs	r3, #100	; 0x64
 80187a2:	2201      	movs	r2, #1
 80187a4:	490b      	ldr	r1, [pc, #44]	; (80187d4 <_ZN11Transmitter17receive_code_charEv+0x38>)
 80187a6:	480c      	ldr	r0, [pc, #48]	; (80187d8 <_ZN11Transmitter17receive_code_charEv+0x3c>)
 80187a8:	f008 fd4c 	bl	8021244 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, &rx_buffer, 1, -1);
 80187ac:	f04f 33ff 	mov.w	r3, #4294967295
 80187b0:	2201      	movs	r2, #1
 80187b2:	490a      	ldr	r1, [pc, #40]	; (80187dc <_ZN11Transmitter17receive_code_charEv+0x40>)
 80187b4:	4808      	ldr	r0, [pc, #32]	; (80187d8 <_ZN11Transmitter17receive_code_charEv+0x3c>)
 80187b6:	f008 fdd8 	bl	802136a <HAL_UART_Receive>

	Position_counter::get_instance().update_position(rx_buffer);
 80187ba:	f7fd fdff 	bl	80163bc <_ZN16Position_counter12get_instanceEv>
 80187be:	4602      	mov	r2, r0
 80187c0:	4b06      	ldr	r3, [pc, #24]	; (80187dc <_ZN11Transmitter17receive_code_charEv+0x40>)
 80187c2:	781b      	ldrb	r3, [r3, #0]
 80187c4:	4619      	mov	r1, r3
 80187c6:	4610      	mov	r0, r2
 80187c8:	f7fd fe20 	bl	801640c <_ZN16Position_counter15update_positionEh>

	return rx_buffer;
 80187cc:	4b03      	ldr	r3, [pc, #12]	; (80187dc <_ZN11Transmitter17receive_code_charEv+0x40>)
 80187ce:	781b      	ldrb	r3, [r3, #0]
}
 80187d0:	4618      	mov	r0, r3
 80187d2:	bd80      	pop	{r7, pc}
 80187d4:	20000000 	.word	0x20000000
 80187d8:	2000060c 	.word	0x2000060c
 80187dc:	200004e4 	.word	0x200004e4

080187e0 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 80187e0:	b480      	push	{r7}
 80187e2:	b083      	sub	sp, #12
 80187e4:	af00      	add	r7, sp, #0
 80187e6:	6078      	str	r0, [r7, #4]
	switch (rx_buffer)
 80187e8:	4b04      	ldr	r3, [pc, #16]	; (80187fc <HAL_UART_RxCpltCallback+0x1c>)
 80187ea:	781b      	ldrb	r3, [r3, #0]
 80187ec:	2b65      	cmp	r3, #101	; 0x65
	{
	case 'e':
		break;
	default:
		break;
 80187ee:	bf00      	nop
	}
}
 80187f0:	bf00      	nop
 80187f2:	370c      	adds	r7, #12
 80187f4:	46bd      	mov	sp, r7
 80187f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80187fa:	4770      	bx	lr
 80187fc:	200004e4 	.word	0x200004e4

08018800 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_>:
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 8018800:	b580      	push	{r7, lr}
 8018802:	b084      	sub	sp, #16
 8018804:	af00      	add	r7, sp, #0
 8018806:	60f8      	str	r0, [r7, #12]
 8018808:	60b9      	str	r1, [r7, #8]
 801880a:	607a      	str	r2, [r7, #4]
      basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
 801880c:	68b9      	ldr	r1, [r7, #8]
 801880e:	68f8      	ldr	r0, [r7, #12]
 8018810:	f00a faac 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
      __str.append(__rhs);
 8018814:	6879      	ldr	r1, [r7, #4]
 8018816:	68f8      	ldr	r0, [r7, #12]
 8018818:	f00a fa6c 	bl	8022cf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
      return __str;
 801881c:	bf00      	nop
    }
 801881e:	68f8      	ldr	r0, [r7, #12]
 8018820:	3710      	adds	r7, #16
 8018822:	46bd      	mov	sp, r7
 8018824:	bd80      	pop	{r7, pc}

08018826 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 8018826:	b580      	push	{r7, lr}
 8018828:	b084      	sub	sp, #16
 801882a:	af00      	add	r7, sp, #0
 801882c:	60f8      	str	r0, [r7, #12]
 801882e:	60b9      	str	r1, [r7, #8]
 8018830:	607a      	str	r2, [r7, #4]
    { return std::move(__lhs.append(__rhs)); }
 8018832:	6879      	ldr	r1, [r7, #4]
 8018834:	68b8      	ldr	r0, [r7, #8]
 8018836:	f00a fa43 	bl	8022cc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 801883a:	4603      	mov	r3, r0
 801883c:	4618      	mov	r0, r3
 801883e:	f7ef fc69 	bl	8008114 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8018842:	4603      	mov	r3, r0
 8018844:	4619      	mov	r1, r3
 8018846:	68f8      	ldr	r0, [r7, #12]
 8018848:	f00a f8b1 	bl	80229ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 801884c:	68f8      	ldr	r0, [r7, #12]
 801884e:	3710      	adds	r7, #16
 8018850:	46bd      	mov	sp, r7
 8018852:	bd80      	pop	{r7, pc}

08018854 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>:
      ~map() = default;
 8018854:	b580      	push	{r7, lr}
 8018856:	b082      	sub	sp, #8
 8018858:	af00      	add	r7, sp, #0
 801885a:	6078      	str	r0, [r7, #4]
 801885c:	687b      	ldr	r3, [r7, #4]
 801885e:	4618      	mov	r0, r3
 8018860:	f000 f958 	bl	8018b14 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>
 8018864:	687b      	ldr	r3, [r7, #4]
 8018866:	4618      	mov	r0, r3
 8018868:	3708      	adds	r7, #8
 801886a:	46bd      	mov	sp, r7
 801886c:	bd80      	pop	{r7, pc}

0801886e <_ZN16Variable_handlerD1Ev>:

#define ADD_ARG(x) Arg.insert({#x, {}});
#define ARG(x) Variable_handler::get_instance().get_arg(#x)


class Variable_handler
 801886e:	b580      	push	{r7, lr}
 8018870:	b082      	sub	sp, #8
 8018872:	af00      	add	r7, sp, #0
 8018874:	6078      	str	r0, [r7, #4]
 8018876:	687b      	ldr	r3, [r7, #4]
 8018878:	3330      	adds	r3, #48	; 0x30
 801887a:	4618      	mov	r0, r3
 801887c:	f7ff ffea 	bl	8018854 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 8018880:	687b      	ldr	r3, [r7, #4]
 8018882:	3318      	adds	r3, #24
 8018884:	4618      	mov	r0, r3
 8018886:	f7ff ffe5 	bl	8018854 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 801888a:	687b      	ldr	r3, [r7, #4]
 801888c:	4618      	mov	r0, r3
 801888e:	f7ff ffe1 	bl	8018854 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 8018892:	687b      	ldr	r3, [r7, #4]
 8018894:	4618      	mov	r0, r3
 8018896:	3708      	adds	r7, #8
 8018898:	46bd      	mov	sp, r7
 801889a:	bd80      	pop	{r7, pc}

0801889c <__tcf_0>:
#include <Variable_handler.h>

Variable_handler& Variable_handler::get_instance()
{
	static Variable_handler instance;
 801889c:	b580      	push	{r7, lr}
 801889e:	af00      	add	r7, sp, #0
 80188a0:	4801      	ldr	r0, [pc, #4]	; (80188a8 <__tcf_0+0xc>)
 80188a2:	f7ff ffe4 	bl	801886e <_ZN16Variable_handlerD1Ev>
 80188a6:	bd80      	pop	{r7, pc}
 80188a8:	20000530 	.word	0x20000530

080188ac <_ZN16Variable_handler12get_instanceEv>:
{
 80188ac:	b580      	push	{r7, lr}
 80188ae:	af00      	add	r7, sp, #0
	static Variable_handler instance;
 80188b0:	4b12      	ldr	r3, [pc, #72]	; (80188fc <_ZN16Variable_handler12get_instanceEv+0x50>)
 80188b2:	781b      	ldrb	r3, [r3, #0]
 80188b4:	f3bf 8f5b 	dmb	ish
 80188b8:	b2db      	uxtb	r3, r3
 80188ba:	f003 0301 	and.w	r3, r3, #1
 80188be:	2b00      	cmp	r3, #0
 80188c0:	bf0c      	ite	eq
 80188c2:	2301      	moveq	r3, #1
 80188c4:	2300      	movne	r3, #0
 80188c6:	b2db      	uxtb	r3, r3
 80188c8:	2b00      	cmp	r3, #0
 80188ca:	d013      	beq.n	80188f4 <_ZN16Variable_handler12get_instanceEv+0x48>
 80188cc:	480b      	ldr	r0, [pc, #44]	; (80188fc <_ZN16Variable_handler12get_instanceEv+0x50>)
 80188ce:	f009 fdd7 	bl	8022480 <__cxa_guard_acquire>
 80188d2:	4603      	mov	r3, r0
 80188d4:	2b00      	cmp	r3, #0
 80188d6:	bf14      	ite	ne
 80188d8:	2301      	movne	r3, #1
 80188da:	2300      	moveq	r3, #0
 80188dc:	b2db      	uxtb	r3, r3
 80188de:	2b00      	cmp	r3, #0
 80188e0:	d008      	beq.n	80188f4 <_ZN16Variable_handler12get_instanceEv+0x48>
 80188e2:	4807      	ldr	r0, [pc, #28]	; (8018900 <_ZN16Variable_handler12get_instanceEv+0x54>)
 80188e4:	f006 f822 	bl	801e92c <_ZN16Variable_handlerC1Ev>
 80188e8:	4804      	ldr	r0, [pc, #16]	; (80188fc <_ZN16Variable_handler12get_instanceEv+0x50>)
 80188ea:	f009 fdd5 	bl	8022498 <__cxa_guard_release>
 80188ee:	4805      	ldr	r0, [pc, #20]	; (8018904 <_ZN16Variable_handler12get_instanceEv+0x58>)
 80188f0:	f00b fa0f 	bl	8023d12 <atexit>
	return instance;
 80188f4:	4b02      	ldr	r3, [pc, #8]	; (8018900 <_ZN16Variable_handler12get_instanceEv+0x54>)
}
 80188f6:	4618      	mov	r0, r3
 80188f8:	bd80      	pop	{r7, pc}
 80188fa:	bf00      	nop
 80188fc:	20000578 	.word	0x20000578
 8018900:	20000530 	.word	0x20000530
 8018904:	0801889d 	.word	0x0801889d

08018908 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_arg(std::string name)
{
 8018908:	b580      	push	{r7, lr}
 801890a:	b090      	sub	sp, #64	; 0x40
 801890c:	af00      	add	r7, sp, #0
 801890e:	6078      	str	r0, [r7, #4]
 8018910:	6039      	str	r1, [r7, #0]
	auto search = Arg.find(name);
 8018912:	687b      	ldr	r3, [r7, #4]
 8018914:	3330      	adds	r3, #48	; 0x30
 8018916:	6839      	ldr	r1, [r7, #0]
 8018918:	4618      	mov	r0, r3
 801891a:	f000 f910 	bl	8018b3e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 801891e:	4603      	mov	r3, r0
 8018920:	60bb      	str	r3, [r7, #8]
	if(search == Arg.end())
 8018922:	687b      	ldr	r3, [r7, #4]
 8018924:	3330      	adds	r3, #48	; 0x30
 8018926:	4618      	mov	r0, r3
 8018928:	f000 f918 	bl	8018b5c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 801892c:	4603      	mov	r3, r0
 801892e:	60fb      	str	r3, [r7, #12]
 8018930:	f107 020c 	add.w	r2, r7, #12
 8018934:	f107 0308 	add.w	r3, r7, #8
 8018938:	4611      	mov	r1, r2
 801893a:	4618      	mov	r0, r3
 801893c:	f000 f91b 	bl	8018b76 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8018940:	4603      	mov	r3, r0
 8018942:	2b00      	cmp	r3, #0
 8018944:	d01d      	beq.n	8018982 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7a>
	{
		Transmitter::report_error(std::string("Arg " + name + " not found"));
 8018946:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801894a:	683a      	ldr	r2, [r7, #0]
 801894c:	4912      	ldr	r1, [pc, #72]	; (8018998 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x90>)
 801894e:	4618      	mov	r0, r3
 8018950:	f7f5 fb8f 	bl	800e072 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 8018954:	f107 0310 	add.w	r3, r7, #16
 8018958:	f107 0128 	add.w	r1, r7, #40	; 0x28
 801895c:	4a0f      	ldr	r2, [pc, #60]	; (801899c <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x94>)
 801895e:	4618      	mov	r0, r3
 8018960:	f7f5 fbac 	bl	800e0bc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8018964:	f107 0310 	add.w	r3, r7, #16
 8018968:	4618      	mov	r0, r3
 801896a:	f7ff fe71 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801896e:	f107 0310 	add.w	r3, r7, #16
 8018972:	4618      	mov	r0, r3
 8018974:	f00a f835 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018978:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801897c:	4618      	mov	r0, r3
 801897e:	f00a f830 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	return search->second;
 8018982:	f107 0308 	add.w	r3, r7, #8
 8018986:	4618      	mov	r0, r3
 8018988:	f000 f909 	bl	8018b9e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEptEv>
 801898c:	4603      	mov	r3, r0
 801898e:	3318      	adds	r3, #24
}
 8018990:	4618      	mov	r0, r3
 8018992:	3740      	adds	r7, #64	; 0x40
 8018994:	46bd      	mov	sp, r7
 8018996:	bd80      	pop	{r7, pc}
 8018998:	08027acc 	.word	0x08027acc
 801899c:	08027ad4 	.word	0x08027ad4

080189a0 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_par(std::string name)
{
 80189a0:	b580      	push	{r7, lr}
 80189a2:	b090      	sub	sp, #64	; 0x40
 80189a4:	af00      	add	r7, sp, #0
 80189a6:	6078      	str	r0, [r7, #4]
 80189a8:	6039      	str	r1, [r7, #0]
	auto search = Par.find(name);
 80189aa:	687b      	ldr	r3, [r7, #4]
 80189ac:	3318      	adds	r3, #24
 80189ae:	6839      	ldr	r1, [r7, #0]
 80189b0:	4618      	mov	r0, r3
 80189b2:	f000 f8c4 	bl	8018b3e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 80189b6:	4603      	mov	r3, r0
 80189b8:	60bb      	str	r3, [r7, #8]
	if(search == Par.end())
 80189ba:	687b      	ldr	r3, [r7, #4]
 80189bc:	3318      	adds	r3, #24
 80189be:	4618      	mov	r0, r3
 80189c0:	f000 f8cc 	bl	8018b5c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 80189c4:	4603      	mov	r3, r0
 80189c6:	60fb      	str	r3, [r7, #12]
 80189c8:	f107 020c 	add.w	r2, r7, #12
 80189cc:	f107 0308 	add.w	r3, r7, #8
 80189d0:	4611      	mov	r1, r2
 80189d2:	4618      	mov	r0, r3
 80189d4:	f000 f8cf 	bl	8018b76 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 80189d8:	4603      	mov	r3, r0
 80189da:	2b00      	cmp	r3, #0
 80189dc:	d01d      	beq.n	8018a1a <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7a>
	{
		Transmitter::report_error(std::string("Par " + name + " not found"));
 80189de:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80189e2:	683a      	ldr	r2, [r7, #0]
 80189e4:	4912      	ldr	r1, [pc, #72]	; (8018a30 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x90>)
 80189e6:	4618      	mov	r0, r3
 80189e8:	f7f5 fb43 	bl	800e072 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 80189ec:	f107 0310 	add.w	r3, r7, #16
 80189f0:	f107 0128 	add.w	r1, r7, #40	; 0x28
 80189f4:	4a0f      	ldr	r2, [pc, #60]	; (8018a34 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x94>)
 80189f6:	4618      	mov	r0, r3
 80189f8:	f7f5 fb60 	bl	800e0bc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 80189fc:	f107 0310 	add.w	r3, r7, #16
 8018a00:	4618      	mov	r0, r3
 8018a02:	f7ff fe25 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8018a06:	f107 0310 	add.w	r3, r7, #16
 8018a0a:	4618      	mov	r0, r3
 8018a0c:	f009 ffe9 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018a10:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8018a14:	4618      	mov	r0, r3
 8018a16:	f009 ffe4 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	return search->second;
 8018a1a:	f107 0308 	add.w	r3, r7, #8
 8018a1e:	4618      	mov	r0, r3
 8018a20:	f000 f8bd 	bl	8018b9e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEptEv>
 8018a24:	4603      	mov	r3, r0
 8018a26:	3318      	adds	r3, #24
}
 8018a28:	4618      	mov	r0, r3
 8018a2a:	3740      	adds	r7, #64	; 0x40
 8018a2c:	46bd      	mov	sp, r7
 8018a2e:	bd80      	pop	{r7, pc}
 8018a30:	08027ae0 	.word	0x08027ae0
 8018a34:	08027ad4 	.word	0x08027ad4

08018a38 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_local(std::string name)
{
 8018a38:	b580      	push	{r7, lr}
 8018a3a:	b082      	sub	sp, #8
 8018a3c:	af00      	add	r7, sp, #0
 8018a3e:	6078      	str	r0, [r7, #4]
 8018a40:	6039      	str	r1, [r7, #0]
	return local[name];
 8018a42:	687b      	ldr	r3, [r7, #4]
 8018a44:	6839      	ldr	r1, [r7, #0]
 8018a46:	4618      	mov	r0, r3
 8018a48:	f000 f8b8 	bl	8018bbc <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>
 8018a4c:	4603      	mov	r3, r0
}
 8018a4e:	4618      	mov	r0, r3
 8018a50:	3708      	adds	r7, #8
 8018a52:	46bd      	mov	sp, r7
 8018a54:	bd80      	pop	{r7, pc}

08018a56 <_ZN16Variable_handler10get_symbolE8Variable>:

Symbol& Variable_handler::get_symbol(Variable var)
{
 8018a56:	b590      	push	{r4, r7, lr}
 8018a58:	b095      	sub	sp, #84	; 0x54
 8018a5a:	af00      	add	r7, sp, #0
 8018a5c:	6078      	str	r0, [r7, #4]
 8018a5e:	6039      	str	r1, [r7, #0]
	switch(var.type)
 8018a60:	683b      	ldr	r3, [r7, #0]
 8018a62:	781b      	ldrb	r3, [r3, #0]
 8018a64:	2b02      	cmp	r3, #2
 8018a66:	d01a      	beq.n	8018a9e <_ZN16Variable_handler10get_symbolE8Variable+0x48>
 8018a68:	2b02      	cmp	r3, #2
 8018a6a:	dc2e      	bgt.n	8018aca <_ZN16Variable_handler10get_symbolE8Variable+0x74>
 8018a6c:	2b00      	cmp	r3, #0
 8018a6e:	d02b      	beq.n	8018ac8 <_ZN16Variable_handler10get_symbolE8Variable+0x72>
 8018a70:	2b01      	cmp	r3, #1
 8018a72:	d12a      	bne.n	8018aca <_ZN16Variable_handler10get_symbolE8Variable+0x74>
	{
	case VARIABLE_ARG:
		return get_arg(var.id);
 8018a74:	683b      	ldr	r3, [r7, #0]
 8018a76:	1d1a      	adds	r2, r3, #4
 8018a78:	f107 0308 	add.w	r3, r7, #8
 8018a7c:	4611      	mov	r1, r2
 8018a7e:	4618      	mov	r0, r3
 8018a80:	f00a f974 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8018a84:	f107 0308 	add.w	r3, r7, #8
 8018a88:	4619      	mov	r1, r3
 8018a8a:	6878      	ldr	r0, [r7, #4]
 8018a8c:	f7ff ff3c 	bl	8018908 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8018a90:	4604      	mov	r4, r0
 8018a92:	f107 0308 	add.w	r3, r7, #8
 8018a96:	4618      	mov	r0, r3
 8018a98:	f009 ffa3 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018a9c:	e029      	b.n	8018af2 <_ZN16Variable_handler10get_symbolE8Variable+0x9c>
	case VARIABLE_PAR:
		return get_par(var.id);
 8018a9e:	683b      	ldr	r3, [r7, #0]
 8018aa0:	1d1a      	adds	r2, r3, #4
 8018aa2:	f107 0320 	add.w	r3, r7, #32
 8018aa6:	4611      	mov	r1, r2
 8018aa8:	4618      	mov	r0, r3
 8018aaa:	f00a f95f 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8018aae:	f107 0320 	add.w	r3, r7, #32
 8018ab2:	4619      	mov	r1, r3
 8018ab4:	6878      	ldr	r0, [r7, #4]
 8018ab6:	f7ff ff73 	bl	80189a0 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8018aba:	4604      	mov	r4, r0
 8018abc:	f107 0320 	add.w	r3, r7, #32
 8018ac0:	4618      	mov	r0, r3
 8018ac2:	f009 ff8e 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018ac6:	e014      	b.n	8018af2 <_ZN16Variable_handler10get_symbolE8Variable+0x9c>
	case VARIABLE_LOCAL:
		break;
 8018ac8:	bf00      	nop
	}
	return get_local(var.id);
 8018aca:	683b      	ldr	r3, [r7, #0]
 8018acc:	1d1a      	adds	r2, r3, #4
 8018ace:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8018ad2:	4611      	mov	r1, r2
 8018ad4:	4618      	mov	r0, r3
 8018ad6:	f00a f949 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8018ada:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8018ade:	4619      	mov	r1, r3
 8018ae0:	6878      	ldr	r0, [r7, #4]
 8018ae2:	f7ff ffa9 	bl	8018a38 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8018ae6:	4604      	mov	r4, r0
 8018ae8:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8018aec:	4618      	mov	r0, r3
 8018aee:	f009 ff78 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018af2:	4623      	mov	r3, r4
}
 8018af4:	4618      	mov	r0, r3
 8018af6:	3754      	adds	r7, #84	; 0x54
 8018af8:	46bd      	mov	sp, r7
 8018afa:	bd90      	pop	{r4, r7, pc}

08018afc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>:
	struct _Rb_tree_impl
 8018afc:	b580      	push	{r7, lr}
 8018afe:	b082      	sub	sp, #8
 8018b00:	af00      	add	r7, sp, #0
 8018b02:	6078      	str	r0, [r7, #4]
 8018b04:	6878      	ldr	r0, [r7, #4]
 8018b06:	f000 f8b5 	bl	8018c74 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>
 8018b0a:	687b      	ldr	r3, [r7, #4]
 8018b0c:	4618      	mov	r0, r3
 8018b0e:	3708      	adds	r7, #8
 8018b10:	46bd      	mov	sp, r7
 8018b12:	bd80      	pop	{r7, pc}

08018b14 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8018b14:	b580      	push	{r7, lr}
 8018b16:	b082      	sub	sp, #8
 8018b18:	af00      	add	r7, sp, #0
 8018b1a:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 8018b1c:	6878      	ldr	r0, [r7, #4]
 8018b1e:	f000 f8d4 	bl	8018cca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8018b22:	4603      	mov	r3, r0
 8018b24:	4619      	mov	r1, r3
 8018b26:	6878      	ldr	r0, [r7, #4]
 8018b28:	f000 f8b0 	bl	8018c8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
 8018b2c:	687b      	ldr	r3, [r7, #4]
 8018b2e:	4618      	mov	r0, r3
 8018b30:	f7ff ffe4 	bl	8018afc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>
 8018b34:	687b      	ldr	r3, [r7, #4]
 8018b36:	4618      	mov	r0, r3
 8018b38:	3708      	adds	r7, #8
 8018b3a:	46bd      	mov	sp, r7
 8018b3c:	bd80      	pop	{r7, pc}

08018b3e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>:
      find(const key_type& __x)
 8018b3e:	b580      	push	{r7, lr}
 8018b40:	b082      	sub	sp, #8
 8018b42:	af00      	add	r7, sp, #0
 8018b44:	6078      	str	r0, [r7, #4]
 8018b46:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 8018b48:	687b      	ldr	r3, [r7, #4]
 8018b4a:	6839      	ldr	r1, [r7, #0]
 8018b4c:	4618      	mov	r0, r3
 8018b4e:	f000 f8c8 	bl	8018ce2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>
 8018b52:	4603      	mov	r3, r0
 8018b54:	4618      	mov	r0, r3
 8018b56:	3708      	adds	r7, #8
 8018b58:	46bd      	mov	sp, r7
 8018b5a:	bd80      	pop	{r7, pc}

08018b5c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8018b5c:	b580      	push	{r7, lr}
 8018b5e:	b082      	sub	sp, #8
 8018b60:	af00      	add	r7, sp, #0
 8018b62:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 8018b64:	687b      	ldr	r3, [r7, #4]
 8018b66:	4618      	mov	r0, r3
 8018b68:	f000 f8f7 	bl	8018d5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8018b6c:	4603      	mov	r3, r0
 8018b6e:	4618      	mov	r0, r3
 8018b70:	3708      	adds	r7, #8
 8018b72:	46bd      	mov	sp, r7
 8018b74:	bd80      	pop	{r7, pc}

08018b76 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8018b76:	b480      	push	{r7}
 8018b78:	b083      	sub	sp, #12
 8018b7a:	af00      	add	r7, sp, #0
 8018b7c:	6078      	str	r0, [r7, #4]
 8018b7e:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8018b80:	687b      	ldr	r3, [r7, #4]
 8018b82:	681a      	ldr	r2, [r3, #0]
 8018b84:	683b      	ldr	r3, [r7, #0]
 8018b86:	681b      	ldr	r3, [r3, #0]
 8018b88:	429a      	cmp	r2, r3
 8018b8a:	bf0c      	ite	eq
 8018b8c:	2301      	moveq	r3, #1
 8018b8e:	2300      	movne	r3, #0
 8018b90:	b2db      	uxtb	r3, r3
 8018b92:	4618      	mov	r0, r3
 8018b94:	370c      	adds	r7, #12
 8018b96:	46bd      	mov	sp, r7
 8018b98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018b9c:	4770      	bx	lr

08018b9e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 8018b9e:	b580      	push	{r7, lr}
 8018ba0:	b082      	sub	sp, #8
 8018ba2:	af00      	add	r7, sp, #0
 8018ba4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 8018ba6:	687b      	ldr	r3, [r7, #4]
 8018ba8:	681b      	ldr	r3, [r3, #0]
 8018baa:	4618      	mov	r0, r3
 8018bac:	f000 f8e6 	bl	8018d7c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8018bb0:	4603      	mov	r3, r0
 8018bb2:	4618      	mov	r0, r3
 8018bb4:	3708      	adds	r7, #8
 8018bb6:	46bd      	mov	sp, r7
 8018bb8:	bd80      	pop	{r7, pc}
	...

08018bbc <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>:
      operator[](const key_type& __k)
 8018bbc:	b590      	push	{r4, r7, lr}
 8018bbe:	b08b      	sub	sp, #44	; 0x2c
 8018bc0:	af02      	add	r7, sp, #8
 8018bc2:	6078      	str	r0, [r7, #4]
 8018bc4:	6039      	str	r1, [r7, #0]
	iterator __i = lower_bound(__k);
 8018bc6:	6839      	ldr	r1, [r7, #0]
 8018bc8:	6878      	ldr	r0, [r7, #4]
 8018bca:	f000 f8e5 	bl	8018d98 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE11lower_boundERSA_>
 8018bce:	4603      	mov	r3, r0
 8018bd0:	60bb      	str	r3, [r7, #8]
	if (__i == end() || key_comp()(__k, (*__i).first))
 8018bd2:	6878      	ldr	r0, [r7, #4]
 8018bd4:	f7ff ffc2 	bl	8018b5c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 8018bd8:	4603      	mov	r3, r0
 8018bda:	60fb      	str	r3, [r7, #12]
 8018bdc:	f107 020c 	add.w	r2, r7, #12
 8018be0:	f107 0308 	add.w	r3, r7, #8
 8018be4:	4611      	mov	r1, r2
 8018be6:	4618      	mov	r0, r3
 8018be8:	f7ff ffc5 	bl	8018b76 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8018bec:	4603      	mov	r3, r0
 8018bee:	2b00      	cmp	r3, #0
 8018bf0:	d112      	bne.n	8018c18 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x5c>
 8018bf2:	6878      	ldr	r0, [r7, #4]
 8018bf4:	f000 f8df 	bl	8018db6 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE8key_compEv>
 8018bf8:	f107 0308 	add.w	r3, r7, #8
 8018bfc:	4618      	mov	r0, r3
 8018bfe:	f000 f8e7 	bl	8018dd0 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 8018c02:	4603      	mov	r3, r0
 8018c04:	461a      	mov	r2, r3
 8018c06:	f107 0310 	add.w	r3, r7, #16
 8018c0a:	6839      	ldr	r1, [r7, #0]
 8018c0c:	4618      	mov	r0, r3
 8018c0e:	f7ec fd13 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8018c12:	4603      	mov	r3, r0
 8018c14:	2b00      	cmp	r3, #0
 8018c16:	d001      	beq.n	8018c1c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x60>
 8018c18:	2301      	movs	r3, #1
 8018c1a:	e000      	b.n	8018c1e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x62>
 8018c1c:	2300      	movs	r3, #0
 8018c1e:	2b00      	cmp	r3, #0
 8018c20:	d01b      	beq.n	8018c5a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x9e>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 8018c22:	687c      	ldr	r4, [r7, #4]
 8018c24:	f107 0208 	add.w	r2, r7, #8
 8018c28:	f107 0314 	add.w	r3, r7, #20
 8018c2c:	4611      	mov	r1, r2
 8018c2e:	4618      	mov	r0, r3
 8018c30:	f000 f8eb 	bl	8018e0a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1ERKSt17_Rb_tree_iteratorIS9_E>
 8018c34:	f107 0318 	add.w	r3, r7, #24
 8018c38:	6839      	ldr	r1, [r7, #0]
 8018c3a:	4618      	mov	r0, r3
 8018c3c:	f000 f8d6 	bl	8018dec <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IvLb1EEES7_>
 8018c40:	f107 0218 	add.w	r2, r7, #24
 8018c44:	f107 031c 	add.w	r3, r7, #28
 8018c48:	9300      	str	r3, [sp, #0]
 8018c4a:	4613      	mov	r3, r2
 8018c4c:	4a08      	ldr	r2, [pc, #32]	; (8018c70 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0xb4>)
 8018c4e:	6979      	ldr	r1, [r7, #20]
 8018c50:	4620      	mov	r0, r4
 8018c52:	f000 f8ea 	bl	8018e2a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_>
 8018c56:	4603      	mov	r3, r0
 8018c58:	60bb      	str	r3, [r7, #8]
	return (*__i).second;
 8018c5a:	f107 0308 	add.w	r3, r7, #8
 8018c5e:	4618      	mov	r0, r3
 8018c60:	f000 f8b6 	bl	8018dd0 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 8018c64:	4603      	mov	r3, r0
 8018c66:	3318      	adds	r3, #24
      }
 8018c68:	4618      	mov	r0, r3
 8018c6a:	3724      	adds	r7, #36	; 0x24
 8018c6c:	46bd      	mov	sp, r7
 8018c6e:	bd90      	pop	{r4, r7, pc}
 8018c70:	08027e78 	.word	0x08027e78

08018c74 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8018c74:	b580      	push	{r7, lr}
 8018c76:	b082      	sub	sp, #8
 8018c78:	af00      	add	r7, sp, #0
 8018c7a:	6078      	str	r0, [r7, #4]
 8018c7c:	6878      	ldr	r0, [r7, #4]
 8018c7e:	f000 f912 	bl	8018ea6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>
 8018c82:	687b      	ldr	r3, [r7, #4]
 8018c84:	4618      	mov	r0, r3
 8018c86:	3708      	adds	r7, #8
 8018c88:	46bd      	mov	sp, r7
 8018c8a:	bd80      	pop	{r7, pc}

08018c8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8018c8c:	b580      	push	{r7, lr}
 8018c8e:	b084      	sub	sp, #16
 8018c90:	af00      	add	r7, sp, #0
 8018c92:	6078      	str	r0, [r7, #4]
 8018c94:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 8018c96:	683b      	ldr	r3, [r7, #0]
 8018c98:	2b00      	cmp	r3, #0
 8018c9a:	d012      	beq.n	8018cc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0x36>
	  _M_erase(_S_right(__x));
 8018c9c:	6838      	ldr	r0, [r7, #0]
 8018c9e:	f000 f90d 	bl	8018ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8018ca2:	4603      	mov	r3, r0
 8018ca4:	4619      	mov	r1, r3
 8018ca6:	6878      	ldr	r0, [r7, #4]
 8018ca8:	f7ff fff0 	bl	8018c8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
	  _Link_type __y = _S_left(__x);
 8018cac:	6838      	ldr	r0, [r7, #0]
 8018cae:	f000 f911 	bl	8018ed4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8018cb2:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8018cb4:	6839      	ldr	r1, [r7, #0]
 8018cb6:	6878      	ldr	r0, [r7, #4]
 8018cb8:	f000 f918 	bl	8018eec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	  __x = __y;
 8018cbc:	68fb      	ldr	r3, [r7, #12]
 8018cbe:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8018cc0:	e7e9      	b.n	8018c96 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0xa>
    }
 8018cc2:	bf00      	nop
 8018cc4:	3710      	adds	r7, #16
 8018cc6:	46bd      	mov	sp, r7
 8018cc8:	bd80      	pop	{r7, pc}

08018cca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8018cca:	b480      	push	{r7}
 8018ccc:	b083      	sub	sp, #12
 8018cce:	af00      	add	r7, sp, #0
 8018cd0:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8018cd2:	687b      	ldr	r3, [r7, #4]
 8018cd4:	689b      	ldr	r3, [r3, #8]
 8018cd6:	4618      	mov	r0, r3
 8018cd8:	370c      	adds	r7, #12
 8018cda:	46bd      	mov	sp, r7
 8018cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018ce0:	4770      	bx	lr

08018ce2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8018ce2:	b590      	push	{r4, r7, lr}
 8018ce4:	b085      	sub	sp, #20
 8018ce6:	af00      	add	r7, sp, #0
 8018ce8:	6078      	str	r0, [r7, #4]
 8018cea:	6039      	str	r1, [r7, #0]
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 8018cec:	6878      	ldr	r0, [r7, #4]
 8018cee:	f7ff ffec 	bl	8018cca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8018cf2:	4604      	mov	r4, r0
 8018cf4:	6878      	ldr	r0, [r7, #4]
 8018cf6:	f000 f90a 	bl	8018f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8018cfa:	4602      	mov	r2, r0
 8018cfc:	683b      	ldr	r3, [r7, #0]
 8018cfe:	4621      	mov	r1, r4
 8018d00:	6878      	ldr	r0, [r7, #4]
 8018d02:	f000 f910 	bl	8018f26 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>
 8018d06:	4603      	mov	r3, r0
 8018d08:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 8018d0a:	6878      	ldr	r0, [r7, #4]
 8018d0c:	f000 f825 	bl	8018d5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8018d10:	4603      	mov	r3, r0
 8018d12:	60fb      	str	r3, [r7, #12]
 8018d14:	f107 020c 	add.w	r2, r7, #12
 8018d18:	f107 0308 	add.w	r3, r7, #8
 8018d1c:	4611      	mov	r1, r2
 8018d1e:	4618      	mov	r0, r3
 8018d20:	f7ff ff29 	bl	8018b76 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8018d24:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 8018d26:	2b00      	cmp	r3, #0
 8018d28:	d10d      	bne.n	8018d46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 8018d2a:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 8018d2c:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 8018d2e:	4618      	mov	r0, r3
 8018d30:	f000 f92a 	bl	8018f88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8018d34:	4603      	mov	r3, r0
 8018d36:	461a      	mov	r2, r3
 8018d38:	6839      	ldr	r1, [r7, #0]
 8018d3a:	4620      	mov	r0, r4
 8018d3c:	f7ec fc7c 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8018d40:	4603      	mov	r3, r0
 8018d42:	2b00      	cmp	r3, #0
 8018d44:	d004      	beq.n	8018d50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8018d46:	6878      	ldr	r0, [r7, #4]
 8018d48:	f000 f807 	bl	8018d5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8018d4c:	4603      	mov	r3, r0
 8018d4e:	e000      	b.n	8018d52 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x70>
 8018d50:	68bb      	ldr	r3, [r7, #8]
    }
 8018d52:	4618      	mov	r0, r3
 8018d54:	3714      	adds	r7, #20
 8018d56:	46bd      	mov	sp, r7
 8018d58:	bd90      	pop	{r4, r7, pc}

08018d5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8018d5a:	b580      	push	{r7, lr}
 8018d5c:	b084      	sub	sp, #16
 8018d5e:	af00      	add	r7, sp, #0
 8018d60:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8018d62:	687b      	ldr	r3, [r7, #4]
 8018d64:	1d1a      	adds	r2, r3, #4
 8018d66:	f107 030c 	add.w	r3, r7, #12
 8018d6a:	4611      	mov	r1, r2
 8018d6c:	4618      	mov	r0, r3
 8018d6e:	f000 f917 	bl	8018fa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8018d72:	68fb      	ldr	r3, [r7, #12]
 8018d74:	4618      	mov	r0, r3
 8018d76:	3710      	adds	r7, #16
 8018d78:	46bd      	mov	sp, r7
 8018d7a:	bd80      	pop	{r7, pc}

08018d7c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>:
      _M_valptr()
 8018d7c:	b580      	push	{r7, lr}
 8018d7e:	b082      	sub	sp, #8
 8018d80:	af00      	add	r7, sp, #0
 8018d82:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8018d84:	687b      	ldr	r3, [r7, #4]
 8018d86:	3310      	adds	r3, #16
 8018d88:	4618      	mov	r0, r3
 8018d8a:	f000 f918 	bl	8018fbe <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>
 8018d8e:	4603      	mov	r3, r0
 8018d90:	4618      	mov	r0, r3
 8018d92:	3708      	adds	r7, #8
 8018d94:	46bd      	mov	sp, r7
 8018d96:	bd80      	pop	{r7, pc}

08018d98 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE11lower_boundERSA_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
 8018d98:	b580      	push	{r7, lr}
 8018d9a:	b082      	sub	sp, #8
 8018d9c:	af00      	add	r7, sp, #0
 8018d9e:	6078      	str	r0, [r7, #4]
 8018da0:	6039      	str	r1, [r7, #0]
      { return _M_t.lower_bound(__x); }
 8018da2:	687b      	ldr	r3, [r7, #4]
 8018da4:	6839      	ldr	r1, [r7, #0]
 8018da6:	4618      	mov	r0, r3
 8018da8:	f000 f915 	bl	8018fd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11lower_boundERS7_>
 8018dac:	4603      	mov	r3, r0
 8018dae:	4618      	mov	r0, r3
 8018db0:	3708      	adds	r7, #8
 8018db2:	46bd      	mov	sp, r7
 8018db4:	bd80      	pop	{r7, pc}

08018db6 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE8key_compEv>:
      key_comp() const
 8018db6:	b590      	push	{r4, r7, lr}
 8018db8:	b083      	sub	sp, #12
 8018dba:	af00      	add	r7, sp, #0
 8018dbc:	6078      	str	r0, [r7, #4]
      { return _M_t.key_comp(); }
 8018dbe:	687b      	ldr	r3, [r7, #4]
 8018dc0:	4618      	mov	r0, r3
 8018dc2:	f000 f91f 	bl	8019004 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8key_compEv>
 8018dc6:	4623      	mov	r3, r4
 8018dc8:	4618      	mov	r0, r3
 8018dca:	370c      	adds	r7, #12
 8018dcc:	46bd      	mov	sp, r7
 8018dce:	bd90      	pop	{r4, r7, pc}

08018dd0 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8018dd0:	b580      	push	{r7, lr}
 8018dd2:	b082      	sub	sp, #8
 8018dd4:	af00      	add	r7, sp, #0
 8018dd6:	6078      	str	r0, [r7, #4]
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 8018dd8:	687b      	ldr	r3, [r7, #4]
 8018dda:	681b      	ldr	r3, [r3, #0]
 8018ddc:	4618      	mov	r0, r3
 8018dde:	f7ff ffcd 	bl	8018d7c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8018de2:	4603      	mov	r3, r0
 8018de4:	4618      	mov	r0, r3
 8018de6:	3708      	adds	r7, #8
 8018de8:	46bd      	mov	sp, r7
 8018dea:	bd80      	pop	{r7, pc}

08018dec <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IvLb1EEES7_>:
                   _ConstructibleTuple<_Elements...>()
                 && _TCC<_Dummy>::template
                   _ImplicitlyConvertibleTuple<_Elements...>()
                 && (sizeof...(_Elements) >= 1),
               bool>::type=true>
        constexpr tuple(const _Elements&... __elements)
 8018dec:	b580      	push	{r7, lr}
 8018dee:	b082      	sub	sp, #8
 8018df0:	af00      	add	r7, sp, #0
 8018df2:	6078      	str	r0, [r7, #4]
 8018df4:	6039      	str	r1, [r7, #0]
      : _Inherited(__elements...) { }
 8018df6:	687b      	ldr	r3, [r7, #4]
 8018df8:	6839      	ldr	r1, [r7, #0]
 8018dfa:	4618      	mov	r0, r3
 8018dfc:	f000 f90c 	bl	8019018 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ES7_>
 8018e00:	687b      	ldr	r3, [r7, #4]
 8018e02:	4618      	mov	r0, r3
 8018e04:	3708      	adds	r7, #8
 8018e06:	46bd      	mov	sp, r7
 8018e08:	bd80      	pop	{r7, pc}

08018e0a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1ERKSt17_Rb_tree_iteratorIS9_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8018e0a:	b480      	push	{r7}
 8018e0c:	b083      	sub	sp, #12
 8018e0e:	af00      	add	r7, sp, #0
 8018e10:	6078      	str	r0, [r7, #4]
 8018e12:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8018e14:	683b      	ldr	r3, [r7, #0]
 8018e16:	681a      	ldr	r2, [r3, #0]
 8018e18:	687b      	ldr	r3, [r7, #4]
 8018e1a:	601a      	str	r2, [r3, #0]
 8018e1c:	687b      	ldr	r3, [r7, #4]
 8018e1e:	4618      	mov	r0, r3
 8018e20:	370c      	adds	r7, #12
 8018e22:	46bd      	mov	sp, r7
 8018e24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018e28:	4770      	bx	lr

08018e2a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8018e2a:	b5b0      	push	{r4, r5, r7, lr}
 8018e2c:	b088      	sub	sp, #32
 8018e2e:	af00      	add	r7, sp, #0
 8018e30:	60f8      	str	r0, [r7, #12]
 8018e32:	60b9      	str	r1, [r7, #8]
 8018e34:	607a      	str	r2, [r7, #4]
 8018e36:	603b      	str	r3, [r7, #0]
	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
 8018e38:	6878      	ldr	r0, [r7, #4]
 8018e3a:	f000 f8fc 	bl	8019036 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8018e3e:	4604      	mov	r4, r0
 8018e40:	6838      	ldr	r0, [r7, #0]
 8018e42:	f000 f903 	bl	801904c <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8018e46:	4605      	mov	r5, r0
 8018e48:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8018e4a:	f000 f90a 	bl	8019062 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8018e4e:	4603      	mov	r3, r0
 8018e50:	462a      	mov	r2, r5
 8018e52:	4621      	mov	r1, r4
 8018e54:	68f8      	ldr	r0, [r7, #12]
 8018e56:	f000 f90f 	bl	8019078 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 8018e5a:	61f8      	str	r0, [r7, #28]
	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
 8018e5c:	69f8      	ldr	r0, [r7, #28]
 8018e5e:	f000 fa51 	bl	8019304 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8018e62:	4603      	mov	r3, r0
 8018e64:	f107 0010 	add.w	r0, r7, #16
 8018e68:	68ba      	ldr	r2, [r7, #8]
 8018e6a:	68f9      	ldr	r1, [r7, #12]
 8018e6c:	f000 f927 	bl	80190be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>
	    if (__res.second)
 8018e70:	697b      	ldr	r3, [r7, #20]
 8018e72:	2b00      	cmp	r3, #0
 8018e74:	d007      	beq.n	8018e86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_+0x5c>
	      return _M_insert_node(__res.first, __res.second, __z);
 8018e76:	6939      	ldr	r1, [r7, #16]
 8018e78:	697a      	ldr	r2, [r7, #20]
 8018e7a:	69fb      	ldr	r3, [r7, #28]
 8018e7c:	68f8      	ldr	r0, [r7, #12]
 8018e7e:	f000 fa54 	bl	801932a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E>
 8018e82:	4603      	mov	r3, r0
 8018e84:	e00b      	b.n	8018e9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_+0x74>
	    _M_drop_node(__z);
 8018e86:	69f9      	ldr	r1, [r7, #28]
 8018e88:	68f8      	ldr	r0, [r7, #12]
 8018e8a:	f000 f82f 	bl	8018eec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	    return iterator(__res.first);
 8018e8e:	693a      	ldr	r2, [r7, #16]
 8018e90:	f107 0318 	add.w	r3, r7, #24
 8018e94:	4611      	mov	r1, r2
 8018e96:	4618      	mov	r0, r3
 8018e98:	f000 f882 	bl	8018fa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8018e9c:	69bb      	ldr	r3, [r7, #24]
      }
 8018e9e:	4618      	mov	r0, r3
 8018ea0:	3720      	adds	r7, #32
 8018ea2:	46bd      	mov	sp, r7
 8018ea4:	bdb0      	pop	{r4, r5, r7, pc}

08018ea6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8018ea6:	b480      	push	{r7}
 8018ea8:	b083      	sub	sp, #12
 8018eaa:	af00      	add	r7, sp, #0
 8018eac:	6078      	str	r0, [r7, #4]
 8018eae:	687b      	ldr	r3, [r7, #4]
 8018eb0:	4618      	mov	r0, r3
 8018eb2:	370c      	adds	r7, #12
 8018eb4:	46bd      	mov	sp, r7
 8018eb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018eba:	4770      	bx	lr

08018ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8018ebc:	b480      	push	{r7}
 8018ebe:	b083      	sub	sp, #12
 8018ec0:	af00      	add	r7, sp, #0
 8018ec2:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8018ec4:	687b      	ldr	r3, [r7, #4]
 8018ec6:	68db      	ldr	r3, [r3, #12]
 8018ec8:	4618      	mov	r0, r3
 8018eca:	370c      	adds	r7, #12
 8018ecc:	46bd      	mov	sp, r7
 8018ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018ed2:	4770      	bx	lr

08018ed4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8018ed4:	b480      	push	{r7}
 8018ed6:	b083      	sub	sp, #12
 8018ed8:	af00      	add	r7, sp, #0
 8018eda:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 8018edc:	687b      	ldr	r3, [r7, #4]
 8018ede:	689b      	ldr	r3, [r3, #8]
 8018ee0:	4618      	mov	r0, r3
 8018ee2:	370c      	adds	r7, #12
 8018ee4:	46bd      	mov	sp, r7
 8018ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018eea:	4770      	bx	lr

08018eec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8018eec:	b580      	push	{r7, lr}
 8018eee:	b082      	sub	sp, #8
 8018ef0:	af00      	add	r7, sp, #0
 8018ef2:	6078      	str	r0, [r7, #4]
 8018ef4:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8018ef6:	6839      	ldr	r1, [r7, #0]
 8018ef8:	6878      	ldr	r0, [r7, #4]
 8018efa:	f000 fa53 	bl	80193a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>
	_M_put_node(__p);
 8018efe:	6839      	ldr	r1, [r7, #0]
 8018f00:	6878      	ldr	r0, [r7, #4]
 8018f02:	f000 fa64 	bl	80193ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>
      }
 8018f06:	bf00      	nop
 8018f08:	3708      	adds	r7, #8
 8018f0a:	46bd      	mov	sp, r7
 8018f0c:	bd80      	pop	{r7, pc}

08018f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8018f0e:	b480      	push	{r7}
 8018f10:	b083      	sub	sp, #12
 8018f12:	af00      	add	r7, sp, #0
 8018f14:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8018f16:	687b      	ldr	r3, [r7, #4]
 8018f18:	3304      	adds	r3, #4
 8018f1a:	4618      	mov	r0, r3
 8018f1c:	370c      	adds	r7, #12
 8018f1e:	46bd      	mov	sp, r7
 8018f20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018f24:	4770      	bx	lr

08018f26 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8018f26:	b590      	push	{r4, r7, lr}
 8018f28:	b087      	sub	sp, #28
 8018f2a:	af00      	add	r7, sp, #0
 8018f2c:	60f8      	str	r0, [r7, #12]
 8018f2e:	60b9      	str	r1, [r7, #8]
 8018f30:	607a      	str	r2, [r7, #4]
 8018f32:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8018f34:	68bb      	ldr	r3, [r7, #8]
 8018f36:	2b00      	cmp	r3, #0
 8018f38:	d01b      	beq.n	8018f72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8018f3a:	68fc      	ldr	r4, [r7, #12]
 8018f3c:	68b8      	ldr	r0, [r7, #8]
 8018f3e:	f000 f9e1 	bl	8019304 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8018f42:	4603      	mov	r3, r0
 8018f44:	683a      	ldr	r2, [r7, #0]
 8018f46:	4619      	mov	r1, r3
 8018f48:	4620      	mov	r0, r4
 8018f4a:	f7ec fb75 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8018f4e:	4603      	mov	r3, r0
 8018f50:	f083 0301 	eor.w	r3, r3, #1
 8018f54:	b2db      	uxtb	r3, r3
 8018f56:	2b00      	cmp	r3, #0
 8018f58:	d006      	beq.n	8018f68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 8018f5a:	68bb      	ldr	r3, [r7, #8]
 8018f5c:	607b      	str	r3, [r7, #4]
 8018f5e:	68b8      	ldr	r0, [r7, #8]
 8018f60:	f7ff ffb8 	bl	8018ed4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8018f64:	60b8      	str	r0, [r7, #8]
 8018f66:	e7e5      	b.n	8018f34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 8018f68:	68b8      	ldr	r0, [r7, #8]
 8018f6a:	f7ff ffa7 	bl	8018ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8018f6e:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8018f70:	e7e0      	b.n	8018f34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 8018f72:	f107 0314 	add.w	r3, r7, #20
 8018f76:	6879      	ldr	r1, [r7, #4]
 8018f78:	4618      	mov	r0, r3
 8018f7a:	f000 f811 	bl	8018fa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8018f7e:	697b      	ldr	r3, [r7, #20]
    }
 8018f80:	4618      	mov	r0, r3
 8018f82:	371c      	adds	r7, #28
 8018f84:	46bd      	mov	sp, r7
 8018f86:	bd90      	pop	{r4, r7, pc}

08018f88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8018f88:	b580      	push	{r7, lr}
 8018f8a:	b082      	sub	sp, #8
 8018f8c:	af00      	add	r7, sp, #0
 8018f8e:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8018f90:	6878      	ldr	r0, [r7, #4]
 8018f92:	f000 f9b7 	bl	8019304 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8018f96:	4603      	mov	r3, r0
 8018f98:	4618      	mov	r0, r3
 8018f9a:	3708      	adds	r7, #8
 8018f9c:	46bd      	mov	sp, r7
 8018f9e:	bd80      	pop	{r7, pc}

08018fa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8018fa0:	b480      	push	{r7}
 8018fa2:	b083      	sub	sp, #12
 8018fa4:	af00      	add	r7, sp, #0
 8018fa6:	6078      	str	r0, [r7, #4]
 8018fa8:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8018faa:	687b      	ldr	r3, [r7, #4]
 8018fac:	683a      	ldr	r2, [r7, #0]
 8018fae:	601a      	str	r2, [r3, #0]
 8018fb0:	687b      	ldr	r3, [r7, #4]
 8018fb2:	4618      	mov	r0, r3
 8018fb4:	370c      	adds	r7, #12
 8018fb6:	46bd      	mov	sp, r7
 8018fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018fbc:	4770      	bx	lr

08018fbe <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>:
      _M_ptr() noexcept
 8018fbe:	b580      	push	{r7, lr}
 8018fc0:	b082      	sub	sp, #8
 8018fc2:	af00      	add	r7, sp, #0
 8018fc4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8018fc6:	6878      	ldr	r0, [r7, #4]
 8018fc8:	f000 fa13 	bl	80193f2 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>
 8018fcc:	4603      	mov	r3, r0
 8018fce:	4618      	mov	r0, r3
 8018fd0:	3708      	adds	r7, #8
 8018fd2:	46bd      	mov	sp, r7
 8018fd4:	bd80      	pop	{r7, pc}

08018fd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
 8018fd6:	b590      	push	{r4, r7, lr}
 8018fd8:	b083      	sub	sp, #12
 8018fda:	af00      	add	r7, sp, #0
 8018fdc:	6078      	str	r0, [r7, #4]
 8018fde:	6039      	str	r1, [r7, #0]
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
 8018fe0:	6878      	ldr	r0, [r7, #4]
 8018fe2:	f7ff fe72 	bl	8018cca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8018fe6:	4604      	mov	r4, r0
 8018fe8:	6878      	ldr	r0, [r7, #4]
 8018fea:	f7ff ff90 	bl	8018f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8018fee:	4602      	mov	r2, r0
 8018ff0:	683b      	ldr	r3, [r7, #0]
 8018ff2:	4621      	mov	r1, r4
 8018ff4:	6878      	ldr	r0, [r7, #4]
 8018ff6:	f7ff ff96 	bl	8018f26 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>
 8018ffa:	4603      	mov	r3, r0
 8018ffc:	4618      	mov	r0, r3
 8018ffe:	370c      	adds	r7, #12
 8019000:	46bd      	mov	sp, r7
 8019002:	bd90      	pop	{r4, r7, pc}

08019004 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8key_compEv>:
      key_comp() const
 8019004:	b480      	push	{r7}
 8019006:	b083      	sub	sp, #12
 8019008:	af00      	add	r7, sp, #0
 801900a:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_key_compare; }
 801900c:	4618      	mov	r0, r3
 801900e:	370c      	adds	r7, #12
 8019010:	46bd      	mov	sp, r7
 8019012:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019016:	4770      	bx	lr

08019018 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ES7_>:
      constexpr _Tuple_impl(const _Head& __head)
 8019018:	b580      	push	{r7, lr}
 801901a:	b082      	sub	sp, #8
 801901c:	af00      	add	r7, sp, #0
 801901e:	6078      	str	r0, [r7, #4]
 8019020:	6039      	str	r1, [r7, #0]
      : _Base(__head) { }
 8019022:	687b      	ldr	r3, [r7, #4]
 8019024:	6839      	ldr	r1, [r7, #0]
 8019026:	4618      	mov	r0, r3
 8019028:	f000 f9ee 	bl	8019408 <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>
 801902c:	687b      	ldr	r3, [r7, #4]
 801902e:	4618      	mov	r0, r3
 8019030:	3708      	adds	r7, #8
 8019032:	46bd      	mov	sp, r7
 8019034:	bd80      	pop	{r7, pc}

08019036 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019036:	b480      	push	{r7}
 8019038:	b083      	sub	sp, #12
 801903a:	af00      	add	r7, sp, #0
 801903c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801903e:	687b      	ldr	r3, [r7, #4]
 8019040:	4618      	mov	r0, r3
 8019042:	370c      	adds	r7, #12
 8019044:	46bd      	mov	sp, r7
 8019046:	f85d 7b04 	ldr.w	r7, [sp], #4
 801904a:	4770      	bx	lr

0801904c <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801904c:	b480      	push	{r7}
 801904e:	b083      	sub	sp, #12
 8019050:	af00      	add	r7, sp, #0
 8019052:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019054:	687b      	ldr	r3, [r7, #4]
 8019056:	4618      	mov	r0, r3
 8019058:	370c      	adds	r7, #12
 801905a:	46bd      	mov	sp, r7
 801905c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019060:	4770      	bx	lr

08019062 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019062:	b480      	push	{r7}
 8019064:	b083      	sub	sp, #12
 8019066:	af00      	add	r7, sp, #0
 8019068:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801906a:	687b      	ldr	r3, [r7, #4]
 801906c:	4618      	mov	r0, r3
 801906e:	370c      	adds	r7, #12
 8019070:	46bd      	mov	sp, r7
 8019072:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019076:	4770      	bx	lr

08019078 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8019078:	b5b0      	push	{r4, r5, r7, lr}
 801907a:	b088      	sub	sp, #32
 801907c:	af02      	add	r7, sp, #8
 801907e:	60f8      	str	r0, [r7, #12]
 8019080:	60b9      	str	r1, [r7, #8]
 8019082:	607a      	str	r2, [r7, #4]
 8019084:	603b      	str	r3, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8019086:	68f8      	ldr	r0, [r7, #12]
 8019088:	f000 f9cd 	bl	8019426 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 801908c:	6178      	str	r0, [r7, #20]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 801908e:	68b8      	ldr	r0, [r7, #8]
 8019090:	f7ff ffd1 	bl	8019036 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8019094:	4604      	mov	r4, r0
 8019096:	6878      	ldr	r0, [r7, #4]
 8019098:	f7ff ffd8 	bl	801904c <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 801909c:	4605      	mov	r5, r0
 801909e:	6838      	ldr	r0, [r7, #0]
 80190a0:	f7ff ffdf 	bl	8019062 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 80190a4:	4603      	mov	r3, r0
 80190a6:	9300      	str	r3, [sp, #0]
 80190a8:	462b      	mov	r3, r5
 80190aa:	4622      	mov	r2, r4
 80190ac:	6979      	ldr	r1, [r7, #20]
 80190ae:	68f8      	ldr	r0, [r7, #12]
 80190b0:	f000 f9ca 	bl	8019448 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 80190b4:	697b      	ldr	r3, [r7, #20]
	}
 80190b6:	4618      	mov	r0, r3
 80190b8:	3718      	adds	r7, #24
 80190ba:	46bd      	mov	sp, r7
 80190bc:	bdb0      	pop	{r4, r5, r7, pc}

080190be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80190be:	b590      	push	{r4, r7, lr}
 80190c0:	b08d      	sub	sp, #52	; 0x34
 80190c2:	af00      	add	r7, sp, #0
 80190c4:	60f8      	str	r0, [r7, #12]
 80190c6:	60b9      	str	r1, [r7, #8]
 80190c8:	607a      	str	r2, [r7, #4]
 80190ca:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 80190cc:	1d3b      	adds	r3, r7, #4
 80190ce:	4618      	mov	r0, r3
 80190d0:	f000 f9e7 	bl	80194a2 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE13_M_const_castEv>
 80190d4:	4603      	mov	r3, r0
 80190d6:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 80190d8:	69bc      	ldr	r4, [r7, #24]
 80190da:	68b8      	ldr	r0, [r7, #8]
 80190dc:	f7ff ff17 	bl	8018f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 80190e0:	4603      	mov	r3, r0
 80190e2:	429c      	cmp	r4, r3
 80190e4:	bf0c      	ite	eq
 80190e6:	2301      	moveq	r3, #1
 80190e8:	2300      	movne	r3, #0
 80190ea:	b2db      	uxtb	r3, r3
 80190ec:	2b00      	cmp	r3, #0
 80190ee:	d030      	beq.n	8019152 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x94>
	  if (size() > 0
 80190f0:	68b8      	ldr	r0, [r7, #8]
 80190f2:	f000 f9e7 	bl	80194c4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>
 80190f6:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 80190f8:	2b00      	cmp	r3, #0
 80190fa:	d013      	beq.n	8019124 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 80190fc:	68bc      	ldr	r4, [r7, #8]
 80190fe:	68b8      	ldr	r0, [r7, #8]
 8019100:	f000 f9ec 	bl	80194dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019104:	4603      	mov	r3, r0
 8019106:	681b      	ldr	r3, [r3, #0]
 8019108:	4618      	mov	r0, r3
 801910a:	f7ff ff3d 	bl	8018f88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801910e:	4603      	mov	r3, r0
 8019110:	683a      	ldr	r2, [r7, #0]
 8019112:	4619      	mov	r1, r3
 8019114:	4620      	mov	r0, r4
 8019116:	f7ec fa8f 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801911a:	4603      	mov	r3, r0
 801911c:	2b00      	cmp	r3, #0
 801911e:	d001      	beq.n	8019124 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 8019120:	2301      	movs	r3, #1
 8019122:	e000      	b.n	8019126 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x68>
 8019124:	2300      	movs	r3, #0
	  if (size() > 0
 8019126:	2b00      	cmp	r3, #0
 8019128:	d00c      	beq.n	8019144 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x86>
	    return _Res(0, _M_rightmost());
 801912a:	2300      	movs	r3, #0
 801912c:	61fb      	str	r3, [r7, #28]
 801912e:	68b8      	ldr	r0, [r7, #8]
 8019130:	f000 f9d4 	bl	80194dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019134:	4602      	mov	r2, r0
 8019136:	f107 031c 	add.w	r3, r7, #28
 801913a:	4619      	mov	r1, r3
 801913c:	68f8      	ldr	r0, [r7, #12]
 801913e:	f7ec f8fb 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8019142:	e0db      	b.n	80192fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8019144:	68fb      	ldr	r3, [r7, #12]
 8019146:	683a      	ldr	r2, [r7, #0]
 8019148:	68b9      	ldr	r1, [r7, #8]
 801914a:	4618      	mov	r0, r3
 801914c:	f000 f9d2 	bl	80194f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8019150:	e0d4      	b.n	80192fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8019152:	68bc      	ldr	r4, [r7, #8]
 8019154:	69bb      	ldr	r3, [r7, #24]
 8019156:	4618      	mov	r0, r3
 8019158:	f7ff ff16 	bl	8018f88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801915c:	4603      	mov	r3, r0
 801915e:	461a      	mov	r2, r3
 8019160:	6839      	ldr	r1, [r7, #0]
 8019162:	4620      	mov	r0, r4
 8019164:	f7ec fa68 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019168:	4603      	mov	r3, r0
 801916a:	2b00      	cmp	r3, #0
 801916c:	d057      	beq.n	801921e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x160>
	  iterator __before = __pos;
 801916e:	69bb      	ldr	r3, [r7, #24]
 8019170:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8019172:	69bc      	ldr	r4, [r7, #24]
 8019174:	68b8      	ldr	r0, [r7, #8]
 8019176:	f000 fa42 	bl	80195fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 801917a:	4603      	mov	r3, r0
 801917c:	681b      	ldr	r3, [r3, #0]
 801917e:	429c      	cmp	r4, r3
 8019180:	bf0c      	ite	eq
 8019182:	2301      	moveq	r3, #1
 8019184:	2300      	movne	r3, #0
 8019186:	b2db      	uxtb	r3, r3
 8019188:	2b00      	cmp	r3, #0
 801918a:	d00d      	beq.n	80191a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 801918c:	68b8      	ldr	r0, [r7, #8]
 801918e:	f000 fa36 	bl	80195fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8019192:	4604      	mov	r4, r0
 8019194:	68b8      	ldr	r0, [r7, #8]
 8019196:	f000 fa32 	bl	80195fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 801919a:	4603      	mov	r3, r0
 801919c:	461a      	mov	r2, r3
 801919e:	4621      	mov	r1, r4
 80191a0:	68f8      	ldr	r0, [r7, #12]
 80191a2:	f7ec f970 	bl	8005486 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80191a6:	e0a9      	b.n	80192fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 80191a8:	68bc      	ldr	r4, [r7, #8]
 80191aa:	f107 0314 	add.w	r3, r7, #20
 80191ae:	4618      	mov	r0, r3
 80191b0:	f000 fa31 	bl	8019616 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>
 80191b4:	4603      	mov	r3, r0
 80191b6:	681b      	ldr	r3, [r3, #0]
 80191b8:	4618      	mov	r0, r3
 80191ba:	f7ff fee5 	bl	8018f88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80191be:	4603      	mov	r3, r0
 80191c0:	683a      	ldr	r2, [r7, #0]
 80191c2:	4619      	mov	r1, r3
 80191c4:	4620      	mov	r0, r4
 80191c6:	f7ec fa37 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80191ca:	4603      	mov	r3, r0
 80191cc:	2b00      	cmp	r3, #0
 80191ce:	d01f      	beq.n	8019210 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x152>
	      if (_S_right(__before._M_node) == 0)
 80191d0:	697b      	ldr	r3, [r7, #20]
 80191d2:	4618      	mov	r0, r3
 80191d4:	f7ff fe72 	bl	8018ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 80191d8:	4603      	mov	r3, r0
 80191da:	2b00      	cmp	r3, #0
 80191dc:	bf0c      	ite	eq
 80191de:	2301      	moveq	r3, #1
 80191e0:	2300      	movne	r3, #0
 80191e2:	b2db      	uxtb	r3, r3
 80191e4:	2b00      	cmp	r3, #0
 80191e6:	d00a      	beq.n	80191fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x140>
		return _Res(0, __before._M_node);
 80191e8:	2300      	movs	r3, #0
 80191ea:	623b      	str	r3, [r7, #32]
 80191ec:	f107 0214 	add.w	r2, r7, #20
 80191f0:	f107 0320 	add.w	r3, r7, #32
 80191f4:	4619      	mov	r1, r3
 80191f6:	68f8      	ldr	r0, [r7, #12]
 80191f8:	f7ec f89e 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80191fc:	e07e      	b.n	80192fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 80191fe:	f107 0218 	add.w	r2, r7, #24
 8019202:	f107 0318 	add.w	r3, r7, #24
 8019206:	4619      	mov	r1, r3
 8019208:	68f8      	ldr	r0, [r7, #12]
 801920a:	f7ec f93c 	bl	8005486 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 801920e:	e075      	b.n	80192fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8019210:	68fb      	ldr	r3, [r7, #12]
 8019212:	683a      	ldr	r2, [r7, #0]
 8019214:	68b9      	ldr	r1, [r7, #8]
 8019216:	4618      	mov	r0, r3
 8019218:	f000 f96c 	bl	80194f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 801921c:	e06e      	b.n	80192fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 801921e:	68bc      	ldr	r4, [r7, #8]
 8019220:	69bb      	ldr	r3, [r7, #24]
 8019222:	4618      	mov	r0, r3
 8019224:	f7ff feb0 	bl	8018f88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019228:	4603      	mov	r3, r0
 801922a:	683a      	ldr	r2, [r7, #0]
 801922c:	4619      	mov	r1, r3
 801922e:	4620      	mov	r0, r4
 8019230:	f7ec fa02 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019234:	4603      	mov	r3, r0
 8019236:	2b00      	cmp	r3, #0
 8019238:	d056      	beq.n	80192e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x22a>
	  iterator __after = __pos;
 801923a:	69bb      	ldr	r3, [r7, #24]
 801923c:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 801923e:	69bc      	ldr	r4, [r7, #24]
 8019240:	68b8      	ldr	r0, [r7, #8]
 8019242:	f000 f94b 	bl	80194dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019246:	4603      	mov	r3, r0
 8019248:	681b      	ldr	r3, [r3, #0]
 801924a:	429c      	cmp	r4, r3
 801924c:	bf0c      	ite	eq
 801924e:	2301      	moveq	r3, #1
 8019250:	2300      	movne	r3, #0
 8019252:	b2db      	uxtb	r3, r3
 8019254:	2b00      	cmp	r3, #0
 8019256:	d00c      	beq.n	8019272 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x1b4>
	    return _Res(0, _M_rightmost());
 8019258:	2300      	movs	r3, #0
 801925a:	627b      	str	r3, [r7, #36]	; 0x24
 801925c:	68b8      	ldr	r0, [r7, #8]
 801925e:	f000 f93d 	bl	80194dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019262:	4602      	mov	r2, r0
 8019264:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8019268:	4619      	mov	r1, r3
 801926a:	68f8      	ldr	r0, [r7, #12]
 801926c:	f7ec f864 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8019270:	e044      	b.n	80192fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8019272:	68bc      	ldr	r4, [r7, #8]
 8019274:	f107 0310 	add.w	r3, r7, #16
 8019278:	4618      	mov	r0, r3
 801927a:	f000 f9dd 	bl	8019638 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>
 801927e:	4603      	mov	r3, r0
 8019280:	681b      	ldr	r3, [r3, #0]
 8019282:	4618      	mov	r0, r3
 8019284:	f7ff fe80 	bl	8018f88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019288:	4603      	mov	r3, r0
 801928a:	461a      	mov	r2, r3
 801928c:	6839      	ldr	r1, [r7, #0]
 801928e:	4620      	mov	r0, r4
 8019290:	f7ec f9d2 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019294:	4603      	mov	r3, r0
 8019296:	2b00      	cmp	r3, #0
 8019298:	d01f      	beq.n	80192da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 801929a:	69bb      	ldr	r3, [r7, #24]
 801929c:	4618      	mov	r0, r3
 801929e:	f7ff fe0d 	bl	8018ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 80192a2:	4603      	mov	r3, r0
 80192a4:	2b00      	cmp	r3, #0
 80192a6:	bf0c      	ite	eq
 80192a8:	2301      	moveq	r3, #1
 80192aa:	2300      	movne	r3, #0
 80192ac:	b2db      	uxtb	r3, r3
 80192ae:	2b00      	cmp	r3, #0
 80192b0:	d00a      	beq.n	80192c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x20a>
		return _Res(0, __pos._M_node);
 80192b2:	2300      	movs	r3, #0
 80192b4:	62bb      	str	r3, [r7, #40]	; 0x28
 80192b6:	f107 0218 	add.w	r2, r7, #24
 80192ba:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80192be:	4619      	mov	r1, r3
 80192c0:	68f8      	ldr	r0, [r7, #12]
 80192c2:	f7ec f839 	bl	8005338 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80192c6:	e019      	b.n	80192fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 80192c8:	f107 0210 	add.w	r2, r7, #16
 80192cc:	f107 0310 	add.w	r3, r7, #16
 80192d0:	4619      	mov	r1, r3
 80192d2:	68f8      	ldr	r0, [r7, #12]
 80192d4:	f7ec f8d7 	bl	8005486 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80192d8:	e010      	b.n	80192fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80192da:	68fb      	ldr	r3, [r7, #12]
 80192dc:	683a      	ldr	r2, [r7, #0]
 80192de:	68b9      	ldr	r1, [r7, #8]
 80192e0:	4618      	mov	r0, r3
 80192e2:	f000 f907 	bl	80194f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80192e6:	e009      	b.n	80192fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	return _Res(__pos._M_node, 0);
 80192e8:	2300      	movs	r3, #0
 80192ea:	62fb      	str	r3, [r7, #44]	; 0x2c
 80192ec:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80192f0:	f107 0318 	add.w	r3, r7, #24
 80192f4:	4619      	mov	r1, r3
 80192f6:	68f8      	ldr	r0, [r7, #12]
 80192f8:	f7ec f900 	bl	80054fc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80192fc:	68f8      	ldr	r0, [r7, #12]
 80192fe:	3734      	adds	r7, #52	; 0x34
 8019300:	46bd      	mov	sp, r7
 8019302:	bd90      	pop	{r4, r7, pc}

08019304 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>:
      _S_key(_Const_Link_type __x)
 8019304:	b580      	push	{r7, lr}
 8019306:	b084      	sub	sp, #16
 8019308:	af00      	add	r7, sp, #0
 801930a:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 801930c:	6878      	ldr	r0, [r7, #4]
 801930e:	f000 f9a4 	bl	801965a <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8019312:	4602      	mov	r2, r0
 8019314:	f107 030c 	add.w	r3, r7, #12
 8019318:	4611      	mov	r1, r2
 801931a:	4618      	mov	r0, r3
 801931c:	f000 f9ab 	bl	8019676 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERKS9_>
 8019320:	4603      	mov	r3, r0
      }
 8019322:	4618      	mov	r0, r3
 8019324:	3710      	adds	r7, #16
 8019326:	46bd      	mov	sp, r7
 8019328:	bd80      	pop	{r7, pc}

0801932a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801932a:	b5b0      	push	{r4, r5, r7, lr}
 801932c:	b086      	sub	sp, #24
 801932e:	af00      	add	r7, sp, #0
 8019330:	60f8      	str	r0, [r7, #12]
 8019332:	60b9      	str	r1, [r7, #8]
 8019334:	607a      	str	r2, [r7, #4]
 8019336:	603b      	str	r3, [r7, #0]
			    || _M_impl._M_key_compare(_S_key(__z),
 8019338:	68bb      	ldr	r3, [r7, #8]
 801933a:	2b00      	cmp	r3, #0
 801933c:	d117      	bne.n	801936e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x44>
      bool __insert_left = (__x != 0 || __p == _M_end()
 801933e:	68f8      	ldr	r0, [r7, #12]
 8019340:	f7ff fde5 	bl	8018f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8019344:	4602      	mov	r2, r0
 8019346:	687b      	ldr	r3, [r7, #4]
 8019348:	4293      	cmp	r3, r2
 801934a:	d010      	beq.n	801936e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x44>
			    || _M_impl._M_key_compare(_S_key(__z),
 801934c:	68fc      	ldr	r4, [r7, #12]
 801934e:	6838      	ldr	r0, [r7, #0]
 8019350:	f7ff ffd8 	bl	8019304 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8019354:	4605      	mov	r5, r0
 8019356:	6878      	ldr	r0, [r7, #4]
 8019358:	f7ff fe16 	bl	8018f88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801935c:	4603      	mov	r3, r0
 801935e:	461a      	mov	r2, r3
 8019360:	4629      	mov	r1, r5
 8019362:	4620      	mov	r0, r4
 8019364:	f7ec f968 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019368:	4603      	mov	r3, r0
 801936a:	2b00      	cmp	r3, #0
 801936c:	d001      	beq.n	8019372 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x48>
 801936e:	2301      	movs	r3, #1
 8019370:	e000      	b.n	8019374 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x4a>
 8019372:	2300      	movs	r3, #0
      bool __insert_left = (__x != 0 || __p == _M_end()
 8019374:	75fb      	strb	r3, [r7, #23]
				    this->_M_impl._M_header);
 8019376:	68fb      	ldr	r3, [r7, #12]
 8019378:	3304      	adds	r3, #4
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 801937a:	7df8      	ldrb	r0, [r7, #23]
 801937c:	687a      	ldr	r2, [r7, #4]
 801937e:	6839      	ldr	r1, [r7, #0]
 8019380:	f009 f8f6 	bl	8022570 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
      ++_M_impl._M_node_count;
 8019384:	68fb      	ldr	r3, [r7, #12]
 8019386:	695b      	ldr	r3, [r3, #20]
 8019388:	1c5a      	adds	r2, r3, #1
 801938a:	68fb      	ldr	r3, [r7, #12]
 801938c:	615a      	str	r2, [r3, #20]
      return iterator(__z);
 801938e:	f107 0310 	add.w	r3, r7, #16
 8019392:	6839      	ldr	r1, [r7, #0]
 8019394:	4618      	mov	r0, r3
 8019396:	f7ff fe03 	bl	8018fa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801939a:	693b      	ldr	r3, [r7, #16]
    }
 801939c:	4618      	mov	r0, r3
 801939e:	3718      	adds	r7, #24
 80193a0:	46bd      	mov	sp, r7
 80193a2:	bdb0      	pop	{r4, r5, r7, pc}

080193a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80193a4:	b590      	push	{r4, r7, lr}
 80193a6:	b083      	sub	sp, #12
 80193a8:	af00      	add	r7, sp, #0
 80193aa:	6078      	str	r0, [r7, #4]
 80193ac:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 80193ae:	6878      	ldr	r0, [r7, #4]
 80193b0:	f000 f96d 	bl	801968e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 80193b4:	4604      	mov	r4, r0
 80193b6:	6838      	ldr	r0, [r7, #0]
 80193b8:	f7ff fce0 	bl	8018d7c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 80193bc:	4603      	mov	r3, r0
 80193be:	4619      	mov	r1, r3
 80193c0:	4620      	mov	r0, r4
 80193c2:	f000 f96f 	bl	80196a4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE7destroyISA_EEvRSC_PT_>
      }
 80193c6:	bf00      	nop
 80193c8:	370c      	adds	r7, #12
 80193ca:	46bd      	mov	sp, r7
 80193cc:	bd90      	pop	{r4, r7, pc}

080193ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80193ce:	b580      	push	{r7, lr}
 80193d0:	b082      	sub	sp, #8
 80193d2:	af00      	add	r7, sp, #0
 80193d4:	6078      	str	r0, [r7, #4]
 80193d6:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 80193d8:	6878      	ldr	r0, [r7, #4]
 80193da:	f000 f958 	bl	801968e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 80193de:	4603      	mov	r3, r0
 80193e0:	2201      	movs	r2, #1
 80193e2:	6839      	ldr	r1, [r7, #0]
 80193e4:	4618      	mov	r0, r3
 80193e6:	f000 f96a 	bl	80196be <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE10deallocateERSC_PSB_j>
 80193ea:	bf00      	nop
 80193ec:	3708      	adds	r7, #8
 80193ee:	46bd      	mov	sp, r7
 80193f0:	bd80      	pop	{r7, pc}

080193f2 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>:
      _M_addr() noexcept
 80193f2:	b480      	push	{r7}
 80193f4:	b083      	sub	sp, #12
 80193f6:	af00      	add	r7, sp, #0
 80193f8:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 80193fa:	687b      	ldr	r3, [r7, #4]
 80193fc:	4618      	mov	r0, r3
 80193fe:	370c      	adds	r7, #12
 8019400:	46bd      	mov	sp, r7
 8019402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019406:	4770      	bx	lr

08019408 <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>:
      constexpr _Head_base(const _Head& __h)
 8019408:	b480      	push	{r7}
 801940a:	b083      	sub	sp, #12
 801940c:	af00      	add	r7, sp, #0
 801940e:	6078      	str	r0, [r7, #4]
 8019410:	6039      	str	r1, [r7, #0]
      : _M_head_impl(__h) { }
 8019412:	687b      	ldr	r3, [r7, #4]
 8019414:	683a      	ldr	r2, [r7, #0]
 8019416:	601a      	str	r2, [r3, #0]
 8019418:	687b      	ldr	r3, [r7, #4]
 801941a:	4618      	mov	r0, r3
 801941c:	370c      	adds	r7, #12
 801941e:	46bd      	mov	sp, r7
 8019420:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019424:	4770      	bx	lr

08019426 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>:
      _M_get_node()
 8019426:	b580      	push	{r7, lr}
 8019428:	b082      	sub	sp, #8
 801942a:	af00      	add	r7, sp, #0
 801942c:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 801942e:	6878      	ldr	r0, [r7, #4]
 8019430:	f000 f92d 	bl	801968e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019434:	4603      	mov	r3, r0
 8019436:	2101      	movs	r1, #1
 8019438:	4618      	mov	r0, r3
 801943a:	f000 f94f 	bl	80196dc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE8allocateERSC_j>
 801943e:	4603      	mov	r3, r0
 8019440:	4618      	mov	r0, r3
 8019442:	3708      	adds	r7, #8
 8019444:	46bd      	mov	sp, r7
 8019446:	bd80      	pop	{r7, pc}

08019448 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8019448:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801944c:	b086      	sub	sp, #24
 801944e:	af02      	add	r7, sp, #8
 8019450:	60f8      	str	r0, [r7, #12]
 8019452:	60b9      	str	r1, [r7, #8]
 8019454:	607a      	str	r2, [r7, #4]
 8019456:	603b      	str	r3, [r7, #0]
	      ::new(__node) _Rb_tree_node<_Val>;
 8019458:	68bb      	ldr	r3, [r7, #8]
 801945a:	4619      	mov	r1, r3
 801945c:	2048      	movs	r0, #72	; 0x48
 801945e:	f7e7 fdfc 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8019462:	68f8      	ldr	r0, [r7, #12]
 8019464:	f000 f913 	bl	801968e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019468:	4604      	mov	r4, r0
 801946a:	68b8      	ldr	r0, [r7, #8]
 801946c:	f7ff fc86 	bl	8018d7c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8019470:	4605      	mov	r5, r0
 8019472:	6878      	ldr	r0, [r7, #4]
 8019474:	f7ff fddf 	bl	8019036 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8019478:	4606      	mov	r6, r0
 801947a:	6838      	ldr	r0, [r7, #0]
 801947c:	f7ff fde6 	bl	801904c <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8019480:	4680      	mov	r8, r0
 8019482:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8019484:	f7ff fded 	bl	8019062 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8019488:	4603      	mov	r3, r0
 801948a:	9300      	str	r3, [sp, #0]
 801948c:	4643      	mov	r3, r8
 801948e:	4632      	mov	r2, r6
 8019490:	4629      	mov	r1, r5
 8019492:	4620      	mov	r0, r4
 8019494:	f000 f931 	bl	80196fa <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESI_IJEEEEEvRSC_PT_DpOT0_>
	}
 8019498:	bf00      	nop
 801949a:	3710      	adds	r7, #16
 801949c:	46bd      	mov	sp, r7
 801949e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080194a2 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 80194a2:	b580      	push	{r7, lr}
 80194a4:	b084      	sub	sp, #16
 80194a6:	af00      	add	r7, sp, #0
 80194a8:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 80194aa:	687b      	ldr	r3, [r7, #4]
 80194ac:	681a      	ldr	r2, [r3, #0]
 80194ae:	f107 030c 	add.w	r3, r7, #12
 80194b2:	4611      	mov	r1, r2
 80194b4:	4618      	mov	r0, r3
 80194b6:	f7ff fd73 	bl	8018fa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 80194ba:	68fb      	ldr	r3, [r7, #12]
 80194bc:	4618      	mov	r0, r3
 80194be:	3710      	adds	r7, #16
 80194c0:	46bd      	mov	sp, r7
 80194c2:	bd80      	pop	{r7, pc}

080194c4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 80194c4:	b480      	push	{r7}
 80194c6:	b083      	sub	sp, #12
 80194c8:	af00      	add	r7, sp, #0
 80194ca:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 80194cc:	687b      	ldr	r3, [r7, #4]
 80194ce:	695b      	ldr	r3, [r3, #20]
 80194d0:	4618      	mov	r0, r3
 80194d2:	370c      	adds	r7, #12
 80194d4:	46bd      	mov	sp, r7
 80194d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80194da:	4770      	bx	lr

080194dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 80194dc:	b480      	push	{r7}
 80194de:	b083      	sub	sp, #12
 80194e0:	af00      	add	r7, sp, #0
 80194e2:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 80194e4:	687b      	ldr	r3, [r7, #4]
 80194e6:	3310      	adds	r3, #16
 80194e8:	4618      	mov	r0, r3
 80194ea:	370c      	adds	r7, #12
 80194ec:	46bd      	mov	sp, r7
 80194ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80194f2:	4770      	bx	lr

080194f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80194f4:	b590      	push	{r4, r7, lr}
 80194f6:	b08b      	sub	sp, #44	; 0x2c
 80194f8:	af00      	add	r7, sp, #0
 80194fa:	60f8      	str	r0, [r7, #12]
 80194fc:	60b9      	str	r1, [r7, #8]
 80194fe:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8019500:	68b8      	ldr	r0, [r7, #8]
 8019502:	f7ff fbe2 	bl	8018cca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8019506:	4603      	mov	r3, r0
 8019508:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 801950a:	68b8      	ldr	r0, [r7, #8]
 801950c:	f7ff fcff 	bl	8018f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8019510:	4603      	mov	r3, r0
 8019512:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8019514:	2301      	movs	r3, #1
 8019516:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 801951a:	69bb      	ldr	r3, [r7, #24]
 801951c:	2b00      	cmp	r3, #0
 801951e:	d020      	beq.n	8019562 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 8019520:	69bb      	ldr	r3, [r7, #24]
 8019522:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8019524:	68bc      	ldr	r4, [r7, #8]
 8019526:	69bb      	ldr	r3, [r7, #24]
 8019528:	4618      	mov	r0, r3
 801952a:	f7ff feeb 	bl	8019304 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 801952e:	4603      	mov	r3, r0
 8019530:	461a      	mov	r2, r3
 8019532:	6879      	ldr	r1, [r7, #4]
 8019534:	4620      	mov	r0, r4
 8019536:	f7ec f87f 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801953a:	4603      	mov	r3, r0
 801953c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8019540:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8019544:	2b00      	cmp	r3, #0
 8019546:	d005      	beq.n	8019554 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x60>
 8019548:	69bb      	ldr	r3, [r7, #24]
 801954a:	4618      	mov	r0, r3
 801954c:	f7ff fcc2 	bl	8018ed4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8019550:	4603      	mov	r3, r0
 8019552:	e004      	b.n	801955e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6a>
 8019554:	69bb      	ldr	r3, [r7, #24]
 8019556:	4618      	mov	r0, r3
 8019558:	f7ff fcb0 	bl	8018ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 801955c:	4603      	mov	r3, r0
 801955e:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8019560:	e7db      	b.n	801951a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 8019562:	697a      	ldr	r2, [r7, #20]
 8019564:	f107 0310 	add.w	r3, r7, #16
 8019568:	4611      	mov	r1, r2
 801956a:	4618      	mov	r0, r3
 801956c:	f7ff fd18 	bl	8018fa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8019570:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8019574:	2b00      	cmp	r3, #0
 8019576:	d01d      	beq.n	80195b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 8019578:	68b8      	ldr	r0, [r7, #8]
 801957a:	f000 f8dc 	bl	8019736 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 801957e:	4603      	mov	r3, r0
 8019580:	61fb      	str	r3, [r7, #28]
 8019582:	f107 021c 	add.w	r2, r7, #28
 8019586:	f107 0310 	add.w	r3, r7, #16
 801958a:	4611      	mov	r1, r2
 801958c:	4618      	mov	r0, r3
 801958e:	f7ff faf2 	bl	8018b76 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8019592:	4603      	mov	r3, r0
 8019594:	2b00      	cmp	r3, #0
 8019596:	d008      	beq.n	80195aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 8019598:	f107 0214 	add.w	r2, r7, #20
 801959c:	f107 0318 	add.w	r3, r7, #24
 80195a0:	4619      	mov	r1, r3
 80195a2:	68f8      	ldr	r0, [r7, #12]
 80195a4:	f000 f8d8 	bl	8019758 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>
 80195a8:	e025      	b.n	80195f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 80195aa:	f107 0310 	add.w	r3, r7, #16
 80195ae:	4618      	mov	r0, r3
 80195b0:	f000 f831 	bl	8019616 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 80195b4:	68bc      	ldr	r4, [r7, #8]
 80195b6:	693b      	ldr	r3, [r7, #16]
 80195b8:	4618      	mov	r0, r3
 80195ba:	f7ff fce5 	bl	8018f88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80195be:	4603      	mov	r3, r0
 80195c0:	687a      	ldr	r2, [r7, #4]
 80195c2:	4619      	mov	r1, r3
 80195c4:	4620      	mov	r0, r4
 80195c6:	f7ec f837 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80195ca:	4603      	mov	r3, r0
 80195cc:	2b00      	cmp	r3, #0
 80195ce:	d008      	beq.n	80195e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 80195d0:	f107 0214 	add.w	r2, r7, #20
 80195d4:	f107 0318 	add.w	r3, r7, #24
 80195d8:	4619      	mov	r1, r3
 80195da:	68f8      	ldr	r0, [r7, #12]
 80195dc:	f000 f8bc 	bl	8019758 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>
 80195e0:	e009      	b.n	80195f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 80195e2:	2300      	movs	r3, #0
 80195e4:	623b      	str	r3, [r7, #32]
 80195e6:	f107 0220 	add.w	r2, r7, #32
 80195ea:	f107 0310 	add.w	r3, r7, #16
 80195ee:	4619      	mov	r1, r3
 80195f0:	68f8      	ldr	r0, [r7, #12]
 80195f2:	f7eb ff83 	bl	80054fc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80195f6:	68f8      	ldr	r0, [r7, #12]
 80195f8:	372c      	adds	r7, #44	; 0x2c
 80195fa:	46bd      	mov	sp, r7
 80195fc:	bd90      	pop	{r4, r7, pc}

080195fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 80195fe:	b480      	push	{r7}
 8019600:	b083      	sub	sp, #12
 8019602:	af00      	add	r7, sp, #0
 8019604:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 8019606:	687b      	ldr	r3, [r7, #4]
 8019608:	330c      	adds	r3, #12
 801960a:	4618      	mov	r0, r3
 801960c:	370c      	adds	r7, #12
 801960e:	46bd      	mov	sp, r7
 8019610:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019614:	4770      	bx	lr

08019616 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8019616:	b580      	push	{r7, lr}
 8019618:	b082      	sub	sp, #8
 801961a:	af00      	add	r7, sp, #0
 801961c:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 801961e:	687b      	ldr	r3, [r7, #4]
 8019620:	681b      	ldr	r3, [r3, #0]
 8019622:	4618      	mov	r0, r3
 8019624:	f008 ffa2 	bl	802256c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8019628:	4602      	mov	r2, r0
 801962a:	687b      	ldr	r3, [r7, #4]
 801962c:	601a      	str	r2, [r3, #0]
	return *this;
 801962e:	687b      	ldr	r3, [r7, #4]
      }
 8019630:	4618      	mov	r0, r3
 8019632:	3708      	adds	r7, #8
 8019634:	46bd      	mov	sp, r7
 8019636:	bd80      	pop	{r7, pc}

08019638 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8019638:	b580      	push	{r7, lr}
 801963a:	b082      	sub	sp, #8
 801963c:	af00      	add	r7, sp, #0
 801963e:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8019640:	687b      	ldr	r3, [r7, #4]
 8019642:	681b      	ldr	r3, [r3, #0]
 8019644:	4618      	mov	r0, r3
 8019646:	f008 ff7e 	bl	8022546 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 801964a:	4602      	mov	r2, r0
 801964c:	687b      	ldr	r3, [r7, #4]
 801964e:	601a      	str	r2, [r3, #0]
	return *this;
 8019650:	687b      	ldr	r3, [r7, #4]
      }
 8019652:	4618      	mov	r0, r3
 8019654:	3708      	adds	r7, #8
 8019656:	46bd      	mov	sp, r7
 8019658:	bd80      	pop	{r7, pc}

0801965a <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>:
      _M_valptr() const
 801965a:	b580      	push	{r7, lr}
 801965c:	b082      	sub	sp, #8
 801965e:	af00      	add	r7, sp, #0
 8019660:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8019662:	687b      	ldr	r3, [r7, #4]
 8019664:	3310      	adds	r3, #16
 8019666:	4618      	mov	r0, r3
 8019668:	f000 f88f 	bl	801978a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>
 801966c:	4603      	mov	r3, r0
 801966e:	4618      	mov	r0, r3
 8019670:	3708      	adds	r7, #8
 8019672:	46bd      	mov	sp, r7
 8019674:	bd80      	pop	{r7, pc}

08019676 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERKS9_>:
      operator()(const _Pair& __x) const
 8019676:	b480      	push	{r7}
 8019678:	b083      	sub	sp, #12
 801967a:	af00      	add	r7, sp, #0
 801967c:	6078      	str	r0, [r7, #4]
 801967e:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8019680:	683b      	ldr	r3, [r7, #0]
 8019682:	4618      	mov	r0, r3
 8019684:	370c      	adds	r7, #12
 8019686:	46bd      	mov	sp, r7
 8019688:	f85d 7b04 	ldr.w	r7, [sp], #4
 801968c:	4770      	bx	lr

0801968e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 801968e:	b480      	push	{r7}
 8019690:	b083      	sub	sp, #12
 8019692:	af00      	add	r7, sp, #0
 8019694:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8019696:	687b      	ldr	r3, [r7, #4]
 8019698:	4618      	mov	r0, r3
 801969a:	370c      	adds	r7, #12
 801969c:	46bd      	mov	sp, r7
 801969e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80196a2:	4770      	bx	lr

080196a4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE7destroyISA_EEvRSC_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 80196a4:	b580      	push	{r7, lr}
 80196a6:	b082      	sub	sp, #8
 80196a8:	af00      	add	r7, sp, #0
 80196aa:	6078      	str	r0, [r7, #4]
 80196ac:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 80196ae:	6839      	ldr	r1, [r7, #0]
 80196b0:	6878      	ldr	r0, [r7, #4]
 80196b2:	f000 f888 	bl	80197c6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE7destroyISB_EEvPT_>
 80196b6:	bf00      	nop
 80196b8:	3708      	adds	r7, #8
 80196ba:	46bd      	mov	sp, r7
 80196bc:	bd80      	pop	{r7, pc}

080196be <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE10deallocateERSC_PSB_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 80196be:	b580      	push	{r7, lr}
 80196c0:	b084      	sub	sp, #16
 80196c2:	af00      	add	r7, sp, #0
 80196c4:	60f8      	str	r0, [r7, #12]
 80196c6:	60b9      	str	r1, [r7, #8]
 80196c8:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80196ca:	687a      	ldr	r2, [r7, #4]
 80196cc:	68b9      	ldr	r1, [r7, #8]
 80196ce:	68f8      	ldr	r0, [r7, #12]
 80196d0:	f000 f885 	bl	80197de <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE10deallocateEPSC_j>
 80196d4:	bf00      	nop
 80196d6:	3710      	adds	r7, #16
 80196d8:	46bd      	mov	sp, r7
 80196da:	bd80      	pop	{r7, pc}

080196dc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE8allocateERSC_j>:
      allocate(allocator_type& __a, size_type __n)
 80196dc:	b580      	push	{r7, lr}
 80196de:	b082      	sub	sp, #8
 80196e0:	af00      	add	r7, sp, #0
 80196e2:	6078      	str	r0, [r7, #4]
 80196e4:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 80196e6:	2200      	movs	r2, #0
 80196e8:	6839      	ldr	r1, [r7, #0]
 80196ea:	6878      	ldr	r0, [r7, #4]
 80196ec:	f000 f883 	bl	80197f6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv>
 80196f0:	4603      	mov	r3, r0
 80196f2:	4618      	mov	r0, r3
 80196f4:	3708      	adds	r7, #8
 80196f6:	46bd      	mov	sp, r7
 80196f8:	bd80      	pop	{r7, pc}

080196fa <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESI_IJEEEEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80196fa:	b5b0      	push	{r4, r5, r7, lr}
 80196fc:	b086      	sub	sp, #24
 80196fe:	af02      	add	r7, sp, #8
 8019700:	60f8      	str	r0, [r7, #12]
 8019702:	60b9      	str	r1, [r7, #8]
 8019704:	607a      	str	r2, [r7, #4]
 8019706:	603b      	str	r3, [r7, #0]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8019708:	6878      	ldr	r0, [r7, #4]
 801970a:	f7ff fc94 	bl	8019036 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 801970e:	4604      	mov	r4, r0
 8019710:	6838      	ldr	r0, [r7, #0]
 8019712:	f7ff fc9b 	bl	801904c <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8019716:	4605      	mov	r5, r0
 8019718:	6a38      	ldr	r0, [r7, #32]
 801971a:	f7ff fca2 	bl	8019062 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 801971e:	4603      	mov	r3, r0
 8019720:	9300      	str	r3, [sp, #0]
 8019722:	462b      	mov	r3, r5
 8019724:	4622      	mov	r2, r4
 8019726:	68b9      	ldr	r1, [r7, #8]
 8019728:	68f8      	ldr	r0, [r7, #12]
 801972a:	f000 f896 	bl	801985a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvPT_DpOT0_>
 801972e:	bf00      	nop
 8019730:	3710      	adds	r7, #16
 8019732:	46bd      	mov	sp, r7
 8019734:	bdb0      	pop	{r4, r5, r7, pc}

08019736 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8019736:	b580      	push	{r7, lr}
 8019738:	b084      	sub	sp, #16
 801973a:	af00      	add	r7, sp, #0
 801973c:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 801973e:	687b      	ldr	r3, [r7, #4]
 8019740:	68da      	ldr	r2, [r3, #12]
 8019742:	f107 030c 	add.w	r3, r7, #12
 8019746:	4611      	mov	r1, r2
 8019748:	4618      	mov	r0, r3
 801974a:	f7ff fc29 	bl	8018fa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801974e:	68fb      	ldr	r3, [r7, #12]
 8019750:	4618      	mov	r0, r3
 8019752:	3710      	adds	r7, #16
 8019754:	46bd      	mov	sp, r7
 8019756:	bd80      	pop	{r7, pc}

08019758 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8019758:	b580      	push	{r7, lr}
 801975a:	b084      	sub	sp, #16
 801975c:	af00      	add	r7, sp, #0
 801975e:	60f8      	str	r0, [r7, #12]
 8019760:	60b9      	str	r1, [r7, #8]
 8019762:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8019764:	68b8      	ldr	r0, [r7, #8]
 8019766:	f000 f89f 	bl	80198a8 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISE_E4typeE>
 801976a:	4603      	mov	r3, r0
 801976c:	681a      	ldr	r2, [r3, #0]
 801976e:	68fb      	ldr	r3, [r7, #12]
 8019770:	601a      	str	r2, [r3, #0]
 8019772:	6878      	ldr	r0, [r7, #4]
 8019774:	f7ec fe31 	bl	80063da <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8019778:	4603      	mov	r3, r0
 801977a:	681a      	ldr	r2, [r3, #0]
 801977c:	68fb      	ldr	r3, [r7, #12]
 801977e:	605a      	str	r2, [r3, #4]
 8019780:	68fb      	ldr	r3, [r7, #12]
 8019782:	4618      	mov	r0, r3
 8019784:	3710      	adds	r7, #16
 8019786:	46bd      	mov	sp, r7
 8019788:	bd80      	pop	{r7, pc}

0801978a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>:
      _M_ptr() const noexcept
 801978a:	b580      	push	{r7, lr}
 801978c:	b082      	sub	sp, #8
 801978e:	af00      	add	r7, sp, #0
 8019790:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8019792:	6878      	ldr	r0, [r7, #4]
 8019794:	f000 f893 	bl	80198be <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>
 8019798:	4603      	mov	r3, r0
 801979a:	4618      	mov	r0, r3
 801979c:	3708      	adds	r7, #8
 801979e:	46bd      	mov	sp, r7
 80197a0:	bd80      	pop	{r7, pc}

080197a2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>:
    struct pair
 80197a2:	b580      	push	{r7, lr}
 80197a4:	b082      	sub	sp, #8
 80197a6:	af00      	add	r7, sp, #0
 80197a8:	6078      	str	r0, [r7, #4]
 80197aa:	687b      	ldr	r3, [r7, #4]
 80197ac:	3318      	adds	r3, #24
 80197ae:	4618      	mov	r0, r3
 80197b0:	f7e7 fe92 	bl	80014d8 <_ZN6SymbolD1Ev>
 80197b4:	687b      	ldr	r3, [r7, #4]
 80197b6:	4618      	mov	r0, r3
 80197b8:	f009 f913 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80197bc:	687b      	ldr	r3, [r7, #4]
 80197be:	4618      	mov	r0, r3
 80197c0:	3708      	adds	r7, #8
 80197c2:	46bd      	mov	sp, r7
 80197c4:	bd80      	pop	{r7, pc}

080197c6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE7destroyISB_EEvPT_>:
	destroy(_Up* __p)
 80197c6:	b580      	push	{r7, lr}
 80197c8:	b082      	sub	sp, #8
 80197ca:	af00      	add	r7, sp, #0
 80197cc:	6078      	str	r0, [r7, #4]
 80197ce:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 80197d0:	6838      	ldr	r0, [r7, #0]
 80197d2:	f7ff ffe6 	bl	80197a2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 80197d6:	bf00      	nop
 80197d8:	3708      	adds	r7, #8
 80197da:	46bd      	mov	sp, r7
 80197dc:	bd80      	pop	{r7, pc}

080197de <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE10deallocateEPSC_j>:
      deallocate(pointer __p, size_type)
 80197de:	b580      	push	{r7, lr}
 80197e0:	b084      	sub	sp, #16
 80197e2:	af00      	add	r7, sp, #0
 80197e4:	60f8      	str	r0, [r7, #12]
 80197e6:	60b9      	str	r1, [r7, #8]
 80197e8:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80197ea:	68b8      	ldr	r0, [r7, #8]
 80197ec:	f008 fe44 	bl	8022478 <_ZdlPv>
      }
 80197f0:	3710      	adds	r7, #16
 80197f2:	46bd      	mov	sp, r7
 80197f4:	bd80      	pop	{r7, pc}

080197f6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80197f6:	b580      	push	{r7, lr}
 80197f8:	b084      	sub	sp, #16
 80197fa:	af00      	add	r7, sp, #0
 80197fc:	60f8      	str	r0, [r7, #12]
 80197fe:	60b9      	str	r1, [r7, #8]
 8019800:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8019802:	68f8      	ldr	r0, [r7, #12]
 8019804:	f000 f866 	bl	80198d4 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv>
 8019808:	4602      	mov	r2, r0
 801980a:	68bb      	ldr	r3, [r7, #8]
 801980c:	4293      	cmp	r3, r2
 801980e:	bf8c      	ite	hi
 8019810:	2301      	movhi	r3, #1
 8019812:	2300      	movls	r3, #0
 8019814:	b2db      	uxtb	r3, r3
 8019816:	2b00      	cmp	r3, #0
 8019818:	d001      	beq.n	801981e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801981a:	f008 ff05 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801981e:	68ba      	ldr	r2, [r7, #8]
 8019820:	4613      	mov	r3, r2
 8019822:	00db      	lsls	r3, r3, #3
 8019824:	4413      	add	r3, r2
 8019826:	00db      	lsls	r3, r3, #3
 8019828:	4618      	mov	r0, r3
 801982a:	f008 fe38 	bl	802249e <_Znwj>
 801982e:	4603      	mov	r3, r0
 8019830:	bf00      	nop
      }
 8019832:	4618      	mov	r0, r3
 8019834:	3710      	adds	r7, #16
 8019836:	46bd      	mov	sp, r7
 8019838:	bd80      	pop	{r7, pc}

0801983a <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>:
        explicit constexpr tuple(_UElements&&... __elements)
	: _Inherited(std::forward<_UElements>(__elements)...) {	}

      constexpr tuple(const tuple&) = default;

      constexpr tuple(tuple&&) = default;
 801983a:	b580      	push	{r7, lr}
 801983c:	b082      	sub	sp, #8
 801983e:	af00      	add	r7, sp, #0
 8019840:	6078      	str	r0, [r7, #4]
 8019842:	6039      	str	r1, [r7, #0]
 8019844:	687b      	ldr	r3, [r7, #4]
 8019846:	683a      	ldr	r2, [r7, #0]
 8019848:	4611      	mov	r1, r2
 801984a:	4618      	mov	r0, r3
 801984c:	f000 f850 	bl	80198f0 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>
 8019850:	687b      	ldr	r3, [r7, #4]
 8019852:	4618      	mov	r0, r3
 8019854:	3708      	adds	r7, #8
 8019856:	46bd      	mov	sp, r7
 8019858:	bd80      	pop	{r7, pc}

0801985a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801985a:	b590      	push	{r4, r7, lr}
 801985c:	b089      	sub	sp, #36	; 0x24
 801985e:	af00      	add	r7, sp, #0
 8019860:	60f8      	str	r0, [r7, #12]
 8019862:	60b9      	str	r1, [r7, #8]
 8019864:	607a      	str	r2, [r7, #4]
 8019866:	603b      	str	r3, [r7, #0]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8019868:	6878      	ldr	r0, [r7, #4]
 801986a:	f7ff fbe4 	bl	8019036 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 801986e:	6838      	ldr	r0, [r7, #0]
 8019870:	f7ff fbec 	bl	801904c <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8019874:	4602      	mov	r2, r0
 8019876:	f107 0318 	add.w	r3, r7, #24
 801987a:	4611      	mov	r1, r2
 801987c:	4618      	mov	r0, r3
 801987e:	f7ff ffdc 	bl	801983a <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>
 8019882:	f107 0418 	add.w	r4, r7, #24
 8019886:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8019888:	f7ff fbeb 	bl	8019062 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 801988c:	68bb      	ldr	r3, [r7, #8]
 801988e:	4619      	mov	r1, r3
 8019890:	2038      	movs	r0, #56	; 0x38
 8019892:	f7e7 fbe2 	bl	800105a <_ZnwjPv>
 8019896:	7f3b      	ldrb	r3, [r7, #28]
 8019898:	4622      	mov	r2, r4
 801989a:	7d39      	ldrb	r1, [r7, #20]
 801989c:	f000 f83f 	bl	801991e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESC_IJDpT0_EE>
 80198a0:	bf00      	nop
 80198a2:	3724      	adds	r7, #36	; 0x24
 80198a4:	46bd      	mov	sp, r7
 80198a6:	bd90      	pop	{r4, r7, pc}

080198a8 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80198a8:	b480      	push	{r7}
 80198aa:	b083      	sub	sp, #12
 80198ac:	af00      	add	r7, sp, #0
 80198ae:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80198b0:	687b      	ldr	r3, [r7, #4]
 80198b2:	4618      	mov	r0, r3
 80198b4:	370c      	adds	r7, #12
 80198b6:	46bd      	mov	sp, r7
 80198b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80198bc:	4770      	bx	lr

080198be <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>:
      _M_addr() const noexcept
 80198be:	b480      	push	{r7}
 80198c0:	b083      	sub	sp, #12
 80198c2:	af00      	add	r7, sp, #0
 80198c4:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 80198c6:	687b      	ldr	r3, [r7, #4]
 80198c8:	4618      	mov	r0, r3
 80198ca:	370c      	adds	r7, #12
 80198cc:	46bd      	mov	sp, r7
 80198ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80198d2:	4770      	bx	lr

080198d4 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 80198d4:	b480      	push	{r7}
 80198d6:	b083      	sub	sp, #12
 80198d8:	af00      	add	r7, sp, #0
 80198da:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 80198dc:	4b03      	ldr	r3, [pc, #12]	; (80198ec <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv+0x18>)
      }
 80198de:	4618      	mov	r0, r3
 80198e0:	370c      	adds	r7, #12
 80198e2:	46bd      	mov	sp, r7
 80198e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80198e8:	4770      	bx	lr
 80198ea:	bf00      	nop
 80198ec:	01c71c71 	.word	0x01c71c71

080198f0 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>:
      _Tuple_impl(_Tuple_impl&& __in)
 80198f0:	b590      	push	{r4, r7, lr}
 80198f2:	b083      	sub	sp, #12
 80198f4:	af00      	add	r7, sp, #0
 80198f6:	6078      	str	r0, [r7, #4]
 80198f8:	6039      	str	r1, [r7, #0]
      : _Base(std::forward<_Head>(_M_head(__in))) { }
 80198fa:	687c      	ldr	r4, [r7, #4]
 80198fc:	6838      	ldr	r0, [r7, #0]
 80198fe:	f000 f822 	bl	8019946 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>
 8019902:	4603      	mov	r3, r0
 8019904:	4618      	mov	r0, r3
 8019906:	f7ea fb0f 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801990a:	4603      	mov	r3, r0
 801990c:	4619      	mov	r1, r3
 801990e:	4620      	mov	r0, r4
 8019910:	f7ff fd7a 	bl	8019408 <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>
 8019914:	687b      	ldr	r3, [r7, #4]
 8019916:	4618      	mov	r0, r3
 8019918:	370c      	adds	r7, #12
 801991a:	46bd      	mov	sp, r7
 801991c:	bd90      	pop	{r4, r7, pc}

0801991e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESC_IJDpT0_EE>:

  // See stl_pair.h...
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      inline
      pair<_T1, _T2>::
 801991e:	b5b0      	push	{r4, r5, r7, lr}
 8019920:	b086      	sub	sp, #24
 8019922:	af02      	add	r7, sp, #8
 8019924:	60f8      	str	r0, [r7, #12]
 8019926:	7239      	strb	r1, [r7, #8]
 8019928:	607a      	str	r2, [r7, #4]
 801992a:	703b      	strb	r3, [r7, #0]
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
 801992c:	463a      	mov	r2, r7
 801992e:	f88d 4000 	strb.w	r4, [sp]
 8019932:	462b      	mov	r3, r5
 8019934:	6879      	ldr	r1, [r7, #4]
 8019936:	68f8      	ldr	r0, [r7, #12]
 8019938:	f000 f812 	bl	8019960 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJLj0EEJEJEEERSt5tupleIJDpT_EERSB_IJDpT1_EESt12_Index_tupleIJXspT0_EEESK_IJXspT2_EEE>
      { }
 801993c:	68fb      	ldr	r3, [r7, #12]
 801993e:	4618      	mov	r0, r3
 8019940:	3710      	adds	r7, #16
 8019942:	46bd      	mov	sp, r7
 8019944:	bdb0      	pop	{r4, r5, r7, pc}

08019946 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 8019946:	b580      	push	{r7, lr}
 8019948:	b082      	sub	sp, #8
 801994a:	af00      	add	r7, sp, #0
 801994c:	6078      	str	r0, [r7, #4]
 801994e:	687b      	ldr	r3, [r7, #4]
 8019950:	4618      	mov	r0, r3
 8019952:	f000 f82a 	bl	80199aa <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS8_>
 8019956:	4603      	mov	r3, r0
 8019958:	4618      	mov	r0, r3
 801995a:	3708      	adds	r7, #8
 801995c:	46bd      	mov	sp, r7
 801995e:	bd80      	pop	{r7, pc}

08019960 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJLj0EEJEJEEERSt5tupleIJDpT_EERSB_IJDpT1_EESt12_Index_tupleIJXspT0_EEESK_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, std::size_t... _Indexes1,
             typename... _Args2, std::size_t... _Indexes2>
      inline
      pair<_T1, _T2>::
 8019960:	b590      	push	{r4, r7, lr}
 8019962:	b085      	sub	sp, #20
 8019964:	af00      	add	r7, sp, #0
 8019966:	60f8      	str	r0, [r7, #12]
 8019968:	60b9      	str	r1, [r7, #8]
 801996a:	607a      	str	r2, [r7, #4]
 801996c:	703b      	strb	r3, [r7, #0]
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
        second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 801996e:	68fc      	ldr	r4, [r7, #12]
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
 8019970:	68b8      	ldr	r0, [r7, #8]
 8019972:	f000 f826 	bl	80199c2 <_ZSt3getILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_>
 8019976:	4603      	mov	r3, r0
        second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 8019978:	4618      	mov	r0, r3
 801997a:	f7ea fad5 	bl	8003f28 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801997e:	4603      	mov	r3, r0
 8019980:	4619      	mov	r1, r3
 8019982:	4620      	mov	r0, r4
 8019984:	f009 f9f2 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8019988:	68fb      	ldr	r3, [r7, #12]
 801998a:	3318      	adds	r3, #24
 801998c:	2220      	movs	r2, #32
 801998e:	2100      	movs	r1, #0
 8019990:	4618      	mov	r0, r3
 8019992:	f00a fa67 	bl	8023e64 <memset>
 8019996:	68fb      	ldr	r3, [r7, #12]
 8019998:	3318      	adds	r3, #24
 801999a:	4618      	mov	r0, r3
 801999c:	f7f2 ff51 	bl	800c842 <_ZN6SymbolC1Ev>
      { }
 80199a0:	68fb      	ldr	r3, [r7, #12]
 80199a2:	4618      	mov	r0, r3
 80199a4:	3714      	adds	r7, #20
 80199a6:	46bd      	mov	sp, r7
 80199a8:	bd90      	pop	{r4, r7, pc}

080199aa <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS8_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 80199aa:	b480      	push	{r7}
 80199ac:	b083      	sub	sp, #12
 80199ae:	af00      	add	r7, sp, #0
 80199b0:	6078      	str	r0, [r7, #4]
 80199b2:	687b      	ldr	r3, [r7, #4]
 80199b4:	681b      	ldr	r3, [r3, #0]
 80199b6:	4618      	mov	r0, r3
 80199b8:	370c      	adds	r7, #12
 80199ba:	46bd      	mov	sp, r7
 80199bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80199c0:	4770      	bx	lr

080199c2 <_ZSt3getILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_>:
    get(tuple<_Elements...>& __t) noexcept
 80199c2:	b580      	push	{r7, lr}
 80199c4:	b082      	sub	sp, #8
 80199c6:	af00      	add	r7, sp, #0
 80199c8:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 80199ca:	687b      	ldr	r3, [r7, #4]
 80199cc:	4618      	mov	r0, r3
 80199ce:	f000 f805 	bl	80199dc <_ZSt12__get_helperILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE>
 80199d2:	4603      	mov	r3, r0
 80199d4:	4618      	mov	r0, r3
 80199d6:	3708      	adds	r7, #8
 80199d8:	46bd      	mov	sp, r7
 80199da:	bd80      	pop	{r7, pc}

080199dc <_ZSt12__get_helperILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 80199dc:	b580      	push	{r7, lr}
 80199de:	b082      	sub	sp, #8
 80199e0:	af00      	add	r7, sp, #0
 80199e2:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 80199e4:	6878      	ldr	r0, [r7, #4]
 80199e6:	f7ff ffae 	bl	8019946 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>
 80199ea:	4603      	mov	r3, r0
 80199ec:	4618      	mov	r0, r3
 80199ee:	3708      	adds	r7, #8
 80199f0:	46bd      	mov	sp, r7
 80199f2:	bd80      	pop	{r7, pc}

080199f4 <_Z41__static_initialization_and_destruction_0ii>:
 80199f4:	b590      	push	{r4, r7, lr}
 80199f6:	b0e7      	sub	sp, #412	; 0x19c
 80199f8:	af02      	add	r7, sp, #8
 80199fa:	1d3b      	adds	r3, r7, #4
 80199fc:	6018      	str	r0, [r3, #0]
 80199fe:	463b      	mov	r3, r7
 8019a00:	6019      	str	r1, [r3, #0]
 8019a02:	1d3b      	adds	r3, r7, #4
 8019a04:	681b      	ldr	r3, [r3, #0]
 8019a06:	2b01      	cmp	r3, #1
 8019a08:	f040 819d 	bne.w	8019d46 <_Z41__static_initialization_and_destruction_0ii+0x352>
 8019a0c:	463b      	mov	r3, r7
 8019a0e:	681b      	ldr	r3, [r3, #0]
 8019a10:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8019a14:	4293      	cmp	r3, r2
 8019a16:	f040 8196 	bne.w	8019d46 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8019a1a:	f107 0314 	add.w	r3, r7, #20
 8019a1e:	4618      	mov	r0, r3
 8019a20:	2322      	movs	r3, #34	; 0x22
 8019a22:	461a      	mov	r2, r3
 8019a24:	2100      	movs	r1, #0
 8019a26:	f00a fa1d 	bl	8023e64 <memset>
 8019a2a:	f107 0314 	add.w	r3, r7, #20
 8019a2e:	223a      	movs	r2, #58	; 0x3a
 8019a30:	701a      	strb	r2, [r3, #0]
 8019a32:	f107 0314 	add.w	r3, r7, #20
 8019a36:	2201      	movs	r2, #1
 8019a38:	705a      	strb	r2, [r3, #1]
 8019a3a:	f107 0314 	add.w	r3, r7, #20
 8019a3e:	220a      	movs	r2, #10
 8019a40:	709a      	strb	r2, [r3, #2]
 8019a42:	f107 0314 	add.w	r3, r7, #20
 8019a46:	220a      	movs	r2, #10
 8019a48:	70da      	strb	r2, [r3, #3]
 8019a4a:	f107 0314 	add.w	r3, r7, #20
 8019a4e:	222c      	movs	r2, #44	; 0x2c
 8019a50:	711a      	strb	r2, [r3, #4]
 8019a52:	f107 0314 	add.w	r3, r7, #20
 8019a56:	220c      	movs	r2, #12
 8019a58:	715a      	strb	r2, [r3, #5]
 8019a5a:	f107 0314 	add.w	r3, r7, #20
 8019a5e:	222e      	movs	r2, #46	; 0x2e
 8019a60:	719a      	strb	r2, [r3, #6]
 8019a62:	f107 0314 	add.w	r3, r7, #20
 8019a66:	220b      	movs	r2, #11
 8019a68:	71da      	strb	r2, [r3, #7]
 8019a6a:	f107 0314 	add.w	r3, r7, #20
 8019a6e:	225b      	movs	r2, #91	; 0x5b
 8019a70:	721a      	strb	r2, [r3, #8]
 8019a72:	f107 0314 	add.w	r3, r7, #20
 8019a76:	220d      	movs	r2, #13
 8019a78:	725a      	strb	r2, [r3, #9]
 8019a7a:	f107 0314 	add.w	r3, r7, #20
 8019a7e:	225d      	movs	r2, #93	; 0x5d
 8019a80:	729a      	strb	r2, [r3, #10]
 8019a82:	f107 0314 	add.w	r3, r7, #20
 8019a86:	220e      	movs	r2, #14
 8019a88:	72da      	strb	r2, [r3, #11]
 8019a8a:	f107 0314 	add.w	r3, r7, #20
 8019a8e:	227c      	movs	r2, #124	; 0x7c
 8019a90:	731a      	strb	r2, [r3, #12]
 8019a92:	f107 0314 	add.w	r3, r7, #20
 8019a96:	2215      	movs	r2, #21
 8019a98:	735a      	strb	r2, [r3, #13]
 8019a9a:	f107 0314 	add.w	r3, r7, #20
 8019a9e:	2226      	movs	r2, #38	; 0x26
 8019aa0:	739a      	strb	r2, [r3, #14]
 8019aa2:	f107 0314 	add.w	r3, r7, #20
 8019aa6:	2216      	movs	r2, #22
 8019aa8:	73da      	strb	r2, [r3, #15]
 8019aaa:	f107 0314 	add.w	r3, r7, #20
 8019aae:	222b      	movs	r2, #43	; 0x2b
 8019ab0:	741a      	strb	r2, [r3, #16]
 8019ab2:	f107 0314 	add.w	r3, r7, #20
 8019ab6:	221f      	movs	r2, #31
 8019ab8:	745a      	strb	r2, [r3, #17]
 8019aba:	f107 0314 	add.w	r3, r7, #20
 8019abe:	222d      	movs	r2, #45	; 0x2d
 8019ac0:	749a      	strb	r2, [r3, #18]
 8019ac2:	f107 0314 	add.w	r3, r7, #20
 8019ac6:	2220      	movs	r2, #32
 8019ac8:	74da      	strb	r2, [r3, #19]
 8019aca:	f107 0314 	add.w	r3, r7, #20
 8019ace:	222a      	movs	r2, #42	; 0x2a
 8019ad0:	751a      	strb	r2, [r3, #20]
 8019ad2:	f107 0314 	add.w	r3, r7, #20
 8019ad6:	2221      	movs	r2, #33	; 0x21
 8019ad8:	755a      	strb	r2, [r3, #21]
 8019ada:	f107 0314 	add.w	r3, r7, #20
 8019ade:	222f      	movs	r2, #47	; 0x2f
 8019ae0:	759a      	strb	r2, [r3, #22]
 8019ae2:	f107 0314 	add.w	r3, r7, #20
 8019ae6:	2222      	movs	r2, #34	; 0x22
 8019ae8:	75da      	strb	r2, [r3, #23]
 8019aea:	f107 0314 	add.w	r3, r7, #20
 8019aee:	225e      	movs	r2, #94	; 0x5e
 8019af0:	761a      	strb	r2, [r3, #24]
 8019af2:	f107 0314 	add.w	r3, r7, #20
 8019af6:	2223      	movs	r2, #35	; 0x23
 8019af8:	765a      	strb	r2, [r3, #25]
 8019afa:	f107 0314 	add.w	r3, r7, #20
 8019afe:	2225      	movs	r2, #37	; 0x25
 8019b00:	769a      	strb	r2, [r3, #26]
 8019b02:	f107 0314 	add.w	r3, r7, #20
 8019b06:	2224      	movs	r2, #36	; 0x24
 8019b08:	76da      	strb	r2, [r3, #27]
 8019b0a:	f107 0314 	add.w	r3, r7, #20
 8019b0e:	2228      	movs	r2, #40	; 0x28
 8019b10:	771a      	strb	r2, [r3, #28]
 8019b12:	f107 0314 	add.w	r3, r7, #20
 8019b16:	2226      	movs	r2, #38	; 0x26
 8019b18:	775a      	strb	r2, [r3, #29]
 8019b1a:	f107 0314 	add.w	r3, r7, #20
 8019b1e:	2229      	movs	r2, #41	; 0x29
 8019b20:	779a      	strb	r2, [r3, #30]
 8019b22:	f107 0314 	add.w	r3, r7, #20
 8019b26:	2227      	movs	r2, #39	; 0x27
 8019b28:	77da      	strb	r2, [r3, #31]
 8019b2a:	f107 0314 	add.w	r3, r7, #20
 8019b2e:	2225      	movs	r2, #37	; 0x25
 8019b30:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8019b34:	f107 030c 	add.w	r3, r7, #12
 8019b38:	f107 0214 	add.w	r2, r7, #20
 8019b3c:	601a      	str	r2, [r3, #0]
 8019b3e:	f107 030c 	add.w	r3, r7, #12
 8019b42:	2211      	movs	r2, #17
 8019b44:	605a      	str	r2, [r3, #4]
 8019b46:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8019b4a:	4618      	mov	r0, r3
 8019b4c:	f7e7 ff96 	bl	8001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8019b50:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8019b54:	f107 020c 	add.w	r2, r7, #12
 8019b58:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8019b5c:	9300      	str	r3, [sp, #0]
 8019b5e:	460b      	mov	r3, r1
 8019b60:	ca06      	ldmia	r2, {r1, r2}
 8019b62:	4885      	ldr	r0, [pc, #532]	; (8019d78 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8019b64:	f7e7 ffa2 	bl	8001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8019b68:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8019b6c:	4618      	mov	r0, r3
 8019b6e:	f7e7 ff91 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8019b72:	2305      	movs	r3, #5
 8019b74:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8019b78:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8019b7c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019b80:	497e      	ldr	r1, [pc, #504]	; (8019d7c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8019b82:	4618      	mov	r0, r3
 8019b84:	f7e7 fab8 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8019b88:	2306      	movs	r3, #6
 8019b8a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8019b8e:	f207 1263 	addw	r2, r7, #355	; 0x163
 8019b92:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019b96:	331c      	adds	r3, #28
 8019b98:	4979      	ldr	r1, [pc, #484]	; (8019d80 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8019b9a:	4618      	mov	r0, r3
 8019b9c:	f7e7 fad4 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8019ba0:	2307      	movs	r3, #7
 8019ba2:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8019ba6:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8019baa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019bae:	3338      	adds	r3, #56	; 0x38
 8019bb0:	4974      	ldr	r1, [pc, #464]	; (8019d84 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8019bb2:	4618      	mov	r0, r3
 8019bb4:	f7e7 fac8 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8019bb8:	2308      	movs	r3, #8
 8019bba:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8019bbe:	f207 1265 	addw	r2, r7, #357	; 0x165
 8019bc2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019bc6:	3354      	adds	r3, #84	; 0x54
 8019bc8:	496f      	ldr	r1, [pc, #444]	; (8019d88 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8019bca:	4618      	mov	r0, r3
 8019bcc:	f7e7 fa94 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8019bd0:	2309      	movs	r3, #9
 8019bd2:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8019bd6:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8019bda:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019bde:	3370      	adds	r3, #112	; 0x70
 8019be0:	496a      	ldr	r1, [pc, #424]	; (8019d8c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8019be2:	4618      	mov	r0, r3
 8019be4:	f7e7 fad8 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8019be8:	2310      	movs	r3, #16
 8019bea:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8019bee:	f207 1267 	addw	r2, r7, #359	; 0x167
 8019bf2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019bf6:	338c      	adds	r3, #140	; 0x8c
 8019bf8:	4965      	ldr	r1, [pc, #404]	; (8019d90 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8019bfa:	4618      	mov	r0, r3
 8019bfc:	f7e7 faf4 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8019c00:	2311      	movs	r3, #17
 8019c02:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8019c06:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8019c0a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019c0e:	33a8      	adds	r3, #168	; 0xa8
 8019c10:	4960      	ldr	r1, [pc, #384]	; (8019d94 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8019c12:	4618      	mov	r0, r3
 8019c14:	f7e7 fac0 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8019c18:	2312      	movs	r3, #18
 8019c1a:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8019c1e:	f207 1269 	addw	r2, r7, #361	; 0x169
 8019c22:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019c26:	33c4      	adds	r3, #196	; 0xc4
 8019c28:	495b      	ldr	r1, [pc, #364]	; (8019d98 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8019c2a:	4618      	mov	r0, r3
 8019c2c:	f7e7 fa64 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8019c30:	2313      	movs	r3, #19
 8019c32:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8019c36:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8019c3a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019c3e:	33e0      	adds	r3, #224	; 0xe0
 8019c40:	4956      	ldr	r1, [pc, #344]	; (8019d9c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8019c42:	4618      	mov	r0, r3
 8019c44:	f7e7 fa80 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8019c48:	2314      	movs	r3, #20
 8019c4a:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8019c4e:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8019c52:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019c56:	33fc      	adds	r3, #252	; 0xfc
 8019c58:	4951      	ldr	r1, [pc, #324]	; (8019da0 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8019c5a:	4618      	mov	r0, r3
 8019c5c:	f7e7 faec 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8019c60:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8019c64:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8019c68:	601a      	str	r2, [r3, #0]
 8019c6a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8019c6e:	220a      	movs	r2, #10
 8019c70:	605a      	str	r2, [r3, #4]
 8019c72:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8019c76:	4618      	mov	r0, r3
 8019c78:	f7e7 ffa5 	bl	8001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8019c7c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8019c80:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8019c84:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8019c88:	9300      	str	r3, [sp, #0]
 8019c8a:	460b      	mov	r3, r1
 8019c8c:	ca06      	ldmia	r2, {r1, r2}
 8019c8e:	4845      	ldr	r0, [pc, #276]	; (8019da4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8019c90:	f7e7 ffb1 	bl	8001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8019c94:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8019c98:	4618      	mov	r0, r3
 8019c9a:	f7e7 ffa0 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8019c9e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8019ca2:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8019ca6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019caa:	429c      	cmp	r4, r3
 8019cac:	d004      	beq.n	8019cb8 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8019cae:	3c1c      	subs	r4, #28
 8019cb0:	4620      	mov	r0, r4
 8019cb2:	f7e7 fa14 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8019cb6:	e7f6      	b.n	8019ca6 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8019cb8:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8019cbc:	2200      	movs	r2, #0
 8019cbe:	601a      	str	r2, [r3, #0]
 8019cc0:	605a      	str	r2, [r3, #4]
 8019cc2:	609a      	str	r2, [r3, #8]
 8019cc4:	233c      	movs	r3, #60	; 0x3c
 8019cc6:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8019cca:	231b      	movs	r3, #27
 8019ccc:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8019cd0:	231c      	movs	r3, #28
 8019cd2:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8019cd6:	233e      	movs	r3, #62	; 0x3e
 8019cd8:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8019cdc:	2319      	movs	r3, #25
 8019cde:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8019ce2:	231a      	movs	r3, #26
 8019ce4:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8019ce8:	233d      	movs	r3, #61	; 0x3d
 8019cea:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8019cee:	2318      	movs	r3, #24
 8019cf0:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8019cf4:	231d      	movs	r3, #29
 8019cf6:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8019cfa:	2321      	movs	r3, #33	; 0x21
 8019cfc:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8019d00:	2317      	movs	r3, #23
 8019d02:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8019d06:	231e      	movs	r3, #30
 8019d08:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8019d0c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8019d10:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8019d14:	2304      	movs	r3, #4
 8019d16:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8019d1a:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8019d1e:	4618      	mov	r0, r3
 8019d20:	f7e7 ff99 	bl	8001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8019d24:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8019d28:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8019d2c:	9300      	str	r3, [sp, #0]
 8019d2e:	4613      	mov	r3, r2
 8019d30:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8019d34:	ca06      	ldmia	r2, {r1, r2}
 8019d36:	481c      	ldr	r0, [pc, #112]	; (8019da8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8019d38:	f7e7 ffa5 	bl	8001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8019d3c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8019d40:	4618      	mov	r0, r3
 8019d42:	f7e7 ff94 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8019d46:	1d3b      	adds	r3, r7, #4
 8019d48:	681b      	ldr	r3, [r3, #0]
 8019d4a:	2b00      	cmp	r3, #0
 8019d4c:	d10e      	bne.n	8019d6c <_Z41__static_initialization_and_destruction_0ii+0x378>
 8019d4e:	463b      	mov	r3, r7
 8019d50:	681b      	ldr	r3, [r3, #0]
 8019d52:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8019d56:	4293      	cmp	r3, r2
 8019d58:	d108      	bne.n	8019d6c <_Z41__static_initialization_and_destruction_0ii+0x378>
 8019d5a:	4813      	ldr	r0, [pc, #76]	; (8019da8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8019d5c:	f7ef fc25 	bl	80095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8019d60:	4810      	ldr	r0, [pc, #64]	; (8019da4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8019d62:	f7ef fc2f 	bl	80095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8019d66:	4804      	ldr	r0, [pc, #16]	; (8019d78 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8019d68:	f7ef fc39 	bl	80095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8019d6c:	bf00      	nop
 8019d6e:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8019d72:	46bd      	mov	sp, r7
 8019d74:	bd90      	pop	{r4, r7, pc}
 8019d76:	bf00      	nop
 8019d78:	200004e8 	.word	0x200004e8
 8019d7c:	08027b14 	.word	0x08027b14
 8019d80:	08027b1c 	.word	0x08027b1c
 8019d84:	08027b24 	.word	0x08027b24
 8019d88:	08027b2c 	.word	0x08027b2c
 8019d8c:	08027b34 	.word	0x08027b34
 8019d90:	08027b3c 	.word	0x08027b3c
 8019d94:	08027b40 	.word	0x08027b40
 8019d98:	08027b48 	.word	0x08027b48
 8019d9c:	08027b50 	.word	0x08027b50
 8019da0:	08027b58 	.word	0x08027b58
 8019da4:	20000500 	.word	0x20000500
 8019da8:	20000518 	.word	0x20000518

08019dac <_GLOBAL__sub_I__ZN16Variable_handler12get_instanceEv>:
 8019dac:	b580      	push	{r7, lr}
 8019dae:	af00      	add	r7, sp, #0
 8019db0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8019db4:	2001      	movs	r0, #1
 8019db6:	f7ff fe1d 	bl	80199f4 <_Z41__static_initialization_and_destruction_0ii>
 8019dba:	bd80      	pop	{r7, pc}

08019dbc <_GLOBAL__sub_D__ZN16Variable_handler12get_instanceEv>:
 8019dbc:	b580      	push	{r7, lr}
 8019dbe:	af00      	add	r7, sp, #0
 8019dc0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8019dc4:	2000      	movs	r0, #0
 8019dc6:	f7ff fe15 	bl	80199f4 <_Z41__static_initialization_and_destruction_0ii>
 8019dca:	bd80      	pop	{r7, pc}

08019dcc <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
#include "Parser.h"

void Parser::parse_variable_or_function_call(Primal_expression *exp)
{
 8019dcc:	b580      	push	{r7, lr}
 8019dce:	b08a      	sub	sp, #40	; 0x28
 8019dd0:	af00      	add	r7, sp, #0
 8019dd2:	6078      	str	r0, [r7, #4]
 8019dd4:	6039      	str	r1, [r7, #0]
	std::string id(std::get<std::string>(token_buffer.value));
 8019dd6:	687b      	ldr	r3, [r7, #4]
 8019dd8:	3304      	adds	r3, #4
 8019dda:	4618      	mov	r0, r3
 8019ddc:	f7fa f8fa 	bl	8013fd4 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8019de0:	4602      	mov	r2, r0
 8019de2:	f107 0308 	add.w	r3, r7, #8
 8019de6:	4611      	mov	r1, r2
 8019de8:	4618      	mov	r0, r3
 8019dea:	f008 ffbf 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 8019dee:	6878      	ldr	r0, [r7, #4]
 8019df0:	f7f9 fef5 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	if (token_buffer.type == TOKEN_LEFT_BRACKET)
 8019df4:	687b      	ldr	r3, [r7, #4]
 8019df6:	781b      	ldrb	r3, [r3, #0]
 8019df8:	2b26      	cmp	r3, #38	; 0x26
 8019dfa:	d113      	bne.n	8019e24 <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression+0x58>
	{
		exp->type = PRIMAL_FUNCTION_CALL;
 8019dfc:	683b      	ldr	r3, [r7, #0]
 8019dfe:	2205      	movs	r2, #5
 8019e00:	701a      	strb	r2, [r3, #0]
		exp->content = parse_function_call(id);
 8019e02:	f107 0308 	add.w	r3, r7, #8
 8019e06:	4619      	mov	r1, r3
 8019e08:	6878      	ldr	r0, [r7, #4]
 8019e0a:	f7f9 fc49 	bl	80136a0 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8019e0e:	4603      	mov	r3, r0
 8019e10:	623b      	str	r3, [r7, #32]
 8019e12:	683b      	ldr	r3, [r7, #0]
 8019e14:	3304      	adds	r3, #4
 8019e16:	f107 0220 	add.w	r2, r7, #32
 8019e1a:	4611      	mov	r1, r2
 8019e1c:	4618      	mov	r0, r3
 8019e1e:	f000 fcc4 	bl	801a7aa <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8019e22:	e012      	b.n	8019e4a <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression+0x7e>
	}
	else
	{
		exp->type = PRIMAL_VARIABLE;
 8019e24:	683b      	ldr	r3, [r7, #0]
 8019e26:	2204      	movs	r2, #4
 8019e28:	701a      	strb	r2, [r3, #0]
		exp->content = parse_variable(id);
 8019e2a:	f107 0308 	add.w	r3, r7, #8
 8019e2e:	4619      	mov	r1, r3
 8019e30:	6878      	ldr	r0, [r7, #4]
 8019e32:	f7f9 fb73 	bl	801351c <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8019e36:	4603      	mov	r3, r0
 8019e38:	627b      	str	r3, [r7, #36]	; 0x24
 8019e3a:	683b      	ldr	r3, [r7, #0]
 8019e3c:	3304      	adds	r3, #4
 8019e3e:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8019e42:	4611      	mov	r1, r2
 8019e44:	4618      	mov	r0, r3
 8019e46:	f000 fcda 	bl	801a7fe <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
	std::string id(std::get<std::string>(token_buffer.value));
 8019e4a:	f107 0308 	add.w	r3, r7, #8
 8019e4e:	4618      	mov	r0, r3
 8019e50:	f008 fdc7 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8019e54:	bf00      	nop
 8019e56:	3728      	adds	r7, #40	; 0x28
 8019e58:	46bd      	mov	sp, r7
 8019e5a:	bd80      	pop	{r7, pc}

08019e5c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>:
      variant() = default;
 8019e5c:	b580      	push	{r7, lr}
 8019e5e:	b082      	sub	sp, #8
 8019e60:	af00      	add	r7, sp, #0
 8019e62:	6078      	str	r0, [r7, #4]
 8019e64:	687b      	ldr	r3, [r7, #4]
 8019e66:	4618      	mov	r0, r3
 8019e68:	f000 fd3e 	bl	801a8e8 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>
 8019e6c:	687b      	ldr	r3, [r7, #4]
 8019e6e:	4618      	mov	r0, r3
 8019e70:	3708      	adds	r7, #8
 8019e72:	46bd      	mov	sp, r7
 8019e74:	bd80      	pop	{r7, pc}

08019e76 <_ZN17Primal_expressionC1Ev>:
	PRIMAL_STRING,
	PRIMAL_VARIABLE,
	PRIMAL_FUNCTION_CALL
}primal_type;

class Primal_expression
 8019e76:	b580      	push	{r7, lr}
 8019e78:	b082      	sub	sp, #8
 8019e7a:	af00      	add	r7, sp, #0
 8019e7c:	6078      	str	r0, [r7, #4]
 8019e7e:	687b      	ldr	r3, [r7, #4]
 8019e80:	3304      	adds	r3, #4
 8019e82:	4618      	mov	r0, r3
 8019e84:	f7ff ffea 	bl	8019e5c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>
 8019e88:	687b      	ldr	r3, [r7, #4]
 8019e8a:	4618      	mov	r0, r3
 8019e8c:	3708      	adds	r7, #8
 8019e8e:	46bd      	mov	sp, r7
 8019e90:	bd80      	pop	{r7, pc}
	...

08019e94 <_ZN6Parser23parse_primal_expressionEv>:

Primal_expression* Parser::parse_primal_expression()
{
 8019e94:	b590      	push	{r4, r7, lr}
 8019e96:	b093      	sub	sp, #76	; 0x4c
 8019e98:	af00      	add	r7, sp, #0
 8019e9a:	6078      	str	r0, [r7, #4]
	auto exp = new Primal_expression();
 8019e9c:	2020      	movs	r0, #32
 8019e9e:	f008 fafe 	bl	802249e <_Znwj>
 8019ea2:	4603      	mov	r3, r0
 8019ea4:	461c      	mov	r4, r3
 8019ea6:	4620      	mov	r0, r4
 8019ea8:	2320      	movs	r3, #32
 8019eaa:	461a      	mov	r2, r3
 8019eac:	2100      	movs	r1, #0
 8019eae:	f009 ffd9 	bl	8023e64 <memset>
 8019eb2:	4620      	mov	r0, r4
 8019eb4:	f7ff ffdf 	bl	8019e76 <_ZN17Primal_expressionC1Ev>
 8019eb8:	647c      	str	r4, [r7, #68]	; 0x44
	switch(token_buffer.type)
 8019eba:	687b      	ldr	r3, [r7, #4]
 8019ebc:	781b      	ldrb	r3, [r3, #0]
 8019ebe:	3b02      	subs	r3, #2
 8019ec0:	2b0d      	cmp	r3, #13
 8019ec2:	f200 808b 	bhi.w	8019fdc <_ZN6Parser23parse_primal_expressionEv+0x148>
 8019ec6:	a201      	add	r2, pc, #4	; (adr r2, 8019ecc <_ZN6Parser23parse_primal_expressionEv+0x38>)
 8019ec8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8019ecc:	08019fd3 	.word	0x08019fd3
 8019ed0:	08019f47 	.word	0x08019f47
 8019ed4:	08019f6d 	.word	0x08019f6d
 8019ed8:	08019f05 	.word	0x08019f05
 8019edc:	08019f27 	.word	0x08019f27
 8019ee0:	08019fdd 	.word	0x08019fdd
 8019ee4:	08019fdd 	.word	0x08019fdd
 8019ee8:	08019fdd 	.word	0x08019fdd
 8019eec:	08019fdd 	.word	0x08019fdd
 8019ef0:	08019fdd 	.word	0x08019fdd
 8019ef4:	08019fdd 	.word	0x08019fdd
 8019ef8:	08019fdd 	.word	0x08019fdd
 8019efc:	08019fdd 	.word	0x08019fdd
 8019f00:	08019f93 	.word	0x08019f93
	{
	case TOKEN_TRUE:
		exp->type = PRIMAL_BOOL;
 8019f04:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019f06:	2200      	movs	r2, #0
 8019f08:	701a      	strb	r2, [r3, #0]
		exp->content = true;
 8019f0a:	2301      	movs	r3, #1
 8019f0c:	73bb      	strb	r3, [r7, #14]
 8019f0e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019f10:	3304      	adds	r3, #4
 8019f12:	f107 020e 	add.w	r2, r7, #14
 8019f16:	4611      	mov	r1, r2
 8019f18:	4618      	mov	r0, r3
 8019f1a:	f000 fcf2 	bl	801a902 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		get_next_token();
 8019f1e:	6878      	ldr	r0, [r7, #4]
 8019f20:	f7f9 fe5d 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		break;
 8019f24:	e077      	b.n	801a016 <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_FALSE:
		exp->type = PRIMAL_BOOL;
 8019f26:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019f28:	2200      	movs	r2, #0
 8019f2a:	701a      	strb	r2, [r3, #0]
		exp->content = false;
 8019f2c:	2300      	movs	r3, #0
 8019f2e:	73fb      	strb	r3, [r7, #15]
 8019f30:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019f32:	3304      	adds	r3, #4
 8019f34:	f107 020f 	add.w	r2, r7, #15
 8019f38:	4611      	mov	r1, r2
 8019f3a:	4618      	mov	r0, r3
 8019f3c:	f000 fce1 	bl	801a902 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		get_next_token();
 8019f40:	6878      	ldr	r0, [r7, #4]
 8019f42:	f7f9 fe4c 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	case TOKEN_INT:
		exp->type = PRIMAL_INT;
 8019f46:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019f48:	2201      	movs	r2, #1
 8019f4a:	701a      	strb	r2, [r3, #0]
		exp->content = std::get<int>(token_buffer.value);
 8019f4c:	687b      	ldr	r3, [r7, #4]
 8019f4e:	3304      	adds	r3, #4
 8019f50:	4618      	mov	r0, r3
 8019f52:	f000 fd01 	bl	801a958 <_ZSt3getIiJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>
 8019f56:	4602      	mov	r2, r0
 8019f58:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019f5a:	3304      	adds	r3, #4
 8019f5c:	4611      	mov	r1, r2
 8019f5e:	4618      	mov	r0, r3
 8019f60:	f000 fd06 	bl	801a970 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
		get_next_token();
 8019f64:	6878      	ldr	r0, [r7, #4]
 8019f66:	f7f9 fe3a 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		break;
 8019f6a:	e054      	b.n	801a016 <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_FLOAT:
		exp->type = PRIMAL_FLOAT;
 8019f6c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019f6e:	2202      	movs	r2, #2
 8019f70:	701a      	strb	r2, [r3, #0]
		exp->content = std::get<float>(token_buffer.value);
 8019f72:	687b      	ldr	r3, [r7, #4]
 8019f74:	3304      	adds	r3, #4
 8019f76:	4618      	mov	r0, r3
 8019f78:	f000 fd24 	bl	801a9c4 <_ZSt3getIfJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>
 8019f7c:	4602      	mov	r2, r0
 8019f7e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019f80:	3304      	adds	r3, #4
 8019f82:	4611      	mov	r1, r2
 8019f84:	4618      	mov	r0, r3
 8019f86:	f000 fd29 	bl	801a9dc <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
		get_next_token();
 8019f8a:	6878      	ldr	r0, [r7, #4]
 8019f8c:	f7f9 fe27 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		break;
 8019f90:	e041      	b.n	801a016 <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_STRING:
		exp->type = PRIMAL_STRING;
 8019f92:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019f94:	2203      	movs	r2, #3
 8019f96:	701a      	strb	r2, [r3, #0]
		exp->content = std::string(std::get<std::string>(token_buffer.value));
 8019f98:	687b      	ldr	r3, [r7, #4]
 8019f9a:	3304      	adds	r3, #4
 8019f9c:	4618      	mov	r0, r3
 8019f9e:	f7fa f819 	bl	8013fd4 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8019fa2:	4602      	mov	r2, r0
 8019fa4:	f107 0310 	add.w	r3, r7, #16
 8019fa8:	4611      	mov	r1, r2
 8019faa:	4618      	mov	r0, r3
 8019fac:	f008 fede 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8019fb0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019fb2:	3304      	adds	r3, #4
 8019fb4:	f107 0210 	add.w	r2, r7, #16
 8019fb8:	4611      	mov	r1, r2
 8019fba:	4618      	mov	r0, r3
 8019fbc:	f000 fd38 	bl	801aa30 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8019fc0:	f107 0310 	add.w	r3, r7, #16
 8019fc4:	4618      	mov	r0, r3
 8019fc6:	f008 fd0c 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		get_next_token();
 8019fca:	6878      	ldr	r0, [r7, #4]
 8019fcc:	f7f9 fe07 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		break;
 8019fd0:	e021      	b.n	801a016 <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_IDENTIFIER:
		parse_variable_or_function_call(exp);
 8019fd2:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8019fd4:	6878      	ldr	r0, [r7, #4]
 8019fd6:	f7ff fef9 	bl	8019dcc <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression>
		break;
 8019fda:	e01c      	b.n	801a016 <_ZN6Parser23parse_primal_expressionEv+0x182>
	default:
		Transmitter::report_error("expression");
 8019fdc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8019fe0:	4618      	mov	r0, r3
 8019fe2:	f008 fa6d 	bl	80224c0 <_ZNSaIcEC1Ev>
 8019fe6:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8019fea:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8019fee:	490c      	ldr	r1, [pc, #48]	; (801a020 <_ZN6Parser23parse_primal_expressionEv+0x18c>)
 8019ff0:	4618      	mov	r0, r3
 8019ff2:	f7e7 fd96 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8019ff6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8019ffa:	4618      	mov	r0, r3
 8019ffc:	f7fe fb28 	bl	8018650 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801a000:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801a004:	4618      	mov	r0, r3
 801a006:	f008 fcec 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801a00a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801a00e:	4618      	mov	r0, r3
 801a010:	f008 fa57 	bl	80224c2 <_ZNSaIcED1Ev>
		break;
 801a014:	bf00      	nop
	}
	return exp;
 801a016:	6c7b      	ldr	r3, [r7, #68]	; 0x44
}
 801a018:	4618      	mov	r0, r3
 801a01a:	374c      	adds	r7, #76	; 0x4c
 801a01c:	46bd      	mov	sp, r7
 801a01e:	bd90      	pop	{r4, r7, pc}
 801a020:	08027b5c 	.word	0x08027b5c

0801a024 <_ZN6Parser23parse_nested_expressionEv>:

Expression* Parser::parse_nested_expression()
{
 801a024:	b580      	push	{r7, lr}
 801a026:	b08a      	sub	sp, #40	; 0x28
 801a028:	af00      	add	r7, sp, #0
 801a02a:	6078      	str	r0, [r7, #4]
	auto exp = parse_expression();
 801a02c:	6878      	ldr	r0, [r7, #4]
 801a02e:	f000 fb73 	bl	801a718 <_ZN6Parser16parse_expressionEv>
 801a032:	6278      	str	r0, [r7, #36]	; 0x24
	assert_token(TOKEN_RIGHT_BRACKET, "closing bracket");
 801a034:	f107 0320 	add.w	r3, r7, #32
 801a038:	4618      	mov	r0, r3
 801a03a:	f008 fa41 	bl	80224c0 <_ZNSaIcEC1Ev>
 801a03e:	f107 0220 	add.w	r2, r7, #32
 801a042:	f107 0308 	add.w	r3, r7, #8
 801a046:	490e      	ldr	r1, [pc, #56]	; (801a080 <_ZN6Parser23parse_nested_expressionEv+0x5c>)
 801a048:	4618      	mov	r0, r3
 801a04a:	f7e7 fd6a 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801a04e:	f107 0308 	add.w	r3, r7, #8
 801a052:	461a      	mov	r2, r3
 801a054:	2127      	movs	r1, #39	; 0x27
 801a056:	6878      	ldr	r0, [r7, #4]
 801a058:	f7f9 fa9e 	bl	8013598 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801a05c:	f107 0308 	add.w	r3, r7, #8
 801a060:	4618      	mov	r0, r3
 801a062:	f008 fcbe 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801a066:	f107 0320 	add.w	r3, r7, #32
 801a06a:	4618      	mov	r0, r3
 801a06c:	f008 fa29 	bl	80224c2 <_ZNSaIcED1Ev>
	get_next_token();
 801a070:	6878      	ldr	r0, [r7, #4]
 801a072:	f7f9 fdb4 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	return exp;
 801a076:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 801a078:	4618      	mov	r0, r3
 801a07a:	3728      	adds	r7, #40	; 0x28
 801a07c:	46bd      	mov	sp, r7
 801a07e:	bd80      	pop	{r7, pc}
 801a080:	08027b68 	.word	0x08027b68

0801a084 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEC1Ev>:
 801a084:	b580      	push	{r7, lr}
 801a086:	b082      	sub	sp, #8
 801a088:	af00      	add	r7, sp, #0
 801a08a:	6078      	str	r0, [r7, #4]
 801a08c:	687b      	ldr	r3, [r7, #4]
 801a08e:	4618      	mov	r0, r3
 801a090:	f000 fd45 	bl	801ab1e <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1Ev>
 801a094:	687b      	ldr	r3, [r7, #4]
 801a096:	4618      	mov	r0, r3
 801a098:	3708      	adds	r7, #8
 801a09a:	46bd      	mov	sp, r7
 801a09c:	bd80      	pop	{r7, pc}

0801a09e <_ZN19Priority_expressionC1Ev>:
	std::variant<bool, int, float, std::string, Variable*, Function_call*> content;
};

class Expression;

class Priority_expression
 801a09e:	b580      	push	{r7, lr}
 801a0a0:	b082      	sub	sp, #8
 801a0a2:	af00      	add	r7, sp, #0
 801a0a4:	6078      	str	r0, [r7, #4]
 801a0a6:	687b      	ldr	r3, [r7, #4]
 801a0a8:	4618      	mov	r0, r3
 801a0aa:	f7ff ffeb 	bl	801a084 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEC1Ev>
 801a0ae:	687b      	ldr	r3, [r7, #4]
 801a0b0:	4618      	mov	r0, r3
 801a0b2:	3708      	adds	r7, #8
 801a0b4:	46bd      	mov	sp, r7
 801a0b6:	bd80      	pop	{r7, pc}

0801a0b8 <_ZN6Parser25parse_priority_expressionEv>:

Priority_expression* Parser::parse_priority_expression()
{
 801a0b8:	b590      	push	{r4, r7, lr}
 801a0ba:	b087      	sub	sp, #28
 801a0bc:	af00      	add	r7, sp, #0
 801a0be:	6078      	str	r0, [r7, #4]
	auto exp = new Priority_expression();
 801a0c0:	2008      	movs	r0, #8
 801a0c2:	f008 f9ec 	bl	802249e <_Znwj>
 801a0c6:	4603      	mov	r3, r0
 801a0c8:	461c      	mov	r4, r3
 801a0ca:	2300      	movs	r3, #0
 801a0cc:	6023      	str	r3, [r4, #0]
 801a0ce:	2300      	movs	r3, #0
 801a0d0:	7123      	strb	r3, [r4, #4]
 801a0d2:	4620      	mov	r0, r4
 801a0d4:	f7ff ffe3 	bl	801a09e <_ZN19Priority_expressionC1Ev>
 801a0d8:	617c      	str	r4, [r7, #20]
	if(token_buffer.type == TOKEN_LEFT_BRACKET)
 801a0da:	687b      	ldr	r3, [r7, #4]
 801a0dc:	781b      	ldrb	r3, [r3, #0]
 801a0de:	2b26      	cmp	r3, #38	; 0x26
 801a0e0:	d10f      	bne.n	801a102 <_ZN6Parser25parse_priority_expressionEv+0x4a>
	{
		get_next_token();
 801a0e2:	6878      	ldr	r0, [r7, #4]
 801a0e4:	f7f9 fd7b 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		exp->exp = parse_nested_expression();
 801a0e8:	6878      	ldr	r0, [r7, #4]
 801a0ea:	f7ff ff9b 	bl	801a024 <_ZN6Parser23parse_nested_expressionEv>
 801a0ee:	4603      	mov	r3, r0
 801a0f0:	60fb      	str	r3, [r7, #12]
 801a0f2:	697b      	ldr	r3, [r7, #20]
 801a0f4:	f107 020c 	add.w	r2, r7, #12
 801a0f8:	4611      	mov	r1, r2
 801a0fa:	4618      	mov	r0, r3
 801a0fc:	f000 fd1c 	bl	801ab38 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>
 801a100:	e00b      	b.n	801a11a <_ZN6Parser25parse_priority_expressionEv+0x62>
	}
	else
	{
		exp->exp = parse_primal_expression();
 801a102:	6878      	ldr	r0, [r7, #4]
 801a104:	f7ff fec6 	bl	8019e94 <_ZN6Parser23parse_primal_expressionEv>
 801a108:	4603      	mov	r3, r0
 801a10a:	613b      	str	r3, [r7, #16]
 801a10c:	697b      	ldr	r3, [r7, #20]
 801a10e:	f107 0210 	add.w	r2, r7, #16
 801a112:	4611      	mov	r1, r2
 801a114:	4618      	mov	r0, r3
 801a116:	f000 fd39 	bl	801ab8c <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>
	}
	return exp;
 801a11a:	697b      	ldr	r3, [r7, #20]
}
 801a11c:	4618      	mov	r0, r3
 801a11e:	371c      	adds	r7, #28
 801a120:	46bd      	mov	sp, r7
 801a122:	bd90      	pop	{r4, r7, pc}

0801a124 <_ZN6Parser20match_unary_operatorEP16Unary_expression>:

bool Parser::match_unary_operator(Unary_expression* exp)
{
 801a124:	b480      	push	{r7}
 801a126:	b083      	sub	sp, #12
 801a128:	af00      	add	r7, sp, #0
 801a12a:	6078      	str	r0, [r7, #4]
 801a12c:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801a12e:	687b      	ldr	r3, [r7, #4]
 801a130:	781b      	ldrb	r3, [r3, #0]
 801a132:	2b17      	cmp	r3, #23
 801a134:	d005      	beq.n	801a142 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x1e>
 801a136:	2b20      	cmp	r3, #32
 801a138:	d107      	bne.n	801a14a <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x26>
	{
	case TOKEN_MINUS:
		exp->op = UN_OP_MINUS;
 801a13a:	683b      	ldr	r3, [r7, #0]
 801a13c:	2201      	movs	r2, #1
 801a13e:	711a      	strb	r2, [r3, #4]
		break;
 801a140:	e005      	b.n	801a14e <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2a>
	case TOKEN_EXCLAMATION:
		exp->op = UN_OP_EXCLAMATION;
 801a142:	683b      	ldr	r3, [r7, #0]
 801a144:	2202      	movs	r2, #2
 801a146:	711a      	strb	r2, [r3, #4]
		break;
 801a148:	e001      	b.n	801a14e <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2a>
	default:
		return false;
 801a14a:	2300      	movs	r3, #0
 801a14c:	e000      	b.n	801a150 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2c>
	}
	return true;
 801a14e:	2301      	movs	r3, #1
}
 801a150:	4618      	mov	r0, r3
 801a152:	370c      	adds	r7, #12
 801a154:	46bd      	mov	sp, r7
 801a156:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a15a:	4770      	bx	lr

0801a15c <_ZN6Parser22parse_unary_expressionEv>:

Unary_expression* Parser::parse_unary_expression()
{
 801a15c:	b580      	push	{r7, lr}
 801a15e:	b084      	sub	sp, #16
 801a160:	af00      	add	r7, sp, #0
 801a162:	6078      	str	r0, [r7, #4]
	auto exp = new Unary_expression();
 801a164:	2008      	movs	r0, #8
 801a166:	f008 f99a 	bl	802249e <_Znwj>
 801a16a:	4603      	mov	r3, r0
 801a16c:	2200      	movs	r2, #0
 801a16e:	601a      	str	r2, [r3, #0]
 801a170:	2200      	movs	r2, #0
 801a172:	711a      	strb	r2, [r3, #4]
 801a174:	60fb      	str	r3, [r7, #12]
	if(match_unary_operator(exp))
 801a176:	68f9      	ldr	r1, [r7, #12]
 801a178:	6878      	ldr	r0, [r7, #4]
 801a17a:	f7ff ffd3 	bl	801a124 <_ZN6Parser20match_unary_operatorEP16Unary_expression>
 801a17e:	4603      	mov	r3, r0
 801a180:	2b00      	cmp	r3, #0
 801a182:	d002      	beq.n	801a18a <_ZN6Parser22parse_unary_expressionEv+0x2e>
	{
		get_next_token();
 801a184:	6878      	ldr	r0, [r7, #4]
 801a186:	f7f9 fd2a 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
	}
	exp->prior_exp = parse_priority_expression();
 801a18a:	6878      	ldr	r0, [r7, #4]
 801a18c:	f7ff ff94 	bl	801a0b8 <_ZN6Parser25parse_priority_expressionEv>
 801a190:	4602      	mov	r2, r0
 801a192:	68fb      	ldr	r3, [r7, #12]
 801a194:	601a      	str	r2, [r3, #0]
	return exp;
 801a196:	68fb      	ldr	r3, [r7, #12]
}
 801a198:	4618      	mov	r0, r3
 801a19a:	3710      	adds	r7, #16
 801a19c:	46bd      	mov	sp, r7
 801a19e:	bd80      	pop	{r7, pc}

0801a1a0 <_ZN6Parser22parse_power_expressionEv>:

Power_expression* Parser::parse_power_expression()
{
 801a1a0:	b580      	push	{r7, lr}
 801a1a2:	b084      	sub	sp, #16
 801a1a4:	af00      	add	r7, sp, #0
 801a1a6:	6078      	str	r0, [r7, #4]
	auto exp = new Power_expression();
 801a1a8:	2008      	movs	r0, #8
 801a1aa:	f008 f978 	bl	802249e <_Znwj>
 801a1ae:	4603      	mov	r3, r0
 801a1b0:	2200      	movs	r2, #0
 801a1b2:	601a      	str	r2, [r3, #0]
 801a1b4:	2200      	movs	r2, #0
 801a1b6:	605a      	str	r2, [r3, #4]
 801a1b8:	60fb      	str	r3, [r7, #12]
	exp->left_un_exp = parse_unary_expression();
 801a1ba:	6878      	ldr	r0, [r7, #4]
 801a1bc:	f7ff ffce 	bl	801a15c <_ZN6Parser22parse_unary_expressionEv>
 801a1c0:	4602      	mov	r2, r0
 801a1c2:	68fb      	ldr	r3, [r7, #12]
 801a1c4:	601a      	str	r2, [r3, #0]
	if(token_buffer.type == TOKEN_POWER)
 801a1c6:	687b      	ldr	r3, [r7, #4]
 801a1c8:	781b      	ldrb	r3, [r3, #0]
 801a1ca:	2b23      	cmp	r3, #35	; 0x23
 801a1cc:	d109      	bne.n	801a1e2 <_ZN6Parser22parse_power_expressionEv+0x42>
	{
		get_next_token();
 801a1ce:	6878      	ldr	r0, [r7, #4]
 801a1d0:	f7f9 fd05 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		exp->right_un_exp = parse_unary_expression();
 801a1d4:	6878      	ldr	r0, [r7, #4]
 801a1d6:	f7ff ffc1 	bl	801a15c <_ZN6Parser22parse_unary_expressionEv>
 801a1da:	4602      	mov	r2, r0
 801a1dc:	68fb      	ldr	r3, [r7, #12]
 801a1de:	605a      	str	r2, [r3, #4]
 801a1e0:	e002      	b.n	801a1e8 <_ZN6Parser22parse_power_expressionEv+0x48>
	}
	else
	{
		exp->right_un_exp = nullptr;
 801a1e2:	68fb      	ldr	r3, [r7, #12]
 801a1e4:	2200      	movs	r2, #0
 801a1e6:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801a1e8:	68fb      	ldr	r3, [r7, #12]
}
 801a1ea:	4618      	mov	r0, r3
 801a1ec:	3710      	adds	r7, #16
 801a1ee:	46bd      	mov	sp, r7
 801a1f0:	bd80      	pop	{r7, pc}

0801a1f2 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression>:

bool Parser::match_multiply_operator(Multiply_expression* exp)
{
 801a1f2:	b580      	push	{r7, lr}
 801a1f4:	b084      	sub	sp, #16
 801a1f6:	af00      	add	r7, sp, #0
 801a1f8:	6078      	str	r0, [r7, #4]
 801a1fa:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801a1fc:	687b      	ldr	r3, [r7, #4]
 801a1fe:	781b      	ldrb	r3, [r3, #0]
 801a200:	2b24      	cmp	r3, #36	; 0x24
 801a202:	d01c      	beq.n	801a23e <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x4c>
 801a204:	2b24      	cmp	r3, #36	; 0x24
 801a206:	dc25      	bgt.n	801a254 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x62>
 801a208:	2b21      	cmp	r3, #33	; 0x21
 801a20a:	d002      	beq.n	801a212 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x20>
 801a20c:	2b22      	cmp	r3, #34	; 0x22
 801a20e:	d00b      	beq.n	801a228 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x36>
 801a210:	e020      	b.n	801a254 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x62>
	{
	case TOKEN_MULTIPLY:
		exp->ops.push_back(MULT_OP_MULTIPLY);
 801a212:	683b      	ldr	r3, [r7, #0]
 801a214:	330c      	adds	r3, #12
 801a216:	2201      	movs	r2, #1
 801a218:	737a      	strb	r2, [r7, #13]
 801a21a:	f107 020d 	add.w	r2, r7, #13
 801a21e:	4611      	mov	r1, r2
 801a220:	4618      	mov	r0, r3
 801a222:	f000 fcdd 	bl	801abe0 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801a226:	e017      	b.n	801a258 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	case TOKEN_DIVIDE:
		exp->ops.push_back(MULT_OP_DIVIDE);
 801a228:	683b      	ldr	r3, [r7, #0]
 801a22a:	330c      	adds	r3, #12
 801a22c:	2202      	movs	r2, #2
 801a22e:	73ba      	strb	r2, [r7, #14]
 801a230:	f107 020e 	add.w	r2, r7, #14
 801a234:	4611      	mov	r1, r2
 801a236:	4618      	mov	r0, r3
 801a238:	f000 fcd2 	bl	801abe0 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801a23c:	e00c      	b.n	801a258 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	case TOKEN_MODULO:
		exp->ops.push_back(MULT_OP_MODULO);
 801a23e:	683b      	ldr	r3, [r7, #0]
 801a240:	330c      	adds	r3, #12
 801a242:	2203      	movs	r2, #3
 801a244:	73fa      	strb	r2, [r7, #15]
 801a246:	f107 020f 	add.w	r2, r7, #15
 801a24a:	4611      	mov	r1, r2
 801a24c:	4618      	mov	r0, r3
 801a24e:	f000 fcc7 	bl	801abe0 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801a252:	e001      	b.n	801a258 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	default:
		return false;
 801a254:	2300      	movs	r3, #0
 801a256:	e000      	b.n	801a25a <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x68>
	}
	return true;
 801a258:	2301      	movs	r3, #1
}
 801a25a:	4618      	mov	r0, r3
 801a25c:	3710      	adds	r7, #16
 801a25e:	46bd      	mov	sp, r7
 801a260:	bd80      	pop	{r7, pc}

0801a262 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801a262:	b580      	push	{r7, lr}
 801a264:	b082      	sub	sp, #8
 801a266:	af00      	add	r7, sp, #0
 801a268:	6078      	str	r0, [r7, #4]
 801a26a:	687b      	ldr	r3, [r7, #4]
 801a26c:	4618      	mov	r0, r3
 801a26e:	f000 fcc8 	bl	801ac02 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implC1Ev>
 801a272:	687b      	ldr	r3, [r7, #4]
 801a274:	4618      	mov	r0, r3
 801a276:	3708      	adds	r7, #8
 801a278:	46bd      	mov	sp, r7
 801a27a:	bd80      	pop	{r7, pc}

0801a27c <_ZNSt6vectorIP16Power_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801a27c:	b580      	push	{r7, lr}
 801a27e:	b082      	sub	sp, #8
 801a280:	af00      	add	r7, sp, #0
 801a282:	6078      	str	r0, [r7, #4]
 801a284:	687b      	ldr	r3, [r7, #4]
 801a286:	4618      	mov	r0, r3
 801a288:	f7ff ffeb 	bl	801a262 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EEC1Ev>
 801a28c:	687b      	ldr	r3, [r7, #4]
 801a28e:	4618      	mov	r0, r3
 801a290:	3708      	adds	r7, #8
 801a292:	46bd      	mov	sp, r7
 801a294:	bd80      	pop	{r7, pc}

0801a296 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EEC1Ev>:
      _Vector_base() = default;
 801a296:	b580      	push	{r7, lr}
 801a298:	b082      	sub	sp, #8
 801a29a:	af00      	add	r7, sp, #0
 801a29c:	6078      	str	r0, [r7, #4]
 801a29e:	687b      	ldr	r3, [r7, #4]
 801a2a0:	4618      	mov	r0, r3
 801a2a2:	f000 fcbe 	bl	801ac22 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implC1Ev>
 801a2a6:	687b      	ldr	r3, [r7, #4]
 801a2a8:	4618      	mov	r0, r3
 801a2aa:	3708      	adds	r7, #8
 801a2ac:	46bd      	mov	sp, r7
 801a2ae:	bd80      	pop	{r7, pc}

0801a2b0 <_ZNSt6vectorI13mult_operatorSaIS0_EEC1Ev>:
      vector() = default;
 801a2b0:	b580      	push	{r7, lr}
 801a2b2:	b082      	sub	sp, #8
 801a2b4:	af00      	add	r7, sp, #0
 801a2b6:	6078      	str	r0, [r7, #4]
 801a2b8:	687b      	ldr	r3, [r7, #4]
 801a2ba:	4618      	mov	r0, r3
 801a2bc:	f7ff ffeb 	bl	801a296 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EEC1Ev>
 801a2c0:	687b      	ldr	r3, [r7, #4]
 801a2c2:	4618      	mov	r0, r3
 801a2c4:	3708      	adds	r7, #8
 801a2c6:	46bd      	mov	sp, r7
 801a2c8:	bd80      	pop	{r7, pc}

0801a2ca <_ZN19Multiply_expressionC1Ev>:
	MULT_OP_MULTIPLY,
	MULT_OP_DIVIDE,
	MULT_OP_MODULO
}mult_operator;

class Multiply_expression
 801a2ca:	b580      	push	{r7, lr}
 801a2cc:	b082      	sub	sp, #8
 801a2ce:	af00      	add	r7, sp, #0
 801a2d0:	6078      	str	r0, [r7, #4]
 801a2d2:	687b      	ldr	r3, [r7, #4]
 801a2d4:	4618      	mov	r0, r3
 801a2d6:	f7ff ffd1 	bl	801a27c <_ZNSt6vectorIP16Power_expressionSaIS1_EEC1Ev>
 801a2da:	687b      	ldr	r3, [r7, #4]
 801a2dc:	330c      	adds	r3, #12
 801a2de:	4618      	mov	r0, r3
 801a2e0:	f7ff ffe6 	bl	801a2b0 <_ZNSt6vectorI13mult_operatorSaIS0_EEC1Ev>
 801a2e4:	687b      	ldr	r3, [r7, #4]
 801a2e6:	4618      	mov	r0, r3
 801a2e8:	3708      	adds	r7, #8
 801a2ea:	46bd      	mov	sp, r7
 801a2ec:	bd80      	pop	{r7, pc}

0801a2ee <_ZN6Parser25parse_multiply_expressionEv>:

Multiply_expression* Parser::parse_multiply_expression()
{
 801a2ee:	b590      	push	{r4, r7, lr}
 801a2f0:	b087      	sub	sp, #28
 801a2f2:	af00      	add	r7, sp, #0
 801a2f4:	6078      	str	r0, [r7, #4]
	auto exp = new Multiply_expression();
 801a2f6:	2018      	movs	r0, #24
 801a2f8:	f008 f8d1 	bl	802249e <_Znwj>
 801a2fc:	4603      	mov	r3, r0
 801a2fe:	461c      	mov	r4, r3
 801a300:	4622      	mov	r2, r4
 801a302:	2300      	movs	r3, #0
 801a304:	6013      	str	r3, [r2, #0]
 801a306:	6053      	str	r3, [r2, #4]
 801a308:	6093      	str	r3, [r2, #8]
 801a30a:	60d3      	str	r3, [r2, #12]
 801a30c:	6113      	str	r3, [r2, #16]
 801a30e:	6153      	str	r3, [r2, #20]
 801a310:	4620      	mov	r0, r4
 801a312:	f7ff ffda 	bl	801a2ca <_ZN19Multiply_expressionC1Ev>
 801a316:	617c      	str	r4, [r7, #20]
	exp->pow_exps.push_back(parse_power_expression());
 801a318:	697c      	ldr	r4, [r7, #20]
 801a31a:	6878      	ldr	r0, [r7, #4]
 801a31c:	f7ff ff40 	bl	801a1a0 <_ZN6Parser22parse_power_expressionEv>
 801a320:	4603      	mov	r3, r0
 801a322:	60fb      	str	r3, [r7, #12]
 801a324:	f107 030c 	add.w	r3, r7, #12
 801a328:	4619      	mov	r1, r3
 801a32a:	4620      	mov	r0, r4
 801a32c:	f000 fc89 	bl	801ac42 <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>
	while(match_multiply_operator(exp))
 801a330:	6979      	ldr	r1, [r7, #20]
 801a332:	6878      	ldr	r0, [r7, #4]
 801a334:	f7ff ff5d 	bl	801a1f2 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression>
 801a338:	4603      	mov	r3, r0
 801a33a:	2b00      	cmp	r3, #0
 801a33c:	d00f      	beq.n	801a35e <_ZN6Parser25parse_multiply_expressionEv+0x70>
	{
		get_next_token();
 801a33e:	6878      	ldr	r0, [r7, #4]
 801a340:	f7f9 fc4d 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		exp->pow_exps.push_back(parse_power_expression());
 801a344:	697c      	ldr	r4, [r7, #20]
 801a346:	6878      	ldr	r0, [r7, #4]
 801a348:	f7ff ff2a 	bl	801a1a0 <_ZN6Parser22parse_power_expressionEv>
 801a34c:	4603      	mov	r3, r0
 801a34e:	613b      	str	r3, [r7, #16]
 801a350:	f107 0310 	add.w	r3, r7, #16
 801a354:	4619      	mov	r1, r3
 801a356:	4620      	mov	r0, r4
 801a358:	f000 fc73 	bl	801ac42 <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>
	while(match_multiply_operator(exp))
 801a35c:	e7e8      	b.n	801a330 <_ZN6Parser25parse_multiply_expressionEv+0x42>
	}
	return exp;
 801a35e:	697b      	ldr	r3, [r7, #20]
}
 801a360:	4618      	mov	r0, r3
 801a362:	371c      	adds	r7, #28
 801a364:	46bd      	mov	sp, r7
 801a366:	bd90      	pop	{r4, r7, pc}

0801a368 <_ZN6Parser18match_sum_operatorEP14Sum_expression>:

bool Parser::match_sum_operator(Sum_expression* exp)
{
 801a368:	b580      	push	{r7, lr}
 801a36a:	b084      	sub	sp, #16
 801a36c:	af00      	add	r7, sp, #0
 801a36e:	6078      	str	r0, [r7, #4]
 801a370:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801a372:	687b      	ldr	r3, [r7, #4]
 801a374:	781b      	ldrb	r3, [r3, #0]
 801a376:	2b1f      	cmp	r3, #31
 801a378:	d002      	beq.n	801a380 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x18>
 801a37a:	2b20      	cmp	r3, #32
 801a37c:	d00b      	beq.n	801a396 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x2e>
 801a37e:	e015      	b.n	801a3ac <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x44>
	{
	case TOKEN_PLUS:
		exp->ops.push_back(SUM_OP_PLUS);
 801a380:	683b      	ldr	r3, [r7, #0]
 801a382:	330c      	adds	r3, #12
 801a384:	2200      	movs	r2, #0
 801a386:	73ba      	strb	r2, [r7, #14]
 801a388:	f107 020e 	add.w	r2, r7, #14
 801a38c:	4611      	mov	r1, r2
 801a38e:	4618      	mov	r0, r3
 801a390:	f000 fc68 	bl	801ac64 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>
		break;
 801a394:	e00c      	b.n	801a3b0 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x48>
	case TOKEN_MINUS:
		exp->ops.push_back(SUM_OP_MINUS);
 801a396:	683b      	ldr	r3, [r7, #0]
 801a398:	330c      	adds	r3, #12
 801a39a:	2201      	movs	r2, #1
 801a39c:	73fa      	strb	r2, [r7, #15]
 801a39e:	f107 020f 	add.w	r2, r7, #15
 801a3a2:	4611      	mov	r1, r2
 801a3a4:	4618      	mov	r0, r3
 801a3a6:	f000 fc5d 	bl	801ac64 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>
		break;
 801a3aa:	e001      	b.n	801a3b0 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x48>
	default:
		return false;
 801a3ac:	2300      	movs	r3, #0
 801a3ae:	e000      	b.n	801a3b2 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x4a>
	}
	return true;
 801a3b0:	2301      	movs	r3, #1
}
 801a3b2:	4618      	mov	r0, r3
 801a3b4:	3710      	adds	r7, #16
 801a3b6:	46bd      	mov	sp, r7
 801a3b8:	bd80      	pop	{r7, pc}

0801a3ba <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801a3ba:	b580      	push	{r7, lr}
 801a3bc:	b082      	sub	sp, #8
 801a3be:	af00      	add	r7, sp, #0
 801a3c0:	6078      	str	r0, [r7, #4]
 801a3c2:	687b      	ldr	r3, [r7, #4]
 801a3c4:	4618      	mov	r0, r3
 801a3c6:	f000 fc5e 	bl	801ac86 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implC1Ev>
 801a3ca:	687b      	ldr	r3, [r7, #4]
 801a3cc:	4618      	mov	r0, r3
 801a3ce:	3708      	adds	r7, #8
 801a3d0:	46bd      	mov	sp, r7
 801a3d2:	bd80      	pop	{r7, pc}

0801a3d4 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801a3d4:	b580      	push	{r7, lr}
 801a3d6:	b082      	sub	sp, #8
 801a3d8:	af00      	add	r7, sp, #0
 801a3da:	6078      	str	r0, [r7, #4]
 801a3dc:	687b      	ldr	r3, [r7, #4]
 801a3de:	4618      	mov	r0, r3
 801a3e0:	f7ff ffeb 	bl	801a3ba <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EEC1Ev>
 801a3e4:	687b      	ldr	r3, [r7, #4]
 801a3e6:	4618      	mov	r0, r3
 801a3e8:	3708      	adds	r7, #8
 801a3ea:	46bd      	mov	sp, r7
 801a3ec:	bd80      	pop	{r7, pc}

0801a3ee <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EEC1Ev>:
      _Vector_base() = default;
 801a3ee:	b580      	push	{r7, lr}
 801a3f0:	b082      	sub	sp, #8
 801a3f2:	af00      	add	r7, sp, #0
 801a3f4:	6078      	str	r0, [r7, #4]
 801a3f6:	687b      	ldr	r3, [r7, #4]
 801a3f8:	4618      	mov	r0, r3
 801a3fa:	f000 fc54 	bl	801aca6 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implC1Ev>
 801a3fe:	687b      	ldr	r3, [r7, #4]
 801a400:	4618      	mov	r0, r3
 801a402:	3708      	adds	r7, #8
 801a404:	46bd      	mov	sp, r7
 801a406:	bd80      	pop	{r7, pc}

0801a408 <_ZNSt6vectorI12sum_operatorSaIS0_EEC1Ev>:
      vector() = default;
 801a408:	b580      	push	{r7, lr}
 801a40a:	b082      	sub	sp, #8
 801a40c:	af00      	add	r7, sp, #0
 801a40e:	6078      	str	r0, [r7, #4]
 801a410:	687b      	ldr	r3, [r7, #4]
 801a412:	4618      	mov	r0, r3
 801a414:	f7ff ffeb 	bl	801a3ee <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EEC1Ev>
 801a418:	687b      	ldr	r3, [r7, #4]
 801a41a:	4618      	mov	r0, r3
 801a41c:	3708      	adds	r7, #8
 801a41e:	46bd      	mov	sp, r7
 801a420:	bd80      	pop	{r7, pc}

0801a422 <_ZN14Sum_expressionC1Ev>:
{
	SUM_OP_PLUS,
	SUM_OP_MINUS
}sum_operator;

class Sum_expression
 801a422:	b580      	push	{r7, lr}
 801a424:	b082      	sub	sp, #8
 801a426:	af00      	add	r7, sp, #0
 801a428:	6078      	str	r0, [r7, #4]
 801a42a:	687b      	ldr	r3, [r7, #4]
 801a42c:	4618      	mov	r0, r3
 801a42e:	f7ff ffd1 	bl	801a3d4 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEC1Ev>
 801a432:	687b      	ldr	r3, [r7, #4]
 801a434:	330c      	adds	r3, #12
 801a436:	4618      	mov	r0, r3
 801a438:	f7ff ffe6 	bl	801a408 <_ZNSt6vectorI12sum_operatorSaIS0_EEC1Ev>
 801a43c:	687b      	ldr	r3, [r7, #4]
 801a43e:	4618      	mov	r0, r3
 801a440:	3708      	adds	r7, #8
 801a442:	46bd      	mov	sp, r7
 801a444:	bd80      	pop	{r7, pc}

0801a446 <_ZN6Parser20parse_sum_expressionEv>:

Sum_expression* Parser::parse_sum_expression()
{
 801a446:	b590      	push	{r4, r7, lr}
 801a448:	b087      	sub	sp, #28
 801a44a:	af00      	add	r7, sp, #0
 801a44c:	6078      	str	r0, [r7, #4]
	auto exp = new Sum_expression();
 801a44e:	2018      	movs	r0, #24
 801a450:	f008 f825 	bl	802249e <_Znwj>
 801a454:	4603      	mov	r3, r0
 801a456:	461c      	mov	r4, r3
 801a458:	4622      	mov	r2, r4
 801a45a:	2300      	movs	r3, #0
 801a45c:	6013      	str	r3, [r2, #0]
 801a45e:	6053      	str	r3, [r2, #4]
 801a460:	6093      	str	r3, [r2, #8]
 801a462:	60d3      	str	r3, [r2, #12]
 801a464:	6113      	str	r3, [r2, #16]
 801a466:	6153      	str	r3, [r2, #20]
 801a468:	4620      	mov	r0, r4
 801a46a:	f7ff ffda 	bl	801a422 <_ZN14Sum_expressionC1Ev>
 801a46e:	617c      	str	r4, [r7, #20]
	exp->mult_exps.push_back(parse_multiply_expression());
 801a470:	697c      	ldr	r4, [r7, #20]
 801a472:	6878      	ldr	r0, [r7, #4]
 801a474:	f7ff ff3b 	bl	801a2ee <_ZN6Parser25parse_multiply_expressionEv>
 801a478:	4603      	mov	r3, r0
 801a47a:	60fb      	str	r3, [r7, #12]
 801a47c:	f107 030c 	add.w	r3, r7, #12
 801a480:	4619      	mov	r1, r3
 801a482:	4620      	mov	r0, r4
 801a484:	f000 fc1f 	bl	801acc6 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>
	while(match_sum_operator(exp))
 801a488:	6979      	ldr	r1, [r7, #20]
 801a48a:	6878      	ldr	r0, [r7, #4]
 801a48c:	f7ff ff6c 	bl	801a368 <_ZN6Parser18match_sum_operatorEP14Sum_expression>
 801a490:	4603      	mov	r3, r0
 801a492:	2b00      	cmp	r3, #0
 801a494:	d00f      	beq.n	801a4b6 <_ZN6Parser20parse_sum_expressionEv+0x70>
	{
		get_next_token();
 801a496:	6878      	ldr	r0, [r7, #4]
 801a498:	f7f9 fba1 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		exp->mult_exps.push_back(parse_multiply_expression());
 801a49c:	697c      	ldr	r4, [r7, #20]
 801a49e:	6878      	ldr	r0, [r7, #4]
 801a4a0:	f7ff ff25 	bl	801a2ee <_ZN6Parser25parse_multiply_expressionEv>
 801a4a4:	4603      	mov	r3, r0
 801a4a6:	613b      	str	r3, [r7, #16]
 801a4a8:	f107 0310 	add.w	r3, r7, #16
 801a4ac:	4619      	mov	r1, r3
 801a4ae:	4620      	mov	r0, r4
 801a4b0:	f000 fc09 	bl	801acc6 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>
	while(match_sum_operator(exp))
 801a4b4:	e7e8      	b.n	801a488 <_ZN6Parser20parse_sum_expressionEv+0x42>
	}
	return exp;
 801a4b6:	697b      	ldr	r3, [r7, #20]
}
 801a4b8:	4618      	mov	r0, r3
 801a4ba:	371c      	adds	r7, #28
 801a4bc:	46bd      	mov	sp, r7
 801a4be:	bd90      	pop	{r4, r7, pc}

0801a4c0 <_ZN6Parser23match_relation_operatorEP19Relation_expression>:

bool Parser::match_relation_operator(Relation_expression* exp)
{
 801a4c0:	b480      	push	{r7}
 801a4c2:	b083      	sub	sp, #12
 801a4c4:	af00      	add	r7, sp, #0
 801a4c6:	6078      	str	r0, [r7, #4]
 801a4c8:	6039      	str	r1, [r7, #0]
	switch (token_buffer.type)
 801a4ca:	687b      	ldr	r3, [r7, #4]
 801a4cc:	781b      	ldrb	r3, [r3, #0]
 801a4ce:	3b19      	subs	r3, #25
 801a4d0:	2b03      	cmp	r3, #3
 801a4d2:	d81b      	bhi.n	801a50c <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x4c>
 801a4d4:	a201      	add	r2, pc, #4	; (adr r2, 801a4dc <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x1c>)
 801a4d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801a4da:	bf00      	nop
 801a4dc:	0801a4fd 	.word	0x0801a4fd
 801a4e0:	0801a505 	.word	0x0801a505
 801a4e4:	0801a4ed 	.word	0x0801a4ed
 801a4e8:	0801a4f5 	.word	0x0801a4f5
	{
	case TOKEN_SMALLER_THAN:
		exp->op = REL_OP_SMALLER;
 801a4ec:	683b      	ldr	r3, [r7, #0]
 801a4ee:	2201      	movs	r2, #1
 801a4f0:	721a      	strb	r2, [r3, #8]
		break;
 801a4f2:	e010      	b.n	801a516 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_SMALLER_OR_EQUAL:
		exp->op = REL_OP_SMALLER_EQUAL;
 801a4f4:	683b      	ldr	r3, [r7, #0]
 801a4f6:	2202      	movs	r2, #2
 801a4f8:	721a      	strb	r2, [r3, #8]
		break;
 801a4fa:	e00c      	b.n	801a516 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_GREATER_THAN:
		exp->op = REL_OP_GREATER;
 801a4fc:	683b      	ldr	r3, [r7, #0]
 801a4fe:	2203      	movs	r2, #3
 801a500:	721a      	strb	r2, [r3, #8]
		break;
 801a502:	e008      	b.n	801a516 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_GREATER_OR_EQUAL:
		exp->op = REL_OP_SMALLER_EQUAL;
 801a504:	683b      	ldr	r3, [r7, #0]
 801a506:	2202      	movs	r2, #2
 801a508:	721a      	strb	r2, [r3, #8]
		break;
 801a50a:	e004      	b.n	801a516 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	default:
		exp->right_sum_exp = nullptr;
 801a50c:	683b      	ldr	r3, [r7, #0]
 801a50e:	2200      	movs	r2, #0
 801a510:	605a      	str	r2, [r3, #4]
		return false;
 801a512:	2300      	movs	r3, #0
 801a514:	e000      	b.n	801a518 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x58>
	}
	return true;
 801a516:	2301      	movs	r3, #1
}
 801a518:	4618      	mov	r0, r3
 801a51a:	370c      	adds	r7, #12
 801a51c:	46bd      	mov	sp, r7
 801a51e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a522:	4770      	bx	lr

0801a524 <_ZN6Parser25parse_relation_expressionEv>:

Relation_expression* Parser::parse_relation_expression()
{
 801a524:	b580      	push	{r7, lr}
 801a526:	b084      	sub	sp, #16
 801a528:	af00      	add	r7, sp, #0
 801a52a:	6078      	str	r0, [r7, #4]
	auto exp = new Relation_expression();
 801a52c:	200c      	movs	r0, #12
 801a52e:	f007 ffb6 	bl	802249e <_Znwj>
 801a532:	4603      	mov	r3, r0
 801a534:	2200      	movs	r2, #0
 801a536:	601a      	str	r2, [r3, #0]
 801a538:	2200      	movs	r2, #0
 801a53a:	605a      	str	r2, [r3, #4]
 801a53c:	2200      	movs	r2, #0
 801a53e:	721a      	strb	r2, [r3, #8]
 801a540:	60fb      	str	r3, [r7, #12]
	exp->left_sum_exp = parse_sum_expression();
 801a542:	6878      	ldr	r0, [r7, #4]
 801a544:	f7ff ff7f 	bl	801a446 <_ZN6Parser20parse_sum_expressionEv>
 801a548:	4602      	mov	r2, r0
 801a54a:	68fb      	ldr	r3, [r7, #12]
 801a54c:	601a      	str	r2, [r3, #0]
	if(match_relation_operator(exp))
 801a54e:	68f9      	ldr	r1, [r7, #12]
 801a550:	6878      	ldr	r0, [r7, #4]
 801a552:	f7ff ffb5 	bl	801a4c0 <_ZN6Parser23match_relation_operatorEP19Relation_expression>
 801a556:	4603      	mov	r3, r0
 801a558:	2b00      	cmp	r3, #0
 801a55a:	d008      	beq.n	801a56e <_ZN6Parser25parse_relation_expressionEv+0x4a>
	{
		get_next_token();
 801a55c:	6878      	ldr	r0, [r7, #4]
 801a55e:	f7f9 fb3e 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		exp->right_sum_exp = parse_sum_expression();
 801a562:	6878      	ldr	r0, [r7, #4]
 801a564:	f7ff ff6f 	bl	801a446 <_ZN6Parser20parse_sum_expressionEv>
 801a568:	4602      	mov	r2, r0
 801a56a:	68fb      	ldr	r3, [r7, #12]
 801a56c:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801a56e:	68fb      	ldr	r3, [r7, #12]
}
 801a570:	4618      	mov	r0, r3
 801a572:	3710      	adds	r7, #16
 801a574:	46bd      	mov	sp, r7
 801a576:	bd80      	pop	{r7, pc}

0801a578 <_ZN6Parser22match_compare_operatorEP18Compare_expression>:

bool Parser::match_compare_operator(Compare_expression *exp)
{
 801a578:	b480      	push	{r7}
 801a57a:	b083      	sub	sp, #12
 801a57c:	af00      	add	r7, sp, #0
 801a57e:	6078      	str	r0, [r7, #4]
 801a580:	6039      	str	r1, [r7, #0]
	switch (token_buffer.type)
 801a582:	687b      	ldr	r3, [r7, #4]
 801a584:	781b      	ldrb	r3, [r3, #0]
 801a586:	2b1d      	cmp	r3, #29
 801a588:	d002      	beq.n	801a590 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x18>
 801a58a:	2b1e      	cmp	r3, #30
 801a58c:	d004      	beq.n	801a598 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x20>
 801a58e:	e007      	b.n	801a5a0 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x28>
	{
	case TOKEN_EQUALS:
		exp->op = COMP_OP_EQUAL;
 801a590:	683b      	ldr	r3, [r7, #0]
 801a592:	2201      	movs	r2, #1
 801a594:	721a      	strb	r2, [r3, #8]
		break;
 801a596:	e008      	b.n	801a5aa <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x32>
	case TOKEN_NOT_EQUAL:
		exp->op = COMP_OP_NOT_EQUAL;
 801a598:	683b      	ldr	r3, [r7, #0]
 801a59a:	2202      	movs	r2, #2
 801a59c:	721a      	strb	r2, [r3, #8]
		break;
 801a59e:	e004      	b.n	801a5aa <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x32>
	default:
		exp->right_rel_exp = nullptr;
 801a5a0:	683b      	ldr	r3, [r7, #0]
 801a5a2:	2200      	movs	r2, #0
 801a5a4:	605a      	str	r2, [r3, #4]
		return false;
 801a5a6:	2300      	movs	r3, #0
 801a5a8:	e000      	b.n	801a5ac <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x34>
	}
	return true;
 801a5aa:	2301      	movs	r3, #1
}
 801a5ac:	4618      	mov	r0, r3
 801a5ae:	370c      	adds	r7, #12
 801a5b0:	46bd      	mov	sp, r7
 801a5b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a5b6:	4770      	bx	lr

0801a5b8 <_ZN6Parser24parse_compare_expressionEv>:

Compare_expression* Parser::parse_compare_expression()
{
 801a5b8:	b580      	push	{r7, lr}
 801a5ba:	b084      	sub	sp, #16
 801a5bc:	af00      	add	r7, sp, #0
 801a5be:	6078      	str	r0, [r7, #4]
	auto exp = new Compare_expression();
 801a5c0:	200c      	movs	r0, #12
 801a5c2:	f007 ff6c 	bl	802249e <_Znwj>
 801a5c6:	4603      	mov	r3, r0
 801a5c8:	2200      	movs	r2, #0
 801a5ca:	601a      	str	r2, [r3, #0]
 801a5cc:	2200      	movs	r2, #0
 801a5ce:	605a      	str	r2, [r3, #4]
 801a5d0:	2200      	movs	r2, #0
 801a5d2:	721a      	strb	r2, [r3, #8]
 801a5d4:	60fb      	str	r3, [r7, #12]
	exp->left_rel_exp = parse_relation_expression();
 801a5d6:	6878      	ldr	r0, [r7, #4]
 801a5d8:	f7ff ffa4 	bl	801a524 <_ZN6Parser25parse_relation_expressionEv>
 801a5dc:	4602      	mov	r2, r0
 801a5de:	68fb      	ldr	r3, [r7, #12]
 801a5e0:	601a      	str	r2, [r3, #0]
	if(match_compare_operator(exp))
 801a5e2:	68f9      	ldr	r1, [r7, #12]
 801a5e4:	6878      	ldr	r0, [r7, #4]
 801a5e6:	f7ff ffc7 	bl	801a578 <_ZN6Parser22match_compare_operatorEP18Compare_expression>
 801a5ea:	4603      	mov	r3, r0
 801a5ec:	2b00      	cmp	r3, #0
 801a5ee:	d008      	beq.n	801a602 <_ZN6Parser24parse_compare_expressionEv+0x4a>
	{
		get_next_token();
 801a5f0:	6878      	ldr	r0, [r7, #4]
 801a5f2:	f7f9 faf4 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		exp->right_rel_exp = parse_relation_expression();
 801a5f6:	6878      	ldr	r0, [r7, #4]
 801a5f8:	f7ff ff94 	bl	801a524 <_ZN6Parser25parse_relation_expressionEv>
 801a5fc:	4602      	mov	r2, r0
 801a5fe:	68fb      	ldr	r3, [r7, #12]
 801a600:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801a602:	68fb      	ldr	r3, [r7, #12]
}
 801a604:	4618      	mov	r0, r3
 801a606:	3710      	adds	r7, #16
 801a608:	46bd      	mov	sp, r7
 801a60a:	bd80      	pop	{r7, pc}

0801a60c <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801a60c:	b580      	push	{r7, lr}
 801a60e:	b082      	sub	sp, #8
 801a610:	af00      	add	r7, sp, #0
 801a612:	6078      	str	r0, [r7, #4]
 801a614:	687b      	ldr	r3, [r7, #4]
 801a616:	4618      	mov	r0, r3
 801a618:	f000 fb66 	bl	801ace8 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implC1Ev>
 801a61c:	687b      	ldr	r3, [r7, #4]
 801a61e:	4618      	mov	r0, r3
 801a620:	3708      	adds	r7, #8
 801a622:	46bd      	mov	sp, r7
 801a624:	bd80      	pop	{r7, pc}

0801a626 <_ZNSt6vectorIP18Compare_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801a626:	b580      	push	{r7, lr}
 801a628:	b082      	sub	sp, #8
 801a62a:	af00      	add	r7, sp, #0
 801a62c:	6078      	str	r0, [r7, #4]
 801a62e:	687b      	ldr	r3, [r7, #4]
 801a630:	4618      	mov	r0, r3
 801a632:	f7ff ffeb 	bl	801a60c <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EEC1Ev>
 801a636:	687b      	ldr	r3, [r7, #4]
 801a638:	4618      	mov	r0, r3
 801a63a:	3708      	adds	r7, #8
 801a63c:	46bd      	mov	sp, r7
 801a63e:	bd80      	pop	{r7, pc}

0801a640 <_ZN14And_expressionC1Ev>:
	Relation_expression* left_rel_exp;
	Relation_expression* right_rel_exp;
	comp_operator op;
};

class And_expression
 801a640:	b580      	push	{r7, lr}
 801a642:	b082      	sub	sp, #8
 801a644:	af00      	add	r7, sp, #0
 801a646:	6078      	str	r0, [r7, #4]
 801a648:	687b      	ldr	r3, [r7, #4]
 801a64a:	4618      	mov	r0, r3
 801a64c:	f7ff ffeb 	bl	801a626 <_ZNSt6vectorIP18Compare_expressionSaIS1_EEC1Ev>
 801a650:	687b      	ldr	r3, [r7, #4]
 801a652:	4618      	mov	r0, r3
 801a654:	3708      	adds	r7, #8
 801a656:	46bd      	mov	sp, r7
 801a658:	bd80      	pop	{r7, pc}

0801a65a <_ZN6Parser20parse_and_expressionEv>:

And_expression* Parser::parse_and_expression()
{
 801a65a:	b590      	push	{r4, r7, lr}
 801a65c:	b087      	sub	sp, #28
 801a65e:	af00      	add	r7, sp, #0
 801a660:	6078      	str	r0, [r7, #4]
	auto exp = new And_expression();
 801a662:	200c      	movs	r0, #12
 801a664:	f007 ff1b 	bl	802249e <_Znwj>
 801a668:	4603      	mov	r3, r0
 801a66a:	461c      	mov	r4, r3
 801a66c:	4622      	mov	r2, r4
 801a66e:	2300      	movs	r3, #0
 801a670:	6013      	str	r3, [r2, #0]
 801a672:	6053      	str	r3, [r2, #4]
 801a674:	6093      	str	r3, [r2, #8]
 801a676:	4620      	mov	r0, r4
 801a678:	f7ff ffe2 	bl	801a640 <_ZN14And_expressionC1Ev>
 801a67c:	617c      	str	r4, [r7, #20]
	exp->comp_exps.push_back(parse_compare_expression());
 801a67e:	697c      	ldr	r4, [r7, #20]
 801a680:	6878      	ldr	r0, [r7, #4]
 801a682:	f7ff ff99 	bl	801a5b8 <_ZN6Parser24parse_compare_expressionEv>
 801a686:	4603      	mov	r3, r0
 801a688:	60fb      	str	r3, [r7, #12]
 801a68a:	f107 030c 	add.w	r3, r7, #12
 801a68e:	4619      	mov	r1, r3
 801a690:	4620      	mov	r0, r4
 801a692:	f000 fb39 	bl	801ad08 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_AND)
 801a696:	687b      	ldr	r3, [r7, #4]
 801a698:	781b      	ldrb	r3, [r3, #0]
 801a69a:	2b16      	cmp	r3, #22
 801a69c:	d10f      	bne.n	801a6be <_ZN6Parser20parse_and_expressionEv+0x64>
	{
		get_next_token();
 801a69e:	6878      	ldr	r0, [r7, #4]
 801a6a0:	f7f9 fa9d 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		exp->comp_exps.push_back(parse_compare_expression());
 801a6a4:	697c      	ldr	r4, [r7, #20]
 801a6a6:	6878      	ldr	r0, [r7, #4]
 801a6a8:	f7ff ff86 	bl	801a5b8 <_ZN6Parser24parse_compare_expressionEv>
 801a6ac:	4603      	mov	r3, r0
 801a6ae:	613b      	str	r3, [r7, #16]
 801a6b0:	f107 0310 	add.w	r3, r7, #16
 801a6b4:	4619      	mov	r1, r3
 801a6b6:	4620      	mov	r0, r4
 801a6b8:	f000 fb26 	bl	801ad08 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_AND)
 801a6bc:	e7eb      	b.n	801a696 <_ZN6Parser20parse_and_expressionEv+0x3c>
	}
	return exp;
 801a6be:	697b      	ldr	r3, [r7, #20]
}
 801a6c0:	4618      	mov	r0, r3
 801a6c2:	371c      	adds	r7, #28
 801a6c4:	46bd      	mov	sp, r7
 801a6c6:	bd90      	pop	{r4, r7, pc}

0801a6c8 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801a6c8:	b580      	push	{r7, lr}
 801a6ca:	b082      	sub	sp, #8
 801a6cc:	af00      	add	r7, sp, #0
 801a6ce:	6078      	str	r0, [r7, #4]
 801a6d0:	687b      	ldr	r3, [r7, #4]
 801a6d2:	4618      	mov	r0, r3
 801a6d4:	f000 fb29 	bl	801ad2a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implC1Ev>
 801a6d8:	687b      	ldr	r3, [r7, #4]
 801a6da:	4618      	mov	r0, r3
 801a6dc:	3708      	adds	r7, #8
 801a6de:	46bd      	mov	sp, r7
 801a6e0:	bd80      	pop	{r7, pc}

0801a6e2 <_ZNSt6vectorIP14And_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801a6e2:	b580      	push	{r7, lr}
 801a6e4:	b082      	sub	sp, #8
 801a6e6:	af00      	add	r7, sp, #0
 801a6e8:	6078      	str	r0, [r7, #4]
 801a6ea:	687b      	ldr	r3, [r7, #4]
 801a6ec:	4618      	mov	r0, r3
 801a6ee:	f7ff ffeb 	bl	801a6c8 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EEC1Ev>
 801a6f2:	687b      	ldr	r3, [r7, #4]
 801a6f4:	4618      	mov	r0, r3
 801a6f6:	3708      	adds	r7, #8
 801a6f8:	46bd      	mov	sp, r7
 801a6fa:	bd80      	pop	{r7, pc}

0801a6fc <_ZN10ExpressionC1Ev>:
public:
	~And_expression();
	std::vector<Compare_expression*> comp_exps;
};

class Expression
 801a6fc:	b580      	push	{r7, lr}
 801a6fe:	b082      	sub	sp, #8
 801a700:	af00      	add	r7, sp, #0
 801a702:	6078      	str	r0, [r7, #4]
 801a704:	687b      	ldr	r3, [r7, #4]
 801a706:	3308      	adds	r3, #8
 801a708:	4618      	mov	r0, r3
 801a70a:	f7ff ffea 	bl	801a6e2 <_ZNSt6vectorIP14And_expressionSaIS1_EEC1Ev>
 801a70e:	687b      	ldr	r3, [r7, #4]
 801a710:	4618      	mov	r0, r3
 801a712:	3708      	adds	r7, #8
 801a714:	46bd      	mov	sp, r7
 801a716:	bd80      	pop	{r7, pc}

0801a718 <_ZN6Parser16parse_expressionEv>:

Expression* Parser::parse_expression()
{
 801a718:	b590      	push	{r4, r7, lr}
 801a71a:	b087      	sub	sp, #28
 801a71c:	af00      	add	r7, sp, #0
 801a71e:	6078      	str	r0, [r7, #4]
	auto exp = new Expression();
 801a720:	2014      	movs	r0, #20
 801a722:	f007 febc 	bl	802249e <_Znwj>
 801a726:	4603      	mov	r3, r0
 801a728:	461c      	mov	r4, r3
 801a72a:	4622      	mov	r2, r4
 801a72c:	2300      	movs	r3, #0
 801a72e:	6013      	str	r3, [r2, #0]
 801a730:	6053      	str	r3, [r2, #4]
 801a732:	6093      	str	r3, [r2, #8]
 801a734:	60d3      	str	r3, [r2, #12]
 801a736:	6113      	str	r3, [r2, #16]
 801a738:	4620      	mov	r0, r4
 801a73a:	f7ff ffdf 	bl	801a6fc <_ZN10ExpressionC1Ev>
 801a73e:	617c      	str	r4, [r7, #20]
	exp->line = Position_counter::get_instance().line;
 801a740:	f7fb fe3c 	bl	80163bc <_ZN16Position_counter12get_instanceEv>
 801a744:	4603      	mov	r3, r0
 801a746:	681a      	ldr	r2, [r3, #0]
 801a748:	697b      	ldr	r3, [r7, #20]
 801a74a:	601a      	str	r2, [r3, #0]
	exp->position = Position_counter::get_instance().position;
 801a74c:	f7fb fe36 	bl	80163bc <_ZN16Position_counter12get_instanceEv>
 801a750:	4603      	mov	r3, r0
 801a752:	685a      	ldr	r2, [r3, #4]
 801a754:	697b      	ldr	r3, [r7, #20]
 801a756:	605a      	str	r2, [r3, #4]
	exp->and_exps.push_back(parse_and_expression());
 801a758:	697b      	ldr	r3, [r7, #20]
 801a75a:	f103 0408 	add.w	r4, r3, #8
 801a75e:	6878      	ldr	r0, [r7, #4]
 801a760:	f7ff ff7b 	bl	801a65a <_ZN6Parser20parse_and_expressionEv>
 801a764:	4603      	mov	r3, r0
 801a766:	60fb      	str	r3, [r7, #12]
 801a768:	f107 030c 	add.w	r3, r7, #12
 801a76c:	4619      	mov	r1, r3
 801a76e:	4620      	mov	r0, r4
 801a770:	f000 faeb 	bl	801ad4a <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_OR)
 801a774:	687b      	ldr	r3, [r7, #4]
 801a776:	781b      	ldrb	r3, [r3, #0]
 801a778:	2b15      	cmp	r3, #21
 801a77a:	d111      	bne.n	801a7a0 <_ZN6Parser16parse_expressionEv+0x88>
	{
		get_next_token();
 801a77c:	6878      	ldr	r0, [r7, #4]
 801a77e:	f7f9 fa2e 	bl	8013bde <_ZN6Parser14get_next_tokenEv>
		exp->and_exps.push_back(parse_and_expression());
 801a782:	697b      	ldr	r3, [r7, #20]
 801a784:	f103 0408 	add.w	r4, r3, #8
 801a788:	6878      	ldr	r0, [r7, #4]
 801a78a:	f7ff ff66 	bl	801a65a <_ZN6Parser20parse_and_expressionEv>
 801a78e:	4603      	mov	r3, r0
 801a790:	613b      	str	r3, [r7, #16]
 801a792:	f107 0310 	add.w	r3, r7, #16
 801a796:	4619      	mov	r1, r3
 801a798:	4620      	mov	r0, r4
 801a79a:	f000 fad6 	bl	801ad4a <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_OR)
 801a79e:	e7e9      	b.n	801a774 <_ZN6Parser16parse_expressionEv+0x5c>
	}
	return exp;
 801a7a0:	697b      	ldr	r3, [r7, #20]
}
 801a7a2:	4618      	mov	r0, r3
 801a7a4:	371c      	adds	r7, #28
 801a7a6:	46bd      	mov	sp, r7
 801a7a8:	bd90      	pop	{r4, r7, pc}

0801a7aa <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801a7aa:	b590      	push	{r4, r7, lr}
 801a7ac:	b085      	sub	sp, #20
 801a7ae:	af00      	add	r7, sp, #0
 801a7b0:	6078      	str	r0, [r7, #4]
 801a7b2:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801a7b4:	2305      	movs	r3, #5
 801a7b6:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801a7b8:	6878      	ldr	r0, [r7, #4]
 801a7ba:	f7ef fb3e 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801a7be:	4603      	mov	r3, r0
 801a7c0:	2b05      	cmp	r3, #5
 801a7c2:	bf0c      	ite	eq
 801a7c4:	2301      	moveq	r3, #1
 801a7c6:	2300      	movne	r3, #0
 801a7c8:	b2db      	uxtb	r3, r3
 801a7ca:	2b00      	cmp	r3, #0
 801a7cc:	d00a      	beq.n	801a7e4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801a7ce:	6838      	ldr	r0, [r7, #0]
 801a7d0:	f7f9 ffe6 	bl	80147a0 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801a7d4:	4603      	mov	r3, r0
 801a7d6:	681c      	ldr	r4, [r3, #0]
 801a7d8:	6878      	ldr	r0, [r7, #4]
 801a7da:	f7ef febd 	bl	800a558 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801a7de:	4603      	mov	r3, r0
 801a7e0:	601c      	str	r4, [r3, #0]
 801a7e2:	e007      	b.n	801a7f4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801a7e4:	6838      	ldr	r0, [r7, #0]
 801a7e6:	f7f9 ffdb 	bl	80147a0 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801a7ea:	4603      	mov	r3, r0
 801a7ec:	4619      	mov	r1, r3
 801a7ee:	6878      	ldr	r0, [r7, #4]
 801a7f0:	f000 fabc 	bl	801ad6c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj5EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801a7f4:	687b      	ldr	r3, [r7, #4]
	}
 801a7f6:	4618      	mov	r0, r3
 801a7f8:	3714      	adds	r7, #20
 801a7fa:	46bd      	mov	sp, r7
 801a7fc:	bd90      	pop	{r4, r7, pc}

0801a7fe <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801a7fe:	b590      	push	{r4, r7, lr}
 801a800:	b085      	sub	sp, #20
 801a802:	af00      	add	r7, sp, #0
 801a804:	6078      	str	r0, [r7, #4]
 801a806:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801a808:	2304      	movs	r3, #4
 801a80a:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801a80c:	6878      	ldr	r0, [r7, #4]
 801a80e:	f7ef fb14 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801a812:	4603      	mov	r3, r0
 801a814:	2b04      	cmp	r3, #4
 801a816:	bf0c      	ite	eq
 801a818:	2301      	moveq	r3, #1
 801a81a:	2300      	movne	r3, #0
 801a81c:	b2db      	uxtb	r3, r3
 801a81e:	2b00      	cmp	r3, #0
 801a820:	d00a      	beq.n	801a838 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801a822:	6838      	ldr	r0, [r7, #0]
 801a824:	f000 fabb 	bl	801ad9e <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801a828:	4603      	mov	r3, r0
 801a82a:	681c      	ldr	r4, [r3, #0]
 801a82c:	6878      	ldr	r0, [r7, #4]
 801a82e:	f7ef fdfb 	bl	800a428 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801a832:	4603      	mov	r3, r0
 801a834:	601c      	str	r4, [r3, #0]
 801a836:	e007      	b.n	801a848 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801a838:	6838      	ldr	r0, [r7, #0]
 801a83a:	f000 fab0 	bl	801ad9e <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801a83e:	4603      	mov	r3, r0
 801a840:	4619      	mov	r1, r3
 801a842:	6878      	ldr	r0, [r7, #4]
 801a844:	f000 fab6 	bl	801adb4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj4EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801a848:	687b      	ldr	r3, [r7, #4]
	}
 801a84a:	4618      	mov	r0, r3
 801a84c:	3714      	adds	r7, #20
 801a84e:	46bd      	mov	sp, r7
 801a850:	bd90      	pop	{r4, r7, pc}

0801a852 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801a852:	b580      	push	{r7, lr}
 801a854:	b082      	sub	sp, #8
 801a856:	af00      	add	r7, sp, #0
 801a858:	6078      	str	r0, [r7, #4]
 801a85a:	7039      	strb	r1, [r7, #0]
 801a85c:	687b      	ldr	r3, [r7, #4]
 801a85e:	4611      	mov	r1, r2
 801a860:	4618      	mov	r0, r3
 801a862:	f000 fade 	bl	801ae22 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a866:	687b      	ldr	r3, [r7, #4]
 801a868:	4618      	mov	r0, r3
 801a86a:	3708      	adds	r7, #8
 801a86c:	46bd      	mov	sp, r7
 801a86e:	bd80      	pop	{r7, pc}

0801a870 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801a870:	b580      	push	{r7, lr}
 801a872:	b082      	sub	sp, #8
 801a874:	af00      	add	r7, sp, #0
 801a876:	6078      	str	r0, [r7, #4]
 801a878:	7039      	strb	r1, [r7, #0]
 801a87a:	687b      	ldr	r3, [r7, #4]
 801a87c:	4611      	mov	r1, r2
 801a87e:	4618      	mov	r0, r3
 801a880:	f7ff ffe7 	bl	801a852 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a884:	687b      	ldr	r3, [r7, #4]
 801a886:	4618      	mov	r0, r3
 801a888:	3708      	adds	r7, #8
 801a88a:	46bd      	mov	sp, r7
 801a88c:	bd80      	pop	{r7, pc}

0801a88e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801a88e:	b580      	push	{r7, lr}
 801a890:	b082      	sub	sp, #8
 801a892:	af00      	add	r7, sp, #0
 801a894:	6078      	str	r0, [r7, #4]
 801a896:	7039      	strb	r1, [r7, #0]
 801a898:	687b      	ldr	r3, [r7, #4]
 801a89a:	4611      	mov	r1, r2
 801a89c:	4618      	mov	r0, r3
 801a89e:	f7ff ffe7 	bl	801a870 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a8a2:	687b      	ldr	r3, [r7, #4]
 801a8a4:	4618      	mov	r0, r3
 801a8a6:	3708      	adds	r7, #8
 801a8a8:	46bd      	mov	sp, r7
 801a8aa:	bd80      	pop	{r7, pc}

0801a8ac <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801a8ac:	b580      	push	{r7, lr}
 801a8ae:	b082      	sub	sp, #8
 801a8b0:	af00      	add	r7, sp, #0
 801a8b2:	6078      	str	r0, [r7, #4]
 801a8b4:	7039      	strb	r1, [r7, #0]
 801a8b6:	687b      	ldr	r3, [r7, #4]
 801a8b8:	4611      	mov	r1, r2
 801a8ba:	4618      	mov	r0, r3
 801a8bc:	f7ff ffe7 	bl	801a88e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a8c0:	687b      	ldr	r3, [r7, #4]
 801a8c2:	4618      	mov	r0, r3
 801a8c4:	3708      	adds	r7, #8
 801a8c6:	46bd      	mov	sp, r7
 801a8c8:	bd80      	pop	{r7, pc}

0801a8ca <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 801a8ca:	b580      	push	{r7, lr}
 801a8cc:	b082      	sub	sp, #8
 801a8ce:	af00      	add	r7, sp, #0
 801a8d0:	6078      	str	r0, [r7, #4]
 801a8d2:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 801a8d4:	687b      	ldr	r3, [r7, #4]
 801a8d6:	4611      	mov	r1, r2
 801a8d8:	4618      	mov	r0, r3
 801a8da:	f7ff ffe7 	bl	801a8ac <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801a8de:	687b      	ldr	r3, [r7, #4]
 801a8e0:	4618      	mov	r0, r3
 801a8e2:	3708      	adds	r7, #8
 801a8e4:	46bd      	mov	sp, r7
 801a8e6:	bd80      	pop	{r7, pc}

0801a8e8 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>:
      _Variant_base()
 801a8e8:	b580      	push	{r7, lr}
 801a8ea:	b082      	sub	sp, #8
 801a8ec:	af00      	add	r7, sp, #0
 801a8ee:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 801a8f0:	4619      	mov	r1, r3
 801a8f2:	6878      	ldr	r0, [r7, #4]
 801a8f4:	f7ff ffe9 	bl	801a8ca <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a8f8:	687b      	ldr	r3, [r7, #4]
 801a8fa:	4618      	mov	r0, r3
 801a8fc:	3708      	adds	r7, #8
 801a8fe:	46bd      	mov	sp, r7
 801a900:	bd80      	pop	{r7, pc}

0801a902 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801a902:	b590      	push	{r4, r7, lr}
 801a904:	b085      	sub	sp, #20
 801a906:	af00      	add	r7, sp, #0
 801a908:	6078      	str	r0, [r7, #4]
 801a90a:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801a90c:	2300      	movs	r3, #0
 801a90e:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801a910:	6878      	ldr	r0, [r7, #4]
 801a912:	f7ef fa92 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801a916:	4603      	mov	r3, r0
 801a918:	2b00      	cmp	r3, #0
 801a91a:	bf0c      	ite	eq
 801a91c:	2301      	moveq	r3, #1
 801a91e:	2300      	movne	r3, #0
 801a920:	b2db      	uxtb	r3, r3
 801a922:	2b00      	cmp	r3, #0
 801a924:	d00b      	beq.n	801a93e <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3c>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801a926:	6838      	ldr	r0, [r7, #0]
 801a928:	f7ed feaa 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801a92c:	4603      	mov	r3, r0
 801a92e:	781c      	ldrb	r4, [r3, #0]
 801a930:	6878      	ldr	r0, [r7, #4]
 801a932:	f7f2 fd01 	bl	800d338 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801a936:	4603      	mov	r3, r0
 801a938:	4622      	mov	r2, r4
 801a93a:	701a      	strb	r2, [r3, #0]
 801a93c:	e007      	b.n	801a94e <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4c>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801a93e:	6838      	ldr	r0, [r7, #0]
 801a940:	f7ed fe9e 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801a944:	4603      	mov	r3, r0
 801a946:	4619      	mov	r1, r3
 801a948:	6878      	ldr	r0, [r7, #4]
 801a94a:	f000 fa7c 	bl	801ae46 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj0EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801a94e:	687b      	ldr	r3, [r7, #4]
	}
 801a950:	4618      	mov	r0, r3
 801a952:	3714      	adds	r7, #20
 801a954:	46bd      	mov	sp, r7
 801a956:	bd90      	pop	{r4, r7, pc}

0801a958 <_ZSt3getIiJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801a958:	b580      	push	{r7, lr}
 801a95a:	b082      	sub	sp, #8
 801a95c:	af00      	add	r7, sp, #0
 801a95e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801a960:	6878      	ldr	r0, [r7, #4]
 801a962:	f7f5 fbab 	bl	80100bc <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801a966:	4603      	mov	r3, r0
    }
 801a968:	4618      	mov	r0, r3
 801a96a:	3708      	adds	r7, #8
 801a96c:	46bd      	mov	sp, r7
 801a96e:	bd80      	pop	{r7, pc}

0801a970 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 801a970:	b590      	push	{r4, r7, lr}
 801a972:	b085      	sub	sp, #20
 801a974:	af00      	add	r7, sp, #0
 801a976:	6078      	str	r0, [r7, #4]
 801a978:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801a97a:	2301      	movs	r3, #1
 801a97c:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801a97e:	6878      	ldr	r0, [r7, #4]
 801a980:	f7ef fa5b 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801a984:	4603      	mov	r3, r0
 801a986:	2b01      	cmp	r3, #1
 801a988:	bf0c      	ite	eq
 801a98a:	2301      	moveq	r3, #1
 801a98c:	2300      	movne	r3, #0
 801a98e:	b2db      	uxtb	r3, r3
 801a990:	2b00      	cmp	r3, #0
 801a992:	d00a      	beq.n	801a9aa <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801a994:	6838      	ldr	r0, [r7, #0]
 801a996:	f7eb f860 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801a99a:	4603      	mov	r3, r0
 801a99c:	681c      	ldr	r4, [r3, #0]
 801a99e:	6878      	ldr	r0, [r7, #4]
 801a9a0:	f7f2 fc76 	bl	800d290 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801a9a4:	4603      	mov	r3, r0
 801a9a6:	601c      	str	r4, [r3, #0]
 801a9a8:	e007      	b.n	801a9ba <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801a9aa:	6838      	ldr	r0, [r7, #0]
 801a9ac:	f7eb f855 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801a9b0:	4603      	mov	r3, r0
 801a9b2:	4619      	mov	r1, r3
 801a9b4:	6878      	ldr	r0, [r7, #4]
 801a9b6:	f000 fa5f 	bl	801ae78 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj1EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 801a9ba:	687b      	ldr	r3, [r7, #4]
	}
 801a9bc:	4618      	mov	r0, r3
 801a9be:	3714      	adds	r7, #20
 801a9c0:	46bd      	mov	sp, r7
 801a9c2:	bd90      	pop	{r4, r7, pc}

0801a9c4 <_ZSt3getIfJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801a9c4:	b580      	push	{r7, lr}
 801a9c6:	b082      	sub	sp, #8
 801a9c8:	af00      	add	r7, sp, #0
 801a9ca:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801a9cc:	6878      	ldr	r0, [r7, #4]
 801a9ce:	f7f5 fbf1 	bl	80101b4 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801a9d2:	4603      	mov	r3, r0
    }
 801a9d4:	4618      	mov	r0, r3
 801a9d6:	3708      	adds	r7, #8
 801a9d8:	46bd      	mov	sp, r7
 801a9da:	bd80      	pop	{r7, pc}

0801a9dc <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 801a9dc:	b590      	push	{r4, r7, lr}
 801a9de:	b085      	sub	sp, #20
 801a9e0:	af00      	add	r7, sp, #0
 801a9e2:	6078      	str	r0, [r7, #4]
 801a9e4:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801a9e6:	2302      	movs	r3, #2
 801a9e8:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801a9ea:	6878      	ldr	r0, [r7, #4]
 801a9ec:	f7ef fa25 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801a9f0:	4603      	mov	r3, r0
 801a9f2:	2b02      	cmp	r3, #2
 801a9f4:	bf0c      	ite	eq
 801a9f6:	2301      	moveq	r3, #1
 801a9f8:	2300      	movne	r3, #0
 801a9fa:	b2db      	uxtb	r3, r3
 801a9fc:	2b00      	cmp	r3, #0
 801a9fe:	d00a      	beq.n	801aa16 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801aa00:	6838      	ldr	r0, [r7, #0]
 801aa02:	f7eb f84c 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801aa06:	4603      	mov	r3, r0
 801aa08:	681c      	ldr	r4, [r3, #0]
 801aa0a:	6878      	ldr	r0, [r7, #4]
 801aa0c:	f7f2 fc5c 	bl	800d2c8 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801aa10:	4603      	mov	r3, r0
 801aa12:	601c      	str	r4, [r3, #0]
 801aa14:	e007      	b.n	801aa26 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801aa16:	6838      	ldr	r0, [r7, #0]
 801aa18:	f7eb f841 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801aa1c:	4603      	mov	r3, r0
 801aa1e:	4619      	mov	r1, r3
 801aa20:	6878      	ldr	r0, [r7, #4]
 801aa22:	f000 fa42 	bl	801aeaa <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj2EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 801aa26:	687b      	ldr	r3, [r7, #4]
	}
 801aa28:	4618      	mov	r0, r3
 801aa2a:	3714      	adds	r7, #20
 801aa2c:	46bd      	mov	sp, r7
 801aa2e:	bd90      	pop	{r4, r7, pc}

0801aa30 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801aa30:	b590      	push	{r4, r7, lr}
 801aa32:	b085      	sub	sp, #20
 801aa34:	af00      	add	r7, sp, #0
 801aa36:	6078      	str	r0, [r7, #4]
 801aa38:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801aa3a:	2303      	movs	r3, #3
 801aa3c:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801aa3e:	6878      	ldr	r0, [r7, #4]
 801aa40:	f7ef f9fb 	bl	8009e3a <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801aa44:	4603      	mov	r3, r0
 801aa46:	2b03      	cmp	r3, #3
 801aa48:	bf0c      	ite	eq
 801aa4a:	2301      	moveq	r3, #1
 801aa4c:	2300      	movne	r3, #0
 801aa4e:	b2db      	uxtb	r3, r3
 801aa50:	2b00      	cmp	r3, #0
 801aa52:	d00c      	beq.n	801aa6e <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801aa54:	6838      	ldr	r0, [r7, #0]
 801aa56:	f7ed fe3e 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801aa5a:	4604      	mov	r4, r0
 801aa5c:	6878      	ldr	r0, [r7, #4]
 801aa5e:	f7f2 fc4f 	bl	800d300 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801aa62:	4603      	mov	r3, r0
 801aa64:	4621      	mov	r1, r4
 801aa66:	4618      	mov	r0, r3
 801aa68:	f007 ffc7 	bl	80229fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 801aa6c:	e007      	b.n	801aa7e <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801aa6e:	6838      	ldr	r0, [r7, #0]
 801aa70:	f7ed fe31 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801aa74:	4603      	mov	r3, r0
 801aa76:	4619      	mov	r1, r3
 801aa78:	6878      	ldr	r0, [r7, #4]
 801aa7a:	f000 fa2f 	bl	801aedc <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801aa7e:	687b      	ldr	r3, [r7, #4]
	}
 801aa80:	4618      	mov	r0, r3
 801aa82:	3714      	adds	r7, #20
 801aa84:	46bd      	mov	sp, r7
 801aa86:	bd90      	pop	{r4, r7, pc}

0801aa88 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801aa88:	b580      	push	{r7, lr}
 801aa8a:	b082      	sub	sp, #8
 801aa8c:	af00      	add	r7, sp, #0
 801aa8e:	6078      	str	r0, [r7, #4]
 801aa90:	7039      	strb	r1, [r7, #0]
 801aa92:	687b      	ldr	r3, [r7, #4]
 801aa94:	4611      	mov	r1, r2
 801aa96:	4618      	mov	r0, r3
 801aa98:	f000 fa57 	bl	801af4a <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801aa9c:	687b      	ldr	r3, [r7, #4]
 801aa9e:	4618      	mov	r0, r3
 801aaa0:	3708      	adds	r7, #8
 801aaa2:	46bd      	mov	sp, r7
 801aaa4:	bd80      	pop	{r7, pc}

0801aaa6 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801aaa6:	b580      	push	{r7, lr}
 801aaa8:	b082      	sub	sp, #8
 801aaaa:	af00      	add	r7, sp, #0
 801aaac:	6078      	str	r0, [r7, #4]
 801aaae:	7039      	strb	r1, [r7, #0]
 801aab0:	687b      	ldr	r3, [r7, #4]
 801aab2:	4611      	mov	r1, r2
 801aab4:	4618      	mov	r0, r3
 801aab6:	f7ff ffe7 	bl	801aa88 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801aaba:	687b      	ldr	r3, [r7, #4]
 801aabc:	4618      	mov	r0, r3
 801aabe:	3708      	adds	r7, #8
 801aac0:	46bd      	mov	sp, r7
 801aac2:	bd80      	pop	{r7, pc}

0801aac4 <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801aac4:	b580      	push	{r7, lr}
 801aac6:	b082      	sub	sp, #8
 801aac8:	af00      	add	r7, sp, #0
 801aaca:	6078      	str	r0, [r7, #4]
 801aacc:	7039      	strb	r1, [r7, #0]
 801aace:	687b      	ldr	r3, [r7, #4]
 801aad0:	4611      	mov	r1, r2
 801aad2:	4618      	mov	r0, r3
 801aad4:	f7ff ffe7 	bl	801aaa6 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801aad8:	687b      	ldr	r3, [r7, #4]
 801aada:	4618      	mov	r0, r3
 801aadc:	3708      	adds	r7, #8
 801aade:	46bd      	mov	sp, r7
 801aae0:	bd80      	pop	{r7, pc}

0801aae2 <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801aae2:	b580      	push	{r7, lr}
 801aae4:	b082      	sub	sp, #8
 801aae6:	af00      	add	r7, sp, #0
 801aae8:	6078      	str	r0, [r7, #4]
 801aaea:	7039      	strb	r1, [r7, #0]
 801aaec:	687b      	ldr	r3, [r7, #4]
 801aaee:	4611      	mov	r1, r2
 801aaf0:	4618      	mov	r0, r3
 801aaf2:	f7ff ffe7 	bl	801aac4 <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801aaf6:	687b      	ldr	r3, [r7, #4]
 801aaf8:	4618      	mov	r0, r3
 801aafa:	3708      	adds	r7, #8
 801aafc:	46bd      	mov	sp, r7
 801aafe:	bd80      	pop	{r7, pc}

0801ab00 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 801ab00:	b580      	push	{r7, lr}
 801ab02:	b082      	sub	sp, #8
 801ab04:	af00      	add	r7, sp, #0
 801ab06:	6078      	str	r0, [r7, #4]
 801ab08:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 801ab0a:	687b      	ldr	r3, [r7, #4]
 801ab0c:	4611      	mov	r1, r2
 801ab0e:	4618      	mov	r0, r3
 801ab10:	f7ff ffe7 	bl	801aae2 <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801ab14:	687b      	ldr	r3, [r7, #4]
 801ab16:	4618      	mov	r0, r3
 801ab18:	3708      	adds	r7, #8
 801ab1a:	46bd      	mov	sp, r7
 801ab1c:	bd80      	pop	{r7, pc}

0801ab1e <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1Ev>:
      _Variant_base()
 801ab1e:	b580      	push	{r7, lr}
 801ab20:	b082      	sub	sp, #8
 801ab22:	af00      	add	r7, sp, #0
 801ab24:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 801ab26:	4619      	mov	r1, r3
 801ab28:	6878      	ldr	r0, [r7, #4]
 801ab2a:	f7ff ffe9 	bl	801ab00 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801ab2e:	687b      	ldr	r3, [r7, #4]
 801ab30:	4618      	mov	r0, r3
 801ab32:	3708      	adds	r7, #8
 801ab34:	46bd      	mov	sp, r7
 801ab36:	bd80      	pop	{r7, pc}

0801ab38 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>:
	operator=(_Tp&& __rhs)
 801ab38:	b590      	push	{r4, r7, lr}
 801ab3a:	b085      	sub	sp, #20
 801ab3c:	af00      	add	r7, sp, #0
 801ab3e:	6078      	str	r0, [r7, #4]
 801ab40:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801ab42:	2301      	movs	r3, #1
 801ab44:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801ab46:	6878      	ldr	r0, [r7, #4]
 801ab48:	f7ef f9c4 	bl	8009ed4 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 801ab4c:	4603      	mov	r3, r0
 801ab4e:	2b01      	cmp	r3, #1
 801ab50:	bf0c      	ite	eq
 801ab52:	2301      	moveq	r3, #1
 801ab54:	2300      	movne	r3, #0
 801ab56:	b2db      	uxtb	r3, r3
 801ab58:	2b00      	cmp	r3, #0
 801ab5a:	d00a      	beq.n	801ab72 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801ab5c:	6838      	ldr	r0, [r7, #0]
 801ab5e:	f7fa f817 	bl	8014b90 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801ab62:	4603      	mov	r3, r0
 801ab64:	681c      	ldr	r4, [r3, #0]
 801ab66:	6878      	ldr	r0, [r7, #4]
 801ab68:	f7ef fd46 	bl	800a5f8 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801ab6c:	4603      	mov	r3, r0
 801ab6e:	601c      	str	r4, [r3, #0]
 801ab70:	e007      	b.n	801ab82 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801ab72:	6838      	ldr	r0, [r7, #0]
 801ab74:	f7fa f80c 	bl	8014b90 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801ab78:	4603      	mov	r3, r0
 801ab7a:	4619      	mov	r1, r3
 801ab7c:	6878      	ldr	r0, [r7, #4]
 801ab7e:	f000 f9f6 	bl	801af6e <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>
	  return *this;
 801ab82:	687b      	ldr	r3, [r7, #4]
	}
 801ab84:	4618      	mov	r0, r3
 801ab86:	3714      	adds	r7, #20
 801ab88:	46bd      	mov	sp, r7
 801ab8a:	bd90      	pop	{r4, r7, pc}

0801ab8c <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>:
	operator=(_Tp&& __rhs)
 801ab8c:	b590      	push	{r4, r7, lr}
 801ab8e:	b085      	sub	sp, #20
 801ab90:	af00      	add	r7, sp, #0
 801ab92:	6078      	str	r0, [r7, #4]
 801ab94:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801ab96:	2300      	movs	r3, #0
 801ab98:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801ab9a:	6878      	ldr	r0, [r7, #4]
 801ab9c:	f7ef f99a 	bl	8009ed4 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 801aba0:	4603      	mov	r3, r0
 801aba2:	2b00      	cmp	r3, #0
 801aba4:	bf0c      	ite	eq
 801aba6:	2301      	moveq	r3, #1
 801aba8:	2300      	movne	r3, #0
 801abaa:	b2db      	uxtb	r3, r3
 801abac:	2b00      	cmp	r3, #0
 801abae:	d00a      	beq.n	801abc6 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801abb0:	6838      	ldr	r0, [r7, #0]
 801abb2:	f000 f9f5 	bl	801afa0 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801abb6:	4603      	mov	r3, r0
 801abb8:	681c      	ldr	r4, [r3, #0]
 801abba:	6878      	ldr	r0, [r7, #4]
 801abbc:	f7ef fd5a 	bl	800a674 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801abc0:	4603      	mov	r3, r0
 801abc2:	601c      	str	r4, [r3, #0]
 801abc4:	e007      	b.n	801abd6 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801abc6:	6838      	ldr	r0, [r7, #0]
 801abc8:	f000 f9ea 	bl	801afa0 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801abcc:	4603      	mov	r3, r0
 801abce:	4619      	mov	r1, r3
 801abd0:	6878      	ldr	r0, [r7, #4]
 801abd2:	f000 f9f0 	bl	801afb6 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>
	  return *this;
 801abd6:	687b      	ldr	r3, [r7, #4]
	}
 801abd8:	4618      	mov	r0, r3
 801abda:	3714      	adds	r7, #20
 801abdc:	46bd      	mov	sp, r7
 801abde:	bd90      	pop	{r4, r7, pc}

0801abe0 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>:
      push_back(value_type&& __x)
 801abe0:	b580      	push	{r7, lr}
 801abe2:	b082      	sub	sp, #8
 801abe4:	af00      	add	r7, sp, #0
 801abe6:	6078      	str	r0, [r7, #4]
 801abe8:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801abea:	6838      	ldr	r0, [r7, #0]
 801abec:	f000 f9fc 	bl	801afe8 <_ZSt4moveIR13mult_operatorEONSt16remove_referenceIT_E4typeEOS3_>
 801abf0:	4603      	mov	r3, r0
 801abf2:	4619      	mov	r1, r3
 801abf4:	6878      	ldr	r0, [r7, #4]
 801abf6:	f000 fa02 	bl	801affe <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>
 801abfa:	bf00      	nop
 801abfc:	3708      	adds	r7, #8
 801abfe:	46bd      	mov	sp, r7
 801ac00:	bd80      	pop	{r7, pc}

0801ac02 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801ac02:	b580      	push	{r7, lr}
 801ac04:	b082      	sub	sp, #8
 801ac06:	af00      	add	r7, sp, #0
 801ac08:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801ac0a:	6878      	ldr	r0, [r7, #4]
 801ac0c:	f000 fa29 	bl	801b062 <_ZNSaIP16Power_expressionEC1Ev>
 801ac10:	687b      	ldr	r3, [r7, #4]
 801ac12:	4618      	mov	r0, r3
 801ac14:	f000 fa31 	bl	801b07a <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801ac18:	687b      	ldr	r3, [r7, #4]
 801ac1a:	4618      	mov	r0, r3
 801ac1c:	3708      	adds	r7, #8
 801ac1e:	46bd      	mov	sp, r7
 801ac20:	bd80      	pop	{r7, pc}

0801ac22 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801ac22:	b580      	push	{r7, lr}
 801ac24:	b082      	sub	sp, #8
 801ac26:	af00      	add	r7, sp, #0
 801ac28:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801ac2a:	6878      	ldr	r0, [r7, #4]
 801ac2c:	f000 fa39 	bl	801b0a2 <_ZNSaI13mult_operatorEC1Ev>
 801ac30:	687b      	ldr	r3, [r7, #4]
 801ac32:	4618      	mov	r0, r3
 801ac34:	f000 fa41 	bl	801b0ba <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 801ac38:	687b      	ldr	r3, [r7, #4]
 801ac3a:	4618      	mov	r0, r3
 801ac3c:	3708      	adds	r7, #8
 801ac3e:	46bd      	mov	sp, r7
 801ac40:	bd80      	pop	{r7, pc}

0801ac42 <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801ac42:	b580      	push	{r7, lr}
 801ac44:	b082      	sub	sp, #8
 801ac46:	af00      	add	r7, sp, #0
 801ac48:	6078      	str	r0, [r7, #4]
 801ac4a:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801ac4c:	6838      	ldr	r0, [r7, #0]
 801ac4e:	f000 fa48 	bl	801b0e2 <_ZSt4moveIRP16Power_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801ac52:	4603      	mov	r3, r0
 801ac54:	4619      	mov	r1, r3
 801ac56:	6878      	ldr	r0, [r7, #4]
 801ac58:	f000 fa4e 	bl	801b0f8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801ac5c:	bf00      	nop
 801ac5e:	3708      	adds	r7, #8
 801ac60:	46bd      	mov	sp, r7
 801ac62:	bd80      	pop	{r7, pc}

0801ac64 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>:
      push_back(value_type&& __x)
 801ac64:	b580      	push	{r7, lr}
 801ac66:	b082      	sub	sp, #8
 801ac68:	af00      	add	r7, sp, #0
 801ac6a:	6078      	str	r0, [r7, #4]
 801ac6c:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801ac6e:	6838      	ldr	r0, [r7, #0]
 801ac70:	f000 fa74 	bl	801b15c <_ZSt4moveIR12sum_operatorEONSt16remove_referenceIT_E4typeEOS3_>
 801ac74:	4603      	mov	r3, r0
 801ac76:	4619      	mov	r1, r3
 801ac78:	6878      	ldr	r0, [r7, #4]
 801ac7a:	f000 fa7a 	bl	801b172 <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>
 801ac7e:	bf00      	nop
 801ac80:	3708      	adds	r7, #8
 801ac82:	46bd      	mov	sp, r7
 801ac84:	bd80      	pop	{r7, pc}

0801ac86 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801ac86:	b580      	push	{r7, lr}
 801ac88:	b082      	sub	sp, #8
 801ac8a:	af00      	add	r7, sp, #0
 801ac8c:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801ac8e:	6878      	ldr	r0, [r7, #4]
 801ac90:	f000 faa1 	bl	801b1d6 <_ZNSaIP19Multiply_expressionEC1Ev>
 801ac94:	687b      	ldr	r3, [r7, #4]
 801ac96:	4618      	mov	r0, r3
 801ac98:	f000 faa9 	bl	801b1ee <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801ac9c:	687b      	ldr	r3, [r7, #4]
 801ac9e:	4618      	mov	r0, r3
 801aca0:	3708      	adds	r7, #8
 801aca2:	46bd      	mov	sp, r7
 801aca4:	bd80      	pop	{r7, pc}

0801aca6 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801aca6:	b580      	push	{r7, lr}
 801aca8:	b082      	sub	sp, #8
 801acaa:	af00      	add	r7, sp, #0
 801acac:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801acae:	6878      	ldr	r0, [r7, #4]
 801acb0:	f000 fab1 	bl	801b216 <_ZNSaI12sum_operatorEC1Ev>
 801acb4:	687b      	ldr	r3, [r7, #4]
 801acb6:	4618      	mov	r0, r3
 801acb8:	f000 fab9 	bl	801b22e <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 801acbc:	687b      	ldr	r3, [r7, #4]
 801acbe:	4618      	mov	r0, r3
 801acc0:	3708      	adds	r7, #8
 801acc2:	46bd      	mov	sp, r7
 801acc4:	bd80      	pop	{r7, pc}

0801acc6 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801acc6:	b580      	push	{r7, lr}
 801acc8:	b082      	sub	sp, #8
 801acca:	af00      	add	r7, sp, #0
 801accc:	6078      	str	r0, [r7, #4]
 801acce:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801acd0:	6838      	ldr	r0, [r7, #0]
 801acd2:	f000 fac0 	bl	801b256 <_ZSt4moveIRP19Multiply_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801acd6:	4603      	mov	r3, r0
 801acd8:	4619      	mov	r1, r3
 801acda:	6878      	ldr	r0, [r7, #4]
 801acdc:	f000 fac6 	bl	801b26c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801ace0:	bf00      	nop
 801ace2:	3708      	adds	r7, #8
 801ace4:	46bd      	mov	sp, r7
 801ace6:	bd80      	pop	{r7, pc}

0801ace8 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801ace8:	b580      	push	{r7, lr}
 801acea:	b082      	sub	sp, #8
 801acec:	af00      	add	r7, sp, #0
 801acee:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801acf0:	6878      	ldr	r0, [r7, #4]
 801acf2:	f000 faed 	bl	801b2d0 <_ZNSaIP18Compare_expressionEC1Ev>
 801acf6:	687b      	ldr	r3, [r7, #4]
 801acf8:	4618      	mov	r0, r3
 801acfa:	f000 faf5 	bl	801b2e8 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801acfe:	687b      	ldr	r3, [r7, #4]
 801ad00:	4618      	mov	r0, r3
 801ad02:	3708      	adds	r7, #8
 801ad04:	46bd      	mov	sp, r7
 801ad06:	bd80      	pop	{r7, pc}

0801ad08 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801ad08:	b580      	push	{r7, lr}
 801ad0a:	b082      	sub	sp, #8
 801ad0c:	af00      	add	r7, sp, #0
 801ad0e:	6078      	str	r0, [r7, #4]
 801ad10:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801ad12:	6838      	ldr	r0, [r7, #0]
 801ad14:	f000 fafc 	bl	801b310 <_ZSt4moveIRP18Compare_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801ad18:	4603      	mov	r3, r0
 801ad1a:	4619      	mov	r1, r3
 801ad1c:	6878      	ldr	r0, [r7, #4]
 801ad1e:	f000 fb02 	bl	801b326 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801ad22:	bf00      	nop
 801ad24:	3708      	adds	r7, #8
 801ad26:	46bd      	mov	sp, r7
 801ad28:	bd80      	pop	{r7, pc}

0801ad2a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801ad2a:	b580      	push	{r7, lr}
 801ad2c:	b082      	sub	sp, #8
 801ad2e:	af00      	add	r7, sp, #0
 801ad30:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801ad32:	6878      	ldr	r0, [r7, #4]
 801ad34:	f000 fb29 	bl	801b38a <_ZNSaIP14And_expressionEC1Ev>
 801ad38:	687b      	ldr	r3, [r7, #4]
 801ad3a:	4618      	mov	r0, r3
 801ad3c:	f000 fb31 	bl	801b3a2 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801ad40:	687b      	ldr	r3, [r7, #4]
 801ad42:	4618      	mov	r0, r3
 801ad44:	3708      	adds	r7, #8
 801ad46:	46bd      	mov	sp, r7
 801ad48:	bd80      	pop	{r7, pc}

0801ad4a <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801ad4a:	b580      	push	{r7, lr}
 801ad4c:	b082      	sub	sp, #8
 801ad4e:	af00      	add	r7, sp, #0
 801ad50:	6078      	str	r0, [r7, #4]
 801ad52:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801ad54:	6838      	ldr	r0, [r7, #0]
 801ad56:	f000 fb38 	bl	801b3ca <_ZSt4moveIRP14And_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801ad5a:	4603      	mov	r3, r0
 801ad5c:	4619      	mov	r1, r3
 801ad5e:	6878      	ldr	r0, [r7, #4]
 801ad60:	f000 fb3e 	bl	801b3e0 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801ad64:	bf00      	nop
 801ad66:	3708      	adds	r7, #8
 801ad68:	46bd      	mov	sp, r7
 801ad6a:	bd80      	pop	{r7, pc}

0801ad6c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj5EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801ad6c:	b580      	push	{r7, lr}
 801ad6e:	b082      	sub	sp, #8
 801ad70:	af00      	add	r7, sp, #0
 801ad72:	6078      	str	r0, [r7, #4]
 801ad74:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ad76:	687b      	ldr	r3, [r7, #4]
 801ad78:	4618      	mov	r0, r3
 801ad7a:	f7ef fadd 	bl	800a338 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ad7e:	6838      	ldr	r0, [r7, #0]
 801ad80:	f7f9 fd0e 	bl	80147a0 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801ad84:	4603      	mov	r3, r0
 801ad86:	4619      	mov	r1, r3
 801ad88:	6878      	ldr	r0, [r7, #4]
 801ad8a:	f000 fb5b 	bl	801b444 <_ZSt28__variant_construct_by_indexILj5ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801ad8e:	6878      	ldr	r0, [r7, #4]
 801ad90:	f7ef fbe2 	bl	800a558 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801ad94:	4603      	mov	r3, r0
	}
 801ad96:	4618      	mov	r0, r3
 801ad98:	3708      	adds	r7, #8
 801ad9a:	46bd      	mov	sp, r7
 801ad9c:	bd80      	pop	{r7, pc}

0801ad9e <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801ad9e:	b480      	push	{r7}
 801ada0:	b083      	sub	sp, #12
 801ada2:	af00      	add	r7, sp, #0
 801ada4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ada6:	687b      	ldr	r3, [r7, #4]
 801ada8:	4618      	mov	r0, r3
 801adaa:	370c      	adds	r7, #12
 801adac:	46bd      	mov	sp, r7
 801adae:	f85d 7b04 	ldr.w	r7, [sp], #4
 801adb2:	4770      	bx	lr

0801adb4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj4EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801adb4:	b580      	push	{r7, lr}
 801adb6:	b082      	sub	sp, #8
 801adb8:	af00      	add	r7, sp, #0
 801adba:	6078      	str	r0, [r7, #4]
 801adbc:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801adbe:	687b      	ldr	r3, [r7, #4]
 801adc0:	4618      	mov	r0, r3
 801adc2:	f7ef fab9 	bl	800a338 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801adc6:	6838      	ldr	r0, [r7, #0]
 801adc8:	f7ff ffe9 	bl	801ad9e <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801adcc:	4603      	mov	r3, r0
 801adce:	4619      	mov	r1, r3
 801add0:	6878      	ldr	r0, [r7, #4]
 801add2:	f000 fb56 	bl	801b482 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS8_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801add6:	6878      	ldr	r0, [r7, #4]
 801add8:	f7ef fb26 	bl	800a428 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801addc:	4603      	mov	r3, r0
	}
 801adde:	4618      	mov	r0, r3
 801ade0:	3708      	adds	r7, #8
 801ade2:	46bd      	mov	sp, r7
 801ade4:	bd80      	pop	{r7, pc}

0801ade6 <_ZNSt8__detail9__variant14_UninitializedIbLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 801ade6:	b480      	push	{r7}
 801ade8:	b083      	sub	sp, #12
 801adea:	af00      	add	r7, sp, #0
 801adec:	6078      	str	r0, [r7, #4]
 801adee:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 801adf0:	687b      	ldr	r3, [r7, #4]
 801adf2:	2200      	movs	r2, #0
 801adf4:	701a      	strb	r2, [r3, #0]
	{ }
 801adf6:	687b      	ldr	r3, [r7, #4]
 801adf8:	4618      	mov	r0, r3
 801adfa:	370c      	adds	r7, #12
 801adfc:	46bd      	mov	sp, r7
 801adfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ae02:	4770      	bx	lr

0801ae04 <_ZNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801ae04:	b580      	push	{r7, lr}
 801ae06:	b082      	sub	sp, #8
 801ae08:	af00      	add	r7, sp, #0
 801ae0a:	6078      	str	r0, [r7, #4]
 801ae0c:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 801ae0e:	687b      	ldr	r3, [r7, #4]
 801ae10:	4611      	mov	r1, r2
 801ae12:	4618      	mov	r0, r3
 801ae14:	f7ff ffe7 	bl	801ade6 <_ZNSt8__detail9__variant14_UninitializedIbLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801ae18:	687b      	ldr	r3, [r7, #4]
 801ae1a:	4618      	mov	r0, r3
 801ae1c:	3708      	adds	r7, #8
 801ae1e:	46bd      	mov	sp, r7
 801ae20:	bd80      	pop	{r7, pc}

0801ae22 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 801ae22:	b580      	push	{r7, lr}
 801ae24:	b082      	sub	sp, #8
 801ae26:	af00      	add	r7, sp, #0
 801ae28:	6078      	str	r0, [r7, #4]
 801ae2a:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 801ae2c:	687b      	ldr	r3, [r7, #4]
 801ae2e:	4611      	mov	r1, r2
 801ae30:	4618      	mov	r0, r3
 801ae32:	f7ff ffe7 	bl	801ae04 <_ZNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 801ae36:	687b      	ldr	r3, [r7, #4]
 801ae38:	2200      	movs	r2, #0
 801ae3a:	761a      	strb	r2, [r3, #24]
	{ }
 801ae3c:	687b      	ldr	r3, [r7, #4]
 801ae3e:	4618      	mov	r0, r3
 801ae40:	3708      	adds	r7, #8
 801ae42:	46bd      	mov	sp, r7
 801ae44:	bd80      	pop	{r7, pc}

0801ae46 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj0EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801ae46:	b580      	push	{r7, lr}
 801ae48:	b082      	sub	sp, #8
 801ae4a:	af00      	add	r7, sp, #0
 801ae4c:	6078      	str	r0, [r7, #4]
 801ae4e:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ae50:	687b      	ldr	r3, [r7, #4]
 801ae52:	4618      	mov	r0, r3
 801ae54:	f7ef fa70 	bl	800a338 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ae58:	6838      	ldr	r0, [r7, #0]
 801ae5a:	f7ed fc11 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801ae5e:	4603      	mov	r3, r0
 801ae60:	4619      	mov	r1, r3
 801ae62:	6878      	ldr	r0, [r7, #4]
 801ae64:	f000 fb2c 	bl	801b4c0 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801ae68:	6878      	ldr	r0, [r7, #4]
 801ae6a:	f7f2 fa65 	bl	800d338 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801ae6e:	4603      	mov	r3, r0
	}
 801ae70:	4618      	mov	r0, r3
 801ae72:	3708      	adds	r7, #8
 801ae74:	46bd      	mov	sp, r7
 801ae76:	bd80      	pop	{r7, pc}

0801ae78 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj1EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 801ae78:	b580      	push	{r7, lr}
 801ae7a:	b082      	sub	sp, #8
 801ae7c:	af00      	add	r7, sp, #0
 801ae7e:	6078      	str	r0, [r7, #4]
 801ae80:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ae82:	687b      	ldr	r3, [r7, #4]
 801ae84:	4618      	mov	r0, r3
 801ae86:	f7ef fa57 	bl	800a338 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ae8a:	6838      	ldr	r0, [r7, #0]
 801ae8c:	f7ea fde5 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801ae90:	4603      	mov	r3, r0
 801ae92:	4619      	mov	r1, r3
 801ae94:	6878      	ldr	r0, [r7, #4]
 801ae96:	f000 fb33 	bl	801b500 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801ae9a:	6878      	ldr	r0, [r7, #4]
 801ae9c:	f7f2 f9f8 	bl	800d290 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801aea0:	4603      	mov	r3, r0
	}
 801aea2:	4618      	mov	r0, r3
 801aea4:	3708      	adds	r7, #8
 801aea6:	46bd      	mov	sp, r7
 801aea8:	bd80      	pop	{r7, pc}

0801aeaa <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj2EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 801aeaa:	b580      	push	{r7, lr}
 801aeac:	b082      	sub	sp, #8
 801aeae:	af00      	add	r7, sp, #0
 801aeb0:	6078      	str	r0, [r7, #4]
 801aeb2:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801aeb4:	687b      	ldr	r3, [r7, #4]
 801aeb6:	4618      	mov	r0, r3
 801aeb8:	f7ef fa3e 	bl	800a338 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801aebc:	6838      	ldr	r0, [r7, #0]
 801aebe:	f7ea fdee 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801aec2:	4603      	mov	r3, r0
 801aec4:	4619      	mov	r1, r3
 801aec6:	6878      	ldr	r0, [r7, #4]
 801aec8:	f000 fb39 	bl	801b53e <_ZSt28__variant_construct_by_indexILj2ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801aecc:	6878      	ldr	r0, [r7, #4]
 801aece:	f7f2 f9fb 	bl	800d2c8 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801aed2:	4603      	mov	r3, r0
	}
 801aed4:	4618      	mov	r0, r3
 801aed6:	3708      	adds	r7, #8
 801aed8:	46bd      	mov	sp, r7
 801aeda:	bd80      	pop	{r7, pc}

0801aedc <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801aedc:	b580      	push	{r7, lr}
 801aede:	b082      	sub	sp, #8
 801aee0:	af00      	add	r7, sp, #0
 801aee2:	6078      	str	r0, [r7, #4]
 801aee4:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801aee6:	687b      	ldr	r3, [r7, #4]
 801aee8:	4618      	mov	r0, r3
 801aeea:	f7ef fa25 	bl	800a338 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801aeee:	6838      	ldr	r0, [r7, #0]
 801aef0:	f7ed fbf1 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801aef4:	4603      	mov	r3, r0
 801aef6:	4619      	mov	r1, r3
 801aef8:	6878      	ldr	r0, [r7, #4]
 801aefa:	f000 fb3f 	bl	801b57c <_ZSt28__variant_construct_by_indexILj3ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801aefe:	6878      	ldr	r0, [r7, #4]
 801af00:	f7f2 f9fe 	bl	800d300 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801af04:	4603      	mov	r3, r0
	}
 801af06:	4618      	mov	r0, r3
 801af08:	3708      	adds	r7, #8
 801af0a:	46bd      	mov	sp, r7
 801af0c:	bd80      	pop	{r7, pc}

0801af0e <_ZNSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 801af0e:	b480      	push	{r7}
 801af10:	b083      	sub	sp, #12
 801af12:	af00      	add	r7, sp, #0
 801af14:	6078      	str	r0, [r7, #4]
 801af16:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 801af18:	687b      	ldr	r3, [r7, #4]
 801af1a:	2200      	movs	r2, #0
 801af1c:	601a      	str	r2, [r3, #0]
	{ }
 801af1e:	687b      	ldr	r3, [r7, #4]
 801af20:	4618      	mov	r0, r3
 801af22:	370c      	adds	r7, #12
 801af24:	46bd      	mov	sp, r7
 801af26:	f85d 7b04 	ldr.w	r7, [sp], #4
 801af2a:	4770      	bx	lr

0801af2c <_ZNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801af2c:	b580      	push	{r7, lr}
 801af2e:	b082      	sub	sp, #8
 801af30:	af00      	add	r7, sp, #0
 801af32:	6078      	str	r0, [r7, #4]
 801af34:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 801af36:	687b      	ldr	r3, [r7, #4]
 801af38:	4611      	mov	r1, r2
 801af3a:	4618      	mov	r0, r3
 801af3c:	f7ff ffe7 	bl	801af0e <_ZNSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801af40:	687b      	ldr	r3, [r7, #4]
 801af42:	4618      	mov	r0, r3
 801af44:	3708      	adds	r7, #8
 801af46:	46bd      	mov	sp, r7
 801af48:	bd80      	pop	{r7, pc}

0801af4a <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 801af4a:	b580      	push	{r7, lr}
 801af4c:	b082      	sub	sp, #8
 801af4e:	af00      	add	r7, sp, #0
 801af50:	6078      	str	r0, [r7, #4]
 801af52:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 801af54:	687b      	ldr	r3, [r7, #4]
 801af56:	4611      	mov	r1, r2
 801af58:	4618      	mov	r0, r3
 801af5a:	f7ff ffe7 	bl	801af2c <_ZNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 801af5e:	687b      	ldr	r3, [r7, #4]
 801af60:	2200      	movs	r2, #0
 801af62:	711a      	strb	r2, [r3, #4]
	{ }
 801af64:	687b      	ldr	r3, [r7, #4]
 801af66:	4618      	mov	r0, r3
 801af68:	3708      	adds	r7, #8
 801af6a:	46bd      	mov	sp, r7
 801af6c:	bd80      	pop	{r7, pc}

0801af6e <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>:
	emplace(_Args&&... __args)
 801af6e:	b580      	push	{r7, lr}
 801af70:	b082      	sub	sp, #8
 801af72:	af00      	add	r7, sp, #0
 801af74:	6078      	str	r0, [r7, #4]
 801af76:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801af78:	687b      	ldr	r3, [r7, #4]
 801af7a:	4618      	mov	r0, r3
 801af7c:	f000 fb1f 	bl	801b5be <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801af80:	6838      	ldr	r0, [r7, #0]
 801af82:	f7f9 fe05 	bl	8014b90 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801af86:	4603      	mov	r3, r0
 801af88:	4619      	mov	r1, r3
 801af8a:	6878      	ldr	r0, [r7, #4]
 801af8c:	f000 fb24 	bl	801b5d8 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP17Primal_expressionP10ExpressionEEJS4_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801af90:	6878      	ldr	r0, [r7, #4]
 801af92:	f7ef fb31 	bl	800a5f8 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801af96:	4603      	mov	r3, r0
	}
 801af98:	4618      	mov	r0, r3
 801af9a:	3708      	adds	r7, #8
 801af9c:	46bd      	mov	sp, r7
 801af9e:	bd80      	pop	{r7, pc}

0801afa0 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801afa0:	b480      	push	{r7}
 801afa2:	b083      	sub	sp, #12
 801afa4:	af00      	add	r7, sp, #0
 801afa6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801afa8:	687b      	ldr	r3, [r7, #4]
 801afaa:	4618      	mov	r0, r3
 801afac:	370c      	adds	r7, #12
 801afae:	46bd      	mov	sp, r7
 801afb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801afb4:	4770      	bx	lr

0801afb6 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>:
	emplace(_Args&&... __args)
 801afb6:	b580      	push	{r7, lr}
 801afb8:	b082      	sub	sp, #8
 801afba:	af00      	add	r7, sp, #0
 801afbc:	6078      	str	r0, [r7, #4]
 801afbe:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801afc0:	687b      	ldr	r3, [r7, #4]
 801afc2:	4618      	mov	r0, r3
 801afc4:	f000 fafb 	bl	801b5be <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801afc8:	6838      	ldr	r0, [r7, #0]
 801afca:	f7ff ffe9 	bl	801afa0 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801afce:	4603      	mov	r3, r0
 801afd0:	4619      	mov	r1, r3
 801afd2:	6878      	ldr	r0, [r7, #4]
 801afd4:	f000 fb1f 	bl	801b616 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP17Primal_expressionP10ExpressionEEJS2_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801afd8:	6878      	ldr	r0, [r7, #4]
 801afda:	f7ef fb4b 	bl	800a674 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801afde:	4603      	mov	r3, r0
	}
 801afe0:	4618      	mov	r0, r3
 801afe2:	3708      	adds	r7, #8
 801afe4:	46bd      	mov	sp, r7
 801afe6:	bd80      	pop	{r7, pc}

0801afe8 <_ZSt4moveIR13mult_operatorEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 801afe8:	b480      	push	{r7}
 801afea:	b083      	sub	sp, #12
 801afec:	af00      	add	r7, sp, #0
 801afee:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801aff0:	687b      	ldr	r3, [r7, #4]
 801aff2:	4618      	mov	r0, r3
 801aff4:	370c      	adds	r7, #12
 801aff6:	46bd      	mov	sp, r7
 801aff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801affc:	4770      	bx	lr

0801affe <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>:
      vector<_Tp, _Alloc>::
 801affe:	b5b0      	push	{r4, r5, r7, lr}
 801b000:	b082      	sub	sp, #8
 801b002:	af00      	add	r7, sp, #0
 801b004:	6078      	str	r0, [r7, #4]
 801b006:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801b008:	687b      	ldr	r3, [r7, #4]
 801b00a:	685a      	ldr	r2, [r3, #4]
 801b00c:	687b      	ldr	r3, [r7, #4]
 801b00e:	689b      	ldr	r3, [r3, #8]
 801b010:	429a      	cmp	r2, r3
 801b012:	d011      	beq.n	801b038 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801b014:	687c      	ldr	r4, [r7, #4]
 801b016:	687b      	ldr	r3, [r7, #4]
 801b018:	685d      	ldr	r5, [r3, #4]
 801b01a:	6838      	ldr	r0, [r7, #0]
 801b01c:	f000 fb1a 	bl	801b654 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b020:	4603      	mov	r3, r0
 801b022:	461a      	mov	r2, r3
 801b024:	4629      	mov	r1, r5
 801b026:	4620      	mov	r0, r4
 801b028:	f000 fb1f 	bl	801b66a <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801b02c:	687b      	ldr	r3, [r7, #4]
 801b02e:	685b      	ldr	r3, [r3, #4]
 801b030:	1c5a      	adds	r2, r3, #1
 801b032:	687b      	ldr	r3, [r7, #4]
 801b034:	605a      	str	r2, [r3, #4]
 801b036:	e00c      	b.n	801b052 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801b038:	6878      	ldr	r0, [r7, #4]
 801b03a:	f000 fb29 	bl	801b690 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>
 801b03e:	4604      	mov	r4, r0
 801b040:	6838      	ldr	r0, [r7, #0]
 801b042:	f000 fb07 	bl	801b654 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b046:	4603      	mov	r3, r0
 801b048:	461a      	mov	r2, r3
 801b04a:	4621      	mov	r1, r4
 801b04c:	6878      	ldr	r0, [r7, #4]
 801b04e:	f000 fb31 	bl	801b6b4 <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
	return back();
 801b052:	6878      	ldr	r0, [r7, #4]
 801b054:	f000 fba8 	bl	801b7a8 <_ZNSt6vectorI13mult_operatorSaIS0_EE4backEv>
 801b058:	4603      	mov	r3, r0
      }
 801b05a:	4618      	mov	r0, r3
 801b05c:	3708      	adds	r7, #8
 801b05e:	46bd      	mov	sp, r7
 801b060:	bdb0      	pop	{r4, r5, r7, pc}

0801b062 <_ZNSaIP16Power_expressionEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 801b062:	b580      	push	{r7, lr}
 801b064:	b082      	sub	sp, #8
 801b066:	af00      	add	r7, sp, #0
 801b068:	6078      	str	r0, [r7, #4]
 801b06a:	6878      	ldr	r0, [r7, #4]
 801b06c:	f000 fbb7 	bl	801b7de <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionEC1Ev>
 801b070:	687b      	ldr	r3, [r7, #4]
 801b072:	4618      	mov	r0, r3
 801b074:	3708      	adds	r7, #8
 801b076:	46bd      	mov	sp, r7
 801b078:	bd80      	pop	{r7, pc}

0801b07a <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801b07a:	b480      	push	{r7}
 801b07c:	b083      	sub	sp, #12
 801b07e:	af00      	add	r7, sp, #0
 801b080:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801b082:	687b      	ldr	r3, [r7, #4]
 801b084:	2200      	movs	r2, #0
 801b086:	601a      	str	r2, [r3, #0]
 801b088:	687b      	ldr	r3, [r7, #4]
 801b08a:	2200      	movs	r2, #0
 801b08c:	605a      	str	r2, [r3, #4]
 801b08e:	687b      	ldr	r3, [r7, #4]
 801b090:	2200      	movs	r2, #0
 801b092:	609a      	str	r2, [r3, #8]
	{ }
 801b094:	687b      	ldr	r3, [r7, #4]
 801b096:	4618      	mov	r0, r3
 801b098:	370c      	adds	r7, #12
 801b09a:	46bd      	mov	sp, r7
 801b09c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b0a0:	4770      	bx	lr

0801b0a2 <_ZNSaI13mult_operatorEC1Ev>:
 801b0a2:	b580      	push	{r7, lr}
 801b0a4:	b082      	sub	sp, #8
 801b0a6:	af00      	add	r7, sp, #0
 801b0a8:	6078      	str	r0, [r7, #4]
 801b0aa:	6878      	ldr	r0, [r7, #4]
 801b0ac:	f000 fba2 	bl	801b7f4 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorEC1Ev>
 801b0b0:	687b      	ldr	r3, [r7, #4]
 801b0b2:	4618      	mov	r0, r3
 801b0b4:	3708      	adds	r7, #8
 801b0b6:	46bd      	mov	sp, r7
 801b0b8:	bd80      	pop	{r7, pc}

0801b0ba <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801b0ba:	b480      	push	{r7}
 801b0bc:	b083      	sub	sp, #12
 801b0be:	af00      	add	r7, sp, #0
 801b0c0:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801b0c2:	687b      	ldr	r3, [r7, #4]
 801b0c4:	2200      	movs	r2, #0
 801b0c6:	601a      	str	r2, [r3, #0]
 801b0c8:	687b      	ldr	r3, [r7, #4]
 801b0ca:	2200      	movs	r2, #0
 801b0cc:	605a      	str	r2, [r3, #4]
 801b0ce:	687b      	ldr	r3, [r7, #4]
 801b0d0:	2200      	movs	r2, #0
 801b0d2:	609a      	str	r2, [r3, #8]
	{ }
 801b0d4:	687b      	ldr	r3, [r7, #4]
 801b0d6:	4618      	mov	r0, r3
 801b0d8:	370c      	adds	r7, #12
 801b0da:	46bd      	mov	sp, r7
 801b0dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b0e0:	4770      	bx	lr

0801b0e2 <_ZSt4moveIRP16Power_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801b0e2:	b480      	push	{r7}
 801b0e4:	b083      	sub	sp, #12
 801b0e6:	af00      	add	r7, sp, #0
 801b0e8:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b0ea:	687b      	ldr	r3, [r7, #4]
 801b0ec:	4618      	mov	r0, r3
 801b0ee:	370c      	adds	r7, #12
 801b0f0:	46bd      	mov	sp, r7
 801b0f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b0f6:	4770      	bx	lr

0801b0f8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801b0f8:	b5b0      	push	{r4, r5, r7, lr}
 801b0fa:	b082      	sub	sp, #8
 801b0fc:	af00      	add	r7, sp, #0
 801b0fe:	6078      	str	r0, [r7, #4]
 801b100:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801b102:	687b      	ldr	r3, [r7, #4]
 801b104:	685a      	ldr	r2, [r3, #4]
 801b106:	687b      	ldr	r3, [r7, #4]
 801b108:	689b      	ldr	r3, [r3, #8]
 801b10a:	429a      	cmp	r2, r3
 801b10c:	d011      	beq.n	801b132 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801b10e:	687c      	ldr	r4, [r7, #4]
 801b110:	687b      	ldr	r3, [r7, #4]
 801b112:	685d      	ldr	r5, [r3, #4]
 801b114:	6838      	ldr	r0, [r7, #0]
 801b116:	f000 fb78 	bl	801b80a <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b11a:	4603      	mov	r3, r0
 801b11c:	461a      	mov	r2, r3
 801b11e:	4629      	mov	r1, r5
 801b120:	4620      	mov	r0, r4
 801b122:	f000 fb7d 	bl	801b820 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801b126:	687b      	ldr	r3, [r7, #4]
 801b128:	685b      	ldr	r3, [r3, #4]
 801b12a:	1d1a      	adds	r2, r3, #4
 801b12c:	687b      	ldr	r3, [r7, #4]
 801b12e:	605a      	str	r2, [r3, #4]
 801b130:	e00c      	b.n	801b14c <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801b132:	6878      	ldr	r0, [r7, #4]
 801b134:	f7ee ff50 	bl	8009fd8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 801b138:	4604      	mov	r4, r0
 801b13a:	6838      	ldr	r0, [r7, #0]
 801b13c:	f000 fb65 	bl	801b80a <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b140:	4603      	mov	r3, r0
 801b142:	461a      	mov	r2, r3
 801b144:	4621      	mov	r1, r4
 801b146:	6878      	ldr	r0, [r7, #4]
 801b148:	f000 fb7e 	bl	801b848 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801b14c:	6878      	ldr	r0, [r7, #4]
 801b14e:	f000 fbf7 	bl	801b940 <_ZNSt6vectorIP16Power_expressionSaIS1_EE4backEv>
 801b152:	4603      	mov	r3, r0
      }
 801b154:	4618      	mov	r0, r3
 801b156:	3708      	adds	r7, #8
 801b158:	46bd      	mov	sp, r7
 801b15a:	bdb0      	pop	{r4, r5, r7, pc}

0801b15c <_ZSt4moveIR12sum_operatorEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 801b15c:	b480      	push	{r7}
 801b15e:	b083      	sub	sp, #12
 801b160:	af00      	add	r7, sp, #0
 801b162:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b164:	687b      	ldr	r3, [r7, #4]
 801b166:	4618      	mov	r0, r3
 801b168:	370c      	adds	r7, #12
 801b16a:	46bd      	mov	sp, r7
 801b16c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b170:	4770      	bx	lr

0801b172 <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>:
      vector<_Tp, _Alloc>::
 801b172:	b5b0      	push	{r4, r5, r7, lr}
 801b174:	b082      	sub	sp, #8
 801b176:	af00      	add	r7, sp, #0
 801b178:	6078      	str	r0, [r7, #4]
 801b17a:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801b17c:	687b      	ldr	r3, [r7, #4]
 801b17e:	685a      	ldr	r2, [r3, #4]
 801b180:	687b      	ldr	r3, [r7, #4]
 801b182:	689b      	ldr	r3, [r3, #8]
 801b184:	429a      	cmp	r2, r3
 801b186:	d011      	beq.n	801b1ac <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801b188:	687c      	ldr	r4, [r7, #4]
 801b18a:	687b      	ldr	r3, [r7, #4]
 801b18c:	685d      	ldr	r5, [r3, #4]
 801b18e:	6838      	ldr	r0, [r7, #0]
 801b190:	f000 fbf1 	bl	801b976 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b194:	4603      	mov	r3, r0
 801b196:	461a      	mov	r2, r3
 801b198:	4629      	mov	r1, r5
 801b19a:	4620      	mov	r0, r4
 801b19c:	f000 fbf6 	bl	801b98c <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801b1a0:	687b      	ldr	r3, [r7, #4]
 801b1a2:	685b      	ldr	r3, [r3, #4]
 801b1a4:	1c5a      	adds	r2, r3, #1
 801b1a6:	687b      	ldr	r3, [r7, #4]
 801b1a8:	605a      	str	r2, [r3, #4]
 801b1aa:	e00c      	b.n	801b1c6 <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801b1ac:	6878      	ldr	r0, [r7, #4]
 801b1ae:	f000 fc00 	bl	801b9b2 <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>
 801b1b2:	4604      	mov	r4, r0
 801b1b4:	6838      	ldr	r0, [r7, #0]
 801b1b6:	f000 fbde 	bl	801b976 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b1ba:	4603      	mov	r3, r0
 801b1bc:	461a      	mov	r2, r3
 801b1be:	4621      	mov	r1, r4
 801b1c0:	6878      	ldr	r0, [r7, #4]
 801b1c2:	f000 fc07 	bl	801b9d4 <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
	return back();
 801b1c6:	6878      	ldr	r0, [r7, #4]
 801b1c8:	f000 fc7e 	bl	801bac8 <_ZNSt6vectorI12sum_operatorSaIS0_EE4backEv>
 801b1cc:	4603      	mov	r3, r0
      }
 801b1ce:	4618      	mov	r0, r3
 801b1d0:	3708      	adds	r7, #8
 801b1d2:	46bd      	mov	sp, r7
 801b1d4:	bdb0      	pop	{r4, r5, r7, pc}

0801b1d6 <_ZNSaIP19Multiply_expressionEC1Ev>:
 801b1d6:	b580      	push	{r7, lr}
 801b1d8:	b082      	sub	sp, #8
 801b1da:	af00      	add	r7, sp, #0
 801b1dc:	6078      	str	r0, [r7, #4]
 801b1de:	6878      	ldr	r0, [r7, #4]
 801b1e0:	f000 fc8d 	bl	801bafe <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionEC1Ev>
 801b1e4:	687b      	ldr	r3, [r7, #4]
 801b1e6:	4618      	mov	r0, r3
 801b1e8:	3708      	adds	r7, #8
 801b1ea:	46bd      	mov	sp, r7
 801b1ec:	bd80      	pop	{r7, pc}

0801b1ee <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801b1ee:	b480      	push	{r7}
 801b1f0:	b083      	sub	sp, #12
 801b1f2:	af00      	add	r7, sp, #0
 801b1f4:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801b1f6:	687b      	ldr	r3, [r7, #4]
 801b1f8:	2200      	movs	r2, #0
 801b1fa:	601a      	str	r2, [r3, #0]
 801b1fc:	687b      	ldr	r3, [r7, #4]
 801b1fe:	2200      	movs	r2, #0
 801b200:	605a      	str	r2, [r3, #4]
 801b202:	687b      	ldr	r3, [r7, #4]
 801b204:	2200      	movs	r2, #0
 801b206:	609a      	str	r2, [r3, #8]
	{ }
 801b208:	687b      	ldr	r3, [r7, #4]
 801b20a:	4618      	mov	r0, r3
 801b20c:	370c      	adds	r7, #12
 801b20e:	46bd      	mov	sp, r7
 801b210:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b214:	4770      	bx	lr

0801b216 <_ZNSaI12sum_operatorEC1Ev>:
 801b216:	b580      	push	{r7, lr}
 801b218:	b082      	sub	sp, #8
 801b21a:	af00      	add	r7, sp, #0
 801b21c:	6078      	str	r0, [r7, #4]
 801b21e:	6878      	ldr	r0, [r7, #4]
 801b220:	f000 fc78 	bl	801bb14 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorEC1Ev>
 801b224:	687b      	ldr	r3, [r7, #4]
 801b226:	4618      	mov	r0, r3
 801b228:	3708      	adds	r7, #8
 801b22a:	46bd      	mov	sp, r7
 801b22c:	bd80      	pop	{r7, pc}

0801b22e <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801b22e:	b480      	push	{r7}
 801b230:	b083      	sub	sp, #12
 801b232:	af00      	add	r7, sp, #0
 801b234:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801b236:	687b      	ldr	r3, [r7, #4]
 801b238:	2200      	movs	r2, #0
 801b23a:	601a      	str	r2, [r3, #0]
 801b23c:	687b      	ldr	r3, [r7, #4]
 801b23e:	2200      	movs	r2, #0
 801b240:	605a      	str	r2, [r3, #4]
 801b242:	687b      	ldr	r3, [r7, #4]
 801b244:	2200      	movs	r2, #0
 801b246:	609a      	str	r2, [r3, #8]
	{ }
 801b248:	687b      	ldr	r3, [r7, #4]
 801b24a:	4618      	mov	r0, r3
 801b24c:	370c      	adds	r7, #12
 801b24e:	46bd      	mov	sp, r7
 801b250:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b254:	4770      	bx	lr

0801b256 <_ZSt4moveIRP19Multiply_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801b256:	b480      	push	{r7}
 801b258:	b083      	sub	sp, #12
 801b25a:	af00      	add	r7, sp, #0
 801b25c:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b25e:	687b      	ldr	r3, [r7, #4]
 801b260:	4618      	mov	r0, r3
 801b262:	370c      	adds	r7, #12
 801b264:	46bd      	mov	sp, r7
 801b266:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b26a:	4770      	bx	lr

0801b26c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801b26c:	b5b0      	push	{r4, r5, r7, lr}
 801b26e:	b082      	sub	sp, #8
 801b270:	af00      	add	r7, sp, #0
 801b272:	6078      	str	r0, [r7, #4]
 801b274:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801b276:	687b      	ldr	r3, [r7, #4]
 801b278:	685a      	ldr	r2, [r3, #4]
 801b27a:	687b      	ldr	r3, [r7, #4]
 801b27c:	689b      	ldr	r3, [r3, #8]
 801b27e:	429a      	cmp	r2, r3
 801b280:	d011      	beq.n	801b2a6 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801b282:	687c      	ldr	r4, [r7, #4]
 801b284:	687b      	ldr	r3, [r7, #4]
 801b286:	685d      	ldr	r5, [r3, #4]
 801b288:	6838      	ldr	r0, [r7, #0]
 801b28a:	f000 fc4e 	bl	801bb2a <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b28e:	4603      	mov	r3, r0
 801b290:	461a      	mov	r2, r3
 801b292:	4629      	mov	r1, r5
 801b294:	4620      	mov	r0, r4
 801b296:	f000 fc53 	bl	801bb40 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801b29a:	687b      	ldr	r3, [r7, #4]
 801b29c:	685b      	ldr	r3, [r3, #4]
 801b29e:	1d1a      	adds	r2, r3, #4
 801b2a0:	687b      	ldr	r3, [r7, #4]
 801b2a2:	605a      	str	r2, [r3, #4]
 801b2a4:	e00c      	b.n	801b2c0 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801b2a6:	6878      	ldr	r0, [r7, #4]
 801b2a8:	f7ee ff21 	bl	800a0ee <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 801b2ac:	4604      	mov	r4, r0
 801b2ae:	6838      	ldr	r0, [r7, #0]
 801b2b0:	f000 fc3b 	bl	801bb2a <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b2b4:	4603      	mov	r3, r0
 801b2b6:	461a      	mov	r2, r3
 801b2b8:	4621      	mov	r1, r4
 801b2ba:	6878      	ldr	r0, [r7, #4]
 801b2bc:	f000 fc54 	bl	801bb68 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801b2c0:	6878      	ldr	r0, [r7, #4]
 801b2c2:	f000 fccd 	bl	801bc60 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE4backEv>
 801b2c6:	4603      	mov	r3, r0
      }
 801b2c8:	4618      	mov	r0, r3
 801b2ca:	3708      	adds	r7, #8
 801b2cc:	46bd      	mov	sp, r7
 801b2ce:	bdb0      	pop	{r4, r5, r7, pc}

0801b2d0 <_ZNSaIP18Compare_expressionEC1Ev>:
 801b2d0:	b580      	push	{r7, lr}
 801b2d2:	b082      	sub	sp, #8
 801b2d4:	af00      	add	r7, sp, #0
 801b2d6:	6078      	str	r0, [r7, #4]
 801b2d8:	6878      	ldr	r0, [r7, #4]
 801b2da:	f000 fcdc 	bl	801bc96 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionEC1Ev>
 801b2de:	687b      	ldr	r3, [r7, #4]
 801b2e0:	4618      	mov	r0, r3
 801b2e2:	3708      	adds	r7, #8
 801b2e4:	46bd      	mov	sp, r7
 801b2e6:	bd80      	pop	{r7, pc}

0801b2e8 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801b2e8:	b480      	push	{r7}
 801b2ea:	b083      	sub	sp, #12
 801b2ec:	af00      	add	r7, sp, #0
 801b2ee:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801b2f0:	687b      	ldr	r3, [r7, #4]
 801b2f2:	2200      	movs	r2, #0
 801b2f4:	601a      	str	r2, [r3, #0]
 801b2f6:	687b      	ldr	r3, [r7, #4]
 801b2f8:	2200      	movs	r2, #0
 801b2fa:	605a      	str	r2, [r3, #4]
 801b2fc:	687b      	ldr	r3, [r7, #4]
 801b2fe:	2200      	movs	r2, #0
 801b300:	609a      	str	r2, [r3, #8]
	{ }
 801b302:	687b      	ldr	r3, [r7, #4]
 801b304:	4618      	mov	r0, r3
 801b306:	370c      	adds	r7, #12
 801b308:	46bd      	mov	sp, r7
 801b30a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b30e:	4770      	bx	lr

0801b310 <_ZSt4moveIRP18Compare_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801b310:	b480      	push	{r7}
 801b312:	b083      	sub	sp, #12
 801b314:	af00      	add	r7, sp, #0
 801b316:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b318:	687b      	ldr	r3, [r7, #4]
 801b31a:	4618      	mov	r0, r3
 801b31c:	370c      	adds	r7, #12
 801b31e:	46bd      	mov	sp, r7
 801b320:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b324:	4770      	bx	lr

0801b326 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801b326:	b5b0      	push	{r4, r5, r7, lr}
 801b328:	b082      	sub	sp, #8
 801b32a:	af00      	add	r7, sp, #0
 801b32c:	6078      	str	r0, [r7, #4]
 801b32e:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801b330:	687b      	ldr	r3, [r7, #4]
 801b332:	685a      	ldr	r2, [r3, #4]
 801b334:	687b      	ldr	r3, [r7, #4]
 801b336:	689b      	ldr	r3, [r3, #8]
 801b338:	429a      	cmp	r2, r3
 801b33a:	d011      	beq.n	801b360 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801b33c:	687c      	ldr	r4, [r7, #4]
 801b33e:	687b      	ldr	r3, [r7, #4]
 801b340:	685d      	ldr	r5, [r3, #4]
 801b342:	6838      	ldr	r0, [r7, #0]
 801b344:	f000 fcb2 	bl	801bcac <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b348:	4603      	mov	r3, r0
 801b34a:	461a      	mov	r2, r3
 801b34c:	4629      	mov	r1, r5
 801b34e:	4620      	mov	r0, r4
 801b350:	f000 fcb7 	bl	801bcc2 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801b354:	687b      	ldr	r3, [r7, #4]
 801b356:	685b      	ldr	r3, [r3, #4]
 801b358:	1d1a      	adds	r2, r3, #4
 801b35a:	687b      	ldr	r3, [r7, #4]
 801b35c:	605a      	str	r2, [r3, #4]
 801b35e:	e00c      	b.n	801b37a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801b360:	6878      	ldr	r0, [r7, #4]
 801b362:	f7ee ff34 	bl	800a1ce <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 801b366:	4604      	mov	r4, r0
 801b368:	6838      	ldr	r0, [r7, #0]
 801b36a:	f000 fc9f 	bl	801bcac <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b36e:	4603      	mov	r3, r0
 801b370:	461a      	mov	r2, r3
 801b372:	4621      	mov	r1, r4
 801b374:	6878      	ldr	r0, [r7, #4]
 801b376:	f000 fcb7 	bl	801bce8 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801b37a:	6878      	ldr	r0, [r7, #4]
 801b37c:	f000 fd30 	bl	801bde0 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE4backEv>
 801b380:	4603      	mov	r3, r0
      }
 801b382:	4618      	mov	r0, r3
 801b384:	3708      	adds	r7, #8
 801b386:	46bd      	mov	sp, r7
 801b388:	bdb0      	pop	{r4, r5, r7, pc}

0801b38a <_ZNSaIP14And_expressionEC1Ev>:
 801b38a:	b580      	push	{r7, lr}
 801b38c:	b082      	sub	sp, #8
 801b38e:	af00      	add	r7, sp, #0
 801b390:	6078      	str	r0, [r7, #4]
 801b392:	6878      	ldr	r0, [r7, #4]
 801b394:	f000 fd3f 	bl	801be16 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionEC1Ev>
 801b398:	687b      	ldr	r3, [r7, #4]
 801b39a:	4618      	mov	r0, r3
 801b39c:	3708      	adds	r7, #8
 801b39e:	46bd      	mov	sp, r7
 801b3a0:	bd80      	pop	{r7, pc}

0801b3a2 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801b3a2:	b480      	push	{r7}
 801b3a4:	b083      	sub	sp, #12
 801b3a6:	af00      	add	r7, sp, #0
 801b3a8:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801b3aa:	687b      	ldr	r3, [r7, #4]
 801b3ac:	2200      	movs	r2, #0
 801b3ae:	601a      	str	r2, [r3, #0]
 801b3b0:	687b      	ldr	r3, [r7, #4]
 801b3b2:	2200      	movs	r2, #0
 801b3b4:	605a      	str	r2, [r3, #4]
 801b3b6:	687b      	ldr	r3, [r7, #4]
 801b3b8:	2200      	movs	r2, #0
 801b3ba:	609a      	str	r2, [r3, #8]
	{ }
 801b3bc:	687b      	ldr	r3, [r7, #4]
 801b3be:	4618      	mov	r0, r3
 801b3c0:	370c      	adds	r7, #12
 801b3c2:	46bd      	mov	sp, r7
 801b3c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b3c8:	4770      	bx	lr

0801b3ca <_ZSt4moveIRP14And_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801b3ca:	b480      	push	{r7}
 801b3cc:	b083      	sub	sp, #12
 801b3ce:	af00      	add	r7, sp, #0
 801b3d0:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b3d2:	687b      	ldr	r3, [r7, #4]
 801b3d4:	4618      	mov	r0, r3
 801b3d6:	370c      	adds	r7, #12
 801b3d8:	46bd      	mov	sp, r7
 801b3da:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b3de:	4770      	bx	lr

0801b3e0 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801b3e0:	b5b0      	push	{r4, r5, r7, lr}
 801b3e2:	b082      	sub	sp, #8
 801b3e4:	af00      	add	r7, sp, #0
 801b3e6:	6078      	str	r0, [r7, #4]
 801b3e8:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801b3ea:	687b      	ldr	r3, [r7, #4]
 801b3ec:	685a      	ldr	r2, [r3, #4]
 801b3ee:	687b      	ldr	r3, [r7, #4]
 801b3f0:	689b      	ldr	r3, [r3, #8]
 801b3f2:	429a      	cmp	r2, r3
 801b3f4:	d011      	beq.n	801b41a <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801b3f6:	687c      	ldr	r4, [r7, #4]
 801b3f8:	687b      	ldr	r3, [r7, #4]
 801b3fa:	685d      	ldr	r5, [r3, #4]
 801b3fc:	6838      	ldr	r0, [r7, #0]
 801b3fe:	f000 fd15 	bl	801be2c <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b402:	4603      	mov	r3, r0
 801b404:	461a      	mov	r2, r3
 801b406:	4629      	mov	r1, r5
 801b408:	4620      	mov	r0, r4
 801b40a:	f000 fd1a 	bl	801be42 <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801b40e:	687b      	ldr	r3, [r7, #4]
 801b410:	685b      	ldr	r3, [r3, #4]
 801b412:	1d1a      	adds	r2, r3, #4
 801b414:	687b      	ldr	r3, [r7, #4]
 801b416:	605a      	str	r2, [r3, #4]
 801b418:	e00c      	b.n	801b434 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801b41a:	6878      	ldr	r0, [r7, #4]
 801b41c:	f7ee ff47 	bl	800a2ae <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 801b420:	4604      	mov	r4, r0
 801b422:	6838      	ldr	r0, [r7, #0]
 801b424:	f000 fd02 	bl	801be2c <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b428:	4603      	mov	r3, r0
 801b42a:	461a      	mov	r2, r3
 801b42c:	4621      	mov	r1, r4
 801b42e:	6878      	ldr	r0, [r7, #4]
 801b430:	f000 fd1a 	bl	801be68 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801b434:	6878      	ldr	r0, [r7, #4]
 801b436:	f000 fd93 	bl	801bf60 <_ZNSt6vectorIP14And_expressionSaIS1_EE4backEv>
 801b43a:	4603      	mov	r3, r0
      }
 801b43c:	4618      	mov	r0, r3
 801b43e:	3708      	adds	r7, #8
 801b440:	46bd      	mov	sp, r7
 801b442:	bdb0      	pop	{r4, r5, r7, pc}

0801b444 <_ZSt28__variant_construct_by_indexILj5ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b444:	b590      	push	{r4, r7, lr}
 801b446:	b085      	sub	sp, #20
 801b448:	af00      	add	r7, sp, #0
 801b44a:	6078      	str	r0, [r7, #4]
 801b44c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b44e:	687b      	ldr	r3, [r7, #4]
 801b450:	2205      	movs	r2, #5
 801b452:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b454:	6878      	ldr	r0, [r7, #4]
 801b456:	f7ef f86e 	bl	800a536 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801b45a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b45c:	6838      	ldr	r0, [r7, #0]
 801b45e:	f7f9 f99f 	bl	80147a0 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801b462:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b464:	681c      	ldr	r4, [r3, #0]
 801b466:	68f8      	ldr	r0, [r7, #12]
 801b468:	f7fa f8a0 	bl	80155ac <_ZSt9addressofIP13Function_callEPT_RS2_>
 801b46c:	4603      	mov	r3, r0
 801b46e:	4619      	mov	r1, r3
 801b470:	2004      	movs	r0, #4
 801b472:	f7e5 fdf2 	bl	800105a <_ZnwjPv>
 801b476:	4603      	mov	r3, r0
 801b478:	601c      	str	r4, [r3, #0]
    }
 801b47a:	bf00      	nop
 801b47c:	3714      	adds	r7, #20
 801b47e:	46bd      	mov	sp, r7
 801b480:	bd90      	pop	{r4, r7, pc}

0801b482 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS8_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b482:	b590      	push	{r4, r7, lr}
 801b484:	b085      	sub	sp, #20
 801b486:	af00      	add	r7, sp, #0
 801b488:	6078      	str	r0, [r7, #4]
 801b48a:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b48c:	687b      	ldr	r3, [r7, #4]
 801b48e:	2204      	movs	r2, #4
 801b490:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b492:	6878      	ldr	r0, [r7, #4]
 801b494:	f7ee ffb7 	bl	800a406 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801b498:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b49a:	6838      	ldr	r0, [r7, #0]
 801b49c:	f7ff fc7f 	bl	801ad9e <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801b4a0:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b4a2:	681c      	ldr	r4, [r3, #0]
 801b4a4:	68f8      	ldr	r0, [r7, #12]
 801b4a6:	f000 fd76 	bl	801bf96 <_ZSt9addressofIP8VariableEPT_RS2_>
 801b4aa:	4603      	mov	r3, r0
 801b4ac:	4619      	mov	r1, r3
 801b4ae:	2004      	movs	r0, #4
 801b4b0:	f7e5 fdd3 	bl	800105a <_ZnwjPv>
 801b4b4:	4603      	mov	r3, r0
 801b4b6:	601c      	str	r4, [r3, #0]
    }
 801b4b8:	bf00      	nop
 801b4ba:	3714      	adds	r7, #20
 801b4bc:	46bd      	mov	sp, r7
 801b4be:	bd90      	pop	{r4, r7, pc}

0801b4c0 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b4c0:	b590      	push	{r4, r7, lr}
 801b4c2:	b085      	sub	sp, #20
 801b4c4:	af00      	add	r7, sp, #0
 801b4c6:	6078      	str	r0, [r7, #4]
 801b4c8:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b4ca:	687b      	ldr	r3, [r7, #4]
 801b4cc:	2200      	movs	r2, #0
 801b4ce:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b4d0:	6878      	ldr	r0, [r7, #4]
 801b4d2:	f7ef fae5 	bl	800aaa0 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801b4d6:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b4d8:	6838      	ldr	r0, [r7, #0]
 801b4da:	f7ed f8d1 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801b4de:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b4e0:	781c      	ldrb	r4, [r3, #0]
 801b4e2:	68f8      	ldr	r0, [r7, #12]
 801b4e4:	f7ed fab8 	bl	8008a58 <_ZSt9addressofIbEPT_RS0_>
 801b4e8:	4603      	mov	r3, r0
 801b4ea:	4619      	mov	r1, r3
 801b4ec:	2001      	movs	r0, #1
 801b4ee:	f7e5 fdb4 	bl	800105a <_ZnwjPv>
 801b4f2:	4603      	mov	r3, r0
 801b4f4:	4622      	mov	r2, r4
 801b4f6:	701a      	strb	r2, [r3, #0]
    }
 801b4f8:	bf00      	nop
 801b4fa:	3714      	adds	r7, #20
 801b4fc:	46bd      	mov	sp, r7
 801b4fe:	bd90      	pop	{r4, r7, pc}

0801b500 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b500:	b590      	push	{r4, r7, lr}
 801b502:	b085      	sub	sp, #20
 801b504:	af00      	add	r7, sp, #0
 801b506:	6078      	str	r0, [r7, #4]
 801b508:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b50a:	687b      	ldr	r3, [r7, #4]
 801b50c:	2201      	movs	r2, #1
 801b50e:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b510:	6878      	ldr	r0, [r7, #4]
 801b512:	f7ef fb4f 	bl	800abb4 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801b516:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b518:	6838      	ldr	r0, [r7, #0]
 801b51a:	f7ea fa9e 	bl	8005a5a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801b51e:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b520:	681c      	ldr	r4, [r3, #0]
 801b522:	68f8      	ldr	r0, [r7, #12]
 801b524:	f7ed fa80 	bl	8008a28 <_ZSt9addressofIiEPT_RS0_>
 801b528:	4603      	mov	r3, r0
 801b52a:	4619      	mov	r1, r3
 801b52c:	2004      	movs	r0, #4
 801b52e:	f7e5 fd94 	bl	800105a <_ZnwjPv>
 801b532:	4603      	mov	r3, r0
 801b534:	601c      	str	r4, [r3, #0]
    }
 801b536:	bf00      	nop
 801b538:	3714      	adds	r7, #20
 801b53a:	46bd      	mov	sp, r7
 801b53c:	bd90      	pop	{r4, r7, pc}

0801b53e <_ZSt28__variant_construct_by_indexILj2ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b53e:	b590      	push	{r4, r7, lr}
 801b540:	b085      	sub	sp, #20
 801b542:	af00      	add	r7, sp, #0
 801b544:	6078      	str	r0, [r7, #4]
 801b546:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b548:	687b      	ldr	r3, [r7, #4]
 801b54a:	2202      	movs	r2, #2
 801b54c:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b54e:	6878      	ldr	r0, [r7, #4]
 801b550:	f7ef fbcc 	bl	800acec <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801b554:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b556:	6838      	ldr	r0, [r7, #0]
 801b558:	f7ea faa1 	bl	8005a9e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801b55c:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b55e:	681c      	ldr	r4, [r3, #0]
 801b560:	68f8      	ldr	r0, [r7, #12]
 801b562:	f7ed fa6d 	bl	8008a40 <_ZSt9addressofIfEPT_RS0_>
 801b566:	4603      	mov	r3, r0
 801b568:	4619      	mov	r1, r3
 801b56a:	2004      	movs	r0, #4
 801b56c:	f7e5 fd75 	bl	800105a <_ZnwjPv>
 801b570:	4603      	mov	r3, r0
 801b572:	601c      	str	r4, [r3, #0]
    }
 801b574:	bf00      	nop
 801b576:	3714      	adds	r7, #20
 801b578:	46bd      	mov	sp, r7
 801b57a:	bd90      	pop	{r4, r7, pc}

0801b57c <_ZSt28__variant_construct_by_indexILj3ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b57c:	b590      	push	{r4, r7, lr}
 801b57e:	b085      	sub	sp, #20
 801b580:	af00      	add	r7, sp, #0
 801b582:	6078      	str	r0, [r7, #4]
 801b584:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b586:	687b      	ldr	r3, [r7, #4]
 801b588:	2203      	movs	r2, #3
 801b58a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b58c:	6878      	ldr	r0, [r7, #4]
 801b58e:	f7ef fc5b 	bl	800ae48 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801b592:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b594:	6838      	ldr	r0, [r7, #0]
 801b596:	f7ed f89e 	bl	80086d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801b59a:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 801b59c:	68f8      	ldr	r0, [r7, #12]
 801b59e:	f7ed fa67 	bl	8008a70 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 801b5a2:	4603      	mov	r3, r0
 801b5a4:	4619      	mov	r1, r3
 801b5a6:	2018      	movs	r0, #24
 801b5a8:	f7e5 fd57 	bl	800105a <_ZnwjPv>
 801b5ac:	4603      	mov	r3, r0
 801b5ae:	4621      	mov	r1, r4
 801b5b0:	4618      	mov	r0, r3
 801b5b2:	f007 f9fc 	bl	80229ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 801b5b6:	bf00      	nop
 801b5b8:	3714      	adds	r7, #20
 801b5ba:	46bd      	mov	sp, r7
 801b5bc:	bd90      	pop	{r4, r7, pc}

0801b5be <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>:
      void _M_reset()
 801b5be:	b480      	push	{r7}
 801b5c0:	b083      	sub	sp, #12
 801b5c2:	af00      	add	r7, sp, #0
 801b5c4:	6078      	str	r0, [r7, #4]
      { _M_index = variant_npos; }
 801b5c6:	687b      	ldr	r3, [r7, #4]
 801b5c8:	22ff      	movs	r2, #255	; 0xff
 801b5ca:	711a      	strb	r2, [r3, #4]
 801b5cc:	bf00      	nop
 801b5ce:	370c      	adds	r7, #12
 801b5d0:	46bd      	mov	sp, r7
 801b5d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b5d6:	4770      	bx	lr

0801b5d8 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP17Primal_expressionP10ExpressionEEJS4_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b5d8:	b590      	push	{r4, r7, lr}
 801b5da:	b085      	sub	sp, #20
 801b5dc:	af00      	add	r7, sp, #0
 801b5de:	6078      	str	r0, [r7, #4]
 801b5e0:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b5e2:	687b      	ldr	r3, [r7, #4]
 801b5e4:	2201      	movs	r2, #1
 801b5e6:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b5e8:	6878      	ldr	r0, [r7, #4]
 801b5ea:	f7ee fff4 	bl	800a5d6 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 801b5ee:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b5f0:	6838      	ldr	r0, [r7, #0]
 801b5f2:	f7f9 facd 	bl	8014b90 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b5f6:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b5f8:	681c      	ldr	r4, [r3, #0]
 801b5fa:	68f8      	ldr	r0, [r7, #12]
 801b5fc:	f000 fcd7 	bl	801bfae <_ZSt9addressofIP10ExpressionEPT_RS2_>
 801b600:	4603      	mov	r3, r0
 801b602:	4619      	mov	r1, r3
 801b604:	2004      	movs	r0, #4
 801b606:	f7e5 fd28 	bl	800105a <_ZnwjPv>
 801b60a:	4603      	mov	r3, r0
 801b60c:	601c      	str	r4, [r3, #0]
    }
 801b60e:	bf00      	nop
 801b610:	3714      	adds	r7, #20
 801b612:	46bd      	mov	sp, r7
 801b614:	bd90      	pop	{r4, r7, pc}

0801b616 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP17Primal_expressionP10ExpressionEEJS2_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b616:	b590      	push	{r4, r7, lr}
 801b618:	b085      	sub	sp, #20
 801b61a:	af00      	add	r7, sp, #0
 801b61c:	6078      	str	r0, [r7, #4]
 801b61e:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b620:	687b      	ldr	r3, [r7, #4]
 801b622:	2200      	movs	r2, #0
 801b624:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b626:	6878      	ldr	r0, [r7, #4]
 801b628:	f7ef f813 	bl	800a652 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 801b62c:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b62e:	6838      	ldr	r0, [r7, #0]
 801b630:	f7ff fcb6 	bl	801afa0 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b634:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b636:	681c      	ldr	r4, [r3, #0]
 801b638:	68f8      	ldr	r0, [r7, #12]
 801b63a:	f000 fcc4 	bl	801bfc6 <_ZSt9addressofIP17Primal_expressionEPT_RS2_>
 801b63e:	4603      	mov	r3, r0
 801b640:	4619      	mov	r1, r3
 801b642:	2004      	movs	r0, #4
 801b644:	f7e5 fd09 	bl	800105a <_ZnwjPv>
 801b648:	4603      	mov	r3, r0
 801b64a:	601c      	str	r4, [r3, #0]
    }
 801b64c:	bf00      	nop
 801b64e:	3714      	adds	r7, #20
 801b650:	46bd      	mov	sp, r7
 801b652:	bd90      	pop	{r4, r7, pc}

0801b654 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801b654:	b480      	push	{r7}
 801b656:	b083      	sub	sp, #12
 801b658:	af00      	add	r7, sp, #0
 801b65a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801b65c:	687b      	ldr	r3, [r7, #4]
 801b65e:	4618      	mov	r0, r3
 801b660:	370c      	adds	r7, #12
 801b662:	46bd      	mov	sp, r7
 801b664:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b668:	4770      	bx	lr

0801b66a <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801b66a:	b580      	push	{r7, lr}
 801b66c:	b084      	sub	sp, #16
 801b66e:	af00      	add	r7, sp, #0
 801b670:	60f8      	str	r0, [r7, #12]
 801b672:	60b9      	str	r1, [r7, #8]
 801b674:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801b676:	6878      	ldr	r0, [r7, #4]
 801b678:	f7ff ffec 	bl	801b654 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b67c:	4603      	mov	r3, r0
 801b67e:	461a      	mov	r2, r3
 801b680:	68b9      	ldr	r1, [r7, #8]
 801b682:	68f8      	ldr	r0, [r7, #12]
 801b684:	f000 fcab 	bl	801bfde <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>
 801b688:	bf00      	nop
 801b68a:	3710      	adds	r7, #16
 801b68c:	46bd      	mov	sp, r7
 801b68e:	bd80      	pop	{r7, pc}

0801b690 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801b690:	b580      	push	{r7, lr}
 801b692:	b084      	sub	sp, #16
 801b694:	af00      	add	r7, sp, #0
 801b696:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 801b698:	687b      	ldr	r3, [r7, #4]
 801b69a:	1d1a      	adds	r2, r3, #4
 801b69c:	f107 030c 	add.w	r3, r7, #12
 801b6a0:	4611      	mov	r1, r2
 801b6a2:	4618      	mov	r0, r3
 801b6a4:	f000 fcb2 	bl	801c00c <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801b6a8:	68fb      	ldr	r3, [r7, #12]
 801b6aa:	4618      	mov	r0, r3
 801b6ac:	3710      	adds	r7, #16
 801b6ae:	46bd      	mov	sp, r7
 801b6b0:	bd80      	pop	{r7, pc}
	...

0801b6b4 <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801b6b4:	b5b0      	push	{r4, r5, r7, lr}
 801b6b6:	b08c      	sub	sp, #48	; 0x30
 801b6b8:	af00      	add	r7, sp, #0
 801b6ba:	60f8      	str	r0, [r7, #12]
 801b6bc:	60b9      	str	r1, [r7, #8]
 801b6be:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801b6c0:	4a38      	ldr	r2, [pc, #224]	; (801b7a4 <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xf0>)
 801b6c2:	2101      	movs	r1, #1
 801b6c4:	68f8      	ldr	r0, [r7, #12]
 801b6c6:	f000 fcb1 	bl	801c02c <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc>
 801b6ca:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801b6cc:	68fb      	ldr	r3, [r7, #12]
 801b6ce:	681b      	ldr	r3, [r3, #0]
 801b6d0:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801b6d2:	68fb      	ldr	r3, [r7, #12]
 801b6d4:	685b      	ldr	r3, [r3, #4]
 801b6d6:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801b6d8:	68f8      	ldr	r0, [r7, #12]
 801b6da:	f000 fcee 	bl	801c0ba <_ZNSt6vectorI13mult_operatorSaIS0_EE5beginEv>
 801b6de:	4603      	mov	r3, r0
 801b6e0:	617b      	str	r3, [r7, #20]
 801b6e2:	f107 0214 	add.w	r2, r7, #20
 801b6e6:	f107 0308 	add.w	r3, r7, #8
 801b6ea:	4611      	mov	r1, r2
 801b6ec:	4618      	mov	r0, r3
 801b6ee:	f000 fcf4 	bl	801c0da <_ZN9__gnu_cxxmiIP13mult_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
 801b6f2:	4603      	mov	r3, r0
 801b6f4:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801b6f6:	68fb      	ldr	r3, [r7, #12]
 801b6f8:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801b6fa:	4618      	mov	r0, r3
 801b6fc:	f000 fd01 	bl	801c102 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj>
 801b700:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801b702:	69fb      	ldr	r3, [r7, #28]
 801b704:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801b706:	68fc      	ldr	r4, [r7, #12]
 801b708:	69fa      	ldr	r2, [r7, #28]
 801b70a:	6a3b      	ldr	r3, [r7, #32]
 801b70c:	18d5      	adds	r5, r2, r3
 801b70e:	6878      	ldr	r0, [r7, #4]
 801b710:	f7ff ffa0 	bl	801b654 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b714:	4603      	mov	r3, r0
 801b716:	461a      	mov	r2, r3
 801b718:	4629      	mov	r1, r5
 801b71a:	4620      	mov	r0, r4
 801b71c:	f7ff ffa5 	bl	801b66a <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
 801b720:	2300      	movs	r3, #0
 801b722:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801b724:	f107 0308 	add.w	r3, r7, #8
 801b728:	4618      	mov	r0, r3
 801b72a:	f000 fd12 	bl	801c152 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801b72e:	4603      	mov	r3, r0
 801b730:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801b732:	68fb      	ldr	r3, [r7, #12]
 801b734:	4618      	mov	r0, r3
 801b736:	f7ef f81b 	bl	800a770 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801b73a:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801b73c:	69fa      	ldr	r2, [r7, #28]
 801b73e:	4621      	mov	r1, r4
 801b740:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801b742:	f000 fcf2 	bl	801c12a <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801b746:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801b748:	69bb      	ldr	r3, [r7, #24]
 801b74a:	3301      	adds	r3, #1
 801b74c:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801b74e:	f107 0308 	add.w	r3, r7, #8
 801b752:	4618      	mov	r0, r3
 801b754:	f000 fcfd 	bl	801c152 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801b758:	4603      	mov	r3, r0
 801b75a:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801b75c:	68fb      	ldr	r3, [r7, #12]
 801b75e:	4618      	mov	r0, r3
 801b760:	f7ef f806 	bl	800a770 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801b764:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801b766:	69ba      	ldr	r2, [r7, #24]
 801b768:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801b76a:	4620      	mov	r0, r4
 801b76c:	f000 fcdd 	bl	801c12a <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801b770:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801b772:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801b774:	68fb      	ldr	r3, [r7, #12]
 801b776:	689a      	ldr	r2, [r3, #8]
 801b778:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b77a:	1ad3      	subs	r3, r2, r3
      _M_deallocate(__old_start,
 801b77c:	461a      	mov	r2, r3
 801b77e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801b780:	f7ef fd85 	bl	800b28e <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>
      this->_M_impl._M_start = __new_start;
 801b784:	68fb      	ldr	r3, [r7, #12]
 801b786:	69fa      	ldr	r2, [r7, #28]
 801b788:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801b78a:	68fb      	ldr	r3, [r7, #12]
 801b78c:	69ba      	ldr	r2, [r7, #24]
 801b78e:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801b790:	69fa      	ldr	r2, [r7, #28]
 801b792:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801b794:	441a      	add	r2, r3
 801b796:	68fb      	ldr	r3, [r7, #12]
 801b798:	609a      	str	r2, [r3, #8]
    }
 801b79a:	bf00      	nop
 801b79c:	3730      	adds	r7, #48	; 0x30
 801b79e:	46bd      	mov	sp, r7
 801b7a0:	bdb0      	pop	{r4, r5, r7, pc}
 801b7a2:	bf00      	nop
 801b7a4:	08027b8c 	.word	0x08027b8c

0801b7a8 <_ZNSt6vectorI13mult_operatorSaIS0_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801b7a8:	b580      	push	{r7, lr}
 801b7aa:	b084      	sub	sp, #16
 801b7ac:	af00      	add	r7, sp, #0
 801b7ae:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801b7b0:	6878      	ldr	r0, [r7, #4]
 801b7b2:	f7ff ff6d 	bl	801b690 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>
 801b7b6:	4603      	mov	r3, r0
 801b7b8:	60fb      	str	r3, [r7, #12]
 801b7ba:	f107 030c 	add.w	r3, r7, #12
 801b7be:	2101      	movs	r1, #1
 801b7c0:	4618      	mov	r0, r3
 801b7c2:	f000 fcd1 	bl	801c168 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEmiEi>
 801b7c6:	4603      	mov	r3, r0
 801b7c8:	60bb      	str	r3, [r7, #8]
 801b7ca:	f107 0308 	add.w	r3, r7, #8
 801b7ce:	4618      	mov	r0, r3
 801b7d0:	f000 fce2 	bl	801c198 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEdeEv>
 801b7d4:	4603      	mov	r3, r0
      }
 801b7d6:	4618      	mov	r0, r3
 801b7d8:	3710      	adds	r7, #16
 801b7da:	46bd      	mov	sp, r7
 801b7dc:	bd80      	pop	{r7, pc}

0801b7de <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801b7de:	b480      	push	{r7}
 801b7e0:	b083      	sub	sp, #12
 801b7e2:	af00      	add	r7, sp, #0
 801b7e4:	6078      	str	r0, [r7, #4]
 801b7e6:	687b      	ldr	r3, [r7, #4]
 801b7e8:	4618      	mov	r0, r3
 801b7ea:	370c      	adds	r7, #12
 801b7ec:	46bd      	mov	sp, r7
 801b7ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b7f2:	4770      	bx	lr

0801b7f4 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorEC1Ev>:
 801b7f4:	b480      	push	{r7}
 801b7f6:	b083      	sub	sp, #12
 801b7f8:	af00      	add	r7, sp, #0
 801b7fa:	6078      	str	r0, [r7, #4]
 801b7fc:	687b      	ldr	r3, [r7, #4]
 801b7fe:	4618      	mov	r0, r3
 801b800:	370c      	adds	r7, #12
 801b802:	46bd      	mov	sp, r7
 801b804:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b808:	4770      	bx	lr

0801b80a <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801b80a:	b480      	push	{r7}
 801b80c:	b083      	sub	sp, #12
 801b80e:	af00      	add	r7, sp, #0
 801b810:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801b812:	687b      	ldr	r3, [r7, #4]
 801b814:	4618      	mov	r0, r3
 801b816:	370c      	adds	r7, #12
 801b818:	46bd      	mov	sp, r7
 801b81a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b81e:	4770      	bx	lr

0801b820 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801b820:	b580      	push	{r7, lr}
 801b822:	b084      	sub	sp, #16
 801b824:	af00      	add	r7, sp, #0
 801b826:	60f8      	str	r0, [r7, #12]
 801b828:	60b9      	str	r1, [r7, #8]
 801b82a:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801b82c:	6878      	ldr	r0, [r7, #4]
 801b82e:	f7ff ffec 	bl	801b80a <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b832:	4603      	mov	r3, r0
 801b834:	461a      	mov	r2, r3
 801b836:	68b9      	ldr	r1, [r7, #8]
 801b838:	68f8      	ldr	r0, [r7, #12]
 801b83a:	f000 fcb9 	bl	801c1b0 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801b83e:	bf00      	nop
 801b840:	3710      	adds	r7, #16
 801b842:	46bd      	mov	sp, r7
 801b844:	bd80      	pop	{r7, pc}
	...

0801b848 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801b848:	b5b0      	push	{r4, r5, r7, lr}
 801b84a:	b08c      	sub	sp, #48	; 0x30
 801b84c:	af00      	add	r7, sp, #0
 801b84e:	60f8      	str	r0, [r7, #12]
 801b850:	60b9      	str	r1, [r7, #8]
 801b852:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801b854:	4a39      	ldr	r2, [pc, #228]	; (801b93c <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801b856:	2101      	movs	r1, #1
 801b858:	68f8      	ldr	r0, [r7, #12]
 801b85a:	f000 fcbf 	bl	801c1dc <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc>
 801b85e:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801b860:	68fb      	ldr	r3, [r7, #12]
 801b862:	681b      	ldr	r3, [r3, #0]
 801b864:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801b866:	68fb      	ldr	r3, [r7, #12]
 801b868:	685b      	ldr	r3, [r3, #4]
 801b86a:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801b86c:	68f8      	ldr	r0, [r7, #12]
 801b86e:	f7ee fba3 	bl	8009fb8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>
 801b872:	4603      	mov	r3, r0
 801b874:	617b      	str	r3, [r7, #20]
 801b876:	f107 0214 	add.w	r2, r7, #20
 801b87a:	f107 0308 	add.w	r3, r7, #8
 801b87e:	4611      	mov	r1, r2
 801b880:	4618      	mov	r0, r3
 801b882:	f000 fcf2 	bl	801c26a <_ZN9__gnu_cxxmiIPP16Power_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801b886:	4603      	mov	r3, r0
 801b888:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801b88a:	68fb      	ldr	r3, [r7, #12]
 801b88c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801b88e:	4618      	mov	r0, r3
 801b890:	f000 fd00 	bl	801c294 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj>
 801b894:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801b896:	69fb      	ldr	r3, [r7, #28]
 801b898:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801b89a:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801b89c:	6a3b      	ldr	r3, [r7, #32]
 801b89e:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801b8a0:	69fa      	ldr	r2, [r7, #28]
 801b8a2:	18d5      	adds	r5, r2, r3
 801b8a4:	6878      	ldr	r0, [r7, #4]
 801b8a6:	f7ff ffb0 	bl	801b80a <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b8aa:	4603      	mov	r3, r0
 801b8ac:	461a      	mov	r2, r3
 801b8ae:	4629      	mov	r1, r5
 801b8b0:	4620      	mov	r0, r4
 801b8b2:	f7ff ffb5 	bl	801b820 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801b8b6:	2300      	movs	r3, #0
 801b8b8:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801b8ba:	f107 0308 	add.w	r3, r7, #8
 801b8be:	4618      	mov	r0, r3
 801b8c0:	f7ee ff7f 	bl	800a7c2 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801b8c4:	4603      	mov	r3, r0
 801b8c6:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801b8c8:	68fb      	ldr	r3, [r7, #12]
 801b8ca:	4618      	mov	r0, r3
 801b8cc:	f7ee ff13 	bl	800a6f6 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801b8d0:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801b8d2:	69fa      	ldr	r2, [r7, #28]
 801b8d4:	4621      	mov	r1, r4
 801b8d6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801b8d8:	f000 fcf0 	bl	801c2bc <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801b8dc:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801b8de:	69bb      	ldr	r3, [r7, #24]
 801b8e0:	3304      	adds	r3, #4
 801b8e2:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801b8e4:	f107 0308 	add.w	r3, r7, #8
 801b8e8:	4618      	mov	r0, r3
 801b8ea:	f7ee ff6a 	bl	800a7c2 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801b8ee:	4603      	mov	r3, r0
 801b8f0:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801b8f2:	68fb      	ldr	r3, [r7, #12]
 801b8f4:	4618      	mov	r0, r3
 801b8f6:	f7ee fefe 	bl	800a6f6 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801b8fa:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801b8fc:	69ba      	ldr	r2, [r7, #24]
 801b8fe:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801b900:	4620      	mov	r0, r4
 801b902:	f000 fcdb 	bl	801c2bc <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801b906:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801b908:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801b90a:	68fb      	ldr	r3, [r7, #12]
 801b90c:	689a      	ldr	r2, [r3, #8]
 801b90e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b910:	1ad3      	subs	r3, r2, r3
 801b912:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801b914:	461a      	mov	r2, r3
 801b916:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801b918:	f7ef fc8d 	bl	800b236 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801b91c:	68fb      	ldr	r3, [r7, #12]
 801b91e:	69fa      	ldr	r2, [r7, #28]
 801b920:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801b922:	68fb      	ldr	r3, [r7, #12]
 801b924:	69ba      	ldr	r2, [r7, #24]
 801b926:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801b928:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801b92a:	009b      	lsls	r3, r3, #2
 801b92c:	69fa      	ldr	r2, [r7, #28]
 801b92e:	441a      	add	r2, r3
 801b930:	68fb      	ldr	r3, [r7, #12]
 801b932:	609a      	str	r2, [r3, #8]
    }
 801b934:	bf00      	nop
 801b936:	3730      	adds	r7, #48	; 0x30
 801b938:	46bd      	mov	sp, r7
 801b93a:	bdb0      	pop	{r4, r5, r7, pc}
 801b93c:	08027b8c 	.word	0x08027b8c

0801b940 <_ZNSt6vectorIP16Power_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801b940:	b580      	push	{r7, lr}
 801b942:	b084      	sub	sp, #16
 801b944:	af00      	add	r7, sp, #0
 801b946:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801b948:	6878      	ldr	r0, [r7, #4]
 801b94a:	f7ee fb45 	bl	8009fd8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 801b94e:	4603      	mov	r3, r0
 801b950:	60fb      	str	r3, [r7, #12]
 801b952:	f107 030c 	add.w	r3, r7, #12
 801b956:	2101      	movs	r1, #1
 801b958:	4618      	mov	r0, r3
 801b95a:	f000 fcc3 	bl	801c2e4 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801b95e:	4603      	mov	r3, r0
 801b960:	60bb      	str	r3, [r7, #8]
 801b962:	f107 0308 	add.w	r3, r7, #8
 801b966:	4618      	mov	r0, r3
 801b968:	f7ee fb6f 	bl	800a04a <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801b96c:	4603      	mov	r3, r0
      }
 801b96e:	4618      	mov	r0, r3
 801b970:	3710      	adds	r7, #16
 801b972:	46bd      	mov	sp, r7
 801b974:	bd80      	pop	{r7, pc}

0801b976 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801b976:	b480      	push	{r7}
 801b978:	b083      	sub	sp, #12
 801b97a:	af00      	add	r7, sp, #0
 801b97c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801b97e:	687b      	ldr	r3, [r7, #4]
 801b980:	4618      	mov	r0, r3
 801b982:	370c      	adds	r7, #12
 801b984:	46bd      	mov	sp, r7
 801b986:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b98a:	4770      	bx	lr

0801b98c <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801b98c:	b580      	push	{r7, lr}
 801b98e:	b084      	sub	sp, #16
 801b990:	af00      	add	r7, sp, #0
 801b992:	60f8      	str	r0, [r7, #12]
 801b994:	60b9      	str	r1, [r7, #8]
 801b996:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801b998:	6878      	ldr	r0, [r7, #4]
 801b99a:	f7ff ffec 	bl	801b976 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b99e:	4603      	mov	r3, r0
 801b9a0:	461a      	mov	r2, r3
 801b9a2:	68b9      	ldr	r1, [r7, #8]
 801b9a4:	68f8      	ldr	r0, [r7, #12]
 801b9a6:	f000 fcb6 	bl	801c316 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>
 801b9aa:	bf00      	nop
 801b9ac:	3710      	adds	r7, #16
 801b9ae:	46bd      	mov	sp, r7
 801b9b0:	bd80      	pop	{r7, pc}

0801b9b2 <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801b9b2:	b580      	push	{r7, lr}
 801b9b4:	b084      	sub	sp, #16
 801b9b6:	af00      	add	r7, sp, #0
 801b9b8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 801b9ba:	687b      	ldr	r3, [r7, #4]
 801b9bc:	1d1a      	adds	r2, r3, #4
 801b9be:	f107 030c 	add.w	r3, r7, #12
 801b9c2:	4611      	mov	r1, r2
 801b9c4:	4618      	mov	r0, r3
 801b9c6:	f000 fcbd 	bl	801c344 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801b9ca:	68fb      	ldr	r3, [r7, #12]
 801b9cc:	4618      	mov	r0, r3
 801b9ce:	3710      	adds	r7, #16
 801b9d0:	46bd      	mov	sp, r7
 801b9d2:	bd80      	pop	{r7, pc}

0801b9d4 <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801b9d4:	b5b0      	push	{r4, r5, r7, lr}
 801b9d6:	b08c      	sub	sp, #48	; 0x30
 801b9d8:	af00      	add	r7, sp, #0
 801b9da:	60f8      	str	r0, [r7, #12]
 801b9dc:	60b9      	str	r1, [r7, #8]
 801b9de:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801b9e0:	4a38      	ldr	r2, [pc, #224]	; (801bac4 <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xf0>)
 801b9e2:	2101      	movs	r1, #1
 801b9e4:	68f8      	ldr	r0, [r7, #12]
 801b9e6:	f000 fcbd 	bl	801c364 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc>
 801b9ea:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801b9ec:	68fb      	ldr	r3, [r7, #12]
 801b9ee:	681b      	ldr	r3, [r3, #0]
 801b9f0:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801b9f2:	68fb      	ldr	r3, [r7, #12]
 801b9f4:	685b      	ldr	r3, [r3, #4]
 801b9f6:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801b9f8:	68f8      	ldr	r0, [r7, #12]
 801b9fa:	f000 fcfa 	bl	801c3f2 <_ZNSt6vectorI12sum_operatorSaIS0_EE5beginEv>
 801b9fe:	4603      	mov	r3, r0
 801ba00:	617b      	str	r3, [r7, #20]
 801ba02:	f107 0214 	add.w	r2, r7, #20
 801ba06:	f107 0308 	add.w	r3, r7, #8
 801ba0a:	4611      	mov	r1, r2
 801ba0c:	4618      	mov	r0, r3
 801ba0e:	f000 fd00 	bl	801c412 <_ZN9__gnu_cxxmiIP12sum_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
 801ba12:	4603      	mov	r3, r0
 801ba14:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801ba16:	68fb      	ldr	r3, [r7, #12]
 801ba18:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801ba1a:	4618      	mov	r0, r3
 801ba1c:	f000 fd0d 	bl	801c43a <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj>
 801ba20:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801ba22:	69fb      	ldr	r3, [r7, #28]
 801ba24:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801ba26:	68fc      	ldr	r4, [r7, #12]
 801ba28:	69fa      	ldr	r2, [r7, #28]
 801ba2a:	6a3b      	ldr	r3, [r7, #32]
 801ba2c:	18d5      	adds	r5, r2, r3
 801ba2e:	6878      	ldr	r0, [r7, #4]
 801ba30:	f7ff ffa1 	bl	801b976 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801ba34:	4603      	mov	r3, r0
 801ba36:	461a      	mov	r2, r3
 801ba38:	4629      	mov	r1, r5
 801ba3a:	4620      	mov	r0, r4
 801ba3c:	f7ff ffa6 	bl	801b98c <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
 801ba40:	2300      	movs	r3, #0
 801ba42:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801ba44:	f107 0308 	add.w	r3, r7, #8
 801ba48:	4618      	mov	r0, r3
 801ba4a:	f000 fd1e 	bl	801c48a <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801ba4e:	4603      	mov	r3, r0
 801ba50:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801ba52:	68fb      	ldr	r3, [r7, #12]
 801ba54:	4618      	mov	r0, r3
 801ba56:	f7ee ff21 	bl	800a89c <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801ba5a:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801ba5c:	69fa      	ldr	r2, [r7, #28]
 801ba5e:	4621      	mov	r1, r4
 801ba60:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801ba62:	f000 fcfe 	bl	801c462 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801ba66:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801ba68:	69bb      	ldr	r3, [r7, #24]
 801ba6a:	3301      	adds	r3, #1
 801ba6c:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801ba6e:	f107 0308 	add.w	r3, r7, #8
 801ba72:	4618      	mov	r0, r3
 801ba74:	f000 fd09 	bl	801c48a <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801ba78:	4603      	mov	r3, r0
 801ba7a:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801ba7c:	68fb      	ldr	r3, [r7, #12]
 801ba7e:	4618      	mov	r0, r3
 801ba80:	f7ee ff0c 	bl	800a89c <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801ba84:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801ba86:	69ba      	ldr	r2, [r7, #24]
 801ba88:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801ba8a:	4620      	mov	r0, r4
 801ba8c:	f000 fce9 	bl	801c462 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801ba90:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801ba92:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801ba94:	68fb      	ldr	r3, [r7, #12]
 801ba96:	689a      	ldr	r2, [r3, #8]
 801ba98:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801ba9a:	1ad3      	subs	r3, r2, r3
      _M_deallocate(__old_start,
 801ba9c:	461a      	mov	r2, r3
 801ba9e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801baa0:	f7ef fc4d 	bl	800b33e <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>
      this->_M_impl._M_start = __new_start;
 801baa4:	68fb      	ldr	r3, [r7, #12]
 801baa6:	69fa      	ldr	r2, [r7, #28]
 801baa8:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801baaa:	68fb      	ldr	r3, [r7, #12]
 801baac:	69ba      	ldr	r2, [r7, #24]
 801baae:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801bab0:	69fa      	ldr	r2, [r7, #28]
 801bab2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bab4:	441a      	add	r2, r3
 801bab6:	68fb      	ldr	r3, [r7, #12]
 801bab8:	609a      	str	r2, [r3, #8]
    }
 801baba:	bf00      	nop
 801babc:	3730      	adds	r7, #48	; 0x30
 801babe:	46bd      	mov	sp, r7
 801bac0:	bdb0      	pop	{r4, r5, r7, pc}
 801bac2:	bf00      	nop
 801bac4:	08027b8c 	.word	0x08027b8c

0801bac8 <_ZNSt6vectorI12sum_operatorSaIS0_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801bac8:	b580      	push	{r7, lr}
 801baca:	b084      	sub	sp, #16
 801bacc:	af00      	add	r7, sp, #0
 801bace:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801bad0:	6878      	ldr	r0, [r7, #4]
 801bad2:	f7ff ff6e 	bl	801b9b2 <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>
 801bad6:	4603      	mov	r3, r0
 801bad8:	60fb      	str	r3, [r7, #12]
 801bada:	f107 030c 	add.w	r3, r7, #12
 801bade:	2101      	movs	r1, #1
 801bae0:	4618      	mov	r0, r3
 801bae2:	f000 fcdd 	bl	801c4a0 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEmiEi>
 801bae6:	4603      	mov	r3, r0
 801bae8:	60bb      	str	r3, [r7, #8]
 801baea:	f107 0308 	add.w	r3, r7, #8
 801baee:	4618      	mov	r0, r3
 801baf0:	f000 fcee 	bl	801c4d0 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEdeEv>
 801baf4:	4603      	mov	r3, r0
      }
 801baf6:	4618      	mov	r0, r3
 801baf8:	3710      	adds	r7, #16
 801bafa:	46bd      	mov	sp, r7
 801bafc:	bd80      	pop	{r7, pc}

0801bafe <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionEC1Ev>:
 801bafe:	b480      	push	{r7}
 801bb00:	b083      	sub	sp, #12
 801bb02:	af00      	add	r7, sp, #0
 801bb04:	6078      	str	r0, [r7, #4]
 801bb06:	687b      	ldr	r3, [r7, #4]
 801bb08:	4618      	mov	r0, r3
 801bb0a:	370c      	adds	r7, #12
 801bb0c:	46bd      	mov	sp, r7
 801bb0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bb12:	4770      	bx	lr

0801bb14 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorEC1Ev>:
 801bb14:	b480      	push	{r7}
 801bb16:	b083      	sub	sp, #12
 801bb18:	af00      	add	r7, sp, #0
 801bb1a:	6078      	str	r0, [r7, #4]
 801bb1c:	687b      	ldr	r3, [r7, #4]
 801bb1e:	4618      	mov	r0, r3
 801bb20:	370c      	adds	r7, #12
 801bb22:	46bd      	mov	sp, r7
 801bb24:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bb28:	4770      	bx	lr

0801bb2a <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801bb2a:	b480      	push	{r7}
 801bb2c:	b083      	sub	sp, #12
 801bb2e:	af00      	add	r7, sp, #0
 801bb30:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801bb32:	687b      	ldr	r3, [r7, #4]
 801bb34:	4618      	mov	r0, r3
 801bb36:	370c      	adds	r7, #12
 801bb38:	46bd      	mov	sp, r7
 801bb3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bb3e:	4770      	bx	lr

0801bb40 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801bb40:	b580      	push	{r7, lr}
 801bb42:	b084      	sub	sp, #16
 801bb44:	af00      	add	r7, sp, #0
 801bb46:	60f8      	str	r0, [r7, #12]
 801bb48:	60b9      	str	r1, [r7, #8]
 801bb4a:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801bb4c:	6878      	ldr	r0, [r7, #4]
 801bb4e:	f7ff ffec 	bl	801bb2a <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bb52:	4603      	mov	r3, r0
 801bb54:	461a      	mov	r2, r3
 801bb56:	68b9      	ldr	r1, [r7, #8]
 801bb58:	68f8      	ldr	r0, [r7, #12]
 801bb5a:	f000 fcc5 	bl	801c4e8 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801bb5e:	bf00      	nop
 801bb60:	3710      	adds	r7, #16
 801bb62:	46bd      	mov	sp, r7
 801bb64:	bd80      	pop	{r7, pc}
	...

0801bb68 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801bb68:	b5b0      	push	{r4, r5, r7, lr}
 801bb6a:	b08c      	sub	sp, #48	; 0x30
 801bb6c:	af00      	add	r7, sp, #0
 801bb6e:	60f8      	str	r0, [r7, #12]
 801bb70:	60b9      	str	r1, [r7, #8]
 801bb72:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801bb74:	4a39      	ldr	r2, [pc, #228]	; (801bc5c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801bb76:	2101      	movs	r1, #1
 801bb78:	68f8      	ldr	r0, [r7, #12]
 801bb7a:	f000 fccb 	bl	801c514 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc>
 801bb7e:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801bb80:	68fb      	ldr	r3, [r7, #12]
 801bb82:	681b      	ldr	r3, [r3, #0]
 801bb84:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801bb86:	68fb      	ldr	r3, [r7, #12]
 801bb88:	685b      	ldr	r3, [r3, #4]
 801bb8a:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801bb8c:	68f8      	ldr	r0, [r7, #12]
 801bb8e:	f7ee fa9e 	bl	800a0ce <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>
 801bb92:	4603      	mov	r3, r0
 801bb94:	617b      	str	r3, [r7, #20]
 801bb96:	f107 0214 	add.w	r2, r7, #20
 801bb9a:	f107 0308 	add.w	r3, r7, #8
 801bb9e:	4611      	mov	r1, r2
 801bba0:	4618      	mov	r0, r3
 801bba2:	f000 fcfe 	bl	801c5a2 <_ZN9__gnu_cxxmiIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801bba6:	4603      	mov	r3, r0
 801bba8:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801bbaa:	68fb      	ldr	r3, [r7, #12]
 801bbac:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801bbae:	4618      	mov	r0, r3
 801bbb0:	f000 fd0c 	bl	801c5cc <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj>
 801bbb4:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801bbb6:	69fb      	ldr	r3, [r7, #28]
 801bbb8:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801bbba:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801bbbc:	6a3b      	ldr	r3, [r7, #32]
 801bbbe:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801bbc0:	69fa      	ldr	r2, [r7, #28]
 801bbc2:	18d5      	adds	r5, r2, r3
 801bbc4:	6878      	ldr	r0, [r7, #4]
 801bbc6:	f7ff ffb0 	bl	801bb2a <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bbca:	4603      	mov	r3, r0
 801bbcc:	461a      	mov	r2, r3
 801bbce:	4629      	mov	r1, r5
 801bbd0:	4620      	mov	r0, r4
 801bbd2:	f7ff ffb5 	bl	801bb40 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801bbd6:	2300      	movs	r3, #0
 801bbd8:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801bbda:	f107 0308 	add.w	r3, r7, #8
 801bbde:	4618      	mov	r0, r3
 801bbe0:	f7ee fe85 	bl	800a8ee <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801bbe4:	4603      	mov	r3, r0
 801bbe6:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801bbe8:	68fb      	ldr	r3, [r7, #12]
 801bbea:	4618      	mov	r0, r3
 801bbec:	f7ee fe19 	bl	800a822 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801bbf0:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801bbf2:	69fa      	ldr	r2, [r7, #28]
 801bbf4:	4621      	mov	r1, r4
 801bbf6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801bbf8:	f000 fcfc 	bl	801c5f4 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801bbfc:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801bbfe:	69bb      	ldr	r3, [r7, #24]
 801bc00:	3304      	adds	r3, #4
 801bc02:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bc04:	f107 0308 	add.w	r3, r7, #8
 801bc08:	4618      	mov	r0, r3
 801bc0a:	f7ee fe70 	bl	800a8ee <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801bc0e:	4603      	mov	r3, r0
 801bc10:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801bc12:	68fb      	ldr	r3, [r7, #12]
 801bc14:	4618      	mov	r0, r3
 801bc16:	f7ee fe04 	bl	800a822 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801bc1a:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bc1c:	69ba      	ldr	r2, [r7, #24]
 801bc1e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801bc20:	4620      	mov	r0, r4
 801bc22:	f000 fce7 	bl	801c5f4 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801bc26:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801bc28:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801bc2a:	68fb      	ldr	r3, [r7, #12]
 801bc2c:	689a      	ldr	r2, [r3, #8]
 801bc2e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801bc30:	1ad3      	subs	r3, r2, r3
 801bc32:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801bc34:	461a      	mov	r2, r3
 801bc36:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801bc38:	f7ef fb55 	bl	800b2e6 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801bc3c:	68fb      	ldr	r3, [r7, #12]
 801bc3e:	69fa      	ldr	r2, [r7, #28]
 801bc40:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801bc42:	68fb      	ldr	r3, [r7, #12]
 801bc44:	69ba      	ldr	r2, [r7, #24]
 801bc46:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801bc48:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bc4a:	009b      	lsls	r3, r3, #2
 801bc4c:	69fa      	ldr	r2, [r7, #28]
 801bc4e:	441a      	add	r2, r3
 801bc50:	68fb      	ldr	r3, [r7, #12]
 801bc52:	609a      	str	r2, [r3, #8]
    }
 801bc54:	bf00      	nop
 801bc56:	3730      	adds	r7, #48	; 0x30
 801bc58:	46bd      	mov	sp, r7
 801bc5a:	bdb0      	pop	{r4, r5, r7, pc}
 801bc5c:	08027b8c 	.word	0x08027b8c

0801bc60 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801bc60:	b580      	push	{r7, lr}
 801bc62:	b084      	sub	sp, #16
 801bc64:	af00      	add	r7, sp, #0
 801bc66:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801bc68:	6878      	ldr	r0, [r7, #4]
 801bc6a:	f7ee fa40 	bl	800a0ee <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 801bc6e:	4603      	mov	r3, r0
 801bc70:	60fb      	str	r3, [r7, #12]
 801bc72:	f107 030c 	add.w	r3, r7, #12
 801bc76:	2101      	movs	r1, #1
 801bc78:	4618      	mov	r0, r3
 801bc7a:	f000 fccf 	bl	801c61c <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801bc7e:	4603      	mov	r3, r0
 801bc80:	60bb      	str	r3, [r7, #8]
 801bc82:	f107 0308 	add.w	r3, r7, #8
 801bc86:	4618      	mov	r0, r3
 801bc88:	f7ee fa6a 	bl	800a160 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801bc8c:	4603      	mov	r3, r0
      }
 801bc8e:	4618      	mov	r0, r3
 801bc90:	3710      	adds	r7, #16
 801bc92:	46bd      	mov	sp, r7
 801bc94:	bd80      	pop	{r7, pc}

0801bc96 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionEC1Ev>:
 801bc96:	b480      	push	{r7}
 801bc98:	b083      	sub	sp, #12
 801bc9a:	af00      	add	r7, sp, #0
 801bc9c:	6078      	str	r0, [r7, #4]
 801bc9e:	687b      	ldr	r3, [r7, #4]
 801bca0:	4618      	mov	r0, r3
 801bca2:	370c      	adds	r7, #12
 801bca4:	46bd      	mov	sp, r7
 801bca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bcaa:	4770      	bx	lr

0801bcac <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801bcac:	b480      	push	{r7}
 801bcae:	b083      	sub	sp, #12
 801bcb0:	af00      	add	r7, sp, #0
 801bcb2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801bcb4:	687b      	ldr	r3, [r7, #4]
 801bcb6:	4618      	mov	r0, r3
 801bcb8:	370c      	adds	r7, #12
 801bcba:	46bd      	mov	sp, r7
 801bcbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bcc0:	4770      	bx	lr

0801bcc2 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801bcc2:	b580      	push	{r7, lr}
 801bcc4:	b084      	sub	sp, #16
 801bcc6:	af00      	add	r7, sp, #0
 801bcc8:	60f8      	str	r0, [r7, #12]
 801bcca:	60b9      	str	r1, [r7, #8]
 801bccc:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801bcce:	6878      	ldr	r0, [r7, #4]
 801bcd0:	f7ff ffec 	bl	801bcac <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bcd4:	4603      	mov	r3, r0
 801bcd6:	461a      	mov	r2, r3
 801bcd8:	68b9      	ldr	r1, [r7, #8]
 801bcda:	68f8      	ldr	r0, [r7, #12]
 801bcdc:	f000 fcb7 	bl	801c64e <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801bce0:	bf00      	nop
 801bce2:	3710      	adds	r7, #16
 801bce4:	46bd      	mov	sp, r7
 801bce6:	bd80      	pop	{r7, pc}

0801bce8 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801bce8:	b5b0      	push	{r4, r5, r7, lr}
 801bcea:	b08c      	sub	sp, #48	; 0x30
 801bcec:	af00      	add	r7, sp, #0
 801bcee:	60f8      	str	r0, [r7, #12]
 801bcf0:	60b9      	str	r1, [r7, #8]
 801bcf2:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801bcf4:	4a39      	ldr	r2, [pc, #228]	; (801bddc <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801bcf6:	2101      	movs	r1, #1
 801bcf8:	68f8      	ldr	r0, [r7, #12]
 801bcfa:	f000 fcbe 	bl	801c67a <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc>
 801bcfe:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801bd00:	68fb      	ldr	r3, [r7, #12]
 801bd02:	681b      	ldr	r3, [r3, #0]
 801bd04:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801bd06:	68fb      	ldr	r3, [r7, #12]
 801bd08:	685b      	ldr	r3, [r3, #4]
 801bd0a:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801bd0c:	68f8      	ldr	r0, [r7, #12]
 801bd0e:	f7ee fa4e 	bl	800a1ae <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 801bd12:	4603      	mov	r3, r0
 801bd14:	617b      	str	r3, [r7, #20]
 801bd16:	f107 0214 	add.w	r2, r7, #20
 801bd1a:	f107 0308 	add.w	r3, r7, #8
 801bd1e:	4611      	mov	r1, r2
 801bd20:	4618      	mov	r0, r3
 801bd22:	f000 fcf1 	bl	801c708 <_ZN9__gnu_cxxmiIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801bd26:	4603      	mov	r3, r0
 801bd28:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801bd2a:	68fb      	ldr	r3, [r7, #12]
 801bd2c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801bd2e:	4618      	mov	r0, r3
 801bd30:	f000 fcff 	bl	801c732 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj>
 801bd34:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801bd36:	69fb      	ldr	r3, [r7, #28]
 801bd38:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801bd3a:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801bd3c:	6a3b      	ldr	r3, [r7, #32]
 801bd3e:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801bd40:	69fa      	ldr	r2, [r7, #28]
 801bd42:	18d5      	adds	r5, r2, r3
 801bd44:	6878      	ldr	r0, [r7, #4]
 801bd46:	f7ff ffb1 	bl	801bcac <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bd4a:	4603      	mov	r3, r0
 801bd4c:	461a      	mov	r2, r3
 801bd4e:	4629      	mov	r1, r5
 801bd50:	4620      	mov	r0, r4
 801bd52:	f7ff ffb6 	bl	801bcc2 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801bd56:	2300      	movs	r3, #0
 801bd58:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801bd5a:	f107 0308 	add.w	r3, r7, #8
 801bd5e:	4618      	mov	r0, r3
 801bd60:	f7ee fe1e 	bl	800a9a0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801bd64:	4603      	mov	r3, r0
 801bd66:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801bd68:	68fb      	ldr	r3, [r7, #12]
 801bd6a:	4618      	mov	r0, r3
 801bd6c:	f7ee fdef 	bl	800a94e <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801bd70:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801bd72:	69fa      	ldr	r2, [r7, #28]
 801bd74:	4621      	mov	r1, r4
 801bd76:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801bd78:	f000 fcef 	bl	801c75a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801bd7c:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801bd7e:	69bb      	ldr	r3, [r7, #24]
 801bd80:	3304      	adds	r3, #4
 801bd82:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bd84:	f107 0308 	add.w	r3, r7, #8
 801bd88:	4618      	mov	r0, r3
 801bd8a:	f7ee fe09 	bl	800a9a0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801bd8e:	4603      	mov	r3, r0
 801bd90:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801bd92:	68fb      	ldr	r3, [r7, #12]
 801bd94:	4618      	mov	r0, r3
 801bd96:	f7ee fdda 	bl	800a94e <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801bd9a:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bd9c:	69ba      	ldr	r2, [r7, #24]
 801bd9e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801bda0:	4620      	mov	r0, r4
 801bda2:	f000 fcda 	bl	801c75a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801bda6:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801bda8:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801bdaa:	68fb      	ldr	r3, [r7, #12]
 801bdac:	689a      	ldr	r2, [r3, #8]
 801bdae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801bdb0:	1ad3      	subs	r3, r2, r3
 801bdb2:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801bdb4:	461a      	mov	r2, r3
 801bdb6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801bdb8:	f7ef faed 	bl	800b396 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801bdbc:	68fb      	ldr	r3, [r7, #12]
 801bdbe:	69fa      	ldr	r2, [r7, #28]
 801bdc0:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801bdc2:	68fb      	ldr	r3, [r7, #12]
 801bdc4:	69ba      	ldr	r2, [r7, #24]
 801bdc6:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801bdc8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bdca:	009b      	lsls	r3, r3, #2
 801bdcc:	69fa      	ldr	r2, [r7, #28]
 801bdce:	441a      	add	r2, r3
 801bdd0:	68fb      	ldr	r3, [r7, #12]
 801bdd2:	609a      	str	r2, [r3, #8]
    }
 801bdd4:	bf00      	nop
 801bdd6:	3730      	adds	r7, #48	; 0x30
 801bdd8:	46bd      	mov	sp, r7
 801bdda:	bdb0      	pop	{r4, r5, r7, pc}
 801bddc:	08027b8c 	.word	0x08027b8c

0801bde0 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801bde0:	b580      	push	{r7, lr}
 801bde2:	b084      	sub	sp, #16
 801bde4:	af00      	add	r7, sp, #0
 801bde6:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801bde8:	6878      	ldr	r0, [r7, #4]
 801bdea:	f7ee f9f0 	bl	800a1ce <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 801bdee:	4603      	mov	r3, r0
 801bdf0:	60fb      	str	r3, [r7, #12]
 801bdf2:	f107 030c 	add.w	r3, r7, #12
 801bdf6:	2101      	movs	r1, #1
 801bdf8:	4618      	mov	r0, r3
 801bdfa:	f000 fcc2 	bl	801c782 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801bdfe:	4603      	mov	r3, r0
 801be00:	60bb      	str	r3, [r7, #8]
 801be02:	f107 0308 	add.w	r3, r7, #8
 801be06:	4618      	mov	r0, r3
 801be08:	f7ee fa1a 	bl	800a240 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801be0c:	4603      	mov	r3, r0
      }
 801be0e:	4618      	mov	r0, r3
 801be10:	3710      	adds	r7, #16
 801be12:	46bd      	mov	sp, r7
 801be14:	bd80      	pop	{r7, pc}

0801be16 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionEC1Ev>:
 801be16:	b480      	push	{r7}
 801be18:	b083      	sub	sp, #12
 801be1a:	af00      	add	r7, sp, #0
 801be1c:	6078      	str	r0, [r7, #4]
 801be1e:	687b      	ldr	r3, [r7, #4]
 801be20:	4618      	mov	r0, r3
 801be22:	370c      	adds	r7, #12
 801be24:	46bd      	mov	sp, r7
 801be26:	f85d 7b04 	ldr.w	r7, [sp], #4
 801be2a:	4770      	bx	lr

0801be2c <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801be2c:	b480      	push	{r7}
 801be2e:	b083      	sub	sp, #12
 801be30:	af00      	add	r7, sp, #0
 801be32:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801be34:	687b      	ldr	r3, [r7, #4]
 801be36:	4618      	mov	r0, r3
 801be38:	370c      	adds	r7, #12
 801be3a:	46bd      	mov	sp, r7
 801be3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801be40:	4770      	bx	lr

0801be42 <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801be42:	b580      	push	{r7, lr}
 801be44:	b084      	sub	sp, #16
 801be46:	af00      	add	r7, sp, #0
 801be48:	60f8      	str	r0, [r7, #12]
 801be4a:	60b9      	str	r1, [r7, #8]
 801be4c:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801be4e:	6878      	ldr	r0, [r7, #4]
 801be50:	f7ff ffec 	bl	801be2c <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801be54:	4603      	mov	r3, r0
 801be56:	461a      	mov	r2, r3
 801be58:	68b9      	ldr	r1, [r7, #8]
 801be5a:	68f8      	ldr	r0, [r7, #12]
 801be5c:	f000 fcaa 	bl	801c7b4 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801be60:	bf00      	nop
 801be62:	3710      	adds	r7, #16
 801be64:	46bd      	mov	sp, r7
 801be66:	bd80      	pop	{r7, pc}

0801be68 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801be68:	b5b0      	push	{r4, r5, r7, lr}
 801be6a:	b08c      	sub	sp, #48	; 0x30
 801be6c:	af00      	add	r7, sp, #0
 801be6e:	60f8      	str	r0, [r7, #12]
 801be70:	60b9      	str	r1, [r7, #8]
 801be72:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801be74:	4a39      	ldr	r2, [pc, #228]	; (801bf5c <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801be76:	2101      	movs	r1, #1
 801be78:	68f8      	ldr	r0, [r7, #12]
 801be7a:	f000 fcb1 	bl	801c7e0 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc>
 801be7e:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801be80:	68fb      	ldr	r3, [r7, #12]
 801be82:	681b      	ldr	r3, [r3, #0]
 801be84:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801be86:	68fb      	ldr	r3, [r7, #12]
 801be88:	685b      	ldr	r3, [r3, #4]
 801be8a:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801be8c:	68f8      	ldr	r0, [r7, #12]
 801be8e:	f7ee f9fe 	bl	800a28e <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 801be92:	4603      	mov	r3, r0
 801be94:	617b      	str	r3, [r7, #20]
 801be96:	f107 0214 	add.w	r2, r7, #20
 801be9a:	f107 0308 	add.w	r3, r7, #8
 801be9e:	4611      	mov	r1, r2
 801bea0:	4618      	mov	r0, r3
 801bea2:	f000 fce4 	bl	801c86e <_ZN9__gnu_cxxmiIPP14And_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801bea6:	4603      	mov	r3, r0
 801bea8:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801beaa:	68fb      	ldr	r3, [r7, #12]
 801beac:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801beae:	4618      	mov	r0, r3
 801beb0:	f000 fcf2 	bl	801c898 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj>
 801beb4:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801beb6:	69fb      	ldr	r3, [r7, #28]
 801beb8:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801beba:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801bebc:	6a3b      	ldr	r3, [r7, #32]
 801bebe:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801bec0:	69fa      	ldr	r2, [r7, #28]
 801bec2:	18d5      	adds	r5, r2, r3
 801bec4:	6878      	ldr	r0, [r7, #4]
 801bec6:	f7ff ffb1 	bl	801be2c <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801beca:	4603      	mov	r3, r0
 801becc:	461a      	mov	r2, r3
 801bece:	4629      	mov	r1, r5
 801bed0:	4620      	mov	r0, r4
 801bed2:	f7ff ffb6 	bl	801be42 <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801bed6:	2300      	movs	r3, #0
 801bed8:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801beda:	f107 0308 	add.w	r3, r7, #8
 801bede:	4618      	mov	r0, r3
 801bee0:	f7ee fdb7 	bl	800aa52 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801bee4:	4603      	mov	r3, r0
 801bee6:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801bee8:	68fb      	ldr	r3, [r7, #12]
 801beea:	4618      	mov	r0, r3
 801beec:	f7ee fd88 	bl	800aa00 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801bef0:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801bef2:	69fa      	ldr	r2, [r7, #28]
 801bef4:	4621      	mov	r1, r4
 801bef6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801bef8:	f000 fce2 	bl	801c8c0 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801befc:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801befe:	69bb      	ldr	r3, [r7, #24]
 801bf00:	3304      	adds	r3, #4
 801bf02:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bf04:	f107 0308 	add.w	r3, r7, #8
 801bf08:	4618      	mov	r0, r3
 801bf0a:	f7ee fda2 	bl	800aa52 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801bf0e:	4603      	mov	r3, r0
 801bf10:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801bf12:	68fb      	ldr	r3, [r7, #12]
 801bf14:	4618      	mov	r0, r3
 801bf16:	f7ee fd73 	bl	800aa00 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801bf1a:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bf1c:	69ba      	ldr	r2, [r7, #24]
 801bf1e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801bf20:	4620      	mov	r0, r4
 801bf22:	f000 fccd 	bl	801c8c0 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801bf26:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801bf28:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801bf2a:	68fb      	ldr	r3, [r7, #12]
 801bf2c:	689a      	ldr	r2, [r3, #8]
 801bf2e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801bf30:	1ad3      	subs	r3, r2, r3
 801bf32:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801bf34:	461a      	mov	r2, r3
 801bf36:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801bf38:	f7ef fa59 	bl	800b3ee <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801bf3c:	68fb      	ldr	r3, [r7, #12]
 801bf3e:	69fa      	ldr	r2, [r7, #28]
 801bf40:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801bf42:	68fb      	ldr	r3, [r7, #12]
 801bf44:	69ba      	ldr	r2, [r7, #24]
 801bf46:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801bf48:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bf4a:	009b      	lsls	r3, r3, #2
 801bf4c:	69fa      	ldr	r2, [r7, #28]
 801bf4e:	441a      	add	r2, r3
 801bf50:	68fb      	ldr	r3, [r7, #12]
 801bf52:	609a      	str	r2, [r3, #8]
    }
 801bf54:	bf00      	nop
 801bf56:	3730      	adds	r7, #48	; 0x30
 801bf58:	46bd      	mov	sp, r7
 801bf5a:	bdb0      	pop	{r4, r5, r7, pc}
 801bf5c:	08027b8c 	.word	0x08027b8c

0801bf60 <_ZNSt6vectorIP14And_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801bf60:	b580      	push	{r7, lr}
 801bf62:	b084      	sub	sp, #16
 801bf64:	af00      	add	r7, sp, #0
 801bf66:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801bf68:	6878      	ldr	r0, [r7, #4]
 801bf6a:	f7ee f9a0 	bl	800a2ae <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 801bf6e:	4603      	mov	r3, r0
 801bf70:	60fb      	str	r3, [r7, #12]
 801bf72:	f107 030c 	add.w	r3, r7, #12
 801bf76:	2101      	movs	r1, #1
 801bf78:	4618      	mov	r0, r3
 801bf7a:	f000 fcb5 	bl	801c8e8 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801bf7e:	4603      	mov	r3, r0
 801bf80:	60bb      	str	r3, [r7, #8]
 801bf82:	f107 0308 	add.w	r3, r7, #8
 801bf86:	4618      	mov	r0, r3
 801bf88:	f7ee f9ca 	bl	800a320 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801bf8c:	4603      	mov	r3, r0
      }
 801bf8e:	4618      	mov	r0, r3
 801bf90:	3710      	adds	r7, #16
 801bf92:	46bd      	mov	sp, r7
 801bf94:	bd80      	pop	{r7, pc}

0801bf96 <_ZSt9addressofIP8VariableEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801bf96:	b580      	push	{r7, lr}
 801bf98:	b082      	sub	sp, #8
 801bf9a:	af00      	add	r7, sp, #0
 801bf9c:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801bf9e:	6878      	ldr	r0, [r7, #4]
 801bfa0:	f7ef fd1c 	bl	800b9dc <_ZSt11__addressofIP8VariableEPT_RS2_>
 801bfa4:	4603      	mov	r3, r0
 801bfa6:	4618      	mov	r0, r3
 801bfa8:	3708      	adds	r7, #8
 801bfaa:	46bd      	mov	sp, r7
 801bfac:	bd80      	pop	{r7, pc}

0801bfae <_ZSt9addressofIP10ExpressionEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801bfae:	b580      	push	{r7, lr}
 801bfb0:	b082      	sub	sp, #8
 801bfb2:	af00      	add	r7, sp, #0
 801bfb4:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801bfb6:	6878      	ldr	r0, [r7, #4]
 801bfb8:	f000 fcaf 	bl	801c91a <_ZSt11__addressofIP10ExpressionEPT_RS2_>
 801bfbc:	4603      	mov	r3, r0
 801bfbe:	4618      	mov	r0, r3
 801bfc0:	3708      	adds	r7, #8
 801bfc2:	46bd      	mov	sp, r7
 801bfc4:	bd80      	pop	{r7, pc}

0801bfc6 <_ZSt9addressofIP17Primal_expressionEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801bfc6:	b580      	push	{r7, lr}
 801bfc8:	b082      	sub	sp, #8
 801bfca:	af00      	add	r7, sp, #0
 801bfcc:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801bfce:	6878      	ldr	r0, [r7, #4]
 801bfd0:	f000 fcae 	bl	801c930 <_ZSt11__addressofIP17Primal_expressionEPT_RS2_>
 801bfd4:	4603      	mov	r3, r0
 801bfd6:	4618      	mov	r0, r3
 801bfd8:	3708      	adds	r7, #8
 801bfda:	46bd      	mov	sp, r7
 801bfdc:	bd80      	pop	{r7, pc}

0801bfde <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801bfde:	b590      	push	{r4, r7, lr}
 801bfe0:	b085      	sub	sp, #20
 801bfe2:	af00      	add	r7, sp, #0
 801bfe4:	60f8      	str	r0, [r7, #12]
 801bfe6:	60b9      	str	r1, [r7, #8]
 801bfe8:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801bfea:	6878      	ldr	r0, [r7, #4]
 801bfec:	f7ff fb32 	bl	801b654 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801bff0:	4603      	mov	r3, r0
 801bff2:	781c      	ldrb	r4, [r3, #0]
 801bff4:	68bb      	ldr	r3, [r7, #8]
 801bff6:	4619      	mov	r1, r3
 801bff8:	2001      	movs	r0, #1
 801bffa:	f7e5 f82e 	bl	800105a <_ZnwjPv>
 801bffe:	4603      	mov	r3, r0
 801c000:	4622      	mov	r2, r4
 801c002:	701a      	strb	r2, [r3, #0]
 801c004:	bf00      	nop
 801c006:	3714      	adds	r7, #20
 801c008:	46bd      	mov	sp, r7
 801c00a:	bd90      	pop	{r4, r7, pc}

0801c00c <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801c00c:	b480      	push	{r7}
 801c00e:	b083      	sub	sp, #12
 801c010:	af00      	add	r7, sp, #0
 801c012:	6078      	str	r0, [r7, #4]
 801c014:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801c016:	683b      	ldr	r3, [r7, #0]
 801c018:	681a      	ldr	r2, [r3, #0]
 801c01a:	687b      	ldr	r3, [r7, #4]
 801c01c:	601a      	str	r2, [r3, #0]
 801c01e:	687b      	ldr	r3, [r7, #4]
 801c020:	4618      	mov	r0, r3
 801c022:	370c      	adds	r7, #12
 801c024:	46bd      	mov	sp, r7
 801c026:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c02a:	4770      	bx	lr

0801c02c <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801c02c:	b590      	push	{r4, r7, lr}
 801c02e:	b087      	sub	sp, #28
 801c030:	af00      	add	r7, sp, #0
 801c032:	60f8      	str	r0, [r7, #12]
 801c034:	60b9      	str	r1, [r7, #8]
 801c036:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801c038:	68f8      	ldr	r0, [r7, #12]
 801c03a:	f000 fc84 	bl	801c946 <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801c03e:	4604      	mov	r4, r0
 801c040:	68f8      	ldr	r0, [r7, #12]
 801c042:	f7f0 fd07 	bl	800ca54 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801c046:	4603      	mov	r3, r0
 801c048:	1ae2      	subs	r2, r4, r3
 801c04a:	68bb      	ldr	r3, [r7, #8]
 801c04c:	429a      	cmp	r2, r3
 801c04e:	bf34      	ite	cc
 801c050:	2301      	movcc	r3, #1
 801c052:	2300      	movcs	r3, #0
 801c054:	b2db      	uxtb	r3, r3
 801c056:	2b00      	cmp	r3, #0
 801c058:	d002      	beq.n	801c060 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801c05a:	6878      	ldr	r0, [r7, #4]
 801c05c:	f006 faed 	bl	802263a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801c060:	68f8      	ldr	r0, [r7, #12]
 801c062:	f7f0 fcf7 	bl	800ca54 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801c066:	4604      	mov	r4, r0
 801c068:	68f8      	ldr	r0, [r7, #12]
 801c06a:	f7f0 fcf3 	bl	800ca54 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801c06e:	4603      	mov	r3, r0
 801c070:	613b      	str	r3, [r7, #16]
 801c072:	f107 0208 	add.w	r2, r7, #8
 801c076:	f107 0310 	add.w	r3, r7, #16
 801c07a:	4611      	mov	r1, r2
 801c07c:	4618      	mov	r0, r3
 801c07e:	f7f9 fcc0 	bl	8015a02 <_ZSt3maxIjERKT_S2_S2_>
 801c082:	4603      	mov	r3, r0
 801c084:	681b      	ldr	r3, [r3, #0]
 801c086:	4423      	add	r3, r4
 801c088:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801c08a:	68f8      	ldr	r0, [r7, #12]
 801c08c:	f7f0 fce2 	bl	800ca54 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801c090:	4602      	mov	r2, r0
 801c092:	697b      	ldr	r3, [r7, #20]
 801c094:	4293      	cmp	r3, r2
 801c096:	d306      	bcc.n	801c0a6 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x7a>
 801c098:	68f8      	ldr	r0, [r7, #12]
 801c09a:	f000 fc54 	bl	801c946 <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801c09e:	4602      	mov	r2, r0
 801c0a0:	697b      	ldr	r3, [r7, #20]
 801c0a2:	4293      	cmp	r3, r2
 801c0a4:	d904      	bls.n	801c0b0 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x84>
 801c0a6:	68f8      	ldr	r0, [r7, #12]
 801c0a8:	f000 fc4d 	bl	801c946 <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801c0ac:	4603      	mov	r3, r0
 801c0ae:	e000      	b.n	801c0b2 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x86>
 801c0b0:	697b      	ldr	r3, [r7, #20]
      }
 801c0b2:	4618      	mov	r0, r3
 801c0b4:	371c      	adds	r7, #28
 801c0b6:	46bd      	mov	sp, r7
 801c0b8:	bd90      	pop	{r4, r7, pc}

0801c0ba <_ZNSt6vectorI13mult_operatorSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801c0ba:	b580      	push	{r7, lr}
 801c0bc:	b084      	sub	sp, #16
 801c0be:	af00      	add	r7, sp, #0
 801c0c0:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 801c0c2:	687a      	ldr	r2, [r7, #4]
 801c0c4:	f107 030c 	add.w	r3, r7, #12
 801c0c8:	4611      	mov	r1, r2
 801c0ca:	4618      	mov	r0, r3
 801c0cc:	f7ff ff9e 	bl	801c00c <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801c0d0:	68fb      	ldr	r3, [r7, #12]
 801c0d2:	4618      	mov	r0, r3
 801c0d4:	3710      	adds	r7, #16
 801c0d6:	46bd      	mov	sp, r7
 801c0d8:	bd80      	pop	{r7, pc}

0801c0da <_ZN9__gnu_cxxmiIP13mult_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801c0da:	b590      	push	{r4, r7, lr}
 801c0dc:	b083      	sub	sp, #12
 801c0de:	af00      	add	r7, sp, #0
 801c0e0:	6078      	str	r0, [r7, #4]
 801c0e2:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801c0e4:	6878      	ldr	r0, [r7, #4]
 801c0e6:	f000 f834 	bl	801c152 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c0ea:	4603      	mov	r3, r0
 801c0ec:	681c      	ldr	r4, [r3, #0]
 801c0ee:	6838      	ldr	r0, [r7, #0]
 801c0f0:	f000 f82f 	bl	801c152 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c0f4:	4603      	mov	r3, r0
 801c0f6:	681b      	ldr	r3, [r3, #0]
 801c0f8:	1ae3      	subs	r3, r4, r3
 801c0fa:	4618      	mov	r0, r3
 801c0fc:	370c      	adds	r7, #12
 801c0fe:	46bd      	mov	sp, r7
 801c100:	bd90      	pop	{r4, r7, pc}

0801c102 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c102:	b580      	push	{r7, lr}
 801c104:	b082      	sub	sp, #8
 801c106:	af00      	add	r7, sp, #0
 801c108:	6078      	str	r0, [r7, #4]
 801c10a:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c10c:	683b      	ldr	r3, [r7, #0]
 801c10e:	2b00      	cmp	r3, #0
 801c110:	d006      	beq.n	801c120 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj+0x1e>
 801c112:	687b      	ldr	r3, [r7, #4]
 801c114:	6839      	ldr	r1, [r7, #0]
 801c116:	4618      	mov	r0, r3
 801c118:	f000 fc26 	bl	801c968 <_ZNSt16allocator_traitsISaI13mult_operatorEE8allocateERS1_j>
 801c11c:	4603      	mov	r3, r0
 801c11e:	e000      	b.n	801c122 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj+0x20>
 801c120:	2300      	movs	r3, #0
      }
 801c122:	4618      	mov	r0, r3
 801c124:	3708      	adds	r7, #8
 801c126:	46bd      	mov	sp, r7
 801c128:	bd80      	pop	{r7, pc}

0801c12a <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801c12a:	b590      	push	{r4, r7, lr}
 801c12c:	b089      	sub	sp, #36	; 0x24
 801c12e:	af02      	add	r7, sp, #8
 801c130:	60f8      	str	r0, [r7, #12]
 801c132:	60b9      	str	r1, [r7, #8]
 801c134:	607a      	str	r2, [r7, #4]
 801c136:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801c138:	f88d 4000 	strb.w	r4, [sp]
 801c13c:	683b      	ldr	r3, [r7, #0]
 801c13e:	687a      	ldr	r2, [r7, #4]
 801c140:	68b9      	ldr	r1, [r7, #8]
 801c142:	68f8      	ldr	r0, [r7, #12]
 801c144:	f000 fc1f 	bl	801c986 <_ZNSt6vectorI13mult_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 801c148:	4603      	mov	r3, r0
      }
 801c14a:	4618      	mov	r0, r3
 801c14c:	371c      	adds	r7, #28
 801c14e:	46bd      	mov	sp, r7
 801c150:	bd90      	pop	{r4, r7, pc}

0801c152 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801c152:	b480      	push	{r7}
 801c154:	b083      	sub	sp, #12
 801c156:	af00      	add	r7, sp, #0
 801c158:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801c15a:	687b      	ldr	r3, [r7, #4]
 801c15c:	4618      	mov	r0, r3
 801c15e:	370c      	adds	r7, #12
 801c160:	46bd      	mov	sp, r7
 801c162:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c166:	4770      	bx	lr

0801c168 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801c168:	b580      	push	{r7, lr}
 801c16a:	b084      	sub	sp, #16
 801c16c:	af00      	add	r7, sp, #0
 801c16e:	6078      	str	r0, [r7, #4]
 801c170:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801c172:	687b      	ldr	r3, [r7, #4]
 801c174:	681a      	ldr	r2, [r3, #0]
 801c176:	683b      	ldr	r3, [r7, #0]
 801c178:	425b      	negs	r3, r3
 801c17a:	4413      	add	r3, r2
 801c17c:	60fb      	str	r3, [r7, #12]
 801c17e:	f107 020c 	add.w	r2, r7, #12
 801c182:	f107 0308 	add.w	r3, r7, #8
 801c186:	4611      	mov	r1, r2
 801c188:	4618      	mov	r0, r3
 801c18a:	f7ff ff3f 	bl	801c00c <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801c18e:	68bb      	ldr	r3, [r7, #8]
 801c190:	4618      	mov	r0, r3
 801c192:	3710      	adds	r7, #16
 801c194:	46bd      	mov	sp, r7
 801c196:	bd80      	pop	{r7, pc}

0801c198 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 801c198:	b480      	push	{r7}
 801c19a:	b083      	sub	sp, #12
 801c19c:	af00      	add	r7, sp, #0
 801c19e:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801c1a0:	687b      	ldr	r3, [r7, #4]
 801c1a2:	681b      	ldr	r3, [r3, #0]
 801c1a4:	4618      	mov	r0, r3
 801c1a6:	370c      	adds	r7, #12
 801c1a8:	46bd      	mov	sp, r7
 801c1aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c1ae:	4770      	bx	lr

0801c1b0 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801c1b0:	b590      	push	{r4, r7, lr}
 801c1b2:	b085      	sub	sp, #20
 801c1b4:	af00      	add	r7, sp, #0
 801c1b6:	60f8      	str	r0, [r7, #12]
 801c1b8:	60b9      	str	r1, [r7, #8]
 801c1ba:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801c1bc:	6878      	ldr	r0, [r7, #4]
 801c1be:	f7ff fb24 	bl	801b80a <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c1c2:	4603      	mov	r3, r0
 801c1c4:	681c      	ldr	r4, [r3, #0]
 801c1c6:	68bb      	ldr	r3, [r7, #8]
 801c1c8:	4619      	mov	r1, r3
 801c1ca:	2004      	movs	r0, #4
 801c1cc:	f7e4 ff45 	bl	800105a <_ZnwjPv>
 801c1d0:	4603      	mov	r3, r0
 801c1d2:	601c      	str	r4, [r3, #0]
 801c1d4:	bf00      	nop
 801c1d6:	3714      	adds	r7, #20
 801c1d8:	46bd      	mov	sp, r7
 801c1da:	bd90      	pop	{r4, r7, pc}

0801c1dc <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801c1dc:	b590      	push	{r4, r7, lr}
 801c1de:	b087      	sub	sp, #28
 801c1e0:	af00      	add	r7, sp, #0
 801c1e2:	60f8      	str	r0, [r7, #12]
 801c1e4:	60b9      	str	r1, [r7, #8]
 801c1e6:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801c1e8:	68f8      	ldr	r0, [r7, #12]
 801c1ea:	f000 fbde 	bl	801c9aa <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801c1ee:	4604      	mov	r4, r0
 801c1f0:	68f8      	ldr	r0, [r7, #12]
 801c1f2:	f000 fbeb 	bl	801c9cc <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801c1f6:	4603      	mov	r3, r0
 801c1f8:	1ae2      	subs	r2, r4, r3
 801c1fa:	68bb      	ldr	r3, [r7, #8]
 801c1fc:	429a      	cmp	r2, r3
 801c1fe:	bf34      	ite	cc
 801c200:	2301      	movcc	r3, #1
 801c202:	2300      	movcs	r3, #0
 801c204:	b2db      	uxtb	r3, r3
 801c206:	2b00      	cmp	r3, #0
 801c208:	d002      	beq.n	801c210 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801c20a:	6878      	ldr	r0, [r7, #4]
 801c20c:	f006 fa15 	bl	802263a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801c210:	68f8      	ldr	r0, [r7, #12]
 801c212:	f000 fbdb 	bl	801c9cc <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801c216:	4604      	mov	r4, r0
 801c218:	68f8      	ldr	r0, [r7, #12]
 801c21a:	f000 fbd7 	bl	801c9cc <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801c21e:	4603      	mov	r3, r0
 801c220:	613b      	str	r3, [r7, #16]
 801c222:	f107 0208 	add.w	r2, r7, #8
 801c226:	f107 0310 	add.w	r3, r7, #16
 801c22a:	4611      	mov	r1, r2
 801c22c:	4618      	mov	r0, r3
 801c22e:	f7f9 fbe8 	bl	8015a02 <_ZSt3maxIjERKT_S2_S2_>
 801c232:	4603      	mov	r3, r0
 801c234:	681b      	ldr	r3, [r3, #0]
 801c236:	4423      	add	r3, r4
 801c238:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801c23a:	68f8      	ldr	r0, [r7, #12]
 801c23c:	f000 fbc6 	bl	801c9cc <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801c240:	4602      	mov	r2, r0
 801c242:	697b      	ldr	r3, [r7, #20]
 801c244:	4293      	cmp	r3, r2
 801c246:	d306      	bcc.n	801c256 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801c248:	68f8      	ldr	r0, [r7, #12]
 801c24a:	f000 fbae 	bl	801c9aa <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801c24e:	4602      	mov	r2, r0
 801c250:	697b      	ldr	r3, [r7, #20]
 801c252:	4293      	cmp	r3, r2
 801c254:	d904      	bls.n	801c260 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801c256:	68f8      	ldr	r0, [r7, #12]
 801c258:	f000 fba7 	bl	801c9aa <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801c25c:	4603      	mov	r3, r0
 801c25e:	e000      	b.n	801c262 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801c260:	697b      	ldr	r3, [r7, #20]
      }
 801c262:	4618      	mov	r0, r3
 801c264:	371c      	adds	r7, #28
 801c266:	46bd      	mov	sp, r7
 801c268:	bd90      	pop	{r4, r7, pc}

0801c26a <_ZN9__gnu_cxxmiIPP16Power_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801c26a:	b590      	push	{r4, r7, lr}
 801c26c:	b083      	sub	sp, #12
 801c26e:	af00      	add	r7, sp, #0
 801c270:	6078      	str	r0, [r7, #4]
 801c272:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801c274:	6878      	ldr	r0, [r7, #4]
 801c276:	f7ee faa4 	bl	800a7c2 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c27a:	4603      	mov	r3, r0
 801c27c:	681c      	ldr	r4, [r3, #0]
 801c27e:	6838      	ldr	r0, [r7, #0]
 801c280:	f7ee fa9f 	bl	800a7c2 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c284:	4603      	mov	r3, r0
 801c286:	681b      	ldr	r3, [r3, #0]
 801c288:	1ae3      	subs	r3, r4, r3
 801c28a:	109b      	asrs	r3, r3, #2
 801c28c:	4618      	mov	r0, r3
 801c28e:	370c      	adds	r7, #12
 801c290:	46bd      	mov	sp, r7
 801c292:	bd90      	pop	{r4, r7, pc}

0801c294 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c294:	b580      	push	{r7, lr}
 801c296:	b082      	sub	sp, #8
 801c298:	af00      	add	r7, sp, #0
 801c29a:	6078      	str	r0, [r7, #4]
 801c29c:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c29e:	683b      	ldr	r3, [r7, #0]
 801c2a0:	2b00      	cmp	r3, #0
 801c2a2:	d006      	beq.n	801c2b2 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801c2a4:	687b      	ldr	r3, [r7, #4]
 801c2a6:	6839      	ldr	r1, [r7, #0]
 801c2a8:	4618      	mov	r0, r3
 801c2aa:	f000 fb9f 	bl	801c9ec <_ZNSt16allocator_traitsISaIP16Power_expressionEE8allocateERS2_j>
 801c2ae:	4603      	mov	r3, r0
 801c2b0:	e000      	b.n	801c2b4 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj+0x20>
 801c2b2:	2300      	movs	r3, #0
      }
 801c2b4:	4618      	mov	r0, r3
 801c2b6:	3708      	adds	r7, #8
 801c2b8:	46bd      	mov	sp, r7
 801c2ba:	bd80      	pop	{r7, pc}

0801c2bc <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801c2bc:	b590      	push	{r4, r7, lr}
 801c2be:	b089      	sub	sp, #36	; 0x24
 801c2c0:	af02      	add	r7, sp, #8
 801c2c2:	60f8      	str	r0, [r7, #12]
 801c2c4:	60b9      	str	r1, [r7, #8]
 801c2c6:	607a      	str	r2, [r7, #4]
 801c2c8:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801c2ca:	f88d 4000 	strb.w	r4, [sp]
 801c2ce:	683b      	ldr	r3, [r7, #0]
 801c2d0:	687a      	ldr	r2, [r7, #4]
 801c2d2:	68b9      	ldr	r1, [r7, #8]
 801c2d4:	68f8      	ldr	r0, [r7, #12]
 801c2d6:	f000 fb98 	bl	801ca0a <_ZNSt6vectorIP16Power_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801c2da:	4603      	mov	r3, r0
      }
 801c2dc:	4618      	mov	r0, r3
 801c2de:	371c      	adds	r7, #28
 801c2e0:	46bd      	mov	sp, r7
 801c2e2:	bd90      	pop	{r4, r7, pc}

0801c2e4 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801c2e4:	b580      	push	{r7, lr}
 801c2e6:	b084      	sub	sp, #16
 801c2e8:	af00      	add	r7, sp, #0
 801c2ea:	6078      	str	r0, [r7, #4]
 801c2ec:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801c2ee:	687b      	ldr	r3, [r7, #4]
 801c2f0:	681a      	ldr	r2, [r3, #0]
 801c2f2:	683b      	ldr	r3, [r7, #0]
 801c2f4:	009b      	lsls	r3, r3, #2
 801c2f6:	425b      	negs	r3, r3
 801c2f8:	4413      	add	r3, r2
 801c2fa:	60fb      	str	r3, [r7, #12]
 801c2fc:	f107 020c 	add.w	r2, r7, #12
 801c300:	f107 0308 	add.w	r3, r7, #8
 801c304:	4611      	mov	r1, r2
 801c306:	4618      	mov	r0, r3
 801c308:	f7ee fa4b 	bl	800a7a2 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801c30c:	68bb      	ldr	r3, [r7, #8]
 801c30e:	4618      	mov	r0, r3
 801c310:	3710      	adds	r7, #16
 801c312:	46bd      	mov	sp, r7
 801c314:	bd80      	pop	{r7, pc}

0801c316 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801c316:	b590      	push	{r4, r7, lr}
 801c318:	b085      	sub	sp, #20
 801c31a:	af00      	add	r7, sp, #0
 801c31c:	60f8      	str	r0, [r7, #12]
 801c31e:	60b9      	str	r1, [r7, #8]
 801c320:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801c322:	6878      	ldr	r0, [r7, #4]
 801c324:	f7ff fb27 	bl	801b976 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801c328:	4603      	mov	r3, r0
 801c32a:	781c      	ldrb	r4, [r3, #0]
 801c32c:	68bb      	ldr	r3, [r7, #8]
 801c32e:	4619      	mov	r1, r3
 801c330:	2001      	movs	r0, #1
 801c332:	f7e4 fe92 	bl	800105a <_ZnwjPv>
 801c336:	4603      	mov	r3, r0
 801c338:	4622      	mov	r2, r4
 801c33a:	701a      	strb	r2, [r3, #0]
 801c33c:	bf00      	nop
 801c33e:	3714      	adds	r7, #20
 801c340:	46bd      	mov	sp, r7
 801c342:	bd90      	pop	{r4, r7, pc}

0801c344 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801c344:	b480      	push	{r7}
 801c346:	b083      	sub	sp, #12
 801c348:	af00      	add	r7, sp, #0
 801c34a:	6078      	str	r0, [r7, #4]
 801c34c:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801c34e:	683b      	ldr	r3, [r7, #0]
 801c350:	681a      	ldr	r2, [r3, #0]
 801c352:	687b      	ldr	r3, [r7, #4]
 801c354:	601a      	str	r2, [r3, #0]
 801c356:	687b      	ldr	r3, [r7, #4]
 801c358:	4618      	mov	r0, r3
 801c35a:	370c      	adds	r7, #12
 801c35c:	46bd      	mov	sp, r7
 801c35e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c362:	4770      	bx	lr

0801c364 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801c364:	b590      	push	{r4, r7, lr}
 801c366:	b087      	sub	sp, #28
 801c368:	af00      	add	r7, sp, #0
 801c36a:	60f8      	str	r0, [r7, #12]
 801c36c:	60b9      	str	r1, [r7, #8]
 801c36e:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801c370:	68f8      	ldr	r0, [r7, #12]
 801c372:	f000 fb5c 	bl	801ca2e <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801c376:	4604      	mov	r4, r0
 801c378:	68f8      	ldr	r0, [r7, #12]
 801c37a:	f7f0 fb3d 	bl	800c9f8 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801c37e:	4603      	mov	r3, r0
 801c380:	1ae2      	subs	r2, r4, r3
 801c382:	68bb      	ldr	r3, [r7, #8]
 801c384:	429a      	cmp	r2, r3
 801c386:	bf34      	ite	cc
 801c388:	2301      	movcc	r3, #1
 801c38a:	2300      	movcs	r3, #0
 801c38c:	b2db      	uxtb	r3, r3
 801c38e:	2b00      	cmp	r3, #0
 801c390:	d002      	beq.n	801c398 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801c392:	6878      	ldr	r0, [r7, #4]
 801c394:	f006 f951 	bl	802263a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801c398:	68f8      	ldr	r0, [r7, #12]
 801c39a:	f7f0 fb2d 	bl	800c9f8 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801c39e:	4604      	mov	r4, r0
 801c3a0:	68f8      	ldr	r0, [r7, #12]
 801c3a2:	f7f0 fb29 	bl	800c9f8 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801c3a6:	4603      	mov	r3, r0
 801c3a8:	613b      	str	r3, [r7, #16]
 801c3aa:	f107 0208 	add.w	r2, r7, #8
 801c3ae:	f107 0310 	add.w	r3, r7, #16
 801c3b2:	4611      	mov	r1, r2
 801c3b4:	4618      	mov	r0, r3
 801c3b6:	f7f9 fb24 	bl	8015a02 <_ZSt3maxIjERKT_S2_S2_>
 801c3ba:	4603      	mov	r3, r0
 801c3bc:	681b      	ldr	r3, [r3, #0]
 801c3be:	4423      	add	r3, r4
 801c3c0:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801c3c2:	68f8      	ldr	r0, [r7, #12]
 801c3c4:	f7f0 fb18 	bl	800c9f8 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801c3c8:	4602      	mov	r2, r0
 801c3ca:	697b      	ldr	r3, [r7, #20]
 801c3cc:	4293      	cmp	r3, r2
 801c3ce:	d306      	bcc.n	801c3de <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x7a>
 801c3d0:	68f8      	ldr	r0, [r7, #12]
 801c3d2:	f000 fb2c 	bl	801ca2e <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801c3d6:	4602      	mov	r2, r0
 801c3d8:	697b      	ldr	r3, [r7, #20]
 801c3da:	4293      	cmp	r3, r2
 801c3dc:	d904      	bls.n	801c3e8 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x84>
 801c3de:	68f8      	ldr	r0, [r7, #12]
 801c3e0:	f000 fb25 	bl	801ca2e <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801c3e4:	4603      	mov	r3, r0
 801c3e6:	e000      	b.n	801c3ea <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x86>
 801c3e8:	697b      	ldr	r3, [r7, #20]
      }
 801c3ea:	4618      	mov	r0, r3
 801c3ec:	371c      	adds	r7, #28
 801c3ee:	46bd      	mov	sp, r7
 801c3f0:	bd90      	pop	{r4, r7, pc}

0801c3f2 <_ZNSt6vectorI12sum_operatorSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801c3f2:	b580      	push	{r7, lr}
 801c3f4:	b084      	sub	sp, #16
 801c3f6:	af00      	add	r7, sp, #0
 801c3f8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 801c3fa:	687a      	ldr	r2, [r7, #4]
 801c3fc:	f107 030c 	add.w	r3, r7, #12
 801c400:	4611      	mov	r1, r2
 801c402:	4618      	mov	r0, r3
 801c404:	f7ff ff9e 	bl	801c344 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801c408:	68fb      	ldr	r3, [r7, #12]
 801c40a:	4618      	mov	r0, r3
 801c40c:	3710      	adds	r7, #16
 801c40e:	46bd      	mov	sp, r7
 801c410:	bd80      	pop	{r7, pc}

0801c412 <_ZN9__gnu_cxxmiIP12sum_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801c412:	b590      	push	{r4, r7, lr}
 801c414:	b083      	sub	sp, #12
 801c416:	af00      	add	r7, sp, #0
 801c418:	6078      	str	r0, [r7, #4]
 801c41a:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801c41c:	6878      	ldr	r0, [r7, #4]
 801c41e:	f000 f834 	bl	801c48a <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c422:	4603      	mov	r3, r0
 801c424:	681c      	ldr	r4, [r3, #0]
 801c426:	6838      	ldr	r0, [r7, #0]
 801c428:	f000 f82f 	bl	801c48a <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c42c:	4603      	mov	r3, r0
 801c42e:	681b      	ldr	r3, [r3, #0]
 801c430:	1ae3      	subs	r3, r4, r3
 801c432:	4618      	mov	r0, r3
 801c434:	370c      	adds	r7, #12
 801c436:	46bd      	mov	sp, r7
 801c438:	bd90      	pop	{r4, r7, pc}

0801c43a <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c43a:	b580      	push	{r7, lr}
 801c43c:	b082      	sub	sp, #8
 801c43e:	af00      	add	r7, sp, #0
 801c440:	6078      	str	r0, [r7, #4]
 801c442:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c444:	683b      	ldr	r3, [r7, #0]
 801c446:	2b00      	cmp	r3, #0
 801c448:	d006      	beq.n	801c458 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj+0x1e>
 801c44a:	687b      	ldr	r3, [r7, #4]
 801c44c:	6839      	ldr	r1, [r7, #0]
 801c44e:	4618      	mov	r0, r3
 801c450:	f000 fafe 	bl	801ca50 <_ZNSt16allocator_traitsISaI12sum_operatorEE8allocateERS1_j>
 801c454:	4603      	mov	r3, r0
 801c456:	e000      	b.n	801c45a <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj+0x20>
 801c458:	2300      	movs	r3, #0
      }
 801c45a:	4618      	mov	r0, r3
 801c45c:	3708      	adds	r7, #8
 801c45e:	46bd      	mov	sp, r7
 801c460:	bd80      	pop	{r7, pc}

0801c462 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801c462:	b590      	push	{r4, r7, lr}
 801c464:	b089      	sub	sp, #36	; 0x24
 801c466:	af02      	add	r7, sp, #8
 801c468:	60f8      	str	r0, [r7, #12]
 801c46a:	60b9      	str	r1, [r7, #8]
 801c46c:	607a      	str	r2, [r7, #4]
 801c46e:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801c470:	f88d 4000 	strb.w	r4, [sp]
 801c474:	683b      	ldr	r3, [r7, #0]
 801c476:	687a      	ldr	r2, [r7, #4]
 801c478:	68b9      	ldr	r1, [r7, #8]
 801c47a:	68f8      	ldr	r0, [r7, #12]
 801c47c:	f000 faf7 	bl	801ca6e <_ZNSt6vectorI12sum_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 801c480:	4603      	mov	r3, r0
      }
 801c482:	4618      	mov	r0, r3
 801c484:	371c      	adds	r7, #28
 801c486:	46bd      	mov	sp, r7
 801c488:	bd90      	pop	{r4, r7, pc}

0801c48a <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801c48a:	b480      	push	{r7}
 801c48c:	b083      	sub	sp, #12
 801c48e:	af00      	add	r7, sp, #0
 801c490:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801c492:	687b      	ldr	r3, [r7, #4]
 801c494:	4618      	mov	r0, r3
 801c496:	370c      	adds	r7, #12
 801c498:	46bd      	mov	sp, r7
 801c49a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c49e:	4770      	bx	lr

0801c4a0 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801c4a0:	b580      	push	{r7, lr}
 801c4a2:	b084      	sub	sp, #16
 801c4a4:	af00      	add	r7, sp, #0
 801c4a6:	6078      	str	r0, [r7, #4]
 801c4a8:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801c4aa:	687b      	ldr	r3, [r7, #4]
 801c4ac:	681a      	ldr	r2, [r3, #0]
 801c4ae:	683b      	ldr	r3, [r7, #0]
 801c4b0:	425b      	negs	r3, r3
 801c4b2:	4413      	add	r3, r2
 801c4b4:	60fb      	str	r3, [r7, #12]
 801c4b6:	f107 020c 	add.w	r2, r7, #12
 801c4ba:	f107 0308 	add.w	r3, r7, #8
 801c4be:	4611      	mov	r1, r2
 801c4c0:	4618      	mov	r0, r3
 801c4c2:	f7ff ff3f 	bl	801c344 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801c4c6:	68bb      	ldr	r3, [r7, #8]
 801c4c8:	4618      	mov	r0, r3
 801c4ca:	3710      	adds	r7, #16
 801c4cc:	46bd      	mov	sp, r7
 801c4ce:	bd80      	pop	{r7, pc}

0801c4d0 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 801c4d0:	b480      	push	{r7}
 801c4d2:	b083      	sub	sp, #12
 801c4d4:	af00      	add	r7, sp, #0
 801c4d6:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801c4d8:	687b      	ldr	r3, [r7, #4]
 801c4da:	681b      	ldr	r3, [r3, #0]
 801c4dc:	4618      	mov	r0, r3
 801c4de:	370c      	adds	r7, #12
 801c4e0:	46bd      	mov	sp, r7
 801c4e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c4e6:	4770      	bx	lr

0801c4e8 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801c4e8:	b590      	push	{r4, r7, lr}
 801c4ea:	b085      	sub	sp, #20
 801c4ec:	af00      	add	r7, sp, #0
 801c4ee:	60f8      	str	r0, [r7, #12]
 801c4f0:	60b9      	str	r1, [r7, #8]
 801c4f2:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801c4f4:	6878      	ldr	r0, [r7, #4]
 801c4f6:	f7ff fb18 	bl	801bb2a <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c4fa:	4603      	mov	r3, r0
 801c4fc:	681c      	ldr	r4, [r3, #0]
 801c4fe:	68bb      	ldr	r3, [r7, #8]
 801c500:	4619      	mov	r1, r3
 801c502:	2004      	movs	r0, #4
 801c504:	f7e4 fda9 	bl	800105a <_ZnwjPv>
 801c508:	4603      	mov	r3, r0
 801c50a:	601c      	str	r4, [r3, #0]
 801c50c:	bf00      	nop
 801c50e:	3714      	adds	r7, #20
 801c510:	46bd      	mov	sp, r7
 801c512:	bd90      	pop	{r4, r7, pc}

0801c514 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801c514:	b590      	push	{r4, r7, lr}
 801c516:	b087      	sub	sp, #28
 801c518:	af00      	add	r7, sp, #0
 801c51a:	60f8      	str	r0, [r7, #12]
 801c51c:	60b9      	str	r1, [r7, #8]
 801c51e:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801c520:	68f8      	ldr	r0, [r7, #12]
 801c522:	f000 fab6 	bl	801ca92 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801c526:	4604      	mov	r4, r0
 801c528:	68f8      	ldr	r0, [r7, #12]
 801c52a:	f000 fac3 	bl	801cab4 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801c52e:	4603      	mov	r3, r0
 801c530:	1ae2      	subs	r2, r4, r3
 801c532:	68bb      	ldr	r3, [r7, #8]
 801c534:	429a      	cmp	r2, r3
 801c536:	bf34      	ite	cc
 801c538:	2301      	movcc	r3, #1
 801c53a:	2300      	movcs	r3, #0
 801c53c:	b2db      	uxtb	r3, r3
 801c53e:	2b00      	cmp	r3, #0
 801c540:	d002      	beq.n	801c548 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801c542:	6878      	ldr	r0, [r7, #4]
 801c544:	f006 f879 	bl	802263a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801c548:	68f8      	ldr	r0, [r7, #12]
 801c54a:	f000 fab3 	bl	801cab4 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801c54e:	4604      	mov	r4, r0
 801c550:	68f8      	ldr	r0, [r7, #12]
 801c552:	f000 faaf 	bl	801cab4 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801c556:	4603      	mov	r3, r0
 801c558:	613b      	str	r3, [r7, #16]
 801c55a:	f107 0208 	add.w	r2, r7, #8
 801c55e:	f107 0310 	add.w	r3, r7, #16
 801c562:	4611      	mov	r1, r2
 801c564:	4618      	mov	r0, r3
 801c566:	f7f9 fa4c 	bl	8015a02 <_ZSt3maxIjERKT_S2_S2_>
 801c56a:	4603      	mov	r3, r0
 801c56c:	681b      	ldr	r3, [r3, #0]
 801c56e:	4423      	add	r3, r4
 801c570:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801c572:	68f8      	ldr	r0, [r7, #12]
 801c574:	f000 fa9e 	bl	801cab4 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801c578:	4602      	mov	r2, r0
 801c57a:	697b      	ldr	r3, [r7, #20]
 801c57c:	4293      	cmp	r3, r2
 801c57e:	d306      	bcc.n	801c58e <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801c580:	68f8      	ldr	r0, [r7, #12]
 801c582:	f000 fa86 	bl	801ca92 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801c586:	4602      	mov	r2, r0
 801c588:	697b      	ldr	r3, [r7, #20]
 801c58a:	4293      	cmp	r3, r2
 801c58c:	d904      	bls.n	801c598 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801c58e:	68f8      	ldr	r0, [r7, #12]
 801c590:	f000 fa7f 	bl	801ca92 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801c594:	4603      	mov	r3, r0
 801c596:	e000      	b.n	801c59a <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801c598:	697b      	ldr	r3, [r7, #20]
      }
 801c59a:	4618      	mov	r0, r3
 801c59c:	371c      	adds	r7, #28
 801c59e:	46bd      	mov	sp, r7
 801c5a0:	bd90      	pop	{r4, r7, pc}

0801c5a2 <_ZN9__gnu_cxxmiIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801c5a2:	b590      	push	{r4, r7, lr}
 801c5a4:	b083      	sub	sp, #12
 801c5a6:	af00      	add	r7, sp, #0
 801c5a8:	6078      	str	r0, [r7, #4]
 801c5aa:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801c5ac:	6878      	ldr	r0, [r7, #4]
 801c5ae:	f7ee f99e 	bl	800a8ee <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c5b2:	4603      	mov	r3, r0
 801c5b4:	681c      	ldr	r4, [r3, #0]
 801c5b6:	6838      	ldr	r0, [r7, #0]
 801c5b8:	f7ee f999 	bl	800a8ee <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c5bc:	4603      	mov	r3, r0
 801c5be:	681b      	ldr	r3, [r3, #0]
 801c5c0:	1ae3      	subs	r3, r4, r3
 801c5c2:	109b      	asrs	r3, r3, #2
 801c5c4:	4618      	mov	r0, r3
 801c5c6:	370c      	adds	r7, #12
 801c5c8:	46bd      	mov	sp, r7
 801c5ca:	bd90      	pop	{r4, r7, pc}

0801c5cc <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c5cc:	b580      	push	{r7, lr}
 801c5ce:	b082      	sub	sp, #8
 801c5d0:	af00      	add	r7, sp, #0
 801c5d2:	6078      	str	r0, [r7, #4]
 801c5d4:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c5d6:	683b      	ldr	r3, [r7, #0]
 801c5d8:	2b00      	cmp	r3, #0
 801c5da:	d006      	beq.n	801c5ea <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801c5dc:	687b      	ldr	r3, [r7, #4]
 801c5de:	6839      	ldr	r1, [r7, #0]
 801c5e0:	4618      	mov	r0, r3
 801c5e2:	f000 fa77 	bl	801cad4 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8allocateERS2_j>
 801c5e6:	4603      	mov	r3, r0
 801c5e8:	e000      	b.n	801c5ec <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj+0x20>
 801c5ea:	2300      	movs	r3, #0
      }
 801c5ec:	4618      	mov	r0, r3
 801c5ee:	3708      	adds	r7, #8
 801c5f0:	46bd      	mov	sp, r7
 801c5f2:	bd80      	pop	{r7, pc}

0801c5f4 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801c5f4:	b590      	push	{r4, r7, lr}
 801c5f6:	b089      	sub	sp, #36	; 0x24
 801c5f8:	af02      	add	r7, sp, #8
 801c5fa:	60f8      	str	r0, [r7, #12]
 801c5fc:	60b9      	str	r1, [r7, #8]
 801c5fe:	607a      	str	r2, [r7, #4]
 801c600:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801c602:	f88d 4000 	strb.w	r4, [sp]
 801c606:	683b      	ldr	r3, [r7, #0]
 801c608:	687a      	ldr	r2, [r7, #4]
 801c60a:	68b9      	ldr	r1, [r7, #8]
 801c60c:	68f8      	ldr	r0, [r7, #12]
 801c60e:	f000 fa70 	bl	801caf2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801c612:	4603      	mov	r3, r0
      }
 801c614:	4618      	mov	r0, r3
 801c616:	371c      	adds	r7, #28
 801c618:	46bd      	mov	sp, r7
 801c61a:	bd90      	pop	{r4, r7, pc}

0801c61c <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801c61c:	b580      	push	{r7, lr}
 801c61e:	b084      	sub	sp, #16
 801c620:	af00      	add	r7, sp, #0
 801c622:	6078      	str	r0, [r7, #4]
 801c624:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801c626:	687b      	ldr	r3, [r7, #4]
 801c628:	681a      	ldr	r2, [r3, #0]
 801c62a:	683b      	ldr	r3, [r7, #0]
 801c62c:	009b      	lsls	r3, r3, #2
 801c62e:	425b      	negs	r3, r3
 801c630:	4413      	add	r3, r2
 801c632:	60fb      	str	r3, [r7, #12]
 801c634:	f107 020c 	add.w	r2, r7, #12
 801c638:	f107 0308 	add.w	r3, r7, #8
 801c63c:	4611      	mov	r1, r2
 801c63e:	4618      	mov	r0, r3
 801c640:	f7ee f945 	bl	800a8ce <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801c644:	68bb      	ldr	r3, [r7, #8]
 801c646:	4618      	mov	r0, r3
 801c648:	3710      	adds	r7, #16
 801c64a:	46bd      	mov	sp, r7
 801c64c:	bd80      	pop	{r7, pc}

0801c64e <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801c64e:	b590      	push	{r4, r7, lr}
 801c650:	b085      	sub	sp, #20
 801c652:	af00      	add	r7, sp, #0
 801c654:	60f8      	str	r0, [r7, #12]
 801c656:	60b9      	str	r1, [r7, #8]
 801c658:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801c65a:	6878      	ldr	r0, [r7, #4]
 801c65c:	f7ff fb26 	bl	801bcac <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c660:	4603      	mov	r3, r0
 801c662:	681c      	ldr	r4, [r3, #0]
 801c664:	68bb      	ldr	r3, [r7, #8]
 801c666:	4619      	mov	r1, r3
 801c668:	2004      	movs	r0, #4
 801c66a:	f7e4 fcf6 	bl	800105a <_ZnwjPv>
 801c66e:	4603      	mov	r3, r0
 801c670:	601c      	str	r4, [r3, #0]
 801c672:	bf00      	nop
 801c674:	3714      	adds	r7, #20
 801c676:	46bd      	mov	sp, r7
 801c678:	bd90      	pop	{r4, r7, pc}

0801c67a <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801c67a:	b590      	push	{r4, r7, lr}
 801c67c:	b087      	sub	sp, #28
 801c67e:	af00      	add	r7, sp, #0
 801c680:	60f8      	str	r0, [r7, #12]
 801c682:	60b9      	str	r1, [r7, #8]
 801c684:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801c686:	68f8      	ldr	r0, [r7, #12]
 801c688:	f000 fa45 	bl	801cb16 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801c68c:	4604      	mov	r4, r0
 801c68e:	68f8      	ldr	r0, [r7, #12]
 801c690:	f000 fa52 	bl	801cb38 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801c694:	4603      	mov	r3, r0
 801c696:	1ae2      	subs	r2, r4, r3
 801c698:	68bb      	ldr	r3, [r7, #8]
 801c69a:	429a      	cmp	r2, r3
 801c69c:	bf34      	ite	cc
 801c69e:	2301      	movcc	r3, #1
 801c6a0:	2300      	movcs	r3, #0
 801c6a2:	b2db      	uxtb	r3, r3
 801c6a4:	2b00      	cmp	r3, #0
 801c6a6:	d002      	beq.n	801c6ae <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801c6a8:	6878      	ldr	r0, [r7, #4]
 801c6aa:	f005 ffc6 	bl	802263a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801c6ae:	68f8      	ldr	r0, [r7, #12]
 801c6b0:	f000 fa42 	bl	801cb38 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801c6b4:	4604      	mov	r4, r0
 801c6b6:	68f8      	ldr	r0, [r7, #12]
 801c6b8:	f000 fa3e 	bl	801cb38 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801c6bc:	4603      	mov	r3, r0
 801c6be:	613b      	str	r3, [r7, #16]
 801c6c0:	f107 0208 	add.w	r2, r7, #8
 801c6c4:	f107 0310 	add.w	r3, r7, #16
 801c6c8:	4611      	mov	r1, r2
 801c6ca:	4618      	mov	r0, r3
 801c6cc:	f7f9 f999 	bl	8015a02 <_ZSt3maxIjERKT_S2_S2_>
 801c6d0:	4603      	mov	r3, r0
 801c6d2:	681b      	ldr	r3, [r3, #0]
 801c6d4:	4423      	add	r3, r4
 801c6d6:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801c6d8:	68f8      	ldr	r0, [r7, #12]
 801c6da:	f000 fa2d 	bl	801cb38 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801c6de:	4602      	mov	r2, r0
 801c6e0:	697b      	ldr	r3, [r7, #20]
 801c6e2:	4293      	cmp	r3, r2
 801c6e4:	d306      	bcc.n	801c6f4 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801c6e6:	68f8      	ldr	r0, [r7, #12]
 801c6e8:	f000 fa15 	bl	801cb16 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801c6ec:	4602      	mov	r2, r0
 801c6ee:	697b      	ldr	r3, [r7, #20]
 801c6f0:	4293      	cmp	r3, r2
 801c6f2:	d904      	bls.n	801c6fe <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801c6f4:	68f8      	ldr	r0, [r7, #12]
 801c6f6:	f000 fa0e 	bl	801cb16 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801c6fa:	4603      	mov	r3, r0
 801c6fc:	e000      	b.n	801c700 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801c6fe:	697b      	ldr	r3, [r7, #20]
      }
 801c700:	4618      	mov	r0, r3
 801c702:	371c      	adds	r7, #28
 801c704:	46bd      	mov	sp, r7
 801c706:	bd90      	pop	{r4, r7, pc}

0801c708 <_ZN9__gnu_cxxmiIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801c708:	b590      	push	{r4, r7, lr}
 801c70a:	b083      	sub	sp, #12
 801c70c:	af00      	add	r7, sp, #0
 801c70e:	6078      	str	r0, [r7, #4]
 801c710:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801c712:	6878      	ldr	r0, [r7, #4]
 801c714:	f7ee f944 	bl	800a9a0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c718:	4603      	mov	r3, r0
 801c71a:	681c      	ldr	r4, [r3, #0]
 801c71c:	6838      	ldr	r0, [r7, #0]
 801c71e:	f7ee f93f 	bl	800a9a0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c722:	4603      	mov	r3, r0
 801c724:	681b      	ldr	r3, [r3, #0]
 801c726:	1ae3      	subs	r3, r4, r3
 801c728:	109b      	asrs	r3, r3, #2
 801c72a:	4618      	mov	r0, r3
 801c72c:	370c      	adds	r7, #12
 801c72e:	46bd      	mov	sp, r7
 801c730:	bd90      	pop	{r4, r7, pc}

0801c732 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c732:	b580      	push	{r7, lr}
 801c734:	b082      	sub	sp, #8
 801c736:	af00      	add	r7, sp, #0
 801c738:	6078      	str	r0, [r7, #4]
 801c73a:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c73c:	683b      	ldr	r3, [r7, #0]
 801c73e:	2b00      	cmp	r3, #0
 801c740:	d006      	beq.n	801c750 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801c742:	687b      	ldr	r3, [r7, #4]
 801c744:	6839      	ldr	r1, [r7, #0]
 801c746:	4618      	mov	r0, r3
 801c748:	f000 fa06 	bl	801cb58 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8allocateERS2_j>
 801c74c:	4603      	mov	r3, r0
 801c74e:	e000      	b.n	801c752 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj+0x20>
 801c750:	2300      	movs	r3, #0
      }
 801c752:	4618      	mov	r0, r3
 801c754:	3708      	adds	r7, #8
 801c756:	46bd      	mov	sp, r7
 801c758:	bd80      	pop	{r7, pc}

0801c75a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801c75a:	b590      	push	{r4, r7, lr}
 801c75c:	b089      	sub	sp, #36	; 0x24
 801c75e:	af02      	add	r7, sp, #8
 801c760:	60f8      	str	r0, [r7, #12]
 801c762:	60b9      	str	r1, [r7, #8]
 801c764:	607a      	str	r2, [r7, #4]
 801c766:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801c768:	f88d 4000 	strb.w	r4, [sp]
 801c76c:	683b      	ldr	r3, [r7, #0]
 801c76e:	687a      	ldr	r2, [r7, #4]
 801c770:	68b9      	ldr	r1, [r7, #8]
 801c772:	68f8      	ldr	r0, [r7, #12]
 801c774:	f000 f9ff 	bl	801cb76 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801c778:	4603      	mov	r3, r0
      }
 801c77a:	4618      	mov	r0, r3
 801c77c:	371c      	adds	r7, #28
 801c77e:	46bd      	mov	sp, r7
 801c780:	bd90      	pop	{r4, r7, pc}

0801c782 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801c782:	b580      	push	{r7, lr}
 801c784:	b084      	sub	sp, #16
 801c786:	af00      	add	r7, sp, #0
 801c788:	6078      	str	r0, [r7, #4]
 801c78a:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801c78c:	687b      	ldr	r3, [r7, #4]
 801c78e:	681a      	ldr	r2, [r3, #0]
 801c790:	683b      	ldr	r3, [r7, #0]
 801c792:	009b      	lsls	r3, r3, #2
 801c794:	425b      	negs	r3, r3
 801c796:	4413      	add	r3, r2
 801c798:	60fb      	str	r3, [r7, #12]
 801c79a:	f107 020c 	add.w	r2, r7, #12
 801c79e:	f107 0308 	add.w	r3, r7, #8
 801c7a2:	4611      	mov	r1, r2
 801c7a4:	4618      	mov	r0, r3
 801c7a6:	f7ee f8eb 	bl	800a980 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801c7aa:	68bb      	ldr	r3, [r7, #8]
 801c7ac:	4618      	mov	r0, r3
 801c7ae:	3710      	adds	r7, #16
 801c7b0:	46bd      	mov	sp, r7
 801c7b2:	bd80      	pop	{r7, pc}

0801c7b4 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801c7b4:	b590      	push	{r4, r7, lr}
 801c7b6:	b085      	sub	sp, #20
 801c7b8:	af00      	add	r7, sp, #0
 801c7ba:	60f8      	str	r0, [r7, #12]
 801c7bc:	60b9      	str	r1, [r7, #8]
 801c7be:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801c7c0:	6878      	ldr	r0, [r7, #4]
 801c7c2:	f7ff fb33 	bl	801be2c <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c7c6:	4603      	mov	r3, r0
 801c7c8:	681c      	ldr	r4, [r3, #0]
 801c7ca:	68bb      	ldr	r3, [r7, #8]
 801c7cc:	4619      	mov	r1, r3
 801c7ce:	2004      	movs	r0, #4
 801c7d0:	f7e4 fc43 	bl	800105a <_ZnwjPv>
 801c7d4:	4603      	mov	r3, r0
 801c7d6:	601c      	str	r4, [r3, #0]
 801c7d8:	bf00      	nop
 801c7da:	3714      	adds	r7, #20
 801c7dc:	46bd      	mov	sp, r7
 801c7de:	bd90      	pop	{r4, r7, pc}

0801c7e0 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801c7e0:	b590      	push	{r4, r7, lr}
 801c7e2:	b087      	sub	sp, #28
 801c7e4:	af00      	add	r7, sp, #0
 801c7e6:	60f8      	str	r0, [r7, #12]
 801c7e8:	60b9      	str	r1, [r7, #8]
 801c7ea:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801c7ec:	68f8      	ldr	r0, [r7, #12]
 801c7ee:	f000 f9d4 	bl	801cb9a <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801c7f2:	4604      	mov	r4, r0
 801c7f4:	68f8      	ldr	r0, [r7, #12]
 801c7f6:	f000 f9e1 	bl	801cbbc <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801c7fa:	4603      	mov	r3, r0
 801c7fc:	1ae2      	subs	r2, r4, r3
 801c7fe:	68bb      	ldr	r3, [r7, #8]
 801c800:	429a      	cmp	r2, r3
 801c802:	bf34      	ite	cc
 801c804:	2301      	movcc	r3, #1
 801c806:	2300      	movcs	r3, #0
 801c808:	b2db      	uxtb	r3, r3
 801c80a:	2b00      	cmp	r3, #0
 801c80c:	d002      	beq.n	801c814 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801c80e:	6878      	ldr	r0, [r7, #4]
 801c810:	f005 ff13 	bl	802263a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801c814:	68f8      	ldr	r0, [r7, #12]
 801c816:	f000 f9d1 	bl	801cbbc <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801c81a:	4604      	mov	r4, r0
 801c81c:	68f8      	ldr	r0, [r7, #12]
 801c81e:	f000 f9cd 	bl	801cbbc <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801c822:	4603      	mov	r3, r0
 801c824:	613b      	str	r3, [r7, #16]
 801c826:	f107 0208 	add.w	r2, r7, #8
 801c82a:	f107 0310 	add.w	r3, r7, #16
 801c82e:	4611      	mov	r1, r2
 801c830:	4618      	mov	r0, r3
 801c832:	f7f9 f8e6 	bl	8015a02 <_ZSt3maxIjERKT_S2_S2_>
 801c836:	4603      	mov	r3, r0
 801c838:	681b      	ldr	r3, [r3, #0]
 801c83a:	4423      	add	r3, r4
 801c83c:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801c83e:	68f8      	ldr	r0, [r7, #12]
 801c840:	f000 f9bc 	bl	801cbbc <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801c844:	4602      	mov	r2, r0
 801c846:	697b      	ldr	r3, [r7, #20]
 801c848:	4293      	cmp	r3, r2
 801c84a:	d306      	bcc.n	801c85a <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801c84c:	68f8      	ldr	r0, [r7, #12]
 801c84e:	f000 f9a4 	bl	801cb9a <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801c852:	4602      	mov	r2, r0
 801c854:	697b      	ldr	r3, [r7, #20]
 801c856:	4293      	cmp	r3, r2
 801c858:	d904      	bls.n	801c864 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801c85a:	68f8      	ldr	r0, [r7, #12]
 801c85c:	f000 f99d 	bl	801cb9a <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801c860:	4603      	mov	r3, r0
 801c862:	e000      	b.n	801c866 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801c864:	697b      	ldr	r3, [r7, #20]
      }
 801c866:	4618      	mov	r0, r3
 801c868:	371c      	adds	r7, #28
 801c86a:	46bd      	mov	sp, r7
 801c86c:	bd90      	pop	{r4, r7, pc}

0801c86e <_ZN9__gnu_cxxmiIPP14And_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801c86e:	b590      	push	{r4, r7, lr}
 801c870:	b083      	sub	sp, #12
 801c872:	af00      	add	r7, sp, #0
 801c874:	6078      	str	r0, [r7, #4]
 801c876:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801c878:	6878      	ldr	r0, [r7, #4]
 801c87a:	f7ee f8ea 	bl	800aa52 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c87e:	4603      	mov	r3, r0
 801c880:	681c      	ldr	r4, [r3, #0]
 801c882:	6838      	ldr	r0, [r7, #0]
 801c884:	f7ee f8e5 	bl	800aa52 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c888:	4603      	mov	r3, r0
 801c88a:	681b      	ldr	r3, [r3, #0]
 801c88c:	1ae3      	subs	r3, r4, r3
 801c88e:	109b      	asrs	r3, r3, #2
 801c890:	4618      	mov	r0, r3
 801c892:	370c      	adds	r7, #12
 801c894:	46bd      	mov	sp, r7
 801c896:	bd90      	pop	{r4, r7, pc}

0801c898 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c898:	b580      	push	{r7, lr}
 801c89a:	b082      	sub	sp, #8
 801c89c:	af00      	add	r7, sp, #0
 801c89e:	6078      	str	r0, [r7, #4]
 801c8a0:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c8a2:	683b      	ldr	r3, [r7, #0]
 801c8a4:	2b00      	cmp	r3, #0
 801c8a6:	d006      	beq.n	801c8b6 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801c8a8:	687b      	ldr	r3, [r7, #4]
 801c8aa:	6839      	ldr	r1, [r7, #0]
 801c8ac:	4618      	mov	r0, r3
 801c8ae:	f000 f995 	bl	801cbdc <_ZNSt16allocator_traitsISaIP14And_expressionEE8allocateERS2_j>
 801c8b2:	4603      	mov	r3, r0
 801c8b4:	e000      	b.n	801c8b8 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj+0x20>
 801c8b6:	2300      	movs	r3, #0
      }
 801c8b8:	4618      	mov	r0, r3
 801c8ba:	3708      	adds	r7, #8
 801c8bc:	46bd      	mov	sp, r7
 801c8be:	bd80      	pop	{r7, pc}

0801c8c0 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801c8c0:	b590      	push	{r4, r7, lr}
 801c8c2:	b089      	sub	sp, #36	; 0x24
 801c8c4:	af02      	add	r7, sp, #8
 801c8c6:	60f8      	str	r0, [r7, #12]
 801c8c8:	60b9      	str	r1, [r7, #8]
 801c8ca:	607a      	str	r2, [r7, #4]
 801c8cc:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801c8ce:	f88d 4000 	strb.w	r4, [sp]
 801c8d2:	683b      	ldr	r3, [r7, #0]
 801c8d4:	687a      	ldr	r2, [r7, #4]
 801c8d6:	68b9      	ldr	r1, [r7, #8]
 801c8d8:	68f8      	ldr	r0, [r7, #12]
 801c8da:	f000 f98e 	bl	801cbfa <_ZNSt6vectorIP14And_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801c8de:	4603      	mov	r3, r0
      }
 801c8e0:	4618      	mov	r0, r3
 801c8e2:	371c      	adds	r7, #28
 801c8e4:	46bd      	mov	sp, r7
 801c8e6:	bd90      	pop	{r4, r7, pc}

0801c8e8 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801c8e8:	b580      	push	{r7, lr}
 801c8ea:	b084      	sub	sp, #16
 801c8ec:	af00      	add	r7, sp, #0
 801c8ee:	6078      	str	r0, [r7, #4]
 801c8f0:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801c8f2:	687b      	ldr	r3, [r7, #4]
 801c8f4:	681a      	ldr	r2, [r3, #0]
 801c8f6:	683b      	ldr	r3, [r7, #0]
 801c8f8:	009b      	lsls	r3, r3, #2
 801c8fa:	425b      	negs	r3, r3
 801c8fc:	4413      	add	r3, r2
 801c8fe:	60fb      	str	r3, [r7, #12]
 801c900:	f107 020c 	add.w	r2, r7, #12
 801c904:	f107 0308 	add.w	r3, r7, #8
 801c908:	4611      	mov	r1, r2
 801c90a:	4618      	mov	r0, r3
 801c90c:	f7ee f891 	bl	800aa32 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801c910:	68bb      	ldr	r3, [r7, #8]
 801c912:	4618      	mov	r0, r3
 801c914:	3710      	adds	r7, #16
 801c916:	46bd      	mov	sp, r7
 801c918:	bd80      	pop	{r7, pc}

0801c91a <_ZSt11__addressofIP10ExpressionEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801c91a:	b480      	push	{r7}
 801c91c:	b083      	sub	sp, #12
 801c91e:	af00      	add	r7, sp, #0
 801c920:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 801c922:	687b      	ldr	r3, [r7, #4]
 801c924:	4618      	mov	r0, r3
 801c926:	370c      	adds	r7, #12
 801c928:	46bd      	mov	sp, r7
 801c92a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c92e:	4770      	bx	lr

0801c930 <_ZSt11__addressofIP17Primal_expressionEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801c930:	b480      	push	{r7}
 801c932:	b083      	sub	sp, #12
 801c934:	af00      	add	r7, sp, #0
 801c936:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 801c938:	687b      	ldr	r3, [r7, #4]
 801c93a:	4618      	mov	r0, r3
 801c93c:	370c      	adds	r7, #12
 801c93e:	46bd      	mov	sp, r7
 801c940:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c944:	4770      	bx	lr

0801c946 <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801c946:	b580      	push	{r7, lr}
 801c948:	b082      	sub	sp, #8
 801c94a:	af00      	add	r7, sp, #0
 801c94c:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801c94e:	687b      	ldr	r3, [r7, #4]
 801c950:	4618      	mov	r0, r3
 801c952:	f000 f97e 	bl	801cc52 <_ZNKSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801c956:	4603      	mov	r3, r0
 801c958:	4618      	mov	r0, r3
 801c95a:	f000 f960 	bl	801cc1e <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_max_sizeERKS1_>
 801c95e:	4603      	mov	r3, r0
 801c960:	4618      	mov	r0, r3
 801c962:	3708      	adds	r7, #8
 801c964:	46bd      	mov	sp, r7
 801c966:	bd80      	pop	{r7, pc}

0801c968 <_ZNSt16allocator_traitsISaI13mult_operatorEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 801c968:	b580      	push	{r7, lr}
 801c96a:	b082      	sub	sp, #8
 801c96c:	af00      	add	r7, sp, #0
 801c96e:	6078      	str	r0, [r7, #4]
 801c970:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801c972:	2200      	movs	r2, #0
 801c974:	6839      	ldr	r1, [r7, #0]
 801c976:	6878      	ldr	r0, [r7, #4]
 801c978:	f000 f976 	bl	801cc68 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv>
 801c97c:	4603      	mov	r3, r0
 801c97e:	4618      	mov	r0, r3
 801c980:	3708      	adds	r7, #8
 801c982:	46bd      	mov	sp, r7
 801c984:	bd80      	pop	{r7, pc}

0801c986 <_ZNSt6vectorI13mult_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801c986:	b580      	push	{r7, lr}
 801c988:	b084      	sub	sp, #16
 801c98a:	af00      	add	r7, sp, #0
 801c98c:	60f8      	str	r0, [r7, #12]
 801c98e:	60b9      	str	r1, [r7, #8]
 801c990:	607a      	str	r2, [r7, #4]
 801c992:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801c994:	683b      	ldr	r3, [r7, #0]
 801c996:	687a      	ldr	r2, [r7, #4]
 801c998:	68b9      	ldr	r1, [r7, #8]
 801c99a:	68f8      	ldr	r0, [r7, #12]
 801c99c:	f000 f981 	bl	801cca2 <_ZSt12__relocate_aIP13mult_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>
 801c9a0:	4603      	mov	r3, r0
      }
 801c9a2:	4618      	mov	r0, r3
 801c9a4:	3710      	adds	r7, #16
 801c9a6:	46bd      	mov	sp, r7
 801c9a8:	bd80      	pop	{r7, pc}

0801c9aa <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801c9aa:	b580      	push	{r7, lr}
 801c9ac:	b082      	sub	sp, #8
 801c9ae:	af00      	add	r7, sp, #0
 801c9b0:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801c9b2:	687b      	ldr	r3, [r7, #4]
 801c9b4:	4618      	mov	r0, r3
 801c9b6:	f000 f9ab 	bl	801cd10 <_ZNKSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c9ba:	4603      	mov	r3, r0
 801c9bc:	4618      	mov	r0, r3
 801c9be:	f000 f98d 	bl	801ccdc <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801c9c2:	4603      	mov	r3, r0
 801c9c4:	4618      	mov	r0, r3
 801c9c6:	3708      	adds	r7, #8
 801c9c8:	46bd      	mov	sp, r7
 801c9ca:	bd80      	pop	{r7, pc}

0801c9cc <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801c9cc:	b480      	push	{r7}
 801c9ce:	b083      	sub	sp, #12
 801c9d0:	af00      	add	r7, sp, #0
 801c9d2:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801c9d4:	687b      	ldr	r3, [r7, #4]
 801c9d6:	685a      	ldr	r2, [r3, #4]
 801c9d8:	687b      	ldr	r3, [r7, #4]
 801c9da:	681b      	ldr	r3, [r3, #0]
 801c9dc:	1ad3      	subs	r3, r2, r3
 801c9de:	109b      	asrs	r3, r3, #2
 801c9e0:	4618      	mov	r0, r3
 801c9e2:	370c      	adds	r7, #12
 801c9e4:	46bd      	mov	sp, r7
 801c9e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c9ea:	4770      	bx	lr

0801c9ec <_ZNSt16allocator_traitsISaIP16Power_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801c9ec:	b580      	push	{r7, lr}
 801c9ee:	b082      	sub	sp, #8
 801c9f0:	af00      	add	r7, sp, #0
 801c9f2:	6078      	str	r0, [r7, #4]
 801c9f4:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801c9f6:	2200      	movs	r2, #0
 801c9f8:	6839      	ldr	r1, [r7, #0]
 801c9fa:	6878      	ldr	r0, [r7, #4]
 801c9fc:	f000 f993 	bl	801cd26 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv>
 801ca00:	4603      	mov	r3, r0
 801ca02:	4618      	mov	r0, r3
 801ca04:	3708      	adds	r7, #8
 801ca06:	46bd      	mov	sp, r7
 801ca08:	bd80      	pop	{r7, pc}

0801ca0a <_ZNSt6vectorIP16Power_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801ca0a:	b580      	push	{r7, lr}
 801ca0c:	b084      	sub	sp, #16
 801ca0e:	af00      	add	r7, sp, #0
 801ca10:	60f8      	str	r0, [r7, #12]
 801ca12:	60b9      	str	r1, [r7, #8]
 801ca14:	607a      	str	r2, [r7, #4]
 801ca16:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801ca18:	683b      	ldr	r3, [r7, #0]
 801ca1a:	687a      	ldr	r2, [r7, #4]
 801ca1c:	68b9      	ldr	r1, [r7, #8]
 801ca1e:	68f8      	ldr	r0, [r7, #12]
 801ca20:	f000 f9a0 	bl	801cd64 <_ZSt12__relocate_aIPP16Power_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801ca24:	4603      	mov	r3, r0
      }
 801ca26:	4618      	mov	r0, r3
 801ca28:	3710      	adds	r7, #16
 801ca2a:	46bd      	mov	sp, r7
 801ca2c:	bd80      	pop	{r7, pc}

0801ca2e <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801ca2e:	b580      	push	{r7, lr}
 801ca30:	b082      	sub	sp, #8
 801ca32:	af00      	add	r7, sp, #0
 801ca34:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801ca36:	687b      	ldr	r3, [r7, #4]
 801ca38:	4618      	mov	r0, r3
 801ca3a:	f000 f9ca 	bl	801cdd2 <_ZNKSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801ca3e:	4603      	mov	r3, r0
 801ca40:	4618      	mov	r0, r3
 801ca42:	f000 f9ac 	bl	801cd9e <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_max_sizeERKS1_>
 801ca46:	4603      	mov	r3, r0
 801ca48:	4618      	mov	r0, r3
 801ca4a:	3708      	adds	r7, #8
 801ca4c:	46bd      	mov	sp, r7
 801ca4e:	bd80      	pop	{r7, pc}

0801ca50 <_ZNSt16allocator_traitsISaI12sum_operatorEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 801ca50:	b580      	push	{r7, lr}
 801ca52:	b082      	sub	sp, #8
 801ca54:	af00      	add	r7, sp, #0
 801ca56:	6078      	str	r0, [r7, #4]
 801ca58:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801ca5a:	2200      	movs	r2, #0
 801ca5c:	6839      	ldr	r1, [r7, #0]
 801ca5e:	6878      	ldr	r0, [r7, #4]
 801ca60:	f000 f9c2 	bl	801cde8 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv>
 801ca64:	4603      	mov	r3, r0
 801ca66:	4618      	mov	r0, r3
 801ca68:	3708      	adds	r7, #8
 801ca6a:	46bd      	mov	sp, r7
 801ca6c:	bd80      	pop	{r7, pc}

0801ca6e <_ZNSt6vectorI12sum_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801ca6e:	b580      	push	{r7, lr}
 801ca70:	b084      	sub	sp, #16
 801ca72:	af00      	add	r7, sp, #0
 801ca74:	60f8      	str	r0, [r7, #12]
 801ca76:	60b9      	str	r1, [r7, #8]
 801ca78:	607a      	str	r2, [r7, #4]
 801ca7a:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801ca7c:	683b      	ldr	r3, [r7, #0]
 801ca7e:	687a      	ldr	r2, [r7, #4]
 801ca80:	68b9      	ldr	r1, [r7, #8]
 801ca82:	68f8      	ldr	r0, [r7, #12]
 801ca84:	f000 f9cd 	bl	801ce22 <_ZSt12__relocate_aIP12sum_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>
 801ca88:	4603      	mov	r3, r0
      }
 801ca8a:	4618      	mov	r0, r3
 801ca8c:	3710      	adds	r7, #16
 801ca8e:	46bd      	mov	sp, r7
 801ca90:	bd80      	pop	{r7, pc}

0801ca92 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801ca92:	b580      	push	{r7, lr}
 801ca94:	b082      	sub	sp, #8
 801ca96:	af00      	add	r7, sp, #0
 801ca98:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801ca9a:	687b      	ldr	r3, [r7, #4]
 801ca9c:	4618      	mov	r0, r3
 801ca9e:	f000 f9f7 	bl	801ce90 <_ZNKSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801caa2:	4603      	mov	r3, r0
 801caa4:	4618      	mov	r0, r3
 801caa6:	f000 f9d9 	bl	801ce5c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801caaa:	4603      	mov	r3, r0
 801caac:	4618      	mov	r0, r3
 801caae:	3708      	adds	r7, #8
 801cab0:	46bd      	mov	sp, r7
 801cab2:	bd80      	pop	{r7, pc}

0801cab4 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801cab4:	b480      	push	{r7}
 801cab6:	b083      	sub	sp, #12
 801cab8:	af00      	add	r7, sp, #0
 801caba:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801cabc:	687b      	ldr	r3, [r7, #4]
 801cabe:	685a      	ldr	r2, [r3, #4]
 801cac0:	687b      	ldr	r3, [r7, #4]
 801cac2:	681b      	ldr	r3, [r3, #0]
 801cac4:	1ad3      	subs	r3, r2, r3
 801cac6:	109b      	asrs	r3, r3, #2
 801cac8:	4618      	mov	r0, r3
 801caca:	370c      	adds	r7, #12
 801cacc:	46bd      	mov	sp, r7
 801cace:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cad2:	4770      	bx	lr

0801cad4 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801cad4:	b580      	push	{r7, lr}
 801cad6:	b082      	sub	sp, #8
 801cad8:	af00      	add	r7, sp, #0
 801cada:	6078      	str	r0, [r7, #4]
 801cadc:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801cade:	2200      	movs	r2, #0
 801cae0:	6839      	ldr	r1, [r7, #0]
 801cae2:	6878      	ldr	r0, [r7, #4]
 801cae4:	f000 f9df 	bl	801cea6 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv>
 801cae8:	4603      	mov	r3, r0
 801caea:	4618      	mov	r0, r3
 801caec:	3708      	adds	r7, #8
 801caee:	46bd      	mov	sp, r7
 801caf0:	bd80      	pop	{r7, pc}

0801caf2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801caf2:	b580      	push	{r7, lr}
 801caf4:	b084      	sub	sp, #16
 801caf6:	af00      	add	r7, sp, #0
 801caf8:	60f8      	str	r0, [r7, #12]
 801cafa:	60b9      	str	r1, [r7, #8]
 801cafc:	607a      	str	r2, [r7, #4]
 801cafe:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801cb00:	683b      	ldr	r3, [r7, #0]
 801cb02:	687a      	ldr	r2, [r7, #4]
 801cb04:	68b9      	ldr	r1, [r7, #8]
 801cb06:	68f8      	ldr	r0, [r7, #12]
 801cb08:	f000 f9ec 	bl	801cee4 <_ZSt12__relocate_aIPP19Multiply_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801cb0c:	4603      	mov	r3, r0
      }
 801cb0e:	4618      	mov	r0, r3
 801cb10:	3710      	adds	r7, #16
 801cb12:	46bd      	mov	sp, r7
 801cb14:	bd80      	pop	{r7, pc}

0801cb16 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801cb16:	b580      	push	{r7, lr}
 801cb18:	b082      	sub	sp, #8
 801cb1a:	af00      	add	r7, sp, #0
 801cb1c:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801cb1e:	687b      	ldr	r3, [r7, #4]
 801cb20:	4618      	mov	r0, r3
 801cb22:	f000 fa16 	bl	801cf52 <_ZNKSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801cb26:	4603      	mov	r3, r0
 801cb28:	4618      	mov	r0, r3
 801cb2a:	f000 f9f8 	bl	801cf1e <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801cb2e:	4603      	mov	r3, r0
 801cb30:	4618      	mov	r0, r3
 801cb32:	3708      	adds	r7, #8
 801cb34:	46bd      	mov	sp, r7
 801cb36:	bd80      	pop	{r7, pc}

0801cb38 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801cb38:	b480      	push	{r7}
 801cb3a:	b083      	sub	sp, #12
 801cb3c:	af00      	add	r7, sp, #0
 801cb3e:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801cb40:	687b      	ldr	r3, [r7, #4]
 801cb42:	685a      	ldr	r2, [r3, #4]
 801cb44:	687b      	ldr	r3, [r7, #4]
 801cb46:	681b      	ldr	r3, [r3, #0]
 801cb48:	1ad3      	subs	r3, r2, r3
 801cb4a:	109b      	asrs	r3, r3, #2
 801cb4c:	4618      	mov	r0, r3
 801cb4e:	370c      	adds	r7, #12
 801cb50:	46bd      	mov	sp, r7
 801cb52:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cb56:	4770      	bx	lr

0801cb58 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801cb58:	b580      	push	{r7, lr}
 801cb5a:	b082      	sub	sp, #8
 801cb5c:	af00      	add	r7, sp, #0
 801cb5e:	6078      	str	r0, [r7, #4]
 801cb60:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801cb62:	2200      	movs	r2, #0
 801cb64:	6839      	ldr	r1, [r7, #0]
 801cb66:	6878      	ldr	r0, [r7, #4]
 801cb68:	f000 f9fe 	bl	801cf68 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv>
 801cb6c:	4603      	mov	r3, r0
 801cb6e:	4618      	mov	r0, r3
 801cb70:	3708      	adds	r7, #8
 801cb72:	46bd      	mov	sp, r7
 801cb74:	bd80      	pop	{r7, pc}

0801cb76 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801cb76:	b580      	push	{r7, lr}
 801cb78:	b084      	sub	sp, #16
 801cb7a:	af00      	add	r7, sp, #0
 801cb7c:	60f8      	str	r0, [r7, #12]
 801cb7e:	60b9      	str	r1, [r7, #8]
 801cb80:	607a      	str	r2, [r7, #4]
 801cb82:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801cb84:	683b      	ldr	r3, [r7, #0]
 801cb86:	687a      	ldr	r2, [r7, #4]
 801cb88:	68b9      	ldr	r1, [r7, #8]
 801cb8a:	68f8      	ldr	r0, [r7, #12]
 801cb8c:	f000 fa0b 	bl	801cfa6 <_ZSt12__relocate_aIPP18Compare_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801cb90:	4603      	mov	r3, r0
      }
 801cb92:	4618      	mov	r0, r3
 801cb94:	3710      	adds	r7, #16
 801cb96:	46bd      	mov	sp, r7
 801cb98:	bd80      	pop	{r7, pc}

0801cb9a <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801cb9a:	b580      	push	{r7, lr}
 801cb9c:	b082      	sub	sp, #8
 801cb9e:	af00      	add	r7, sp, #0
 801cba0:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801cba2:	687b      	ldr	r3, [r7, #4]
 801cba4:	4618      	mov	r0, r3
 801cba6:	f000 fa35 	bl	801d014 <_ZNKSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801cbaa:	4603      	mov	r3, r0
 801cbac:	4618      	mov	r0, r3
 801cbae:	f000 fa17 	bl	801cfe0 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801cbb2:	4603      	mov	r3, r0
 801cbb4:	4618      	mov	r0, r3
 801cbb6:	3708      	adds	r7, #8
 801cbb8:	46bd      	mov	sp, r7
 801cbba:	bd80      	pop	{r7, pc}

0801cbbc <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801cbbc:	b480      	push	{r7}
 801cbbe:	b083      	sub	sp, #12
 801cbc0:	af00      	add	r7, sp, #0
 801cbc2:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801cbc4:	687b      	ldr	r3, [r7, #4]
 801cbc6:	685a      	ldr	r2, [r3, #4]
 801cbc8:	687b      	ldr	r3, [r7, #4]
 801cbca:	681b      	ldr	r3, [r3, #0]
 801cbcc:	1ad3      	subs	r3, r2, r3
 801cbce:	109b      	asrs	r3, r3, #2
 801cbd0:	4618      	mov	r0, r3
 801cbd2:	370c      	adds	r7, #12
 801cbd4:	46bd      	mov	sp, r7
 801cbd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cbda:	4770      	bx	lr

0801cbdc <_ZNSt16allocator_traitsISaIP14And_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801cbdc:	b580      	push	{r7, lr}
 801cbde:	b082      	sub	sp, #8
 801cbe0:	af00      	add	r7, sp, #0
 801cbe2:	6078      	str	r0, [r7, #4]
 801cbe4:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801cbe6:	2200      	movs	r2, #0
 801cbe8:	6839      	ldr	r1, [r7, #0]
 801cbea:	6878      	ldr	r0, [r7, #4]
 801cbec:	f000 fa1d 	bl	801d02a <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv>
 801cbf0:	4603      	mov	r3, r0
 801cbf2:	4618      	mov	r0, r3
 801cbf4:	3708      	adds	r7, #8
 801cbf6:	46bd      	mov	sp, r7
 801cbf8:	bd80      	pop	{r7, pc}

0801cbfa <_ZNSt6vectorIP14And_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801cbfa:	b580      	push	{r7, lr}
 801cbfc:	b084      	sub	sp, #16
 801cbfe:	af00      	add	r7, sp, #0
 801cc00:	60f8      	str	r0, [r7, #12]
 801cc02:	60b9      	str	r1, [r7, #8]
 801cc04:	607a      	str	r2, [r7, #4]
 801cc06:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801cc08:	683b      	ldr	r3, [r7, #0]
 801cc0a:	687a      	ldr	r2, [r7, #4]
 801cc0c:	68b9      	ldr	r1, [r7, #8]
 801cc0e:	68f8      	ldr	r0, [r7, #12]
 801cc10:	f000 fa2a 	bl	801d068 <_ZSt12__relocate_aIPP14And_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801cc14:	4603      	mov	r3, r0
      }
 801cc16:	4618      	mov	r0, r3
 801cc18:	3710      	adds	r7, #16
 801cc1a:	46bd      	mov	sp, r7
 801cc1c:	bd80      	pop	{r7, pc}

0801cc1e <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801cc1e:	b580      	push	{r7, lr}
 801cc20:	b084      	sub	sp, #16
 801cc22:	af00      	add	r7, sp, #0
 801cc24:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801cc26:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801cc2a:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801cc2c:	6878      	ldr	r0, [r7, #4]
 801cc2e:	f000 fa38 	bl	801d0a2 <_ZNSt16allocator_traitsISaI13mult_operatorEE8max_sizeERKS1_>
 801cc32:	4603      	mov	r3, r0
 801cc34:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801cc36:	f107 0208 	add.w	r2, r7, #8
 801cc3a:	f107 030c 	add.w	r3, r7, #12
 801cc3e:	4611      	mov	r1, r2
 801cc40:	4618      	mov	r0, r3
 801cc42:	f7f9 f8fd 	bl	8015e40 <_ZSt3minIjERKT_S2_S2_>
 801cc46:	4603      	mov	r3, r0
 801cc48:	681b      	ldr	r3, [r3, #0]
      }
 801cc4a:	4618      	mov	r0, r3
 801cc4c:	3710      	adds	r7, #16
 801cc4e:	46bd      	mov	sp, r7
 801cc50:	bd80      	pop	{r7, pc}

0801cc52 <_ZNKSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801cc52:	b480      	push	{r7}
 801cc54:	b083      	sub	sp, #12
 801cc56:	af00      	add	r7, sp, #0
 801cc58:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801cc5a:	687b      	ldr	r3, [r7, #4]
 801cc5c:	4618      	mov	r0, r3
 801cc5e:	370c      	adds	r7, #12
 801cc60:	46bd      	mov	sp, r7
 801cc62:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cc66:	4770      	bx	lr

0801cc68 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801cc68:	b580      	push	{r7, lr}
 801cc6a:	b084      	sub	sp, #16
 801cc6c:	af00      	add	r7, sp, #0
 801cc6e:	60f8      	str	r0, [r7, #12]
 801cc70:	60b9      	str	r1, [r7, #8]
 801cc72:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801cc74:	68f8      	ldr	r0, [r7, #12]
 801cc76:	f000 fa20 	bl	801d0ba <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>
 801cc7a:	4602      	mov	r2, r0
 801cc7c:	68bb      	ldr	r3, [r7, #8]
 801cc7e:	4293      	cmp	r3, r2
 801cc80:	bf8c      	ite	hi
 801cc82:	2301      	movhi	r3, #1
 801cc84:	2300      	movls	r3, #0
 801cc86:	b2db      	uxtb	r3, r3
 801cc88:	2b00      	cmp	r3, #0
 801cc8a:	d001      	beq.n	801cc90 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801cc8c:	f005 fccc 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801cc90:	68b8      	ldr	r0, [r7, #8]
 801cc92:	f005 fc04 	bl	802249e <_Znwj>
 801cc96:	4603      	mov	r3, r0
 801cc98:	bf00      	nop
      }
 801cc9a:	4618      	mov	r0, r3
 801cc9c:	3710      	adds	r7, #16
 801cc9e:	46bd      	mov	sp, r7
 801cca0:	bd80      	pop	{r7, pc}

0801cca2 <_ZSt12__relocate_aIP13mult_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801cca2:	b5b0      	push	{r4, r5, r7, lr}
 801cca4:	b084      	sub	sp, #16
 801cca6:	af00      	add	r7, sp, #0
 801cca8:	60f8      	str	r0, [r7, #12]
 801ccaa:	60b9      	str	r1, [r7, #8]
 801ccac:	607a      	str	r2, [r7, #4]
 801ccae:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801ccb0:	68f8      	ldr	r0, [r7, #12]
 801ccb2:	f000 fa0e 	bl	801d0d2 <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801ccb6:	4604      	mov	r4, r0
 801ccb8:	68b8      	ldr	r0, [r7, #8]
 801ccba:	f000 fa0a 	bl	801d0d2 <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801ccbe:	4605      	mov	r5, r0
 801ccc0:	6878      	ldr	r0, [r7, #4]
 801ccc2:	f000 fa06 	bl	801d0d2 <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801ccc6:	4602      	mov	r2, r0
 801ccc8:	683b      	ldr	r3, [r7, #0]
 801ccca:	4629      	mov	r1, r5
 801cccc:	4620      	mov	r0, r4
 801ccce:	f000 fa0b 	bl	801d0e8 <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
 801ccd2:	4603      	mov	r3, r0
    }
 801ccd4:	4618      	mov	r0, r3
 801ccd6:	3710      	adds	r7, #16
 801ccd8:	46bd      	mov	sp, r7
 801ccda:	bdb0      	pop	{r4, r5, r7, pc}

0801ccdc <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801ccdc:	b580      	push	{r7, lr}
 801ccde:	b084      	sub	sp, #16
 801cce0:	af00      	add	r7, sp, #0
 801cce2:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801cce4:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801cce8:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801ccea:	6878      	ldr	r0, [r7, #4]
 801ccec:	f000 fa17 	bl	801d11e <_ZNSt16allocator_traitsISaIP16Power_expressionEE8max_sizeERKS2_>
 801ccf0:	4603      	mov	r3, r0
 801ccf2:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801ccf4:	f107 0208 	add.w	r2, r7, #8
 801ccf8:	f107 030c 	add.w	r3, r7, #12
 801ccfc:	4611      	mov	r1, r2
 801ccfe:	4618      	mov	r0, r3
 801cd00:	f7f9 f89e 	bl	8015e40 <_ZSt3minIjERKT_S2_S2_>
 801cd04:	4603      	mov	r3, r0
 801cd06:	681b      	ldr	r3, [r3, #0]
      }
 801cd08:	4618      	mov	r0, r3
 801cd0a:	3710      	adds	r7, #16
 801cd0c:	46bd      	mov	sp, r7
 801cd0e:	bd80      	pop	{r7, pc}

0801cd10 <_ZNKSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801cd10:	b480      	push	{r7}
 801cd12:	b083      	sub	sp, #12
 801cd14:	af00      	add	r7, sp, #0
 801cd16:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801cd18:	687b      	ldr	r3, [r7, #4]
 801cd1a:	4618      	mov	r0, r3
 801cd1c:	370c      	adds	r7, #12
 801cd1e:	46bd      	mov	sp, r7
 801cd20:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cd24:	4770      	bx	lr

0801cd26 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801cd26:	b580      	push	{r7, lr}
 801cd28:	b084      	sub	sp, #16
 801cd2a:	af00      	add	r7, sp, #0
 801cd2c:	60f8      	str	r0, [r7, #12]
 801cd2e:	60b9      	str	r1, [r7, #8]
 801cd30:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801cd32:	68f8      	ldr	r0, [r7, #12]
 801cd34:	f000 f9ff 	bl	801d136 <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>
 801cd38:	4602      	mov	r2, r0
 801cd3a:	68bb      	ldr	r3, [r7, #8]
 801cd3c:	4293      	cmp	r3, r2
 801cd3e:	bf8c      	ite	hi
 801cd40:	2301      	movhi	r3, #1
 801cd42:	2300      	movls	r3, #0
 801cd44:	b2db      	uxtb	r3, r3
 801cd46:	2b00      	cmp	r3, #0
 801cd48:	d001      	beq.n	801cd4e <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801cd4a:	f005 fc6d 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801cd4e:	68bb      	ldr	r3, [r7, #8]
 801cd50:	009b      	lsls	r3, r3, #2
 801cd52:	4618      	mov	r0, r3
 801cd54:	f005 fba3 	bl	802249e <_Znwj>
 801cd58:	4603      	mov	r3, r0
 801cd5a:	bf00      	nop
      }
 801cd5c:	4618      	mov	r0, r3
 801cd5e:	3710      	adds	r7, #16
 801cd60:	46bd      	mov	sp, r7
 801cd62:	bd80      	pop	{r7, pc}

0801cd64 <_ZSt12__relocate_aIPP16Power_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801cd64:	b5b0      	push	{r4, r5, r7, lr}
 801cd66:	b084      	sub	sp, #16
 801cd68:	af00      	add	r7, sp, #0
 801cd6a:	60f8      	str	r0, [r7, #12]
 801cd6c:	60b9      	str	r1, [r7, #8]
 801cd6e:	607a      	str	r2, [r7, #4]
 801cd70:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801cd72:	68f8      	ldr	r0, [r7, #12]
 801cd74:	f000 f9eb 	bl	801d14e <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801cd78:	4604      	mov	r4, r0
 801cd7a:	68b8      	ldr	r0, [r7, #8]
 801cd7c:	f000 f9e7 	bl	801d14e <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801cd80:	4605      	mov	r5, r0
 801cd82:	6878      	ldr	r0, [r7, #4]
 801cd84:	f000 f9e3 	bl	801d14e <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801cd88:	4602      	mov	r2, r0
 801cd8a:	683b      	ldr	r3, [r7, #0]
 801cd8c:	4629      	mov	r1, r5
 801cd8e:	4620      	mov	r0, r4
 801cd90:	f000 f9e8 	bl	801d164 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801cd94:	4603      	mov	r3, r0
    }
 801cd96:	4618      	mov	r0, r3
 801cd98:	3710      	adds	r7, #16
 801cd9a:	46bd      	mov	sp, r7
 801cd9c:	bdb0      	pop	{r4, r5, r7, pc}

0801cd9e <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801cd9e:	b580      	push	{r7, lr}
 801cda0:	b084      	sub	sp, #16
 801cda2:	af00      	add	r7, sp, #0
 801cda4:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801cda6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801cdaa:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801cdac:	6878      	ldr	r0, [r7, #4]
 801cdae:	f000 f9f7 	bl	801d1a0 <_ZNSt16allocator_traitsISaI12sum_operatorEE8max_sizeERKS1_>
 801cdb2:	4603      	mov	r3, r0
 801cdb4:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801cdb6:	f107 0208 	add.w	r2, r7, #8
 801cdba:	f107 030c 	add.w	r3, r7, #12
 801cdbe:	4611      	mov	r1, r2
 801cdc0:	4618      	mov	r0, r3
 801cdc2:	f7f9 f83d 	bl	8015e40 <_ZSt3minIjERKT_S2_S2_>
 801cdc6:	4603      	mov	r3, r0
 801cdc8:	681b      	ldr	r3, [r3, #0]
      }
 801cdca:	4618      	mov	r0, r3
 801cdcc:	3710      	adds	r7, #16
 801cdce:	46bd      	mov	sp, r7
 801cdd0:	bd80      	pop	{r7, pc}

0801cdd2 <_ZNKSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801cdd2:	b480      	push	{r7}
 801cdd4:	b083      	sub	sp, #12
 801cdd6:	af00      	add	r7, sp, #0
 801cdd8:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801cdda:	687b      	ldr	r3, [r7, #4]
 801cddc:	4618      	mov	r0, r3
 801cdde:	370c      	adds	r7, #12
 801cde0:	46bd      	mov	sp, r7
 801cde2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cde6:	4770      	bx	lr

0801cde8 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801cde8:	b580      	push	{r7, lr}
 801cdea:	b084      	sub	sp, #16
 801cdec:	af00      	add	r7, sp, #0
 801cdee:	60f8      	str	r0, [r7, #12]
 801cdf0:	60b9      	str	r1, [r7, #8]
 801cdf2:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801cdf4:	68f8      	ldr	r0, [r7, #12]
 801cdf6:	f000 f9df 	bl	801d1b8 <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>
 801cdfa:	4602      	mov	r2, r0
 801cdfc:	68bb      	ldr	r3, [r7, #8]
 801cdfe:	4293      	cmp	r3, r2
 801ce00:	bf8c      	ite	hi
 801ce02:	2301      	movhi	r3, #1
 801ce04:	2300      	movls	r3, #0
 801ce06:	b2db      	uxtb	r3, r3
 801ce08:	2b00      	cmp	r3, #0
 801ce0a:	d001      	beq.n	801ce10 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801ce0c:	f005 fc0c 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801ce10:	68b8      	ldr	r0, [r7, #8]
 801ce12:	f005 fb44 	bl	802249e <_Znwj>
 801ce16:	4603      	mov	r3, r0
 801ce18:	bf00      	nop
      }
 801ce1a:	4618      	mov	r0, r3
 801ce1c:	3710      	adds	r7, #16
 801ce1e:	46bd      	mov	sp, r7
 801ce20:	bd80      	pop	{r7, pc}

0801ce22 <_ZSt12__relocate_aIP12sum_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801ce22:	b5b0      	push	{r4, r5, r7, lr}
 801ce24:	b084      	sub	sp, #16
 801ce26:	af00      	add	r7, sp, #0
 801ce28:	60f8      	str	r0, [r7, #12]
 801ce2a:	60b9      	str	r1, [r7, #8]
 801ce2c:	607a      	str	r2, [r7, #4]
 801ce2e:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801ce30:	68f8      	ldr	r0, [r7, #12]
 801ce32:	f000 f9cd 	bl	801d1d0 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801ce36:	4604      	mov	r4, r0
 801ce38:	68b8      	ldr	r0, [r7, #8]
 801ce3a:	f000 f9c9 	bl	801d1d0 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801ce3e:	4605      	mov	r5, r0
 801ce40:	6878      	ldr	r0, [r7, #4]
 801ce42:	f000 f9c5 	bl	801d1d0 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801ce46:	4602      	mov	r2, r0
 801ce48:	683b      	ldr	r3, [r7, #0]
 801ce4a:	4629      	mov	r1, r5
 801ce4c:	4620      	mov	r0, r4
 801ce4e:	f000 f9ca 	bl	801d1e6 <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
 801ce52:	4603      	mov	r3, r0
    }
 801ce54:	4618      	mov	r0, r3
 801ce56:	3710      	adds	r7, #16
 801ce58:	46bd      	mov	sp, r7
 801ce5a:	bdb0      	pop	{r4, r5, r7, pc}

0801ce5c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801ce5c:	b580      	push	{r7, lr}
 801ce5e:	b084      	sub	sp, #16
 801ce60:	af00      	add	r7, sp, #0
 801ce62:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801ce64:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801ce68:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801ce6a:	6878      	ldr	r0, [r7, #4]
 801ce6c:	f000 f9d6 	bl	801d21c <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8max_sizeERKS2_>
 801ce70:	4603      	mov	r3, r0
 801ce72:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801ce74:	f107 0208 	add.w	r2, r7, #8
 801ce78:	f107 030c 	add.w	r3, r7, #12
 801ce7c:	4611      	mov	r1, r2
 801ce7e:	4618      	mov	r0, r3
 801ce80:	f7f8 ffde 	bl	8015e40 <_ZSt3minIjERKT_S2_S2_>
 801ce84:	4603      	mov	r3, r0
 801ce86:	681b      	ldr	r3, [r3, #0]
      }
 801ce88:	4618      	mov	r0, r3
 801ce8a:	3710      	adds	r7, #16
 801ce8c:	46bd      	mov	sp, r7
 801ce8e:	bd80      	pop	{r7, pc}

0801ce90 <_ZNKSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801ce90:	b480      	push	{r7}
 801ce92:	b083      	sub	sp, #12
 801ce94:	af00      	add	r7, sp, #0
 801ce96:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801ce98:	687b      	ldr	r3, [r7, #4]
 801ce9a:	4618      	mov	r0, r3
 801ce9c:	370c      	adds	r7, #12
 801ce9e:	46bd      	mov	sp, r7
 801cea0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cea4:	4770      	bx	lr

0801cea6 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801cea6:	b580      	push	{r7, lr}
 801cea8:	b084      	sub	sp, #16
 801ceaa:	af00      	add	r7, sp, #0
 801ceac:	60f8      	str	r0, [r7, #12]
 801ceae:	60b9      	str	r1, [r7, #8]
 801ceb0:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801ceb2:	68f8      	ldr	r0, [r7, #12]
 801ceb4:	f000 f9be 	bl	801d234 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>
 801ceb8:	4602      	mov	r2, r0
 801ceba:	68bb      	ldr	r3, [r7, #8]
 801cebc:	4293      	cmp	r3, r2
 801cebe:	bf8c      	ite	hi
 801cec0:	2301      	movhi	r3, #1
 801cec2:	2300      	movls	r3, #0
 801cec4:	b2db      	uxtb	r3, r3
 801cec6:	2b00      	cmp	r3, #0
 801cec8:	d001      	beq.n	801cece <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801ceca:	f005 fbad 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801cece:	68bb      	ldr	r3, [r7, #8]
 801ced0:	009b      	lsls	r3, r3, #2
 801ced2:	4618      	mov	r0, r3
 801ced4:	f005 fae3 	bl	802249e <_Znwj>
 801ced8:	4603      	mov	r3, r0
 801ceda:	bf00      	nop
      }
 801cedc:	4618      	mov	r0, r3
 801cede:	3710      	adds	r7, #16
 801cee0:	46bd      	mov	sp, r7
 801cee2:	bd80      	pop	{r7, pc}

0801cee4 <_ZSt12__relocate_aIPP19Multiply_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801cee4:	b5b0      	push	{r4, r5, r7, lr}
 801cee6:	b084      	sub	sp, #16
 801cee8:	af00      	add	r7, sp, #0
 801ceea:	60f8      	str	r0, [r7, #12]
 801ceec:	60b9      	str	r1, [r7, #8]
 801ceee:	607a      	str	r2, [r7, #4]
 801cef0:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801cef2:	68f8      	ldr	r0, [r7, #12]
 801cef4:	f000 f9aa 	bl	801d24c <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801cef8:	4604      	mov	r4, r0
 801cefa:	68b8      	ldr	r0, [r7, #8]
 801cefc:	f000 f9a6 	bl	801d24c <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801cf00:	4605      	mov	r5, r0
 801cf02:	6878      	ldr	r0, [r7, #4]
 801cf04:	f000 f9a2 	bl	801d24c <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801cf08:	4602      	mov	r2, r0
 801cf0a:	683b      	ldr	r3, [r7, #0]
 801cf0c:	4629      	mov	r1, r5
 801cf0e:	4620      	mov	r0, r4
 801cf10:	f000 f9a7 	bl	801d262 <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801cf14:	4603      	mov	r3, r0
    }
 801cf16:	4618      	mov	r0, r3
 801cf18:	3710      	adds	r7, #16
 801cf1a:	46bd      	mov	sp, r7
 801cf1c:	bdb0      	pop	{r4, r5, r7, pc}

0801cf1e <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801cf1e:	b580      	push	{r7, lr}
 801cf20:	b084      	sub	sp, #16
 801cf22:	af00      	add	r7, sp, #0
 801cf24:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801cf26:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801cf2a:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801cf2c:	6878      	ldr	r0, [r7, #4]
 801cf2e:	f000 f9b6 	bl	801d29e <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8max_sizeERKS2_>
 801cf32:	4603      	mov	r3, r0
 801cf34:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801cf36:	f107 0208 	add.w	r2, r7, #8
 801cf3a:	f107 030c 	add.w	r3, r7, #12
 801cf3e:	4611      	mov	r1, r2
 801cf40:	4618      	mov	r0, r3
 801cf42:	f7f8 ff7d 	bl	8015e40 <_ZSt3minIjERKT_S2_S2_>
 801cf46:	4603      	mov	r3, r0
 801cf48:	681b      	ldr	r3, [r3, #0]
      }
 801cf4a:	4618      	mov	r0, r3
 801cf4c:	3710      	adds	r7, #16
 801cf4e:	46bd      	mov	sp, r7
 801cf50:	bd80      	pop	{r7, pc}

0801cf52 <_ZNKSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801cf52:	b480      	push	{r7}
 801cf54:	b083      	sub	sp, #12
 801cf56:	af00      	add	r7, sp, #0
 801cf58:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801cf5a:	687b      	ldr	r3, [r7, #4]
 801cf5c:	4618      	mov	r0, r3
 801cf5e:	370c      	adds	r7, #12
 801cf60:	46bd      	mov	sp, r7
 801cf62:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cf66:	4770      	bx	lr

0801cf68 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801cf68:	b580      	push	{r7, lr}
 801cf6a:	b084      	sub	sp, #16
 801cf6c:	af00      	add	r7, sp, #0
 801cf6e:	60f8      	str	r0, [r7, #12]
 801cf70:	60b9      	str	r1, [r7, #8]
 801cf72:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801cf74:	68f8      	ldr	r0, [r7, #12]
 801cf76:	f000 f99e 	bl	801d2b6 <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>
 801cf7a:	4602      	mov	r2, r0
 801cf7c:	68bb      	ldr	r3, [r7, #8]
 801cf7e:	4293      	cmp	r3, r2
 801cf80:	bf8c      	ite	hi
 801cf82:	2301      	movhi	r3, #1
 801cf84:	2300      	movls	r3, #0
 801cf86:	b2db      	uxtb	r3, r3
 801cf88:	2b00      	cmp	r3, #0
 801cf8a:	d001      	beq.n	801cf90 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801cf8c:	f005 fb4c 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801cf90:	68bb      	ldr	r3, [r7, #8]
 801cf92:	009b      	lsls	r3, r3, #2
 801cf94:	4618      	mov	r0, r3
 801cf96:	f005 fa82 	bl	802249e <_Znwj>
 801cf9a:	4603      	mov	r3, r0
 801cf9c:	bf00      	nop
      }
 801cf9e:	4618      	mov	r0, r3
 801cfa0:	3710      	adds	r7, #16
 801cfa2:	46bd      	mov	sp, r7
 801cfa4:	bd80      	pop	{r7, pc}

0801cfa6 <_ZSt12__relocate_aIPP18Compare_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801cfa6:	b5b0      	push	{r4, r5, r7, lr}
 801cfa8:	b084      	sub	sp, #16
 801cfaa:	af00      	add	r7, sp, #0
 801cfac:	60f8      	str	r0, [r7, #12]
 801cfae:	60b9      	str	r1, [r7, #8]
 801cfb0:	607a      	str	r2, [r7, #4]
 801cfb2:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801cfb4:	68f8      	ldr	r0, [r7, #12]
 801cfb6:	f000 f98a 	bl	801d2ce <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801cfba:	4604      	mov	r4, r0
 801cfbc:	68b8      	ldr	r0, [r7, #8]
 801cfbe:	f000 f986 	bl	801d2ce <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801cfc2:	4605      	mov	r5, r0
 801cfc4:	6878      	ldr	r0, [r7, #4]
 801cfc6:	f000 f982 	bl	801d2ce <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801cfca:	4602      	mov	r2, r0
 801cfcc:	683b      	ldr	r3, [r7, #0]
 801cfce:	4629      	mov	r1, r5
 801cfd0:	4620      	mov	r0, r4
 801cfd2:	f000 f987 	bl	801d2e4 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801cfd6:	4603      	mov	r3, r0
    }
 801cfd8:	4618      	mov	r0, r3
 801cfda:	3710      	adds	r7, #16
 801cfdc:	46bd      	mov	sp, r7
 801cfde:	bdb0      	pop	{r4, r5, r7, pc}

0801cfe0 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801cfe0:	b580      	push	{r7, lr}
 801cfe2:	b084      	sub	sp, #16
 801cfe4:	af00      	add	r7, sp, #0
 801cfe6:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801cfe8:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801cfec:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801cfee:	6878      	ldr	r0, [r7, #4]
 801cff0:	f000 f996 	bl	801d320 <_ZNSt16allocator_traitsISaIP14And_expressionEE8max_sizeERKS2_>
 801cff4:	4603      	mov	r3, r0
 801cff6:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801cff8:	f107 0208 	add.w	r2, r7, #8
 801cffc:	f107 030c 	add.w	r3, r7, #12
 801d000:	4611      	mov	r1, r2
 801d002:	4618      	mov	r0, r3
 801d004:	f7f8 ff1c 	bl	8015e40 <_ZSt3minIjERKT_S2_S2_>
 801d008:	4603      	mov	r3, r0
 801d00a:	681b      	ldr	r3, [r3, #0]
      }
 801d00c:	4618      	mov	r0, r3
 801d00e:	3710      	adds	r7, #16
 801d010:	46bd      	mov	sp, r7
 801d012:	bd80      	pop	{r7, pc}

0801d014 <_ZNKSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d014:	b480      	push	{r7}
 801d016:	b083      	sub	sp, #12
 801d018:	af00      	add	r7, sp, #0
 801d01a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d01c:	687b      	ldr	r3, [r7, #4]
 801d01e:	4618      	mov	r0, r3
 801d020:	370c      	adds	r7, #12
 801d022:	46bd      	mov	sp, r7
 801d024:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d028:	4770      	bx	lr

0801d02a <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d02a:	b580      	push	{r7, lr}
 801d02c:	b084      	sub	sp, #16
 801d02e:	af00      	add	r7, sp, #0
 801d030:	60f8      	str	r0, [r7, #12]
 801d032:	60b9      	str	r1, [r7, #8]
 801d034:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d036:	68f8      	ldr	r0, [r7, #12]
 801d038:	f000 f97e 	bl	801d338 <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>
 801d03c:	4602      	mov	r2, r0
 801d03e:	68bb      	ldr	r3, [r7, #8]
 801d040:	4293      	cmp	r3, r2
 801d042:	bf8c      	ite	hi
 801d044:	2301      	movhi	r3, #1
 801d046:	2300      	movls	r3, #0
 801d048:	b2db      	uxtb	r3, r3
 801d04a:	2b00      	cmp	r3, #0
 801d04c:	d001      	beq.n	801d052 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d04e:	f005 faeb 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d052:	68bb      	ldr	r3, [r7, #8]
 801d054:	009b      	lsls	r3, r3, #2
 801d056:	4618      	mov	r0, r3
 801d058:	f005 fa21 	bl	802249e <_Znwj>
 801d05c:	4603      	mov	r3, r0
 801d05e:	bf00      	nop
      }
 801d060:	4618      	mov	r0, r3
 801d062:	3710      	adds	r7, #16
 801d064:	46bd      	mov	sp, r7
 801d066:	bd80      	pop	{r7, pc}

0801d068 <_ZSt12__relocate_aIPP14And_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d068:	b5b0      	push	{r4, r5, r7, lr}
 801d06a:	b084      	sub	sp, #16
 801d06c:	af00      	add	r7, sp, #0
 801d06e:	60f8      	str	r0, [r7, #12]
 801d070:	60b9      	str	r1, [r7, #8]
 801d072:	607a      	str	r2, [r7, #4]
 801d074:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d076:	68f8      	ldr	r0, [r7, #12]
 801d078:	f000 f96a 	bl	801d350 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801d07c:	4604      	mov	r4, r0
 801d07e:	68b8      	ldr	r0, [r7, #8]
 801d080:	f000 f966 	bl	801d350 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801d084:	4605      	mov	r5, r0
 801d086:	6878      	ldr	r0, [r7, #4]
 801d088:	f000 f962 	bl	801d350 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801d08c:	4602      	mov	r2, r0
 801d08e:	683b      	ldr	r3, [r7, #0]
 801d090:	4629      	mov	r1, r5
 801d092:	4620      	mov	r0, r4
 801d094:	f000 f967 	bl	801d366 <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801d098:	4603      	mov	r3, r0
    }
 801d09a:	4618      	mov	r0, r3
 801d09c:	3710      	adds	r7, #16
 801d09e:	46bd      	mov	sp, r7
 801d0a0:	bdb0      	pop	{r4, r5, r7, pc}

0801d0a2 <_ZNSt16allocator_traitsISaI13mult_operatorEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 801d0a2:	b580      	push	{r7, lr}
 801d0a4:	b082      	sub	sp, #8
 801d0a6:	af00      	add	r7, sp, #0
 801d0a8:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801d0aa:	6878      	ldr	r0, [r7, #4]
 801d0ac:	f000 f805 	bl	801d0ba <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>
 801d0b0:	4603      	mov	r3, r0
 801d0b2:	4618      	mov	r0, r3
 801d0b4:	3708      	adds	r7, #8
 801d0b6:	46bd      	mov	sp, r7
 801d0b8:	bd80      	pop	{r7, pc}

0801d0ba <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801d0ba:	b480      	push	{r7}
 801d0bc:	b083      	sub	sp, #12
 801d0be:	af00      	add	r7, sp, #0
 801d0c0:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801d0c2:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
      }
 801d0c6:	4618      	mov	r0, r3
 801d0c8:	370c      	adds	r7, #12
 801d0ca:	46bd      	mov	sp, r7
 801d0cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d0d0:	4770      	bx	lr

0801d0d2 <_ZSt12__niter_baseIP13mult_operatorET_S2_>:
    __niter_base(_Iterator __it)
 801d0d2:	b480      	push	{r7}
 801d0d4:	b083      	sub	sp, #12
 801d0d6:	af00      	add	r7, sp, #0
 801d0d8:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d0da:	687b      	ldr	r3, [r7, #4]
 801d0dc:	4618      	mov	r0, r3
 801d0de:	370c      	adds	r7, #12
 801d0e0:	46bd      	mov	sp, r7
 801d0e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d0e6:	4770      	bx	lr

0801d0e8 <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d0e8:	b580      	push	{r7, lr}
 801d0ea:	b086      	sub	sp, #24
 801d0ec:	af00      	add	r7, sp, #0
 801d0ee:	60f8      	str	r0, [r7, #12]
 801d0f0:	60b9      	str	r1, [r7, #8]
 801d0f2:	607a      	str	r2, [r7, #4]
 801d0f4:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801d0f6:	68ba      	ldr	r2, [r7, #8]
 801d0f8:	68fb      	ldr	r3, [r7, #12]
 801d0fa:	1ad3      	subs	r3, r2, r3
 801d0fc:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801d0fe:	697b      	ldr	r3, [r7, #20]
 801d100:	2b00      	cmp	r3, #0
 801d102:	dd05      	ble.n	801d110 <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x28>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801d104:	697b      	ldr	r3, [r7, #20]
 801d106:	461a      	mov	r2, r3
 801d108:	68f9      	ldr	r1, [r7, #12]
 801d10a:	6878      	ldr	r0, [r7, #4]
 801d10c:	f006 fe90 	bl	8023e30 <memmove>
      return __result + __count;
 801d110:	697b      	ldr	r3, [r7, #20]
 801d112:	687a      	ldr	r2, [r7, #4]
 801d114:	4413      	add	r3, r2
    }
 801d116:	4618      	mov	r0, r3
 801d118:	3718      	adds	r7, #24
 801d11a:	46bd      	mov	sp, r7
 801d11c:	bd80      	pop	{r7, pc}

0801d11e <_ZNSt16allocator_traitsISaIP16Power_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801d11e:	b580      	push	{r7, lr}
 801d120:	b082      	sub	sp, #8
 801d122:	af00      	add	r7, sp, #0
 801d124:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801d126:	6878      	ldr	r0, [r7, #4]
 801d128:	f000 f805 	bl	801d136 <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>
 801d12c:	4603      	mov	r3, r0
 801d12e:	4618      	mov	r0, r3
 801d130:	3708      	adds	r7, #8
 801d132:	46bd      	mov	sp, r7
 801d134:	bd80      	pop	{r7, pc}

0801d136 <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801d136:	b480      	push	{r7}
 801d138:	b083      	sub	sp, #12
 801d13a:	af00      	add	r7, sp, #0
 801d13c:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801d13e:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801d142:	4618      	mov	r0, r3
 801d144:	370c      	adds	r7, #12
 801d146:	46bd      	mov	sp, r7
 801d148:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d14c:	4770      	bx	lr

0801d14e <_ZSt12__niter_baseIPP16Power_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801d14e:	b480      	push	{r7}
 801d150:	b083      	sub	sp, #12
 801d152:	af00      	add	r7, sp, #0
 801d154:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d156:	687b      	ldr	r3, [r7, #4]
 801d158:	4618      	mov	r0, r3
 801d15a:	370c      	adds	r7, #12
 801d15c:	46bd      	mov	sp, r7
 801d15e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d162:	4770      	bx	lr

0801d164 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d164:	b580      	push	{r7, lr}
 801d166:	b086      	sub	sp, #24
 801d168:	af00      	add	r7, sp, #0
 801d16a:	60f8      	str	r0, [r7, #12]
 801d16c:	60b9      	str	r1, [r7, #8]
 801d16e:	607a      	str	r2, [r7, #4]
 801d170:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801d172:	68ba      	ldr	r2, [r7, #8]
 801d174:	68fb      	ldr	r3, [r7, #12]
 801d176:	1ad3      	subs	r3, r2, r3
 801d178:	109b      	asrs	r3, r3, #2
 801d17a:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801d17c:	697b      	ldr	r3, [r7, #20]
 801d17e:	2b00      	cmp	r3, #0
 801d180:	dd06      	ble.n	801d190 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801d182:	697b      	ldr	r3, [r7, #20]
 801d184:	009b      	lsls	r3, r3, #2
 801d186:	461a      	mov	r2, r3
 801d188:	68f9      	ldr	r1, [r7, #12]
 801d18a:	6878      	ldr	r0, [r7, #4]
 801d18c:	f006 fe50 	bl	8023e30 <memmove>
      return __result + __count;
 801d190:	697b      	ldr	r3, [r7, #20]
 801d192:	009b      	lsls	r3, r3, #2
 801d194:	687a      	ldr	r2, [r7, #4]
 801d196:	4413      	add	r3, r2
    }
 801d198:	4618      	mov	r0, r3
 801d19a:	3718      	adds	r7, #24
 801d19c:	46bd      	mov	sp, r7
 801d19e:	bd80      	pop	{r7, pc}

0801d1a0 <_ZNSt16allocator_traitsISaI12sum_operatorEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 801d1a0:	b580      	push	{r7, lr}
 801d1a2:	b082      	sub	sp, #8
 801d1a4:	af00      	add	r7, sp, #0
 801d1a6:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801d1a8:	6878      	ldr	r0, [r7, #4]
 801d1aa:	f000 f805 	bl	801d1b8 <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>
 801d1ae:	4603      	mov	r3, r0
 801d1b0:	4618      	mov	r0, r3
 801d1b2:	3708      	adds	r7, #8
 801d1b4:	46bd      	mov	sp, r7
 801d1b6:	bd80      	pop	{r7, pc}

0801d1b8 <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801d1b8:	b480      	push	{r7}
 801d1ba:	b083      	sub	sp, #12
 801d1bc:	af00      	add	r7, sp, #0
 801d1be:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801d1c0:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
      }
 801d1c4:	4618      	mov	r0, r3
 801d1c6:	370c      	adds	r7, #12
 801d1c8:	46bd      	mov	sp, r7
 801d1ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d1ce:	4770      	bx	lr

0801d1d0 <_ZSt12__niter_baseIP12sum_operatorET_S2_>:
    __niter_base(_Iterator __it)
 801d1d0:	b480      	push	{r7}
 801d1d2:	b083      	sub	sp, #12
 801d1d4:	af00      	add	r7, sp, #0
 801d1d6:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d1d8:	687b      	ldr	r3, [r7, #4]
 801d1da:	4618      	mov	r0, r3
 801d1dc:	370c      	adds	r7, #12
 801d1de:	46bd      	mov	sp, r7
 801d1e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d1e4:	4770      	bx	lr

0801d1e6 <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d1e6:	b580      	push	{r7, lr}
 801d1e8:	b086      	sub	sp, #24
 801d1ea:	af00      	add	r7, sp, #0
 801d1ec:	60f8      	str	r0, [r7, #12]
 801d1ee:	60b9      	str	r1, [r7, #8]
 801d1f0:	607a      	str	r2, [r7, #4]
 801d1f2:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801d1f4:	68ba      	ldr	r2, [r7, #8]
 801d1f6:	68fb      	ldr	r3, [r7, #12]
 801d1f8:	1ad3      	subs	r3, r2, r3
 801d1fa:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801d1fc:	697b      	ldr	r3, [r7, #20]
 801d1fe:	2b00      	cmp	r3, #0
 801d200:	dd05      	ble.n	801d20e <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x28>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801d202:	697b      	ldr	r3, [r7, #20]
 801d204:	461a      	mov	r2, r3
 801d206:	68f9      	ldr	r1, [r7, #12]
 801d208:	6878      	ldr	r0, [r7, #4]
 801d20a:	f006 fe11 	bl	8023e30 <memmove>
      return __result + __count;
 801d20e:	697b      	ldr	r3, [r7, #20]
 801d210:	687a      	ldr	r2, [r7, #4]
 801d212:	4413      	add	r3, r2
    }
 801d214:	4618      	mov	r0, r3
 801d216:	3718      	adds	r7, #24
 801d218:	46bd      	mov	sp, r7
 801d21a:	bd80      	pop	{r7, pc}

0801d21c <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801d21c:	b580      	push	{r7, lr}
 801d21e:	b082      	sub	sp, #8
 801d220:	af00      	add	r7, sp, #0
 801d222:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801d224:	6878      	ldr	r0, [r7, #4]
 801d226:	f000 f805 	bl	801d234 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>
 801d22a:	4603      	mov	r3, r0
 801d22c:	4618      	mov	r0, r3
 801d22e:	3708      	adds	r7, #8
 801d230:	46bd      	mov	sp, r7
 801d232:	bd80      	pop	{r7, pc}

0801d234 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801d234:	b480      	push	{r7}
 801d236:	b083      	sub	sp, #12
 801d238:	af00      	add	r7, sp, #0
 801d23a:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801d23c:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801d240:	4618      	mov	r0, r3
 801d242:	370c      	adds	r7, #12
 801d244:	46bd      	mov	sp, r7
 801d246:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d24a:	4770      	bx	lr

0801d24c <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801d24c:	b480      	push	{r7}
 801d24e:	b083      	sub	sp, #12
 801d250:	af00      	add	r7, sp, #0
 801d252:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d254:	687b      	ldr	r3, [r7, #4]
 801d256:	4618      	mov	r0, r3
 801d258:	370c      	adds	r7, #12
 801d25a:	46bd      	mov	sp, r7
 801d25c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d260:	4770      	bx	lr

0801d262 <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d262:	b580      	push	{r7, lr}
 801d264:	b086      	sub	sp, #24
 801d266:	af00      	add	r7, sp, #0
 801d268:	60f8      	str	r0, [r7, #12]
 801d26a:	60b9      	str	r1, [r7, #8]
 801d26c:	607a      	str	r2, [r7, #4]
 801d26e:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801d270:	68ba      	ldr	r2, [r7, #8]
 801d272:	68fb      	ldr	r3, [r7, #12]
 801d274:	1ad3      	subs	r3, r2, r3
 801d276:	109b      	asrs	r3, r3, #2
 801d278:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801d27a:	697b      	ldr	r3, [r7, #20]
 801d27c:	2b00      	cmp	r3, #0
 801d27e:	dd06      	ble.n	801d28e <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801d280:	697b      	ldr	r3, [r7, #20]
 801d282:	009b      	lsls	r3, r3, #2
 801d284:	461a      	mov	r2, r3
 801d286:	68f9      	ldr	r1, [r7, #12]
 801d288:	6878      	ldr	r0, [r7, #4]
 801d28a:	f006 fdd1 	bl	8023e30 <memmove>
      return __result + __count;
 801d28e:	697b      	ldr	r3, [r7, #20]
 801d290:	009b      	lsls	r3, r3, #2
 801d292:	687a      	ldr	r2, [r7, #4]
 801d294:	4413      	add	r3, r2
    }
 801d296:	4618      	mov	r0, r3
 801d298:	3718      	adds	r7, #24
 801d29a:	46bd      	mov	sp, r7
 801d29c:	bd80      	pop	{r7, pc}

0801d29e <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801d29e:	b580      	push	{r7, lr}
 801d2a0:	b082      	sub	sp, #8
 801d2a2:	af00      	add	r7, sp, #0
 801d2a4:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801d2a6:	6878      	ldr	r0, [r7, #4]
 801d2a8:	f000 f805 	bl	801d2b6 <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>
 801d2ac:	4603      	mov	r3, r0
 801d2ae:	4618      	mov	r0, r3
 801d2b0:	3708      	adds	r7, #8
 801d2b2:	46bd      	mov	sp, r7
 801d2b4:	bd80      	pop	{r7, pc}

0801d2b6 <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801d2b6:	b480      	push	{r7}
 801d2b8:	b083      	sub	sp, #12
 801d2ba:	af00      	add	r7, sp, #0
 801d2bc:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801d2be:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801d2c2:	4618      	mov	r0, r3
 801d2c4:	370c      	adds	r7, #12
 801d2c6:	46bd      	mov	sp, r7
 801d2c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d2cc:	4770      	bx	lr

0801d2ce <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801d2ce:	b480      	push	{r7}
 801d2d0:	b083      	sub	sp, #12
 801d2d2:	af00      	add	r7, sp, #0
 801d2d4:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d2d6:	687b      	ldr	r3, [r7, #4]
 801d2d8:	4618      	mov	r0, r3
 801d2da:	370c      	adds	r7, #12
 801d2dc:	46bd      	mov	sp, r7
 801d2de:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d2e2:	4770      	bx	lr

0801d2e4 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d2e4:	b580      	push	{r7, lr}
 801d2e6:	b086      	sub	sp, #24
 801d2e8:	af00      	add	r7, sp, #0
 801d2ea:	60f8      	str	r0, [r7, #12]
 801d2ec:	60b9      	str	r1, [r7, #8]
 801d2ee:	607a      	str	r2, [r7, #4]
 801d2f0:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801d2f2:	68ba      	ldr	r2, [r7, #8]
 801d2f4:	68fb      	ldr	r3, [r7, #12]
 801d2f6:	1ad3      	subs	r3, r2, r3
 801d2f8:	109b      	asrs	r3, r3, #2
 801d2fa:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801d2fc:	697b      	ldr	r3, [r7, #20]
 801d2fe:	2b00      	cmp	r3, #0
 801d300:	dd06      	ble.n	801d310 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801d302:	697b      	ldr	r3, [r7, #20]
 801d304:	009b      	lsls	r3, r3, #2
 801d306:	461a      	mov	r2, r3
 801d308:	68f9      	ldr	r1, [r7, #12]
 801d30a:	6878      	ldr	r0, [r7, #4]
 801d30c:	f006 fd90 	bl	8023e30 <memmove>
      return __result + __count;
 801d310:	697b      	ldr	r3, [r7, #20]
 801d312:	009b      	lsls	r3, r3, #2
 801d314:	687a      	ldr	r2, [r7, #4]
 801d316:	4413      	add	r3, r2
    }
 801d318:	4618      	mov	r0, r3
 801d31a:	3718      	adds	r7, #24
 801d31c:	46bd      	mov	sp, r7
 801d31e:	bd80      	pop	{r7, pc}

0801d320 <_ZNSt16allocator_traitsISaIP14And_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801d320:	b580      	push	{r7, lr}
 801d322:	b082      	sub	sp, #8
 801d324:	af00      	add	r7, sp, #0
 801d326:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801d328:	6878      	ldr	r0, [r7, #4]
 801d32a:	f000 f805 	bl	801d338 <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>
 801d32e:	4603      	mov	r3, r0
 801d330:	4618      	mov	r0, r3
 801d332:	3708      	adds	r7, #8
 801d334:	46bd      	mov	sp, r7
 801d336:	bd80      	pop	{r7, pc}

0801d338 <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801d338:	b480      	push	{r7}
 801d33a:	b083      	sub	sp, #12
 801d33c:	af00      	add	r7, sp, #0
 801d33e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801d340:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801d344:	4618      	mov	r0, r3
 801d346:	370c      	adds	r7, #12
 801d348:	46bd      	mov	sp, r7
 801d34a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d34e:	4770      	bx	lr

0801d350 <_ZSt12__niter_baseIPP14And_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801d350:	b480      	push	{r7}
 801d352:	b083      	sub	sp, #12
 801d354:	af00      	add	r7, sp, #0
 801d356:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d358:	687b      	ldr	r3, [r7, #4]
 801d35a:	4618      	mov	r0, r3
 801d35c:	370c      	adds	r7, #12
 801d35e:	46bd      	mov	sp, r7
 801d360:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d364:	4770      	bx	lr

0801d366 <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d366:	b580      	push	{r7, lr}
 801d368:	b086      	sub	sp, #24
 801d36a:	af00      	add	r7, sp, #0
 801d36c:	60f8      	str	r0, [r7, #12]
 801d36e:	60b9      	str	r1, [r7, #8]
 801d370:	607a      	str	r2, [r7, #4]
 801d372:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801d374:	68ba      	ldr	r2, [r7, #8]
 801d376:	68fb      	ldr	r3, [r7, #12]
 801d378:	1ad3      	subs	r3, r2, r3
 801d37a:	109b      	asrs	r3, r3, #2
 801d37c:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801d37e:	697b      	ldr	r3, [r7, #20]
 801d380:	2b00      	cmp	r3, #0
 801d382:	dd06      	ble.n	801d392 <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801d384:	697b      	ldr	r3, [r7, #20]
 801d386:	009b      	lsls	r3, r3, #2
 801d388:	461a      	mov	r2, r3
 801d38a:	68f9      	ldr	r1, [r7, #12]
 801d38c:	6878      	ldr	r0, [r7, #4]
 801d38e:	f006 fd4f 	bl	8023e30 <memmove>
      return __result + __count;
 801d392:	697b      	ldr	r3, [r7, #20]
 801d394:	009b      	lsls	r3, r3, #2
 801d396:	687a      	ldr	r2, [r7, #4]
 801d398:	4413      	add	r3, r2
    }
 801d39a:	4618      	mov	r0, r3
 801d39c:	3718      	adds	r7, #24
 801d39e:	46bd      	mov	sp, r7
 801d3a0:	bd80      	pop	{r7, pc}
	...

0801d3a4 <_Z41__static_initialization_and_destruction_0ii>:
 801d3a4:	b590      	push	{r4, r7, lr}
 801d3a6:	b0e7      	sub	sp, #412	; 0x19c
 801d3a8:	af02      	add	r7, sp, #8
 801d3aa:	1d3b      	adds	r3, r7, #4
 801d3ac:	6018      	str	r0, [r3, #0]
 801d3ae:	463b      	mov	r3, r7
 801d3b0:	6019      	str	r1, [r3, #0]
 801d3b2:	1d3b      	adds	r3, r7, #4
 801d3b4:	681b      	ldr	r3, [r3, #0]
 801d3b6:	2b01      	cmp	r3, #1
 801d3b8:	f040 819d 	bne.w	801d6f6 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801d3bc:	463b      	mov	r3, r7
 801d3be:	681b      	ldr	r3, [r3, #0]
 801d3c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801d3c4:	4293      	cmp	r3, r2
 801d3c6:	f040 8196 	bne.w	801d6f6 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801d3ca:	f107 0314 	add.w	r3, r7, #20
 801d3ce:	4618      	mov	r0, r3
 801d3d0:	2322      	movs	r3, #34	; 0x22
 801d3d2:	461a      	mov	r2, r3
 801d3d4:	2100      	movs	r1, #0
 801d3d6:	f006 fd45 	bl	8023e64 <memset>
 801d3da:	f107 0314 	add.w	r3, r7, #20
 801d3de:	223a      	movs	r2, #58	; 0x3a
 801d3e0:	701a      	strb	r2, [r3, #0]
 801d3e2:	f107 0314 	add.w	r3, r7, #20
 801d3e6:	2201      	movs	r2, #1
 801d3e8:	705a      	strb	r2, [r3, #1]
 801d3ea:	f107 0314 	add.w	r3, r7, #20
 801d3ee:	220a      	movs	r2, #10
 801d3f0:	709a      	strb	r2, [r3, #2]
 801d3f2:	f107 0314 	add.w	r3, r7, #20
 801d3f6:	220a      	movs	r2, #10
 801d3f8:	70da      	strb	r2, [r3, #3]
 801d3fa:	f107 0314 	add.w	r3, r7, #20
 801d3fe:	222c      	movs	r2, #44	; 0x2c
 801d400:	711a      	strb	r2, [r3, #4]
 801d402:	f107 0314 	add.w	r3, r7, #20
 801d406:	220c      	movs	r2, #12
 801d408:	715a      	strb	r2, [r3, #5]
 801d40a:	f107 0314 	add.w	r3, r7, #20
 801d40e:	222e      	movs	r2, #46	; 0x2e
 801d410:	719a      	strb	r2, [r3, #6]
 801d412:	f107 0314 	add.w	r3, r7, #20
 801d416:	220b      	movs	r2, #11
 801d418:	71da      	strb	r2, [r3, #7]
 801d41a:	f107 0314 	add.w	r3, r7, #20
 801d41e:	225b      	movs	r2, #91	; 0x5b
 801d420:	721a      	strb	r2, [r3, #8]
 801d422:	f107 0314 	add.w	r3, r7, #20
 801d426:	220d      	movs	r2, #13
 801d428:	725a      	strb	r2, [r3, #9]
 801d42a:	f107 0314 	add.w	r3, r7, #20
 801d42e:	225d      	movs	r2, #93	; 0x5d
 801d430:	729a      	strb	r2, [r3, #10]
 801d432:	f107 0314 	add.w	r3, r7, #20
 801d436:	220e      	movs	r2, #14
 801d438:	72da      	strb	r2, [r3, #11]
 801d43a:	f107 0314 	add.w	r3, r7, #20
 801d43e:	227c      	movs	r2, #124	; 0x7c
 801d440:	731a      	strb	r2, [r3, #12]
 801d442:	f107 0314 	add.w	r3, r7, #20
 801d446:	2215      	movs	r2, #21
 801d448:	735a      	strb	r2, [r3, #13]
 801d44a:	f107 0314 	add.w	r3, r7, #20
 801d44e:	2226      	movs	r2, #38	; 0x26
 801d450:	739a      	strb	r2, [r3, #14]
 801d452:	f107 0314 	add.w	r3, r7, #20
 801d456:	2216      	movs	r2, #22
 801d458:	73da      	strb	r2, [r3, #15]
 801d45a:	f107 0314 	add.w	r3, r7, #20
 801d45e:	222b      	movs	r2, #43	; 0x2b
 801d460:	741a      	strb	r2, [r3, #16]
 801d462:	f107 0314 	add.w	r3, r7, #20
 801d466:	221f      	movs	r2, #31
 801d468:	745a      	strb	r2, [r3, #17]
 801d46a:	f107 0314 	add.w	r3, r7, #20
 801d46e:	222d      	movs	r2, #45	; 0x2d
 801d470:	749a      	strb	r2, [r3, #18]
 801d472:	f107 0314 	add.w	r3, r7, #20
 801d476:	2220      	movs	r2, #32
 801d478:	74da      	strb	r2, [r3, #19]
 801d47a:	f107 0314 	add.w	r3, r7, #20
 801d47e:	222a      	movs	r2, #42	; 0x2a
 801d480:	751a      	strb	r2, [r3, #20]
 801d482:	f107 0314 	add.w	r3, r7, #20
 801d486:	2221      	movs	r2, #33	; 0x21
 801d488:	755a      	strb	r2, [r3, #21]
 801d48a:	f107 0314 	add.w	r3, r7, #20
 801d48e:	222f      	movs	r2, #47	; 0x2f
 801d490:	759a      	strb	r2, [r3, #22]
 801d492:	f107 0314 	add.w	r3, r7, #20
 801d496:	2222      	movs	r2, #34	; 0x22
 801d498:	75da      	strb	r2, [r3, #23]
 801d49a:	f107 0314 	add.w	r3, r7, #20
 801d49e:	225e      	movs	r2, #94	; 0x5e
 801d4a0:	761a      	strb	r2, [r3, #24]
 801d4a2:	f107 0314 	add.w	r3, r7, #20
 801d4a6:	2223      	movs	r2, #35	; 0x23
 801d4a8:	765a      	strb	r2, [r3, #25]
 801d4aa:	f107 0314 	add.w	r3, r7, #20
 801d4ae:	2225      	movs	r2, #37	; 0x25
 801d4b0:	769a      	strb	r2, [r3, #26]
 801d4b2:	f107 0314 	add.w	r3, r7, #20
 801d4b6:	2224      	movs	r2, #36	; 0x24
 801d4b8:	76da      	strb	r2, [r3, #27]
 801d4ba:	f107 0314 	add.w	r3, r7, #20
 801d4be:	2228      	movs	r2, #40	; 0x28
 801d4c0:	771a      	strb	r2, [r3, #28]
 801d4c2:	f107 0314 	add.w	r3, r7, #20
 801d4c6:	2226      	movs	r2, #38	; 0x26
 801d4c8:	775a      	strb	r2, [r3, #29]
 801d4ca:	f107 0314 	add.w	r3, r7, #20
 801d4ce:	2229      	movs	r2, #41	; 0x29
 801d4d0:	779a      	strb	r2, [r3, #30]
 801d4d2:	f107 0314 	add.w	r3, r7, #20
 801d4d6:	2227      	movs	r2, #39	; 0x27
 801d4d8:	77da      	strb	r2, [r3, #31]
 801d4da:	f107 0314 	add.w	r3, r7, #20
 801d4de:	2225      	movs	r2, #37	; 0x25
 801d4e0:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801d4e4:	f107 030c 	add.w	r3, r7, #12
 801d4e8:	f107 0214 	add.w	r2, r7, #20
 801d4ec:	601a      	str	r2, [r3, #0]
 801d4ee:	f107 030c 	add.w	r3, r7, #12
 801d4f2:	2211      	movs	r2, #17
 801d4f4:	605a      	str	r2, [r3, #4]
 801d4f6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801d4fa:	4618      	mov	r0, r3
 801d4fc:	f7e4 fabe 	bl	8001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801d500:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801d504:	f107 020c 	add.w	r2, r7, #12
 801d508:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801d50c:	9300      	str	r3, [sp, #0]
 801d50e:	460b      	mov	r3, r1
 801d510:	ca06      	ldmia	r2, {r1, r2}
 801d512:	4885      	ldr	r0, [pc, #532]	; (801d728 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801d514:	f7e4 faca 	bl	8001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801d518:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801d51c:	4618      	mov	r0, r3
 801d51e:	f7e4 fab9 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801d522:	2305      	movs	r3, #5
 801d524:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801d528:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801d52c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d530:	497e      	ldr	r1, [pc, #504]	; (801d72c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801d532:	4618      	mov	r0, r3
 801d534:	f7e3 fde0 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801d538:	2306      	movs	r3, #6
 801d53a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801d53e:	f207 1263 	addw	r2, r7, #355	; 0x163
 801d542:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d546:	331c      	adds	r3, #28
 801d548:	4979      	ldr	r1, [pc, #484]	; (801d730 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801d54a:	4618      	mov	r0, r3
 801d54c:	f7e3 fdfc 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801d550:	2307      	movs	r3, #7
 801d552:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801d556:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801d55a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d55e:	3338      	adds	r3, #56	; 0x38
 801d560:	4974      	ldr	r1, [pc, #464]	; (801d734 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801d562:	4618      	mov	r0, r3
 801d564:	f7e3 fdf0 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801d568:	2308      	movs	r3, #8
 801d56a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801d56e:	f207 1265 	addw	r2, r7, #357	; 0x165
 801d572:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d576:	3354      	adds	r3, #84	; 0x54
 801d578:	496f      	ldr	r1, [pc, #444]	; (801d738 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801d57a:	4618      	mov	r0, r3
 801d57c:	f7e3 fdbc 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801d580:	2309      	movs	r3, #9
 801d582:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801d586:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801d58a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d58e:	3370      	adds	r3, #112	; 0x70
 801d590:	496a      	ldr	r1, [pc, #424]	; (801d73c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801d592:	4618      	mov	r0, r3
 801d594:	f7e3 fe00 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801d598:	2310      	movs	r3, #16
 801d59a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801d59e:	f207 1267 	addw	r2, r7, #359	; 0x167
 801d5a2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d5a6:	338c      	adds	r3, #140	; 0x8c
 801d5a8:	4965      	ldr	r1, [pc, #404]	; (801d740 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801d5aa:	4618      	mov	r0, r3
 801d5ac:	f7e3 fe1c 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801d5b0:	2311      	movs	r3, #17
 801d5b2:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801d5b6:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801d5ba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d5be:	33a8      	adds	r3, #168	; 0xa8
 801d5c0:	4960      	ldr	r1, [pc, #384]	; (801d744 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801d5c2:	4618      	mov	r0, r3
 801d5c4:	f7e3 fde8 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801d5c8:	2312      	movs	r3, #18
 801d5ca:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801d5ce:	f207 1269 	addw	r2, r7, #361	; 0x169
 801d5d2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d5d6:	33c4      	adds	r3, #196	; 0xc4
 801d5d8:	495b      	ldr	r1, [pc, #364]	; (801d748 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801d5da:	4618      	mov	r0, r3
 801d5dc:	f7e3 fd8c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801d5e0:	2313      	movs	r3, #19
 801d5e2:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801d5e6:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801d5ea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d5ee:	33e0      	adds	r3, #224	; 0xe0
 801d5f0:	4956      	ldr	r1, [pc, #344]	; (801d74c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801d5f2:	4618      	mov	r0, r3
 801d5f4:	f7e3 fda8 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801d5f8:	2314      	movs	r3, #20
 801d5fa:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801d5fe:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801d602:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d606:	33fc      	adds	r3, #252	; 0xfc
 801d608:	4951      	ldr	r1, [pc, #324]	; (801d750 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801d60a:	4618      	mov	r0, r3
 801d60c:	f7e3 fe14 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801d610:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801d614:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801d618:	601a      	str	r2, [r3, #0]
 801d61a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801d61e:	220a      	movs	r2, #10
 801d620:	605a      	str	r2, [r3, #4]
 801d622:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801d626:	4618      	mov	r0, r3
 801d628:	f7e4 facd 	bl	8001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801d62c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801d630:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801d634:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801d638:	9300      	str	r3, [sp, #0]
 801d63a:	460b      	mov	r3, r1
 801d63c:	ca06      	ldmia	r2, {r1, r2}
 801d63e:	4845      	ldr	r0, [pc, #276]	; (801d754 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801d640:	f7e4 fad9 	bl	8001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801d644:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801d648:	4618      	mov	r0, r3
 801d64a:	f7e4 fac8 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801d64e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801d652:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801d656:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d65a:	429c      	cmp	r4, r3
 801d65c:	d004      	beq.n	801d668 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801d65e:	3c1c      	subs	r4, #28
 801d660:	4620      	mov	r0, r4
 801d662:	f7e3 fd3c 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801d666:	e7f6      	b.n	801d656 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801d668:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801d66c:	2200      	movs	r2, #0
 801d66e:	601a      	str	r2, [r3, #0]
 801d670:	605a      	str	r2, [r3, #4]
 801d672:	609a      	str	r2, [r3, #8]
 801d674:	233c      	movs	r3, #60	; 0x3c
 801d676:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801d67a:	231b      	movs	r3, #27
 801d67c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801d680:	231c      	movs	r3, #28
 801d682:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801d686:	233e      	movs	r3, #62	; 0x3e
 801d688:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801d68c:	2319      	movs	r3, #25
 801d68e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801d692:	231a      	movs	r3, #26
 801d694:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801d698:	233d      	movs	r3, #61	; 0x3d
 801d69a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801d69e:	2318      	movs	r3, #24
 801d6a0:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801d6a4:	231d      	movs	r3, #29
 801d6a6:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801d6aa:	2321      	movs	r3, #33	; 0x21
 801d6ac:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801d6b0:	2317      	movs	r3, #23
 801d6b2:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801d6b6:	231e      	movs	r3, #30
 801d6b8:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801d6bc:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801d6c0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801d6c4:	2304      	movs	r3, #4
 801d6c6:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801d6ca:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801d6ce:	4618      	mov	r0, r3
 801d6d0:	f7e4 fac1 	bl	8001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801d6d4:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801d6d8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801d6dc:	9300      	str	r3, [sp, #0]
 801d6de:	4613      	mov	r3, r2
 801d6e0:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801d6e4:	ca06      	ldmia	r2, {r1, r2}
 801d6e6:	481c      	ldr	r0, [pc, #112]	; (801d758 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801d6e8:	f7e4 facd 	bl	8001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801d6ec:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801d6f0:	4618      	mov	r0, r3
 801d6f2:	f7e4 fabc 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801d6f6:	1d3b      	adds	r3, r7, #4
 801d6f8:	681b      	ldr	r3, [r3, #0]
 801d6fa:	2b00      	cmp	r3, #0
 801d6fc:	d10e      	bne.n	801d71c <_Z41__static_initialization_and_destruction_0ii+0x378>
 801d6fe:	463b      	mov	r3, r7
 801d700:	681b      	ldr	r3, [r3, #0]
 801d702:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801d706:	4293      	cmp	r3, r2
 801d708:	d108      	bne.n	801d71c <_Z41__static_initialization_and_destruction_0ii+0x378>
 801d70a:	4813      	ldr	r0, [pc, #76]	; (801d758 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801d70c:	f7eb ff4d 	bl	80095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801d710:	4810      	ldr	r0, [pc, #64]	; (801d754 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801d712:	f7eb ff57 	bl	80095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801d716:	4804      	ldr	r0, [pc, #16]	; (801d728 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801d718:	f7eb ff61 	bl	80095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801d71c:	bf00      	nop
 801d71e:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801d722:	46bd      	mov	sp, r7
 801d724:	bd90      	pop	{r4, r7, pc}
 801d726:	bf00      	nop
 801d728:	2000057c 	.word	0x2000057c
 801d72c:	08027bd4 	.word	0x08027bd4
 801d730:	08027bdc 	.word	0x08027bdc
 801d734:	08027be4 	.word	0x08027be4
 801d738:	08027bec 	.word	0x08027bec
 801d73c:	08027bf4 	.word	0x08027bf4
 801d740:	08027bfc 	.word	0x08027bfc
 801d744:	08027c00 	.word	0x08027c00
 801d748:	08027c08 	.word	0x08027c08
 801d74c:	08027c10 	.word	0x08027c10
 801d750:	08027c18 	.word	0x08027c18
 801d754:	20000594 	.word	0x20000594
 801d758:	200005ac 	.word	0x200005ac

0801d75c <_GLOBAL__sub_I__ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
 801d75c:	b580      	push	{r7, lr}
 801d75e:	af00      	add	r7, sp, #0
 801d760:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801d764:	2001      	movs	r0, #1
 801d766:	f7ff fe1d 	bl	801d3a4 <_Z41__static_initialization_and_destruction_0ii>
 801d76a:	bd80      	pop	{r7, pc}

0801d76c <_GLOBAL__sub_D__ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
 801d76c:	b580      	push	{r7, lr}
 801d76e:	af00      	add	r7, sp, #0
 801d770:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801d774:	2000      	movs	r0, #0
 801d776:	f7ff fe15 	bl	801d3a4 <_Z41__static_initialization_and_destruction_0ii>
 801d77a:	bd80      	pop	{r7, pc}

0801d77c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 801d77c:	b580      	push	{r7, lr}
 801d77e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 801d780:	f002 f887 	bl	801f892 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 801d784:	f000 f80a 	bl	801d79c <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 801d788:	f000 f8e0 	bl	801d94c <_ZL12MX_GPIO_Initv>
  MX_USART1_UART_Init();
 801d78c:	f000 f8aa 	bl	801d8e4 <_ZL19MX_USART1_UART_Initv>
  /* USER CODE BEGIN 2 */
  my_main_run(&huart1);
 801d790:	4801      	ldr	r0, [pc, #4]	; (801d798 <main+0x1c>)
 801d792:	f000 fae5 	bl	801dd60 <_Z11my_main_runP20__UART_HandleTypeDef>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 801d796:	e7fe      	b.n	801d796 <main+0x1a>
 801d798:	2000060c 	.word	0x2000060c

0801d79c <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 801d79c:	b580      	push	{r7, lr}
 801d79e:	b0b4      	sub	sp, #208	; 0xd0
 801d7a0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 801d7a2:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801d7a6:	2230      	movs	r2, #48	; 0x30
 801d7a8:	2100      	movs	r1, #0
 801d7aa:	4618      	mov	r0, r3
 801d7ac:	f006 fb5a 	bl	8023e64 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 801d7b0:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 801d7b4:	2200      	movs	r2, #0
 801d7b6:	601a      	str	r2, [r3, #0]
 801d7b8:	605a      	str	r2, [r3, #4]
 801d7ba:	609a      	str	r2, [r3, #8]
 801d7bc:	60da      	str	r2, [r3, #12]
 801d7be:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 801d7c0:	f107 0308 	add.w	r3, r7, #8
 801d7c4:	2284      	movs	r2, #132	; 0x84
 801d7c6:	2100      	movs	r1, #0
 801d7c8:	4618      	mov	r0, r3
 801d7ca:	f006 fb4b 	bl	8023e64 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 801d7ce:	4b43      	ldr	r3, [pc, #268]	; (801d8dc <_Z18SystemClock_Configv+0x140>)
 801d7d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801d7d2:	4a42      	ldr	r2, [pc, #264]	; (801d8dc <_Z18SystemClock_Configv+0x140>)
 801d7d4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801d7d8:	6413      	str	r3, [r2, #64]	; 0x40
 801d7da:	4b40      	ldr	r3, [pc, #256]	; (801d8dc <_Z18SystemClock_Configv+0x140>)
 801d7dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801d7de:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801d7e2:	607b      	str	r3, [r7, #4]
 801d7e4:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 801d7e6:	4b3e      	ldr	r3, [pc, #248]	; (801d8e0 <_Z18SystemClock_Configv+0x144>)
 801d7e8:	681b      	ldr	r3, [r3, #0]
 801d7ea:	4a3d      	ldr	r2, [pc, #244]	; (801d8e0 <_Z18SystemClock_Configv+0x144>)
 801d7ec:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 801d7f0:	6013      	str	r3, [r2, #0]
 801d7f2:	4b3b      	ldr	r3, [pc, #236]	; (801d8e0 <_Z18SystemClock_Configv+0x144>)
 801d7f4:	681b      	ldr	r3, [r3, #0]
 801d7f6:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 801d7fa:	603b      	str	r3, [r7, #0]
 801d7fc:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 801d7fe:	2302      	movs	r3, #2
 801d800:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 801d804:	2301      	movs	r3, #1
 801d806:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 801d80a:	2310      	movs	r3, #16
 801d80c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 801d810:	2302      	movs	r3, #2
 801d812:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 801d816:	2300      	movs	r3, #0
 801d818:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  RCC_OscInitStruct.PLL.PLLM = 8;
 801d81c:	2308      	movs	r3, #8
 801d81e:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
  RCC_OscInitStruct.PLL.PLLN = 216;
 801d822:	23d8      	movs	r3, #216	; 0xd8
 801d824:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 801d828:	2302      	movs	r3, #2
 801d82a:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
  RCC_OscInitStruct.PLL.PLLQ = 2;
 801d82e:	2302      	movs	r3, #2
 801d830:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 801d834:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801d838:	4618      	mov	r0, r3
 801d83a:	f002 fc4b 	bl	80200d4 <HAL_RCC_OscConfig>
 801d83e:	4603      	mov	r3, r0
 801d840:	2b00      	cmp	r3, #0
 801d842:	bf14      	ite	ne
 801d844:	2301      	movne	r3, #1
 801d846:	2300      	moveq	r3, #0
 801d848:	b2db      	uxtb	r3, r3
 801d84a:	2b00      	cmp	r3, #0
 801d84c:	d001      	beq.n	801d852 <_Z18SystemClock_Configv+0xb6>
  {
    Error_Handler();
 801d84e:	f000 f895 	bl	801d97c <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 801d852:	f002 fbef 	bl	8020034 <HAL_PWREx_EnableOverDrive>
 801d856:	4603      	mov	r3, r0
 801d858:	2b00      	cmp	r3, #0
 801d85a:	bf14      	ite	ne
 801d85c:	2301      	movne	r3, #1
 801d85e:	2300      	moveq	r3, #0
 801d860:	b2db      	uxtb	r3, r3
 801d862:	2b00      	cmp	r3, #0
 801d864:	d001      	beq.n	801d86a <_Z18SystemClock_Configv+0xce>
  {
    Error_Handler();
 801d866:	f000 f889 	bl	801d97c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 801d86a:	230f      	movs	r3, #15
 801d86c:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 801d870:	2302      	movs	r3, #2
 801d872:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 801d876:	2300      	movs	r3, #0
 801d878:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 801d87c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 801d880:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 801d884:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801d888:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 801d88c:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 801d890:	2107      	movs	r1, #7
 801d892:	4618      	mov	r0, r3
 801d894:	f002 fec2 	bl	802061c <HAL_RCC_ClockConfig>
 801d898:	4603      	mov	r3, r0
 801d89a:	2b00      	cmp	r3, #0
 801d89c:	bf14      	ite	ne
 801d89e:	2301      	movne	r3, #1
 801d8a0:	2300      	moveq	r3, #0
 801d8a2:	b2db      	uxtb	r3, r3
 801d8a4:	2b00      	cmp	r3, #0
 801d8a6:	d001      	beq.n	801d8ac <_Z18SystemClock_Configv+0x110>
  {
    Error_Handler();
 801d8a8:	f000 f868 	bl	801d97c <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 801d8ac:	2340      	movs	r3, #64	; 0x40
 801d8ae:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 801d8b0:	2300      	movs	r3, #0
 801d8b2:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 801d8b4:	f107 0308 	add.w	r3, r7, #8
 801d8b8:	4618      	mov	r0, r3
 801d8ba:	f003 f885 	bl	80209c8 <HAL_RCCEx_PeriphCLKConfig>
 801d8be:	4603      	mov	r3, r0
 801d8c0:	2b00      	cmp	r3, #0
 801d8c2:	bf14      	ite	ne
 801d8c4:	2301      	movne	r3, #1
 801d8c6:	2300      	moveq	r3, #0
 801d8c8:	b2db      	uxtb	r3, r3
 801d8ca:	2b00      	cmp	r3, #0
 801d8cc:	d001      	beq.n	801d8d2 <_Z18SystemClock_Configv+0x136>
  {
    Error_Handler();
 801d8ce:	f000 f855 	bl	801d97c <Error_Handler>
  }
}
 801d8d2:	bf00      	nop
 801d8d4:	37d0      	adds	r7, #208	; 0xd0
 801d8d6:	46bd      	mov	sp, r7
 801d8d8:	bd80      	pop	{r7, pc}
 801d8da:	bf00      	nop
 801d8dc:	40023800 	.word	0x40023800
 801d8e0:	40007000 	.word	0x40007000

0801d8e4 <_ZL19MX_USART1_UART_Initv>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 801d8e4:	b580      	push	{r7, lr}
 801d8e6:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 801d8e8:	4b16      	ldr	r3, [pc, #88]	; (801d944 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d8ea:	4a17      	ldr	r2, [pc, #92]	; (801d948 <_ZL19MX_USART1_UART_Initv+0x64>)
 801d8ec:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 801d8ee:	4b15      	ldr	r3, [pc, #84]	; (801d944 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d8f0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 801d8f4:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 801d8f6:	4b13      	ldr	r3, [pc, #76]	; (801d944 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d8f8:	2200      	movs	r2, #0
 801d8fa:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 801d8fc:	4b11      	ldr	r3, [pc, #68]	; (801d944 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d8fe:	2200      	movs	r2, #0
 801d900:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 801d902:	4b10      	ldr	r3, [pc, #64]	; (801d944 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d904:	2200      	movs	r2, #0
 801d906:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 801d908:	4b0e      	ldr	r3, [pc, #56]	; (801d944 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d90a:	220c      	movs	r2, #12
 801d90c:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 801d90e:	4b0d      	ldr	r3, [pc, #52]	; (801d944 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d910:	2200      	movs	r2, #0
 801d912:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 801d914:	4b0b      	ldr	r3, [pc, #44]	; (801d944 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d916:	2200      	movs	r2, #0
 801d918:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 801d91a:	4b0a      	ldr	r3, [pc, #40]	; (801d944 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d91c:	2200      	movs	r2, #0
 801d91e:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 801d920:	4b08      	ldr	r3, [pc, #32]	; (801d944 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d922:	2200      	movs	r2, #0
 801d924:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 801d926:	4807      	ldr	r0, [pc, #28]	; (801d944 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d928:	f003 fc3e 	bl	80211a8 <HAL_UART_Init>
 801d92c:	4603      	mov	r3, r0
 801d92e:	2b00      	cmp	r3, #0
 801d930:	bf14      	ite	ne
 801d932:	2301      	movne	r3, #1
 801d934:	2300      	moveq	r3, #0
 801d936:	b2db      	uxtb	r3, r3
 801d938:	2b00      	cmp	r3, #0
 801d93a:	d001      	beq.n	801d940 <_ZL19MX_USART1_UART_Initv+0x5c>
  {
    Error_Handler();
 801d93c:	f000 f81e 	bl	801d97c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 801d940:	bf00      	nop
 801d942:	bd80      	pop	{r7, pc}
 801d944:	2000060c 	.word	0x2000060c
 801d948:	40011000 	.word	0x40011000

0801d94c <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 801d94c:	b480      	push	{r7}
 801d94e:	b083      	sub	sp, #12
 801d950:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 801d952:	4b09      	ldr	r3, [pc, #36]	; (801d978 <_ZL12MX_GPIO_Initv+0x2c>)
 801d954:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d956:	4a08      	ldr	r2, [pc, #32]	; (801d978 <_ZL12MX_GPIO_Initv+0x2c>)
 801d958:	f043 0301 	orr.w	r3, r3, #1
 801d95c:	6313      	str	r3, [r2, #48]	; 0x30
 801d95e:	4b06      	ldr	r3, [pc, #24]	; (801d978 <_ZL12MX_GPIO_Initv+0x2c>)
 801d960:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d962:	f003 0301 	and.w	r3, r3, #1
 801d966:	607b      	str	r3, [r7, #4]
 801d968:	687b      	ldr	r3, [r7, #4]

}
 801d96a:	bf00      	nop
 801d96c:	370c      	adds	r7, #12
 801d96e:	46bd      	mov	sp, r7
 801d970:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d974:	4770      	bx	lr
 801d976:	bf00      	nop
 801d978:	40023800 	.word	0x40023800

0801d97c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 801d97c:	b480      	push	{r7}
 801d97e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 801d980:	b672      	cpsid	i
}
 801d982:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 801d984:	e7fe      	b.n	801d984 <Error_Handler+0x8>
	...

0801d988 <_Z41__static_initialization_and_destruction_0ii>:
  {
  }
  /* USER CODE END Error_Handler_Debug */
}
 801d988:	b590      	push	{r4, r7, lr}
 801d98a:	b0e7      	sub	sp, #412	; 0x19c
 801d98c:	af02      	add	r7, sp, #8
 801d98e:	1d3b      	adds	r3, r7, #4
 801d990:	6018      	str	r0, [r3, #0]
 801d992:	463b      	mov	r3, r7
 801d994:	6019      	str	r1, [r3, #0]
 801d996:	1d3b      	adds	r3, r7, #4
 801d998:	681b      	ldr	r3, [r3, #0]
 801d99a:	2b01      	cmp	r3, #1
 801d99c:	f040 819d 	bne.w	801dcda <_Z41__static_initialization_and_destruction_0ii+0x352>
 801d9a0:	463b      	mov	r3, r7
 801d9a2:	681b      	ldr	r3, [r3, #0]
 801d9a4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801d9a8:	4293      	cmp	r3, r2
 801d9aa:	f040 8196 	bne.w	801dcda <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801d9ae:	f107 0314 	add.w	r3, r7, #20
 801d9b2:	4618      	mov	r0, r3
 801d9b4:	2322      	movs	r3, #34	; 0x22
 801d9b6:	461a      	mov	r2, r3
 801d9b8:	2100      	movs	r1, #0
 801d9ba:	f006 fa53 	bl	8023e64 <memset>
 801d9be:	f107 0314 	add.w	r3, r7, #20
 801d9c2:	223a      	movs	r2, #58	; 0x3a
 801d9c4:	701a      	strb	r2, [r3, #0]
 801d9c6:	f107 0314 	add.w	r3, r7, #20
 801d9ca:	2201      	movs	r2, #1
 801d9cc:	705a      	strb	r2, [r3, #1]
 801d9ce:	f107 0314 	add.w	r3, r7, #20
 801d9d2:	220a      	movs	r2, #10
 801d9d4:	709a      	strb	r2, [r3, #2]
 801d9d6:	f107 0314 	add.w	r3, r7, #20
 801d9da:	220a      	movs	r2, #10
 801d9dc:	70da      	strb	r2, [r3, #3]
 801d9de:	f107 0314 	add.w	r3, r7, #20
 801d9e2:	222c      	movs	r2, #44	; 0x2c
 801d9e4:	711a      	strb	r2, [r3, #4]
 801d9e6:	f107 0314 	add.w	r3, r7, #20
 801d9ea:	220c      	movs	r2, #12
 801d9ec:	715a      	strb	r2, [r3, #5]
 801d9ee:	f107 0314 	add.w	r3, r7, #20
 801d9f2:	222e      	movs	r2, #46	; 0x2e
 801d9f4:	719a      	strb	r2, [r3, #6]
 801d9f6:	f107 0314 	add.w	r3, r7, #20
 801d9fa:	220b      	movs	r2, #11
 801d9fc:	71da      	strb	r2, [r3, #7]
 801d9fe:	f107 0314 	add.w	r3, r7, #20
 801da02:	225b      	movs	r2, #91	; 0x5b
 801da04:	721a      	strb	r2, [r3, #8]
 801da06:	f107 0314 	add.w	r3, r7, #20
 801da0a:	220d      	movs	r2, #13
 801da0c:	725a      	strb	r2, [r3, #9]
 801da0e:	f107 0314 	add.w	r3, r7, #20
 801da12:	225d      	movs	r2, #93	; 0x5d
 801da14:	729a      	strb	r2, [r3, #10]
 801da16:	f107 0314 	add.w	r3, r7, #20
 801da1a:	220e      	movs	r2, #14
 801da1c:	72da      	strb	r2, [r3, #11]
 801da1e:	f107 0314 	add.w	r3, r7, #20
 801da22:	227c      	movs	r2, #124	; 0x7c
 801da24:	731a      	strb	r2, [r3, #12]
 801da26:	f107 0314 	add.w	r3, r7, #20
 801da2a:	2215      	movs	r2, #21
 801da2c:	735a      	strb	r2, [r3, #13]
 801da2e:	f107 0314 	add.w	r3, r7, #20
 801da32:	2226      	movs	r2, #38	; 0x26
 801da34:	739a      	strb	r2, [r3, #14]
 801da36:	f107 0314 	add.w	r3, r7, #20
 801da3a:	2216      	movs	r2, #22
 801da3c:	73da      	strb	r2, [r3, #15]
 801da3e:	f107 0314 	add.w	r3, r7, #20
 801da42:	222b      	movs	r2, #43	; 0x2b
 801da44:	741a      	strb	r2, [r3, #16]
 801da46:	f107 0314 	add.w	r3, r7, #20
 801da4a:	221f      	movs	r2, #31
 801da4c:	745a      	strb	r2, [r3, #17]
 801da4e:	f107 0314 	add.w	r3, r7, #20
 801da52:	222d      	movs	r2, #45	; 0x2d
 801da54:	749a      	strb	r2, [r3, #18]
 801da56:	f107 0314 	add.w	r3, r7, #20
 801da5a:	2220      	movs	r2, #32
 801da5c:	74da      	strb	r2, [r3, #19]
 801da5e:	f107 0314 	add.w	r3, r7, #20
 801da62:	222a      	movs	r2, #42	; 0x2a
 801da64:	751a      	strb	r2, [r3, #20]
 801da66:	f107 0314 	add.w	r3, r7, #20
 801da6a:	2221      	movs	r2, #33	; 0x21
 801da6c:	755a      	strb	r2, [r3, #21]
 801da6e:	f107 0314 	add.w	r3, r7, #20
 801da72:	222f      	movs	r2, #47	; 0x2f
 801da74:	759a      	strb	r2, [r3, #22]
 801da76:	f107 0314 	add.w	r3, r7, #20
 801da7a:	2222      	movs	r2, #34	; 0x22
 801da7c:	75da      	strb	r2, [r3, #23]
 801da7e:	f107 0314 	add.w	r3, r7, #20
 801da82:	225e      	movs	r2, #94	; 0x5e
 801da84:	761a      	strb	r2, [r3, #24]
 801da86:	f107 0314 	add.w	r3, r7, #20
 801da8a:	2223      	movs	r2, #35	; 0x23
 801da8c:	765a      	strb	r2, [r3, #25]
 801da8e:	f107 0314 	add.w	r3, r7, #20
 801da92:	2225      	movs	r2, #37	; 0x25
 801da94:	769a      	strb	r2, [r3, #26]
 801da96:	f107 0314 	add.w	r3, r7, #20
 801da9a:	2224      	movs	r2, #36	; 0x24
 801da9c:	76da      	strb	r2, [r3, #27]
 801da9e:	f107 0314 	add.w	r3, r7, #20
 801daa2:	2228      	movs	r2, #40	; 0x28
 801daa4:	771a      	strb	r2, [r3, #28]
 801daa6:	f107 0314 	add.w	r3, r7, #20
 801daaa:	2226      	movs	r2, #38	; 0x26
 801daac:	775a      	strb	r2, [r3, #29]
 801daae:	f107 0314 	add.w	r3, r7, #20
 801dab2:	2229      	movs	r2, #41	; 0x29
 801dab4:	779a      	strb	r2, [r3, #30]
 801dab6:	f107 0314 	add.w	r3, r7, #20
 801daba:	2227      	movs	r2, #39	; 0x27
 801dabc:	77da      	strb	r2, [r3, #31]
 801dabe:	f107 0314 	add.w	r3, r7, #20
 801dac2:	2225      	movs	r2, #37	; 0x25
 801dac4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801dac8:	f107 030c 	add.w	r3, r7, #12
 801dacc:	f107 0214 	add.w	r2, r7, #20
 801dad0:	601a      	str	r2, [r3, #0]
 801dad2:	f107 030c 	add.w	r3, r7, #12
 801dad6:	2211      	movs	r2, #17
 801dad8:	605a      	str	r2, [r3, #4]
 801dada:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801dade:	4618      	mov	r0, r3
 801dae0:	f7e3 ffcc 	bl	8001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801dae4:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801dae8:	f107 020c 	add.w	r2, r7, #12
 801daec:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801daf0:	9300      	str	r3, [sp, #0]
 801daf2:	460b      	mov	r3, r1
 801daf4:	ca06      	ldmia	r2, {r1, r2}
 801daf6:	4885      	ldr	r0, [pc, #532]	; (801dd0c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801daf8:	f7e3 ffd8 	bl	8001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801dafc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801db00:	4618      	mov	r0, r3
 801db02:	f7e3 ffc7 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801db06:	2305      	movs	r3, #5
 801db08:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801db0c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801db10:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801db14:	497e      	ldr	r1, [pc, #504]	; (801dd10 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801db16:	4618      	mov	r0, r3
 801db18:	f7e3 faee 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801db1c:	2306      	movs	r3, #6
 801db1e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801db22:	f207 1263 	addw	r2, r7, #355	; 0x163
 801db26:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801db2a:	331c      	adds	r3, #28
 801db2c:	4979      	ldr	r1, [pc, #484]	; (801dd14 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801db2e:	4618      	mov	r0, r3
 801db30:	f7e3 fb0a 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801db34:	2307      	movs	r3, #7
 801db36:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801db3a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801db3e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801db42:	3338      	adds	r3, #56	; 0x38
 801db44:	4974      	ldr	r1, [pc, #464]	; (801dd18 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801db46:	4618      	mov	r0, r3
 801db48:	f7e3 fafe 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801db4c:	2308      	movs	r3, #8
 801db4e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801db52:	f207 1265 	addw	r2, r7, #357	; 0x165
 801db56:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801db5a:	3354      	adds	r3, #84	; 0x54
 801db5c:	496f      	ldr	r1, [pc, #444]	; (801dd1c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801db5e:	4618      	mov	r0, r3
 801db60:	f7e3 faca 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801db64:	2309      	movs	r3, #9
 801db66:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801db6a:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801db6e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801db72:	3370      	adds	r3, #112	; 0x70
 801db74:	496a      	ldr	r1, [pc, #424]	; (801dd20 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801db76:	4618      	mov	r0, r3
 801db78:	f7e3 fb0e 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801db7c:	2310      	movs	r3, #16
 801db7e:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801db82:	f207 1267 	addw	r2, r7, #359	; 0x167
 801db86:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801db8a:	338c      	adds	r3, #140	; 0x8c
 801db8c:	4965      	ldr	r1, [pc, #404]	; (801dd24 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801db8e:	4618      	mov	r0, r3
 801db90:	f7e3 fb2a 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801db94:	2311      	movs	r3, #17
 801db96:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801db9a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801db9e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801dba2:	33a8      	adds	r3, #168	; 0xa8
 801dba4:	4960      	ldr	r1, [pc, #384]	; (801dd28 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801dba6:	4618      	mov	r0, r3
 801dba8:	f7e3 faf6 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801dbac:	2312      	movs	r3, #18
 801dbae:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801dbb2:	f207 1269 	addw	r2, r7, #361	; 0x169
 801dbb6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801dbba:	33c4      	adds	r3, #196	; 0xc4
 801dbbc:	495b      	ldr	r1, [pc, #364]	; (801dd2c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801dbbe:	4618      	mov	r0, r3
 801dbc0:	f7e3 fa9a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801dbc4:	2313      	movs	r3, #19
 801dbc6:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801dbca:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801dbce:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801dbd2:	33e0      	adds	r3, #224	; 0xe0
 801dbd4:	4956      	ldr	r1, [pc, #344]	; (801dd30 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801dbd6:	4618      	mov	r0, r3
 801dbd8:	f7e3 fab6 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801dbdc:	2314      	movs	r3, #20
 801dbde:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801dbe2:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801dbe6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801dbea:	33fc      	adds	r3, #252	; 0xfc
 801dbec:	4951      	ldr	r1, [pc, #324]	; (801dd34 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801dbee:	4618      	mov	r0, r3
 801dbf0:	f7e3 fb22 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801dbf4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801dbf8:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801dbfc:	601a      	str	r2, [r3, #0]
 801dbfe:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801dc02:	220a      	movs	r2, #10
 801dc04:	605a      	str	r2, [r3, #4]
 801dc06:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801dc0a:	4618      	mov	r0, r3
 801dc0c:	f7e3 ffdb 	bl	8001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801dc10:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801dc14:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801dc18:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801dc1c:	9300      	str	r3, [sp, #0]
 801dc1e:	460b      	mov	r3, r1
 801dc20:	ca06      	ldmia	r2, {r1, r2}
 801dc22:	4845      	ldr	r0, [pc, #276]	; (801dd38 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801dc24:	f7e3 ffe7 	bl	8001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801dc28:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801dc2c:	4618      	mov	r0, r3
 801dc2e:	f7e3 ffd6 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801dc32:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801dc36:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801dc3a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801dc3e:	429c      	cmp	r4, r3
 801dc40:	d004      	beq.n	801dc4c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801dc42:	3c1c      	subs	r4, #28
 801dc44:	4620      	mov	r0, r4
 801dc46:	f7e3 fa4a 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801dc4a:	e7f6      	b.n	801dc3a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801dc4c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801dc50:	2200      	movs	r2, #0
 801dc52:	601a      	str	r2, [r3, #0]
 801dc54:	605a      	str	r2, [r3, #4]
 801dc56:	609a      	str	r2, [r3, #8]
 801dc58:	233c      	movs	r3, #60	; 0x3c
 801dc5a:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801dc5e:	231b      	movs	r3, #27
 801dc60:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801dc64:	231c      	movs	r3, #28
 801dc66:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801dc6a:	233e      	movs	r3, #62	; 0x3e
 801dc6c:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801dc70:	2319      	movs	r3, #25
 801dc72:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801dc76:	231a      	movs	r3, #26
 801dc78:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801dc7c:	233d      	movs	r3, #61	; 0x3d
 801dc7e:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801dc82:	2318      	movs	r3, #24
 801dc84:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801dc88:	231d      	movs	r3, #29
 801dc8a:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801dc8e:	2321      	movs	r3, #33	; 0x21
 801dc90:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801dc94:	2317      	movs	r3, #23
 801dc96:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801dc9a:	231e      	movs	r3, #30
 801dc9c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801dca0:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801dca4:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801dca8:	2304      	movs	r3, #4
 801dcaa:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801dcae:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801dcb2:	4618      	mov	r0, r3
 801dcb4:	f7e3 ffcf 	bl	8001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801dcb8:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801dcbc:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801dcc0:	9300      	str	r3, [sp, #0]
 801dcc2:	4613      	mov	r3, r2
 801dcc4:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801dcc8:	ca06      	ldmia	r2, {r1, r2}
 801dcca:	481c      	ldr	r0, [pc, #112]	; (801dd3c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801dccc:	f7e3 ffdb 	bl	8001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801dcd0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801dcd4:	4618      	mov	r0, r3
 801dcd6:	f7e3 ffca 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801dcda:	1d3b      	adds	r3, r7, #4
 801dcdc:	681b      	ldr	r3, [r3, #0]
 801dcde:	2b00      	cmp	r3, #0
 801dce0:	d10e      	bne.n	801dd00 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801dce2:	463b      	mov	r3, r7
 801dce4:	681b      	ldr	r3, [r3, #0]
 801dce6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801dcea:	4293      	cmp	r3, r2
 801dcec:	d108      	bne.n	801dd00 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801dcee:	4813      	ldr	r0, [pc, #76]	; (801dd3c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801dcf0:	f7eb fc5b 	bl	80095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801dcf4:	4810      	ldr	r0, [pc, #64]	; (801dd38 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801dcf6:	f7eb fc65 	bl	80095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801dcfa:	4804      	ldr	r0, [pc, #16]	; (801dd0c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801dcfc:	f7eb fc6f 	bl	80095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801dd00:	bf00      	nop
 801dd02:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801dd06:	46bd      	mov	sp, r7
 801dd08:	bd90      	pop	{r4, r7, pc}
 801dd0a:	bf00      	nop
 801dd0c:	200005c4 	.word	0x200005c4
 801dd10:	08027c48 	.word	0x08027c48
 801dd14:	08027c50 	.word	0x08027c50
 801dd18:	08027c58 	.word	0x08027c58
 801dd1c:	08027c60 	.word	0x08027c60
 801dd20:	08027c68 	.word	0x08027c68
 801dd24:	08027c70 	.word	0x08027c70
 801dd28:	08027c74 	.word	0x08027c74
 801dd2c:	08027c7c 	.word	0x08027c7c
 801dd30:	08027c84 	.word	0x08027c84
 801dd34:	08027c8c 	.word	0x08027c8c
 801dd38:	200005dc 	.word	0x200005dc
 801dd3c:	200005f4 	.word	0x200005f4

0801dd40 <_GLOBAL__sub_I_huart1>:
 801dd40:	b580      	push	{r7, lr}
 801dd42:	af00      	add	r7, sp, #0
 801dd44:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801dd48:	2001      	movs	r0, #1
 801dd4a:	f7ff fe1d 	bl	801d988 <_Z41__static_initialization_and_destruction_0ii>
 801dd4e:	bd80      	pop	{r7, pc}

0801dd50 <_GLOBAL__sub_D_huart1>:
 801dd50:	b580      	push	{r7, lr}
 801dd52:	af00      	add	r7, sp, #0
 801dd54:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801dd58:	2000      	movs	r0, #0
 801dd5a:	f7ff fe15 	bl	801d988 <_Z41__static_initialization_and_destruction_0ii>
 801dd5e:	bd80      	pop	{r7, pc}

0801dd60 <_Z11my_main_runP20__UART_HandleTypeDef>:
#include "my_main.h"

// main function called after setup from CUBEMX
void my_main_run(UART_HandleTypeDef* huart)
{
 801dd60:	b580      	push	{r7, lr}
 801dd62:	b084      	sub	sp, #16
 801dd64:	af00      	add	r7, sp, #0
 801dd66:	6078      	str	r0, [r7, #4]
	Program* P = Parser::parse_program();
 801dd68:	f7f6 f88e 	bl	8013e88 <_ZN6Parser13parse_programEv>
 801dd6c:	60f8      	str	r0, [r7, #12]
	Transmitter::start_listening();
 801dd6e:	f7fa fd07 	bl	8018780 <_ZN11Transmitter15start_listeningEv>
	Executor::execute(P);
 801dd72:	68f8      	ldr	r0, [r7, #12]
 801dd74:	f7e3 fa9c 	bl	80012b0 <_ZN8Executor7executeEP7Program>

	for(;;)
 801dd78:	e7fe      	b.n	801dd78 <_Z11my_main_runP20__UART_HandleTypeDef+0x18>
	...

0801dd7c <_Z41__static_initialization_and_destruction_0ii>:
	{

	}
}
 801dd7c:	b590      	push	{r4, r7, lr}
 801dd7e:	b0e7      	sub	sp, #412	; 0x19c
 801dd80:	af02      	add	r7, sp, #8
 801dd82:	1d3b      	adds	r3, r7, #4
 801dd84:	6018      	str	r0, [r3, #0]
 801dd86:	463b      	mov	r3, r7
 801dd88:	6019      	str	r1, [r3, #0]
 801dd8a:	1d3b      	adds	r3, r7, #4
 801dd8c:	681b      	ldr	r3, [r3, #0]
 801dd8e:	2b01      	cmp	r3, #1
 801dd90:	f040 819d 	bne.w	801e0ce <_Z41__static_initialization_and_destruction_0ii+0x352>
 801dd94:	463b      	mov	r3, r7
 801dd96:	681b      	ldr	r3, [r3, #0]
 801dd98:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801dd9c:	4293      	cmp	r3, r2
 801dd9e:	f040 8196 	bne.w	801e0ce <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801dda2:	f107 0314 	add.w	r3, r7, #20
 801dda6:	4618      	mov	r0, r3
 801dda8:	2322      	movs	r3, #34	; 0x22
 801ddaa:	461a      	mov	r2, r3
 801ddac:	2100      	movs	r1, #0
 801ddae:	f006 f859 	bl	8023e64 <memset>
 801ddb2:	f107 0314 	add.w	r3, r7, #20
 801ddb6:	223a      	movs	r2, #58	; 0x3a
 801ddb8:	701a      	strb	r2, [r3, #0]
 801ddba:	f107 0314 	add.w	r3, r7, #20
 801ddbe:	2201      	movs	r2, #1
 801ddc0:	705a      	strb	r2, [r3, #1]
 801ddc2:	f107 0314 	add.w	r3, r7, #20
 801ddc6:	220a      	movs	r2, #10
 801ddc8:	709a      	strb	r2, [r3, #2]
 801ddca:	f107 0314 	add.w	r3, r7, #20
 801ddce:	220a      	movs	r2, #10
 801ddd0:	70da      	strb	r2, [r3, #3]
 801ddd2:	f107 0314 	add.w	r3, r7, #20
 801ddd6:	222c      	movs	r2, #44	; 0x2c
 801ddd8:	711a      	strb	r2, [r3, #4]
 801ddda:	f107 0314 	add.w	r3, r7, #20
 801ddde:	220c      	movs	r2, #12
 801dde0:	715a      	strb	r2, [r3, #5]
 801dde2:	f107 0314 	add.w	r3, r7, #20
 801dde6:	222e      	movs	r2, #46	; 0x2e
 801dde8:	719a      	strb	r2, [r3, #6]
 801ddea:	f107 0314 	add.w	r3, r7, #20
 801ddee:	220b      	movs	r2, #11
 801ddf0:	71da      	strb	r2, [r3, #7]
 801ddf2:	f107 0314 	add.w	r3, r7, #20
 801ddf6:	225b      	movs	r2, #91	; 0x5b
 801ddf8:	721a      	strb	r2, [r3, #8]
 801ddfa:	f107 0314 	add.w	r3, r7, #20
 801ddfe:	220d      	movs	r2, #13
 801de00:	725a      	strb	r2, [r3, #9]
 801de02:	f107 0314 	add.w	r3, r7, #20
 801de06:	225d      	movs	r2, #93	; 0x5d
 801de08:	729a      	strb	r2, [r3, #10]
 801de0a:	f107 0314 	add.w	r3, r7, #20
 801de0e:	220e      	movs	r2, #14
 801de10:	72da      	strb	r2, [r3, #11]
 801de12:	f107 0314 	add.w	r3, r7, #20
 801de16:	227c      	movs	r2, #124	; 0x7c
 801de18:	731a      	strb	r2, [r3, #12]
 801de1a:	f107 0314 	add.w	r3, r7, #20
 801de1e:	2215      	movs	r2, #21
 801de20:	735a      	strb	r2, [r3, #13]
 801de22:	f107 0314 	add.w	r3, r7, #20
 801de26:	2226      	movs	r2, #38	; 0x26
 801de28:	739a      	strb	r2, [r3, #14]
 801de2a:	f107 0314 	add.w	r3, r7, #20
 801de2e:	2216      	movs	r2, #22
 801de30:	73da      	strb	r2, [r3, #15]
 801de32:	f107 0314 	add.w	r3, r7, #20
 801de36:	222b      	movs	r2, #43	; 0x2b
 801de38:	741a      	strb	r2, [r3, #16]
 801de3a:	f107 0314 	add.w	r3, r7, #20
 801de3e:	221f      	movs	r2, #31
 801de40:	745a      	strb	r2, [r3, #17]
 801de42:	f107 0314 	add.w	r3, r7, #20
 801de46:	222d      	movs	r2, #45	; 0x2d
 801de48:	749a      	strb	r2, [r3, #18]
 801de4a:	f107 0314 	add.w	r3, r7, #20
 801de4e:	2220      	movs	r2, #32
 801de50:	74da      	strb	r2, [r3, #19]
 801de52:	f107 0314 	add.w	r3, r7, #20
 801de56:	222a      	movs	r2, #42	; 0x2a
 801de58:	751a      	strb	r2, [r3, #20]
 801de5a:	f107 0314 	add.w	r3, r7, #20
 801de5e:	2221      	movs	r2, #33	; 0x21
 801de60:	755a      	strb	r2, [r3, #21]
 801de62:	f107 0314 	add.w	r3, r7, #20
 801de66:	222f      	movs	r2, #47	; 0x2f
 801de68:	759a      	strb	r2, [r3, #22]
 801de6a:	f107 0314 	add.w	r3, r7, #20
 801de6e:	2222      	movs	r2, #34	; 0x22
 801de70:	75da      	strb	r2, [r3, #23]
 801de72:	f107 0314 	add.w	r3, r7, #20
 801de76:	225e      	movs	r2, #94	; 0x5e
 801de78:	761a      	strb	r2, [r3, #24]
 801de7a:	f107 0314 	add.w	r3, r7, #20
 801de7e:	2223      	movs	r2, #35	; 0x23
 801de80:	765a      	strb	r2, [r3, #25]
 801de82:	f107 0314 	add.w	r3, r7, #20
 801de86:	2225      	movs	r2, #37	; 0x25
 801de88:	769a      	strb	r2, [r3, #26]
 801de8a:	f107 0314 	add.w	r3, r7, #20
 801de8e:	2224      	movs	r2, #36	; 0x24
 801de90:	76da      	strb	r2, [r3, #27]
 801de92:	f107 0314 	add.w	r3, r7, #20
 801de96:	2228      	movs	r2, #40	; 0x28
 801de98:	771a      	strb	r2, [r3, #28]
 801de9a:	f107 0314 	add.w	r3, r7, #20
 801de9e:	2226      	movs	r2, #38	; 0x26
 801dea0:	775a      	strb	r2, [r3, #29]
 801dea2:	f107 0314 	add.w	r3, r7, #20
 801dea6:	2229      	movs	r2, #41	; 0x29
 801dea8:	779a      	strb	r2, [r3, #30]
 801deaa:	f107 0314 	add.w	r3, r7, #20
 801deae:	2227      	movs	r2, #39	; 0x27
 801deb0:	77da      	strb	r2, [r3, #31]
 801deb2:	f107 0314 	add.w	r3, r7, #20
 801deb6:	2225      	movs	r2, #37	; 0x25
 801deb8:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801debc:	f107 030c 	add.w	r3, r7, #12
 801dec0:	f107 0214 	add.w	r2, r7, #20
 801dec4:	601a      	str	r2, [r3, #0]
 801dec6:	f107 030c 	add.w	r3, r7, #12
 801deca:	2211      	movs	r2, #17
 801decc:	605a      	str	r2, [r3, #4]
 801dece:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801ded2:	4618      	mov	r0, r3
 801ded4:	f7e3 fdd2 	bl	8001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801ded8:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801dedc:	f107 020c 	add.w	r2, r7, #12
 801dee0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801dee4:	9300      	str	r3, [sp, #0]
 801dee6:	460b      	mov	r3, r1
 801dee8:	ca06      	ldmia	r2, {r1, r2}
 801deea:	4885      	ldr	r0, [pc, #532]	; (801e100 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801deec:	f7e3 fdde 	bl	8001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801def0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801def4:	4618      	mov	r0, r3
 801def6:	f7e3 fdcd 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801defa:	2305      	movs	r3, #5
 801defc:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801df00:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801df04:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801df08:	497e      	ldr	r1, [pc, #504]	; (801e104 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801df0a:	4618      	mov	r0, r3
 801df0c:	f7e3 f8f4 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801df10:	2306      	movs	r3, #6
 801df12:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801df16:	f207 1263 	addw	r2, r7, #355	; 0x163
 801df1a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801df1e:	331c      	adds	r3, #28
 801df20:	4979      	ldr	r1, [pc, #484]	; (801e108 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801df22:	4618      	mov	r0, r3
 801df24:	f7e3 f910 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801df28:	2307      	movs	r3, #7
 801df2a:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801df2e:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801df32:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801df36:	3338      	adds	r3, #56	; 0x38
 801df38:	4974      	ldr	r1, [pc, #464]	; (801e10c <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801df3a:	4618      	mov	r0, r3
 801df3c:	f7e3 f904 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801df40:	2308      	movs	r3, #8
 801df42:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801df46:	f207 1265 	addw	r2, r7, #357	; 0x165
 801df4a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801df4e:	3354      	adds	r3, #84	; 0x54
 801df50:	496f      	ldr	r1, [pc, #444]	; (801e110 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801df52:	4618      	mov	r0, r3
 801df54:	f7e3 f8d0 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801df58:	2309      	movs	r3, #9
 801df5a:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801df5e:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801df62:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801df66:	3370      	adds	r3, #112	; 0x70
 801df68:	496a      	ldr	r1, [pc, #424]	; (801e114 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801df6a:	4618      	mov	r0, r3
 801df6c:	f7e3 f914 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801df70:	2310      	movs	r3, #16
 801df72:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801df76:	f207 1267 	addw	r2, r7, #359	; 0x167
 801df7a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801df7e:	338c      	adds	r3, #140	; 0x8c
 801df80:	4965      	ldr	r1, [pc, #404]	; (801e118 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801df82:	4618      	mov	r0, r3
 801df84:	f7e3 f930 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801df88:	2311      	movs	r3, #17
 801df8a:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801df8e:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801df92:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801df96:	33a8      	adds	r3, #168	; 0xa8
 801df98:	4960      	ldr	r1, [pc, #384]	; (801e11c <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801df9a:	4618      	mov	r0, r3
 801df9c:	f7e3 f8fc 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801dfa0:	2312      	movs	r3, #18
 801dfa2:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801dfa6:	f207 1269 	addw	r2, r7, #361	; 0x169
 801dfaa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801dfae:	33c4      	adds	r3, #196	; 0xc4
 801dfb0:	495b      	ldr	r1, [pc, #364]	; (801e120 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801dfb2:	4618      	mov	r0, r3
 801dfb4:	f7e3 f8a0 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801dfb8:	2313      	movs	r3, #19
 801dfba:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801dfbe:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801dfc2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801dfc6:	33e0      	adds	r3, #224	; 0xe0
 801dfc8:	4956      	ldr	r1, [pc, #344]	; (801e124 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801dfca:	4618      	mov	r0, r3
 801dfcc:	f7e3 f8bc 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801dfd0:	2314      	movs	r3, #20
 801dfd2:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801dfd6:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801dfda:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801dfde:	33fc      	adds	r3, #252	; 0xfc
 801dfe0:	4951      	ldr	r1, [pc, #324]	; (801e128 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801dfe2:	4618      	mov	r0, r3
 801dfe4:	f7e3 f928 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801dfe8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801dfec:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801dff0:	601a      	str	r2, [r3, #0]
 801dff2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801dff6:	220a      	movs	r2, #10
 801dff8:	605a      	str	r2, [r3, #4]
 801dffa:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801dffe:	4618      	mov	r0, r3
 801e000:	f7e3 fde1 	bl	8001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801e004:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801e008:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801e00c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e010:	9300      	str	r3, [sp, #0]
 801e012:	460b      	mov	r3, r1
 801e014:	ca06      	ldmia	r2, {r1, r2}
 801e016:	4845      	ldr	r0, [pc, #276]	; (801e12c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801e018:	f7e3 fded 	bl	8001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801e01c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e020:	4618      	mov	r0, r3
 801e022:	f7e3 fddc 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801e026:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801e02a:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801e02e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e032:	429c      	cmp	r4, r3
 801e034:	d004      	beq.n	801e040 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801e036:	3c1c      	subs	r4, #28
 801e038:	4620      	mov	r0, r4
 801e03a:	f7e3 f850 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801e03e:	e7f6      	b.n	801e02e <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801e040:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801e044:	2200      	movs	r2, #0
 801e046:	601a      	str	r2, [r3, #0]
 801e048:	605a      	str	r2, [r3, #4]
 801e04a:	609a      	str	r2, [r3, #8]
 801e04c:	233c      	movs	r3, #60	; 0x3c
 801e04e:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801e052:	231b      	movs	r3, #27
 801e054:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801e058:	231c      	movs	r3, #28
 801e05a:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801e05e:	233e      	movs	r3, #62	; 0x3e
 801e060:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801e064:	2319      	movs	r3, #25
 801e066:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801e06a:	231a      	movs	r3, #26
 801e06c:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801e070:	233d      	movs	r3, #61	; 0x3d
 801e072:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801e076:	2318      	movs	r3, #24
 801e078:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801e07c:	231d      	movs	r3, #29
 801e07e:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801e082:	2321      	movs	r3, #33	; 0x21
 801e084:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801e088:	2317      	movs	r3, #23
 801e08a:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801e08e:	231e      	movs	r3, #30
 801e090:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801e094:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801e098:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801e09c:	2304      	movs	r3, #4
 801e09e:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801e0a2:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e0a6:	4618      	mov	r0, r3
 801e0a8:	f7e3 fdd5 	bl	8001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801e0ac:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801e0b0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e0b4:	9300      	str	r3, [sp, #0]
 801e0b6:	4613      	mov	r3, r2
 801e0b8:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801e0bc:	ca06      	ldmia	r2, {r1, r2}
 801e0be:	481c      	ldr	r0, [pc, #112]	; (801e130 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801e0c0:	f7e3 fde1 	bl	8001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801e0c4:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e0c8:	4618      	mov	r0, r3
 801e0ca:	f7e3 fdd0 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801e0ce:	1d3b      	adds	r3, r7, #4
 801e0d0:	681b      	ldr	r3, [r3, #0]
 801e0d2:	2b00      	cmp	r3, #0
 801e0d4:	d10e      	bne.n	801e0f4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e0d6:	463b      	mov	r3, r7
 801e0d8:	681b      	ldr	r3, [r3, #0]
 801e0da:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e0de:	4293      	cmp	r3, r2
 801e0e0:	d108      	bne.n	801e0f4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e0e2:	4813      	ldr	r0, [pc, #76]	; (801e130 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801e0e4:	f7eb fa61 	bl	80095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801e0e8:	4810      	ldr	r0, [pc, #64]	; (801e12c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801e0ea:	f7eb fa6b 	bl	80095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801e0ee:	4804      	ldr	r0, [pc, #16]	; (801e100 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801e0f0:	f7eb fa75 	bl	80095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801e0f4:	bf00      	nop
 801e0f6:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801e0fa:	46bd      	mov	sp, r7
 801e0fc:	bd90      	pop	{r4, r7, pc}
 801e0fe:	bf00      	nop
 801e100:	20000690 	.word	0x20000690
 801e104:	08027cbc 	.word	0x08027cbc
 801e108:	08027cc4 	.word	0x08027cc4
 801e10c:	08027ccc 	.word	0x08027ccc
 801e110:	08027cd4 	.word	0x08027cd4
 801e114:	08027cdc 	.word	0x08027cdc
 801e118:	08027ce4 	.word	0x08027ce4
 801e11c:	08027ce8 	.word	0x08027ce8
 801e120:	08027cf0 	.word	0x08027cf0
 801e124:	08027cf8 	.word	0x08027cf8
 801e128:	08027d00 	.word	0x08027d00
 801e12c:	200006a8 	.word	0x200006a8
 801e130:	200006c0 	.word	0x200006c0

0801e134 <_GLOBAL__sub_I__Z11my_main_runP20__UART_HandleTypeDef>:
 801e134:	b580      	push	{r7, lr}
 801e136:	af00      	add	r7, sp, #0
 801e138:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e13c:	2001      	movs	r0, #1
 801e13e:	f7ff fe1d 	bl	801dd7c <_Z41__static_initialization_and_destruction_0ii>
 801e142:	bd80      	pop	{r7, pc}

0801e144 <_GLOBAL__sub_D__Z11my_main_runP20__UART_HandleTypeDef>:
 801e144:	b580      	push	{r7, lr}
 801e146:	af00      	add	r7, sp, #0
 801e148:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e14c:	2000      	movs	r0, #0
 801e14e:	f7ff fe15 	bl	801dd7c <_Z41__static_initialization_and_destruction_0ii>
 801e152:	bd80      	pop	{r7, pc}

0801e154 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 801e154:	b480      	push	{r7}
 801e156:	b083      	sub	sp, #12
 801e158:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 801e15a:	4b0f      	ldr	r3, [pc, #60]	; (801e198 <HAL_MspInit+0x44>)
 801e15c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e15e:	4a0e      	ldr	r2, [pc, #56]	; (801e198 <HAL_MspInit+0x44>)
 801e160:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801e164:	6413      	str	r3, [r2, #64]	; 0x40
 801e166:	4b0c      	ldr	r3, [pc, #48]	; (801e198 <HAL_MspInit+0x44>)
 801e168:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e16a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801e16e:	607b      	str	r3, [r7, #4]
 801e170:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 801e172:	4b09      	ldr	r3, [pc, #36]	; (801e198 <HAL_MspInit+0x44>)
 801e174:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801e176:	4a08      	ldr	r2, [pc, #32]	; (801e198 <HAL_MspInit+0x44>)
 801e178:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801e17c:	6453      	str	r3, [r2, #68]	; 0x44
 801e17e:	4b06      	ldr	r3, [pc, #24]	; (801e198 <HAL_MspInit+0x44>)
 801e180:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801e182:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 801e186:	603b      	str	r3, [r7, #0]
 801e188:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 801e18a:	bf00      	nop
 801e18c:	370c      	adds	r7, #12
 801e18e:	46bd      	mov	sp, r7
 801e190:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e194:	4770      	bx	lr
 801e196:	bf00      	nop
 801e198:	40023800 	.word	0x40023800

0801e19c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 801e19c:	b580      	push	{r7, lr}
 801e19e:	b08a      	sub	sp, #40	; 0x28
 801e1a0:	af00      	add	r7, sp, #0
 801e1a2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 801e1a4:	f107 0314 	add.w	r3, r7, #20
 801e1a8:	2200      	movs	r2, #0
 801e1aa:	601a      	str	r2, [r3, #0]
 801e1ac:	605a      	str	r2, [r3, #4]
 801e1ae:	609a      	str	r2, [r3, #8]
 801e1b0:	60da      	str	r2, [r3, #12]
 801e1b2:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 801e1b4:	687b      	ldr	r3, [r7, #4]
 801e1b6:	681b      	ldr	r3, [r3, #0]
 801e1b8:	4a1b      	ldr	r2, [pc, #108]	; (801e228 <HAL_UART_MspInit+0x8c>)
 801e1ba:	4293      	cmp	r3, r2
 801e1bc:	d130      	bne.n	801e220 <HAL_UART_MspInit+0x84>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 801e1be:	4b1b      	ldr	r3, [pc, #108]	; (801e22c <HAL_UART_MspInit+0x90>)
 801e1c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801e1c2:	4a1a      	ldr	r2, [pc, #104]	; (801e22c <HAL_UART_MspInit+0x90>)
 801e1c4:	f043 0310 	orr.w	r3, r3, #16
 801e1c8:	6453      	str	r3, [r2, #68]	; 0x44
 801e1ca:	4b18      	ldr	r3, [pc, #96]	; (801e22c <HAL_UART_MspInit+0x90>)
 801e1cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801e1ce:	f003 0310 	and.w	r3, r3, #16
 801e1d2:	613b      	str	r3, [r7, #16]
 801e1d4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 801e1d6:	4b15      	ldr	r3, [pc, #84]	; (801e22c <HAL_UART_MspInit+0x90>)
 801e1d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e1da:	4a14      	ldr	r2, [pc, #80]	; (801e22c <HAL_UART_MspInit+0x90>)
 801e1dc:	f043 0301 	orr.w	r3, r3, #1
 801e1e0:	6313      	str	r3, [r2, #48]	; 0x30
 801e1e2:	4b12      	ldr	r3, [pc, #72]	; (801e22c <HAL_UART_MspInit+0x90>)
 801e1e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e1e6:	f003 0301 	and.w	r3, r3, #1
 801e1ea:	60fb      	str	r3, [r7, #12]
 801e1ec:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 801e1ee:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 801e1f2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 801e1f4:	2302      	movs	r3, #2
 801e1f6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 801e1f8:	2300      	movs	r3, #0
 801e1fa:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 801e1fc:	2303      	movs	r3, #3
 801e1fe:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 801e200:	2307      	movs	r3, #7
 801e202:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 801e204:	f107 0314 	add.w	r3, r7, #20
 801e208:	4619      	mov	r1, r3
 801e20a:	4809      	ldr	r0, [pc, #36]	; (801e230 <HAL_UART_MspInit+0x94>)
 801e20c:	f001 fd66 	bl	801fcdc <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 801e210:	2200      	movs	r2, #0
 801e212:	2100      	movs	r1, #0
 801e214:	2025      	movs	r0, #37	; 0x25
 801e216:	f001 fc98 	bl	801fb4a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 801e21a:	2025      	movs	r0, #37	; 0x25
 801e21c:	f001 fcb1 	bl	801fb82 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 801e220:	bf00      	nop
 801e222:	3728      	adds	r7, #40	; 0x28
 801e224:	46bd      	mov	sp, r7
 801e226:	bd80      	pop	{r7, pc}
 801e228:	40011000 	.word	0x40011000
 801e22c:	40023800 	.word	0x40023800
 801e230:	40020000 	.word	0x40020000

0801e234 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 801e234:	b480      	push	{r7}
 801e236:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 801e238:	e7fe      	b.n	801e238 <NMI_Handler+0x4>

0801e23a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 801e23a:	b480      	push	{r7}
 801e23c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 801e23e:	e7fe      	b.n	801e23e <HardFault_Handler+0x4>

0801e240 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 801e240:	b480      	push	{r7}
 801e242:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 801e244:	e7fe      	b.n	801e244 <MemManage_Handler+0x4>

0801e246 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 801e246:	b480      	push	{r7}
 801e248:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 801e24a:	e7fe      	b.n	801e24a <BusFault_Handler+0x4>

0801e24c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 801e24c:	b480      	push	{r7}
 801e24e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 801e250:	e7fe      	b.n	801e250 <UsageFault_Handler+0x4>

0801e252 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 801e252:	b480      	push	{r7}
 801e254:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 801e256:	bf00      	nop
 801e258:	46bd      	mov	sp, r7
 801e25a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e25e:	4770      	bx	lr

0801e260 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 801e260:	b480      	push	{r7}
 801e262:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 801e264:	bf00      	nop
 801e266:	46bd      	mov	sp, r7
 801e268:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e26c:	4770      	bx	lr

0801e26e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 801e26e:	b480      	push	{r7}
 801e270:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 801e272:	bf00      	nop
 801e274:	46bd      	mov	sp, r7
 801e276:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e27a:	4770      	bx	lr

0801e27c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 801e27c:	b580      	push	{r7, lr}
 801e27e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 801e280:	f001 fb44 	bl	801f90c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 801e284:	bf00      	nop
 801e286:	bd80      	pop	{r7, pc}

0801e288 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 801e288:	b580      	push	{r7, lr}
 801e28a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 801e28c:	4802      	ldr	r0, [pc, #8]	; (801e298 <USART1_IRQHandler+0x10>)
 801e28e:	f003 f979 	bl	8021584 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 801e292:	bf00      	nop
 801e294:	bd80      	pop	{r7, pc}
 801e296:	bf00      	nop
 801e298:	2000060c 	.word	0x2000060c

0801e29c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 801e29c:	b480      	push	{r7}
 801e29e:	af00      	add	r7, sp, #0
	return 1;
 801e2a0:	2301      	movs	r3, #1
}
 801e2a2:	4618      	mov	r0, r3
 801e2a4:	46bd      	mov	sp, r7
 801e2a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e2aa:	4770      	bx	lr

0801e2ac <_kill>:

int _kill(int pid, int sig)
{
 801e2ac:	b580      	push	{r7, lr}
 801e2ae:	b082      	sub	sp, #8
 801e2b0:	af00      	add	r7, sp, #0
 801e2b2:	6078      	str	r0, [r7, #4]
 801e2b4:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 801e2b6:	f005 fd33 	bl	8023d20 <__errno>
 801e2ba:	4603      	mov	r3, r0
 801e2bc:	2216      	movs	r2, #22
 801e2be:	601a      	str	r2, [r3, #0]
	return -1;
 801e2c0:	f04f 33ff 	mov.w	r3, #4294967295
}
 801e2c4:	4618      	mov	r0, r3
 801e2c6:	3708      	adds	r7, #8
 801e2c8:	46bd      	mov	sp, r7
 801e2ca:	bd80      	pop	{r7, pc}

0801e2cc <_exit>:

void _exit (int status)
{
 801e2cc:	b580      	push	{r7, lr}
 801e2ce:	b082      	sub	sp, #8
 801e2d0:	af00      	add	r7, sp, #0
 801e2d2:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 801e2d4:	f04f 31ff 	mov.w	r1, #4294967295
 801e2d8:	6878      	ldr	r0, [r7, #4]
 801e2da:	f7ff ffe7 	bl	801e2ac <_kill>
	while (1) {}		/* Make sure we hang here */
 801e2de:	e7fe      	b.n	801e2de <_exit+0x12>

0801e2e0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 801e2e0:	b580      	push	{r7, lr}
 801e2e2:	b086      	sub	sp, #24
 801e2e4:	af00      	add	r7, sp, #0
 801e2e6:	60f8      	str	r0, [r7, #12]
 801e2e8:	60b9      	str	r1, [r7, #8]
 801e2ea:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801e2ec:	2300      	movs	r3, #0
 801e2ee:	617b      	str	r3, [r7, #20]
 801e2f0:	e00a      	b.n	801e308 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 801e2f2:	f3af 8000 	nop.w
 801e2f6:	4601      	mov	r1, r0
 801e2f8:	68bb      	ldr	r3, [r7, #8]
 801e2fa:	1c5a      	adds	r2, r3, #1
 801e2fc:	60ba      	str	r2, [r7, #8]
 801e2fe:	b2ca      	uxtb	r2, r1
 801e300:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801e302:	697b      	ldr	r3, [r7, #20]
 801e304:	3301      	adds	r3, #1
 801e306:	617b      	str	r3, [r7, #20]
 801e308:	697a      	ldr	r2, [r7, #20]
 801e30a:	687b      	ldr	r3, [r7, #4]
 801e30c:	429a      	cmp	r2, r3
 801e30e:	dbf0      	blt.n	801e2f2 <_read+0x12>
	}

return len;
 801e310:	687b      	ldr	r3, [r7, #4]
}
 801e312:	4618      	mov	r0, r3
 801e314:	3718      	adds	r7, #24
 801e316:	46bd      	mov	sp, r7
 801e318:	bd80      	pop	{r7, pc}

0801e31a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 801e31a:	b580      	push	{r7, lr}
 801e31c:	b086      	sub	sp, #24
 801e31e:	af00      	add	r7, sp, #0
 801e320:	60f8      	str	r0, [r7, #12]
 801e322:	60b9      	str	r1, [r7, #8]
 801e324:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801e326:	2300      	movs	r3, #0
 801e328:	617b      	str	r3, [r7, #20]
 801e32a:	e009      	b.n	801e340 <_write+0x26>
	{
		__io_putchar(*ptr++);
 801e32c:	68bb      	ldr	r3, [r7, #8]
 801e32e:	1c5a      	adds	r2, r3, #1
 801e330:	60ba      	str	r2, [r7, #8]
 801e332:	781b      	ldrb	r3, [r3, #0]
 801e334:	4618      	mov	r0, r3
 801e336:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801e33a:	697b      	ldr	r3, [r7, #20]
 801e33c:	3301      	adds	r3, #1
 801e33e:	617b      	str	r3, [r7, #20]
 801e340:	697a      	ldr	r2, [r7, #20]
 801e342:	687b      	ldr	r3, [r7, #4]
 801e344:	429a      	cmp	r2, r3
 801e346:	dbf1      	blt.n	801e32c <_write+0x12>
	}
	return len;
 801e348:	687b      	ldr	r3, [r7, #4]
}
 801e34a:	4618      	mov	r0, r3
 801e34c:	3718      	adds	r7, #24
 801e34e:	46bd      	mov	sp, r7
 801e350:	bd80      	pop	{r7, pc}

0801e352 <_close>:

int _close(int file)
{
 801e352:	b480      	push	{r7}
 801e354:	b083      	sub	sp, #12
 801e356:	af00      	add	r7, sp, #0
 801e358:	6078      	str	r0, [r7, #4]
	return -1;
 801e35a:	f04f 33ff 	mov.w	r3, #4294967295
}
 801e35e:	4618      	mov	r0, r3
 801e360:	370c      	adds	r7, #12
 801e362:	46bd      	mov	sp, r7
 801e364:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e368:	4770      	bx	lr

0801e36a <_fstat>:


int _fstat(int file, struct stat *st)
{
 801e36a:	b480      	push	{r7}
 801e36c:	b083      	sub	sp, #12
 801e36e:	af00      	add	r7, sp, #0
 801e370:	6078      	str	r0, [r7, #4]
 801e372:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 801e374:	683b      	ldr	r3, [r7, #0]
 801e376:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 801e37a:	605a      	str	r2, [r3, #4]
	return 0;
 801e37c:	2300      	movs	r3, #0
}
 801e37e:	4618      	mov	r0, r3
 801e380:	370c      	adds	r7, #12
 801e382:	46bd      	mov	sp, r7
 801e384:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e388:	4770      	bx	lr

0801e38a <_isatty>:

int _isatty(int file)
{
 801e38a:	b480      	push	{r7}
 801e38c:	b083      	sub	sp, #12
 801e38e:	af00      	add	r7, sp, #0
 801e390:	6078      	str	r0, [r7, #4]
	return 1;
 801e392:	2301      	movs	r3, #1
}
 801e394:	4618      	mov	r0, r3
 801e396:	370c      	adds	r7, #12
 801e398:	46bd      	mov	sp, r7
 801e39a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e39e:	4770      	bx	lr

0801e3a0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 801e3a0:	b480      	push	{r7}
 801e3a2:	b085      	sub	sp, #20
 801e3a4:	af00      	add	r7, sp, #0
 801e3a6:	60f8      	str	r0, [r7, #12]
 801e3a8:	60b9      	str	r1, [r7, #8]
 801e3aa:	607a      	str	r2, [r7, #4]
	return 0;
 801e3ac:	2300      	movs	r3, #0
}
 801e3ae:	4618      	mov	r0, r3
 801e3b0:	3714      	adds	r7, #20
 801e3b2:	46bd      	mov	sp, r7
 801e3b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e3b8:	4770      	bx	lr
	...

0801e3bc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 801e3bc:	b580      	push	{r7, lr}
 801e3be:	b086      	sub	sp, #24
 801e3c0:	af00      	add	r7, sp, #0
 801e3c2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 801e3c4:	4a14      	ldr	r2, [pc, #80]	; (801e418 <_sbrk+0x5c>)
 801e3c6:	4b15      	ldr	r3, [pc, #84]	; (801e41c <_sbrk+0x60>)
 801e3c8:	1ad3      	subs	r3, r2, r3
 801e3ca:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 801e3cc:	697b      	ldr	r3, [r7, #20]
 801e3ce:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 801e3d0:	4b13      	ldr	r3, [pc, #76]	; (801e420 <_sbrk+0x64>)
 801e3d2:	681b      	ldr	r3, [r3, #0]
 801e3d4:	2b00      	cmp	r3, #0
 801e3d6:	d102      	bne.n	801e3de <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 801e3d8:	4b11      	ldr	r3, [pc, #68]	; (801e420 <_sbrk+0x64>)
 801e3da:	4a12      	ldr	r2, [pc, #72]	; (801e424 <_sbrk+0x68>)
 801e3dc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 801e3de:	4b10      	ldr	r3, [pc, #64]	; (801e420 <_sbrk+0x64>)
 801e3e0:	681a      	ldr	r2, [r3, #0]
 801e3e2:	687b      	ldr	r3, [r7, #4]
 801e3e4:	4413      	add	r3, r2
 801e3e6:	693a      	ldr	r2, [r7, #16]
 801e3e8:	429a      	cmp	r2, r3
 801e3ea:	d207      	bcs.n	801e3fc <_sbrk+0x40>
  {
    errno = ENOMEM;
 801e3ec:	f005 fc98 	bl	8023d20 <__errno>
 801e3f0:	4603      	mov	r3, r0
 801e3f2:	220c      	movs	r2, #12
 801e3f4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 801e3f6:	f04f 33ff 	mov.w	r3, #4294967295
 801e3fa:	e009      	b.n	801e410 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 801e3fc:	4b08      	ldr	r3, [pc, #32]	; (801e420 <_sbrk+0x64>)
 801e3fe:	681b      	ldr	r3, [r3, #0]
 801e400:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 801e402:	4b07      	ldr	r3, [pc, #28]	; (801e420 <_sbrk+0x64>)
 801e404:	681a      	ldr	r2, [r3, #0]
 801e406:	687b      	ldr	r3, [r7, #4]
 801e408:	4413      	add	r3, r2
 801e40a:	4a05      	ldr	r2, [pc, #20]	; (801e420 <_sbrk+0x64>)
 801e40c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 801e40e:	68fb      	ldr	r3, [r7, #12]
}
 801e410:	4618      	mov	r0, r3
 801e412:	3718      	adds	r7, #24
 801e414:	46bd      	mov	sp, r7
 801e416:	bd80      	pop	{r7, pc}
 801e418:	20050000 	.word	0x20050000
 801e41c:	00000400 	.word	0x00000400
 801e420:	200006d8 	.word	0x200006d8
 801e424:	200007d8 	.word	0x200007d8

0801e428 <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 801e428:	b480      	push	{r7}
 801e42a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 801e42c:	4b06      	ldr	r3, [pc, #24]	; (801e448 <SystemInit+0x20>)
 801e42e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801e432:	4a05      	ldr	r2, [pc, #20]	; (801e448 <SystemInit+0x20>)
 801e434:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801e438:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 801e43c:	bf00      	nop
 801e43e:	46bd      	mov	sp, r7
 801e440:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e444:	4770      	bx	lr
 801e446:	bf00      	nop
 801e448:	e000ed00 	.word	0xe000ed00

0801e44c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE>:

namespace
{

Symbol run_single_experiment_iteration(arglist arguments = { })
{
 801e44c:	b590      	push	{r4, r7, lr}
 801e44e:	f5ad 7d1d 	sub.w	sp, sp, #628	; 0x274
 801e452:	af00      	add	r7, sp, #0
 801e454:	1d3b      	adds	r3, r7, #4
 801e456:	6018      	str	r0, [r3, #0]
 801e458:	463b      	mov	r3, r7
 801e45a:	6019      	str	r1, [r3, #0]
	Symbol x = 5;
 801e45c:	1d3b      	adds	r3, r7, #4
 801e45e:	2105      	movs	r1, #5
 801e460:	6818      	ldr	r0, [r3, #0]
 801e462:	f7f8 fa61 	bl	8016928 <_ZN6SymbolC1Ei>

	if (arguments.size() > 0)
 801e466:	463b      	mov	r3, r7
 801e468:	6818      	ldr	r0, [r3, #0]
 801e46a:	f7e3 fccd 	bl	8001e08 <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 801e46e:	4603      	mov	r3, r0
 801e470:	2b00      	cmp	r3, #0
 801e472:	bf14      	ite	ne
 801e474:	2301      	movne	r3, #1
 801e476:	2300      	moveq	r3, #0
 801e478:	b2db      	uxtb	r3, r3
 801e47a:	2b00      	cmp	r3, #0
 801e47c:	d01b      	beq.n	801e4b6 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x6a>
	{
		x = EVALUATE(arguments[0]);
 801e47e:	f7ed fccf 	bl	800be20 <_ZN21Expression_calculator12get_instanceEv>
 801e482:	4604      	mov	r4, r0
 801e484:	463b      	mov	r3, r7
 801e486:	2100      	movs	r1, #0
 801e488:	6818      	ldr	r0, [r3, #0]
 801e48a:	f7e3 fccd 	bl	8001e28 <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>
 801e48e:	4603      	mov	r3, r0
 801e490:	681a      	ldr	r2, [r3, #0]
 801e492:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801e496:	4621      	mov	r1, r4
 801e498:	4618      	mov	r0, r3
 801e49a:	f7ed fd55 	bl	800bf48 <_ZN21Expression_calculator8evaluateEP10Expression>
 801e49e:	f107 0268 	add.w	r2, r7, #104	; 0x68
 801e4a2:	1d3b      	adds	r3, r7, #4
 801e4a4:	4611      	mov	r1, r2
 801e4a6:	6818      	ldr	r0, [r3, #0]
 801e4a8:	f7ed fce2 	bl	800be70 <_ZN6SymbolaSEOS_>
 801e4ac:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801e4b0:	4618      	mov	r0, r3
 801e4b2:	f7e3 f811 	bl	80014d8 <_ZN6SymbolD1Ev>
	}

	ARG(x) = 3;
 801e4b6:	f107 0388 	add.w	r3, r7, #136	; 0x88
 801e4ba:	2103      	movs	r1, #3
 801e4bc:	4618      	mov	r0, r3
 801e4be:	f7f8 fa33 	bl	8016928 <_ZN6SymbolC1Ei>
 801e4c2:	f7fa f9f3 	bl	80188ac <_ZN16Variable_handler12get_instanceEv>
 801e4c6:	4604      	mov	r4, r0
 801e4c8:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 801e4cc:	4618      	mov	r0, r3
 801e4ce:	f003 fff7 	bl	80224c0 <_ZNSaIcEC1Ev>
 801e4d2:	f107 02c0 	add.w	r2, r7, #192	; 0xc0
 801e4d6:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801e4da:	49e0      	ldr	r1, [pc, #896]	; (801e85c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x410>)
 801e4dc:	4618      	mov	r0, r3
 801e4de:	f7e3 fb20 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e4e2:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801e4e6:	4619      	mov	r1, r3
 801e4e8:	4620      	mov	r0, r4
 801e4ea:	f7fa fa0d 	bl	8018908 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e4ee:	4602      	mov	r2, r0
 801e4f0:	f107 0388 	add.w	r3, r7, #136	; 0x88
 801e4f4:	4619      	mov	r1, r3
 801e4f6:	4610      	mov	r0, r2
 801e4f8:	f7ed fcba 	bl	800be70 <_ZN6SymbolaSEOS_>
 801e4fc:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801e500:	4618      	mov	r0, r3
 801e502:	f004 fa6e 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e506:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 801e50a:	4618      	mov	r0, r3
 801e50c:	f003 ffd9 	bl	80224c2 <_ZNSaIcED1Ev>
 801e510:	f107 0388 	add.w	r3, r7, #136	; 0x88
 801e514:	4618      	mov	r0, r3
 801e516:	f7e2 ffdf 	bl	80014d8 <_ZN6SymbolD1Ev>
	x = ARG(x);
 801e51a:	f7fa f9c7 	bl	80188ac <_ZN16Variable_handler12get_instanceEv>
 801e51e:	4604      	mov	r4, r0
 801e520:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 801e524:	4618      	mov	r0, r3
 801e526:	f003 ffcb 	bl	80224c0 <_ZNSaIcEC1Ev>
 801e52a:	f107 02dc 	add.w	r2, r7, #220	; 0xdc
 801e52e:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801e532:	49ca      	ldr	r1, [pc, #808]	; (801e85c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x410>)
 801e534:	4618      	mov	r0, r3
 801e536:	f7e3 faf4 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e53a:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801e53e:	4619      	mov	r1, r3
 801e540:	4620      	mov	r0, r4
 801e542:	f7fa f9e1 	bl	8018908 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e546:	4602      	mov	r2, r0
 801e548:	1d3b      	adds	r3, r7, #4
 801e54a:	4611      	mov	r1, r2
 801e54c:	6818      	ldr	r0, [r3, #0]
 801e54e:	f7e3 f959 	bl	8001804 <_ZN6SymbolaSERKS_>
 801e552:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801e556:	4618      	mov	r0, r3
 801e558:	f004 fa43 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e55c:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 801e560:	4618      	mov	r0, r3
 801e562:	f003 ffae 	bl	80224c2 <_ZNSaIcED1Ev>
	ARG(messages) = "hello";
 801e566:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 801e56a:	49bd      	ldr	r1, [pc, #756]	; (801e860 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x414>)
 801e56c:	4618      	mov	r0, r3
 801e56e:	f7f8 fa40 	bl	80169f2 <_ZN6SymbolC1EPKc>
 801e572:	f7fa f99b 	bl	80188ac <_ZN16Variable_handler12get_instanceEv>
 801e576:	4604      	mov	r4, r0
 801e578:	f507 738c 	add.w	r3, r7, #280	; 0x118
 801e57c:	4618      	mov	r0, r3
 801e57e:	f003 ff9f 	bl	80224c0 <_ZNSaIcEC1Ev>
 801e582:	f507 728c 	add.w	r2, r7, #280	; 0x118
 801e586:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801e58a:	49b6      	ldr	r1, [pc, #728]	; (801e864 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x418>)
 801e58c:	4618      	mov	r0, r3
 801e58e:	f7e3 fac8 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e592:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801e596:	4619      	mov	r1, r3
 801e598:	4620      	mov	r0, r4
 801e59a:	f7fa f9b5 	bl	8018908 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e59e:	4602      	mov	r2, r0
 801e5a0:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 801e5a4:	4619      	mov	r1, r3
 801e5a6:	4610      	mov	r0, r2
 801e5a8:	f7ed fc62 	bl	800be70 <_ZN6SymbolaSEOS_>
 801e5ac:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801e5b0:	4618      	mov	r0, r3
 801e5b2:	f004 fa16 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e5b6:	f507 738c 	add.w	r3, r7, #280	; 0x118
 801e5ba:	4618      	mov	r0, r3
 801e5bc:	f003 ff81 	bl	80224c2 <_ZNSaIcED1Ev>
 801e5c0:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 801e5c4:	4618      	mov	r0, r3
 801e5c6:	f7e2 ff87 	bl	80014d8 <_ZN6SymbolD1Ev>
	x = ARG(messages);
 801e5ca:	f7fa f96f 	bl	80188ac <_ZN16Variable_handler12get_instanceEv>
 801e5ce:	4604      	mov	r4, r0
 801e5d0:	f507 739a 	add.w	r3, r7, #308	; 0x134
 801e5d4:	4618      	mov	r0, r3
 801e5d6:	f003 ff73 	bl	80224c0 <_ZNSaIcEC1Ev>
 801e5da:	f507 729a 	add.w	r2, r7, #308	; 0x134
 801e5de:	f507 738e 	add.w	r3, r7, #284	; 0x11c
 801e5e2:	49a0      	ldr	r1, [pc, #640]	; (801e864 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x418>)
 801e5e4:	4618      	mov	r0, r3
 801e5e6:	f7e3 fa9c 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e5ea:	f507 738e 	add.w	r3, r7, #284	; 0x11c
 801e5ee:	4619      	mov	r1, r3
 801e5f0:	4620      	mov	r0, r4
 801e5f2:	f7fa f989 	bl	8018908 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e5f6:	4602      	mov	r2, r0
 801e5f8:	1d3b      	adds	r3, r7, #4
 801e5fa:	4611      	mov	r1, r2
 801e5fc:	6818      	ldr	r0, [r3, #0]
 801e5fe:	f7e3 f901 	bl	8001804 <_ZN6SymbolaSERKS_>
 801e602:	f507 738e 	add.w	r3, r7, #284	; 0x11c
 801e606:	4618      	mov	r0, r3
 801e608:	f004 f9eb 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e60c:	f507 739a 	add.w	r3, r7, #308	; 0x134
 801e610:	4618      	mov	r0, r3
 801e612:	f003 ff56 	bl	80224c2 <_ZNSaIcED1Ev>
	ARG(messages) = 2.54f;
 801e616:	f507 739c 	add.w	r3, r7, #312	; 0x138
 801e61a:	ed9f 0a93 	vldr	s0, [pc, #588]	; 801e868 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x41c>
 801e61e:	4618      	mov	r0, r3
 801e620:	f7f8 f99b 	bl	801695a <_ZN6SymbolC1Ef>
 801e624:	f7fa f942 	bl	80188ac <_ZN16Variable_handler12get_instanceEv>
 801e628:	4604      	mov	r4, r0
 801e62a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e62e:	4618      	mov	r0, r3
 801e630:	f003 ff46 	bl	80224c0 <_ZNSaIcEC1Ev>
 801e634:	f507 72b8 	add.w	r2, r7, #368	; 0x170
 801e638:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 801e63c:	4989      	ldr	r1, [pc, #548]	; (801e864 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x418>)
 801e63e:	4618      	mov	r0, r3
 801e640:	f7e3 fa6f 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e644:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 801e648:	4619      	mov	r1, r3
 801e64a:	4620      	mov	r0, r4
 801e64c:	f7fa f95c 	bl	8018908 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e650:	4602      	mov	r2, r0
 801e652:	f507 739c 	add.w	r3, r7, #312	; 0x138
 801e656:	4619      	mov	r1, r3
 801e658:	4610      	mov	r0, r2
 801e65a:	f7ed fc09 	bl	800be70 <_ZN6SymbolaSEOS_>
 801e65e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 801e662:	4618      	mov	r0, r3
 801e664:	f004 f9bd 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e668:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e66c:	4618      	mov	r0, r3
 801e66e:	f003 ff28 	bl	80224c2 <_ZNSaIcED1Ev>
 801e672:	f507 739c 	add.w	r3, r7, #312	; 0x138
 801e676:	4618      	mov	r0, r3
 801e678:	f7e2 ff2e 	bl	80014d8 <_ZN6SymbolD1Ev>
	x = ARG(messages);
 801e67c:	f7fa f916 	bl	80188ac <_ZN16Variable_handler12get_instanceEv>
 801e680:	4604      	mov	r4, r0
 801e682:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e686:	4618      	mov	r0, r3
 801e688:	f003 ff1a 	bl	80224c0 <_ZNSaIcEC1Ev>
 801e68c:	f507 72c6 	add.w	r2, r7, #396	; 0x18c
 801e690:	f507 73ba 	add.w	r3, r7, #372	; 0x174
 801e694:	4973      	ldr	r1, [pc, #460]	; (801e864 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x418>)
 801e696:	4618      	mov	r0, r3
 801e698:	f7e3 fa43 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e69c:	f507 73ba 	add.w	r3, r7, #372	; 0x174
 801e6a0:	4619      	mov	r1, r3
 801e6a2:	4620      	mov	r0, r4
 801e6a4:	f7fa f930 	bl	8018908 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e6a8:	4602      	mov	r2, r0
 801e6aa:	1d3b      	adds	r3, r7, #4
 801e6ac:	4611      	mov	r1, r2
 801e6ae:	6818      	ldr	r0, [r3, #0]
 801e6b0:	f7e3 f8a8 	bl	8001804 <_ZN6SymbolaSERKS_>
 801e6b4:	f507 73ba 	add.w	r3, r7, #372	; 0x174
 801e6b8:	4618      	mov	r0, r3
 801e6ba:	f004 f992 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e6be:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e6c2:	4618      	mov	r0, r3
 801e6c4:	f003 fefd 	bl	80224c2 <_ZNSaIcED1Ev>

	ARG(messages) = { "hello", "world" };
 801e6c8:	f507 73dc 	add.w	r3, r7, #440	; 0x1b8
 801e6cc:	4964      	ldr	r1, [pc, #400]	; (801e860 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x414>)
 801e6ce:	4618      	mov	r0, r3
 801e6d0:	f7f8 f98f 	bl	80169f2 <_ZN6SymbolC1EPKc>
 801e6d4:	f507 73dc 	add.w	r3, r7, #440	; 0x1b8
 801e6d8:	3320      	adds	r3, #32
 801e6da:	4964      	ldr	r1, [pc, #400]	; (801e86c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x420>)
 801e6dc:	4618      	mov	r0, r3
 801e6de:	f7f8 f988 	bl	80169f2 <_ZN6SymbolC1EPKc>
 801e6e2:	f507 73dc 	add.w	r3, r7, #440	; 0x1b8
 801e6e6:	f8c7 31b0 	str.w	r3, [r7, #432]	; 0x1b0
 801e6ea:	2302      	movs	r3, #2
 801e6ec:	f8c7 31b4 	str.w	r3, [r7, #436]	; 0x1b4
 801e6f0:	f507 70c8 	add.w	r0, r7, #400	; 0x190
 801e6f4:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 801e6f8:	e893 0006 	ldmia.w	r3, {r1, r2}
 801e6fc:	f7f8 f9aa 	bl	8016a54 <_ZN6SymbolC1ESt16initializer_listIS_E>
 801e700:	f7fa f8d4 	bl	80188ac <_ZN16Variable_handler12get_instanceEv>
 801e704:	4604      	mov	r4, r0
 801e706:	f507 7304 	add.w	r3, r7, #528	; 0x210
 801e70a:	4618      	mov	r0, r3
 801e70c:	f003 fed8 	bl	80224c0 <_ZNSaIcEC1Ev>
 801e710:	f507 7204 	add.w	r2, r7, #528	; 0x210
 801e714:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 801e718:	4952      	ldr	r1, [pc, #328]	; (801e864 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x418>)
 801e71a:	4618      	mov	r0, r3
 801e71c:	f7e3 fa01 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e720:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 801e724:	4619      	mov	r1, r3
 801e726:	4620      	mov	r0, r4
 801e728:	f7fa f8ee 	bl	8018908 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e72c:	4602      	mov	r2, r0
 801e72e:	f507 73c8 	add.w	r3, r7, #400	; 0x190
 801e732:	4619      	mov	r1, r3
 801e734:	4610      	mov	r0, r2
 801e736:	f7ed fb9b 	bl	800be70 <_ZN6SymbolaSEOS_>
 801e73a:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 801e73e:	4618      	mov	r0, r3
 801e740:	f004 f94f 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e744:	f507 7304 	add.w	r3, r7, #528	; 0x210
 801e748:	4618      	mov	r0, r3
 801e74a:	f003 feba 	bl	80224c2 <_ZNSaIcED1Ev>
 801e74e:	f507 73c8 	add.w	r3, r7, #400	; 0x190
 801e752:	4618      	mov	r0, r3
 801e754:	f7e2 fec0 	bl	80014d8 <_ZN6SymbolD1Ev>
 801e758:	f507 74dc 	add.w	r4, r7, #440	; 0x1b8
 801e75c:	3440      	adds	r4, #64	; 0x40
 801e75e:	f507 73dc 	add.w	r3, r7, #440	; 0x1b8
 801e762:	429c      	cmp	r4, r3
 801e764:	d004      	beq.n	801e770 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x324>
 801e766:	3c20      	subs	r4, #32
 801e768:	4620      	mov	r0, r4
 801e76a:	f7e2 feb5 	bl	80014d8 <_ZN6SymbolD1Ev>
 801e76e:	e7f6      	b.n	801e75e <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x312>
	Symbol m = ARG(messages);
 801e770:	f7fa f89c 	bl	80188ac <_ZN16Variable_handler12get_instanceEv>
 801e774:	4604      	mov	r4, r0
 801e776:	f507 730b 	add.w	r3, r7, #556	; 0x22c
 801e77a:	4618      	mov	r0, r3
 801e77c:	f003 fea0 	bl	80224c0 <_ZNSaIcEC1Ev>
 801e780:	f507 720b 	add.w	r2, r7, #556	; 0x22c
 801e784:	f507 7305 	add.w	r3, r7, #532	; 0x214
 801e788:	4936      	ldr	r1, [pc, #216]	; (801e864 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x418>)
 801e78a:	4618      	mov	r0, r3
 801e78c:	f7e3 f9c9 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e790:	f507 7305 	add.w	r3, r7, #532	; 0x214
 801e794:	4619      	mov	r1, r3
 801e796:	4620      	mov	r0, r4
 801e798:	f7fa f8b6 	bl	8018908 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e79c:	4602      	mov	r2, r0
 801e79e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e7a2:	4611      	mov	r1, r2
 801e7a4:	4618      	mov	r0, r3
 801e7a6:	f7e9 fe6b 	bl	8008480 <_ZN6SymbolC1ERKS_>
 801e7aa:	f507 7305 	add.w	r3, r7, #532	; 0x214
 801e7ae:	4618      	mov	r0, r3
 801e7b0:	f004 f917 	bl	80229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e7b4:	f507 730b 	add.w	r3, r7, #556	; 0x22c
 801e7b8:	4618      	mov	r0, r3
 801e7ba:	f003 fe82 	bl	80224c2 <_ZNSaIcED1Ev>
	Symbol h = m[0];
 801e7be:	f507 730c 	add.w	r3, r7, #560	; 0x230
 801e7c2:	2100      	movs	r1, #0
 801e7c4:	4618      	mov	r0, r3
 801e7c6:	f7f8 f8af 	bl	8016928 <_ZN6SymbolC1Ei>
 801e7ca:	f507 720c 	add.w	r2, r7, #560	; 0x230
 801e7ce:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e7d2:	4611      	mov	r1, r2
 801e7d4:	4618      	mov	r0, r3
 801e7d6:	f7f8 f971 	bl	8016abc <_ZN6SymbolixES_>
 801e7da:	4602      	mov	r2, r0
 801e7dc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801e7e0:	4611      	mov	r1, r2
 801e7e2:	4618      	mov	r0, r3
 801e7e4:	f7e9 fe4c 	bl	8008480 <_ZN6SymbolC1ERKS_>
 801e7e8:	f507 730c 	add.w	r3, r7, #560	; 0x230
 801e7ec:	4618      	mov	r0, r3
 801e7ee:	f7e2 fe73 	bl	80014d8 <_ZN6SymbolD1Ev>
	Symbol w = m[1];
 801e7f2:	f507 7314 	add.w	r3, r7, #592	; 0x250
 801e7f6:	2101      	movs	r1, #1
 801e7f8:	4618      	mov	r0, r3
 801e7fa:	f7f8 f895 	bl	8016928 <_ZN6SymbolC1Ei>
 801e7fe:	f507 7214 	add.w	r2, r7, #592	; 0x250
 801e802:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e806:	4611      	mov	r1, r2
 801e808:	4618      	mov	r0, r3
 801e80a:	f7f8 f957 	bl	8016abc <_ZN6SymbolixES_>
 801e80e:	4602      	mov	r2, r0
 801e810:	f107 0308 	add.w	r3, r7, #8
 801e814:	4611      	mov	r1, r2
 801e816:	4618      	mov	r0, r3
 801e818:	f7e9 fe32 	bl	8008480 <_ZN6SymbolC1ERKS_>
 801e81c:	f507 7314 	add.w	r3, r7, #592	; 0x250
 801e820:	4618      	mov	r0, r3
 801e822:	f7e2 fe59 	bl	80014d8 <_ZN6SymbolD1Ev>
	return x;
 801e826:	bf00      	nop
	Symbol w = m[1];
 801e828:	f107 0308 	add.w	r3, r7, #8
 801e82c:	4618      	mov	r0, r3
 801e82e:	f7e2 fe53 	bl	80014d8 <_ZN6SymbolD1Ev>
	Symbol h = m[0];
 801e832:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801e836:	4618      	mov	r0, r3
 801e838:	f7e2 fe4e 	bl	80014d8 <_ZN6SymbolD1Ev>
	Symbol m = ARG(messages);
 801e83c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e840:	4618      	mov	r0, r3
 801e842:	f7e2 fe49 	bl	80014d8 <_ZN6SymbolD1Ev>
	return x;
 801e846:	1d3b      	adds	r3, r7, #4
 801e848:	1d3a      	adds	r2, r7, #4
 801e84a:	6812      	ldr	r2, [r2, #0]
 801e84c:	601a      	str	r2, [r3, #0]
}
 801e84e:	1d3b      	adds	r3, r7, #4
 801e850:	6818      	ldr	r0, [r3, #0]
 801e852:	f507 771d 	add.w	r7, r7, #628	; 0x274
 801e856:	46bd      	mov	sp, r7
 801e858:	bd90      	pop	{r4, r7, pc}
 801e85a:	bf00      	nop
 801e85c:	08027d04 	.word	0x08027d04
 801e860:	08027d08 	.word	0x08027d08
 801e864:	08027d10 	.word	0x08027d10
 801e868:	40228f5c 	.word	0x40228f5c
 801e86c:	08027d1c 	.word	0x08027d1c

0801e870 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EEC1Ev>:
      _Rb_tree() = default;
 801e870:	b580      	push	{r7, lr}
 801e872:	b082      	sub	sp, #8
 801e874:	af00      	add	r7, sp, #0
 801e876:	6078      	str	r0, [r7, #4]
 801e878:	687b      	ldr	r3, [r7, #4]
 801e87a:	4618      	mov	r0, r3
 801e87c:	f000 f8c4 	bl	801ea08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EEC1Ev>
 801e880:	687b      	ldr	r3, [r7, #4]
 801e882:	4618      	mov	r0, r3
 801e884:	3708      	adds	r7, #8
 801e886:	46bd      	mov	sp, r7
 801e888:	bd80      	pop	{r7, pc}

0801e88a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEC1Ev>:
      map() = default;
 801e88a:	b580      	push	{r7, lr}
 801e88c:	b082      	sub	sp, #8
 801e88e:	af00      	add	r7, sp, #0
 801e890:	6078      	str	r0, [r7, #4]
 801e892:	687b      	ldr	r3, [r7, #4]
 801e894:	4618      	mov	r0, r3
 801e896:	f7ff ffeb 	bl	801e870 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EEC1Ev>
 801e89a:	687b      	ldr	r3, [r7, #4]
 801e89c:	4618      	mov	r0, r3
 801e89e:	3708      	adds	r7, #8
 801e8a0:	46bd      	mov	sp, r7
 801e8a2:	bd80      	pop	{r7, pc}

0801e8a4 <_ZN16Function_handlerC1Ev>:

}

Function_handler::Function_handler()
 801e8a4:	b590      	push	{r4, r7, lr}
 801e8a6:	b08d      	sub	sp, #52	; 0x34
 801e8a8:	af00      	add	r7, sp, #0
 801e8aa:	6078      	str	r0, [r7, #4]
 801e8ac:	687b      	ldr	r3, [r7, #4]
 801e8ae:	4618      	mov	r0, r3
 801e8b0:	f7ff ffeb 	bl	801e88a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEC1Ev>
{
	ADD_FUNCTION(run_single_experiment_iteration);
 801e8b4:	687c      	ldr	r4, [r7, #4]
 801e8b6:	4b0e      	ldr	r3, [pc, #56]	; (801e8f0 <_ZN16Function_handlerC1Ev+0x4c>)
 801e8b8:	62fb      	str	r3, [r7, #44]	; 0x2c
 801e8ba:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801e8be:	f107 0310 	add.w	r3, r7, #16
 801e8c2:	490c      	ldr	r1, [pc, #48]	; (801e8f4 <_ZN16Function_handlerC1Ev+0x50>)
 801e8c4:	4618      	mov	r0, r3
 801e8c6:	f000 f8b4 	bl	801ea32 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1IRA32_KcSE_Lb1EEEOT_OT0_>
 801e8ca:	f107 0308 	add.w	r3, r7, #8
 801e8ce:	f107 0210 	add.w	r2, r7, #16
 801e8d2:	4621      	mov	r1, r4
 801e8d4:	4618      	mov	r0, r3
 801e8d6:	f000 f8d4 	bl	801ea82 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE6insertEOSI_>
 801e8da:	f107 0310 	add.w	r3, r7, #16
 801e8de:	4618      	mov	r0, r3
 801e8e0:	f7ef ff9d 	bl	800e81e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>
}
 801e8e4:	687b      	ldr	r3, [r7, #4]
 801e8e6:	4618      	mov	r0, r3
 801e8e8:	3734      	adds	r7, #52	; 0x34
 801e8ea:	46bd      	mov	sp, r7
 801e8ec:	bd90      	pop	{r4, r7, pc}
 801e8ee:	bf00      	nop
 801e8f0:	0801e44d 	.word	0x0801e44d
 801e8f4:	08027d24 	.word	0x08027d24

0801e8f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1Ev>:
 801e8f8:	b580      	push	{r7, lr}
 801e8fa:	b082      	sub	sp, #8
 801e8fc:	af00      	add	r7, sp, #0
 801e8fe:	6078      	str	r0, [r7, #4]
 801e900:	687b      	ldr	r3, [r7, #4]
 801e902:	4618      	mov	r0, r3
 801e904:	f000 f8d1 	bl	801eaaa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1Ev>
 801e908:	687b      	ldr	r3, [r7, #4]
 801e90a:	4618      	mov	r0, r3
 801e90c:	3708      	adds	r7, #8
 801e90e:	46bd      	mov	sp, r7
 801e910:	bd80      	pop	{r7, pc}

0801e912 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>:
 801e912:	b580      	push	{r7, lr}
 801e914:	b082      	sub	sp, #8
 801e916:	af00      	add	r7, sp, #0
 801e918:	6078      	str	r0, [r7, #4]
 801e91a:	687b      	ldr	r3, [r7, #4]
 801e91c:	4618      	mov	r0, r3
 801e91e:	f7ff ffeb 	bl	801e8f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1Ev>
 801e922:	687b      	ldr	r3, [r7, #4]
 801e924:	4618      	mov	r0, r3
 801e926:	3708      	adds	r7, #8
 801e928:	46bd      	mov	sp, r7
 801e92a:	bd80      	pop	{r7, pc}

0801e92c <_ZN16Variable_handlerC1Ev>:

Variable_handler::Variable_handler()
 801e92c:	b590      	push	{r4, r7, lr}
 801e92e:	b0b3      	sub	sp, #204	; 0xcc
 801e930:	af00      	add	r7, sp, #0
 801e932:	6078      	str	r0, [r7, #4]
 801e934:	687b      	ldr	r3, [r7, #4]
 801e936:	4618      	mov	r0, r3
 801e938:	f7ff ffeb 	bl	801e912 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
 801e93c:	687b      	ldr	r3, [r7, #4]
 801e93e:	3318      	adds	r3, #24
 801e940:	4618      	mov	r0, r3
 801e942:	f7ff ffe6 	bl	801e912 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
 801e946:	687b      	ldr	r3, [r7, #4]
 801e948:	3330      	adds	r3, #48	; 0x30
 801e94a:	4618      	mov	r0, r3
 801e94c:	f7ff ffe1 	bl	801e912 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
{
	ADD_ARG(x);
 801e950:	687b      	ldr	r3, [r7, #4]
 801e952:	f103 0430 	add.w	r4, r3, #48	; 0x30
 801e956:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e95a:	2220      	movs	r2, #32
 801e95c:	2100      	movs	r1, #0
 801e95e:	4618      	mov	r0, r3
 801e960:	f005 fa80 	bl	8023e64 <memset>
 801e964:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e968:	4618      	mov	r0, r3
 801e96a:	f7ed ff6a 	bl	800c842 <_ZN6SymbolC1Ev>
 801e96e:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801e972:	f107 0310 	add.w	r3, r7, #16
 801e976:	4922      	ldr	r1, [pc, #136]	; (801ea00 <_ZN16Variable_handlerC1Ev+0xd4>)
 801e978:	4618      	mov	r0, r3
 801e97a:	f000 f8ab 	bl	801ead4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801e97e:	f107 0308 	add.w	r3, r7, #8
 801e982:	f107 0210 	add.w	r2, r7, #16
 801e986:	4621      	mov	r1, r4
 801e988:	4618      	mov	r0, r3
 801e98a:	f000 f8ca 	bl	801eb22 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801e98e:	f107 0310 	add.w	r3, r7, #16
 801e992:	4618      	mov	r0, r3
 801e994:	f7fa ff05 	bl	80197a2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801e998:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e99c:	4618      	mov	r0, r3
 801e99e:	f7e2 fd9b 	bl	80014d8 <_ZN6SymbolD1Ev>
	ADD_ARG(messages);
 801e9a2:	687b      	ldr	r3, [r7, #4]
 801e9a4:	f103 0430 	add.w	r4, r3, #48	; 0x30
 801e9a8:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801e9ac:	2220      	movs	r2, #32
 801e9ae:	2100      	movs	r1, #0
 801e9b0:	4618      	mov	r0, r3
 801e9b2:	f005 fa57 	bl	8023e64 <memset>
 801e9b6:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801e9ba:	4618      	mov	r0, r3
 801e9bc:	f7ed ff41 	bl	800c842 <_ZN6SymbolC1Ev>
 801e9c0:	f107 02a8 	add.w	r2, r7, #168	; 0xa8
 801e9c4:	f107 0370 	add.w	r3, r7, #112	; 0x70
 801e9c8:	490e      	ldr	r1, [pc, #56]	; (801ea04 <_ZN16Variable_handlerC1Ev+0xd8>)
 801e9ca:	4618      	mov	r0, r3
 801e9cc:	f000 f8bd 	bl	801eb4a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA9_KcLb1EEEOT_RKS7_>
 801e9d0:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801e9d4:	f107 0270 	add.w	r2, r7, #112	; 0x70
 801e9d8:	4621      	mov	r1, r4
 801e9da:	4618      	mov	r0, r3
 801e9dc:	f000 f8a1 	bl	801eb22 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801e9e0:	f107 0370 	add.w	r3, r7, #112	; 0x70
 801e9e4:	4618      	mov	r0, r3
 801e9e6:	f7fa fedc 	bl	80197a2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801e9ea:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801e9ee:	4618      	mov	r0, r3
 801e9f0:	f7e2 fd72 	bl	80014d8 <_ZN6SymbolD1Ev>
}
 801e9f4:	687b      	ldr	r3, [r7, #4]
 801e9f6:	4618      	mov	r0, r3
 801e9f8:	37cc      	adds	r7, #204	; 0xcc
 801e9fa:	46bd      	mov	sp, r7
 801e9fc:	bd90      	pop	{r4, r7, pc}
 801e9fe:	bf00      	nop
 801ea00:	08027d04 	.word	0x08027d04
 801ea04:	08027d10 	.word	0x08027d10

0801ea08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 801ea08:	b580      	push	{r7, lr}
 801ea0a:	b082      	sub	sp, #8
 801ea0c:	af00      	add	r7, sp, #0
 801ea0e:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 801ea10:	6878      	ldr	r0, [r7, #4]
 801ea12:	f000 f8c1 	bl	801eb98 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEEC1Ev>
 801ea16:	687b      	ldr	r3, [r7, #4]
 801ea18:	4618      	mov	r0, r3
 801ea1a:	f7f3 fb9b 	bl	8012154 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 801ea1e:	687b      	ldr	r3, [r7, #4]
 801ea20:	3304      	adds	r3, #4
 801ea22:	4618      	mov	r0, r3
 801ea24:	f7e2 fb2b 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 801ea28:	687b      	ldr	r3, [r7, #4]
 801ea2a:	4618      	mov	r0, r3
 801ea2c:	3708      	adds	r7, #8
 801ea2e:	46bd      	mov	sp, r7
 801ea30:	bd80      	pop	{r7, pc}

0801ea32 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1IRA32_KcSE_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801ea32:	b5b0      	push	{r4, r5, r7, lr}
 801ea34:	b086      	sub	sp, #24
 801ea36:	af00      	add	r7, sp, #0
 801ea38:	60f8      	str	r0, [r7, #12]
 801ea3a:	60b9      	str	r1, [r7, #8]
 801ea3c:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801ea3e:	68fc      	ldr	r4, [r7, #12]
 801ea40:	68b8      	ldr	r0, [r7, #8]
 801ea42:	f000 f8b5 	bl	801ebb0 <_ZSt7forwardIRA32_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801ea46:	4605      	mov	r5, r0
 801ea48:	f107 0314 	add.w	r3, r7, #20
 801ea4c:	4618      	mov	r0, r3
 801ea4e:	f003 fd37 	bl	80224c0 <_ZNSaIcEC1Ev>
 801ea52:	f107 0314 	add.w	r3, r7, #20
 801ea56:	461a      	mov	r2, r3
 801ea58:	4629      	mov	r1, r5
 801ea5a:	4620      	mov	r0, r4
 801ea5c:	f7e3 f861 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801ea60:	f107 0314 	add.w	r3, r7, #20
 801ea64:	4618      	mov	r0, r3
 801ea66:	f003 fd2c 	bl	80224c2 <_ZNSaIcED1Ev>
 801ea6a:	6878      	ldr	r0, [r7, #4]
 801ea6c:	f000 f8ab 	bl	801ebc6 <_ZSt7forwardIPF6SymbolSt6vectorIP10ExpressionSaIS3_EEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801ea70:	4603      	mov	r3, r0
 801ea72:	681a      	ldr	r2, [r3, #0]
 801ea74:	68fb      	ldr	r3, [r7, #12]
 801ea76:	619a      	str	r2, [r3, #24]
 801ea78:	68fb      	ldr	r3, [r7, #12]
 801ea7a:	4618      	mov	r0, r3
 801ea7c:	3718      	adds	r7, #24
 801ea7e:	46bd      	mov	sp, r7
 801ea80:	bdb0      	pop	{r4, r5, r7, pc}

0801ea82 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE6insertEOSI_>:
      insert(value_type&& __x)
 801ea82:	b590      	push	{r4, r7, lr}
 801ea84:	b085      	sub	sp, #20
 801ea86:	af00      	add	r7, sp, #0
 801ea88:	60f8      	str	r0, [r7, #12]
 801ea8a:	60b9      	str	r1, [r7, #8]
 801ea8c:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 801ea8e:	68bc      	ldr	r4, [r7, #8]
 801ea90:	6878      	ldr	r0, [r7, #4]
 801ea92:	f000 f8a3 	bl	801ebdc <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEONSt16remove_referenceIT_E4typeEOSJ_>
 801ea96:	4602      	mov	r2, r0
 801ea98:	68fb      	ldr	r3, [r7, #12]
 801ea9a:	4621      	mov	r1, r4
 801ea9c:	4618      	mov	r0, r3
 801ea9e:	f000 f8a8 	bl	801ebf2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_>
 801eaa2:	68f8      	ldr	r0, [r7, #12]
 801eaa4:	3714      	adds	r7, #20
 801eaa6:	46bd      	mov	sp, r7
 801eaa8:	bd90      	pop	{r4, r7, pc}

0801eaaa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 801eaaa:	b580      	push	{r7, lr}
 801eaac:	b082      	sub	sp, #8
 801eaae:	af00      	add	r7, sp, #0
 801eab0:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 801eab2:	6878      	ldr	r0, [r7, #4]
 801eab4:	f000 f8ec 	bl	801ec90 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>
 801eab8:	687b      	ldr	r3, [r7, #4]
 801eaba:	4618      	mov	r0, r3
 801eabc:	f7f3 fb4a 	bl	8012154 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 801eac0:	687b      	ldr	r3, [r7, #4]
 801eac2:	3304      	adds	r3, #4
 801eac4:	4618      	mov	r0, r3
 801eac6:	f7e2 fada 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 801eaca:	687b      	ldr	r3, [r7, #4]
 801eacc:	4618      	mov	r0, r3
 801eace:	3708      	adds	r7, #8
 801ead0:	46bd      	mov	sp, r7
 801ead2:	bd80      	pop	{r7, pc}

0801ead4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 801ead4:	b5b0      	push	{r4, r5, r7, lr}
 801ead6:	b086      	sub	sp, #24
 801ead8:	af00      	add	r7, sp, #0
 801eada:	60f8      	str	r0, [r7, #12]
 801eadc:	60b9      	str	r1, [r7, #8]
 801eade:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 801eae0:	68fc      	ldr	r4, [r7, #12]
 801eae2:	68b8      	ldr	r0, [r7, #8]
 801eae4:	f000 f8e0 	bl	801eca8 <_ZSt7forwardIRA2_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801eae8:	4605      	mov	r5, r0
 801eaea:	f107 0314 	add.w	r3, r7, #20
 801eaee:	4618      	mov	r0, r3
 801eaf0:	f003 fce6 	bl	80224c0 <_ZNSaIcEC1Ev>
 801eaf4:	f107 0314 	add.w	r3, r7, #20
 801eaf8:	461a      	mov	r2, r3
 801eafa:	4629      	mov	r1, r5
 801eafc:	4620      	mov	r0, r4
 801eafe:	f7e3 f810 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801eb02:	f107 0314 	add.w	r3, r7, #20
 801eb06:	4618      	mov	r0, r3
 801eb08:	f003 fcdb 	bl	80224c2 <_ZNSaIcED1Ev>
 801eb0c:	68fb      	ldr	r3, [r7, #12]
 801eb0e:	3318      	adds	r3, #24
 801eb10:	6879      	ldr	r1, [r7, #4]
 801eb12:	4618      	mov	r0, r3
 801eb14:	f7e9 fcb4 	bl	8008480 <_ZN6SymbolC1ERKS_>
 801eb18:	68fb      	ldr	r3, [r7, #12]
 801eb1a:	4618      	mov	r0, r3
 801eb1c:	3718      	adds	r7, #24
 801eb1e:	46bd      	mov	sp, r7
 801eb20:	bdb0      	pop	{r4, r5, r7, pc}

0801eb22 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>:
      insert(value_type&& __x)
 801eb22:	b590      	push	{r4, r7, lr}
 801eb24:	b085      	sub	sp, #20
 801eb26:	af00      	add	r7, sp, #0
 801eb28:	60f8      	str	r0, [r7, #12]
 801eb2a:	60b9      	str	r1, [r7, #8]
 801eb2c:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 801eb2e:	68bc      	ldr	r4, [r7, #8]
 801eb30:	6878      	ldr	r0, [r7, #4]
 801eb32:	f000 f8c4 	bl	801ecbe <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEONSt16remove_referenceIT_E4typeEOSC_>
 801eb36:	4602      	mov	r2, r0
 801eb38:	68fb      	ldr	r3, [r7, #12]
 801eb3a:	4621      	mov	r1, r4
 801eb3c:	4618      	mov	r0, r3
 801eb3e:	f000 f8c9 	bl	801ecd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_>
 801eb42:	68f8      	ldr	r0, [r7, #12]
 801eb44:	3714      	adds	r7, #20
 801eb46:	46bd      	mov	sp, r7
 801eb48:	bd90      	pop	{r4, r7, pc}

0801eb4a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA9_KcLb1EEEOT_RKS7_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 801eb4a:	b5b0      	push	{r4, r5, r7, lr}
 801eb4c:	b086      	sub	sp, #24
 801eb4e:	af00      	add	r7, sp, #0
 801eb50:	60f8      	str	r0, [r7, #12]
 801eb52:	60b9      	str	r1, [r7, #8]
 801eb54:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 801eb56:	68fc      	ldr	r4, [r7, #12]
 801eb58:	68b8      	ldr	r0, [r7, #8]
 801eb5a:	f000 f90a 	bl	801ed72 <_ZSt7forwardIRA9_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801eb5e:	4605      	mov	r5, r0
 801eb60:	f107 0314 	add.w	r3, r7, #20
 801eb64:	4618      	mov	r0, r3
 801eb66:	f003 fcab 	bl	80224c0 <_ZNSaIcEC1Ev>
 801eb6a:	f107 0314 	add.w	r3, r7, #20
 801eb6e:	461a      	mov	r2, r3
 801eb70:	4629      	mov	r1, r5
 801eb72:	4620      	mov	r0, r4
 801eb74:	f7e2 ffd5 	bl	8001b22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801eb78:	f107 0314 	add.w	r3, r7, #20
 801eb7c:	4618      	mov	r0, r3
 801eb7e:	f003 fca0 	bl	80224c2 <_ZNSaIcED1Ev>
 801eb82:	68fb      	ldr	r3, [r7, #12]
 801eb84:	3318      	adds	r3, #24
 801eb86:	6879      	ldr	r1, [r7, #4]
 801eb88:	4618      	mov	r0, r3
 801eb8a:	f7e9 fc79 	bl	8008480 <_ZN6SymbolC1ERKS_>
 801eb8e:	68fb      	ldr	r3, [r7, #12]
 801eb90:	4618      	mov	r0, r3
 801eb92:	3718      	adds	r7, #24
 801eb94:	46bd      	mov	sp, r7
 801eb96:	bdb0      	pop	{r4, r5, r7, pc}

0801eb98 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEEC1Ev>:
 801eb98:	b580      	push	{r7, lr}
 801eb9a:	b082      	sub	sp, #8
 801eb9c:	af00      	add	r7, sp, #0
 801eb9e:	6078      	str	r0, [r7, #4]
 801eba0:	6878      	ldr	r0, [r7, #4]
 801eba2:	f000 f8f1 	bl	801ed88 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEC1Ev>
 801eba6:	687b      	ldr	r3, [r7, #4]
 801eba8:	4618      	mov	r0, r3
 801ebaa:	3708      	adds	r7, #8
 801ebac:	46bd      	mov	sp, r7
 801ebae:	bd80      	pop	{r7, pc}

0801ebb0 <_ZSt7forwardIRA32_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801ebb0:	b480      	push	{r7}
 801ebb2:	b083      	sub	sp, #12
 801ebb4:	af00      	add	r7, sp, #0
 801ebb6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ebb8:	687b      	ldr	r3, [r7, #4]
 801ebba:	4618      	mov	r0, r3
 801ebbc:	370c      	adds	r7, #12
 801ebbe:	46bd      	mov	sp, r7
 801ebc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ebc4:	4770      	bx	lr

0801ebc6 <_ZSt7forwardIPF6SymbolSt6vectorIP10ExpressionSaIS3_EEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801ebc6:	b480      	push	{r7}
 801ebc8:	b083      	sub	sp, #12
 801ebca:	af00      	add	r7, sp, #0
 801ebcc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ebce:	687b      	ldr	r3, [r7, #4]
 801ebd0:	4618      	mov	r0, r3
 801ebd2:	370c      	adds	r7, #12
 801ebd4:	46bd      	mov	sp, r7
 801ebd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ebda:	4770      	bx	lr

0801ebdc <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEONSt16remove_referenceIT_E4typeEOSJ_>:
    move(_Tp&& __t) noexcept
 801ebdc:	b480      	push	{r7}
 801ebde:	b083      	sub	sp, #12
 801ebe0:	af00      	add	r7, sp, #0
 801ebe2:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801ebe4:	687b      	ldr	r3, [r7, #4]
 801ebe6:	4618      	mov	r0, r3
 801ebe8:	370c      	adds	r7, #12
 801ebea:	46bd      	mov	sp, r7
 801ebec:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ebf0:	4770      	bx	lr

0801ebf2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801ebf2:	b5b0      	push	{r4, r5, r7, lr}
 801ebf4:	b08e      	sub	sp, #56	; 0x38
 801ebf6:	af02      	add	r7, sp, #8
 801ebf8:	60f8      	str	r0, [r7, #12]
 801ebfa:	60b9      	str	r1, [r7, #8]
 801ebfc:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 801ebfe:	f107 031c 	add.w	r3, r7, #28
 801ec02:	6879      	ldr	r1, [r7, #4]
 801ec04:	4618      	mov	r0, r3
 801ec06:	f000 f94f 	bl	801eea8 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>
 801ec0a:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 801ec0c:	f107 0314 	add.w	r3, r7, #20
 801ec10:	68b9      	ldr	r1, [r7, #8]
 801ec12:	4618      	mov	r0, r3
 801ec14:	f000 f8c3 	bl	801ed9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 801ec18:	69bb      	ldr	r3, [r7, #24]
 801ec1a:	2b00      	cmp	r3, #0
 801ec1c:	d022      	beq.n	801ec64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 801ec1e:	f107 0310 	add.w	r3, r7, #16
 801ec22:	68b9      	ldr	r1, [r7, #8]
 801ec24:	4618      	mov	r0, r3
 801ec26:	f000 f94b 	bl	801eec0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeC1ERSM_>
	  return _Res(_M_insert_(__res.first, __res.second,
 801ec2a:	697c      	ldr	r4, [r7, #20]
 801ec2c:	69bd      	ldr	r5, [r7, #24]
 801ec2e:	6878      	ldr	r0, [r7, #4]
 801ec30:	f000 f955 	bl	801eede <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801ec34:	4602      	mov	r2, r0
 801ec36:	f107 0310 	add.w	r3, r7, #16
 801ec3a:	9300      	str	r3, [sp, #0]
 801ec3c:	4613      	mov	r3, r2
 801ec3e:	462a      	mov	r2, r5
 801ec40:	4621      	mov	r1, r4
 801ec42:	68b8      	ldr	r0, [r7, #8]
 801ec44:	f000 f956 	bl	801eef4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_>
 801ec48:	4603      	mov	r3, r0
 801ec4a:	623b      	str	r3, [r7, #32]
		      true);
 801ec4c:	2301      	movs	r3, #1
 801ec4e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801ec52:	f107 0227 	add.w	r2, r7, #39	; 0x27
 801ec56:	f107 0320 	add.w	r3, r7, #32
 801ec5a:	4619      	mov	r1, r3
 801ec5c:	68f8      	ldr	r0, [r7, #12]
 801ec5e:	f000 f992 	bl	801ef86 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>
 801ec62:	e011      	b.n	801ec88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 801ec64:	697a      	ldr	r2, [r7, #20]
 801ec66:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801ec6a:	4611      	mov	r1, r2
 801ec6c:	4618      	mov	r0, r3
 801ec6e:	f7ef fc0f 	bl	800e490 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801ec72:	2300      	movs	r3, #0
 801ec74:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 801ec78:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 801ec7c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801ec80:	4619      	mov	r1, r3
 801ec82:	68f8      	ldr	r0, [r7, #12]
 801ec84:	f000 f97f 	bl	801ef86 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>
    }
 801ec88:	68f8      	ldr	r0, [r7, #12]
 801ec8a:	3730      	adds	r7, #48	; 0x30
 801ec8c:	46bd      	mov	sp, r7
 801ec8e:	bdb0      	pop	{r4, r5, r7, pc}

0801ec90 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>:
 801ec90:	b580      	push	{r7, lr}
 801ec92:	b082      	sub	sp, #8
 801ec94:	af00      	add	r7, sp, #0
 801ec96:	6078      	str	r0, [r7, #4]
 801ec98:	6878      	ldr	r0, [r7, #4]
 801ec9a:	f000 f98d 	bl	801efb8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>
 801ec9e:	687b      	ldr	r3, [r7, #4]
 801eca0:	4618      	mov	r0, r3
 801eca2:	3708      	adds	r7, #8
 801eca4:	46bd      	mov	sp, r7
 801eca6:	bd80      	pop	{r7, pc}

0801eca8 <_ZSt7forwardIRA2_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801eca8:	b480      	push	{r7}
 801ecaa:	b083      	sub	sp, #12
 801ecac:	af00      	add	r7, sp, #0
 801ecae:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ecb0:	687b      	ldr	r3, [r7, #4]
 801ecb2:	4618      	mov	r0, r3
 801ecb4:	370c      	adds	r7, #12
 801ecb6:	46bd      	mov	sp, r7
 801ecb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ecbc:	4770      	bx	lr

0801ecbe <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEONSt16remove_referenceIT_E4typeEOSC_>:
    move(_Tp&& __t) noexcept
 801ecbe:	b480      	push	{r7}
 801ecc0:	b083      	sub	sp, #12
 801ecc2:	af00      	add	r7, sp, #0
 801ecc4:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801ecc6:	687b      	ldr	r3, [r7, #4]
 801ecc8:	4618      	mov	r0, r3
 801ecca:	370c      	adds	r7, #12
 801eccc:	46bd      	mov	sp, r7
 801ecce:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ecd2:	4770      	bx	lr

0801ecd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801ecd4:	b5b0      	push	{r4, r5, r7, lr}
 801ecd6:	b08e      	sub	sp, #56	; 0x38
 801ecd8:	af02      	add	r7, sp, #8
 801ecda:	60f8      	str	r0, [r7, #12]
 801ecdc:	60b9      	str	r1, [r7, #8]
 801ecde:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 801ece0:	f107 031c 	add.w	r3, r7, #28
 801ece4:	6879      	ldr	r1, [r7, #4]
 801ece6:	4618      	mov	r0, r3
 801ece8:	f000 f971 	bl	801efce <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>
 801ecec:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 801ecee:	f107 0314 	add.w	r3, r7, #20
 801ecf2:	68b9      	ldr	r1, [r7, #8]
 801ecf4:	4618      	mov	r0, r3
 801ecf6:	f7fa fbfd 	bl	80194f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 801ecfa:	69bb      	ldr	r3, [r7, #24]
 801ecfc:	2b00      	cmp	r3, #0
 801ecfe:	d022      	beq.n	801ed46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 801ed00:	f107 0310 	add.w	r3, r7, #16
 801ed04:	68b9      	ldr	r1, [r7, #8]
 801ed06:	4618      	mov	r0, r3
 801ed08:	f000 f96d 	bl	801efe6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>
	  return _Res(_M_insert_(__res.first, __res.second,
 801ed0c:	697c      	ldr	r4, [r7, #20]
 801ed0e:	69bd      	ldr	r5, [r7, #24]
 801ed10:	6878      	ldr	r0, [r7, #4]
 801ed12:	f000 f977 	bl	801f004 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801ed16:	4602      	mov	r2, r0
 801ed18:	f107 0310 	add.w	r3, r7, #16
 801ed1c:	9300      	str	r3, [sp, #0]
 801ed1e:	4613      	mov	r3, r2
 801ed20:	462a      	mov	r2, r5
 801ed22:	4621      	mov	r1, r4
 801ed24:	68b8      	ldr	r0, [r7, #8]
 801ed26:	f000 f978 	bl	801f01a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_>
 801ed2a:	4603      	mov	r3, r0
 801ed2c:	623b      	str	r3, [r7, #32]
		      true);
 801ed2e:	2301      	movs	r3, #1
 801ed30:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801ed34:	f107 0227 	add.w	r2, r7, #39	; 0x27
 801ed38:	f107 0320 	add.w	r3, r7, #32
 801ed3c:	4619      	mov	r1, r3
 801ed3e:	68f8      	ldr	r0, [r7, #12]
 801ed40:	f000 f9b4 	bl	801f0ac <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>
 801ed44:	e011      	b.n	801ed6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 801ed46:	697a      	ldr	r2, [r7, #20]
 801ed48:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801ed4c:	4611      	mov	r1, r2
 801ed4e:	4618      	mov	r0, r3
 801ed50:	f7fa f926 	bl	8018fa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801ed54:	2300      	movs	r3, #0
 801ed56:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 801ed5a:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 801ed5e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801ed62:	4619      	mov	r1, r3
 801ed64:	68f8      	ldr	r0, [r7, #12]
 801ed66:	f000 f9a1 	bl	801f0ac <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>
    }
 801ed6a:	68f8      	ldr	r0, [r7, #12]
 801ed6c:	3730      	adds	r7, #48	; 0x30
 801ed6e:	46bd      	mov	sp, r7
 801ed70:	bdb0      	pop	{r4, r5, r7, pc}

0801ed72 <_ZSt7forwardIRA9_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801ed72:	b480      	push	{r7}
 801ed74:	b083      	sub	sp, #12
 801ed76:	af00      	add	r7, sp, #0
 801ed78:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ed7a:	687b      	ldr	r3, [r7, #4]
 801ed7c:	4618      	mov	r0, r3
 801ed7e:	370c      	adds	r7, #12
 801ed80:	46bd      	mov	sp, r7
 801ed82:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ed86:	4770      	bx	lr

0801ed88 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801ed88:	b480      	push	{r7}
 801ed8a:	b083      	sub	sp, #12
 801ed8c:	af00      	add	r7, sp, #0
 801ed8e:	6078      	str	r0, [r7, #4]
 801ed90:	687b      	ldr	r3, [r7, #4]
 801ed92:	4618      	mov	r0, r3
 801ed94:	370c      	adds	r7, #12
 801ed96:	46bd      	mov	sp, r7
 801ed98:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ed9c:	4770      	bx	lr

0801ed9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801ed9e:	b590      	push	{r4, r7, lr}
 801eda0:	b08b      	sub	sp, #44	; 0x2c
 801eda2:	af00      	add	r7, sp, #0
 801eda4:	60f8      	str	r0, [r7, #12]
 801eda6:	60b9      	str	r1, [r7, #8]
 801eda8:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 801edaa:	68b8      	ldr	r0, [r7, #8]
 801edac:	f7ef f9c8 	bl	800e140 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 801edb0:	4603      	mov	r3, r0
 801edb2:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 801edb4:	68b8      	ldr	r0, [r7, #8]
 801edb6:	f7ef fb0e 	bl	800e3d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 801edba:	4603      	mov	r3, r0
 801edbc:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 801edbe:	2301      	movs	r3, #1
 801edc0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 801edc4:	69bb      	ldr	r3, [r7, #24]
 801edc6:	2b00      	cmp	r3, #0
 801edc8:	d020      	beq.n	801ee0c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 801edca:	69bb      	ldr	r3, [r7, #24]
 801edcc:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 801edce:	68bc      	ldr	r4, [r7, #8]
 801edd0:	69bb      	ldr	r3, [r7, #24]
 801edd2:	4618      	mov	r0, r3
 801edd4:	f7ef fc25 	bl	800e622 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 801edd8:	4603      	mov	r3, r0
 801edda:	461a      	mov	r2, r3
 801eddc:	6879      	ldr	r1, [r7, #4]
 801edde:	4620      	mov	r0, r4
 801ede0:	f7e6 fc2a 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801ede4:	4603      	mov	r3, r0
 801ede6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 801edea:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801edee:	2b00      	cmp	r3, #0
 801edf0:	d005      	beq.n	801edfe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x60>
 801edf2:	69bb      	ldr	r3, [r7, #24]
 801edf4:	4618      	mov	r0, r3
 801edf6:	f7ef fad1 	bl	800e39c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 801edfa:	4603      	mov	r3, r0
 801edfc:	e004      	b.n	801ee08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x6a>
 801edfe:	69bb      	ldr	r3, [r7, #24]
 801ee00:	4618      	mov	r0, r3
 801ee02:	f7ef fabf 	bl	800e384 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 801ee06:	4603      	mov	r3, r0
 801ee08:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 801ee0a:	e7db      	b.n	801edc4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 801ee0c:	697a      	ldr	r2, [r7, #20]
 801ee0e:	f107 0310 	add.w	r3, r7, #16
 801ee12:	4611      	mov	r1, r2
 801ee14:	4618      	mov	r0, r3
 801ee16:	f7ef fb3b 	bl	800e490 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 801ee1a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801ee1e:	2b00      	cmp	r3, #0
 801ee20:	d01d      	beq.n	801ee5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 801ee22:	68b8      	ldr	r0, [r7, #8]
 801ee24:	f000 f95b 	bl	801f0de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE5beginEv>
 801ee28:	4603      	mov	r3, r0
 801ee2a:	61fb      	str	r3, [r7, #28]
 801ee2c:	f107 021c 	add.w	r2, r7, #28
 801ee30:	f107 0310 	add.w	r3, r7, #16
 801ee34:	4611      	mov	r1, r2
 801ee36:	4618      	mov	r0, r3
 801ee38:	f7ef fb0a 	bl	800e450 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 801ee3c:	4603      	mov	r3, r0
 801ee3e:	2b00      	cmp	r3, #0
 801ee40:	d008      	beq.n	801ee54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 801ee42:	f107 0214 	add.w	r2, r7, #20
 801ee46:	f107 0318 	add.w	r3, r7, #24
 801ee4a:	4619      	mov	r1, r3
 801ee4c:	68f8      	ldr	r0, [r7, #12]
 801ee4e:	f000 f957 	bl	801f100 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>
 801ee52:	e025      	b.n	801eea0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 801ee54:	f107 0310 	add.w	r3, r7, #16
 801ee58:	4618      	mov	r0, r3
 801ee5a:	f000 f96a 	bl	801f132 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 801ee5e:	68bc      	ldr	r4, [r7, #8]
 801ee60:	693b      	ldr	r3, [r7, #16]
 801ee62:	4618      	mov	r0, r3
 801ee64:	f7ef fb08 	bl	800e478 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801ee68:	4603      	mov	r3, r0
 801ee6a:	687a      	ldr	r2, [r7, #4]
 801ee6c:	4619      	mov	r1, r3
 801ee6e:	4620      	mov	r0, r4
 801ee70:	f7e6 fbe2 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801ee74:	4603      	mov	r3, r0
 801ee76:	2b00      	cmp	r3, #0
 801ee78:	d008      	beq.n	801ee8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 801ee7a:	f107 0214 	add.w	r2, r7, #20
 801ee7e:	f107 0318 	add.w	r3, r7, #24
 801ee82:	4619      	mov	r1, r3
 801ee84:	68f8      	ldr	r0, [r7, #12]
 801ee86:	f000 f93b 	bl	801f100 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>
 801ee8a:	e009      	b.n	801eea0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 801ee8c:	2300      	movs	r3, #0
 801ee8e:	623b      	str	r3, [r7, #32]
 801ee90:	f107 0220 	add.w	r2, r7, #32
 801ee94:	f107 0310 	add.w	r3, r7, #16
 801ee98:	4619      	mov	r1, r3
 801ee9a:	68f8      	ldr	r0, [r7, #12]
 801ee9c:	f7e6 fb2e 	bl	80054fc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 801eea0:	68f8      	ldr	r0, [r7, #12]
 801eea2:	372c      	adds	r7, #44	; 0x2c
 801eea4:	46bd      	mov	sp, r7
 801eea6:	bd90      	pop	{r4, r7, pc}

0801eea8 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>:
      operator()(_Pair& __x) const
 801eea8:	b480      	push	{r7}
 801eeaa:	b083      	sub	sp, #12
 801eeac:	af00      	add	r7, sp, #0
 801eeae:	6078      	str	r0, [r7, #4]
 801eeb0:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 801eeb2:	683b      	ldr	r3, [r7, #0]
 801eeb4:	4618      	mov	r0, r3
 801eeb6:	370c      	adds	r7, #12
 801eeb8:	46bd      	mov	sp, r7
 801eeba:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eebe:	4770      	bx	lr

0801eec0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeC1ERSM_>:
	_Alloc_node(_Rb_tree& __t)
 801eec0:	b480      	push	{r7}
 801eec2:	b083      	sub	sp, #12
 801eec4:	af00      	add	r7, sp, #0
 801eec6:	6078      	str	r0, [r7, #4]
 801eec8:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 801eeca:	687b      	ldr	r3, [r7, #4]
 801eecc:	683a      	ldr	r2, [r7, #0]
 801eece:	601a      	str	r2, [r3, #0]
 801eed0:	687b      	ldr	r3, [r7, #4]
 801eed2:	4618      	mov	r0, r3
 801eed4:	370c      	adds	r7, #12
 801eed6:	46bd      	mov	sp, r7
 801eed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eedc:	4770      	bx	lr

0801eede <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801eede:	b480      	push	{r7}
 801eee0:	b083      	sub	sp, #12
 801eee2:	af00      	add	r7, sp, #0
 801eee4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801eee6:	687b      	ldr	r3, [r7, #4]
 801eee8:	4618      	mov	r0, r3
 801eeea:	370c      	adds	r7, #12
 801eeec:	46bd      	mov	sp, r7
 801eeee:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eef2:	4770      	bx	lr

0801eef4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801eef4:	b5b0      	push	{r4, r5, r7, lr}
 801eef6:	b088      	sub	sp, #32
 801eef8:	af00      	add	r7, sp, #0
 801eefa:	60f8      	str	r0, [r7, #12]
 801eefc:	60b9      	str	r1, [r7, #8]
 801eefe:	607a      	str	r2, [r7, #4]
 801ef00:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801ef02:	68bb      	ldr	r3, [r7, #8]
 801ef04:	2b00      	cmp	r3, #0
 801ef06:	d11a      	bne.n	801ef3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 801ef08:	68f8      	ldr	r0, [r7, #12]
 801ef0a:	f7ef fa64 	bl	800e3d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 801ef0e:	4602      	mov	r2, r0
 801ef10:	687b      	ldr	r3, [r7, #4]
 801ef12:	4293      	cmp	r3, r2
 801ef14:	d013      	beq.n	801ef3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801ef16:	68fc      	ldr	r4, [r7, #12]
 801ef18:	f107 0310 	add.w	r3, r7, #16
 801ef1c:	6839      	ldr	r1, [r7, #0]
 801ef1e:	4618      	mov	r0, r3
 801ef20:	f7ff ffc2 	bl	801eea8 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>
 801ef24:	4605      	mov	r5, r0
 801ef26:	6878      	ldr	r0, [r7, #4]
 801ef28:	f7ef faa6 	bl	800e478 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801ef2c:	4603      	mov	r3, r0
 801ef2e:	461a      	mov	r2, r3
 801ef30:	4629      	mov	r1, r5
 801ef32:	4620      	mov	r0, r4
 801ef34:	f7e6 fb80 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801ef38:	4603      	mov	r3, r0
 801ef3a:	2b00      	cmp	r3, #0
 801ef3c:	d001      	beq.n	801ef42 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4e>
 801ef3e:	2301      	movs	r3, #1
 801ef40:	e000      	b.n	801ef44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x50>
 801ef42:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 801ef44:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 801ef46:	6838      	ldr	r0, [r7, #0]
 801ef48:	f7ff ffc9 	bl	801eede <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801ef4c:	4603      	mov	r3, r0
 801ef4e:	4619      	mov	r1, r3
 801ef50:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801ef52:	f000 f8ff 	bl	801f154 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeclISG_EEPSt13_Rb_tree_nodeISG_EOT_>
 801ef56:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 801ef58:	68fb      	ldr	r3, [r7, #12]
 801ef5a:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 801ef5c:	7ff8      	ldrb	r0, [r7, #31]
 801ef5e:	687a      	ldr	r2, [r7, #4]
 801ef60:	69b9      	ldr	r1, [r7, #24]
 801ef62:	f003 fb05 	bl	8022570 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 801ef66:	68fb      	ldr	r3, [r7, #12]
 801ef68:	695b      	ldr	r3, [r3, #20]
 801ef6a:	1c5a      	adds	r2, r3, #1
 801ef6c:	68fb      	ldr	r3, [r7, #12]
 801ef6e:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 801ef70:	f107 0314 	add.w	r3, r7, #20
 801ef74:	69b9      	ldr	r1, [r7, #24]
 801ef76:	4618      	mov	r0, r3
 801ef78:	f7ef fa8a 	bl	800e490 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801ef7c:	697b      	ldr	r3, [r7, #20]
      }
 801ef7e:	4618      	mov	r0, r3
 801ef80:	3720      	adds	r7, #32
 801ef82:	46bd      	mov	sp, r7
 801ef84:	bdb0      	pop	{r4, r5, r7, pc}

0801ef86 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801ef86:	b580      	push	{r7, lr}
 801ef88:	b084      	sub	sp, #16
 801ef8a:	af00      	add	r7, sp, #0
 801ef8c:	60f8      	str	r0, [r7, #12]
 801ef8e:	60b9      	str	r1, [r7, #8]
 801ef90:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801ef92:	68b8      	ldr	r0, [r7, #8]
 801ef94:	f000 f8f2 	bl	801f17c <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801ef98:	4602      	mov	r2, r0
 801ef9a:	68fb      	ldr	r3, [r7, #12]
 801ef9c:	6812      	ldr	r2, [r2, #0]
 801ef9e:	601a      	str	r2, [r3, #0]
 801efa0:	6878      	ldr	r0, [r7, #4]
 801efa2:	f7e9 fb6d 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801efa6:	4603      	mov	r3, r0
 801efa8:	781a      	ldrb	r2, [r3, #0]
 801efaa:	68fb      	ldr	r3, [r7, #12]
 801efac:	711a      	strb	r2, [r3, #4]
 801efae:	68fb      	ldr	r3, [r7, #12]
 801efb0:	4618      	mov	r0, r3
 801efb2:	3710      	adds	r7, #16
 801efb4:	46bd      	mov	sp, r7
 801efb6:	bd80      	pop	{r7, pc}

0801efb8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>:
 801efb8:	b480      	push	{r7}
 801efba:	b083      	sub	sp, #12
 801efbc:	af00      	add	r7, sp, #0
 801efbe:	6078      	str	r0, [r7, #4]
 801efc0:	687b      	ldr	r3, [r7, #4]
 801efc2:	4618      	mov	r0, r3
 801efc4:	370c      	adds	r7, #12
 801efc6:	46bd      	mov	sp, r7
 801efc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801efcc:	4770      	bx	lr

0801efce <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>:
      operator()(_Pair& __x) const
 801efce:	b480      	push	{r7}
 801efd0:	b083      	sub	sp, #12
 801efd2:	af00      	add	r7, sp, #0
 801efd4:	6078      	str	r0, [r7, #4]
 801efd6:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 801efd8:	683b      	ldr	r3, [r7, #0]
 801efda:	4618      	mov	r0, r3
 801efdc:	370c      	adds	r7, #12
 801efde:	46bd      	mov	sp, r7
 801efe0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801efe4:	4770      	bx	lr

0801efe6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>:
	_Alloc_node(_Rb_tree& __t)
 801efe6:	b480      	push	{r7}
 801efe8:	b083      	sub	sp, #12
 801efea:	af00      	add	r7, sp, #0
 801efec:	6078      	str	r0, [r7, #4]
 801efee:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 801eff0:	687b      	ldr	r3, [r7, #4]
 801eff2:	683a      	ldr	r2, [r7, #0]
 801eff4:	601a      	str	r2, [r3, #0]
 801eff6:	687b      	ldr	r3, [r7, #4]
 801eff8:	4618      	mov	r0, r3
 801effa:	370c      	adds	r7, #12
 801effc:	46bd      	mov	sp, r7
 801effe:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f002:	4770      	bx	lr

0801f004 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f004:	b480      	push	{r7}
 801f006:	b083      	sub	sp, #12
 801f008:	af00      	add	r7, sp, #0
 801f00a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f00c:	687b      	ldr	r3, [r7, #4]
 801f00e:	4618      	mov	r0, r3
 801f010:	370c      	adds	r7, #12
 801f012:	46bd      	mov	sp, r7
 801f014:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f018:	4770      	bx	lr

0801f01a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801f01a:	b5b0      	push	{r4, r5, r7, lr}
 801f01c:	b088      	sub	sp, #32
 801f01e:	af00      	add	r7, sp, #0
 801f020:	60f8      	str	r0, [r7, #12]
 801f022:	60b9      	str	r1, [r7, #8]
 801f024:	607a      	str	r2, [r7, #4]
 801f026:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801f028:	68bb      	ldr	r3, [r7, #8]
 801f02a:	2b00      	cmp	r3, #0
 801f02c:	d11a      	bne.n	801f064 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 801f02e:	68f8      	ldr	r0, [r7, #12]
 801f030:	f7f9 ff6d 	bl	8018f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 801f034:	4602      	mov	r2, r0
 801f036:	687b      	ldr	r3, [r7, #4]
 801f038:	4293      	cmp	r3, r2
 801f03a:	d013      	beq.n	801f064 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801f03c:	68fc      	ldr	r4, [r7, #12]
 801f03e:	f107 0310 	add.w	r3, r7, #16
 801f042:	6839      	ldr	r1, [r7, #0]
 801f044:	4618      	mov	r0, r3
 801f046:	f7ff ffc2 	bl	801efce <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>
 801f04a:	4605      	mov	r5, r0
 801f04c:	6878      	ldr	r0, [r7, #4]
 801f04e:	f7f9 ff9b 	bl	8018f88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801f052:	4603      	mov	r3, r0
 801f054:	461a      	mov	r2, r3
 801f056:	4629      	mov	r1, r5
 801f058:	4620      	mov	r0, r4
 801f05a:	f7e6 faed 	bl	8005638 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801f05e:	4603      	mov	r3, r0
 801f060:	2b00      	cmp	r3, #0
 801f062:	d001      	beq.n	801f068 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4e>
 801f064:	2301      	movs	r3, #1
 801f066:	e000      	b.n	801f06a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x50>
 801f068:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 801f06a:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 801f06c:	6838      	ldr	r0, [r7, #0]
 801f06e:	f7ff ffc9 	bl	801f004 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801f072:	4603      	mov	r3, r0
 801f074:	4619      	mov	r1, r3
 801f076:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801f078:	f000 f88b 	bl	801f192 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIS9_EEPSt13_Rb_tree_nodeIS9_EOT_>
 801f07c:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 801f07e:	68fb      	ldr	r3, [r7, #12]
 801f080:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 801f082:	7ff8      	ldrb	r0, [r7, #31]
 801f084:	687a      	ldr	r2, [r7, #4]
 801f086:	69b9      	ldr	r1, [r7, #24]
 801f088:	f003 fa72 	bl	8022570 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 801f08c:	68fb      	ldr	r3, [r7, #12]
 801f08e:	695b      	ldr	r3, [r3, #20]
 801f090:	1c5a      	adds	r2, r3, #1
 801f092:	68fb      	ldr	r3, [r7, #12]
 801f094:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 801f096:	f107 0314 	add.w	r3, r7, #20
 801f09a:	69b9      	ldr	r1, [r7, #24]
 801f09c:	4618      	mov	r0, r3
 801f09e:	f7f9 ff7f 	bl	8018fa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801f0a2:	697b      	ldr	r3, [r7, #20]
      }
 801f0a4:	4618      	mov	r0, r3
 801f0a6:	3720      	adds	r7, #32
 801f0a8:	46bd      	mov	sp, r7
 801f0aa:	bdb0      	pop	{r4, r5, r7, pc}

0801f0ac <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801f0ac:	b580      	push	{r7, lr}
 801f0ae:	b084      	sub	sp, #16
 801f0b0:	af00      	add	r7, sp, #0
 801f0b2:	60f8      	str	r0, [r7, #12]
 801f0b4:	60b9      	str	r1, [r7, #8]
 801f0b6:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801f0b8:	68b8      	ldr	r0, [r7, #8]
 801f0ba:	f000 f87e 	bl	801f1ba <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISC_E4typeE>
 801f0be:	4602      	mov	r2, r0
 801f0c0:	68fb      	ldr	r3, [r7, #12]
 801f0c2:	6812      	ldr	r2, [r2, #0]
 801f0c4:	601a      	str	r2, [r3, #0]
 801f0c6:	6878      	ldr	r0, [r7, #4]
 801f0c8:	f7e9 fada 	bl	8008680 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801f0cc:	4603      	mov	r3, r0
 801f0ce:	781a      	ldrb	r2, [r3, #0]
 801f0d0:	68fb      	ldr	r3, [r7, #12]
 801f0d2:	711a      	strb	r2, [r3, #4]
 801f0d4:	68fb      	ldr	r3, [r7, #12]
 801f0d6:	4618      	mov	r0, r3
 801f0d8:	3710      	adds	r7, #16
 801f0da:	46bd      	mov	sp, r7
 801f0dc:	bd80      	pop	{r7, pc}

0801f0de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801f0de:	b580      	push	{r7, lr}
 801f0e0:	b084      	sub	sp, #16
 801f0e2:	af00      	add	r7, sp, #0
 801f0e4:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 801f0e6:	687b      	ldr	r3, [r7, #4]
 801f0e8:	68da      	ldr	r2, [r3, #12]
 801f0ea:	f107 030c 	add.w	r3, r7, #12
 801f0ee:	4611      	mov	r1, r2
 801f0f0:	4618      	mov	r0, r3
 801f0f2:	f7ef f9cd 	bl	800e490 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801f0f6:	68fb      	ldr	r3, [r7, #12]
 801f0f8:	4618      	mov	r0, r3
 801f0fa:	3710      	adds	r7, #16
 801f0fc:	46bd      	mov	sp, r7
 801f0fe:	bd80      	pop	{r7, pc}

0801f100 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801f100:	b580      	push	{r7, lr}
 801f102:	b084      	sub	sp, #16
 801f104:	af00      	add	r7, sp, #0
 801f106:	60f8      	str	r0, [r7, #12]
 801f108:	60b9      	str	r1, [r7, #8]
 801f10a:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801f10c:	68b8      	ldr	r0, [r7, #8]
 801f10e:	f000 f85f 	bl	801f1d0 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 801f112:	4603      	mov	r3, r0
 801f114:	681a      	ldr	r2, [r3, #0]
 801f116:	68fb      	ldr	r3, [r7, #12]
 801f118:	601a      	str	r2, [r3, #0]
 801f11a:	6878      	ldr	r0, [r7, #4]
 801f11c:	f7e7 f95d 	bl	80063da <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 801f120:	4603      	mov	r3, r0
 801f122:	681a      	ldr	r2, [r3, #0]
 801f124:	68fb      	ldr	r3, [r7, #12]
 801f126:	605a      	str	r2, [r3, #4]
 801f128:	68fb      	ldr	r3, [r7, #12]
 801f12a:	4618      	mov	r0, r3
 801f12c:	3710      	adds	r7, #16
 801f12e:	46bd      	mov	sp, r7
 801f130:	bd80      	pop	{r7, pc}

0801f132 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 801f132:	b580      	push	{r7, lr}
 801f134:	b082      	sub	sp, #8
 801f136:	af00      	add	r7, sp, #0
 801f138:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 801f13a:	687b      	ldr	r3, [r7, #4]
 801f13c:	681b      	ldr	r3, [r3, #0]
 801f13e:	4618      	mov	r0, r3
 801f140:	f003 fa14 	bl	802256c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 801f144:	4602      	mov	r2, r0
 801f146:	687b      	ldr	r3, [r7, #4]
 801f148:	601a      	str	r2, [r3, #0]
	return *this;
 801f14a:	687b      	ldr	r3, [r7, #4]
      }
 801f14c:	4618      	mov	r0, r3
 801f14e:	3708      	adds	r7, #8
 801f150:	46bd      	mov	sp, r7
 801f152:	bd80      	pop	{r7, pc}

0801f154 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeclISG_EEPSt13_Rb_tree_nodeISG_EOT_>:
	  operator()(_Arg&& __arg) const
 801f154:	b590      	push	{r4, r7, lr}
 801f156:	b083      	sub	sp, #12
 801f158:	af00      	add	r7, sp, #0
 801f15a:	6078      	str	r0, [r7, #4]
 801f15c:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 801f15e:	687b      	ldr	r3, [r7, #4]
 801f160:	681c      	ldr	r4, [r3, #0]
 801f162:	6838      	ldr	r0, [r7, #0]
 801f164:	f7ff febb 	bl	801eede <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801f168:	4603      	mov	r3, r0
 801f16a:	4619      	mov	r1, r3
 801f16c:	4620      	mov	r0, r4
 801f16e:	f000 f83a 	bl	801f1e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_create_nodeIJSG_EEEPSt13_Rb_tree_nodeISG_EDpOT_>
 801f172:	4603      	mov	r3, r0
 801f174:	4618      	mov	r0, r3
 801f176:	370c      	adds	r7, #12
 801f178:	46bd      	mov	sp, r7
 801f17a:	bd90      	pop	{r4, r7, pc}

0801f17c <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f17c:	b480      	push	{r7}
 801f17e:	b083      	sub	sp, #12
 801f180:	af00      	add	r7, sp, #0
 801f182:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f184:	687b      	ldr	r3, [r7, #4]
 801f186:	4618      	mov	r0, r3
 801f188:	370c      	adds	r7, #12
 801f18a:	46bd      	mov	sp, r7
 801f18c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f190:	4770      	bx	lr

0801f192 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIS9_EEPSt13_Rb_tree_nodeIS9_EOT_>:
	  operator()(_Arg&& __arg) const
 801f192:	b590      	push	{r4, r7, lr}
 801f194:	b083      	sub	sp, #12
 801f196:	af00      	add	r7, sp, #0
 801f198:	6078      	str	r0, [r7, #4]
 801f19a:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 801f19c:	687b      	ldr	r3, [r7, #4]
 801f19e:	681c      	ldr	r4, [r3, #0]
 801f1a0:	6838      	ldr	r0, [r7, #0]
 801f1a2:	f7ff ff2f 	bl	801f004 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801f1a6:	4603      	mov	r3, r0
 801f1a8:	4619      	mov	r1, r3
 801f1aa:	4620      	mov	r0, r4
 801f1ac:	f000 f832 	bl	801f214 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 801f1b0:	4603      	mov	r3, r0
 801f1b2:	4618      	mov	r0, r3
 801f1b4:	370c      	adds	r7, #12
 801f1b6:	46bd      	mov	sp, r7
 801f1b8:	bd90      	pop	{r4, r7, pc}

0801f1ba <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f1ba:	b480      	push	{r7}
 801f1bc:	b083      	sub	sp, #12
 801f1be:	af00      	add	r7, sp, #0
 801f1c0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f1c2:	687b      	ldr	r3, [r7, #4]
 801f1c4:	4618      	mov	r0, r3
 801f1c6:	370c      	adds	r7, #12
 801f1c8:	46bd      	mov	sp, r7
 801f1ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f1ce:	4770      	bx	lr

0801f1d0 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISL_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f1d0:	b480      	push	{r7}
 801f1d2:	b083      	sub	sp, #12
 801f1d4:	af00      	add	r7, sp, #0
 801f1d6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f1d8:	687b      	ldr	r3, [r7, #4]
 801f1da:	4618      	mov	r0, r3
 801f1dc:	370c      	adds	r7, #12
 801f1de:	46bd      	mov	sp, r7
 801f1e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f1e4:	4770      	bx	lr

0801f1e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_create_nodeIJSG_EEEPSt13_Rb_tree_nodeISG_EDpOT_>:
	_M_create_node(_Args&&... __args)
 801f1e6:	b580      	push	{r7, lr}
 801f1e8:	b084      	sub	sp, #16
 801f1ea:	af00      	add	r7, sp, #0
 801f1ec:	6078      	str	r0, [r7, #4]
 801f1ee:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 801f1f0:	6878      	ldr	r0, [r7, #4]
 801f1f2:	f000 f826 	bl	801f242 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_get_nodeEv>
 801f1f6:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 801f1f8:	6838      	ldr	r0, [r7, #0]
 801f1fa:	f7ff fe70 	bl	801eede <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801f1fe:	4603      	mov	r3, r0
 801f200:	461a      	mov	r2, r3
 801f202:	68f9      	ldr	r1, [r7, #12]
 801f204:	6878      	ldr	r0, [r7, #4]
 801f206:	f000 f82d 	bl	801f264 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE17_M_construct_nodeIJSG_EEEvPSt13_Rb_tree_nodeISG_EDpOT_>
	  return __tmp;
 801f20a:	68fb      	ldr	r3, [r7, #12]
	}
 801f20c:	4618      	mov	r0, r3
 801f20e:	3710      	adds	r7, #16
 801f210:	46bd      	mov	sp, r7
 801f212:	bd80      	pop	{r7, pc}

0801f214 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 801f214:	b580      	push	{r7, lr}
 801f216:	b084      	sub	sp, #16
 801f218:	af00      	add	r7, sp, #0
 801f21a:	6078      	str	r0, [r7, #4]
 801f21c:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 801f21e:	6878      	ldr	r0, [r7, #4]
 801f220:	f7fa f901 	bl	8019426 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 801f224:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 801f226:	6838      	ldr	r0, [r7, #0]
 801f228:	f7ff feec 	bl	801f004 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801f22c:	4603      	mov	r3, r0
 801f22e:	461a      	mov	r2, r3
 801f230:	68f9      	ldr	r1, [r7, #12]
 801f232:	6878      	ldr	r0, [r7, #4]
 801f234:	f000 f836 	bl	801f2a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 801f238:	68fb      	ldr	r3, [r7, #12]
	}
 801f23a:	4618      	mov	r0, r3
 801f23c:	3710      	adds	r7, #16
 801f23e:	46bd      	mov	sp, r7
 801f240:	bd80      	pop	{r7, pc}

0801f242 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_get_nodeEv>:
      _M_get_node()
 801f242:	b580      	push	{r7, lr}
 801f244:	b082      	sub	sp, #8
 801f246:	af00      	add	r7, sp, #0
 801f248:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 801f24a:	6878      	ldr	r0, [r7, #4]
 801f24c:	f7ef fa67 	bl	800e71e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 801f250:	4603      	mov	r3, r0
 801f252:	2101      	movs	r1, #1
 801f254:	4618      	mov	r0, r3
 801f256:	f000 f845 	bl	801f2e4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE8allocateERSJ_j>
 801f25a:	4603      	mov	r3, r0
 801f25c:	4618      	mov	r0, r3
 801f25e:	3708      	adds	r7, #8
 801f260:	46bd      	mov	sp, r7
 801f262:	bd80      	pop	{r7, pc}

0801f264 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE17_M_construct_nodeIJSG_EEEvPSt13_Rb_tree_nodeISG_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 801f264:	b5b0      	push	{r4, r5, r7, lr}
 801f266:	b084      	sub	sp, #16
 801f268:	af00      	add	r7, sp, #0
 801f26a:	60f8      	str	r0, [r7, #12]
 801f26c:	60b9      	str	r1, [r7, #8]
 801f26e:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 801f270:	68bb      	ldr	r3, [r7, #8]
 801f272:	4619      	mov	r1, r3
 801f274:	202c      	movs	r0, #44	; 0x2c
 801f276:	f7e1 fef0 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 801f27a:	68f8      	ldr	r0, [r7, #12]
 801f27c:	f7ef fa4f 	bl	800e71e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 801f280:	4604      	mov	r4, r0
 801f282:	68b8      	ldr	r0, [r7, #8]
 801f284:	f7ee ffb5 	bl	800e1f2 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 801f288:	4605      	mov	r5, r0
 801f28a:	6878      	ldr	r0, [r7, #4]
 801f28c:	f7ff fe27 	bl	801eede <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801f290:	4603      	mov	r3, r0
 801f292:	461a      	mov	r2, r3
 801f294:	4629      	mov	r1, r5
 801f296:	4620      	mov	r0, r4
 801f298:	f000 f833 	bl	801f302 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE9constructISH_JSH_EEEvRSJ_PT_DpOT0_>
	}
 801f29c:	bf00      	nop
 801f29e:	3710      	adds	r7, #16
 801f2a0:	46bd      	mov	sp, r7
 801f2a2:	bdb0      	pop	{r4, r5, r7, pc}

0801f2a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 801f2a4:	b5b0      	push	{r4, r5, r7, lr}
 801f2a6:	b084      	sub	sp, #16
 801f2a8:	af00      	add	r7, sp, #0
 801f2aa:	60f8      	str	r0, [r7, #12]
 801f2ac:	60b9      	str	r1, [r7, #8]
 801f2ae:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 801f2b0:	68bb      	ldr	r3, [r7, #8]
 801f2b2:	4619      	mov	r1, r3
 801f2b4:	2048      	movs	r0, #72	; 0x48
 801f2b6:	f7e1 fed0 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 801f2ba:	68f8      	ldr	r0, [r7, #12]
 801f2bc:	f7fa f9e7 	bl	801968e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 801f2c0:	4604      	mov	r4, r0
 801f2c2:	68b8      	ldr	r0, [r7, #8]
 801f2c4:	f7f9 fd5a 	bl	8018d7c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 801f2c8:	4605      	mov	r5, r0
 801f2ca:	6878      	ldr	r0, [r7, #4]
 801f2cc:	f7ff fe9a 	bl	801f004 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801f2d0:	4603      	mov	r3, r0
 801f2d2:	461a      	mov	r2, r3
 801f2d4:	4629      	mov	r1, r5
 801f2d6:	4620      	mov	r0, r4
 801f2d8:	f000 f826 	bl	801f328 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JSA_EEEvRSC_PT_DpOT0_>
	}
 801f2dc:	bf00      	nop
 801f2de:	3710      	adds	r7, #16
 801f2e0:	46bd      	mov	sp, r7
 801f2e2:	bdb0      	pop	{r4, r5, r7, pc}

0801f2e4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE8allocateERSJ_j>:
      allocate(allocator_type& __a, size_type __n)
 801f2e4:	b580      	push	{r7, lr}
 801f2e6:	b082      	sub	sp, #8
 801f2e8:	af00      	add	r7, sp, #0
 801f2ea:	6078      	str	r0, [r7, #4]
 801f2ec:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801f2ee:	2200      	movs	r2, #0
 801f2f0:	6839      	ldr	r1, [r7, #0]
 801f2f2:	6878      	ldr	r0, [r7, #4]
 801f2f4:	f000 f82b 	bl	801f34e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv>
 801f2f8:	4603      	mov	r3, r0
 801f2fa:	4618      	mov	r0, r3
 801f2fc:	3708      	adds	r7, #8
 801f2fe:	46bd      	mov	sp, r7
 801f300:	bd80      	pop	{r7, pc}

0801f302 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE9constructISH_JSH_EEEvRSJ_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801f302:	b580      	push	{r7, lr}
 801f304:	b084      	sub	sp, #16
 801f306:	af00      	add	r7, sp, #0
 801f308:	60f8      	str	r0, [r7, #12]
 801f30a:	60b9      	str	r1, [r7, #8]
 801f30c:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801f30e:	6878      	ldr	r0, [r7, #4]
 801f310:	f7ff fde5 	bl	801eede <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801f314:	4603      	mov	r3, r0
 801f316:	461a      	mov	r2, r3
 801f318:	68b9      	ldr	r1, [r7, #8]
 801f31a:	68f8      	ldr	r0, [r7, #12]
 801f31c:	f000 f84c 	bl	801f3b8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE9constructISI_JSI_EEEvPT_DpOT0_>
 801f320:	bf00      	nop
 801f322:	3710      	adds	r7, #16
 801f324:	46bd      	mov	sp, r7
 801f326:	bd80      	pop	{r7, pc}

0801f328 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JSA_EEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801f328:	b580      	push	{r7, lr}
 801f32a:	b084      	sub	sp, #16
 801f32c:	af00      	add	r7, sp, #0
 801f32e:	60f8      	str	r0, [r7, #12]
 801f330:	60b9      	str	r1, [r7, #8]
 801f332:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801f334:	6878      	ldr	r0, [r7, #4]
 801f336:	f7ff fe65 	bl	801f004 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801f33a:	4603      	mov	r3, r0
 801f33c:	461a      	mov	r2, r3
 801f33e:	68b9      	ldr	r1, [r7, #8]
 801f340:	68f8      	ldr	r0, [r7, #12]
 801f342:	f000 f86a 	bl	801f41a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JSB_EEEvPT_DpOT0_>
 801f346:	bf00      	nop
 801f348:	3710      	adds	r7, #16
 801f34a:	46bd      	mov	sp, r7
 801f34c:	bd80      	pop	{r7, pc}

0801f34e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801f34e:	b580      	push	{r7, lr}
 801f350:	b084      	sub	sp, #16
 801f352:	af00      	add	r7, sp, #0
 801f354:	60f8      	str	r0, [r7, #12]
 801f356:	60b9      	str	r1, [r7, #8]
 801f358:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801f35a:	68f8      	ldr	r0, [r7, #12]
 801f35c:	f000 f876 	bl	801f44c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv>
 801f360:	4602      	mov	r2, r0
 801f362:	68bb      	ldr	r3, [r7, #8]
 801f364:	4293      	cmp	r3, r2
 801f366:	bf8c      	ite	hi
 801f368:	2301      	movhi	r3, #1
 801f36a:	2300      	movls	r3, #0
 801f36c:	b2db      	uxtb	r3, r3
 801f36e:	2b00      	cmp	r3, #0
 801f370:	d001      	beq.n	801f376 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801f372:	f003 f959 	bl	8022628 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801f376:	68bb      	ldr	r3, [r7, #8]
 801f378:	222c      	movs	r2, #44	; 0x2c
 801f37a:	fb02 f303 	mul.w	r3, r2, r3
 801f37e:	4618      	mov	r0, r3
 801f380:	f003 f88d 	bl	802249e <_Znwj>
 801f384:	4603      	mov	r3, r0
 801f386:	bf00      	nop
      }
 801f388:	4618      	mov	r0, r3
 801f38a:	3710      	adds	r7, #16
 801f38c:	46bd      	mov	sp, r7
 801f38e:	bd80      	pop	{r7, pc}

0801f390 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1EOSF_>:
      constexpr pair(pair&&) = default;
 801f390:	b580      	push	{r7, lr}
 801f392:	b082      	sub	sp, #8
 801f394:	af00      	add	r7, sp, #0
 801f396:	6078      	str	r0, [r7, #4]
 801f398:	6039      	str	r1, [r7, #0]
 801f39a:	687b      	ldr	r3, [r7, #4]
 801f39c:	683a      	ldr	r2, [r7, #0]
 801f39e:	4611      	mov	r1, r2
 801f3a0:	4618      	mov	r0, r3
 801f3a2:	f003 fce3 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801f3a6:	683b      	ldr	r3, [r7, #0]
 801f3a8:	699a      	ldr	r2, [r3, #24]
 801f3aa:	687b      	ldr	r3, [r7, #4]
 801f3ac:	619a      	str	r2, [r3, #24]
 801f3ae:	687b      	ldr	r3, [r7, #4]
 801f3b0:	4618      	mov	r0, r3
 801f3b2:	3708      	adds	r7, #8
 801f3b4:	46bd      	mov	sp, r7
 801f3b6:	bd80      	pop	{r7, pc}

0801f3b8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE9constructISI_JSI_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801f3b8:	b590      	push	{r4, r7, lr}
 801f3ba:	b085      	sub	sp, #20
 801f3bc:	af00      	add	r7, sp, #0
 801f3be:	60f8      	str	r0, [r7, #12]
 801f3c0:	60b9      	str	r1, [r7, #8]
 801f3c2:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801f3c4:	6878      	ldr	r0, [r7, #4]
 801f3c6:	f7ff fd8a 	bl	801eede <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801f3ca:	4604      	mov	r4, r0
 801f3cc:	68bb      	ldr	r3, [r7, #8]
 801f3ce:	4619      	mov	r1, r3
 801f3d0:	201c      	movs	r0, #28
 801f3d2:	f7e1 fe42 	bl	800105a <_ZnwjPv>
 801f3d6:	4603      	mov	r3, r0
 801f3d8:	4621      	mov	r1, r4
 801f3da:	4618      	mov	r0, r3
 801f3dc:	f7ff ffd8 	bl	801f390 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1EOSF_>
 801f3e0:	bf00      	nop
 801f3e2:	3714      	adds	r7, #20
 801f3e4:	46bd      	mov	sp, r7
 801f3e6:	bd90      	pop	{r4, r7, pc}

0801f3e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1EOS8_>:
 801f3e8:	b580      	push	{r7, lr}
 801f3ea:	b082      	sub	sp, #8
 801f3ec:	af00      	add	r7, sp, #0
 801f3ee:	6078      	str	r0, [r7, #4]
 801f3f0:	6039      	str	r1, [r7, #0]
 801f3f2:	687b      	ldr	r3, [r7, #4]
 801f3f4:	683a      	ldr	r2, [r7, #0]
 801f3f6:	4611      	mov	r1, r2
 801f3f8:	4618      	mov	r0, r3
 801f3fa:	f003 fcb7 	bl	8022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801f3fe:	687b      	ldr	r3, [r7, #4]
 801f400:	f103 0218 	add.w	r2, r3, #24
 801f404:	683b      	ldr	r3, [r7, #0]
 801f406:	3318      	adds	r3, #24
 801f408:	4619      	mov	r1, r3
 801f40a:	4610      	mov	r0, r2
 801f40c:	f7ec fd86 	bl	800bf1c <_ZN6SymbolC1EOS_>
 801f410:	687b      	ldr	r3, [r7, #4]
 801f412:	4618      	mov	r0, r3
 801f414:	3708      	adds	r7, #8
 801f416:	46bd      	mov	sp, r7
 801f418:	bd80      	pop	{r7, pc}

0801f41a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JSB_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801f41a:	b590      	push	{r4, r7, lr}
 801f41c:	b085      	sub	sp, #20
 801f41e:	af00      	add	r7, sp, #0
 801f420:	60f8      	str	r0, [r7, #12]
 801f422:	60b9      	str	r1, [r7, #8]
 801f424:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801f426:	6878      	ldr	r0, [r7, #4]
 801f428:	f7ff fdec 	bl	801f004 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801f42c:	4604      	mov	r4, r0
 801f42e:	68bb      	ldr	r3, [r7, #8]
 801f430:	4619      	mov	r1, r3
 801f432:	2038      	movs	r0, #56	; 0x38
 801f434:	f7e1 fe11 	bl	800105a <_ZnwjPv>
 801f438:	4603      	mov	r3, r0
 801f43a:	4621      	mov	r1, r4
 801f43c:	4618      	mov	r0, r3
 801f43e:	f7ff ffd3 	bl	801f3e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1EOS8_>
 801f442:	bf00      	nop
 801f444:	3714      	adds	r7, #20
 801f446:	46bd      	mov	sp, r7
 801f448:	bd90      	pop	{r4, r7, pc}
	...

0801f44c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801f44c:	b480      	push	{r7}
 801f44e:	b083      	sub	sp, #12
 801f450:	af00      	add	r7, sp, #0
 801f452:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801f454:	4b03      	ldr	r3, [pc, #12]	; (801f464 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv+0x18>)
      }
 801f456:	4618      	mov	r0, r3
 801f458:	370c      	adds	r7, #12
 801f45a:	46bd      	mov	sp, r7
 801f45c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f460:	4770      	bx	lr
 801f462:	bf00      	nop
 801f464:	02e8ba2e 	.word	0x02e8ba2e

0801f468 <_Z41__static_initialization_and_destruction_0ii>:
 801f468:	b590      	push	{r4, r7, lr}
 801f46a:	b0e7      	sub	sp, #412	; 0x19c
 801f46c:	af02      	add	r7, sp, #8
 801f46e:	1d3b      	adds	r3, r7, #4
 801f470:	6018      	str	r0, [r3, #0]
 801f472:	463b      	mov	r3, r7
 801f474:	6019      	str	r1, [r3, #0]
 801f476:	1d3b      	adds	r3, r7, #4
 801f478:	681b      	ldr	r3, [r3, #0]
 801f47a:	2b01      	cmp	r3, #1
 801f47c:	f040 819d 	bne.w	801f7ba <_Z41__static_initialization_and_destruction_0ii+0x352>
 801f480:	463b      	mov	r3, r7
 801f482:	681b      	ldr	r3, [r3, #0]
 801f484:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801f488:	4293      	cmp	r3, r2
 801f48a:	f040 8196 	bne.w	801f7ba <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801f48e:	f107 0314 	add.w	r3, r7, #20
 801f492:	4618      	mov	r0, r3
 801f494:	2322      	movs	r3, #34	; 0x22
 801f496:	461a      	mov	r2, r3
 801f498:	2100      	movs	r1, #0
 801f49a:	f004 fce3 	bl	8023e64 <memset>
 801f49e:	f107 0314 	add.w	r3, r7, #20
 801f4a2:	223a      	movs	r2, #58	; 0x3a
 801f4a4:	701a      	strb	r2, [r3, #0]
 801f4a6:	f107 0314 	add.w	r3, r7, #20
 801f4aa:	2201      	movs	r2, #1
 801f4ac:	705a      	strb	r2, [r3, #1]
 801f4ae:	f107 0314 	add.w	r3, r7, #20
 801f4b2:	220a      	movs	r2, #10
 801f4b4:	709a      	strb	r2, [r3, #2]
 801f4b6:	f107 0314 	add.w	r3, r7, #20
 801f4ba:	220a      	movs	r2, #10
 801f4bc:	70da      	strb	r2, [r3, #3]
 801f4be:	f107 0314 	add.w	r3, r7, #20
 801f4c2:	222c      	movs	r2, #44	; 0x2c
 801f4c4:	711a      	strb	r2, [r3, #4]
 801f4c6:	f107 0314 	add.w	r3, r7, #20
 801f4ca:	220c      	movs	r2, #12
 801f4cc:	715a      	strb	r2, [r3, #5]
 801f4ce:	f107 0314 	add.w	r3, r7, #20
 801f4d2:	222e      	movs	r2, #46	; 0x2e
 801f4d4:	719a      	strb	r2, [r3, #6]
 801f4d6:	f107 0314 	add.w	r3, r7, #20
 801f4da:	220b      	movs	r2, #11
 801f4dc:	71da      	strb	r2, [r3, #7]
 801f4de:	f107 0314 	add.w	r3, r7, #20
 801f4e2:	225b      	movs	r2, #91	; 0x5b
 801f4e4:	721a      	strb	r2, [r3, #8]
 801f4e6:	f107 0314 	add.w	r3, r7, #20
 801f4ea:	220d      	movs	r2, #13
 801f4ec:	725a      	strb	r2, [r3, #9]
 801f4ee:	f107 0314 	add.w	r3, r7, #20
 801f4f2:	225d      	movs	r2, #93	; 0x5d
 801f4f4:	729a      	strb	r2, [r3, #10]
 801f4f6:	f107 0314 	add.w	r3, r7, #20
 801f4fa:	220e      	movs	r2, #14
 801f4fc:	72da      	strb	r2, [r3, #11]
 801f4fe:	f107 0314 	add.w	r3, r7, #20
 801f502:	227c      	movs	r2, #124	; 0x7c
 801f504:	731a      	strb	r2, [r3, #12]
 801f506:	f107 0314 	add.w	r3, r7, #20
 801f50a:	2215      	movs	r2, #21
 801f50c:	735a      	strb	r2, [r3, #13]
 801f50e:	f107 0314 	add.w	r3, r7, #20
 801f512:	2226      	movs	r2, #38	; 0x26
 801f514:	739a      	strb	r2, [r3, #14]
 801f516:	f107 0314 	add.w	r3, r7, #20
 801f51a:	2216      	movs	r2, #22
 801f51c:	73da      	strb	r2, [r3, #15]
 801f51e:	f107 0314 	add.w	r3, r7, #20
 801f522:	222b      	movs	r2, #43	; 0x2b
 801f524:	741a      	strb	r2, [r3, #16]
 801f526:	f107 0314 	add.w	r3, r7, #20
 801f52a:	221f      	movs	r2, #31
 801f52c:	745a      	strb	r2, [r3, #17]
 801f52e:	f107 0314 	add.w	r3, r7, #20
 801f532:	222d      	movs	r2, #45	; 0x2d
 801f534:	749a      	strb	r2, [r3, #18]
 801f536:	f107 0314 	add.w	r3, r7, #20
 801f53a:	2220      	movs	r2, #32
 801f53c:	74da      	strb	r2, [r3, #19]
 801f53e:	f107 0314 	add.w	r3, r7, #20
 801f542:	222a      	movs	r2, #42	; 0x2a
 801f544:	751a      	strb	r2, [r3, #20]
 801f546:	f107 0314 	add.w	r3, r7, #20
 801f54a:	2221      	movs	r2, #33	; 0x21
 801f54c:	755a      	strb	r2, [r3, #21]
 801f54e:	f107 0314 	add.w	r3, r7, #20
 801f552:	222f      	movs	r2, #47	; 0x2f
 801f554:	759a      	strb	r2, [r3, #22]
 801f556:	f107 0314 	add.w	r3, r7, #20
 801f55a:	2222      	movs	r2, #34	; 0x22
 801f55c:	75da      	strb	r2, [r3, #23]
 801f55e:	f107 0314 	add.w	r3, r7, #20
 801f562:	225e      	movs	r2, #94	; 0x5e
 801f564:	761a      	strb	r2, [r3, #24]
 801f566:	f107 0314 	add.w	r3, r7, #20
 801f56a:	2223      	movs	r2, #35	; 0x23
 801f56c:	765a      	strb	r2, [r3, #25]
 801f56e:	f107 0314 	add.w	r3, r7, #20
 801f572:	2225      	movs	r2, #37	; 0x25
 801f574:	769a      	strb	r2, [r3, #26]
 801f576:	f107 0314 	add.w	r3, r7, #20
 801f57a:	2224      	movs	r2, #36	; 0x24
 801f57c:	76da      	strb	r2, [r3, #27]
 801f57e:	f107 0314 	add.w	r3, r7, #20
 801f582:	2228      	movs	r2, #40	; 0x28
 801f584:	771a      	strb	r2, [r3, #28]
 801f586:	f107 0314 	add.w	r3, r7, #20
 801f58a:	2226      	movs	r2, #38	; 0x26
 801f58c:	775a      	strb	r2, [r3, #29]
 801f58e:	f107 0314 	add.w	r3, r7, #20
 801f592:	2229      	movs	r2, #41	; 0x29
 801f594:	779a      	strb	r2, [r3, #30]
 801f596:	f107 0314 	add.w	r3, r7, #20
 801f59a:	2227      	movs	r2, #39	; 0x27
 801f59c:	77da      	strb	r2, [r3, #31]
 801f59e:	f107 0314 	add.w	r3, r7, #20
 801f5a2:	2225      	movs	r2, #37	; 0x25
 801f5a4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801f5a8:	f107 030c 	add.w	r3, r7, #12
 801f5ac:	f107 0214 	add.w	r2, r7, #20
 801f5b0:	601a      	str	r2, [r3, #0]
 801f5b2:	f107 030c 	add.w	r3, r7, #12
 801f5b6:	2211      	movs	r2, #17
 801f5b8:	605a      	str	r2, [r3, #4]
 801f5ba:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801f5be:	4618      	mov	r0, r3
 801f5c0:	f7e2 fa5c 	bl	8001a7c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801f5c4:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801f5c8:	f107 020c 	add.w	r2, r7, #12
 801f5cc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801f5d0:	9300      	str	r3, [sp, #0]
 801f5d2:	460b      	mov	r3, r1
 801f5d4:	ca06      	ldmia	r2, {r1, r2}
 801f5d6:	4885      	ldr	r0, [pc, #532]	; (801f7ec <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801f5d8:	f7e2 fa68 	bl	8001aac <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801f5dc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801f5e0:	4618      	mov	r0, r3
 801f5e2:	f7e2 fa57 	bl	8001a94 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801f5e6:	2305      	movs	r3, #5
 801f5e8:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801f5ec:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801f5f0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f5f4:	497e      	ldr	r1, [pc, #504]	; (801f7f0 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801f5f6:	4618      	mov	r0, r3
 801f5f8:	f7e1 fd7e 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801f5fc:	2306      	movs	r3, #6
 801f5fe:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801f602:	f207 1263 	addw	r2, r7, #355	; 0x163
 801f606:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f60a:	331c      	adds	r3, #28
 801f60c:	4979      	ldr	r1, [pc, #484]	; (801f7f4 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801f60e:	4618      	mov	r0, r3
 801f610:	f7e1 fd9a 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801f614:	2307      	movs	r3, #7
 801f616:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801f61a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801f61e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f622:	3338      	adds	r3, #56	; 0x38
 801f624:	4974      	ldr	r1, [pc, #464]	; (801f7f8 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801f626:	4618      	mov	r0, r3
 801f628:	f7e1 fd8e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801f62c:	2308      	movs	r3, #8
 801f62e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801f632:	f207 1265 	addw	r2, r7, #357	; 0x165
 801f636:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f63a:	3354      	adds	r3, #84	; 0x54
 801f63c:	496f      	ldr	r1, [pc, #444]	; (801f7fc <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801f63e:	4618      	mov	r0, r3
 801f640:	f7e1 fd5a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801f644:	2309      	movs	r3, #9
 801f646:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801f64a:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801f64e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f652:	3370      	adds	r3, #112	; 0x70
 801f654:	496a      	ldr	r1, [pc, #424]	; (801f800 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801f656:	4618      	mov	r0, r3
 801f658:	f7e1 fd9e 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801f65c:	2310      	movs	r3, #16
 801f65e:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801f662:	f207 1267 	addw	r2, r7, #359	; 0x167
 801f666:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f66a:	338c      	adds	r3, #140	; 0x8c
 801f66c:	4965      	ldr	r1, [pc, #404]	; (801f804 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801f66e:	4618      	mov	r0, r3
 801f670:	f7e1 fdba 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801f674:	2311      	movs	r3, #17
 801f676:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801f67a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801f67e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f682:	33a8      	adds	r3, #168	; 0xa8
 801f684:	4960      	ldr	r1, [pc, #384]	; (801f808 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801f686:	4618      	mov	r0, r3
 801f688:	f7e1 fd86 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801f68c:	2312      	movs	r3, #18
 801f68e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801f692:	f207 1269 	addw	r2, r7, #361	; 0x169
 801f696:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f69a:	33c4      	adds	r3, #196	; 0xc4
 801f69c:	495b      	ldr	r1, [pc, #364]	; (801f80c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801f69e:	4618      	mov	r0, r3
 801f6a0:	f7e1 fd2a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801f6a4:	2313      	movs	r3, #19
 801f6a6:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801f6aa:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801f6ae:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f6b2:	33e0      	adds	r3, #224	; 0xe0
 801f6b4:	4956      	ldr	r1, [pc, #344]	; (801f810 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801f6b6:	4618      	mov	r0, r3
 801f6b8:	f7e1 fd46 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801f6bc:	2314      	movs	r3, #20
 801f6be:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801f6c2:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801f6c6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f6ca:	33fc      	adds	r3, #252	; 0xfc
 801f6cc:	4951      	ldr	r1, [pc, #324]	; (801f814 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801f6ce:	4618      	mov	r0, r3
 801f6d0:	f7e1 fdb2 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801f6d4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801f6d8:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801f6dc:	601a      	str	r2, [r3, #0]
 801f6de:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801f6e2:	220a      	movs	r2, #10
 801f6e4:	605a      	str	r2, [r3, #4]
 801f6e6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801f6ea:	4618      	mov	r0, r3
 801f6ec:	f7e2 fa6b 	bl	8001bc6 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801f6f0:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801f6f4:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801f6f8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801f6fc:	9300      	str	r3, [sp, #0]
 801f6fe:	460b      	mov	r3, r1
 801f700:	ca06      	ldmia	r2, {r1, r2}
 801f702:	4845      	ldr	r0, [pc, #276]	; (801f818 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801f704:	f7e2 fa77 	bl	8001bf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801f708:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801f70c:	4618      	mov	r0, r3
 801f70e:	f7e2 fa66 	bl	8001bde <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801f712:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801f716:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801f71a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f71e:	429c      	cmp	r4, r3
 801f720:	d004      	beq.n	801f72c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801f722:	3c1c      	subs	r4, #28
 801f724:	4620      	mov	r0, r4
 801f726:	f7e1 fcda 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801f72a:	e7f6      	b.n	801f71a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801f72c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801f730:	2200      	movs	r2, #0
 801f732:	601a      	str	r2, [r3, #0]
 801f734:	605a      	str	r2, [r3, #4]
 801f736:	609a      	str	r2, [r3, #8]
 801f738:	233c      	movs	r3, #60	; 0x3c
 801f73a:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801f73e:	231b      	movs	r3, #27
 801f740:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801f744:	231c      	movs	r3, #28
 801f746:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801f74a:	233e      	movs	r3, #62	; 0x3e
 801f74c:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801f750:	2319      	movs	r3, #25
 801f752:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801f756:	231a      	movs	r3, #26
 801f758:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801f75c:	233d      	movs	r3, #61	; 0x3d
 801f75e:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801f762:	2318      	movs	r3, #24
 801f764:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801f768:	231d      	movs	r3, #29
 801f76a:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801f76e:	2321      	movs	r3, #33	; 0x21
 801f770:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801f774:	2317      	movs	r3, #23
 801f776:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801f77a:	231e      	movs	r3, #30
 801f77c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801f780:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801f784:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801f788:	2304      	movs	r3, #4
 801f78a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801f78e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801f792:	4618      	mov	r0, r3
 801f794:	f7e2 fa5f 	bl	8001c56 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801f798:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801f79c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801f7a0:	9300      	str	r3, [sp, #0]
 801f7a2:	4613      	mov	r3, r2
 801f7a4:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801f7a8:	ca06      	ldmia	r2, {r1, r2}
 801f7aa:	481c      	ldr	r0, [pc, #112]	; (801f81c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801f7ac:	f7e2 fa6b 	bl	8001c86 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801f7b0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801f7b4:	4618      	mov	r0, r3
 801f7b6:	f7e2 fa5a 	bl	8001c6e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801f7ba:	1d3b      	adds	r3, r7, #4
 801f7bc:	681b      	ldr	r3, [r3, #0]
 801f7be:	2b00      	cmp	r3, #0
 801f7c0:	d10e      	bne.n	801f7e0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801f7c2:	463b      	mov	r3, r7
 801f7c4:	681b      	ldr	r3, [r3, #0]
 801f7c6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801f7ca:	4293      	cmp	r3, r2
 801f7cc:	d108      	bne.n	801f7e0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801f7ce:	4813      	ldr	r0, [pc, #76]	; (801f81c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801f7d0:	f7e9 feeb 	bl	80095aa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801f7d4:	4810      	ldr	r0, [pc, #64]	; (801f818 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801f7d6:	f7e9 fef5 	bl	80095c4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801f7da:	4804      	ldr	r0, [pc, #16]	; (801f7ec <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801f7dc:	f7e9 feff 	bl	80095de <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801f7e0:	bf00      	nop
 801f7e2:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801f7e6:	46bd      	mov	sp, r7
 801f7e8:	bd90      	pop	{r4, r7, pc}
 801f7ea:	bf00      	nop
 801f7ec:	200006dc 	.word	0x200006dc
 801f7f0:	08027d84 	.word	0x08027d84
 801f7f4:	08027d8c 	.word	0x08027d8c
 801f7f8:	08027d94 	.word	0x08027d94
 801f7fc:	08027d9c 	.word	0x08027d9c
 801f800:	08027da4 	.word	0x08027da4
 801f804:	08027dac 	.word	0x08027dac
 801f808:	08027db0 	.word	0x08027db0
 801f80c:	08027db8 	.word	0x08027db8
 801f810:	08027dc0 	.word	0x08027dc0
 801f814:	08027dc8 	.word	0x08027dc8
 801f818:	200006f4 	.word	0x200006f4
 801f81c:	2000070c 	.word	0x2000070c

0801f820 <_GLOBAL__sub_I__ZN16Function_handlerC2Ev>:
 801f820:	b580      	push	{r7, lr}
 801f822:	af00      	add	r7, sp, #0
 801f824:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801f828:	2001      	movs	r0, #1
 801f82a:	f7ff fe1d 	bl	801f468 <_Z41__static_initialization_and_destruction_0ii>
 801f82e:	bd80      	pop	{r7, pc}

0801f830 <_GLOBAL__sub_D__ZN16Function_handlerC2Ev>:
 801f830:	b580      	push	{r7, lr}
 801f832:	af00      	add	r7, sp, #0
 801f834:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801f838:	2000      	movs	r0, #0
 801f83a:	f7ff fe15 	bl	801f468 <_Z41__static_initialization_and_destruction_0ii>
 801f83e:	bd80      	pop	{r7, pc}

0801f840 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 801f840:	f8df d034 	ldr.w	sp, [pc, #52]	; 801f878 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 801f844:	480d      	ldr	r0, [pc, #52]	; (801f87c <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 801f846:	490e      	ldr	r1, [pc, #56]	; (801f880 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 801f848:	4a0e      	ldr	r2, [pc, #56]	; (801f884 <LoopFillZerobss+0x1e>)
  movs r3, #0
 801f84a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 801f84c:	e002      	b.n	801f854 <LoopCopyDataInit>

0801f84e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 801f84e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 801f850:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 801f852:	3304      	adds	r3, #4

0801f854 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 801f854:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 801f856:	428c      	cmp	r4, r1
  bcc CopyDataInit
 801f858:	d3f9      	bcc.n	801f84e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 801f85a:	4a0b      	ldr	r2, [pc, #44]	; (801f888 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 801f85c:	4c0b      	ldr	r4, [pc, #44]	; (801f88c <LoopFillZerobss+0x26>)
  movs r3, #0
 801f85e:	2300      	movs	r3, #0
  b LoopFillZerobss
 801f860:	e001      	b.n	801f866 <LoopFillZerobss>

0801f862 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 801f862:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 801f864:	3204      	adds	r2, #4

0801f866 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 801f866:	42a2      	cmp	r2, r4
  bcc FillZerobss
 801f868:	d3fb      	bcc.n	801f862 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 801f86a:	f7fe fddd 	bl	801e428 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 801f86e:	f004 fa5d 	bl	8023d2c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 801f872:	f7fd ff83 	bl	801d77c <main>
  bx  lr    
 801f876:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 801f878:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 801f87c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 801f880:	200001e8 	.word	0x200001e8
  ldr r2, =_sidata
 801f884:	080284b4 	.word	0x080284b4
  ldr r2, =_sbss
 801f888:	200001e8 	.word	0x200001e8
  ldr r4, =_ebss
 801f88c:	200007d4 	.word	0x200007d4

0801f890 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 801f890:	e7fe      	b.n	801f890 <ADC_IRQHandler>

0801f892 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 801f892:	b580      	push	{r7, lr}
 801f894:	af00      	add	r7, sp, #0
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 801f896:	2003      	movs	r0, #3
 801f898:	f000 f94c 	bl	801fb34 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 801f89c:	200f      	movs	r0, #15
 801f89e:	f000 f805 	bl	801f8ac <HAL_InitTick>
  
  /* Init the low level hardware */
  HAL_MspInit();
 801f8a2:	f7fe fc57 	bl	801e154 <HAL_MspInit>
  
  /* Return function status */
  return HAL_OK;
 801f8a6:	2300      	movs	r3, #0
}
 801f8a8:	4618      	mov	r0, r3
 801f8aa:	bd80      	pop	{r7, pc}

0801f8ac <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 801f8ac:	b580      	push	{r7, lr}
 801f8ae:	b082      	sub	sp, #8
 801f8b0:	af00      	add	r7, sp, #0
 801f8b2:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 801f8b4:	4b12      	ldr	r3, [pc, #72]	; (801f900 <HAL_InitTick+0x54>)
 801f8b6:	681a      	ldr	r2, [r3, #0]
 801f8b8:	4b12      	ldr	r3, [pc, #72]	; (801f904 <HAL_InitTick+0x58>)
 801f8ba:	781b      	ldrb	r3, [r3, #0]
 801f8bc:	4619      	mov	r1, r3
 801f8be:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801f8c2:	fbb3 f3f1 	udiv	r3, r3, r1
 801f8c6:	fbb2 f3f3 	udiv	r3, r2, r3
 801f8ca:	4618      	mov	r0, r3
 801f8cc:	f000 f967 	bl	801fb9e <HAL_SYSTICK_Config>
 801f8d0:	4603      	mov	r3, r0
 801f8d2:	2b00      	cmp	r3, #0
 801f8d4:	d001      	beq.n	801f8da <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 801f8d6:	2301      	movs	r3, #1
 801f8d8:	e00e      	b.n	801f8f8 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 801f8da:	687b      	ldr	r3, [r7, #4]
 801f8dc:	2b0f      	cmp	r3, #15
 801f8de:	d80a      	bhi.n	801f8f6 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 801f8e0:	2200      	movs	r2, #0
 801f8e2:	6879      	ldr	r1, [r7, #4]
 801f8e4:	f04f 30ff 	mov.w	r0, #4294967295
 801f8e8:	f000 f92f 	bl	801fb4a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 801f8ec:	4a06      	ldr	r2, [pc, #24]	; (801f908 <HAL_InitTick+0x5c>)
 801f8ee:	687b      	ldr	r3, [r7, #4]
 801f8f0:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 801f8f2:	2300      	movs	r3, #0
 801f8f4:	e000      	b.n	801f8f8 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 801f8f6:	2301      	movs	r3, #1
}
 801f8f8:	4618      	mov	r0, r3
 801f8fa:	3708      	adds	r7, #8
 801f8fc:	46bd      	mov	sp, r7
 801f8fe:	bd80      	pop	{r7, pc}
 801f900:	20000004 	.word	0x20000004
 801f904:	2000000c 	.word	0x2000000c
 801f908:	20000008 	.word	0x20000008

0801f90c <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 801f90c:	b480      	push	{r7}
 801f90e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 801f910:	4b06      	ldr	r3, [pc, #24]	; (801f92c <HAL_IncTick+0x20>)
 801f912:	781b      	ldrb	r3, [r3, #0]
 801f914:	461a      	mov	r2, r3
 801f916:	4b06      	ldr	r3, [pc, #24]	; (801f930 <HAL_IncTick+0x24>)
 801f918:	681b      	ldr	r3, [r3, #0]
 801f91a:	4413      	add	r3, r2
 801f91c:	4a04      	ldr	r2, [pc, #16]	; (801f930 <HAL_IncTick+0x24>)
 801f91e:	6013      	str	r3, [r2, #0]
}
 801f920:	bf00      	nop
 801f922:	46bd      	mov	sp, r7
 801f924:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f928:	4770      	bx	lr
 801f92a:	bf00      	nop
 801f92c:	2000000c 	.word	0x2000000c
 801f930:	200007c0 	.word	0x200007c0

0801f934 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 801f934:	b480      	push	{r7}
 801f936:	af00      	add	r7, sp, #0
  return uwTick;
 801f938:	4b03      	ldr	r3, [pc, #12]	; (801f948 <HAL_GetTick+0x14>)
 801f93a:	681b      	ldr	r3, [r3, #0]
}
 801f93c:	4618      	mov	r0, r3
 801f93e:	46bd      	mov	sp, r7
 801f940:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f944:	4770      	bx	lr
 801f946:	bf00      	nop
 801f948:	200007c0 	.word	0x200007c0

0801f94c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 801f94c:	b580      	push	{r7, lr}
 801f94e:	b084      	sub	sp, #16
 801f950:	af00      	add	r7, sp, #0
 801f952:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 801f954:	f7ff ffee 	bl	801f934 <HAL_GetTick>
 801f958:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 801f95a:	687b      	ldr	r3, [r7, #4]
 801f95c:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 801f95e:	68fb      	ldr	r3, [r7, #12]
 801f960:	f1b3 3fff 	cmp.w	r3, #4294967295
 801f964:	d005      	beq.n	801f972 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 801f966:	4b0a      	ldr	r3, [pc, #40]	; (801f990 <HAL_Delay+0x44>)
 801f968:	781b      	ldrb	r3, [r3, #0]
 801f96a:	461a      	mov	r2, r3
 801f96c:	68fb      	ldr	r3, [r7, #12]
 801f96e:	4413      	add	r3, r2
 801f970:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 801f972:	bf00      	nop
 801f974:	f7ff ffde 	bl	801f934 <HAL_GetTick>
 801f978:	4602      	mov	r2, r0
 801f97a:	68bb      	ldr	r3, [r7, #8]
 801f97c:	1ad3      	subs	r3, r2, r3
 801f97e:	68fa      	ldr	r2, [r7, #12]
 801f980:	429a      	cmp	r2, r3
 801f982:	d8f7      	bhi.n	801f974 <HAL_Delay+0x28>
  {
  }
}
 801f984:	bf00      	nop
 801f986:	bf00      	nop
 801f988:	3710      	adds	r7, #16
 801f98a:	46bd      	mov	sp, r7
 801f98c:	bd80      	pop	{r7, pc}
 801f98e:	bf00      	nop
 801f990:	2000000c 	.word	0x2000000c

0801f994 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 801f994:	b480      	push	{r7}
 801f996:	b085      	sub	sp, #20
 801f998:	af00      	add	r7, sp, #0
 801f99a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 801f99c:	687b      	ldr	r3, [r7, #4]
 801f99e:	f003 0307 	and.w	r3, r3, #7
 801f9a2:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 801f9a4:	4b0b      	ldr	r3, [pc, #44]	; (801f9d4 <__NVIC_SetPriorityGrouping+0x40>)
 801f9a6:	68db      	ldr	r3, [r3, #12]
 801f9a8:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 801f9aa:	68ba      	ldr	r2, [r7, #8]
 801f9ac:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 801f9b0:	4013      	ands	r3, r2
 801f9b2:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 801f9b4:	68fb      	ldr	r3, [r7, #12]
 801f9b6:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 801f9b8:	68bb      	ldr	r3, [r7, #8]
 801f9ba:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 801f9bc:	4b06      	ldr	r3, [pc, #24]	; (801f9d8 <__NVIC_SetPriorityGrouping+0x44>)
 801f9be:	4313      	orrs	r3, r2
 801f9c0:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 801f9c2:	4a04      	ldr	r2, [pc, #16]	; (801f9d4 <__NVIC_SetPriorityGrouping+0x40>)
 801f9c4:	68bb      	ldr	r3, [r7, #8]
 801f9c6:	60d3      	str	r3, [r2, #12]
}
 801f9c8:	bf00      	nop
 801f9ca:	3714      	adds	r7, #20
 801f9cc:	46bd      	mov	sp, r7
 801f9ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f9d2:	4770      	bx	lr
 801f9d4:	e000ed00 	.word	0xe000ed00
 801f9d8:	05fa0000 	.word	0x05fa0000

0801f9dc <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 801f9dc:	b480      	push	{r7}
 801f9de:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 801f9e0:	4b04      	ldr	r3, [pc, #16]	; (801f9f4 <__NVIC_GetPriorityGrouping+0x18>)
 801f9e2:	68db      	ldr	r3, [r3, #12]
 801f9e4:	0a1b      	lsrs	r3, r3, #8
 801f9e6:	f003 0307 	and.w	r3, r3, #7
}
 801f9ea:	4618      	mov	r0, r3
 801f9ec:	46bd      	mov	sp, r7
 801f9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f9f2:	4770      	bx	lr
 801f9f4:	e000ed00 	.word	0xe000ed00

0801f9f8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 801f9f8:	b480      	push	{r7}
 801f9fa:	b083      	sub	sp, #12
 801f9fc:	af00      	add	r7, sp, #0
 801f9fe:	4603      	mov	r3, r0
 801fa00:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 801fa02:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801fa06:	2b00      	cmp	r3, #0
 801fa08:	db0b      	blt.n	801fa22 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 801fa0a:	79fb      	ldrb	r3, [r7, #7]
 801fa0c:	f003 021f 	and.w	r2, r3, #31
 801fa10:	4907      	ldr	r1, [pc, #28]	; (801fa30 <__NVIC_EnableIRQ+0x38>)
 801fa12:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801fa16:	095b      	lsrs	r3, r3, #5
 801fa18:	2001      	movs	r0, #1
 801fa1a:	fa00 f202 	lsl.w	r2, r0, r2
 801fa1e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 801fa22:	bf00      	nop
 801fa24:	370c      	adds	r7, #12
 801fa26:	46bd      	mov	sp, r7
 801fa28:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fa2c:	4770      	bx	lr
 801fa2e:	bf00      	nop
 801fa30:	e000e100 	.word	0xe000e100

0801fa34 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 801fa34:	b480      	push	{r7}
 801fa36:	b083      	sub	sp, #12
 801fa38:	af00      	add	r7, sp, #0
 801fa3a:	4603      	mov	r3, r0
 801fa3c:	6039      	str	r1, [r7, #0]
 801fa3e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 801fa40:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801fa44:	2b00      	cmp	r3, #0
 801fa46:	db0a      	blt.n	801fa5e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801fa48:	683b      	ldr	r3, [r7, #0]
 801fa4a:	b2da      	uxtb	r2, r3
 801fa4c:	490c      	ldr	r1, [pc, #48]	; (801fa80 <__NVIC_SetPriority+0x4c>)
 801fa4e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801fa52:	0112      	lsls	r2, r2, #4
 801fa54:	b2d2      	uxtb	r2, r2
 801fa56:	440b      	add	r3, r1
 801fa58:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 801fa5c:	e00a      	b.n	801fa74 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801fa5e:	683b      	ldr	r3, [r7, #0]
 801fa60:	b2da      	uxtb	r2, r3
 801fa62:	4908      	ldr	r1, [pc, #32]	; (801fa84 <__NVIC_SetPriority+0x50>)
 801fa64:	79fb      	ldrb	r3, [r7, #7]
 801fa66:	f003 030f 	and.w	r3, r3, #15
 801fa6a:	3b04      	subs	r3, #4
 801fa6c:	0112      	lsls	r2, r2, #4
 801fa6e:	b2d2      	uxtb	r2, r2
 801fa70:	440b      	add	r3, r1
 801fa72:	761a      	strb	r2, [r3, #24]
}
 801fa74:	bf00      	nop
 801fa76:	370c      	adds	r7, #12
 801fa78:	46bd      	mov	sp, r7
 801fa7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fa7e:	4770      	bx	lr
 801fa80:	e000e100 	.word	0xe000e100
 801fa84:	e000ed00 	.word	0xe000ed00

0801fa88 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 801fa88:	b480      	push	{r7}
 801fa8a:	b089      	sub	sp, #36	; 0x24
 801fa8c:	af00      	add	r7, sp, #0
 801fa8e:	60f8      	str	r0, [r7, #12]
 801fa90:	60b9      	str	r1, [r7, #8]
 801fa92:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 801fa94:	68fb      	ldr	r3, [r7, #12]
 801fa96:	f003 0307 	and.w	r3, r3, #7
 801fa9a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 801fa9c:	69fb      	ldr	r3, [r7, #28]
 801fa9e:	f1c3 0307 	rsb	r3, r3, #7
 801faa2:	2b04      	cmp	r3, #4
 801faa4:	bf28      	it	cs
 801faa6:	2304      	movcs	r3, #4
 801faa8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 801faaa:	69fb      	ldr	r3, [r7, #28]
 801faac:	3304      	adds	r3, #4
 801faae:	2b06      	cmp	r3, #6
 801fab0:	d902      	bls.n	801fab8 <NVIC_EncodePriority+0x30>
 801fab2:	69fb      	ldr	r3, [r7, #28]
 801fab4:	3b03      	subs	r3, #3
 801fab6:	e000      	b.n	801faba <NVIC_EncodePriority+0x32>
 801fab8:	2300      	movs	r3, #0
 801faba:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 801fabc:	f04f 32ff 	mov.w	r2, #4294967295
 801fac0:	69bb      	ldr	r3, [r7, #24]
 801fac2:	fa02 f303 	lsl.w	r3, r2, r3
 801fac6:	43da      	mvns	r2, r3
 801fac8:	68bb      	ldr	r3, [r7, #8]
 801faca:	401a      	ands	r2, r3
 801facc:	697b      	ldr	r3, [r7, #20]
 801face:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 801fad0:	f04f 31ff 	mov.w	r1, #4294967295
 801fad4:	697b      	ldr	r3, [r7, #20]
 801fad6:	fa01 f303 	lsl.w	r3, r1, r3
 801fada:	43d9      	mvns	r1, r3
 801fadc:	687b      	ldr	r3, [r7, #4]
 801fade:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 801fae0:	4313      	orrs	r3, r2
         );
}
 801fae2:	4618      	mov	r0, r3
 801fae4:	3724      	adds	r7, #36	; 0x24
 801fae6:	46bd      	mov	sp, r7
 801fae8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801faec:	4770      	bx	lr
	...

0801faf0 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 801faf0:	b580      	push	{r7, lr}
 801faf2:	b082      	sub	sp, #8
 801faf4:	af00      	add	r7, sp, #0
 801faf6:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 801faf8:	687b      	ldr	r3, [r7, #4]
 801fafa:	3b01      	subs	r3, #1
 801fafc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 801fb00:	d301      	bcc.n	801fb06 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 801fb02:	2301      	movs	r3, #1
 801fb04:	e00f      	b.n	801fb26 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 801fb06:	4a0a      	ldr	r2, [pc, #40]	; (801fb30 <SysTick_Config+0x40>)
 801fb08:	687b      	ldr	r3, [r7, #4]
 801fb0a:	3b01      	subs	r3, #1
 801fb0c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 801fb0e:	210f      	movs	r1, #15
 801fb10:	f04f 30ff 	mov.w	r0, #4294967295
 801fb14:	f7ff ff8e 	bl	801fa34 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 801fb18:	4b05      	ldr	r3, [pc, #20]	; (801fb30 <SysTick_Config+0x40>)
 801fb1a:	2200      	movs	r2, #0
 801fb1c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 801fb1e:	4b04      	ldr	r3, [pc, #16]	; (801fb30 <SysTick_Config+0x40>)
 801fb20:	2207      	movs	r2, #7
 801fb22:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 801fb24:	2300      	movs	r3, #0
}
 801fb26:	4618      	mov	r0, r3
 801fb28:	3708      	adds	r7, #8
 801fb2a:	46bd      	mov	sp, r7
 801fb2c:	bd80      	pop	{r7, pc}
 801fb2e:	bf00      	nop
 801fb30:	e000e010 	.word	0xe000e010

0801fb34 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 801fb34:	b580      	push	{r7, lr}
 801fb36:	b082      	sub	sp, #8
 801fb38:	af00      	add	r7, sp, #0
 801fb3a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 801fb3c:	6878      	ldr	r0, [r7, #4]
 801fb3e:	f7ff ff29 	bl	801f994 <__NVIC_SetPriorityGrouping>
}
 801fb42:	bf00      	nop
 801fb44:	3708      	adds	r7, #8
 801fb46:	46bd      	mov	sp, r7
 801fb48:	bd80      	pop	{r7, pc}

0801fb4a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 801fb4a:	b580      	push	{r7, lr}
 801fb4c:	b086      	sub	sp, #24
 801fb4e:	af00      	add	r7, sp, #0
 801fb50:	4603      	mov	r3, r0
 801fb52:	60b9      	str	r1, [r7, #8]
 801fb54:	607a      	str	r2, [r7, #4]
 801fb56:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 801fb58:	2300      	movs	r3, #0
 801fb5a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 801fb5c:	f7ff ff3e 	bl	801f9dc <__NVIC_GetPriorityGrouping>
 801fb60:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 801fb62:	687a      	ldr	r2, [r7, #4]
 801fb64:	68b9      	ldr	r1, [r7, #8]
 801fb66:	6978      	ldr	r0, [r7, #20]
 801fb68:	f7ff ff8e 	bl	801fa88 <NVIC_EncodePriority>
 801fb6c:	4602      	mov	r2, r0
 801fb6e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801fb72:	4611      	mov	r1, r2
 801fb74:	4618      	mov	r0, r3
 801fb76:	f7ff ff5d 	bl	801fa34 <__NVIC_SetPriority>
}
 801fb7a:	bf00      	nop
 801fb7c:	3718      	adds	r7, #24
 801fb7e:	46bd      	mov	sp, r7
 801fb80:	bd80      	pop	{r7, pc}

0801fb82 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 801fb82:	b580      	push	{r7, lr}
 801fb84:	b082      	sub	sp, #8
 801fb86:	af00      	add	r7, sp, #0
 801fb88:	4603      	mov	r3, r0
 801fb8a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 801fb8c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801fb90:	4618      	mov	r0, r3
 801fb92:	f7ff ff31 	bl	801f9f8 <__NVIC_EnableIRQ>
}
 801fb96:	bf00      	nop
 801fb98:	3708      	adds	r7, #8
 801fb9a:	46bd      	mov	sp, r7
 801fb9c:	bd80      	pop	{r7, pc}

0801fb9e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 801fb9e:	b580      	push	{r7, lr}
 801fba0:	b082      	sub	sp, #8
 801fba2:	af00      	add	r7, sp, #0
 801fba4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 801fba6:	6878      	ldr	r0, [r7, #4]
 801fba8:	f7ff ffa2 	bl	801faf0 <SysTick_Config>
 801fbac:	4603      	mov	r3, r0
}
 801fbae:	4618      	mov	r0, r3
 801fbb0:	3708      	adds	r7, #8
 801fbb2:	46bd      	mov	sp, r7
 801fbb4:	bd80      	pop	{r7, pc}

0801fbb6 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 801fbb6:	b580      	push	{r7, lr}
 801fbb8:	b084      	sub	sp, #16
 801fbba:	af00      	add	r7, sp, #0
 801fbbc:	6078      	str	r0, [r7, #4]
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 801fbbe:	687b      	ldr	r3, [r7, #4]
 801fbc0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 801fbc2:	60fb      	str	r3, [r7, #12]
  
  uint32_t tickstart = HAL_GetTick();
 801fbc4:	f7ff feb6 	bl	801f934 <HAL_GetTick>
 801fbc8:	60b8      	str	r0, [r7, #8]
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 801fbca:	687b      	ldr	r3, [r7, #4]
 801fbcc:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 801fbd0:	b2db      	uxtb	r3, r3
 801fbd2:	2b02      	cmp	r3, #2
 801fbd4:	d008      	beq.n	801fbe8 <HAL_DMA_Abort+0x32>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 801fbd6:	687b      	ldr	r3, [r7, #4]
 801fbd8:	2280      	movs	r2, #128	; 0x80
 801fbda:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 801fbdc:	687b      	ldr	r3, [r7, #4]
 801fbde:	2200      	movs	r2, #0
 801fbe0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    return HAL_ERROR;
 801fbe4:	2301      	movs	r3, #1
 801fbe6:	e052      	b.n	801fc8e <HAL_DMA_Abort+0xd8>
  }
  else
  {
    /* Disable all the transfer interrupts */
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 801fbe8:	687b      	ldr	r3, [r7, #4]
 801fbea:	681b      	ldr	r3, [r3, #0]
 801fbec:	681a      	ldr	r2, [r3, #0]
 801fbee:	687b      	ldr	r3, [r7, #4]
 801fbf0:	681b      	ldr	r3, [r3, #0]
 801fbf2:	f022 0216 	bic.w	r2, r2, #22
 801fbf6:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 801fbf8:	687b      	ldr	r3, [r7, #4]
 801fbfa:	681b      	ldr	r3, [r3, #0]
 801fbfc:	695a      	ldr	r2, [r3, #20]
 801fbfe:	687b      	ldr	r3, [r7, #4]
 801fc00:	681b      	ldr	r3, [r3, #0]
 801fc02:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 801fc06:	615a      	str	r2, [r3, #20]
    
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 801fc08:	687b      	ldr	r3, [r7, #4]
 801fc0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801fc0c:	2b00      	cmp	r3, #0
 801fc0e:	d103      	bne.n	801fc18 <HAL_DMA_Abort+0x62>
 801fc10:	687b      	ldr	r3, [r7, #4]
 801fc12:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801fc14:	2b00      	cmp	r3, #0
 801fc16:	d007      	beq.n	801fc28 <HAL_DMA_Abort+0x72>
    {
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 801fc18:	687b      	ldr	r3, [r7, #4]
 801fc1a:	681b      	ldr	r3, [r3, #0]
 801fc1c:	681a      	ldr	r2, [r3, #0]
 801fc1e:	687b      	ldr	r3, [r7, #4]
 801fc20:	681b      	ldr	r3, [r3, #0]
 801fc22:	f022 0208 	bic.w	r2, r2, #8
 801fc26:	601a      	str	r2, [r3, #0]
    }
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 801fc28:	687b      	ldr	r3, [r7, #4]
 801fc2a:	681b      	ldr	r3, [r3, #0]
 801fc2c:	681a      	ldr	r2, [r3, #0]
 801fc2e:	687b      	ldr	r3, [r7, #4]
 801fc30:	681b      	ldr	r3, [r3, #0]
 801fc32:	f022 0201 	bic.w	r2, r2, #1
 801fc36:	601a      	str	r2, [r3, #0]
    
    /* Check if the DMA Stream is effectively disabled */
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 801fc38:	e013      	b.n	801fc62 <HAL_DMA_Abort+0xac>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 801fc3a:	f7ff fe7b 	bl	801f934 <HAL_GetTick>
 801fc3e:	4602      	mov	r2, r0
 801fc40:	68bb      	ldr	r3, [r7, #8]
 801fc42:	1ad3      	subs	r3, r2, r3
 801fc44:	2b05      	cmp	r3, #5
 801fc46:	d90c      	bls.n	801fc62 <HAL_DMA_Abort+0xac>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 801fc48:	687b      	ldr	r3, [r7, #4]
 801fc4a:	2220      	movs	r2, #32
 801fc4c:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 801fc4e:	687b      	ldr	r3, [r7, #4]
 801fc50:	2200      	movs	r2, #0
 801fc52:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 801fc56:	687b      	ldr	r3, [r7, #4]
 801fc58:	2203      	movs	r2, #3
 801fc5a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_TIMEOUT;
 801fc5e:	2303      	movs	r3, #3
 801fc60:	e015      	b.n	801fc8e <HAL_DMA_Abort+0xd8>
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 801fc62:	687b      	ldr	r3, [r7, #4]
 801fc64:	681b      	ldr	r3, [r3, #0]
 801fc66:	681b      	ldr	r3, [r3, #0]
 801fc68:	f003 0301 	and.w	r3, r3, #1
 801fc6c:	2b00      	cmp	r3, #0
 801fc6e:	d1e4      	bne.n	801fc3a <HAL_DMA_Abort+0x84>
      }
    }
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 801fc70:	687b      	ldr	r3, [r7, #4]
 801fc72:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801fc74:	223f      	movs	r2, #63	; 0x3f
 801fc76:	409a      	lsls	r2, r3
 801fc78:	68fb      	ldr	r3, [r7, #12]
 801fc7a:	609a      	str	r2, [r3, #8]
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 801fc7c:	687b      	ldr	r3, [r7, #4]
 801fc7e:	2200      	movs	r2, #0
 801fc80:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    /* Change the DMA state*/
    hdma->State = HAL_DMA_STATE_READY;
 801fc84:	687b      	ldr	r3, [r7, #4]
 801fc86:	2201      	movs	r2, #1
 801fc88:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  }
  return HAL_OK;
 801fc8c:	2300      	movs	r3, #0
}
 801fc8e:	4618      	mov	r0, r3
 801fc90:	3710      	adds	r7, #16
 801fc92:	46bd      	mov	sp, r7
 801fc94:	bd80      	pop	{r7, pc}

0801fc96 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 801fc96:	b480      	push	{r7}
 801fc98:	b083      	sub	sp, #12
 801fc9a:	af00      	add	r7, sp, #0
 801fc9c:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 801fc9e:	687b      	ldr	r3, [r7, #4]
 801fca0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 801fca4:	b2db      	uxtb	r3, r3
 801fca6:	2b02      	cmp	r3, #2
 801fca8:	d004      	beq.n	801fcb4 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 801fcaa:	687b      	ldr	r3, [r7, #4]
 801fcac:	2280      	movs	r2, #128	; 0x80
 801fcae:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 801fcb0:	2301      	movs	r3, #1
 801fcb2:	e00c      	b.n	801fcce <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 801fcb4:	687b      	ldr	r3, [r7, #4]
 801fcb6:	2205      	movs	r2, #5
 801fcb8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 801fcbc:	687b      	ldr	r3, [r7, #4]
 801fcbe:	681b      	ldr	r3, [r3, #0]
 801fcc0:	681a      	ldr	r2, [r3, #0]
 801fcc2:	687b      	ldr	r3, [r7, #4]
 801fcc4:	681b      	ldr	r3, [r3, #0]
 801fcc6:	f022 0201 	bic.w	r2, r2, #1
 801fcca:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 801fccc:	2300      	movs	r3, #0
}
 801fcce:	4618      	mov	r0, r3
 801fcd0:	370c      	adds	r7, #12
 801fcd2:	46bd      	mov	sp, r7
 801fcd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fcd8:	4770      	bx	lr
	...

0801fcdc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 801fcdc:	b480      	push	{r7}
 801fcde:	b089      	sub	sp, #36	; 0x24
 801fce0:	af00      	add	r7, sp, #0
 801fce2:	6078      	str	r0, [r7, #4]
 801fce4:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00;
 801fce6:	2300      	movs	r3, #0
 801fce8:	61fb      	str	r3, [r7, #28]
  uint32_t ioposition = 0x00;
 801fcea:	2300      	movs	r3, #0
 801fcec:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00;
 801fcee:	2300      	movs	r3, #0
 801fcf0:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00;
 801fcf2:	2300      	movs	r3, #0
 801fcf4:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 801fcf6:	2300      	movs	r3, #0
 801fcf8:	61fb      	str	r3, [r7, #28]
 801fcfa:	e175      	b.n	801ffe8 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 801fcfc:	2201      	movs	r2, #1
 801fcfe:	69fb      	ldr	r3, [r7, #28]
 801fd00:	fa02 f303 	lsl.w	r3, r2, r3
 801fd04:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 801fd06:	683b      	ldr	r3, [r7, #0]
 801fd08:	681b      	ldr	r3, [r3, #0]
 801fd0a:	697a      	ldr	r2, [r7, #20]
 801fd0c:	4013      	ands	r3, r2
 801fd0e:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 801fd10:	693a      	ldr	r2, [r7, #16]
 801fd12:	697b      	ldr	r3, [r7, #20]
 801fd14:	429a      	cmp	r2, r3
 801fd16:	f040 8164 	bne.w	801ffe2 <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 801fd1a:	683b      	ldr	r3, [r7, #0]
 801fd1c:	685b      	ldr	r3, [r3, #4]
 801fd1e:	2b01      	cmp	r3, #1
 801fd20:	d00b      	beq.n	801fd3a <HAL_GPIO_Init+0x5e>
 801fd22:	683b      	ldr	r3, [r7, #0]
 801fd24:	685b      	ldr	r3, [r3, #4]
 801fd26:	2b02      	cmp	r3, #2
 801fd28:	d007      	beq.n	801fd3a <HAL_GPIO_Init+0x5e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 801fd2a:	683b      	ldr	r3, [r7, #0]
 801fd2c:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 801fd2e:	2b11      	cmp	r3, #17
 801fd30:	d003      	beq.n	801fd3a <HAL_GPIO_Init+0x5e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 801fd32:	683b      	ldr	r3, [r7, #0]
 801fd34:	685b      	ldr	r3, [r3, #4]
 801fd36:	2b12      	cmp	r3, #18
 801fd38:	d130      	bne.n	801fd9c <HAL_GPIO_Init+0xc0>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 801fd3a:	687b      	ldr	r3, [r7, #4]
 801fd3c:	689b      	ldr	r3, [r3, #8]
 801fd3e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 801fd40:	69fb      	ldr	r3, [r7, #28]
 801fd42:	005b      	lsls	r3, r3, #1
 801fd44:	2203      	movs	r2, #3
 801fd46:	fa02 f303 	lsl.w	r3, r2, r3
 801fd4a:	43db      	mvns	r3, r3
 801fd4c:	69ba      	ldr	r2, [r7, #24]
 801fd4e:	4013      	ands	r3, r2
 801fd50:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2));
 801fd52:	683b      	ldr	r3, [r7, #0]
 801fd54:	68da      	ldr	r2, [r3, #12]
 801fd56:	69fb      	ldr	r3, [r7, #28]
 801fd58:	005b      	lsls	r3, r3, #1
 801fd5a:	fa02 f303 	lsl.w	r3, r2, r3
 801fd5e:	69ba      	ldr	r2, [r7, #24]
 801fd60:	4313      	orrs	r3, r2
 801fd62:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 801fd64:	687b      	ldr	r3, [r7, #4]
 801fd66:	69ba      	ldr	r2, [r7, #24]
 801fd68:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 801fd6a:	687b      	ldr	r3, [r7, #4]
 801fd6c:	685b      	ldr	r3, [r3, #4]
 801fd6e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 801fd70:	2201      	movs	r2, #1
 801fd72:	69fb      	ldr	r3, [r7, #28]
 801fd74:	fa02 f303 	lsl.w	r3, r2, r3
 801fd78:	43db      	mvns	r3, r3
 801fd7a:	69ba      	ldr	r2, [r7, #24]
 801fd7c:	4013      	ands	r3, r2
 801fd7e:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 801fd80:	683b      	ldr	r3, [r7, #0]
 801fd82:	685b      	ldr	r3, [r3, #4]
 801fd84:	091b      	lsrs	r3, r3, #4
 801fd86:	f003 0201 	and.w	r2, r3, #1
 801fd8a:	69fb      	ldr	r3, [r7, #28]
 801fd8c:	fa02 f303 	lsl.w	r3, r2, r3
 801fd90:	69ba      	ldr	r2, [r7, #24]
 801fd92:	4313      	orrs	r3, r2
 801fd94:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 801fd96:	687b      	ldr	r3, [r7, #4]
 801fd98:	69ba      	ldr	r2, [r7, #24]
 801fd9a:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 801fd9c:	687b      	ldr	r3, [r7, #4]
 801fd9e:	68db      	ldr	r3, [r3, #12]
 801fda0:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 801fda2:	69fb      	ldr	r3, [r7, #28]
 801fda4:	005b      	lsls	r3, r3, #1
 801fda6:	2203      	movs	r2, #3
 801fda8:	fa02 f303 	lsl.w	r3, r2, r3
 801fdac:	43db      	mvns	r3, r3
 801fdae:	69ba      	ldr	r2, [r7, #24]
 801fdb0:	4013      	ands	r3, r2
 801fdb2:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2));
 801fdb4:	683b      	ldr	r3, [r7, #0]
 801fdb6:	689a      	ldr	r2, [r3, #8]
 801fdb8:	69fb      	ldr	r3, [r7, #28]
 801fdba:	005b      	lsls	r3, r3, #1
 801fdbc:	fa02 f303 	lsl.w	r3, r2, r3
 801fdc0:	69ba      	ldr	r2, [r7, #24]
 801fdc2:	4313      	orrs	r3, r2
 801fdc4:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 801fdc6:	687b      	ldr	r3, [r7, #4]
 801fdc8:	69ba      	ldr	r2, [r7, #24]
 801fdca:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 801fdcc:	683b      	ldr	r3, [r7, #0]
 801fdce:	685b      	ldr	r3, [r3, #4]
 801fdd0:	2b02      	cmp	r3, #2
 801fdd2:	d003      	beq.n	801fddc <HAL_GPIO_Init+0x100>
 801fdd4:	683b      	ldr	r3, [r7, #0]
 801fdd6:	685b      	ldr	r3, [r3, #4]
 801fdd8:	2b12      	cmp	r3, #18
 801fdda:	d123      	bne.n	801fe24 <HAL_GPIO_Init+0x148>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 801fddc:	69fb      	ldr	r3, [r7, #28]
 801fdde:	08da      	lsrs	r2, r3, #3
 801fde0:	687b      	ldr	r3, [r7, #4]
 801fde2:	3208      	adds	r2, #8
 801fde4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801fde8:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 801fdea:	69fb      	ldr	r3, [r7, #28]
 801fdec:	f003 0307 	and.w	r3, r3, #7
 801fdf0:	009b      	lsls	r3, r3, #2
 801fdf2:	220f      	movs	r2, #15
 801fdf4:	fa02 f303 	lsl.w	r3, r2, r3
 801fdf8:	43db      	mvns	r3, r3
 801fdfa:	69ba      	ldr	r2, [r7, #24]
 801fdfc:	4013      	ands	r3, r2
 801fdfe:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 801fe00:	683b      	ldr	r3, [r7, #0]
 801fe02:	691a      	ldr	r2, [r3, #16]
 801fe04:	69fb      	ldr	r3, [r7, #28]
 801fe06:	f003 0307 	and.w	r3, r3, #7
 801fe0a:	009b      	lsls	r3, r3, #2
 801fe0c:	fa02 f303 	lsl.w	r3, r2, r3
 801fe10:	69ba      	ldr	r2, [r7, #24]
 801fe12:	4313      	orrs	r3, r2
 801fe14:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3] = temp;
 801fe16:	69fb      	ldr	r3, [r7, #28]
 801fe18:	08da      	lsrs	r2, r3, #3
 801fe1a:	687b      	ldr	r3, [r7, #4]
 801fe1c:	3208      	adds	r2, #8
 801fe1e:	69b9      	ldr	r1, [r7, #24]
 801fe20:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }
      
      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 801fe24:	687b      	ldr	r3, [r7, #4]
 801fe26:	681b      	ldr	r3, [r3, #0]
 801fe28:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 801fe2a:	69fb      	ldr	r3, [r7, #28]
 801fe2c:	005b      	lsls	r3, r3, #1
 801fe2e:	2203      	movs	r2, #3
 801fe30:	fa02 f303 	lsl.w	r3, r2, r3
 801fe34:	43db      	mvns	r3, r3
 801fe36:	69ba      	ldr	r2, [r7, #24]
 801fe38:	4013      	ands	r3, r2
 801fe3a:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 801fe3c:	683b      	ldr	r3, [r7, #0]
 801fe3e:	685b      	ldr	r3, [r3, #4]
 801fe40:	f003 0203 	and.w	r2, r3, #3
 801fe44:	69fb      	ldr	r3, [r7, #28]
 801fe46:	005b      	lsls	r3, r3, #1
 801fe48:	fa02 f303 	lsl.w	r3, r2, r3
 801fe4c:	69ba      	ldr	r2, [r7, #24]
 801fe4e:	4313      	orrs	r3, r2
 801fe50:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 801fe52:	687b      	ldr	r3, [r7, #4]
 801fe54:	69ba      	ldr	r2, [r7, #24]
 801fe56:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 801fe58:	683b      	ldr	r3, [r7, #0]
 801fe5a:	685b      	ldr	r3, [r3, #4]
 801fe5c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801fe60:	2b00      	cmp	r3, #0
 801fe62:	f000 80be 	beq.w	801ffe2 <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 801fe66:	4b66      	ldr	r3, [pc, #408]	; (8020000 <HAL_GPIO_Init+0x324>)
 801fe68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801fe6a:	4a65      	ldr	r2, [pc, #404]	; (8020000 <HAL_GPIO_Init+0x324>)
 801fe6c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801fe70:	6453      	str	r3, [r2, #68]	; 0x44
 801fe72:	4b63      	ldr	r3, [pc, #396]	; (8020000 <HAL_GPIO_Init+0x324>)
 801fe74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801fe76:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 801fe7a:	60fb      	str	r3, [r7, #12]
 801fe7c:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2];
 801fe7e:	4a61      	ldr	r2, [pc, #388]	; (8020004 <HAL_GPIO_Init+0x328>)
 801fe80:	69fb      	ldr	r3, [r7, #28]
 801fe82:	089b      	lsrs	r3, r3, #2
 801fe84:	3302      	adds	r3, #2
 801fe86:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801fe8a:	61bb      	str	r3, [r7, #24]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 801fe8c:	69fb      	ldr	r3, [r7, #28]
 801fe8e:	f003 0303 	and.w	r3, r3, #3
 801fe92:	009b      	lsls	r3, r3, #2
 801fe94:	220f      	movs	r2, #15
 801fe96:	fa02 f303 	lsl.w	r3, r2, r3
 801fe9a:	43db      	mvns	r3, r3
 801fe9c:	69ba      	ldr	r2, [r7, #24]
 801fe9e:	4013      	ands	r3, r2
 801fea0:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 801fea2:	687b      	ldr	r3, [r7, #4]
 801fea4:	4a58      	ldr	r2, [pc, #352]	; (8020008 <HAL_GPIO_Init+0x32c>)
 801fea6:	4293      	cmp	r3, r2
 801fea8:	d037      	beq.n	801ff1a <HAL_GPIO_Init+0x23e>
 801feaa:	687b      	ldr	r3, [r7, #4]
 801feac:	4a57      	ldr	r2, [pc, #348]	; (802000c <HAL_GPIO_Init+0x330>)
 801feae:	4293      	cmp	r3, r2
 801feb0:	d031      	beq.n	801ff16 <HAL_GPIO_Init+0x23a>
 801feb2:	687b      	ldr	r3, [r7, #4]
 801feb4:	4a56      	ldr	r2, [pc, #344]	; (8020010 <HAL_GPIO_Init+0x334>)
 801feb6:	4293      	cmp	r3, r2
 801feb8:	d02b      	beq.n	801ff12 <HAL_GPIO_Init+0x236>
 801feba:	687b      	ldr	r3, [r7, #4]
 801febc:	4a55      	ldr	r2, [pc, #340]	; (8020014 <HAL_GPIO_Init+0x338>)
 801febe:	4293      	cmp	r3, r2
 801fec0:	d025      	beq.n	801ff0e <HAL_GPIO_Init+0x232>
 801fec2:	687b      	ldr	r3, [r7, #4]
 801fec4:	4a54      	ldr	r2, [pc, #336]	; (8020018 <HAL_GPIO_Init+0x33c>)
 801fec6:	4293      	cmp	r3, r2
 801fec8:	d01f      	beq.n	801ff0a <HAL_GPIO_Init+0x22e>
 801feca:	687b      	ldr	r3, [r7, #4]
 801fecc:	4a53      	ldr	r2, [pc, #332]	; (802001c <HAL_GPIO_Init+0x340>)
 801fece:	4293      	cmp	r3, r2
 801fed0:	d019      	beq.n	801ff06 <HAL_GPIO_Init+0x22a>
 801fed2:	687b      	ldr	r3, [r7, #4]
 801fed4:	4a52      	ldr	r2, [pc, #328]	; (8020020 <HAL_GPIO_Init+0x344>)
 801fed6:	4293      	cmp	r3, r2
 801fed8:	d013      	beq.n	801ff02 <HAL_GPIO_Init+0x226>
 801feda:	687b      	ldr	r3, [r7, #4]
 801fedc:	4a51      	ldr	r2, [pc, #324]	; (8020024 <HAL_GPIO_Init+0x348>)
 801fede:	4293      	cmp	r3, r2
 801fee0:	d00d      	beq.n	801fefe <HAL_GPIO_Init+0x222>
 801fee2:	687b      	ldr	r3, [r7, #4]
 801fee4:	4a50      	ldr	r2, [pc, #320]	; (8020028 <HAL_GPIO_Init+0x34c>)
 801fee6:	4293      	cmp	r3, r2
 801fee8:	d007      	beq.n	801fefa <HAL_GPIO_Init+0x21e>
 801feea:	687b      	ldr	r3, [r7, #4]
 801feec:	4a4f      	ldr	r2, [pc, #316]	; (802002c <HAL_GPIO_Init+0x350>)
 801feee:	4293      	cmp	r3, r2
 801fef0:	d101      	bne.n	801fef6 <HAL_GPIO_Init+0x21a>
 801fef2:	2309      	movs	r3, #9
 801fef4:	e012      	b.n	801ff1c <HAL_GPIO_Init+0x240>
 801fef6:	230a      	movs	r3, #10
 801fef8:	e010      	b.n	801ff1c <HAL_GPIO_Init+0x240>
 801fefa:	2308      	movs	r3, #8
 801fefc:	e00e      	b.n	801ff1c <HAL_GPIO_Init+0x240>
 801fefe:	2307      	movs	r3, #7
 801ff00:	e00c      	b.n	801ff1c <HAL_GPIO_Init+0x240>
 801ff02:	2306      	movs	r3, #6
 801ff04:	e00a      	b.n	801ff1c <HAL_GPIO_Init+0x240>
 801ff06:	2305      	movs	r3, #5
 801ff08:	e008      	b.n	801ff1c <HAL_GPIO_Init+0x240>
 801ff0a:	2304      	movs	r3, #4
 801ff0c:	e006      	b.n	801ff1c <HAL_GPIO_Init+0x240>
 801ff0e:	2303      	movs	r3, #3
 801ff10:	e004      	b.n	801ff1c <HAL_GPIO_Init+0x240>
 801ff12:	2302      	movs	r3, #2
 801ff14:	e002      	b.n	801ff1c <HAL_GPIO_Init+0x240>
 801ff16:	2301      	movs	r3, #1
 801ff18:	e000      	b.n	801ff1c <HAL_GPIO_Init+0x240>
 801ff1a:	2300      	movs	r3, #0
 801ff1c:	69fa      	ldr	r2, [r7, #28]
 801ff1e:	f002 0203 	and.w	r2, r2, #3
 801ff22:	0092      	lsls	r2, r2, #2
 801ff24:	4093      	lsls	r3, r2
 801ff26:	69ba      	ldr	r2, [r7, #24]
 801ff28:	4313      	orrs	r3, r2
 801ff2a:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2] = temp;
 801ff2c:	4935      	ldr	r1, [pc, #212]	; (8020004 <HAL_GPIO_Init+0x328>)
 801ff2e:	69fb      	ldr	r3, [r7, #28]
 801ff30:	089b      	lsrs	r3, r3, #2
 801ff32:	3302      	adds	r3, #2
 801ff34:	69ba      	ldr	r2, [r7, #24]
 801ff36:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 801ff3a:	4b3d      	ldr	r3, [pc, #244]	; (8020030 <HAL_GPIO_Init+0x354>)
 801ff3c:	681b      	ldr	r3, [r3, #0]
 801ff3e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 801ff40:	693b      	ldr	r3, [r7, #16]
 801ff42:	43db      	mvns	r3, r3
 801ff44:	69ba      	ldr	r2, [r7, #24]
 801ff46:	4013      	ands	r3, r2
 801ff48:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 801ff4a:	683b      	ldr	r3, [r7, #0]
 801ff4c:	685b      	ldr	r3, [r3, #4]
 801ff4e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 801ff52:	2b00      	cmp	r3, #0
 801ff54:	d003      	beq.n	801ff5e <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 801ff56:	69ba      	ldr	r2, [r7, #24]
 801ff58:	693b      	ldr	r3, [r7, #16]
 801ff5a:	4313      	orrs	r3, r2
 801ff5c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 801ff5e:	4a34      	ldr	r2, [pc, #208]	; (8020030 <HAL_GPIO_Init+0x354>)
 801ff60:	69bb      	ldr	r3, [r7, #24]
 801ff62:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 801ff64:	4b32      	ldr	r3, [pc, #200]	; (8020030 <HAL_GPIO_Init+0x354>)
 801ff66:	685b      	ldr	r3, [r3, #4]
 801ff68:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 801ff6a:	693b      	ldr	r3, [r7, #16]
 801ff6c:	43db      	mvns	r3, r3
 801ff6e:	69ba      	ldr	r2, [r7, #24]
 801ff70:	4013      	ands	r3, r2
 801ff72:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 801ff74:	683b      	ldr	r3, [r7, #0]
 801ff76:	685b      	ldr	r3, [r3, #4]
 801ff78:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801ff7c:	2b00      	cmp	r3, #0
 801ff7e:	d003      	beq.n	801ff88 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 801ff80:	69ba      	ldr	r2, [r7, #24]
 801ff82:	693b      	ldr	r3, [r7, #16]
 801ff84:	4313      	orrs	r3, r2
 801ff86:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 801ff88:	4a29      	ldr	r2, [pc, #164]	; (8020030 <HAL_GPIO_Init+0x354>)
 801ff8a:	69bb      	ldr	r3, [r7, #24]
 801ff8c:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 801ff8e:	4b28      	ldr	r3, [pc, #160]	; (8020030 <HAL_GPIO_Init+0x354>)
 801ff90:	689b      	ldr	r3, [r3, #8]
 801ff92:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 801ff94:	693b      	ldr	r3, [r7, #16]
 801ff96:	43db      	mvns	r3, r3
 801ff98:	69ba      	ldr	r2, [r7, #24]
 801ff9a:	4013      	ands	r3, r2
 801ff9c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 801ff9e:	683b      	ldr	r3, [r7, #0]
 801ffa0:	685b      	ldr	r3, [r3, #4]
 801ffa2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 801ffa6:	2b00      	cmp	r3, #0
 801ffa8:	d003      	beq.n	801ffb2 <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 801ffaa:	69ba      	ldr	r2, [r7, #24]
 801ffac:	693b      	ldr	r3, [r7, #16]
 801ffae:	4313      	orrs	r3, r2
 801ffb0:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 801ffb2:	4a1f      	ldr	r2, [pc, #124]	; (8020030 <HAL_GPIO_Init+0x354>)
 801ffb4:	69bb      	ldr	r3, [r7, #24]
 801ffb6:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 801ffb8:	4b1d      	ldr	r3, [pc, #116]	; (8020030 <HAL_GPIO_Init+0x354>)
 801ffba:	68db      	ldr	r3, [r3, #12]
 801ffbc:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 801ffbe:	693b      	ldr	r3, [r7, #16]
 801ffc0:	43db      	mvns	r3, r3
 801ffc2:	69ba      	ldr	r2, [r7, #24]
 801ffc4:	4013      	ands	r3, r2
 801ffc6:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 801ffc8:	683b      	ldr	r3, [r7, #0]
 801ffca:	685b      	ldr	r3, [r3, #4]
 801ffcc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 801ffd0:	2b00      	cmp	r3, #0
 801ffd2:	d003      	beq.n	801ffdc <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 801ffd4:	69ba      	ldr	r2, [r7, #24]
 801ffd6:	693b      	ldr	r3, [r7, #16]
 801ffd8:	4313      	orrs	r3, r2
 801ffda:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 801ffdc:	4a14      	ldr	r2, [pc, #80]	; (8020030 <HAL_GPIO_Init+0x354>)
 801ffde:	69bb      	ldr	r3, [r7, #24]
 801ffe0:	60d3      	str	r3, [r2, #12]
  for(position = 0; position < GPIO_NUMBER; position++)
 801ffe2:	69fb      	ldr	r3, [r7, #28]
 801ffe4:	3301      	adds	r3, #1
 801ffe6:	61fb      	str	r3, [r7, #28]
 801ffe8:	69fb      	ldr	r3, [r7, #28]
 801ffea:	2b0f      	cmp	r3, #15
 801ffec:	f67f ae86 	bls.w	801fcfc <HAL_GPIO_Init+0x20>
      }
    }
  }
}
 801fff0:	bf00      	nop
 801fff2:	bf00      	nop
 801fff4:	3724      	adds	r7, #36	; 0x24
 801fff6:	46bd      	mov	sp, r7
 801fff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fffc:	4770      	bx	lr
 801fffe:	bf00      	nop
 8020000:	40023800 	.word	0x40023800
 8020004:	40013800 	.word	0x40013800
 8020008:	40020000 	.word	0x40020000
 802000c:	40020400 	.word	0x40020400
 8020010:	40020800 	.word	0x40020800
 8020014:	40020c00 	.word	0x40020c00
 8020018:	40021000 	.word	0x40021000
 802001c:	40021400 	.word	0x40021400
 8020020:	40021800 	.word	0x40021800
 8020024:	40021c00 	.word	0x40021c00
 8020028:	40022000 	.word	0x40022000
 802002c:	40022400 	.word	0x40022400
 8020030:	40013c00 	.word	0x40013c00

08020034 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8020034:	b580      	push	{r7, lr}
 8020036:	b082      	sub	sp, #8
 8020038:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0;
 802003a:	2300      	movs	r3, #0
 802003c:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 802003e:	4b23      	ldr	r3, [pc, #140]	; (80200cc <HAL_PWREx_EnableOverDrive+0x98>)
 8020040:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020042:	4a22      	ldr	r2, [pc, #136]	; (80200cc <HAL_PWREx_EnableOverDrive+0x98>)
 8020044:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8020048:	6413      	str	r3, [r2, #64]	; 0x40
 802004a:	4b20      	ldr	r3, [pc, #128]	; (80200cc <HAL_PWREx_EnableOverDrive+0x98>)
 802004c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 802004e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8020052:	603b      	str	r3, [r7, #0]
 8020054:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8020056:	4b1e      	ldr	r3, [pc, #120]	; (80200d0 <HAL_PWREx_EnableOverDrive+0x9c>)
 8020058:	681b      	ldr	r3, [r3, #0]
 802005a:	4a1d      	ldr	r2, [pc, #116]	; (80200d0 <HAL_PWREx_EnableOverDrive+0x9c>)
 802005c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8020060:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8020062:	f7ff fc67 	bl	801f934 <HAL_GetTick>
 8020066:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8020068:	e009      	b.n	802007e <HAL_PWREx_EnableOverDrive+0x4a>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 802006a:	f7ff fc63 	bl	801f934 <HAL_GetTick>
 802006e:	4602      	mov	r2, r0
 8020070:	687b      	ldr	r3, [r7, #4]
 8020072:	1ad3      	subs	r3, r2, r3
 8020074:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8020078:	d901      	bls.n	802007e <HAL_PWREx_EnableOverDrive+0x4a>
    {
      return HAL_TIMEOUT;
 802007a:	2303      	movs	r3, #3
 802007c:	e022      	b.n	80200c4 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 802007e:	4b14      	ldr	r3, [pc, #80]	; (80200d0 <HAL_PWREx_EnableOverDrive+0x9c>)
 8020080:	685b      	ldr	r3, [r3, #4]
 8020082:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8020086:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 802008a:	d1ee      	bne.n	802006a <HAL_PWREx_EnableOverDrive+0x36>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 802008c:	4b10      	ldr	r3, [pc, #64]	; (80200d0 <HAL_PWREx_EnableOverDrive+0x9c>)
 802008e:	681b      	ldr	r3, [r3, #0]
 8020090:	4a0f      	ldr	r2, [pc, #60]	; (80200d0 <HAL_PWREx_EnableOverDrive+0x9c>)
 8020092:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8020096:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8020098:	f7ff fc4c 	bl	801f934 <HAL_GetTick>
 802009c:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 802009e:	e009      	b.n	80200b4 <HAL_PWREx_EnableOverDrive+0x80>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80200a0:	f7ff fc48 	bl	801f934 <HAL_GetTick>
 80200a4:	4602      	mov	r2, r0
 80200a6:	687b      	ldr	r3, [r7, #4]
 80200a8:	1ad3      	subs	r3, r2, r3
 80200aa:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80200ae:	d901      	bls.n	80200b4 <HAL_PWREx_EnableOverDrive+0x80>
    {
      return HAL_TIMEOUT;
 80200b0:	2303      	movs	r3, #3
 80200b2:	e007      	b.n	80200c4 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80200b4:	4b06      	ldr	r3, [pc, #24]	; (80200d0 <HAL_PWREx_EnableOverDrive+0x9c>)
 80200b6:	685b      	ldr	r3, [r3, #4]
 80200b8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80200bc:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80200c0:	d1ee      	bne.n	80200a0 <HAL_PWREx_EnableOverDrive+0x6c>
    }
  } 
  return HAL_OK;
 80200c2:	2300      	movs	r3, #0
}
 80200c4:	4618      	mov	r0, r3
 80200c6:	3708      	adds	r7, #8
 80200c8:	46bd      	mov	sp, r7
 80200ca:	bd80      	pop	{r7, pc}
 80200cc:	40023800 	.word	0x40023800
 80200d0:	40007000 	.word	0x40007000

080200d4 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80200d4:	b580      	push	{r7, lr}
 80200d6:	b086      	sub	sp, #24
 80200d8:	af00      	add	r7, sp, #0
 80200da:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;
 80200dc:	2300      	movs	r3, #0
 80200de:	75fb      	strb	r3, [r7, #23]

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 80200e0:	687b      	ldr	r3, [r7, #4]
 80200e2:	2b00      	cmp	r3, #0
 80200e4:	d101      	bne.n	80200ea <HAL_RCC_OscConfig+0x16>
  {
    return HAL_ERROR;
 80200e6:	2301      	movs	r3, #1
 80200e8:	e291      	b.n	802060e <HAL_RCC_OscConfig+0x53a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80200ea:	687b      	ldr	r3, [r7, #4]
 80200ec:	681b      	ldr	r3, [r3, #0]
 80200ee:	f003 0301 	and.w	r3, r3, #1
 80200f2:	2b00      	cmp	r3, #0
 80200f4:	f000 8087 	beq.w	8020206 <HAL_RCC_OscConfig+0x132>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 80200f8:	4b96      	ldr	r3, [pc, #600]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 80200fa:	689b      	ldr	r3, [r3, #8]
 80200fc:	f003 030c 	and.w	r3, r3, #12
 8020100:	2b04      	cmp	r3, #4
 8020102:	d00c      	beq.n	802011e <HAL_RCC_OscConfig+0x4a>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8020104:	4b93      	ldr	r3, [pc, #588]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020106:	689b      	ldr	r3, [r3, #8]
 8020108:	f003 030c 	and.w	r3, r3, #12
 802010c:	2b08      	cmp	r3, #8
 802010e:	d112      	bne.n	8020136 <HAL_RCC_OscConfig+0x62>
 8020110:	4b90      	ldr	r3, [pc, #576]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020112:	685b      	ldr	r3, [r3, #4]
 8020114:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8020118:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 802011c:	d10b      	bne.n	8020136 <HAL_RCC_OscConfig+0x62>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 802011e:	4b8d      	ldr	r3, [pc, #564]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020120:	681b      	ldr	r3, [r3, #0]
 8020122:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020126:	2b00      	cmp	r3, #0
 8020128:	d06c      	beq.n	8020204 <HAL_RCC_OscConfig+0x130>
 802012a:	687b      	ldr	r3, [r7, #4]
 802012c:	685b      	ldr	r3, [r3, #4]
 802012e:	2b00      	cmp	r3, #0
 8020130:	d168      	bne.n	8020204 <HAL_RCC_OscConfig+0x130>
      {
        return HAL_ERROR;
 8020132:	2301      	movs	r3, #1
 8020134:	e26b      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8020136:	687b      	ldr	r3, [r7, #4]
 8020138:	685b      	ldr	r3, [r3, #4]
 802013a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 802013e:	d106      	bne.n	802014e <HAL_RCC_OscConfig+0x7a>
 8020140:	4b84      	ldr	r3, [pc, #528]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020142:	681b      	ldr	r3, [r3, #0]
 8020144:	4a83      	ldr	r2, [pc, #524]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020146:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 802014a:	6013      	str	r3, [r2, #0]
 802014c:	e02e      	b.n	80201ac <HAL_RCC_OscConfig+0xd8>
 802014e:	687b      	ldr	r3, [r7, #4]
 8020150:	685b      	ldr	r3, [r3, #4]
 8020152:	2b00      	cmp	r3, #0
 8020154:	d10c      	bne.n	8020170 <HAL_RCC_OscConfig+0x9c>
 8020156:	4b7f      	ldr	r3, [pc, #508]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020158:	681b      	ldr	r3, [r3, #0]
 802015a:	4a7e      	ldr	r2, [pc, #504]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 802015c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8020160:	6013      	str	r3, [r2, #0]
 8020162:	4b7c      	ldr	r3, [pc, #496]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020164:	681b      	ldr	r3, [r3, #0]
 8020166:	4a7b      	ldr	r2, [pc, #492]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020168:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 802016c:	6013      	str	r3, [r2, #0]
 802016e:	e01d      	b.n	80201ac <HAL_RCC_OscConfig+0xd8>
 8020170:	687b      	ldr	r3, [r7, #4]
 8020172:	685b      	ldr	r3, [r3, #4]
 8020174:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8020178:	d10c      	bne.n	8020194 <HAL_RCC_OscConfig+0xc0>
 802017a:	4b76      	ldr	r3, [pc, #472]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 802017c:	681b      	ldr	r3, [r3, #0]
 802017e:	4a75      	ldr	r2, [pc, #468]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020180:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8020184:	6013      	str	r3, [r2, #0]
 8020186:	4b73      	ldr	r3, [pc, #460]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020188:	681b      	ldr	r3, [r3, #0]
 802018a:	4a72      	ldr	r2, [pc, #456]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 802018c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8020190:	6013      	str	r3, [r2, #0]
 8020192:	e00b      	b.n	80201ac <HAL_RCC_OscConfig+0xd8>
 8020194:	4b6f      	ldr	r3, [pc, #444]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020196:	681b      	ldr	r3, [r3, #0]
 8020198:	4a6e      	ldr	r2, [pc, #440]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 802019a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 802019e:	6013      	str	r3, [r2, #0]
 80201a0:	4b6c      	ldr	r3, [pc, #432]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 80201a2:	681b      	ldr	r3, [r3, #0]
 80201a4:	4a6b      	ldr	r2, [pc, #428]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 80201a6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80201aa:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80201ac:	687b      	ldr	r3, [r7, #4]
 80201ae:	685b      	ldr	r3, [r3, #4]
 80201b0:	2b00      	cmp	r3, #0
 80201b2:	d013      	beq.n	80201dc <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80201b4:	f7ff fbbe 	bl	801f934 <HAL_GetTick>
 80201b8:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80201ba:	e008      	b.n	80201ce <HAL_RCC_OscConfig+0xfa>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80201bc:	f7ff fbba 	bl	801f934 <HAL_GetTick>
 80201c0:	4602      	mov	r2, r0
 80201c2:	693b      	ldr	r3, [r7, #16]
 80201c4:	1ad3      	subs	r3, r2, r3
 80201c6:	2b64      	cmp	r3, #100	; 0x64
 80201c8:	d901      	bls.n	80201ce <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 80201ca:	2303      	movs	r3, #3
 80201cc:	e21f      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80201ce:	4b61      	ldr	r3, [pc, #388]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 80201d0:	681b      	ldr	r3, [r3, #0]
 80201d2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80201d6:	2b00      	cmp	r3, #0
 80201d8:	d0f0      	beq.n	80201bc <HAL_RCC_OscConfig+0xe8>
 80201da:	e014      	b.n	8020206 <HAL_RCC_OscConfig+0x132>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80201dc:	f7ff fbaa 	bl	801f934 <HAL_GetTick>
 80201e0:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80201e2:	e008      	b.n	80201f6 <HAL_RCC_OscConfig+0x122>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80201e4:	f7ff fba6 	bl	801f934 <HAL_GetTick>
 80201e8:	4602      	mov	r2, r0
 80201ea:	693b      	ldr	r3, [r7, #16]
 80201ec:	1ad3      	subs	r3, r2, r3
 80201ee:	2b64      	cmp	r3, #100	; 0x64
 80201f0:	d901      	bls.n	80201f6 <HAL_RCC_OscConfig+0x122>
          {
            return HAL_TIMEOUT;
 80201f2:	2303      	movs	r3, #3
 80201f4:	e20b      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80201f6:	4b57      	ldr	r3, [pc, #348]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 80201f8:	681b      	ldr	r3, [r3, #0]
 80201fa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80201fe:	2b00      	cmp	r3, #0
 8020200:	d1f0      	bne.n	80201e4 <HAL_RCC_OscConfig+0x110>
 8020202:	e000      	b.n	8020206 <HAL_RCC_OscConfig+0x132>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8020204:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8020206:	687b      	ldr	r3, [r7, #4]
 8020208:	681b      	ldr	r3, [r3, #0]
 802020a:	f003 0302 	and.w	r3, r3, #2
 802020e:	2b00      	cmp	r3, #0
 8020210:	d069      	beq.n	80202e6 <HAL_RCC_OscConfig+0x212>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8020212:	4b50      	ldr	r3, [pc, #320]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020214:	689b      	ldr	r3, [r3, #8]
 8020216:	f003 030c 	and.w	r3, r3, #12
 802021a:	2b00      	cmp	r3, #0
 802021c:	d00b      	beq.n	8020236 <HAL_RCC_OscConfig+0x162>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 802021e:	4b4d      	ldr	r3, [pc, #308]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020220:	689b      	ldr	r3, [r3, #8]
 8020222:	f003 030c 	and.w	r3, r3, #12
 8020226:	2b08      	cmp	r3, #8
 8020228:	d11c      	bne.n	8020264 <HAL_RCC_OscConfig+0x190>
 802022a:	4b4a      	ldr	r3, [pc, #296]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 802022c:	685b      	ldr	r3, [r3, #4]
 802022e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8020232:	2b00      	cmp	r3, #0
 8020234:	d116      	bne.n	8020264 <HAL_RCC_OscConfig+0x190>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8020236:	4b47      	ldr	r3, [pc, #284]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020238:	681b      	ldr	r3, [r3, #0]
 802023a:	f003 0302 	and.w	r3, r3, #2
 802023e:	2b00      	cmp	r3, #0
 8020240:	d005      	beq.n	802024e <HAL_RCC_OscConfig+0x17a>
 8020242:	687b      	ldr	r3, [r7, #4]
 8020244:	68db      	ldr	r3, [r3, #12]
 8020246:	2b01      	cmp	r3, #1
 8020248:	d001      	beq.n	802024e <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 802024a:	2301      	movs	r3, #1
 802024c:	e1df      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 802024e:	4b41      	ldr	r3, [pc, #260]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020250:	681b      	ldr	r3, [r3, #0]
 8020252:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8020256:	687b      	ldr	r3, [r7, #4]
 8020258:	691b      	ldr	r3, [r3, #16]
 802025a:	00db      	lsls	r3, r3, #3
 802025c:	493d      	ldr	r1, [pc, #244]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 802025e:	4313      	orrs	r3, r2
 8020260:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8020262:	e040      	b.n	80202e6 <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8020264:	687b      	ldr	r3, [r7, #4]
 8020266:	68db      	ldr	r3, [r3, #12]
 8020268:	2b00      	cmp	r3, #0
 802026a:	d023      	beq.n	80202b4 <HAL_RCC_OscConfig+0x1e0>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 802026c:	4b39      	ldr	r3, [pc, #228]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 802026e:	681b      	ldr	r3, [r3, #0]
 8020270:	4a38      	ldr	r2, [pc, #224]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020272:	f043 0301 	orr.w	r3, r3, #1
 8020276:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020278:	f7ff fb5c 	bl	801f934 <HAL_GetTick>
 802027c:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 802027e:	e008      	b.n	8020292 <HAL_RCC_OscConfig+0x1be>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8020280:	f7ff fb58 	bl	801f934 <HAL_GetTick>
 8020284:	4602      	mov	r2, r0
 8020286:	693b      	ldr	r3, [r7, #16]
 8020288:	1ad3      	subs	r3, r2, r3
 802028a:	2b02      	cmp	r3, #2
 802028c:	d901      	bls.n	8020292 <HAL_RCC_OscConfig+0x1be>
          {
            return HAL_TIMEOUT;
 802028e:	2303      	movs	r3, #3
 8020290:	e1bd      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8020292:	4b30      	ldr	r3, [pc, #192]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020294:	681b      	ldr	r3, [r3, #0]
 8020296:	f003 0302 	and.w	r3, r3, #2
 802029a:	2b00      	cmp	r3, #0
 802029c:	d0f0      	beq.n	8020280 <HAL_RCC_OscConfig+0x1ac>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 802029e:	4b2d      	ldr	r3, [pc, #180]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 80202a0:	681b      	ldr	r3, [r3, #0]
 80202a2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80202a6:	687b      	ldr	r3, [r7, #4]
 80202a8:	691b      	ldr	r3, [r3, #16]
 80202aa:	00db      	lsls	r3, r3, #3
 80202ac:	4929      	ldr	r1, [pc, #164]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 80202ae:	4313      	orrs	r3, r2
 80202b0:	600b      	str	r3, [r1, #0]
 80202b2:	e018      	b.n	80202e6 <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80202b4:	4b27      	ldr	r3, [pc, #156]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 80202b6:	681b      	ldr	r3, [r3, #0]
 80202b8:	4a26      	ldr	r2, [pc, #152]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 80202ba:	f023 0301 	bic.w	r3, r3, #1
 80202be:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80202c0:	f7ff fb38 	bl	801f934 <HAL_GetTick>
 80202c4:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80202c6:	e008      	b.n	80202da <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80202c8:	f7ff fb34 	bl	801f934 <HAL_GetTick>
 80202cc:	4602      	mov	r2, r0
 80202ce:	693b      	ldr	r3, [r7, #16]
 80202d0:	1ad3      	subs	r3, r2, r3
 80202d2:	2b02      	cmp	r3, #2
 80202d4:	d901      	bls.n	80202da <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 80202d6:	2303      	movs	r3, #3
 80202d8:	e199      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80202da:	4b1e      	ldr	r3, [pc, #120]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 80202dc:	681b      	ldr	r3, [r3, #0]
 80202de:	f003 0302 	and.w	r3, r3, #2
 80202e2:	2b00      	cmp	r3, #0
 80202e4:	d1f0      	bne.n	80202c8 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80202e6:	687b      	ldr	r3, [r7, #4]
 80202e8:	681b      	ldr	r3, [r3, #0]
 80202ea:	f003 0308 	and.w	r3, r3, #8
 80202ee:	2b00      	cmp	r3, #0
 80202f0:	d038      	beq.n	8020364 <HAL_RCC_OscConfig+0x290>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80202f2:	687b      	ldr	r3, [r7, #4]
 80202f4:	695b      	ldr	r3, [r3, #20]
 80202f6:	2b00      	cmp	r3, #0
 80202f8:	d019      	beq.n	802032e <HAL_RCC_OscConfig+0x25a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80202fa:	4b16      	ldr	r3, [pc, #88]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 80202fc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80202fe:	4a15      	ldr	r2, [pc, #84]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020300:	f043 0301 	orr.w	r3, r3, #1
 8020304:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8020306:	f7ff fb15 	bl	801f934 <HAL_GetTick>
 802030a:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 802030c:	e008      	b.n	8020320 <HAL_RCC_OscConfig+0x24c>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 802030e:	f7ff fb11 	bl	801f934 <HAL_GetTick>
 8020312:	4602      	mov	r2, r0
 8020314:	693b      	ldr	r3, [r7, #16]
 8020316:	1ad3      	subs	r3, r2, r3
 8020318:	2b02      	cmp	r3, #2
 802031a:	d901      	bls.n	8020320 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 802031c:	2303      	movs	r3, #3
 802031e:	e176      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8020320:	4b0c      	ldr	r3, [pc, #48]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020322:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8020324:	f003 0302 	and.w	r3, r3, #2
 8020328:	2b00      	cmp	r3, #0
 802032a:	d0f0      	beq.n	802030e <HAL_RCC_OscConfig+0x23a>
 802032c:	e01a      	b.n	8020364 <HAL_RCC_OscConfig+0x290>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 802032e:	4b09      	ldr	r3, [pc, #36]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020330:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8020332:	4a08      	ldr	r2, [pc, #32]	; (8020354 <HAL_RCC_OscConfig+0x280>)
 8020334:	f023 0301 	bic.w	r3, r3, #1
 8020338:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 802033a:	f7ff fafb 	bl	801f934 <HAL_GetTick>
 802033e:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8020340:	e00a      	b.n	8020358 <HAL_RCC_OscConfig+0x284>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8020342:	f7ff faf7 	bl	801f934 <HAL_GetTick>
 8020346:	4602      	mov	r2, r0
 8020348:	693b      	ldr	r3, [r7, #16]
 802034a:	1ad3      	subs	r3, r2, r3
 802034c:	2b02      	cmp	r3, #2
 802034e:	d903      	bls.n	8020358 <HAL_RCC_OscConfig+0x284>
        {
          return HAL_TIMEOUT;
 8020350:	2303      	movs	r3, #3
 8020352:	e15c      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
 8020354:	40023800 	.word	0x40023800
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8020358:	4b91      	ldr	r3, [pc, #580]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 802035a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 802035c:	f003 0302 	and.w	r3, r3, #2
 8020360:	2b00      	cmp	r3, #0
 8020362:	d1ee      	bne.n	8020342 <HAL_RCC_OscConfig+0x26e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8020364:	687b      	ldr	r3, [r7, #4]
 8020366:	681b      	ldr	r3, [r3, #0]
 8020368:	f003 0304 	and.w	r3, r3, #4
 802036c:	2b00      	cmp	r3, #0
 802036e:	f000 80a4 	beq.w	80204ba <HAL_RCC_OscConfig+0x3e6>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8020372:	4b8b      	ldr	r3, [pc, #556]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020374:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020376:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 802037a:	2b00      	cmp	r3, #0
 802037c:	d10d      	bne.n	802039a <HAL_RCC_OscConfig+0x2c6>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 802037e:	4b88      	ldr	r3, [pc, #544]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020380:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020382:	4a87      	ldr	r2, [pc, #540]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020384:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8020388:	6413      	str	r3, [r2, #64]	; 0x40
 802038a:	4b85      	ldr	r3, [pc, #532]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 802038c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 802038e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8020392:	60bb      	str	r3, [r7, #8]
 8020394:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8020396:	2301      	movs	r3, #1
 8020398:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 802039a:	4b82      	ldr	r3, [pc, #520]	; (80205a4 <HAL_RCC_OscConfig+0x4d0>)
 802039c:	681b      	ldr	r3, [r3, #0]
 802039e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80203a2:	2b00      	cmp	r3, #0
 80203a4:	d118      	bne.n	80203d8 <HAL_RCC_OscConfig+0x304>
    {
      /* Enable write access to Backup domain */
      PWR->CR1 |= PWR_CR1_DBP;
 80203a6:	4b7f      	ldr	r3, [pc, #508]	; (80205a4 <HAL_RCC_OscConfig+0x4d0>)
 80203a8:	681b      	ldr	r3, [r3, #0]
 80203aa:	4a7e      	ldr	r2, [pc, #504]	; (80205a4 <HAL_RCC_OscConfig+0x4d0>)
 80203ac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80203b0:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80203b2:	f7ff fabf 	bl	801f934 <HAL_GetTick>
 80203b6:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80203b8:	e008      	b.n	80203cc <HAL_RCC_OscConfig+0x2f8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80203ba:	f7ff fabb 	bl	801f934 <HAL_GetTick>
 80203be:	4602      	mov	r2, r0
 80203c0:	693b      	ldr	r3, [r7, #16]
 80203c2:	1ad3      	subs	r3, r2, r3
 80203c4:	2b64      	cmp	r3, #100	; 0x64
 80203c6:	d901      	bls.n	80203cc <HAL_RCC_OscConfig+0x2f8>
        {
          return HAL_TIMEOUT;
 80203c8:	2303      	movs	r3, #3
 80203ca:	e120      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80203cc:	4b75      	ldr	r3, [pc, #468]	; (80205a4 <HAL_RCC_OscConfig+0x4d0>)
 80203ce:	681b      	ldr	r3, [r3, #0]
 80203d0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80203d4:	2b00      	cmp	r3, #0
 80203d6:	d0f0      	beq.n	80203ba <HAL_RCC_OscConfig+0x2e6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80203d8:	687b      	ldr	r3, [r7, #4]
 80203da:	689b      	ldr	r3, [r3, #8]
 80203dc:	2b01      	cmp	r3, #1
 80203de:	d106      	bne.n	80203ee <HAL_RCC_OscConfig+0x31a>
 80203e0:	4b6f      	ldr	r3, [pc, #444]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 80203e2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80203e4:	4a6e      	ldr	r2, [pc, #440]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 80203e6:	f043 0301 	orr.w	r3, r3, #1
 80203ea:	6713      	str	r3, [r2, #112]	; 0x70
 80203ec:	e02d      	b.n	802044a <HAL_RCC_OscConfig+0x376>
 80203ee:	687b      	ldr	r3, [r7, #4]
 80203f0:	689b      	ldr	r3, [r3, #8]
 80203f2:	2b00      	cmp	r3, #0
 80203f4:	d10c      	bne.n	8020410 <HAL_RCC_OscConfig+0x33c>
 80203f6:	4b6a      	ldr	r3, [pc, #424]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 80203f8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80203fa:	4a69      	ldr	r2, [pc, #420]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 80203fc:	f023 0301 	bic.w	r3, r3, #1
 8020400:	6713      	str	r3, [r2, #112]	; 0x70
 8020402:	4b67      	ldr	r3, [pc, #412]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020404:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020406:	4a66      	ldr	r2, [pc, #408]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020408:	f023 0304 	bic.w	r3, r3, #4
 802040c:	6713      	str	r3, [r2, #112]	; 0x70
 802040e:	e01c      	b.n	802044a <HAL_RCC_OscConfig+0x376>
 8020410:	687b      	ldr	r3, [r7, #4]
 8020412:	689b      	ldr	r3, [r3, #8]
 8020414:	2b05      	cmp	r3, #5
 8020416:	d10c      	bne.n	8020432 <HAL_RCC_OscConfig+0x35e>
 8020418:	4b61      	ldr	r3, [pc, #388]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 802041a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802041c:	4a60      	ldr	r2, [pc, #384]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 802041e:	f043 0304 	orr.w	r3, r3, #4
 8020422:	6713      	str	r3, [r2, #112]	; 0x70
 8020424:	4b5e      	ldr	r3, [pc, #376]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020426:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020428:	4a5d      	ldr	r2, [pc, #372]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 802042a:	f043 0301 	orr.w	r3, r3, #1
 802042e:	6713      	str	r3, [r2, #112]	; 0x70
 8020430:	e00b      	b.n	802044a <HAL_RCC_OscConfig+0x376>
 8020432:	4b5b      	ldr	r3, [pc, #364]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020434:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020436:	4a5a      	ldr	r2, [pc, #360]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020438:	f023 0301 	bic.w	r3, r3, #1
 802043c:	6713      	str	r3, [r2, #112]	; 0x70
 802043e:	4b58      	ldr	r3, [pc, #352]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020440:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020442:	4a57      	ldr	r2, [pc, #348]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020444:	f023 0304 	bic.w	r3, r3, #4
 8020448:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 802044a:	687b      	ldr	r3, [r7, #4]
 802044c:	689b      	ldr	r3, [r3, #8]
 802044e:	2b00      	cmp	r3, #0
 8020450:	d015      	beq.n	802047e <HAL_RCC_OscConfig+0x3aa>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8020452:	f7ff fa6f 	bl	801f934 <HAL_GetTick>
 8020456:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8020458:	e00a      	b.n	8020470 <HAL_RCC_OscConfig+0x39c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802045a:	f7ff fa6b 	bl	801f934 <HAL_GetTick>
 802045e:	4602      	mov	r2, r0
 8020460:	693b      	ldr	r3, [r7, #16]
 8020462:	1ad3      	subs	r3, r2, r3
 8020464:	f241 3288 	movw	r2, #5000	; 0x1388
 8020468:	4293      	cmp	r3, r2
 802046a:	d901      	bls.n	8020470 <HAL_RCC_OscConfig+0x39c>
        {
          return HAL_TIMEOUT;
 802046c:	2303      	movs	r3, #3
 802046e:	e0ce      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8020470:	4b4b      	ldr	r3, [pc, #300]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020472:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020474:	f003 0302 	and.w	r3, r3, #2
 8020478:	2b00      	cmp	r3, #0
 802047a:	d0ee      	beq.n	802045a <HAL_RCC_OscConfig+0x386>
 802047c:	e014      	b.n	80204a8 <HAL_RCC_OscConfig+0x3d4>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 802047e:	f7ff fa59 	bl	801f934 <HAL_GetTick>
 8020482:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8020484:	e00a      	b.n	802049c <HAL_RCC_OscConfig+0x3c8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8020486:	f7ff fa55 	bl	801f934 <HAL_GetTick>
 802048a:	4602      	mov	r2, r0
 802048c:	693b      	ldr	r3, [r7, #16]
 802048e:	1ad3      	subs	r3, r2, r3
 8020490:	f241 3288 	movw	r2, #5000	; 0x1388
 8020494:	4293      	cmp	r3, r2
 8020496:	d901      	bls.n	802049c <HAL_RCC_OscConfig+0x3c8>
        {
          return HAL_TIMEOUT;
 8020498:	2303      	movs	r3, #3
 802049a:	e0b8      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 802049c:	4b40      	ldr	r3, [pc, #256]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 802049e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80204a0:	f003 0302 	and.w	r3, r3, #2
 80204a4:	2b00      	cmp	r3, #0
 80204a6:	d1ee      	bne.n	8020486 <HAL_RCC_OscConfig+0x3b2>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 80204a8:	7dfb      	ldrb	r3, [r7, #23]
 80204aa:	2b01      	cmp	r3, #1
 80204ac:	d105      	bne.n	80204ba <HAL_RCC_OscConfig+0x3e6>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80204ae:	4b3c      	ldr	r3, [pc, #240]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 80204b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80204b2:	4a3b      	ldr	r2, [pc, #236]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 80204b4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80204b8:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80204ba:	687b      	ldr	r3, [r7, #4]
 80204bc:	699b      	ldr	r3, [r3, #24]
 80204be:	2b00      	cmp	r3, #0
 80204c0:	f000 80a4 	beq.w	802060c <HAL_RCC_OscConfig+0x538>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80204c4:	4b36      	ldr	r3, [pc, #216]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 80204c6:	689b      	ldr	r3, [r3, #8]
 80204c8:	f003 030c 	and.w	r3, r3, #12
 80204cc:	2b08      	cmp	r3, #8
 80204ce:	d06b      	beq.n	80205a8 <HAL_RCC_OscConfig+0x4d4>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80204d0:	687b      	ldr	r3, [r7, #4]
 80204d2:	699b      	ldr	r3, [r3, #24]
 80204d4:	2b02      	cmp	r3, #2
 80204d6:	d149      	bne.n	802056c <HAL_RCC_OscConfig+0x498>
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80204d8:	4b31      	ldr	r3, [pc, #196]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 80204da:	681b      	ldr	r3, [r3, #0]
 80204dc:	4a30      	ldr	r2, [pc, #192]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 80204de:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80204e2:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80204e4:	f7ff fa26 	bl	801f934 <HAL_GetTick>
 80204e8:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80204ea:	e008      	b.n	80204fe <HAL_RCC_OscConfig+0x42a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80204ec:	f7ff fa22 	bl	801f934 <HAL_GetTick>
 80204f0:	4602      	mov	r2, r0
 80204f2:	693b      	ldr	r3, [r7, #16]
 80204f4:	1ad3      	subs	r3, r2, r3
 80204f6:	2b02      	cmp	r3, #2
 80204f8:	d901      	bls.n	80204fe <HAL_RCC_OscConfig+0x42a>
          {
            return HAL_TIMEOUT;
 80204fa:	2303      	movs	r3, #3
 80204fc:	e087      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80204fe:	4b28      	ldr	r3, [pc, #160]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020500:	681b      	ldr	r3, [r3, #0]
 8020502:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8020506:	2b00      	cmp	r3, #0
 8020508:	d1f0      	bne.n	80204ec <HAL_RCC_OscConfig+0x418>
                             RCC_OscInitStruct->PLL.PLLN,
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);
#else
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 802050a:	687b      	ldr	r3, [r7, #4]
 802050c:	69da      	ldr	r2, [r3, #28]
 802050e:	687b      	ldr	r3, [r7, #4]
 8020510:	6a1b      	ldr	r3, [r3, #32]
 8020512:	431a      	orrs	r2, r3
 8020514:	687b      	ldr	r3, [r7, #4]
 8020516:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8020518:	019b      	lsls	r3, r3, #6
 802051a:	431a      	orrs	r2, r3
 802051c:	687b      	ldr	r3, [r7, #4]
 802051e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020520:	085b      	lsrs	r3, r3, #1
 8020522:	3b01      	subs	r3, #1
 8020524:	041b      	lsls	r3, r3, #16
 8020526:	431a      	orrs	r2, r3
 8020528:	687b      	ldr	r3, [r7, #4]
 802052a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802052c:	061b      	lsls	r3, r3, #24
 802052e:	4313      	orrs	r3, r2
 8020530:	4a1b      	ldr	r2, [pc, #108]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020532:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8020536:	6053      	str	r3, [r2, #4]
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ);
#endif

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8020538:	4b19      	ldr	r3, [pc, #100]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 802053a:	681b      	ldr	r3, [r3, #0]
 802053c:	4a18      	ldr	r2, [pc, #96]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 802053e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8020542:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020544:	f7ff f9f6 	bl	801f934 <HAL_GetTick>
 8020548:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 802054a:	e008      	b.n	802055e <HAL_RCC_OscConfig+0x48a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 802054c:	f7ff f9f2 	bl	801f934 <HAL_GetTick>
 8020550:	4602      	mov	r2, r0
 8020552:	693b      	ldr	r3, [r7, #16]
 8020554:	1ad3      	subs	r3, r2, r3
 8020556:	2b02      	cmp	r3, #2
 8020558:	d901      	bls.n	802055e <HAL_RCC_OscConfig+0x48a>
          {
            return HAL_TIMEOUT;
 802055a:	2303      	movs	r3, #3
 802055c:	e057      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 802055e:	4b10      	ldr	r3, [pc, #64]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020560:	681b      	ldr	r3, [r3, #0]
 8020562:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8020566:	2b00      	cmp	r3, #0
 8020568:	d0f0      	beq.n	802054c <HAL_RCC_OscConfig+0x478>
 802056a:	e04f      	b.n	802060c <HAL_RCC_OscConfig+0x538>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 802056c:	4b0c      	ldr	r3, [pc, #48]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 802056e:	681b      	ldr	r3, [r3, #0]
 8020570:	4a0b      	ldr	r2, [pc, #44]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020572:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8020576:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020578:	f7ff f9dc 	bl	801f934 <HAL_GetTick>
 802057c:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 802057e:	e008      	b.n	8020592 <HAL_RCC_OscConfig+0x4be>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8020580:	f7ff f9d8 	bl	801f934 <HAL_GetTick>
 8020584:	4602      	mov	r2, r0
 8020586:	693b      	ldr	r3, [r7, #16]
 8020588:	1ad3      	subs	r3, r2, r3
 802058a:	2b02      	cmp	r3, #2
 802058c:	d901      	bls.n	8020592 <HAL_RCC_OscConfig+0x4be>
          {
            return HAL_TIMEOUT;
 802058e:	2303      	movs	r3, #3
 8020590:	e03d      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8020592:	4b03      	ldr	r3, [pc, #12]	; (80205a0 <HAL_RCC_OscConfig+0x4cc>)
 8020594:	681b      	ldr	r3, [r3, #0]
 8020596:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 802059a:	2b00      	cmp	r3, #0
 802059c:	d1f0      	bne.n	8020580 <HAL_RCC_OscConfig+0x4ac>
 802059e:	e035      	b.n	802060c <HAL_RCC_OscConfig+0x538>
 80205a0:	40023800 	.word	0x40023800
 80205a4:	40007000 	.word	0x40007000
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      pll_config = RCC->PLLCFGR;
 80205a8:	4b1b      	ldr	r3, [pc, #108]	; (8020618 <HAL_RCC_OscConfig+0x544>)
 80205aa:	685b      	ldr	r3, [r3, #4]
 80205ac:	60fb      	str	r3, [r7, #12]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80205ae:	687b      	ldr	r3, [r7, #4]
 80205b0:	699b      	ldr	r3, [r3, #24]
 80205b2:	2b01      	cmp	r3, #1
 80205b4:	d028      	beq.n	8020608 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80205b6:	68fb      	ldr	r3, [r7, #12]
 80205b8:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80205bc:	687b      	ldr	r3, [r7, #4]
 80205be:	69db      	ldr	r3, [r3, #28]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80205c0:	429a      	cmp	r2, r3
 80205c2:	d121      	bne.n	8020608 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80205c4:	68fb      	ldr	r3, [r7, #12]
 80205c6:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80205ca:	687b      	ldr	r3, [r7, #4]
 80205cc:	6a1b      	ldr	r3, [r3, #32]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80205ce:	429a      	cmp	r2, r3
 80205d0:	d11a      	bne.n	8020608 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80205d2:	68fa      	ldr	r2, [r7, #12]
 80205d4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80205d8:	4013      	ands	r3, r2
 80205da:	687a      	ldr	r2, [r7, #4]
 80205dc:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80205de:	0192      	lsls	r2, r2, #6
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80205e0:	4293      	cmp	r3, r2
 80205e2:	d111      	bne.n	8020608 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80205e4:	68fb      	ldr	r3, [r7, #12]
 80205e6:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80205ea:	687b      	ldr	r3, [r7, #4]
 80205ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80205ee:	085b      	lsrs	r3, r3, #1
 80205f0:	3b01      	subs	r3, #1
 80205f2:	041b      	lsls	r3, r3, #16
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80205f4:	429a      	cmp	r2, r3
 80205f6:	d107      	bne.n	8020608 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80205f8:	68fb      	ldr	r3, [r7, #12]
 80205fa:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80205fe:	687b      	ldr	r3, [r7, #4]
 8020600:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020602:	061b      	lsls	r3, r3, #24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8020604:	429a      	cmp	r2, r3
 8020606:	d001      	beq.n	802060c <HAL_RCC_OscConfig+0x538>
#endif
      {
        return HAL_ERROR;
 8020608:	2301      	movs	r3, #1
 802060a:	e000      	b.n	802060e <HAL_RCC_OscConfig+0x53a>
      }
    }
  }
  return HAL_OK;
 802060c:	2300      	movs	r3, #0
}
 802060e:	4618      	mov	r0, r3
 8020610:	3718      	adds	r7, #24
 8020612:	46bd      	mov	sp, r7
 8020614:	bd80      	pop	{r7, pc}
 8020616:	bf00      	nop
 8020618:	40023800 	.word	0x40023800

0802061c <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 802061c:	b580      	push	{r7, lr}
 802061e:	b084      	sub	sp, #16
 8020620:	af00      	add	r7, sp, #0
 8020622:	6078      	str	r0, [r7, #4]
 8020624:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0;
 8020626:	2300      	movs	r3, #0
 8020628:	60fb      	str	r3, [r7, #12]

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 802062a:	687b      	ldr	r3, [r7, #4]
 802062c:	2b00      	cmp	r3, #0
 802062e:	d101      	bne.n	8020634 <HAL_RCC_ClockConfig+0x18>
  {
    return HAL_ERROR;
 8020630:	2301      	movs	r3, #1
 8020632:	e0d0      	b.n	80207d6 <HAL_RCC_ClockConfig+0x1ba>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8020634:	4b6a      	ldr	r3, [pc, #424]	; (80207e0 <HAL_RCC_ClockConfig+0x1c4>)
 8020636:	681b      	ldr	r3, [r3, #0]
 8020638:	f003 030f 	and.w	r3, r3, #15
 802063c:	683a      	ldr	r2, [r7, #0]
 802063e:	429a      	cmp	r2, r3
 8020640:	d910      	bls.n	8020664 <HAL_RCC_ClockConfig+0x48>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8020642:	4b67      	ldr	r3, [pc, #412]	; (80207e0 <HAL_RCC_ClockConfig+0x1c4>)
 8020644:	681b      	ldr	r3, [r3, #0]
 8020646:	f023 020f 	bic.w	r2, r3, #15
 802064a:	4965      	ldr	r1, [pc, #404]	; (80207e0 <HAL_RCC_ClockConfig+0x1c4>)
 802064c:	683b      	ldr	r3, [r7, #0]
 802064e:	4313      	orrs	r3, r2
 8020650:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8020652:	4b63      	ldr	r3, [pc, #396]	; (80207e0 <HAL_RCC_ClockConfig+0x1c4>)
 8020654:	681b      	ldr	r3, [r3, #0]
 8020656:	f003 030f 	and.w	r3, r3, #15
 802065a:	683a      	ldr	r2, [r7, #0]
 802065c:	429a      	cmp	r2, r3
 802065e:	d001      	beq.n	8020664 <HAL_RCC_ClockConfig+0x48>
    {
      return HAL_ERROR;
 8020660:	2301      	movs	r3, #1
 8020662:	e0b8      	b.n	80207d6 <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8020664:	687b      	ldr	r3, [r7, #4]
 8020666:	681b      	ldr	r3, [r3, #0]
 8020668:	f003 0302 	and.w	r3, r3, #2
 802066c:	2b00      	cmp	r3, #0
 802066e:	d020      	beq.n	80206b2 <HAL_RCC_ClockConfig+0x96>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8020670:	687b      	ldr	r3, [r7, #4]
 8020672:	681b      	ldr	r3, [r3, #0]
 8020674:	f003 0304 	and.w	r3, r3, #4
 8020678:	2b00      	cmp	r3, #0
 802067a:	d005      	beq.n	8020688 <HAL_RCC_ClockConfig+0x6c>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 802067c:	4b59      	ldr	r3, [pc, #356]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 802067e:	689b      	ldr	r3, [r3, #8]
 8020680:	4a58      	ldr	r2, [pc, #352]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 8020682:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8020686:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8020688:	687b      	ldr	r3, [r7, #4]
 802068a:	681b      	ldr	r3, [r3, #0]
 802068c:	f003 0308 	and.w	r3, r3, #8
 8020690:	2b00      	cmp	r3, #0
 8020692:	d005      	beq.n	80206a0 <HAL_RCC_ClockConfig+0x84>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8020694:	4b53      	ldr	r3, [pc, #332]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 8020696:	689b      	ldr	r3, [r3, #8]
 8020698:	4a52      	ldr	r2, [pc, #328]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 802069a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 802069e:	6093      	str	r3, [r2, #8]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80206a0:	4b50      	ldr	r3, [pc, #320]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 80206a2:	689b      	ldr	r3, [r3, #8]
 80206a4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80206a8:	687b      	ldr	r3, [r7, #4]
 80206aa:	689b      	ldr	r3, [r3, #8]
 80206ac:	494d      	ldr	r1, [pc, #308]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 80206ae:	4313      	orrs	r3, r2
 80206b0:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80206b2:	687b      	ldr	r3, [r7, #4]
 80206b4:	681b      	ldr	r3, [r3, #0]
 80206b6:	f003 0301 	and.w	r3, r3, #1
 80206ba:	2b00      	cmp	r3, #0
 80206bc:	d040      	beq.n	8020740 <HAL_RCC_ClockConfig+0x124>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80206be:	687b      	ldr	r3, [r7, #4]
 80206c0:	685b      	ldr	r3, [r3, #4]
 80206c2:	2b01      	cmp	r3, #1
 80206c4:	d107      	bne.n	80206d6 <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80206c6:	4b47      	ldr	r3, [pc, #284]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 80206c8:	681b      	ldr	r3, [r3, #0]
 80206ca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80206ce:	2b00      	cmp	r3, #0
 80206d0:	d115      	bne.n	80206fe <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80206d2:	2301      	movs	r3, #1
 80206d4:	e07f      	b.n	80207d6 <HAL_RCC_ClockConfig+0x1ba>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80206d6:	687b      	ldr	r3, [r7, #4]
 80206d8:	685b      	ldr	r3, [r3, #4]
 80206da:	2b02      	cmp	r3, #2
 80206dc:	d107      	bne.n	80206ee <HAL_RCC_ClockConfig+0xd2>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80206de:	4b41      	ldr	r3, [pc, #260]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 80206e0:	681b      	ldr	r3, [r3, #0]
 80206e2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80206e6:	2b00      	cmp	r3, #0
 80206e8:	d109      	bne.n	80206fe <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80206ea:	2301      	movs	r3, #1
 80206ec:	e073      	b.n	80207d6 <HAL_RCC_ClockConfig+0x1ba>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80206ee:	4b3d      	ldr	r3, [pc, #244]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 80206f0:	681b      	ldr	r3, [r3, #0]
 80206f2:	f003 0302 	and.w	r3, r3, #2
 80206f6:	2b00      	cmp	r3, #0
 80206f8:	d101      	bne.n	80206fe <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80206fa:	2301      	movs	r3, #1
 80206fc:	e06b      	b.n	80207d6 <HAL_RCC_ClockConfig+0x1ba>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80206fe:	4b39      	ldr	r3, [pc, #228]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 8020700:	689b      	ldr	r3, [r3, #8]
 8020702:	f023 0203 	bic.w	r2, r3, #3
 8020706:	687b      	ldr	r3, [r7, #4]
 8020708:	685b      	ldr	r3, [r3, #4]
 802070a:	4936      	ldr	r1, [pc, #216]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 802070c:	4313      	orrs	r3, r2
 802070e:	608b      	str	r3, [r1, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8020710:	f7ff f910 	bl	801f934 <HAL_GetTick>
 8020714:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8020716:	e00a      	b.n	802072e <HAL_RCC_ClockConfig+0x112>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8020718:	f7ff f90c 	bl	801f934 <HAL_GetTick>
 802071c:	4602      	mov	r2, r0
 802071e:	68fb      	ldr	r3, [r7, #12]
 8020720:	1ad3      	subs	r3, r2, r3
 8020722:	f241 3288 	movw	r2, #5000	; 0x1388
 8020726:	4293      	cmp	r3, r2
 8020728:	d901      	bls.n	802072e <HAL_RCC_ClockConfig+0x112>
      {
        return HAL_TIMEOUT;
 802072a:	2303      	movs	r3, #3
 802072c:	e053      	b.n	80207d6 <HAL_RCC_ClockConfig+0x1ba>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 802072e:	4b2d      	ldr	r3, [pc, #180]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 8020730:	689b      	ldr	r3, [r3, #8]
 8020732:	f003 020c 	and.w	r2, r3, #12
 8020736:	687b      	ldr	r3, [r7, #4]
 8020738:	685b      	ldr	r3, [r3, #4]
 802073a:	009b      	lsls	r3, r3, #2
 802073c:	429a      	cmp	r2, r3
 802073e:	d1eb      	bne.n	8020718 <HAL_RCC_ClockConfig+0xfc>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8020740:	4b27      	ldr	r3, [pc, #156]	; (80207e0 <HAL_RCC_ClockConfig+0x1c4>)
 8020742:	681b      	ldr	r3, [r3, #0]
 8020744:	f003 030f 	and.w	r3, r3, #15
 8020748:	683a      	ldr	r2, [r7, #0]
 802074a:	429a      	cmp	r2, r3
 802074c:	d210      	bcs.n	8020770 <HAL_RCC_ClockConfig+0x154>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 802074e:	4b24      	ldr	r3, [pc, #144]	; (80207e0 <HAL_RCC_ClockConfig+0x1c4>)
 8020750:	681b      	ldr	r3, [r3, #0]
 8020752:	f023 020f 	bic.w	r2, r3, #15
 8020756:	4922      	ldr	r1, [pc, #136]	; (80207e0 <HAL_RCC_ClockConfig+0x1c4>)
 8020758:	683b      	ldr	r3, [r7, #0]
 802075a:	4313      	orrs	r3, r2
 802075c:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 802075e:	4b20      	ldr	r3, [pc, #128]	; (80207e0 <HAL_RCC_ClockConfig+0x1c4>)
 8020760:	681b      	ldr	r3, [r3, #0]
 8020762:	f003 030f 	and.w	r3, r3, #15
 8020766:	683a      	ldr	r2, [r7, #0]
 8020768:	429a      	cmp	r2, r3
 802076a:	d001      	beq.n	8020770 <HAL_RCC_ClockConfig+0x154>
    {
      return HAL_ERROR;
 802076c:	2301      	movs	r3, #1
 802076e:	e032      	b.n	80207d6 <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8020770:	687b      	ldr	r3, [r7, #4]
 8020772:	681b      	ldr	r3, [r3, #0]
 8020774:	f003 0304 	and.w	r3, r3, #4
 8020778:	2b00      	cmp	r3, #0
 802077a:	d008      	beq.n	802078e <HAL_RCC_ClockConfig+0x172>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 802077c:	4b19      	ldr	r3, [pc, #100]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 802077e:	689b      	ldr	r3, [r3, #8]
 8020780:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8020784:	687b      	ldr	r3, [r7, #4]
 8020786:	68db      	ldr	r3, [r3, #12]
 8020788:	4916      	ldr	r1, [pc, #88]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 802078a:	4313      	orrs	r3, r2
 802078c:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 802078e:	687b      	ldr	r3, [r7, #4]
 8020790:	681b      	ldr	r3, [r3, #0]
 8020792:	f003 0308 	and.w	r3, r3, #8
 8020796:	2b00      	cmp	r3, #0
 8020798:	d009      	beq.n	80207ae <HAL_RCC_ClockConfig+0x192>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 802079a:	4b12      	ldr	r3, [pc, #72]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 802079c:	689b      	ldr	r3, [r3, #8]
 802079e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80207a2:	687b      	ldr	r3, [r7, #4]
 80207a4:	691b      	ldr	r3, [r3, #16]
 80207a6:	00db      	lsls	r3, r3, #3
 80207a8:	490e      	ldr	r1, [pc, #56]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 80207aa:	4313      	orrs	r3, r2
 80207ac:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 80207ae:	f000 f821 	bl	80207f4 <HAL_RCC_GetSysClockFreq>
 80207b2:	4602      	mov	r2, r0
 80207b4:	4b0b      	ldr	r3, [pc, #44]	; (80207e4 <HAL_RCC_ClockConfig+0x1c8>)
 80207b6:	689b      	ldr	r3, [r3, #8]
 80207b8:	091b      	lsrs	r3, r3, #4
 80207ba:	f003 030f 	and.w	r3, r3, #15
 80207be:	490a      	ldr	r1, [pc, #40]	; (80207e8 <HAL_RCC_ClockConfig+0x1cc>)
 80207c0:	5ccb      	ldrb	r3, [r1, r3]
 80207c2:	fa22 f303 	lsr.w	r3, r2, r3
 80207c6:	4a09      	ldr	r2, [pc, #36]	; (80207ec <HAL_RCC_ClockConfig+0x1d0>)
 80207c8:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 80207ca:	4b09      	ldr	r3, [pc, #36]	; (80207f0 <HAL_RCC_ClockConfig+0x1d4>)
 80207cc:	681b      	ldr	r3, [r3, #0]
 80207ce:	4618      	mov	r0, r3
 80207d0:	f7ff f86c 	bl	801f8ac <HAL_InitTick>

  return HAL_OK;
 80207d4:	2300      	movs	r3, #0
}
 80207d6:	4618      	mov	r0, r3
 80207d8:	3710      	adds	r7, #16
 80207da:	46bd      	mov	sp, r7
 80207dc:	bd80      	pop	{r7, pc}
 80207de:	bf00      	nop
 80207e0:	40023c00 	.word	0x40023c00
 80207e4:	40023800 	.word	0x40023800
 80207e8:	08027e7c 	.word	0x08027e7c
 80207ec:	20000004 	.word	0x20000004
 80207f0:	20000008 	.word	0x20000008

080207f4 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80207f4:	b5b0      	push	{r4, r5, r7, lr}
 80207f6:	b084      	sub	sp, #16
 80207f8:	af00      	add	r7, sp, #0
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
 80207fa:	2100      	movs	r1, #0
 80207fc:	6079      	str	r1, [r7, #4]
 80207fe:	2100      	movs	r1, #0
 8020800:	60f9      	str	r1, [r7, #12]
 8020802:	2100      	movs	r1, #0
 8020804:	6039      	str	r1, [r7, #0]
  uint32_t sysclockfreq = 0;
 8020806:	2100      	movs	r1, #0
 8020808:	60b9      	str	r1, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 802080a:	4952      	ldr	r1, [pc, #328]	; (8020954 <HAL_RCC_GetSysClockFreq+0x160>)
 802080c:	6889      	ldr	r1, [r1, #8]
 802080e:	f001 010c 	and.w	r1, r1, #12
 8020812:	2908      	cmp	r1, #8
 8020814:	d00d      	beq.n	8020832 <HAL_RCC_GetSysClockFreq+0x3e>
 8020816:	2908      	cmp	r1, #8
 8020818:	f200 8094 	bhi.w	8020944 <HAL_RCC_GetSysClockFreq+0x150>
 802081c:	2900      	cmp	r1, #0
 802081e:	d002      	beq.n	8020826 <HAL_RCC_GetSysClockFreq+0x32>
 8020820:	2904      	cmp	r1, #4
 8020822:	d003      	beq.n	802082c <HAL_RCC_GetSysClockFreq+0x38>
 8020824:	e08e      	b.n	8020944 <HAL_RCC_GetSysClockFreq+0x150>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8020826:	4b4c      	ldr	r3, [pc, #304]	; (8020958 <HAL_RCC_GetSysClockFreq+0x164>)
 8020828:	60bb      	str	r3, [r7, #8]
      break;
 802082a:	e08e      	b.n	802094a <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 802082c:	4b4b      	ldr	r3, [pc, #300]	; (802095c <HAL_RCC_GetSysClockFreq+0x168>)
 802082e:	60bb      	str	r3, [r7, #8]
      break;
 8020830:	e08b      	b.n	802094a <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8020832:	4948      	ldr	r1, [pc, #288]	; (8020954 <HAL_RCC_GetSysClockFreq+0x160>)
 8020834:	6849      	ldr	r1, [r1, #4]
 8020836:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 802083a:	6079      	str	r1, [r7, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 802083c:	4945      	ldr	r1, [pc, #276]	; (8020954 <HAL_RCC_GetSysClockFreq+0x160>)
 802083e:	6849      	ldr	r1, [r1, #4]
 8020840:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 8020844:	2900      	cmp	r1, #0
 8020846:	d024      	beq.n	8020892 <HAL_RCC_GetSysClockFreq+0x9e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8020848:	4942      	ldr	r1, [pc, #264]	; (8020954 <HAL_RCC_GetSysClockFreq+0x160>)
 802084a:	6849      	ldr	r1, [r1, #4]
 802084c:	0989      	lsrs	r1, r1, #6
 802084e:	4608      	mov	r0, r1
 8020850:	f04f 0100 	mov.w	r1, #0
 8020854:	f240 14ff 	movw	r4, #511	; 0x1ff
 8020858:	f04f 0500 	mov.w	r5, #0
 802085c:	ea00 0204 	and.w	r2, r0, r4
 8020860:	ea01 0305 	and.w	r3, r1, r5
 8020864:	493d      	ldr	r1, [pc, #244]	; (802095c <HAL_RCC_GetSysClockFreq+0x168>)
 8020866:	fb01 f003 	mul.w	r0, r1, r3
 802086a:	2100      	movs	r1, #0
 802086c:	fb01 f102 	mul.w	r1, r1, r2
 8020870:	1844      	adds	r4, r0, r1
 8020872:	493a      	ldr	r1, [pc, #232]	; (802095c <HAL_RCC_GetSysClockFreq+0x168>)
 8020874:	fba2 0101 	umull	r0, r1, r2, r1
 8020878:	1863      	adds	r3, r4, r1
 802087a:	4619      	mov	r1, r3
 802087c:	687b      	ldr	r3, [r7, #4]
 802087e:	461a      	mov	r2, r3
 8020880:	f04f 0300 	mov.w	r3, #0
 8020884:	f7e0 fa20 	bl	8000cc8 <__aeabi_uldivmod>
 8020888:	4602      	mov	r2, r0
 802088a:	460b      	mov	r3, r1
 802088c:	4613      	mov	r3, r2
 802088e:	60fb      	str	r3, [r7, #12]
 8020890:	e04a      	b.n	8020928 <HAL_RCC_GetSysClockFreq+0x134>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8020892:	4b30      	ldr	r3, [pc, #192]	; (8020954 <HAL_RCC_GetSysClockFreq+0x160>)
 8020894:	685b      	ldr	r3, [r3, #4]
 8020896:	099b      	lsrs	r3, r3, #6
 8020898:	461a      	mov	r2, r3
 802089a:	f04f 0300 	mov.w	r3, #0
 802089e:	f240 10ff 	movw	r0, #511	; 0x1ff
 80208a2:	f04f 0100 	mov.w	r1, #0
 80208a6:	ea02 0400 	and.w	r4, r2, r0
 80208aa:	ea03 0501 	and.w	r5, r3, r1
 80208ae:	4620      	mov	r0, r4
 80208b0:	4629      	mov	r1, r5
 80208b2:	f04f 0200 	mov.w	r2, #0
 80208b6:	f04f 0300 	mov.w	r3, #0
 80208ba:	014b      	lsls	r3, r1, #5
 80208bc:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 80208c0:	0142      	lsls	r2, r0, #5
 80208c2:	4610      	mov	r0, r2
 80208c4:	4619      	mov	r1, r3
 80208c6:	1b00      	subs	r0, r0, r4
 80208c8:	eb61 0105 	sbc.w	r1, r1, r5
 80208cc:	f04f 0200 	mov.w	r2, #0
 80208d0:	f04f 0300 	mov.w	r3, #0
 80208d4:	018b      	lsls	r3, r1, #6
 80208d6:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 80208da:	0182      	lsls	r2, r0, #6
 80208dc:	1a12      	subs	r2, r2, r0
 80208de:	eb63 0301 	sbc.w	r3, r3, r1
 80208e2:	f04f 0000 	mov.w	r0, #0
 80208e6:	f04f 0100 	mov.w	r1, #0
 80208ea:	00d9      	lsls	r1, r3, #3
 80208ec:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80208f0:	00d0      	lsls	r0, r2, #3
 80208f2:	4602      	mov	r2, r0
 80208f4:	460b      	mov	r3, r1
 80208f6:	1912      	adds	r2, r2, r4
 80208f8:	eb45 0303 	adc.w	r3, r5, r3
 80208fc:	f04f 0000 	mov.w	r0, #0
 8020900:	f04f 0100 	mov.w	r1, #0
 8020904:	0299      	lsls	r1, r3, #10
 8020906:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 802090a:	0290      	lsls	r0, r2, #10
 802090c:	4602      	mov	r2, r0
 802090e:	460b      	mov	r3, r1
 8020910:	4610      	mov	r0, r2
 8020912:	4619      	mov	r1, r3
 8020914:	687b      	ldr	r3, [r7, #4]
 8020916:	461a      	mov	r2, r3
 8020918:	f04f 0300 	mov.w	r3, #0
 802091c:	f7e0 f9d4 	bl	8000cc8 <__aeabi_uldivmod>
 8020920:	4602      	mov	r2, r0
 8020922:	460b      	mov	r3, r1
 8020924:	4613      	mov	r3, r2
 8020926:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8020928:	4b0a      	ldr	r3, [pc, #40]	; (8020954 <HAL_RCC_GetSysClockFreq+0x160>)
 802092a:	685b      	ldr	r3, [r3, #4]
 802092c:	0c1b      	lsrs	r3, r3, #16
 802092e:	f003 0303 	and.w	r3, r3, #3
 8020932:	3301      	adds	r3, #1
 8020934:	005b      	lsls	r3, r3, #1
 8020936:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco / pllp;
 8020938:	68fa      	ldr	r2, [r7, #12]
 802093a:	683b      	ldr	r3, [r7, #0]
 802093c:	fbb2 f3f3 	udiv	r3, r2, r3
 8020940:	60bb      	str	r3, [r7, #8]
      break;
 8020942:	e002      	b.n	802094a <HAL_RCC_GetSysClockFreq+0x156>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8020944:	4b04      	ldr	r3, [pc, #16]	; (8020958 <HAL_RCC_GetSysClockFreq+0x164>)
 8020946:	60bb      	str	r3, [r7, #8]
      break;
 8020948:	bf00      	nop
    }
  }
  return sysclockfreq;
 802094a:	68bb      	ldr	r3, [r7, #8]
}
 802094c:	4618      	mov	r0, r3
 802094e:	3710      	adds	r7, #16
 8020950:	46bd      	mov	sp, r7
 8020952:	bdb0      	pop	{r4, r5, r7, pc}
 8020954:	40023800 	.word	0x40023800
 8020958:	00f42400 	.word	0x00f42400
 802095c:	017d7840 	.word	0x017d7840

08020960 <HAL_RCC_GetHCLKFreq>:
  *         right HCLK value. Otherwise, any configuration based on this function will be incorrect.
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8020960:	b480      	push	{r7}
 8020962:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8020964:	4b03      	ldr	r3, [pc, #12]	; (8020974 <HAL_RCC_GetHCLKFreq+0x14>)
 8020966:	681b      	ldr	r3, [r3, #0]
}
 8020968:	4618      	mov	r0, r3
 802096a:	46bd      	mov	sp, r7
 802096c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020970:	4770      	bx	lr
 8020972:	bf00      	nop
 8020974:	20000004 	.word	0x20000004

08020978 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8020978:	b580      	push	{r7, lr}
 802097a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 802097c:	f7ff fff0 	bl	8020960 <HAL_RCC_GetHCLKFreq>
 8020980:	4602      	mov	r2, r0
 8020982:	4b05      	ldr	r3, [pc, #20]	; (8020998 <HAL_RCC_GetPCLK1Freq+0x20>)
 8020984:	689b      	ldr	r3, [r3, #8]
 8020986:	0a9b      	lsrs	r3, r3, #10
 8020988:	f003 0307 	and.w	r3, r3, #7
 802098c:	4903      	ldr	r1, [pc, #12]	; (802099c <HAL_RCC_GetPCLK1Freq+0x24>)
 802098e:	5ccb      	ldrb	r3, [r1, r3]
 8020990:	fa22 f303 	lsr.w	r3, r2, r3
}
 8020994:	4618      	mov	r0, r3
 8020996:	bd80      	pop	{r7, pc}
 8020998:	40023800 	.word	0x40023800
 802099c:	08027e8c 	.word	0x08027e8c

080209a0 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 80209a0:	b580      	push	{r7, lr}
 80209a2:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 80209a4:	f7ff ffdc 	bl	8020960 <HAL_RCC_GetHCLKFreq>
 80209a8:	4602      	mov	r2, r0
 80209aa:	4b05      	ldr	r3, [pc, #20]	; (80209c0 <HAL_RCC_GetPCLK2Freq+0x20>)
 80209ac:	689b      	ldr	r3, [r3, #8]
 80209ae:	0b5b      	lsrs	r3, r3, #13
 80209b0:	f003 0307 	and.w	r3, r3, #7
 80209b4:	4903      	ldr	r1, [pc, #12]	; (80209c4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80209b6:	5ccb      	ldrb	r3, [r1, r3]
 80209b8:	fa22 f303 	lsr.w	r3, r2, r3
}
 80209bc:	4618      	mov	r0, r3
 80209be:	bd80      	pop	{r7, pc}
 80209c0:	40023800 	.word	0x40023800
 80209c4:	08027e8c 	.word	0x08027e8c

080209c8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80209c8:	b580      	push	{r7, lr}
 80209ca:	b088      	sub	sp, #32
 80209cc:	af00      	add	r7, sp, #0
 80209ce:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0;
 80209d0:	2300      	movs	r3, #0
 80209d2:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg0 = 0;
 80209d4:	2300      	movs	r3, #0
 80209d6:	613b      	str	r3, [r7, #16]
  uint32_t tmpreg1 = 0;
 80209d8:	2300      	movs	r3, #0
 80209da:	60fb      	str	r3, [r7, #12]
  uint32_t plli2sused = 0;
 80209dc:	2300      	movs	r3, #0
 80209de:	61fb      	str	r3, [r7, #28]
  uint32_t pllsaiused = 0;
 80209e0:	2300      	movs	r3, #0
 80209e2:	61bb      	str	r3, [r7, #24]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80209e4:	687b      	ldr	r3, [r7, #4]
 80209e6:	681b      	ldr	r3, [r3, #0]
 80209e8:	f003 0301 	and.w	r3, r3, #1
 80209ec:	2b00      	cmp	r3, #0
 80209ee:	d012      	beq.n	8020a16 <HAL_RCCEx_PeriphCLKConfig+0x4e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 80209f0:	4b69      	ldr	r3, [pc, #420]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80209f2:	689b      	ldr	r3, [r3, #8]
 80209f4:	4a68      	ldr	r2, [pc, #416]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80209f6:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80209fa:	6093      	str	r3, [r2, #8]
 80209fc:	4b66      	ldr	r3, [pc, #408]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80209fe:	689a      	ldr	r2, [r3, #8]
 8020a00:	687b      	ldr	r3, [r7, #4]
 8020a02:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8020a04:	4964      	ldr	r1, [pc, #400]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020a06:	4313      	orrs	r3, r2
 8020a08:	608b      	str	r3, [r1, #8]

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8020a0a:	687b      	ldr	r3, [r7, #4]
 8020a0c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8020a0e:	2b00      	cmp	r3, #0
 8020a10:	d101      	bne.n	8020a16 <HAL_RCCEx_PeriphCLKConfig+0x4e>
    {
      plli2sused = 1;
 8020a12:	2301      	movs	r3, #1
 8020a14:	61fb      	str	r3, [r7, #28]
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 8020a16:	687b      	ldr	r3, [r7, #4]
 8020a18:	681b      	ldr	r3, [r3, #0]
 8020a1a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8020a1e:	2b00      	cmp	r3, #0
 8020a20:	d017      	beq.n	8020a52 <HAL_RCCEx_PeriphCLKConfig+0x8a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8020a22:	4b5d      	ldr	r3, [pc, #372]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020a24:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8020a28:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8020a2c:	687b      	ldr	r3, [r7, #4]
 8020a2e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8020a30:	4959      	ldr	r1, [pc, #356]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020a32:	4313      	orrs	r3, r2
 8020a34:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8020a38:	687b      	ldr	r3, [r7, #4]
 8020a3a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8020a3c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8020a40:	d101      	bne.n	8020a46 <HAL_RCCEx_PeriphCLKConfig+0x7e>
    {
      plli2sused = 1;
 8020a42:	2301      	movs	r3, #1
 8020a44:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8020a46:	687b      	ldr	r3, [r7, #4]
 8020a48:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8020a4a:	2b00      	cmp	r3, #0
 8020a4c:	d101      	bne.n	8020a52 <HAL_RCCEx_PeriphCLKConfig+0x8a>
    {
      pllsaiused = 1;
 8020a4e:	2301      	movs	r3, #1
 8020a50:	61bb      	str	r3, [r7, #24]
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8020a52:	687b      	ldr	r3, [r7, #4]
 8020a54:	681b      	ldr	r3, [r3, #0]
 8020a56:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8020a5a:	2b00      	cmp	r3, #0
 8020a5c:	d017      	beq.n	8020a8e <HAL_RCCEx_PeriphCLKConfig+0xc6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8020a5e:	4b4e      	ldr	r3, [pc, #312]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020a60:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8020a64:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8020a68:	687b      	ldr	r3, [r7, #4]
 8020a6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020a6c:	494a      	ldr	r1, [pc, #296]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020a6e:	4313      	orrs	r3, r2
 8020a70:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8020a74:	687b      	ldr	r3, [r7, #4]
 8020a76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020a78:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8020a7c:	d101      	bne.n	8020a82 <HAL_RCCEx_PeriphCLKConfig+0xba>
    {
      plli2sused = 1;
 8020a7e:	2301      	movs	r3, #1
 8020a80:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
 8020a82:	687b      	ldr	r3, [r7, #4]
 8020a84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020a86:	2b00      	cmp	r3, #0
 8020a88:	d101      	bne.n	8020a8e <HAL_RCCEx_PeriphCLKConfig+0xc6>
    {
      pllsaiused = 1;
 8020a8a:	2301      	movs	r3, #1
 8020a8c:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8020a8e:	687b      	ldr	r3, [r7, #4]
 8020a90:	681b      	ldr	r3, [r3, #0]
 8020a92:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8020a96:	2b00      	cmp	r3, #0
 8020a98:	d001      	beq.n	8020a9e <HAL_RCCEx_PeriphCLKConfig+0xd6>
  {
      plli2sused = 1;
 8020a9a:	2301      	movs	r3, #1
 8020a9c:	61fb      	str	r3, [r7, #28]
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8020a9e:	687b      	ldr	r3, [r7, #4]
 8020aa0:	681b      	ldr	r3, [r3, #0]
 8020aa2:	f003 0320 	and.w	r3, r3, #32
 8020aa6:	2b00      	cmp	r3, #0
 8020aa8:	f000 808b 	beq.w	8020bc2 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8020aac:	4b3a      	ldr	r3, [pc, #232]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020aae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020ab0:	4a39      	ldr	r2, [pc, #228]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020ab2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8020ab6:	6413      	str	r3, [r2, #64]	; 0x40
 8020ab8:	4b37      	ldr	r3, [pc, #220]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020aba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020abc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8020ac0:	60bb      	str	r3, [r7, #8]
 8020ac2:	68bb      	ldr	r3, [r7, #8]

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8020ac4:	4b35      	ldr	r3, [pc, #212]	; (8020b9c <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8020ac6:	681b      	ldr	r3, [r3, #0]
 8020ac8:	4a34      	ldr	r2, [pc, #208]	; (8020b9c <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8020aca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8020ace:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8020ad0:	f7fe ff30 	bl	801f934 <HAL_GetTick>
 8020ad4:	6178      	str	r0, [r7, #20]

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8020ad6:	e008      	b.n	8020aea <HAL_RCCEx_PeriphCLKConfig+0x122>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8020ad8:	f7fe ff2c 	bl	801f934 <HAL_GetTick>
 8020adc:	4602      	mov	r2, r0
 8020ade:	697b      	ldr	r3, [r7, #20]
 8020ae0:	1ad3      	subs	r3, r2, r3
 8020ae2:	2b64      	cmp	r3, #100	; 0x64
 8020ae4:	d901      	bls.n	8020aea <HAL_RCCEx_PeriphCLKConfig+0x122>
      {
        return HAL_TIMEOUT;
 8020ae6:	2303      	movs	r3, #3
 8020ae8:	e357      	b.n	802119a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8020aea:	4b2c      	ldr	r3, [pc, #176]	; (8020b9c <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8020aec:	681b      	ldr	r3, [r3, #0]
 8020aee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8020af2:	2b00      	cmp	r3, #0
 8020af4:	d0f0      	beq.n	8020ad8 <HAL_RCCEx_PeriphCLKConfig+0x110>
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8020af6:	4b28      	ldr	r3, [pc, #160]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020af8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020afa:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8020afe:	613b      	str	r3, [r7, #16]

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8020b00:	693b      	ldr	r3, [r7, #16]
 8020b02:	2b00      	cmp	r3, #0
 8020b04:	d035      	beq.n	8020b72 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8020b06:	687b      	ldr	r3, [r7, #4]
 8020b08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020b0a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8020b0e:	693a      	ldr	r2, [r7, #16]
 8020b10:	429a      	cmp	r2, r3
 8020b12:	d02e      	beq.n	8020b72 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8020b14:	4b20      	ldr	r3, [pc, #128]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020b16:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020b18:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8020b1c:	613b      	str	r3, [r7, #16]

      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8020b1e:	4b1e      	ldr	r3, [pc, #120]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020b20:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020b22:	4a1d      	ldr	r2, [pc, #116]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020b24:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8020b28:	6713      	str	r3, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8020b2a:	4b1b      	ldr	r3, [pc, #108]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020b2c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020b2e:	4a1a      	ldr	r2, [pc, #104]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020b30:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8020b34:	6713      	str	r3, [r2, #112]	; 0x70

      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg0;
 8020b36:	4a18      	ldr	r2, [pc, #96]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020b38:	693b      	ldr	r3, [r7, #16]
 8020b3a:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8020b3c:	4b16      	ldr	r3, [pc, #88]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020b3e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020b40:	f003 0301 	and.w	r3, r3, #1
 8020b44:	2b01      	cmp	r3, #1
 8020b46:	d114      	bne.n	8020b72 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020b48:	f7fe fef4 	bl	801f934 <HAL_GetTick>
 8020b4c:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8020b4e:	e00a      	b.n	8020b66 <HAL_RCCEx_PeriphCLKConfig+0x19e>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8020b50:	f7fe fef0 	bl	801f934 <HAL_GetTick>
 8020b54:	4602      	mov	r2, r0
 8020b56:	697b      	ldr	r3, [r7, #20]
 8020b58:	1ad3      	subs	r3, r2, r3
 8020b5a:	f241 3288 	movw	r2, #5000	; 0x1388
 8020b5e:	4293      	cmp	r3, r2
 8020b60:	d901      	bls.n	8020b66 <HAL_RCCEx_PeriphCLKConfig+0x19e>
          {
            return HAL_TIMEOUT;
 8020b62:	2303      	movs	r3, #3
 8020b64:	e319      	b.n	802119a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8020b66:	4b0c      	ldr	r3, [pc, #48]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020b68:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020b6a:	f003 0302 	and.w	r3, r3, #2
 8020b6e:	2b00      	cmp	r3, #0
 8020b70:	d0ee      	beq.n	8020b50 <HAL_RCCEx_PeriphCLKConfig+0x188>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8020b72:	687b      	ldr	r3, [r7, #4]
 8020b74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020b76:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8020b7a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8020b7e:	d111      	bne.n	8020ba4 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8020b80:	4b05      	ldr	r3, [pc, #20]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020b82:	689b      	ldr	r3, [r3, #8]
 8020b84:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8020b88:	687b      	ldr	r3, [r7, #4]
 8020b8a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8020b8c:	4b04      	ldr	r3, [pc, #16]	; (8020ba0 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8020b8e:	400b      	ands	r3, r1
 8020b90:	4901      	ldr	r1, [pc, #4]	; (8020b98 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020b92:	4313      	orrs	r3, r2
 8020b94:	608b      	str	r3, [r1, #8]
 8020b96:	e00b      	b.n	8020bb0 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8020b98:	40023800 	.word	0x40023800
 8020b9c:	40007000 	.word	0x40007000
 8020ba0:	0ffffcff 	.word	0x0ffffcff
 8020ba4:	4bb1      	ldr	r3, [pc, #708]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020ba6:	689b      	ldr	r3, [r3, #8]
 8020ba8:	4ab0      	ldr	r2, [pc, #704]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020baa:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8020bae:	6093      	str	r3, [r2, #8]
 8020bb0:	4bae      	ldr	r3, [pc, #696]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020bb2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8020bb4:	687b      	ldr	r3, [r7, #4]
 8020bb6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020bb8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8020bbc:	49ab      	ldr	r1, [pc, #684]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020bbe:	4313      	orrs	r3, r2
 8020bc0:	670b      	str	r3, [r1, #112]	; 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8020bc2:	687b      	ldr	r3, [r7, #4]
 8020bc4:	681b      	ldr	r3, [r3, #0]
 8020bc6:	f003 0310 	and.w	r3, r3, #16
 8020bca:	2b00      	cmp	r3, #0
 8020bcc:	d010      	beq.n	8020bf0 <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8020bce:	4ba7      	ldr	r3, [pc, #668]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020bd0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8020bd4:	4aa5      	ldr	r2, [pc, #660]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020bd6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8020bda:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8020bde:	4ba3      	ldr	r3, [pc, #652]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020be0:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8020be4:	687b      	ldr	r3, [r7, #4]
 8020be6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020be8:	49a0      	ldr	r1, [pc, #640]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020bea:	4313      	orrs	r3, r2
 8020bec:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8020bf0:	687b      	ldr	r3, [r7, #4]
 8020bf2:	681b      	ldr	r3, [r3, #0]
 8020bf4:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8020bf8:	2b00      	cmp	r3, #0
 8020bfa:	d00a      	beq.n	8020c12 <HAL_RCCEx_PeriphCLKConfig+0x24a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8020bfc:	4b9b      	ldr	r3, [pc, #620]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020bfe:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020c02:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8020c06:	687b      	ldr	r3, [r7, #4]
 8020c08:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8020c0a:	4998      	ldr	r1, [pc, #608]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020c0c:	4313      	orrs	r3, r2
 8020c0e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8020c12:	687b      	ldr	r3, [r7, #4]
 8020c14:	681b      	ldr	r3, [r3, #0]
 8020c16:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8020c1a:	2b00      	cmp	r3, #0
 8020c1c:	d00a      	beq.n	8020c34 <HAL_RCCEx_PeriphCLKConfig+0x26c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8020c1e:	4b93      	ldr	r3, [pc, #588]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020c20:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020c24:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8020c28:	687b      	ldr	r3, [r7, #4]
 8020c2a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8020c2c:	498f      	ldr	r1, [pc, #572]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020c2e:	4313      	orrs	r3, r2
 8020c30:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8020c34:	687b      	ldr	r3, [r7, #4]
 8020c36:	681b      	ldr	r3, [r3, #0]
 8020c38:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8020c3c:	2b00      	cmp	r3, #0
 8020c3e:	d00a      	beq.n	8020c56 <HAL_RCCEx_PeriphCLKConfig+0x28e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8020c40:	4b8a      	ldr	r3, [pc, #552]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020c42:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020c46:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8020c4a:	687b      	ldr	r3, [r7, #4]
 8020c4c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8020c4e:	4987      	ldr	r1, [pc, #540]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020c50:	4313      	orrs	r3, r2
 8020c52:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8020c56:	687b      	ldr	r3, [r7, #4]
 8020c58:	681b      	ldr	r3, [r3, #0]
 8020c5a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020c5e:	2b00      	cmp	r3, #0
 8020c60:	d00a      	beq.n	8020c78 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8020c62:	4b82      	ldr	r3, [pc, #520]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020c64:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020c68:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8020c6c:	687b      	ldr	r3, [r7, #4]
 8020c6e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020c70:	497e      	ldr	r1, [pc, #504]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020c72:	4313      	orrs	r3, r2
 8020c74:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8020c78:	687b      	ldr	r3, [r7, #4]
 8020c7a:	681b      	ldr	r3, [r3, #0]
 8020c7c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8020c80:	2b00      	cmp	r3, #0
 8020c82:	d00a      	beq.n	8020c9a <HAL_RCCEx_PeriphCLKConfig+0x2d2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8020c84:	4b79      	ldr	r3, [pc, #484]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020c86:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020c8a:	f023 0203 	bic.w	r2, r3, #3
 8020c8e:	687b      	ldr	r3, [r7, #4]
 8020c90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8020c92:	4976      	ldr	r1, [pc, #472]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020c94:	4313      	orrs	r3, r2
 8020c96:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8020c9a:	687b      	ldr	r3, [r7, #4]
 8020c9c:	681b      	ldr	r3, [r3, #0]
 8020c9e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8020ca2:	2b00      	cmp	r3, #0
 8020ca4:	d00a      	beq.n	8020cbc <HAL_RCCEx_PeriphCLKConfig+0x2f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8020ca6:	4b71      	ldr	r3, [pc, #452]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020ca8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020cac:	f023 020c 	bic.w	r2, r3, #12
 8020cb0:	687b      	ldr	r3, [r7, #4]
 8020cb2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8020cb4:	496d      	ldr	r1, [pc, #436]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020cb6:	4313      	orrs	r3, r2
 8020cb8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8020cbc:	687b      	ldr	r3, [r7, #4]
 8020cbe:	681b      	ldr	r3, [r3, #0]
 8020cc0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8020cc4:	2b00      	cmp	r3, #0
 8020cc6:	d00a      	beq.n	8020cde <HAL_RCCEx_PeriphCLKConfig+0x316>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8020cc8:	4b68      	ldr	r3, [pc, #416]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020cca:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020cce:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8020cd2:	687b      	ldr	r3, [r7, #4]
 8020cd4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8020cd6:	4965      	ldr	r1, [pc, #404]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020cd8:	4313      	orrs	r3, r2
 8020cda:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8020cde:	687b      	ldr	r3, [r7, #4]
 8020ce0:	681b      	ldr	r3, [r3, #0]
 8020ce2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8020ce6:	2b00      	cmp	r3, #0
 8020ce8:	d00a      	beq.n	8020d00 <HAL_RCCEx_PeriphCLKConfig+0x338>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8020cea:	4b60      	ldr	r3, [pc, #384]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020cec:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020cf0:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8020cf4:	687b      	ldr	r3, [r7, #4]
 8020cf6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8020cf8:	495c      	ldr	r1, [pc, #368]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020cfa:	4313      	orrs	r3, r2
 8020cfc:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8020d00:	687b      	ldr	r3, [r7, #4]
 8020d02:	681b      	ldr	r3, [r3, #0]
 8020d04:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8020d08:	2b00      	cmp	r3, #0
 8020d0a:	d00a      	beq.n	8020d22 <HAL_RCCEx_PeriphCLKConfig+0x35a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8020d0c:	4b57      	ldr	r3, [pc, #348]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020d0e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020d12:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8020d16:	687b      	ldr	r3, [r7, #4]
 8020d18:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8020d1a:	4954      	ldr	r1, [pc, #336]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020d1c:	4313      	orrs	r3, r2
 8020d1e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8020d22:	687b      	ldr	r3, [r7, #4]
 8020d24:	681b      	ldr	r3, [r3, #0]
 8020d26:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8020d2a:	2b00      	cmp	r3, #0
 8020d2c:	d00a      	beq.n	8020d44 <HAL_RCCEx_PeriphCLKConfig+0x37c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 8020d2e:	4b4f      	ldr	r3, [pc, #316]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020d30:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020d34:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8020d38:	687b      	ldr	r3, [r7, #4]
 8020d3a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8020d3c:	494b      	ldr	r1, [pc, #300]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020d3e:	4313      	orrs	r3, r2
 8020d40:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8020d44:	687b      	ldr	r3, [r7, #4]
 8020d46:	681b      	ldr	r3, [r3, #0]
 8020d48:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8020d4c:	2b00      	cmp	r3, #0
 8020d4e:	d00a      	beq.n	8020d66 <HAL_RCCEx_PeriphCLKConfig+0x39e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8020d50:	4b46      	ldr	r3, [pc, #280]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020d52:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020d56:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8020d5a:	687b      	ldr	r3, [r7, #4]
 8020d5c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8020d5e:	4943      	ldr	r1, [pc, #268]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020d60:	4313      	orrs	r3, r2
 8020d62:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8020d66:	687b      	ldr	r3, [r7, #4]
 8020d68:	681b      	ldr	r3, [r3, #0]
 8020d6a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8020d6e:	2b00      	cmp	r3, #0
 8020d70:	d00a      	beq.n	8020d88 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8020d72:	4b3e      	ldr	r3, [pc, #248]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020d74:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020d78:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8020d7c:	687b      	ldr	r3, [r7, #4]
 8020d7e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8020d80:	493a      	ldr	r1, [pc, #232]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020d82:	4313      	orrs	r3, r2
 8020d84:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8020d88:	687b      	ldr	r3, [r7, #4]
 8020d8a:	681b      	ldr	r3, [r3, #0]
 8020d8c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8020d90:	2b00      	cmp	r3, #0
 8020d92:	d00a      	beq.n	8020daa <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8020d94:	4b35      	ldr	r3, [pc, #212]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020d96:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020d9a:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 8020d9e:	687b      	ldr	r3, [r7, #4]
 8020da0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8020da2:	4932      	ldr	r1, [pc, #200]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020da4:	4313      	orrs	r3, r2
 8020da6:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8020daa:	687b      	ldr	r3, [r7, #4]
 8020dac:	681b      	ldr	r3, [r3, #0]
 8020dae:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8020db2:	2b00      	cmp	r3, #0
 8020db4:	d011      	beq.n	8020dda <HAL_RCCEx_PeriphCLKConfig+0x412>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8020db6:	4b2d      	ldr	r3, [pc, #180]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020db8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020dbc:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 8020dc0:	687b      	ldr	r3, [r7, #4]
 8020dc2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8020dc4:	4929      	ldr	r1, [pc, #164]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020dc6:	4313      	orrs	r3, r2
 8020dc8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
 8020dcc:	687b      	ldr	r3, [r7, #4]
 8020dce:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8020dd0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8020dd4:	d101      	bne.n	8020dda <HAL_RCCEx_PeriphCLKConfig+0x412>
    {
      pllsaiused = 1;
 8020dd6:	2301      	movs	r3, #1
 8020dd8:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8020dda:	687b      	ldr	r3, [r7, #4]
 8020ddc:	681b      	ldr	r3, [r3, #0]
 8020dde:	f003 0308 	and.w	r3, r3, #8
 8020de2:	2b00      	cmp	r3, #0
 8020de4:	d001      	beq.n	8020dea <HAL_RCCEx_PeriphCLKConfig+0x422>
  {
    pllsaiused = 1;
 8020de6:	2301      	movs	r3, #1
 8020de8:	61bb      	str	r3, [r7, #24]
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8020dea:	687b      	ldr	r3, [r7, #4]
 8020dec:	681b      	ldr	r3, [r3, #0]
 8020dee:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8020df2:	2b00      	cmp	r3, #0
 8020df4:	d00a      	beq.n	8020e0c <HAL_RCCEx_PeriphCLKConfig+0x444>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8020df6:	4b1d      	ldr	r3, [pc, #116]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020df8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020dfc:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8020e00:	687b      	ldr	r3, [r7, #4]
 8020e02:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8020e04:	4919      	ldr	r1, [pc, #100]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020e06:	4313      	orrs	r3, r2
 8020e08:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8020e0c:	687b      	ldr	r3, [r7, #4]
 8020e0e:	681b      	ldr	r3, [r3, #0]
 8020e10:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8020e14:	2b00      	cmp	r3, #0
 8020e16:	d00b      	beq.n	8020e30 <HAL_RCCEx_PeriphCLKConfig+0x468>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8020e18:	4b14      	ldr	r3, [pc, #80]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020e1a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020e1e:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8020e22:	687b      	ldr	r3, [r7, #4]
 8020e24:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8020e28:	4910      	ldr	r1, [pc, #64]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020e2a:	4313      	orrs	r3, r2
 8020e2c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8020e30:	69fb      	ldr	r3, [r7, #28]
 8020e32:	2b01      	cmp	r3, #1
 8020e34:	d006      	beq.n	8020e44 <HAL_RCCEx_PeriphCLKConfig+0x47c>
 8020e36:	687b      	ldr	r3, [r7, #4]
 8020e38:	681b      	ldr	r3, [r3, #0]
 8020e3a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8020e3e:	2b00      	cmp	r3, #0
 8020e40:	f000 80d9 	beq.w	8020ff6 <HAL_RCCEx_PeriphCLKConfig+0x62e>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8020e44:	4b09      	ldr	r3, [pc, #36]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020e46:	681b      	ldr	r3, [r3, #0]
 8020e48:	4a08      	ldr	r2, [pc, #32]	; (8020e6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020e4a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8020e4e:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8020e50:	f7fe fd70 	bl	801f934 <HAL_GetTick>
 8020e54:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8020e56:	e00b      	b.n	8020e70 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8020e58:	f7fe fd6c 	bl	801f934 <HAL_GetTick>
 8020e5c:	4602      	mov	r2, r0
 8020e5e:	697b      	ldr	r3, [r7, #20]
 8020e60:	1ad3      	subs	r3, r2, r3
 8020e62:	2b64      	cmp	r3, #100	; 0x64
 8020e64:	d904      	bls.n	8020e70 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8020e66:	2303      	movs	r3, #3
 8020e68:	e197      	b.n	802119a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8020e6a:	bf00      	nop
 8020e6c:	40023800 	.word	0x40023800
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8020e70:	4b6c      	ldr	r3, [pc, #432]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020e72:	681b      	ldr	r3, [r3, #0]
 8020e74:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8020e78:	2b00      	cmp	r3, #0
 8020e7a:	d1ed      	bne.n	8020e58 <HAL_RCCEx_PeriphCLKConfig+0x490>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8020e7c:	687b      	ldr	r3, [r7, #4]
 8020e7e:	681b      	ldr	r3, [r3, #0]
 8020e80:	f003 0301 	and.w	r3, r3, #1
 8020e84:	2b00      	cmp	r3, #0
 8020e86:	d021      	beq.n	8020ecc <HAL_RCCEx_PeriphCLKConfig+0x504>
 8020e88:	687b      	ldr	r3, [r7, #4]
 8020e8a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8020e8c:	2b00      	cmp	r3, #0
 8020e8e:	d11d      	bne.n	8020ecc <HAL_RCCEx_PeriphCLKConfig+0x504>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8020e90:	4b64      	ldr	r3, [pc, #400]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020e92:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8020e96:	0c1b      	lsrs	r3, r3, #16
 8020e98:	f003 0303 	and.w	r3, r3, #3
 8020e9c:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8020e9e:	4b61      	ldr	r3, [pc, #388]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020ea0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8020ea4:	0e1b      	lsrs	r3, r3, #24
 8020ea6:	f003 030f 	and.w	r3, r3, #15
 8020eaa:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8020eac:	687b      	ldr	r3, [r7, #4]
 8020eae:	685b      	ldr	r3, [r3, #4]
 8020eb0:	019a      	lsls	r2, r3, #6
 8020eb2:	693b      	ldr	r3, [r7, #16]
 8020eb4:	041b      	lsls	r3, r3, #16
 8020eb6:	431a      	orrs	r2, r3
 8020eb8:	68fb      	ldr	r3, [r7, #12]
 8020eba:	061b      	lsls	r3, r3, #24
 8020ebc:	431a      	orrs	r2, r3
 8020ebe:	687b      	ldr	r3, [r7, #4]
 8020ec0:	689b      	ldr	r3, [r3, #8]
 8020ec2:	071b      	lsls	r3, r3, #28
 8020ec4:	4957      	ldr	r1, [pc, #348]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020ec6:	4313      	orrs	r3, r2
 8020ec8:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8020ecc:	687b      	ldr	r3, [r7, #4]
 8020ece:	681b      	ldr	r3, [r3, #0]
 8020ed0:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8020ed4:	2b00      	cmp	r3, #0
 8020ed6:	d004      	beq.n	8020ee2 <HAL_RCCEx_PeriphCLKConfig+0x51a>
 8020ed8:	687b      	ldr	r3, [r7, #4]
 8020eda:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8020edc:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8020ee0:	d00a      	beq.n	8020ef8 <HAL_RCCEx_PeriphCLKConfig+0x530>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8020ee2:	687b      	ldr	r3, [r7, #4]
 8020ee4:	681b      	ldr	r3, [r3, #0]
 8020ee6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8020eea:	2b00      	cmp	r3, #0
 8020eec:	d02e      	beq.n	8020f4c <HAL_RCCEx_PeriphCLKConfig+0x584>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8020eee:	687b      	ldr	r3, [r7, #4]
 8020ef0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020ef2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8020ef6:	d129      	bne.n	8020f4c <HAL_RCCEx_PeriphCLKConfig+0x584>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      /* Check for PLLI2S/DIVQ parameters */
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SP and PLLI2SR values from PLLI2SCFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8020ef8:	4b4a      	ldr	r3, [pc, #296]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020efa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8020efe:	0c1b      	lsrs	r3, r3, #16
 8020f00:	f003 0303 	and.w	r3, r3, #3
 8020f04:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8020f06:	4b47      	ldr	r3, [pc, #284]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020f08:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8020f0c:	0f1b      	lsrs	r3, r3, #28
 8020f0e:	f003 0307 	and.w	r3, r3, #7
 8020f12:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8020f14:	687b      	ldr	r3, [r7, #4]
 8020f16:	685b      	ldr	r3, [r3, #4]
 8020f18:	019a      	lsls	r2, r3, #6
 8020f1a:	693b      	ldr	r3, [r7, #16]
 8020f1c:	041b      	lsls	r3, r3, #16
 8020f1e:	431a      	orrs	r2, r3
 8020f20:	687b      	ldr	r3, [r7, #4]
 8020f22:	68db      	ldr	r3, [r3, #12]
 8020f24:	061b      	lsls	r3, r3, #24
 8020f26:	431a      	orrs	r2, r3
 8020f28:	68fb      	ldr	r3, [r7, #12]
 8020f2a:	071b      	lsls	r3, r3, #28
 8020f2c:	493d      	ldr	r1, [pc, #244]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020f2e:	4313      	orrs	r3, r2
 8020f30:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84

      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8020f34:	4b3b      	ldr	r3, [pc, #236]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020f36:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8020f3a:	f023 021f 	bic.w	r2, r3, #31
 8020f3e:	687b      	ldr	r3, [r7, #4]
 8020f40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8020f42:	3b01      	subs	r3, #1
 8020f44:	4937      	ldr	r1, [pc, #220]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020f46:	4313      	orrs	r3, r2
 8020f48:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8020f4c:	687b      	ldr	r3, [r7, #4]
 8020f4e:	681b      	ldr	r3, [r3, #0]
 8020f50:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8020f54:	2b00      	cmp	r3, #0
 8020f56:	d01d      	beq.n	8020f94 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8020f58:	4b32      	ldr	r3, [pc, #200]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020f5a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8020f5e:	0e1b      	lsrs	r3, r3, #24
 8020f60:	f003 030f 	and.w	r3, r3, #15
 8020f64:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8020f66:	4b2f      	ldr	r3, [pc, #188]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020f68:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8020f6c:	0f1b      	lsrs	r3, r3, #28
 8020f6e:	f003 0307 	and.w	r3, r3, #7
 8020f72:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8020f74:	687b      	ldr	r3, [r7, #4]
 8020f76:	685b      	ldr	r3, [r3, #4]
 8020f78:	019a      	lsls	r2, r3, #6
 8020f7a:	687b      	ldr	r3, [r7, #4]
 8020f7c:	691b      	ldr	r3, [r3, #16]
 8020f7e:	041b      	lsls	r3, r3, #16
 8020f80:	431a      	orrs	r2, r3
 8020f82:	693b      	ldr	r3, [r7, #16]
 8020f84:	061b      	lsls	r3, r3, #24
 8020f86:	431a      	orrs	r2, r3
 8020f88:	68fb      	ldr	r3, [r7, #12]
 8020f8a:	071b      	lsls	r3, r3, #28
 8020f8c:	4925      	ldr	r1, [pc, #148]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020f8e:	4313      	orrs	r3, r2
 8020f90:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8020f94:	687b      	ldr	r3, [r7, #4]
 8020f96:	681b      	ldr	r3, [r3, #0]
 8020f98:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8020f9c:	2b00      	cmp	r3, #0
 8020f9e:	d011      	beq.n	8020fc4 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));

      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLI2SM) */
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8020fa0:	687b      	ldr	r3, [r7, #4]
 8020fa2:	685b      	ldr	r3, [r3, #4]
 8020fa4:	019a      	lsls	r2, r3, #6
 8020fa6:	687b      	ldr	r3, [r7, #4]
 8020fa8:	691b      	ldr	r3, [r3, #16]
 8020faa:	041b      	lsls	r3, r3, #16
 8020fac:	431a      	orrs	r2, r3
 8020fae:	687b      	ldr	r3, [r7, #4]
 8020fb0:	68db      	ldr	r3, [r3, #12]
 8020fb2:	061b      	lsls	r3, r3, #24
 8020fb4:	431a      	orrs	r2, r3
 8020fb6:	687b      	ldr	r3, [r7, #4]
 8020fb8:	689b      	ldr	r3, [r3, #8]
 8020fba:	071b      	lsls	r3, r3, #28
 8020fbc:	4919      	ldr	r1, [pc, #100]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020fbe:	4313      	orrs	r3, r2
 8020fc0:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8020fc4:	4b17      	ldr	r3, [pc, #92]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020fc6:	681b      	ldr	r3, [r3, #0]
 8020fc8:	4a16      	ldr	r2, [pc, #88]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020fca:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8020fce:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8020fd0:	f7fe fcb0 	bl	801f934 <HAL_GetTick>
 8020fd4:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8020fd6:	e008      	b.n	8020fea <HAL_RCCEx_PeriphCLKConfig+0x622>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8020fd8:	f7fe fcac 	bl	801f934 <HAL_GetTick>
 8020fdc:	4602      	mov	r2, r0
 8020fde:	697b      	ldr	r3, [r7, #20]
 8020fe0:	1ad3      	subs	r3, r2, r3
 8020fe2:	2b64      	cmp	r3, #100	; 0x64
 8020fe4:	d901      	bls.n	8020fea <HAL_RCCEx_PeriphCLKConfig+0x622>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8020fe6:	2303      	movs	r3, #3
 8020fe8:	e0d7      	b.n	802119a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8020fea:	4b0e      	ldr	r3, [pc, #56]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8020fec:	681b      	ldr	r3, [r3, #0]
 8020fee:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8020ff2:	2b00      	cmp	r3, #0
 8020ff4:	d0f0      	beq.n	8020fd8 <HAL_RCCEx_PeriphCLKConfig+0x610>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8020ff6:	69bb      	ldr	r3, [r7, #24]
 8020ff8:	2b01      	cmp	r3, #1
 8020ffa:	f040 80cd 	bne.w	8021198 <HAL_RCCEx_PeriphCLKConfig+0x7d0>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8020ffe:	4b09      	ldr	r3, [pc, #36]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021000:	681b      	ldr	r3, [r3, #0]
 8021002:	4a08      	ldr	r2, [pc, #32]	; (8021024 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021004:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8021008:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 802100a:	f7fe fc93 	bl	801f934 <HAL_GetTick>
 802100e:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8021010:	e00a      	b.n	8021028 <HAL_RCCEx_PeriphCLKConfig+0x660>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8021012:	f7fe fc8f 	bl	801f934 <HAL_GetTick>
 8021016:	4602      	mov	r2, r0
 8021018:	697b      	ldr	r3, [r7, #20]
 802101a:	1ad3      	subs	r3, r2, r3
 802101c:	2b64      	cmp	r3, #100	; 0x64
 802101e:	d903      	bls.n	8021028 <HAL_RCCEx_PeriphCLKConfig+0x660>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8021020:	2303      	movs	r3, #3
 8021022:	e0ba      	b.n	802119a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8021024:	40023800 	.word	0x40023800
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8021028:	4b5e      	ldr	r3, [pc, #376]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 802102a:	681b      	ldr	r3, [r3, #0]
 802102c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8021030:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8021034:	d0ed      	beq.n	8021012 <HAL_RCCEx_PeriphCLKConfig+0x64a>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8021036:	687b      	ldr	r3, [r7, #4]
 8021038:	681b      	ldr	r3, [r3, #0]
 802103a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 802103e:	2b00      	cmp	r3, #0
 8021040:	d003      	beq.n	802104a <HAL_RCCEx_PeriphCLKConfig+0x682>
 8021042:	687b      	ldr	r3, [r7, #4]
 8021044:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021046:	2b00      	cmp	r3, #0
 8021048:	d009      	beq.n	802105e <HAL_RCCEx_PeriphCLKConfig+0x696>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 802104a:	687b      	ldr	r3, [r7, #4]
 802104c:	681b      	ldr	r3, [r3, #0]
 802104e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8021052:	2b00      	cmp	r3, #0
 8021054:	d02e      	beq.n	80210b4 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8021056:	687b      	ldr	r3, [r7, #4]
 8021058:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 802105a:	2b00      	cmp	r3, #0
 802105c:	d12a      	bne.n	80210b4 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 802105e:	4b51      	ldr	r3, [pc, #324]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021060:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021064:	0c1b      	lsrs	r3, r3, #16
 8021066:	f003 0303 	and.w	r3, r3, #3
 802106a:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 802106c:	4b4d      	ldr	r3, [pc, #308]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 802106e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021072:	0f1b      	lsrs	r3, r3, #28
 8021074:	f003 0307 	and.w	r3, r3, #7
 8021078:	60fb      	str	r3, [r7, #12]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 802107a:	687b      	ldr	r3, [r7, #4]
 802107c:	695b      	ldr	r3, [r3, #20]
 802107e:	019a      	lsls	r2, r3, #6
 8021080:	693b      	ldr	r3, [r7, #16]
 8021082:	041b      	lsls	r3, r3, #16
 8021084:	431a      	orrs	r2, r3
 8021086:	687b      	ldr	r3, [r7, #4]
 8021088:	699b      	ldr	r3, [r3, #24]
 802108a:	061b      	lsls	r3, r3, #24
 802108c:	431a      	orrs	r2, r3
 802108e:	68fb      	ldr	r3, [r7, #12]
 8021090:	071b      	lsls	r3, r3, #28
 8021092:	4944      	ldr	r1, [pc, #272]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021094:	4313      	orrs	r3, r2
 8021096:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 802109a:	4b42      	ldr	r3, [pc, #264]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 802109c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80210a0:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 80210a4:	687b      	ldr	r3, [r7, #4]
 80210a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80210a8:	3b01      	subs	r3, #1
 80210aa:	021b      	lsls	r3, r3, #8
 80210ac:	493d      	ldr	r1, [pc, #244]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80210ae:	4313      	orrs	r3, r2
 80210b0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 80210b4:	687b      	ldr	r3, [r7, #4]
 80210b6:	681b      	ldr	r3, [r3, #0]
 80210b8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80210bc:	2b00      	cmp	r3, #0
 80210be:	d022      	beq.n	8021106 <HAL_RCCEx_PeriphCLKConfig+0x73e>
 80210c0:	687b      	ldr	r3, [r7, #4]
 80210c2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80210c4:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80210c8:	d11d      	bne.n	8021106 <HAL_RCCEx_PeriphCLKConfig+0x73e>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80210ca:	4b36      	ldr	r3, [pc, #216]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80210cc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80210d0:	0e1b      	lsrs	r3, r3, #24
 80210d2:	f003 030f 	and.w	r3, r3, #15
 80210d6:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80210d8:	4b32      	ldr	r3, [pc, #200]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80210da:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80210de:	0f1b      	lsrs	r3, r3, #28
 80210e0:	f003 0307 	and.w	r3, r3, #7
 80210e4:	60fb      	str	r3, [r7, #12]

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 80210e6:	687b      	ldr	r3, [r7, #4]
 80210e8:	695b      	ldr	r3, [r3, #20]
 80210ea:	019a      	lsls	r2, r3, #6
 80210ec:	687b      	ldr	r3, [r7, #4]
 80210ee:	6a1b      	ldr	r3, [r3, #32]
 80210f0:	041b      	lsls	r3, r3, #16
 80210f2:	431a      	orrs	r2, r3
 80210f4:	693b      	ldr	r3, [r7, #16]
 80210f6:	061b      	lsls	r3, r3, #24
 80210f8:	431a      	orrs	r2, r3
 80210fa:	68fb      	ldr	r3, [r7, #12]
 80210fc:	071b      	lsls	r3, r3, #28
 80210fe:	4929      	ldr	r1, [pc, #164]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021100:	4313      	orrs	r3, r2
 8021102:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8021106:	687b      	ldr	r3, [r7, #4]
 8021108:	681b      	ldr	r3, [r3, #0]
 802110a:	f003 0308 	and.w	r3, r3, #8
 802110e:	2b00      	cmp	r3, #0
 8021110:	d028      	beq.n	8021164 <HAL_RCCEx_PeriphCLKConfig+0x79c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8021112:	4b24      	ldr	r3, [pc, #144]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021114:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021118:	0e1b      	lsrs	r3, r3, #24
 802111a:	f003 030f 	and.w	r3, r3, #15
 802111e:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8021120:	4b20      	ldr	r3, [pc, #128]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021122:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021126:	0c1b      	lsrs	r3, r3, #16
 8021128:	f003 0303 	and.w	r3, r3, #3
 802112c:	60fb      	str	r3, [r7, #12]

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 802112e:	687b      	ldr	r3, [r7, #4]
 8021130:	695b      	ldr	r3, [r3, #20]
 8021132:	019a      	lsls	r2, r3, #6
 8021134:	68fb      	ldr	r3, [r7, #12]
 8021136:	041b      	lsls	r3, r3, #16
 8021138:	431a      	orrs	r2, r3
 802113a:	693b      	ldr	r3, [r7, #16]
 802113c:	061b      	lsls	r3, r3, #24
 802113e:	431a      	orrs	r2, r3
 8021140:	687b      	ldr	r3, [r7, #4]
 8021142:	69db      	ldr	r3, [r3, #28]
 8021144:	071b      	lsls	r3, r3, #28
 8021146:	4917      	ldr	r1, [pc, #92]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021148:	4313      	orrs	r3, r2
 802114a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 802114e:	4b15      	ldr	r3, [pc, #84]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021150:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021154:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8021158:	687b      	ldr	r3, [r7, #4]
 802115a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802115c:	4911      	ldr	r1, [pc, #68]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 802115e:	4313      	orrs	r3, r2
 8021160:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8021164:	4b0f      	ldr	r3, [pc, #60]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021166:	681b      	ldr	r3, [r3, #0]
 8021168:	4a0e      	ldr	r2, [pc, #56]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 802116a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 802116e:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021170:	f7fe fbe0 	bl	801f934 <HAL_GetTick>
 8021174:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8021176:	e008      	b.n	802118a <HAL_RCCEx_PeriphCLKConfig+0x7c2>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8021178:	f7fe fbdc 	bl	801f934 <HAL_GetTick>
 802117c:	4602      	mov	r2, r0
 802117e:	697b      	ldr	r3, [r7, #20]
 8021180:	1ad3      	subs	r3, r2, r3
 8021182:	2b64      	cmp	r3, #100	; 0x64
 8021184:	d901      	bls.n	802118a <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8021186:	2303      	movs	r3, #3
 8021188:	e007      	b.n	802119a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 802118a:	4b06      	ldr	r3, [pc, #24]	; (80211a4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 802118c:	681b      	ldr	r3, [r3, #0]
 802118e:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8021192:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8021196:	d1ef      	bne.n	8021178 <HAL_RCCEx_PeriphCLKConfig+0x7b0>
      }
    }
  }
  return HAL_OK;
 8021198:	2300      	movs	r3, #0
}
 802119a:	4618      	mov	r0, r3
 802119c:	3720      	adds	r7, #32
 802119e:	46bd      	mov	sp, r7
 80211a0:	bd80      	pop	{r7, pc}
 80211a2:	bf00      	nop
 80211a4:	40023800 	.word	0x40023800

080211a8 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 80211a8:	b580      	push	{r7, lr}
 80211aa:	b082      	sub	sp, #8
 80211ac:	af00      	add	r7, sp, #0
 80211ae:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 80211b0:	687b      	ldr	r3, [r7, #4]
 80211b2:	2b00      	cmp	r3, #0
 80211b4:	d101      	bne.n	80211ba <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 80211b6:	2301      	movs	r3, #1
 80211b8:	e040      	b.n	802123c <HAL_UART_Init+0x94>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 80211ba:	687b      	ldr	r3, [r7, #4]
 80211bc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80211be:	2b00      	cmp	r3, #0
 80211c0:	d106      	bne.n	80211d0 <HAL_UART_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 80211c2:	687b      	ldr	r3, [r7, #4]
 80211c4:	2200      	movs	r2, #0
 80211c6:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 80211ca:	6878      	ldr	r0, [r7, #4]
 80211cc:	f7fc ffe6 	bl	801e19c <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 80211d0:	687b      	ldr	r3, [r7, #4]
 80211d2:	2224      	movs	r2, #36	; 0x24
 80211d4:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 80211d6:	687b      	ldr	r3, [r7, #4]
 80211d8:	681b      	ldr	r3, [r3, #0]
 80211da:	681a      	ldr	r2, [r3, #0]
 80211dc:	687b      	ldr	r3, [r7, #4]
 80211de:	681b      	ldr	r3, [r3, #0]
 80211e0:	f022 0201 	bic.w	r2, r2, #1
 80211e4:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 80211e6:	6878      	ldr	r0, [r7, #4]
 80211e8:	f000 fbd8 	bl	802199c <UART_SetConfig>
 80211ec:	4603      	mov	r3, r0
 80211ee:	2b01      	cmp	r3, #1
 80211f0:	d101      	bne.n	80211f6 <HAL_UART_Init+0x4e>
  {
    return HAL_ERROR;
 80211f2:	2301      	movs	r3, #1
 80211f4:	e022      	b.n	802123c <HAL_UART_Init+0x94>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 80211f6:	687b      	ldr	r3, [r7, #4]
 80211f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80211fa:	2b00      	cmp	r3, #0
 80211fc:	d002      	beq.n	8021204 <HAL_UART_Init+0x5c>
  {
    UART_AdvFeatureConfig(huart);
 80211fe:	6878      	ldr	r0, [r7, #4]
 8021200:	f000 fe2e 	bl	8021e60 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8021204:	687b      	ldr	r3, [r7, #4]
 8021206:	681b      	ldr	r3, [r3, #0]
 8021208:	685a      	ldr	r2, [r3, #4]
 802120a:	687b      	ldr	r3, [r7, #4]
 802120c:	681b      	ldr	r3, [r3, #0]
 802120e:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8021212:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8021214:	687b      	ldr	r3, [r7, #4]
 8021216:	681b      	ldr	r3, [r3, #0]
 8021218:	689a      	ldr	r2, [r3, #8]
 802121a:	687b      	ldr	r3, [r7, #4]
 802121c:	681b      	ldr	r3, [r3, #0]
 802121e:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8021222:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 8021224:	687b      	ldr	r3, [r7, #4]
 8021226:	681b      	ldr	r3, [r3, #0]
 8021228:	681a      	ldr	r2, [r3, #0]
 802122a:	687b      	ldr	r3, [r7, #4]
 802122c:	681b      	ldr	r3, [r3, #0]
 802122e:	f042 0201 	orr.w	r2, r2, #1
 8021232:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8021234:	6878      	ldr	r0, [r7, #4]
 8021236:	f000 feb5 	bl	8021fa4 <UART_CheckIdleState>
 802123a:	4603      	mov	r3, r0
}
 802123c:	4618      	mov	r0, r3
 802123e:	3708      	adds	r7, #8
 8021240:	46bd      	mov	sp, r7
 8021242:	bd80      	pop	{r7, pc}

08021244 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8021244:	b580      	push	{r7, lr}
 8021246:	b08a      	sub	sp, #40	; 0x28
 8021248:	af02      	add	r7, sp, #8
 802124a:	60f8      	str	r0, [r7, #12]
 802124c:	60b9      	str	r1, [r7, #8]
 802124e:	603b      	str	r3, [r7, #0]
 8021250:	4613      	mov	r3, r2
 8021252:	80fb      	strh	r3, [r7, #6]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8021254:	68fb      	ldr	r3, [r7, #12]
 8021256:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8021258:	2b20      	cmp	r3, #32
 802125a:	f040 8081 	bne.w	8021360 <HAL_UART_Transmit+0x11c>
  {
    if ((pData == NULL) || (Size == 0U))
 802125e:	68bb      	ldr	r3, [r7, #8]
 8021260:	2b00      	cmp	r3, #0
 8021262:	d002      	beq.n	802126a <HAL_UART_Transmit+0x26>
 8021264:	88fb      	ldrh	r3, [r7, #6]
 8021266:	2b00      	cmp	r3, #0
 8021268:	d101      	bne.n	802126e <HAL_UART_Transmit+0x2a>
    {
      return  HAL_ERROR;
 802126a:	2301      	movs	r3, #1
 802126c:	e079      	b.n	8021362 <HAL_UART_Transmit+0x11e>
    }

    __HAL_LOCK(huart);
 802126e:	68fb      	ldr	r3, [r7, #12]
 8021270:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8021274:	2b01      	cmp	r3, #1
 8021276:	d101      	bne.n	802127c <HAL_UART_Transmit+0x38>
 8021278:	2302      	movs	r3, #2
 802127a:	e072      	b.n	8021362 <HAL_UART_Transmit+0x11e>
 802127c:	68fb      	ldr	r3, [r7, #12]
 802127e:	2201      	movs	r2, #1
 8021280:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8021284:	68fb      	ldr	r3, [r7, #12]
 8021286:	2200      	movs	r2, #0
 8021288:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
 802128c:	68fb      	ldr	r3, [r7, #12]
 802128e:	2221      	movs	r2, #33	; 0x21
 8021290:	679a      	str	r2, [r3, #120]	; 0x78

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8021292:	f7fe fb4f 	bl	801f934 <HAL_GetTick>
 8021296:	6178      	str	r0, [r7, #20]

    huart->TxXferSize  = Size;
 8021298:	68fb      	ldr	r3, [r7, #12]
 802129a:	88fa      	ldrh	r2, [r7, #6]
 802129c:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
    huart->TxXferCount = Size;
 80212a0:	68fb      	ldr	r3, [r7, #12]
 80212a2:	88fa      	ldrh	r2, [r7, #6]
 80212a4:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80212a8:	68fb      	ldr	r3, [r7, #12]
 80212aa:	689b      	ldr	r3, [r3, #8]
 80212ac:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80212b0:	d108      	bne.n	80212c4 <HAL_UART_Transmit+0x80>
 80212b2:	68fb      	ldr	r3, [r7, #12]
 80212b4:	691b      	ldr	r3, [r3, #16]
 80212b6:	2b00      	cmp	r3, #0
 80212b8:	d104      	bne.n	80212c4 <HAL_UART_Transmit+0x80>
    {
      pdata8bits  = NULL;
 80212ba:	2300      	movs	r3, #0
 80212bc:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 80212be:	68bb      	ldr	r3, [r7, #8]
 80212c0:	61bb      	str	r3, [r7, #24]
 80212c2:	e003      	b.n	80212cc <HAL_UART_Transmit+0x88>
    }
    else
    {
      pdata8bits  = pData;
 80212c4:	68bb      	ldr	r3, [r7, #8]
 80212c6:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 80212c8:	2300      	movs	r3, #0
 80212ca:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 80212cc:	68fb      	ldr	r3, [r7, #12]
 80212ce:	2200      	movs	r2, #0
 80212d0:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    while (huart->TxXferCount > 0U)
 80212d4:	e02c      	b.n	8021330 <HAL_UART_Transmit+0xec>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80212d6:	683b      	ldr	r3, [r7, #0]
 80212d8:	9300      	str	r3, [sp, #0]
 80212da:	697b      	ldr	r3, [r7, #20]
 80212dc:	2200      	movs	r2, #0
 80212de:	2180      	movs	r1, #128	; 0x80
 80212e0:	68f8      	ldr	r0, [r7, #12]
 80212e2:	f000 fe92 	bl	802200a <UART_WaitOnFlagUntilTimeout>
 80212e6:	4603      	mov	r3, r0
 80212e8:	2b00      	cmp	r3, #0
 80212ea:	d001      	beq.n	80212f0 <HAL_UART_Transmit+0xac>
      {
        return HAL_TIMEOUT;
 80212ec:	2303      	movs	r3, #3
 80212ee:	e038      	b.n	8021362 <HAL_UART_Transmit+0x11e>
      }
      if (pdata8bits == NULL)
 80212f0:	69fb      	ldr	r3, [r7, #28]
 80212f2:	2b00      	cmp	r3, #0
 80212f4:	d10b      	bne.n	802130e <HAL_UART_Transmit+0xca>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80212f6:	69bb      	ldr	r3, [r7, #24]
 80212f8:	881b      	ldrh	r3, [r3, #0]
 80212fa:	461a      	mov	r2, r3
 80212fc:	68fb      	ldr	r3, [r7, #12]
 80212fe:	681b      	ldr	r3, [r3, #0]
 8021300:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8021304:	629a      	str	r2, [r3, #40]	; 0x28
        pdata16bits++;
 8021306:	69bb      	ldr	r3, [r7, #24]
 8021308:	3302      	adds	r3, #2
 802130a:	61bb      	str	r3, [r7, #24]
 802130c:	e007      	b.n	802131e <HAL_UART_Transmit+0xda>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 802130e:	69fb      	ldr	r3, [r7, #28]
 8021310:	781a      	ldrb	r2, [r3, #0]
 8021312:	68fb      	ldr	r3, [r7, #12]
 8021314:	681b      	ldr	r3, [r3, #0]
 8021316:	629a      	str	r2, [r3, #40]	; 0x28
        pdata8bits++;
 8021318:	69fb      	ldr	r3, [r7, #28]
 802131a:	3301      	adds	r3, #1
 802131c:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 802131e:	68fb      	ldr	r3, [r7, #12]
 8021320:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8021324:	b29b      	uxth	r3, r3
 8021326:	3b01      	subs	r3, #1
 8021328:	b29a      	uxth	r2, r3
 802132a:	68fb      	ldr	r3, [r7, #12]
 802132c:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
    while (huart->TxXferCount > 0U)
 8021330:	68fb      	ldr	r3, [r7, #12]
 8021332:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8021336:	b29b      	uxth	r3, r3
 8021338:	2b00      	cmp	r3, #0
 802133a:	d1cc      	bne.n	80212d6 <HAL_UART_Transmit+0x92>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 802133c:	683b      	ldr	r3, [r7, #0]
 802133e:	9300      	str	r3, [sp, #0]
 8021340:	697b      	ldr	r3, [r7, #20]
 8021342:	2200      	movs	r2, #0
 8021344:	2140      	movs	r1, #64	; 0x40
 8021346:	68f8      	ldr	r0, [r7, #12]
 8021348:	f000 fe5f 	bl	802200a <UART_WaitOnFlagUntilTimeout>
 802134c:	4603      	mov	r3, r0
 802134e:	2b00      	cmp	r3, #0
 8021350:	d001      	beq.n	8021356 <HAL_UART_Transmit+0x112>
    {
      return HAL_TIMEOUT;
 8021352:	2303      	movs	r3, #3
 8021354:	e005      	b.n	8021362 <HAL_UART_Transmit+0x11e>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8021356:	68fb      	ldr	r3, [r7, #12]
 8021358:	2220      	movs	r2, #32
 802135a:	679a      	str	r2, [r3, #120]	; 0x78

    return HAL_OK;
 802135c:	2300      	movs	r3, #0
 802135e:	e000      	b.n	8021362 <HAL_UART_Transmit+0x11e>
  }
  else
  {
    return HAL_BUSY;
 8021360:	2302      	movs	r3, #2
  }
}
 8021362:	4618      	mov	r0, r3
 8021364:	3720      	adds	r7, #32
 8021366:	46bd      	mov	sp, r7
 8021368:	bd80      	pop	{r7, pc}

0802136a <HAL_UART_Receive>:
  * @param Size    Amount of data elements (u8 or u16) to be received.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 802136a:	b580      	push	{r7, lr}
 802136c:	b08a      	sub	sp, #40	; 0x28
 802136e:	af02      	add	r7, sp, #8
 8021370:	60f8      	str	r0, [r7, #12]
 8021372:	60b9      	str	r1, [r7, #8]
 8021374:	603b      	str	r3, [r7, #0]
 8021376:	4613      	mov	r3, r2
 8021378:	80fb      	strh	r3, [r7, #6]
  uint16_t *pdata16bits;
  uint16_t uhMask;
  uint32_t tickstart;

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 802137a:	68fb      	ldr	r3, [r7, #12]
 802137c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 802137e:	2b20      	cmp	r3, #32
 8021380:	f040 80be 	bne.w	8021500 <HAL_UART_Receive+0x196>
  {
    if ((pData == NULL) || (Size == 0U))
 8021384:	68bb      	ldr	r3, [r7, #8]
 8021386:	2b00      	cmp	r3, #0
 8021388:	d002      	beq.n	8021390 <HAL_UART_Receive+0x26>
 802138a:	88fb      	ldrh	r3, [r7, #6]
 802138c:	2b00      	cmp	r3, #0
 802138e:	d101      	bne.n	8021394 <HAL_UART_Receive+0x2a>
    {
      return  HAL_ERROR;
 8021390:	2301      	movs	r3, #1
 8021392:	e0b6      	b.n	8021502 <HAL_UART_Receive+0x198>
    }

    __HAL_LOCK(huart);
 8021394:	68fb      	ldr	r3, [r7, #12]
 8021396:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 802139a:	2b01      	cmp	r3, #1
 802139c:	d101      	bne.n	80213a2 <HAL_UART_Receive+0x38>
 802139e:	2302      	movs	r3, #2
 80213a0:	e0af      	b.n	8021502 <HAL_UART_Receive+0x198>
 80213a2:	68fb      	ldr	r3, [r7, #12]
 80213a4:	2201      	movs	r2, #1
 80213a6:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80213aa:	68fb      	ldr	r3, [r7, #12]
 80213ac:	2200      	movs	r2, #0
 80213ae:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 80213b2:	68fb      	ldr	r3, [r7, #12]
 80213b4:	2222      	movs	r2, #34	; 0x22
 80213b6:	67da      	str	r2, [r3, #124]	; 0x7c
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80213b8:	68fb      	ldr	r3, [r7, #12]
 80213ba:	2200      	movs	r2, #0
 80213bc:	661a      	str	r2, [r3, #96]	; 0x60

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 80213be:	f7fe fab9 	bl	801f934 <HAL_GetTick>
 80213c2:	6178      	str	r0, [r7, #20]

    huart->RxXferSize  = Size;
 80213c4:	68fb      	ldr	r3, [r7, #12]
 80213c6:	88fa      	ldrh	r2, [r7, #6]
 80213c8:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
    huart->RxXferCount = Size;
 80213cc:	68fb      	ldr	r3, [r7, #12]
 80213ce:	88fa      	ldrh	r2, [r7, #6]
 80213d0:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    /* Computation of UART mask to apply to RDR register */
    UART_MASK_COMPUTATION(huart);
 80213d4:	68fb      	ldr	r3, [r7, #12]
 80213d6:	689b      	ldr	r3, [r3, #8]
 80213d8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80213dc:	d10e      	bne.n	80213fc <HAL_UART_Receive+0x92>
 80213de:	68fb      	ldr	r3, [r7, #12]
 80213e0:	691b      	ldr	r3, [r3, #16]
 80213e2:	2b00      	cmp	r3, #0
 80213e4:	d105      	bne.n	80213f2 <HAL_UART_Receive+0x88>
 80213e6:	68fb      	ldr	r3, [r7, #12]
 80213e8:	f240 12ff 	movw	r2, #511	; 0x1ff
 80213ec:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80213f0:	e02d      	b.n	802144e <HAL_UART_Receive+0xe4>
 80213f2:	68fb      	ldr	r3, [r7, #12]
 80213f4:	22ff      	movs	r2, #255	; 0xff
 80213f6:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80213fa:	e028      	b.n	802144e <HAL_UART_Receive+0xe4>
 80213fc:	68fb      	ldr	r3, [r7, #12]
 80213fe:	689b      	ldr	r3, [r3, #8]
 8021400:	2b00      	cmp	r3, #0
 8021402:	d10d      	bne.n	8021420 <HAL_UART_Receive+0xb6>
 8021404:	68fb      	ldr	r3, [r7, #12]
 8021406:	691b      	ldr	r3, [r3, #16]
 8021408:	2b00      	cmp	r3, #0
 802140a:	d104      	bne.n	8021416 <HAL_UART_Receive+0xac>
 802140c:	68fb      	ldr	r3, [r7, #12]
 802140e:	22ff      	movs	r2, #255	; 0xff
 8021410:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8021414:	e01b      	b.n	802144e <HAL_UART_Receive+0xe4>
 8021416:	68fb      	ldr	r3, [r7, #12]
 8021418:	227f      	movs	r2, #127	; 0x7f
 802141a:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 802141e:	e016      	b.n	802144e <HAL_UART_Receive+0xe4>
 8021420:	68fb      	ldr	r3, [r7, #12]
 8021422:	689b      	ldr	r3, [r3, #8]
 8021424:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8021428:	d10d      	bne.n	8021446 <HAL_UART_Receive+0xdc>
 802142a:	68fb      	ldr	r3, [r7, #12]
 802142c:	691b      	ldr	r3, [r3, #16]
 802142e:	2b00      	cmp	r3, #0
 8021430:	d104      	bne.n	802143c <HAL_UART_Receive+0xd2>
 8021432:	68fb      	ldr	r3, [r7, #12]
 8021434:	227f      	movs	r2, #127	; 0x7f
 8021436:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 802143a:	e008      	b.n	802144e <HAL_UART_Receive+0xe4>
 802143c:	68fb      	ldr	r3, [r7, #12]
 802143e:	223f      	movs	r2, #63	; 0x3f
 8021440:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8021444:	e003      	b.n	802144e <HAL_UART_Receive+0xe4>
 8021446:	68fb      	ldr	r3, [r7, #12]
 8021448:	2200      	movs	r2, #0
 802144a:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
    uhMask = huart->Mask;
 802144e:	68fb      	ldr	r3, [r7, #12]
 8021450:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8021454:	827b      	strh	r3, [r7, #18]

    /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8021456:	68fb      	ldr	r3, [r7, #12]
 8021458:	689b      	ldr	r3, [r3, #8]
 802145a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 802145e:	d108      	bne.n	8021472 <HAL_UART_Receive+0x108>
 8021460:	68fb      	ldr	r3, [r7, #12]
 8021462:	691b      	ldr	r3, [r3, #16]
 8021464:	2b00      	cmp	r3, #0
 8021466:	d104      	bne.n	8021472 <HAL_UART_Receive+0x108>
    {
      pdata8bits  = NULL;
 8021468:	2300      	movs	r3, #0
 802146a:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 802146c:	68bb      	ldr	r3, [r7, #8]
 802146e:	61bb      	str	r3, [r7, #24]
 8021470:	e003      	b.n	802147a <HAL_UART_Receive+0x110>
    }
    else
    {
      pdata8bits  = pData;
 8021472:	68bb      	ldr	r3, [r7, #8]
 8021474:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8021476:	2300      	movs	r3, #0
 8021478:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 802147a:	68fb      	ldr	r3, [r7, #12]
 802147c:	2200      	movs	r2, #0
 802147e:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* as long as data have to be received */
    while (huart->RxXferCount > 0U)
 8021482:	e032      	b.n	80214ea <HAL_UART_Receive+0x180>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 8021484:	683b      	ldr	r3, [r7, #0]
 8021486:	9300      	str	r3, [sp, #0]
 8021488:	697b      	ldr	r3, [r7, #20]
 802148a:	2200      	movs	r2, #0
 802148c:	2120      	movs	r1, #32
 802148e:	68f8      	ldr	r0, [r7, #12]
 8021490:	f000 fdbb 	bl	802200a <UART_WaitOnFlagUntilTimeout>
 8021494:	4603      	mov	r3, r0
 8021496:	2b00      	cmp	r3, #0
 8021498:	d001      	beq.n	802149e <HAL_UART_Receive+0x134>
      {
        return HAL_TIMEOUT;
 802149a:	2303      	movs	r3, #3
 802149c:	e031      	b.n	8021502 <HAL_UART_Receive+0x198>
      }
      if (pdata8bits == NULL)
 802149e:	69fb      	ldr	r3, [r7, #28]
 80214a0:	2b00      	cmp	r3, #0
 80214a2:	d10c      	bne.n	80214be <HAL_UART_Receive+0x154>
      {
        *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 80214a4:	68fb      	ldr	r3, [r7, #12]
 80214a6:	681b      	ldr	r3, [r3, #0]
 80214a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80214aa:	b29a      	uxth	r2, r3
 80214ac:	8a7b      	ldrh	r3, [r7, #18]
 80214ae:	4013      	ands	r3, r2
 80214b0:	b29a      	uxth	r2, r3
 80214b2:	69bb      	ldr	r3, [r7, #24]
 80214b4:	801a      	strh	r2, [r3, #0]
        pdata16bits++;
 80214b6:	69bb      	ldr	r3, [r7, #24]
 80214b8:	3302      	adds	r3, #2
 80214ba:	61bb      	str	r3, [r7, #24]
 80214bc:	e00c      	b.n	80214d8 <HAL_UART_Receive+0x16e>
      }
      else
      {
        *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 80214be:	68fb      	ldr	r3, [r7, #12]
 80214c0:	681b      	ldr	r3, [r3, #0]
 80214c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80214c4:	b2da      	uxtb	r2, r3
 80214c6:	8a7b      	ldrh	r3, [r7, #18]
 80214c8:	b2db      	uxtb	r3, r3
 80214ca:	4013      	ands	r3, r2
 80214cc:	b2da      	uxtb	r2, r3
 80214ce:	69fb      	ldr	r3, [r7, #28]
 80214d0:	701a      	strb	r2, [r3, #0]
        pdata8bits++;
 80214d2:	69fb      	ldr	r3, [r7, #28]
 80214d4:	3301      	adds	r3, #1
 80214d6:	61fb      	str	r3, [r7, #28]
      }
      huart->RxXferCount--;
 80214d8:	68fb      	ldr	r3, [r7, #12]
 80214da:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80214de:	b29b      	uxth	r3, r3
 80214e0:	3b01      	subs	r3, #1
 80214e2:	b29a      	uxth	r2, r3
 80214e4:	68fb      	ldr	r3, [r7, #12]
 80214e6:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
    while (huart->RxXferCount > 0U)
 80214ea:	68fb      	ldr	r3, [r7, #12]
 80214ec:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80214f0:	b29b      	uxth	r3, r3
 80214f2:	2b00      	cmp	r3, #0
 80214f4:	d1c6      	bne.n	8021484 <HAL_UART_Receive+0x11a>
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 80214f6:	68fb      	ldr	r3, [r7, #12]
 80214f8:	2220      	movs	r2, #32
 80214fa:	67da      	str	r2, [r3, #124]	; 0x7c

    return HAL_OK;
 80214fc:	2300      	movs	r3, #0
 80214fe:	e000      	b.n	8021502 <HAL_UART_Receive+0x198>
  }
  else
  {
    return HAL_BUSY;
 8021500:	2302      	movs	r3, #2
  }
}
 8021502:	4618      	mov	r0, r3
 8021504:	3720      	adds	r7, #32
 8021506:	46bd      	mov	sp, r7
 8021508:	bd80      	pop	{r7, pc}

0802150a <HAL_UART_Receive_IT>:
  * @param pData Pointer to data buffer (u8 or u16 data elements).
  * @param Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 802150a:	b580      	push	{r7, lr}
 802150c:	b084      	sub	sp, #16
 802150e:	af00      	add	r7, sp, #0
 8021510:	60f8      	str	r0, [r7, #12]
 8021512:	60b9      	str	r1, [r7, #8]
 8021514:	4613      	mov	r3, r2
 8021516:	80fb      	strh	r3, [r7, #6]
  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8021518:	68fb      	ldr	r3, [r7, #12]
 802151a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 802151c:	2b20      	cmp	r3, #32
 802151e:	d12c      	bne.n	802157a <HAL_UART_Receive_IT+0x70>
  {
    if ((pData == NULL) || (Size == 0U))
 8021520:	68bb      	ldr	r3, [r7, #8]
 8021522:	2b00      	cmp	r3, #0
 8021524:	d002      	beq.n	802152c <HAL_UART_Receive_IT+0x22>
 8021526:	88fb      	ldrh	r3, [r7, #6]
 8021528:	2b00      	cmp	r3, #0
 802152a:	d101      	bne.n	8021530 <HAL_UART_Receive_IT+0x26>
    {
      return HAL_ERROR;
 802152c:	2301      	movs	r3, #1
 802152e:	e025      	b.n	802157c <HAL_UART_Receive_IT+0x72>
    }

    __HAL_LOCK(huart);
 8021530:	68fb      	ldr	r3, [r7, #12]
 8021532:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8021536:	2b01      	cmp	r3, #1
 8021538:	d101      	bne.n	802153e <HAL_UART_Receive_IT+0x34>
 802153a:	2302      	movs	r3, #2
 802153c:	e01e      	b.n	802157c <HAL_UART_Receive_IT+0x72>
 802153e:	68fb      	ldr	r3, [r7, #12]
 8021540:	2201      	movs	r2, #1
 8021542:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Set Reception type to Standard reception */
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8021546:	68fb      	ldr	r3, [r7, #12]
 8021548:	2200      	movs	r2, #0
 802154a:	661a      	str	r2, [r3, #96]	; 0x60

    /* Check that USART RTOEN bit is set */
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 802154c:	68fb      	ldr	r3, [r7, #12]
 802154e:	681b      	ldr	r3, [r3, #0]
 8021550:	685b      	ldr	r3, [r3, #4]
 8021552:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8021556:	2b00      	cmp	r3, #0
 8021558:	d007      	beq.n	802156a <HAL_UART_Receive_IT+0x60>
    {
      /* Enable the UART Receiver Timeout Interrupt */
      SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 802155a:	68fb      	ldr	r3, [r7, #12]
 802155c:	681b      	ldr	r3, [r3, #0]
 802155e:	681a      	ldr	r2, [r3, #0]
 8021560:	68fb      	ldr	r3, [r7, #12]
 8021562:	681b      	ldr	r3, [r3, #0]
 8021564:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8021568:	601a      	str	r2, [r3, #0]
    }

    return (UART_Start_Receive_IT(huart, pData, Size));
 802156a:	88fb      	ldrh	r3, [r7, #6]
 802156c:	461a      	mov	r2, r3
 802156e:	68b9      	ldr	r1, [r7, #8]
 8021570:	68f8      	ldr	r0, [r7, #12]
 8021572:	f000 fdc7 	bl	8022104 <UART_Start_Receive_IT>
 8021576:	4603      	mov	r3, r0
 8021578:	e000      	b.n	802157c <HAL_UART_Receive_IT+0x72>
  }
  else
  {
    return HAL_BUSY;
 802157a:	2302      	movs	r3, #2
  }
}
 802157c:	4618      	mov	r0, r3
 802157e:	3710      	adds	r7, #16
 8021580:	46bd      	mov	sp, r7
 8021582:	bd80      	pop	{r7, pc}

08021584 <HAL_UART_IRQHandler>:
  * @brief Handle UART interrupt request.
  * @param huart UART handle.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 8021584:	b580      	push	{r7, lr}
 8021586:	b088      	sub	sp, #32
 8021588:	af00      	add	r7, sp, #0
 802158a:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 802158c:	687b      	ldr	r3, [r7, #4]
 802158e:	681b      	ldr	r3, [r3, #0]
 8021590:	69db      	ldr	r3, [r3, #28]
 8021592:	61fb      	str	r3, [r7, #28]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8021594:	687b      	ldr	r3, [r7, #4]
 8021596:	681b      	ldr	r3, [r3, #0]
 8021598:	681b      	ldr	r3, [r3, #0]
 802159a:	61bb      	str	r3, [r7, #24]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 802159c:	687b      	ldr	r3, [r7, #4]
 802159e:	681b      	ldr	r3, [r3, #0]
 80215a0:	689b      	ldr	r3, [r3, #8]
 80215a2:	617b      	str	r3, [r7, #20]

  uint32_t errorflags;
  uint32_t errorcode;

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 80215a4:	69fa      	ldr	r2, [r7, #28]
 80215a6:	f640 030f 	movw	r3, #2063	; 0x80f
 80215aa:	4013      	ands	r3, r2
 80215ac:	613b      	str	r3, [r7, #16]
  if (errorflags == 0U)
 80215ae:	693b      	ldr	r3, [r7, #16]
 80215b0:	2b00      	cmp	r3, #0
 80215b2:	d113      	bne.n	80215dc <HAL_UART_IRQHandler+0x58>
  {
    /* UART in mode Receiver ---------------------------------------------------*/
    if (((isrflags & USART_ISR_RXNE) != 0U)
 80215b4:	69fb      	ldr	r3, [r7, #28]
 80215b6:	f003 0320 	and.w	r3, r3, #32
 80215ba:	2b00      	cmp	r3, #0
 80215bc:	d00e      	beq.n	80215dc <HAL_UART_IRQHandler+0x58>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 80215be:	69bb      	ldr	r3, [r7, #24]
 80215c0:	f003 0320 	and.w	r3, r3, #32
 80215c4:	2b00      	cmp	r3, #0
 80215c6:	d009      	beq.n	80215dc <HAL_UART_IRQHandler+0x58>
    {
      if (huart->RxISR != NULL)
 80215c8:	687b      	ldr	r3, [r7, #4]
 80215ca:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80215cc:	2b00      	cmp	r3, #0
 80215ce:	f000 81b9 	beq.w	8021944 <HAL_UART_IRQHandler+0x3c0>
      {
        huart->RxISR(huart);
 80215d2:	687b      	ldr	r3, [r7, #4]
 80215d4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80215d6:	6878      	ldr	r0, [r7, #4]
 80215d8:	4798      	blx	r3
      }
      return;
 80215da:	e1b3      	b.n	8021944 <HAL_UART_IRQHandler+0x3c0>
    }
  }

  /* If some errors occur */
  if ((errorflags != 0U)
 80215dc:	693b      	ldr	r3, [r7, #16]
 80215de:	2b00      	cmp	r3, #0
 80215e0:	f000 80e3 	beq.w	80217aa <HAL_UART_IRQHandler+0x226>
      && (((cr3its & USART_CR3_EIE) != 0U)
 80215e4:	697b      	ldr	r3, [r7, #20]
 80215e6:	f003 0301 	and.w	r3, r3, #1
 80215ea:	2b00      	cmp	r3, #0
 80215ec:	d105      	bne.n	80215fa <HAL_UART_IRQHandler+0x76>
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 80215ee:	69ba      	ldr	r2, [r7, #24]
 80215f0:	4ba5      	ldr	r3, [pc, #660]	; (8021888 <HAL_UART_IRQHandler+0x304>)
 80215f2:	4013      	ands	r3, r2
 80215f4:	2b00      	cmp	r3, #0
 80215f6:	f000 80d8 	beq.w	80217aa <HAL_UART_IRQHandler+0x226>
  {
    /* UART parity error interrupt occurred -------------------------------------*/
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 80215fa:	69fb      	ldr	r3, [r7, #28]
 80215fc:	f003 0301 	and.w	r3, r3, #1
 8021600:	2b00      	cmp	r3, #0
 8021602:	d010      	beq.n	8021626 <HAL_UART_IRQHandler+0xa2>
 8021604:	69bb      	ldr	r3, [r7, #24]
 8021606:	f403 7380 	and.w	r3, r3, #256	; 0x100
 802160a:	2b00      	cmp	r3, #0
 802160c:	d00b      	beq.n	8021626 <HAL_UART_IRQHandler+0xa2>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 802160e:	687b      	ldr	r3, [r7, #4]
 8021610:	681b      	ldr	r3, [r3, #0]
 8021612:	2201      	movs	r2, #1
 8021614:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8021616:	687b      	ldr	r3, [r7, #4]
 8021618:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 802161c:	f043 0201 	orr.w	r2, r3, #1
 8021620:	687b      	ldr	r3, [r7, #4]
 8021622:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART frame error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8021626:	69fb      	ldr	r3, [r7, #28]
 8021628:	f003 0302 	and.w	r3, r3, #2
 802162c:	2b00      	cmp	r3, #0
 802162e:	d010      	beq.n	8021652 <HAL_UART_IRQHandler+0xce>
 8021630:	697b      	ldr	r3, [r7, #20]
 8021632:	f003 0301 	and.w	r3, r3, #1
 8021636:	2b00      	cmp	r3, #0
 8021638:	d00b      	beq.n	8021652 <HAL_UART_IRQHandler+0xce>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 802163a:	687b      	ldr	r3, [r7, #4]
 802163c:	681b      	ldr	r3, [r3, #0]
 802163e:	2202      	movs	r2, #2
 8021640:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8021642:	687b      	ldr	r3, [r7, #4]
 8021644:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8021648:	f043 0204 	orr.w	r2, r3, #4
 802164c:	687b      	ldr	r3, [r7, #4]
 802164e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART noise error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8021652:	69fb      	ldr	r3, [r7, #28]
 8021654:	f003 0304 	and.w	r3, r3, #4
 8021658:	2b00      	cmp	r3, #0
 802165a:	d010      	beq.n	802167e <HAL_UART_IRQHandler+0xfa>
 802165c:	697b      	ldr	r3, [r7, #20]
 802165e:	f003 0301 	and.w	r3, r3, #1
 8021662:	2b00      	cmp	r3, #0
 8021664:	d00b      	beq.n	802167e <HAL_UART_IRQHandler+0xfa>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8021666:	687b      	ldr	r3, [r7, #4]
 8021668:	681b      	ldr	r3, [r3, #0]
 802166a:	2204      	movs	r2, #4
 802166c:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_NE;
 802166e:	687b      	ldr	r3, [r7, #4]
 8021670:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8021674:	f043 0202 	orr.w	r2, r3, #2
 8021678:	687b      	ldr	r3, [r7, #4]
 802167a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART Over-Run interrupt occurred -----------------------------------------*/
    if (((isrflags & USART_ISR_ORE) != 0U)
 802167e:	69fb      	ldr	r3, [r7, #28]
 8021680:	f003 0308 	and.w	r3, r3, #8
 8021684:	2b00      	cmp	r3, #0
 8021686:	d015      	beq.n	80216b4 <HAL_UART_IRQHandler+0x130>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8021688:	69bb      	ldr	r3, [r7, #24]
 802168a:	f003 0320 	and.w	r3, r3, #32
 802168e:	2b00      	cmp	r3, #0
 8021690:	d104      	bne.n	802169c <HAL_UART_IRQHandler+0x118>
            ((cr3its & USART_CR3_EIE) != 0U)))
 8021692:	697b      	ldr	r3, [r7, #20]
 8021694:	f003 0301 	and.w	r3, r3, #1
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8021698:	2b00      	cmp	r3, #0
 802169a:	d00b      	beq.n	80216b4 <HAL_UART_IRQHandler+0x130>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 802169c:	687b      	ldr	r3, [r7, #4]
 802169e:	681b      	ldr	r3, [r3, #0]
 80216a0:	2208      	movs	r2, #8
 80216a2:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80216a4:	687b      	ldr	r3, [r7, #4]
 80216a6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80216aa:	f043 0208 	orr.w	r2, r3, #8
 80216ae:	687b      	ldr	r3, [r7, #4]
 80216b0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART Receiver Timeout interrupt occurred ---------------------------------*/
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 80216b4:	69fb      	ldr	r3, [r7, #28]
 80216b6:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80216ba:	2b00      	cmp	r3, #0
 80216bc:	d011      	beq.n	80216e2 <HAL_UART_IRQHandler+0x15e>
 80216be:	69bb      	ldr	r3, [r7, #24]
 80216c0:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80216c4:	2b00      	cmp	r3, #0
 80216c6:	d00c      	beq.n	80216e2 <HAL_UART_IRQHandler+0x15e>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80216c8:	687b      	ldr	r3, [r7, #4]
 80216ca:	681b      	ldr	r3, [r3, #0]
 80216cc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80216d0:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 80216d2:	687b      	ldr	r3, [r7, #4]
 80216d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80216d8:	f043 0220 	orr.w	r2, r3, #32
 80216dc:	687b      	ldr	r3, [r7, #4]
 80216de:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* Call UART Error Call back function if need be ----------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80216e2:	687b      	ldr	r3, [r7, #4]
 80216e4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80216e8:	2b00      	cmp	r3, #0
 80216ea:	f000 812d 	beq.w	8021948 <HAL_UART_IRQHandler+0x3c4>
    {
      /* UART in mode Receiver --------------------------------------------------*/
      if (((isrflags & USART_ISR_RXNE) != 0U)
 80216ee:	69fb      	ldr	r3, [r7, #28]
 80216f0:	f003 0320 	and.w	r3, r3, #32
 80216f4:	2b00      	cmp	r3, #0
 80216f6:	d00c      	beq.n	8021712 <HAL_UART_IRQHandler+0x18e>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 80216f8:	69bb      	ldr	r3, [r7, #24]
 80216fa:	f003 0320 	and.w	r3, r3, #32
 80216fe:	2b00      	cmp	r3, #0
 8021700:	d007      	beq.n	8021712 <HAL_UART_IRQHandler+0x18e>
      {
        if (huart->RxISR != NULL)
 8021702:	687b      	ldr	r3, [r7, #4]
 8021704:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8021706:	2b00      	cmp	r3, #0
 8021708:	d003      	beq.n	8021712 <HAL_UART_IRQHandler+0x18e>
        {
          huart->RxISR(huart);
 802170a:	687b      	ldr	r3, [r7, #4]
 802170c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802170e:	6878      	ldr	r0, [r7, #4]
 8021710:	4798      	blx	r3
      /* If Error is to be considered as blocking :
          - Receiver Timeout error in Reception
          - Overrun error in Reception
          - any error occurs in DMA mode reception
      */
      errorcode = huart->ErrorCode;
 8021712:	687b      	ldr	r3, [r7, #4]
 8021714:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8021718:	60fb      	str	r3, [r7, #12]
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 802171a:	687b      	ldr	r3, [r7, #4]
 802171c:	681b      	ldr	r3, [r3, #0]
 802171e:	689b      	ldr	r3, [r3, #8]
 8021720:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8021724:	2b40      	cmp	r3, #64	; 0x40
 8021726:	d004      	beq.n	8021732 <HAL_UART_IRQHandler+0x1ae>
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 8021728:	68fb      	ldr	r3, [r7, #12]
 802172a:	f003 0328 	and.w	r3, r3, #40	; 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 802172e:	2b00      	cmp	r3, #0
 8021730:	d031      	beq.n	8021796 <HAL_UART_IRQHandler+0x212>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 8021732:	6878      	ldr	r0, [r7, #4]
 8021734:	f000 fd6e 	bl	8022214 <UART_EndRxTransfer>

        /* Disable the UART DMA Rx request if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8021738:	687b      	ldr	r3, [r7, #4]
 802173a:	681b      	ldr	r3, [r3, #0]
 802173c:	689b      	ldr	r3, [r3, #8]
 802173e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8021742:	2b40      	cmp	r3, #64	; 0x40
 8021744:	d123      	bne.n	802178e <HAL_UART_IRQHandler+0x20a>
        {
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8021746:	687b      	ldr	r3, [r7, #4]
 8021748:	681b      	ldr	r3, [r3, #0]
 802174a:	689a      	ldr	r2, [r3, #8]
 802174c:	687b      	ldr	r3, [r7, #4]
 802174e:	681b      	ldr	r3, [r3, #0]
 8021750:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8021754:	609a      	str	r2, [r3, #8]

          /* Abort the UART DMA Rx channel */
          if (huart->hdmarx != NULL)
 8021756:	687b      	ldr	r3, [r7, #4]
 8021758:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802175a:	2b00      	cmp	r3, #0
 802175c:	d013      	beq.n	8021786 <HAL_UART_IRQHandler+0x202>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 802175e:	687b      	ldr	r3, [r7, #4]
 8021760:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021762:	4a4a      	ldr	r2, [pc, #296]	; (802188c <HAL_UART_IRQHandler+0x308>)
 8021764:	651a      	str	r2, [r3, #80]	; 0x50

            /* Abort DMA RX */
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8021766:	687b      	ldr	r3, [r7, #4]
 8021768:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802176a:	4618      	mov	r0, r3
 802176c:	f7fe fa93 	bl	801fc96 <HAL_DMA_Abort_IT>
 8021770:	4603      	mov	r3, r0
 8021772:	2b00      	cmp	r3, #0
 8021774:	d017      	beq.n	80217a6 <HAL_UART_IRQHandler+0x222>
            {
              /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8021776:	687b      	ldr	r3, [r7, #4]
 8021778:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802177a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 802177c:	687a      	ldr	r2, [r7, #4]
 802177e:	6f12      	ldr	r2, [r2, #112]	; 0x70
 8021780:	4610      	mov	r0, r2
 8021782:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8021784:	e00f      	b.n	80217a6 <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 8021786:	6878      	ldr	r0, [r7, #4]
 8021788:	f000 f8f2 	bl	8021970 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 802178c:	e00b      	b.n	80217a6 <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 802178e:	6878      	ldr	r0, [r7, #4]
 8021790:	f000 f8ee 	bl	8021970 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8021794:	e007      	b.n	80217a6 <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 8021796:	6878      	ldr	r0, [r7, #4]
 8021798:	f000 f8ea 	bl	8021970 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 802179c:	687b      	ldr	r3, [r7, #4]
 802179e:	2200      	movs	r2, #0
 80217a0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
      }
    }
    return;
 80217a4:	e0d0      	b.n	8021948 <HAL_UART_IRQHandler+0x3c4>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80217a6:	bf00      	nop
    return;
 80217a8:	e0ce      	b.n	8021948 <HAL_UART_IRQHandler+0x3c4>

  } /* End if some error occurs */

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : */
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80217aa:	687b      	ldr	r3, [r7, #4]
 80217ac:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80217ae:	2b01      	cmp	r3, #1
 80217b0:	f040 80a7 	bne.w	8021902 <HAL_UART_IRQHandler+0x37e>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 80217b4:	69fb      	ldr	r3, [r7, #28]
 80217b6:	f003 0310 	and.w	r3, r3, #16
 80217ba:	2b00      	cmp	r3, #0
 80217bc:	f000 80a1 	beq.w	8021902 <HAL_UART_IRQHandler+0x37e>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 80217c0:	69bb      	ldr	r3, [r7, #24]
 80217c2:	f003 0310 	and.w	r3, r3, #16
 80217c6:	2b00      	cmp	r3, #0
 80217c8:	f000 809b 	beq.w	8021902 <HAL_UART_IRQHandler+0x37e>
  {
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 80217cc:	687b      	ldr	r3, [r7, #4]
 80217ce:	681b      	ldr	r3, [r3, #0]
 80217d0:	2210      	movs	r2, #16
 80217d2:	621a      	str	r2, [r3, #32]

    /* Check if DMA mode is enabled in UART */
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80217d4:	687b      	ldr	r3, [r7, #4]
 80217d6:	681b      	ldr	r3, [r3, #0]
 80217d8:	689b      	ldr	r3, [r3, #8]
 80217da:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80217de:	2b40      	cmp	r3, #64	; 0x40
 80217e0:	d156      	bne.n	8021890 <HAL_UART_IRQHandler+0x30c>
    {
      /* DMA mode enabled */
      /* Check received length : If all expected data are received, do nothing,
         (DMA cplt callback will be called).
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 80217e2:	687b      	ldr	r3, [r7, #4]
 80217e4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80217e6:	681b      	ldr	r3, [r3, #0]
 80217e8:	685b      	ldr	r3, [r3, #4]
 80217ea:	813b      	strh	r3, [r7, #8]
      if ((nb_remaining_rx_data > 0U)
 80217ec:	893b      	ldrh	r3, [r7, #8]
 80217ee:	2b00      	cmp	r3, #0
 80217f0:	f000 80ac 	beq.w	802194c <HAL_UART_IRQHandler+0x3c8>
          && (nb_remaining_rx_data < huart->RxXferSize))
 80217f4:	687b      	ldr	r3, [r7, #4]
 80217f6:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 80217fa:	893a      	ldrh	r2, [r7, #8]
 80217fc:	429a      	cmp	r2, r3
 80217fe:	f080 80a5 	bcs.w	802194c <HAL_UART_IRQHandler+0x3c8>
      {
        /* Reception is not complete */
        huart->RxXferCount = nb_remaining_rx_data;
 8021802:	687b      	ldr	r3, [r7, #4]
 8021804:	893a      	ldrh	r2, [r7, #8]
 8021806:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

        /* In Normal mode, end DMA xfer and HAL UART Rx process*/
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 802180a:	687b      	ldr	r3, [r7, #4]
 802180c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802180e:	69db      	ldr	r3, [r3, #28]
 8021810:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8021814:	d02a      	beq.n	802186c <HAL_UART_IRQHandler+0x2e8>
        {
          /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8021816:	687b      	ldr	r3, [r7, #4]
 8021818:	681b      	ldr	r3, [r3, #0]
 802181a:	681a      	ldr	r2, [r3, #0]
 802181c:	687b      	ldr	r3, [r7, #4]
 802181e:	681b      	ldr	r3, [r3, #0]
 8021820:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8021824:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8021826:	687b      	ldr	r3, [r7, #4]
 8021828:	681b      	ldr	r3, [r3, #0]
 802182a:	689a      	ldr	r2, [r3, #8]
 802182c:	687b      	ldr	r3, [r7, #4]
 802182e:	681b      	ldr	r3, [r3, #0]
 8021830:	f022 0201 	bic.w	r2, r2, #1
 8021834:	609a      	str	r2, [r3, #8]

          /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
             in the UART CR3 register */
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8021836:	687b      	ldr	r3, [r7, #4]
 8021838:	681b      	ldr	r3, [r3, #0]
 802183a:	689a      	ldr	r2, [r3, #8]
 802183c:	687b      	ldr	r3, [r7, #4]
 802183e:	681b      	ldr	r3, [r3, #0]
 8021840:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8021844:	609a      	str	r2, [r3, #8]

          /* At end of Rx process, restore huart->RxState to Ready */
          huart->RxState = HAL_UART_STATE_READY;
 8021846:	687b      	ldr	r3, [r7, #4]
 8021848:	2220      	movs	r2, #32
 802184a:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802184c:	687b      	ldr	r3, [r7, #4]
 802184e:	2200      	movs	r2, #0
 8021850:	661a      	str	r2, [r3, #96]	; 0x60

          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8021852:	687b      	ldr	r3, [r7, #4]
 8021854:	681b      	ldr	r3, [r3, #0]
 8021856:	681a      	ldr	r2, [r3, #0]
 8021858:	687b      	ldr	r3, [r7, #4]
 802185a:	681b      	ldr	r3, [r3, #0]
 802185c:	f022 0210 	bic.w	r2, r2, #16
 8021860:	601a      	str	r2, [r3, #0]

          /* Last bytes received, so no need as the abort is immediate */
          (void)HAL_DMA_Abort(huart->hdmarx);
 8021862:	687b      	ldr	r3, [r7, #4]
 8021864:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021866:	4618      	mov	r0, r3
 8021868:	f7fe f9a5 	bl	801fbb6 <HAL_DMA_Abort>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 802186c:	687b      	ldr	r3, [r7, #4]
 802186e:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 8021872:	687b      	ldr	r3, [r7, #4]
 8021874:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8021878:	b29b      	uxth	r3, r3
 802187a:	1ad3      	subs	r3, r2, r3
 802187c:	b29b      	uxth	r3, r3
 802187e:	4619      	mov	r1, r3
 8021880:	6878      	ldr	r0, [r7, #4]
 8021882:	f000 f87f 	bl	8021984 <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 8021886:	e061      	b.n	802194c <HAL_UART_IRQHandler+0x3c8>
 8021888:	04000120 	.word	0x04000120
 802188c:	08022273 	.word	0x08022273
    else
    {
      /* DMA mode not enabled */
      /* Check received length : If all expected data are received, do nothing.
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8021890:	687b      	ldr	r3, [r7, #4]
 8021892:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 8021896:	687b      	ldr	r3, [r7, #4]
 8021898:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 802189c:	b29b      	uxth	r3, r3
 802189e:	1ad3      	subs	r3, r2, r3
 80218a0:	817b      	strh	r3, [r7, #10]
      if ((huart->RxXferCount > 0U)
 80218a2:	687b      	ldr	r3, [r7, #4]
 80218a4:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80218a8:	b29b      	uxth	r3, r3
 80218aa:	2b00      	cmp	r3, #0
 80218ac:	d050      	beq.n	8021950 <HAL_UART_IRQHandler+0x3cc>
          && (nb_rx_data > 0U))
 80218ae:	897b      	ldrh	r3, [r7, #10]
 80218b0:	2b00      	cmp	r3, #0
 80218b2:	d04d      	beq.n	8021950 <HAL_UART_IRQHandler+0x3cc>
      {
        /* Disable the UART Parity Error Interrupt and RXNE interrupts */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80218b4:	687b      	ldr	r3, [r7, #4]
 80218b6:	681b      	ldr	r3, [r3, #0]
 80218b8:	681a      	ldr	r2, [r3, #0]
 80218ba:	687b      	ldr	r3, [r7, #4]
 80218bc:	681b      	ldr	r3, [r3, #0]
 80218be:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80218c2:	601a      	str	r2, [r3, #0]

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80218c4:	687b      	ldr	r3, [r7, #4]
 80218c6:	681b      	ldr	r3, [r3, #0]
 80218c8:	689a      	ldr	r2, [r3, #8]
 80218ca:	687b      	ldr	r3, [r7, #4]
 80218cc:	681b      	ldr	r3, [r3, #0]
 80218ce:	f022 0201 	bic.w	r2, r2, #1
 80218d2:	609a      	str	r2, [r3, #8]

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 80218d4:	687b      	ldr	r3, [r7, #4]
 80218d6:	2220      	movs	r2, #32
 80218d8:	67da      	str	r2, [r3, #124]	; 0x7c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80218da:	687b      	ldr	r3, [r7, #4]
 80218dc:	2200      	movs	r2, #0
 80218de:	661a      	str	r2, [r3, #96]	; 0x60

        /* Clear RxISR function pointer */
        huart->RxISR = NULL;
 80218e0:	687b      	ldr	r3, [r7, #4]
 80218e2:	2200      	movs	r2, #0
 80218e4:	665a      	str	r2, [r3, #100]	; 0x64

        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80218e6:	687b      	ldr	r3, [r7, #4]
 80218e8:	681b      	ldr	r3, [r3, #0]
 80218ea:	681a      	ldr	r2, [r3, #0]
 80218ec:	687b      	ldr	r3, [r7, #4]
 80218ee:	681b      	ldr	r3, [r3, #0]
 80218f0:	f022 0210 	bic.w	r2, r2, #16
 80218f4:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxEventCallback(huart, nb_rx_data);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 80218f6:	897b      	ldrh	r3, [r7, #10]
 80218f8:	4619      	mov	r1, r3
 80218fa:	6878      	ldr	r0, [r7, #4]
 80218fc:	f000 f842 	bl	8021984 <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 8021900:	e026      	b.n	8021950 <HAL_UART_IRQHandler+0x3cc>
  }
#endif /* USART_CR3_WUFIE */
#endif /* USART_CR1_UESM */

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_ISR_TXE) != 0U)
 8021902:	69fb      	ldr	r3, [r7, #28]
 8021904:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8021908:	2b00      	cmp	r3, #0
 802190a:	d00d      	beq.n	8021928 <HAL_UART_IRQHandler+0x3a4>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 802190c:	69bb      	ldr	r3, [r7, #24]
 802190e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8021912:	2b00      	cmp	r3, #0
 8021914:	d008      	beq.n	8021928 <HAL_UART_IRQHandler+0x3a4>
  {
    if (huart->TxISR != NULL)
 8021916:	687b      	ldr	r3, [r7, #4]
 8021918:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 802191a:	2b00      	cmp	r3, #0
 802191c:	d01a      	beq.n	8021954 <HAL_UART_IRQHandler+0x3d0>
    {
      huart->TxISR(huart);
 802191e:	687b      	ldr	r3, [r7, #4]
 8021920:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8021922:	6878      	ldr	r0, [r7, #4]
 8021924:	4798      	blx	r3
    }
    return;
 8021926:	e015      	b.n	8021954 <HAL_UART_IRQHandler+0x3d0>
  }

  /* UART in mode Transmitter (transmission end) -----------------------------*/
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 8021928:	69fb      	ldr	r3, [r7, #28]
 802192a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 802192e:	2b00      	cmp	r3, #0
 8021930:	d011      	beq.n	8021956 <HAL_UART_IRQHandler+0x3d2>
 8021932:	69bb      	ldr	r3, [r7, #24]
 8021934:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8021938:	2b00      	cmp	r3, #0
 802193a:	d00c      	beq.n	8021956 <HAL_UART_IRQHandler+0x3d2>
  {
    UART_EndTransmit_IT(huart);
 802193c:	6878      	ldr	r0, [r7, #4]
 802193e:	f000 fcae 	bl	802229e <UART_EndTransmit_IT>
    return;
 8021942:	e008      	b.n	8021956 <HAL_UART_IRQHandler+0x3d2>
      return;
 8021944:	bf00      	nop
 8021946:	e006      	b.n	8021956 <HAL_UART_IRQHandler+0x3d2>
    return;
 8021948:	bf00      	nop
 802194a:	e004      	b.n	8021956 <HAL_UART_IRQHandler+0x3d2>
      return;
 802194c:	bf00      	nop
 802194e:	e002      	b.n	8021956 <HAL_UART_IRQHandler+0x3d2>
      return;
 8021950:	bf00      	nop
 8021952:	e000      	b.n	8021956 <HAL_UART_IRQHandler+0x3d2>
    return;
 8021954:	bf00      	nop
  }

}
 8021956:	3720      	adds	r7, #32
 8021958:	46bd      	mov	sp, r7
 802195a:	bd80      	pop	{r7, pc}

0802195c <HAL_UART_TxCpltCallback>:
  * @brief Tx Transfer completed callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 802195c:	b480      	push	{r7}
 802195e:	b083      	sub	sp, #12
 8021960:	af00      	add	r7, sp, #0
 8021962:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_TxCpltCallback can be implemented in the user file.
   */
}
 8021964:	bf00      	nop
 8021966:	370c      	adds	r7, #12
 8021968:	46bd      	mov	sp, r7
 802196a:	f85d 7b04 	ldr.w	r7, [sp], #4
 802196e:	4770      	bx	lr

08021970 <HAL_UART_ErrorCallback>:
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 8021970:	b480      	push	{r7}
 8021972:	b083      	sub	sp, #12
 8021974:	af00      	add	r7, sp, #0
 8021976:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_ErrorCallback can be implemented in the user file.
   */
}
 8021978:	bf00      	nop
 802197a:	370c      	adds	r7, #12
 802197c:	46bd      	mov	sp, r7
 802197e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8021982:	4770      	bx	lr

08021984 <HAL_UARTEx_RxEventCallback>:
  * @param  Size  Number of data available in application reception buffer (indicates a position in
  *               reception buffer until which, data are available)
  * @retval None
  */
__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 8021984:	b480      	push	{r7}
 8021986:	b083      	sub	sp, #12
 8021988:	af00      	add	r7, sp, #0
 802198a:	6078      	str	r0, [r7, #4]
 802198c:	460b      	mov	r3, r1
 802198e:	807b      	strh	r3, [r7, #2]
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 8021990:	bf00      	nop
 8021992:	370c      	adds	r7, #12
 8021994:	46bd      	mov	sp, r7
 8021996:	f85d 7b04 	ldr.w	r7, [sp], #4
 802199a:	4770      	bx	lr

0802199c <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 802199c:	b580      	push	{r7, lr}
 802199e:	b088      	sub	sp, #32
 80219a0:	af00      	add	r7, sp, #0
 80219a2:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 80219a4:	2300      	movs	r3, #0
 80219a6:	77bb      	strb	r3, [r7, #30]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80219a8:	687b      	ldr	r3, [r7, #4]
 80219aa:	689a      	ldr	r2, [r3, #8]
 80219ac:	687b      	ldr	r3, [r7, #4]
 80219ae:	691b      	ldr	r3, [r3, #16]
 80219b0:	431a      	orrs	r2, r3
 80219b2:	687b      	ldr	r3, [r7, #4]
 80219b4:	695b      	ldr	r3, [r3, #20]
 80219b6:	431a      	orrs	r2, r3
 80219b8:	687b      	ldr	r3, [r7, #4]
 80219ba:	69db      	ldr	r3, [r3, #28]
 80219bc:	4313      	orrs	r3, r2
 80219be:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80219c0:	687b      	ldr	r3, [r7, #4]
 80219c2:	681b      	ldr	r3, [r3, #0]
 80219c4:	681a      	ldr	r2, [r3, #0]
 80219c6:	4ba7      	ldr	r3, [pc, #668]	; (8021c64 <UART_SetConfig+0x2c8>)
 80219c8:	4013      	ands	r3, r2
 80219ca:	687a      	ldr	r2, [r7, #4]
 80219cc:	6812      	ldr	r2, [r2, #0]
 80219ce:	6979      	ldr	r1, [r7, #20]
 80219d0:	430b      	orrs	r3, r1
 80219d2:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80219d4:	687b      	ldr	r3, [r7, #4]
 80219d6:	681b      	ldr	r3, [r3, #0]
 80219d8:	685b      	ldr	r3, [r3, #4]
 80219da:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80219de:	687b      	ldr	r3, [r7, #4]
 80219e0:	68da      	ldr	r2, [r3, #12]
 80219e2:	687b      	ldr	r3, [r7, #4]
 80219e4:	681b      	ldr	r3, [r3, #0]
 80219e6:	430a      	orrs	r2, r1
 80219e8:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 80219ea:	687b      	ldr	r3, [r7, #4]
 80219ec:	699b      	ldr	r3, [r3, #24]
 80219ee:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 80219f0:	687b      	ldr	r3, [r7, #4]
 80219f2:	6a1b      	ldr	r3, [r3, #32]
 80219f4:	697a      	ldr	r2, [r7, #20]
 80219f6:	4313      	orrs	r3, r2
 80219f8:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80219fa:	687b      	ldr	r3, [r7, #4]
 80219fc:	681b      	ldr	r3, [r3, #0]
 80219fe:	689b      	ldr	r3, [r3, #8]
 8021a00:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8021a04:	687b      	ldr	r3, [r7, #4]
 8021a06:	681b      	ldr	r3, [r3, #0]
 8021a08:	697a      	ldr	r2, [r7, #20]
 8021a0a:	430a      	orrs	r2, r1
 8021a0c:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8021a0e:	687b      	ldr	r3, [r7, #4]
 8021a10:	681b      	ldr	r3, [r3, #0]
 8021a12:	4a95      	ldr	r2, [pc, #596]	; (8021c68 <UART_SetConfig+0x2cc>)
 8021a14:	4293      	cmp	r3, r2
 8021a16:	d120      	bne.n	8021a5a <UART_SetConfig+0xbe>
 8021a18:	4b94      	ldr	r3, [pc, #592]	; (8021c6c <UART_SetConfig+0x2d0>)
 8021a1a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021a1e:	f003 0303 	and.w	r3, r3, #3
 8021a22:	2b03      	cmp	r3, #3
 8021a24:	d816      	bhi.n	8021a54 <UART_SetConfig+0xb8>
 8021a26:	a201      	add	r2, pc, #4	; (adr r2, 8021a2c <UART_SetConfig+0x90>)
 8021a28:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8021a2c:	08021a3d 	.word	0x08021a3d
 8021a30:	08021a49 	.word	0x08021a49
 8021a34:	08021a43 	.word	0x08021a43
 8021a38:	08021a4f 	.word	0x08021a4f
 8021a3c:	2301      	movs	r3, #1
 8021a3e:	77fb      	strb	r3, [r7, #31]
 8021a40:	e14f      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021a42:	2302      	movs	r3, #2
 8021a44:	77fb      	strb	r3, [r7, #31]
 8021a46:	e14c      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021a48:	2304      	movs	r3, #4
 8021a4a:	77fb      	strb	r3, [r7, #31]
 8021a4c:	e149      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021a4e:	2308      	movs	r3, #8
 8021a50:	77fb      	strb	r3, [r7, #31]
 8021a52:	e146      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021a54:	2310      	movs	r3, #16
 8021a56:	77fb      	strb	r3, [r7, #31]
 8021a58:	e143      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021a5a:	687b      	ldr	r3, [r7, #4]
 8021a5c:	681b      	ldr	r3, [r3, #0]
 8021a5e:	4a84      	ldr	r2, [pc, #528]	; (8021c70 <UART_SetConfig+0x2d4>)
 8021a60:	4293      	cmp	r3, r2
 8021a62:	d132      	bne.n	8021aca <UART_SetConfig+0x12e>
 8021a64:	4b81      	ldr	r3, [pc, #516]	; (8021c6c <UART_SetConfig+0x2d0>)
 8021a66:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021a6a:	f003 030c 	and.w	r3, r3, #12
 8021a6e:	2b0c      	cmp	r3, #12
 8021a70:	d828      	bhi.n	8021ac4 <UART_SetConfig+0x128>
 8021a72:	a201      	add	r2, pc, #4	; (adr r2, 8021a78 <UART_SetConfig+0xdc>)
 8021a74:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8021a78:	08021aad 	.word	0x08021aad
 8021a7c:	08021ac5 	.word	0x08021ac5
 8021a80:	08021ac5 	.word	0x08021ac5
 8021a84:	08021ac5 	.word	0x08021ac5
 8021a88:	08021ab9 	.word	0x08021ab9
 8021a8c:	08021ac5 	.word	0x08021ac5
 8021a90:	08021ac5 	.word	0x08021ac5
 8021a94:	08021ac5 	.word	0x08021ac5
 8021a98:	08021ab3 	.word	0x08021ab3
 8021a9c:	08021ac5 	.word	0x08021ac5
 8021aa0:	08021ac5 	.word	0x08021ac5
 8021aa4:	08021ac5 	.word	0x08021ac5
 8021aa8:	08021abf 	.word	0x08021abf
 8021aac:	2300      	movs	r3, #0
 8021aae:	77fb      	strb	r3, [r7, #31]
 8021ab0:	e117      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021ab2:	2302      	movs	r3, #2
 8021ab4:	77fb      	strb	r3, [r7, #31]
 8021ab6:	e114      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021ab8:	2304      	movs	r3, #4
 8021aba:	77fb      	strb	r3, [r7, #31]
 8021abc:	e111      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021abe:	2308      	movs	r3, #8
 8021ac0:	77fb      	strb	r3, [r7, #31]
 8021ac2:	e10e      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021ac4:	2310      	movs	r3, #16
 8021ac6:	77fb      	strb	r3, [r7, #31]
 8021ac8:	e10b      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021aca:	687b      	ldr	r3, [r7, #4]
 8021acc:	681b      	ldr	r3, [r3, #0]
 8021ace:	4a69      	ldr	r2, [pc, #420]	; (8021c74 <UART_SetConfig+0x2d8>)
 8021ad0:	4293      	cmp	r3, r2
 8021ad2:	d120      	bne.n	8021b16 <UART_SetConfig+0x17a>
 8021ad4:	4b65      	ldr	r3, [pc, #404]	; (8021c6c <UART_SetConfig+0x2d0>)
 8021ad6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021ada:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8021ade:	2b30      	cmp	r3, #48	; 0x30
 8021ae0:	d013      	beq.n	8021b0a <UART_SetConfig+0x16e>
 8021ae2:	2b30      	cmp	r3, #48	; 0x30
 8021ae4:	d814      	bhi.n	8021b10 <UART_SetConfig+0x174>
 8021ae6:	2b20      	cmp	r3, #32
 8021ae8:	d009      	beq.n	8021afe <UART_SetConfig+0x162>
 8021aea:	2b20      	cmp	r3, #32
 8021aec:	d810      	bhi.n	8021b10 <UART_SetConfig+0x174>
 8021aee:	2b00      	cmp	r3, #0
 8021af0:	d002      	beq.n	8021af8 <UART_SetConfig+0x15c>
 8021af2:	2b10      	cmp	r3, #16
 8021af4:	d006      	beq.n	8021b04 <UART_SetConfig+0x168>
 8021af6:	e00b      	b.n	8021b10 <UART_SetConfig+0x174>
 8021af8:	2300      	movs	r3, #0
 8021afa:	77fb      	strb	r3, [r7, #31]
 8021afc:	e0f1      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021afe:	2302      	movs	r3, #2
 8021b00:	77fb      	strb	r3, [r7, #31]
 8021b02:	e0ee      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021b04:	2304      	movs	r3, #4
 8021b06:	77fb      	strb	r3, [r7, #31]
 8021b08:	e0eb      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021b0a:	2308      	movs	r3, #8
 8021b0c:	77fb      	strb	r3, [r7, #31]
 8021b0e:	e0e8      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021b10:	2310      	movs	r3, #16
 8021b12:	77fb      	strb	r3, [r7, #31]
 8021b14:	e0e5      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021b16:	687b      	ldr	r3, [r7, #4]
 8021b18:	681b      	ldr	r3, [r3, #0]
 8021b1a:	4a57      	ldr	r2, [pc, #348]	; (8021c78 <UART_SetConfig+0x2dc>)
 8021b1c:	4293      	cmp	r3, r2
 8021b1e:	d120      	bne.n	8021b62 <UART_SetConfig+0x1c6>
 8021b20:	4b52      	ldr	r3, [pc, #328]	; (8021c6c <UART_SetConfig+0x2d0>)
 8021b22:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021b26:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8021b2a:	2bc0      	cmp	r3, #192	; 0xc0
 8021b2c:	d013      	beq.n	8021b56 <UART_SetConfig+0x1ba>
 8021b2e:	2bc0      	cmp	r3, #192	; 0xc0
 8021b30:	d814      	bhi.n	8021b5c <UART_SetConfig+0x1c0>
 8021b32:	2b80      	cmp	r3, #128	; 0x80
 8021b34:	d009      	beq.n	8021b4a <UART_SetConfig+0x1ae>
 8021b36:	2b80      	cmp	r3, #128	; 0x80
 8021b38:	d810      	bhi.n	8021b5c <UART_SetConfig+0x1c0>
 8021b3a:	2b00      	cmp	r3, #0
 8021b3c:	d002      	beq.n	8021b44 <UART_SetConfig+0x1a8>
 8021b3e:	2b40      	cmp	r3, #64	; 0x40
 8021b40:	d006      	beq.n	8021b50 <UART_SetConfig+0x1b4>
 8021b42:	e00b      	b.n	8021b5c <UART_SetConfig+0x1c0>
 8021b44:	2300      	movs	r3, #0
 8021b46:	77fb      	strb	r3, [r7, #31]
 8021b48:	e0cb      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021b4a:	2302      	movs	r3, #2
 8021b4c:	77fb      	strb	r3, [r7, #31]
 8021b4e:	e0c8      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021b50:	2304      	movs	r3, #4
 8021b52:	77fb      	strb	r3, [r7, #31]
 8021b54:	e0c5      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021b56:	2308      	movs	r3, #8
 8021b58:	77fb      	strb	r3, [r7, #31]
 8021b5a:	e0c2      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021b5c:	2310      	movs	r3, #16
 8021b5e:	77fb      	strb	r3, [r7, #31]
 8021b60:	e0bf      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021b62:	687b      	ldr	r3, [r7, #4]
 8021b64:	681b      	ldr	r3, [r3, #0]
 8021b66:	4a45      	ldr	r2, [pc, #276]	; (8021c7c <UART_SetConfig+0x2e0>)
 8021b68:	4293      	cmp	r3, r2
 8021b6a:	d125      	bne.n	8021bb8 <UART_SetConfig+0x21c>
 8021b6c:	4b3f      	ldr	r3, [pc, #252]	; (8021c6c <UART_SetConfig+0x2d0>)
 8021b6e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021b72:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8021b76:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8021b7a:	d017      	beq.n	8021bac <UART_SetConfig+0x210>
 8021b7c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8021b80:	d817      	bhi.n	8021bb2 <UART_SetConfig+0x216>
 8021b82:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021b86:	d00b      	beq.n	8021ba0 <UART_SetConfig+0x204>
 8021b88:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021b8c:	d811      	bhi.n	8021bb2 <UART_SetConfig+0x216>
 8021b8e:	2b00      	cmp	r3, #0
 8021b90:	d003      	beq.n	8021b9a <UART_SetConfig+0x1fe>
 8021b92:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8021b96:	d006      	beq.n	8021ba6 <UART_SetConfig+0x20a>
 8021b98:	e00b      	b.n	8021bb2 <UART_SetConfig+0x216>
 8021b9a:	2300      	movs	r3, #0
 8021b9c:	77fb      	strb	r3, [r7, #31]
 8021b9e:	e0a0      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021ba0:	2302      	movs	r3, #2
 8021ba2:	77fb      	strb	r3, [r7, #31]
 8021ba4:	e09d      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021ba6:	2304      	movs	r3, #4
 8021ba8:	77fb      	strb	r3, [r7, #31]
 8021baa:	e09a      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021bac:	2308      	movs	r3, #8
 8021bae:	77fb      	strb	r3, [r7, #31]
 8021bb0:	e097      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021bb2:	2310      	movs	r3, #16
 8021bb4:	77fb      	strb	r3, [r7, #31]
 8021bb6:	e094      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021bb8:	687b      	ldr	r3, [r7, #4]
 8021bba:	681b      	ldr	r3, [r3, #0]
 8021bbc:	4a30      	ldr	r2, [pc, #192]	; (8021c80 <UART_SetConfig+0x2e4>)
 8021bbe:	4293      	cmp	r3, r2
 8021bc0:	d125      	bne.n	8021c0e <UART_SetConfig+0x272>
 8021bc2:	4b2a      	ldr	r3, [pc, #168]	; (8021c6c <UART_SetConfig+0x2d0>)
 8021bc4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021bc8:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8021bcc:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8021bd0:	d017      	beq.n	8021c02 <UART_SetConfig+0x266>
 8021bd2:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8021bd6:	d817      	bhi.n	8021c08 <UART_SetConfig+0x26c>
 8021bd8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8021bdc:	d00b      	beq.n	8021bf6 <UART_SetConfig+0x25a>
 8021bde:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8021be2:	d811      	bhi.n	8021c08 <UART_SetConfig+0x26c>
 8021be4:	2b00      	cmp	r3, #0
 8021be6:	d003      	beq.n	8021bf0 <UART_SetConfig+0x254>
 8021be8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8021bec:	d006      	beq.n	8021bfc <UART_SetConfig+0x260>
 8021bee:	e00b      	b.n	8021c08 <UART_SetConfig+0x26c>
 8021bf0:	2301      	movs	r3, #1
 8021bf2:	77fb      	strb	r3, [r7, #31]
 8021bf4:	e075      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021bf6:	2302      	movs	r3, #2
 8021bf8:	77fb      	strb	r3, [r7, #31]
 8021bfa:	e072      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021bfc:	2304      	movs	r3, #4
 8021bfe:	77fb      	strb	r3, [r7, #31]
 8021c00:	e06f      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021c02:	2308      	movs	r3, #8
 8021c04:	77fb      	strb	r3, [r7, #31]
 8021c06:	e06c      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021c08:	2310      	movs	r3, #16
 8021c0a:	77fb      	strb	r3, [r7, #31]
 8021c0c:	e069      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021c0e:	687b      	ldr	r3, [r7, #4]
 8021c10:	681b      	ldr	r3, [r3, #0]
 8021c12:	4a1c      	ldr	r2, [pc, #112]	; (8021c84 <UART_SetConfig+0x2e8>)
 8021c14:	4293      	cmp	r3, r2
 8021c16:	d137      	bne.n	8021c88 <UART_SetConfig+0x2ec>
 8021c18:	4b14      	ldr	r3, [pc, #80]	; (8021c6c <UART_SetConfig+0x2d0>)
 8021c1a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021c1e:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8021c22:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8021c26:	d017      	beq.n	8021c58 <UART_SetConfig+0x2bc>
 8021c28:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8021c2c:	d817      	bhi.n	8021c5e <UART_SetConfig+0x2c2>
 8021c2e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8021c32:	d00b      	beq.n	8021c4c <UART_SetConfig+0x2b0>
 8021c34:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8021c38:	d811      	bhi.n	8021c5e <UART_SetConfig+0x2c2>
 8021c3a:	2b00      	cmp	r3, #0
 8021c3c:	d003      	beq.n	8021c46 <UART_SetConfig+0x2aa>
 8021c3e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8021c42:	d006      	beq.n	8021c52 <UART_SetConfig+0x2b6>
 8021c44:	e00b      	b.n	8021c5e <UART_SetConfig+0x2c2>
 8021c46:	2300      	movs	r3, #0
 8021c48:	77fb      	strb	r3, [r7, #31]
 8021c4a:	e04a      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021c4c:	2302      	movs	r3, #2
 8021c4e:	77fb      	strb	r3, [r7, #31]
 8021c50:	e047      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021c52:	2304      	movs	r3, #4
 8021c54:	77fb      	strb	r3, [r7, #31]
 8021c56:	e044      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021c58:	2308      	movs	r3, #8
 8021c5a:	77fb      	strb	r3, [r7, #31]
 8021c5c:	e041      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021c5e:	2310      	movs	r3, #16
 8021c60:	77fb      	strb	r3, [r7, #31]
 8021c62:	e03e      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021c64:	efff69f3 	.word	0xefff69f3
 8021c68:	40011000 	.word	0x40011000
 8021c6c:	40023800 	.word	0x40023800
 8021c70:	40004400 	.word	0x40004400
 8021c74:	40004800 	.word	0x40004800
 8021c78:	40004c00 	.word	0x40004c00
 8021c7c:	40005000 	.word	0x40005000
 8021c80:	40011400 	.word	0x40011400
 8021c84:	40007800 	.word	0x40007800
 8021c88:	687b      	ldr	r3, [r7, #4]
 8021c8a:	681b      	ldr	r3, [r3, #0]
 8021c8c:	4a71      	ldr	r2, [pc, #452]	; (8021e54 <UART_SetConfig+0x4b8>)
 8021c8e:	4293      	cmp	r3, r2
 8021c90:	d125      	bne.n	8021cde <UART_SetConfig+0x342>
 8021c92:	4b71      	ldr	r3, [pc, #452]	; (8021e58 <UART_SetConfig+0x4bc>)
 8021c94:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021c98:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8021c9c:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8021ca0:	d017      	beq.n	8021cd2 <UART_SetConfig+0x336>
 8021ca2:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8021ca6:	d817      	bhi.n	8021cd8 <UART_SetConfig+0x33c>
 8021ca8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8021cac:	d00b      	beq.n	8021cc6 <UART_SetConfig+0x32a>
 8021cae:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8021cb2:	d811      	bhi.n	8021cd8 <UART_SetConfig+0x33c>
 8021cb4:	2b00      	cmp	r3, #0
 8021cb6:	d003      	beq.n	8021cc0 <UART_SetConfig+0x324>
 8021cb8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8021cbc:	d006      	beq.n	8021ccc <UART_SetConfig+0x330>
 8021cbe:	e00b      	b.n	8021cd8 <UART_SetConfig+0x33c>
 8021cc0:	2300      	movs	r3, #0
 8021cc2:	77fb      	strb	r3, [r7, #31]
 8021cc4:	e00d      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021cc6:	2302      	movs	r3, #2
 8021cc8:	77fb      	strb	r3, [r7, #31]
 8021cca:	e00a      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021ccc:	2304      	movs	r3, #4
 8021cce:	77fb      	strb	r3, [r7, #31]
 8021cd0:	e007      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021cd2:	2308      	movs	r3, #8
 8021cd4:	77fb      	strb	r3, [r7, #31]
 8021cd6:	e004      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021cd8:	2310      	movs	r3, #16
 8021cda:	77fb      	strb	r3, [r7, #31]
 8021cdc:	e001      	b.n	8021ce2 <UART_SetConfig+0x346>
 8021cde:	2310      	movs	r3, #16
 8021ce0:	77fb      	strb	r3, [r7, #31]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8021ce2:	687b      	ldr	r3, [r7, #4]
 8021ce4:	69db      	ldr	r3, [r3, #28]
 8021ce6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8021cea:	d15b      	bne.n	8021da4 <UART_SetConfig+0x408>
  {
    switch (clocksource)
 8021cec:	7ffb      	ldrb	r3, [r7, #31]
 8021cee:	2b08      	cmp	r3, #8
 8021cf0:	d827      	bhi.n	8021d42 <UART_SetConfig+0x3a6>
 8021cf2:	a201      	add	r2, pc, #4	; (adr r2, 8021cf8 <UART_SetConfig+0x35c>)
 8021cf4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8021cf8:	08021d1d 	.word	0x08021d1d
 8021cfc:	08021d25 	.word	0x08021d25
 8021d00:	08021d2d 	.word	0x08021d2d
 8021d04:	08021d43 	.word	0x08021d43
 8021d08:	08021d33 	.word	0x08021d33
 8021d0c:	08021d43 	.word	0x08021d43
 8021d10:	08021d43 	.word	0x08021d43
 8021d14:	08021d43 	.word	0x08021d43
 8021d18:	08021d3b 	.word	0x08021d3b
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8021d1c:	f7fe fe2c 	bl	8020978 <HAL_RCC_GetPCLK1Freq>
 8021d20:	61b8      	str	r0, [r7, #24]
        break;
 8021d22:	e013      	b.n	8021d4c <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8021d24:	f7fe fe3c 	bl	80209a0 <HAL_RCC_GetPCLK2Freq>
 8021d28:	61b8      	str	r0, [r7, #24]
        break;
 8021d2a:	e00f      	b.n	8021d4c <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8021d2c:	4b4b      	ldr	r3, [pc, #300]	; (8021e5c <UART_SetConfig+0x4c0>)
 8021d2e:	61bb      	str	r3, [r7, #24]
        break;
 8021d30:	e00c      	b.n	8021d4c <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8021d32:	f7fe fd5f 	bl	80207f4 <HAL_RCC_GetSysClockFreq>
 8021d36:	61b8      	str	r0, [r7, #24]
        break;
 8021d38:	e008      	b.n	8021d4c <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8021d3a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8021d3e:	61bb      	str	r3, [r7, #24]
        break;
 8021d40:	e004      	b.n	8021d4c <UART_SetConfig+0x3b0>
      default:
        pclk = 0U;
 8021d42:	2300      	movs	r3, #0
 8021d44:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8021d46:	2301      	movs	r3, #1
 8021d48:	77bb      	strb	r3, [r7, #30]
        break;
 8021d4a:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 8021d4c:	69bb      	ldr	r3, [r7, #24]
 8021d4e:	2b00      	cmp	r3, #0
 8021d50:	d074      	beq.n	8021e3c <UART_SetConfig+0x4a0>
    {
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8021d52:	69bb      	ldr	r3, [r7, #24]
 8021d54:	005a      	lsls	r2, r3, #1
 8021d56:	687b      	ldr	r3, [r7, #4]
 8021d58:	685b      	ldr	r3, [r3, #4]
 8021d5a:	085b      	lsrs	r3, r3, #1
 8021d5c:	441a      	add	r2, r3
 8021d5e:	687b      	ldr	r3, [r7, #4]
 8021d60:	685b      	ldr	r3, [r3, #4]
 8021d62:	fbb2 f3f3 	udiv	r3, r2, r3
 8021d66:	b29b      	uxth	r3, r3
 8021d68:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8021d6a:	693b      	ldr	r3, [r7, #16]
 8021d6c:	2b0f      	cmp	r3, #15
 8021d6e:	d916      	bls.n	8021d9e <UART_SetConfig+0x402>
 8021d70:	693b      	ldr	r3, [r7, #16]
 8021d72:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8021d76:	d212      	bcs.n	8021d9e <UART_SetConfig+0x402>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8021d78:	693b      	ldr	r3, [r7, #16]
 8021d7a:	b29b      	uxth	r3, r3
 8021d7c:	f023 030f 	bic.w	r3, r3, #15
 8021d80:	81fb      	strh	r3, [r7, #14]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8021d82:	693b      	ldr	r3, [r7, #16]
 8021d84:	085b      	lsrs	r3, r3, #1
 8021d86:	b29b      	uxth	r3, r3
 8021d88:	f003 0307 	and.w	r3, r3, #7
 8021d8c:	b29a      	uxth	r2, r3
 8021d8e:	89fb      	ldrh	r3, [r7, #14]
 8021d90:	4313      	orrs	r3, r2
 8021d92:	81fb      	strh	r3, [r7, #14]
        huart->Instance->BRR = brrtemp;
 8021d94:	687b      	ldr	r3, [r7, #4]
 8021d96:	681b      	ldr	r3, [r3, #0]
 8021d98:	89fa      	ldrh	r2, [r7, #14]
 8021d9a:	60da      	str	r2, [r3, #12]
 8021d9c:	e04e      	b.n	8021e3c <UART_SetConfig+0x4a0>
      }
      else
      {
        ret = HAL_ERROR;
 8021d9e:	2301      	movs	r3, #1
 8021da0:	77bb      	strb	r3, [r7, #30]
 8021da2:	e04b      	b.n	8021e3c <UART_SetConfig+0x4a0>
      }
    }
  }
  else
  {
    switch (clocksource)
 8021da4:	7ffb      	ldrb	r3, [r7, #31]
 8021da6:	2b08      	cmp	r3, #8
 8021da8:	d827      	bhi.n	8021dfa <UART_SetConfig+0x45e>
 8021daa:	a201      	add	r2, pc, #4	; (adr r2, 8021db0 <UART_SetConfig+0x414>)
 8021dac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8021db0:	08021dd5 	.word	0x08021dd5
 8021db4:	08021ddd 	.word	0x08021ddd
 8021db8:	08021de5 	.word	0x08021de5
 8021dbc:	08021dfb 	.word	0x08021dfb
 8021dc0:	08021deb 	.word	0x08021deb
 8021dc4:	08021dfb 	.word	0x08021dfb
 8021dc8:	08021dfb 	.word	0x08021dfb
 8021dcc:	08021dfb 	.word	0x08021dfb
 8021dd0:	08021df3 	.word	0x08021df3
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8021dd4:	f7fe fdd0 	bl	8020978 <HAL_RCC_GetPCLK1Freq>
 8021dd8:	61b8      	str	r0, [r7, #24]
        break;
 8021dda:	e013      	b.n	8021e04 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8021ddc:	f7fe fde0 	bl	80209a0 <HAL_RCC_GetPCLK2Freq>
 8021de0:	61b8      	str	r0, [r7, #24]
        break;
 8021de2:	e00f      	b.n	8021e04 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8021de4:	4b1d      	ldr	r3, [pc, #116]	; (8021e5c <UART_SetConfig+0x4c0>)
 8021de6:	61bb      	str	r3, [r7, #24]
        break;
 8021de8:	e00c      	b.n	8021e04 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8021dea:	f7fe fd03 	bl	80207f4 <HAL_RCC_GetSysClockFreq>
 8021dee:	61b8      	str	r0, [r7, #24]
        break;
 8021df0:	e008      	b.n	8021e04 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8021df2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8021df6:	61bb      	str	r3, [r7, #24]
        break;
 8021df8:	e004      	b.n	8021e04 <UART_SetConfig+0x468>
      default:
        pclk = 0U;
 8021dfa:	2300      	movs	r3, #0
 8021dfc:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8021dfe:	2301      	movs	r3, #1
 8021e00:	77bb      	strb	r3, [r7, #30]
        break;
 8021e02:	bf00      	nop
    }

    if (pclk != 0U)
 8021e04:	69bb      	ldr	r3, [r7, #24]
 8021e06:	2b00      	cmp	r3, #0
 8021e08:	d018      	beq.n	8021e3c <UART_SetConfig+0x4a0>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8021e0a:	687b      	ldr	r3, [r7, #4]
 8021e0c:	685b      	ldr	r3, [r3, #4]
 8021e0e:	085a      	lsrs	r2, r3, #1
 8021e10:	69bb      	ldr	r3, [r7, #24]
 8021e12:	441a      	add	r2, r3
 8021e14:	687b      	ldr	r3, [r7, #4]
 8021e16:	685b      	ldr	r3, [r3, #4]
 8021e18:	fbb2 f3f3 	udiv	r3, r2, r3
 8021e1c:	b29b      	uxth	r3, r3
 8021e1e:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8021e20:	693b      	ldr	r3, [r7, #16]
 8021e22:	2b0f      	cmp	r3, #15
 8021e24:	d908      	bls.n	8021e38 <UART_SetConfig+0x49c>
 8021e26:	693b      	ldr	r3, [r7, #16]
 8021e28:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8021e2c:	d204      	bcs.n	8021e38 <UART_SetConfig+0x49c>
      {
        huart->Instance->BRR = usartdiv;
 8021e2e:	687b      	ldr	r3, [r7, #4]
 8021e30:	681b      	ldr	r3, [r3, #0]
 8021e32:	693a      	ldr	r2, [r7, #16]
 8021e34:	60da      	str	r2, [r3, #12]
 8021e36:	e001      	b.n	8021e3c <UART_SetConfig+0x4a0>
      }
      else
      {
        ret = HAL_ERROR;
 8021e38:	2301      	movs	r3, #1
 8021e3a:	77bb      	strb	r3, [r7, #30]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8021e3c:	687b      	ldr	r3, [r7, #4]
 8021e3e:	2200      	movs	r2, #0
 8021e40:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 8021e42:	687b      	ldr	r3, [r7, #4]
 8021e44:	2200      	movs	r2, #0
 8021e46:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 8021e48:	7fbb      	ldrb	r3, [r7, #30]
}
 8021e4a:	4618      	mov	r0, r3
 8021e4c:	3720      	adds	r7, #32
 8021e4e:	46bd      	mov	sp, r7
 8021e50:	bd80      	pop	{r7, pc}
 8021e52:	bf00      	nop
 8021e54:	40007c00 	.word	0x40007c00
 8021e58:	40023800 	.word	0x40023800
 8021e5c:	00f42400 	.word	0x00f42400

08021e60 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8021e60:	b480      	push	{r7}
 8021e62:	b083      	sub	sp, #12
 8021e64:	af00      	add	r7, sp, #0
 8021e66:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8021e68:	687b      	ldr	r3, [r7, #4]
 8021e6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021e6c:	f003 0301 	and.w	r3, r3, #1
 8021e70:	2b00      	cmp	r3, #0
 8021e72:	d00a      	beq.n	8021e8a <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8021e74:	687b      	ldr	r3, [r7, #4]
 8021e76:	681b      	ldr	r3, [r3, #0]
 8021e78:	685b      	ldr	r3, [r3, #4]
 8021e7a:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8021e7e:	687b      	ldr	r3, [r7, #4]
 8021e80:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8021e82:	687b      	ldr	r3, [r7, #4]
 8021e84:	681b      	ldr	r3, [r3, #0]
 8021e86:	430a      	orrs	r2, r1
 8021e88:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8021e8a:	687b      	ldr	r3, [r7, #4]
 8021e8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021e8e:	f003 0302 	and.w	r3, r3, #2
 8021e92:	2b00      	cmp	r3, #0
 8021e94:	d00a      	beq.n	8021eac <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8021e96:	687b      	ldr	r3, [r7, #4]
 8021e98:	681b      	ldr	r3, [r3, #0]
 8021e9a:	685b      	ldr	r3, [r3, #4]
 8021e9c:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8021ea0:	687b      	ldr	r3, [r7, #4]
 8021ea2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8021ea4:	687b      	ldr	r3, [r7, #4]
 8021ea6:	681b      	ldr	r3, [r3, #0]
 8021ea8:	430a      	orrs	r2, r1
 8021eaa:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8021eac:	687b      	ldr	r3, [r7, #4]
 8021eae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021eb0:	f003 0304 	and.w	r3, r3, #4
 8021eb4:	2b00      	cmp	r3, #0
 8021eb6:	d00a      	beq.n	8021ece <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8021eb8:	687b      	ldr	r3, [r7, #4]
 8021eba:	681b      	ldr	r3, [r3, #0]
 8021ebc:	685b      	ldr	r3, [r3, #4]
 8021ebe:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8021ec2:	687b      	ldr	r3, [r7, #4]
 8021ec4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8021ec6:	687b      	ldr	r3, [r7, #4]
 8021ec8:	681b      	ldr	r3, [r3, #0]
 8021eca:	430a      	orrs	r2, r1
 8021ecc:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8021ece:	687b      	ldr	r3, [r7, #4]
 8021ed0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021ed2:	f003 0308 	and.w	r3, r3, #8
 8021ed6:	2b00      	cmp	r3, #0
 8021ed8:	d00a      	beq.n	8021ef0 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8021eda:	687b      	ldr	r3, [r7, #4]
 8021edc:	681b      	ldr	r3, [r3, #0]
 8021ede:	685b      	ldr	r3, [r3, #4]
 8021ee0:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 8021ee4:	687b      	ldr	r3, [r7, #4]
 8021ee6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8021ee8:	687b      	ldr	r3, [r7, #4]
 8021eea:	681b      	ldr	r3, [r3, #0]
 8021eec:	430a      	orrs	r2, r1
 8021eee:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8021ef0:	687b      	ldr	r3, [r7, #4]
 8021ef2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021ef4:	f003 0310 	and.w	r3, r3, #16
 8021ef8:	2b00      	cmp	r3, #0
 8021efa:	d00a      	beq.n	8021f12 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8021efc:	687b      	ldr	r3, [r7, #4]
 8021efe:	681b      	ldr	r3, [r3, #0]
 8021f00:	689b      	ldr	r3, [r3, #8]
 8021f02:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 8021f06:	687b      	ldr	r3, [r7, #4]
 8021f08:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8021f0a:	687b      	ldr	r3, [r7, #4]
 8021f0c:	681b      	ldr	r3, [r3, #0]
 8021f0e:	430a      	orrs	r2, r1
 8021f10:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8021f12:	687b      	ldr	r3, [r7, #4]
 8021f14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021f16:	f003 0320 	and.w	r3, r3, #32
 8021f1a:	2b00      	cmp	r3, #0
 8021f1c:	d00a      	beq.n	8021f34 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8021f1e:	687b      	ldr	r3, [r7, #4]
 8021f20:	681b      	ldr	r3, [r3, #0]
 8021f22:	689b      	ldr	r3, [r3, #8]
 8021f24:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8021f28:	687b      	ldr	r3, [r7, #4]
 8021f2a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8021f2c:	687b      	ldr	r3, [r7, #4]
 8021f2e:	681b      	ldr	r3, [r3, #0]
 8021f30:	430a      	orrs	r2, r1
 8021f32:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8021f34:	687b      	ldr	r3, [r7, #4]
 8021f36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021f38:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8021f3c:	2b00      	cmp	r3, #0
 8021f3e:	d01a      	beq.n	8021f76 <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8021f40:	687b      	ldr	r3, [r7, #4]
 8021f42:	681b      	ldr	r3, [r3, #0]
 8021f44:	685b      	ldr	r3, [r3, #4]
 8021f46:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8021f4a:	687b      	ldr	r3, [r7, #4]
 8021f4c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8021f4e:	687b      	ldr	r3, [r7, #4]
 8021f50:	681b      	ldr	r3, [r3, #0]
 8021f52:	430a      	orrs	r2, r1
 8021f54:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8021f56:	687b      	ldr	r3, [r7, #4]
 8021f58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021f5a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8021f5e:	d10a      	bne.n	8021f76 <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8021f60:	687b      	ldr	r3, [r7, #4]
 8021f62:	681b      	ldr	r3, [r3, #0]
 8021f64:	685b      	ldr	r3, [r3, #4]
 8021f66:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8021f6a:	687b      	ldr	r3, [r7, #4]
 8021f6c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8021f6e:	687b      	ldr	r3, [r7, #4]
 8021f70:	681b      	ldr	r3, [r3, #0]
 8021f72:	430a      	orrs	r2, r1
 8021f74:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8021f76:	687b      	ldr	r3, [r7, #4]
 8021f78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021f7a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8021f7e:	2b00      	cmp	r3, #0
 8021f80:	d00a      	beq.n	8021f98 <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8021f82:	687b      	ldr	r3, [r7, #4]
 8021f84:	681b      	ldr	r3, [r3, #0]
 8021f86:	685b      	ldr	r3, [r3, #4]
 8021f88:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8021f8c:	687b      	ldr	r3, [r7, #4]
 8021f8e:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8021f90:	687b      	ldr	r3, [r7, #4]
 8021f92:	681b      	ldr	r3, [r3, #0]
 8021f94:	430a      	orrs	r2, r1
 8021f96:	605a      	str	r2, [r3, #4]
  }
}
 8021f98:	bf00      	nop
 8021f9a:	370c      	adds	r7, #12
 8021f9c:	46bd      	mov	sp, r7
 8021f9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8021fa2:	4770      	bx	lr

08021fa4 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 8021fa4:	b580      	push	{r7, lr}
 8021fa6:	b086      	sub	sp, #24
 8021fa8:	af02      	add	r7, sp, #8
 8021faa:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8021fac:	687b      	ldr	r3, [r7, #4]
 8021fae:	2200      	movs	r2, #0
 8021fb0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 8021fb4:	f7fd fcbe 	bl	801f934 <HAL_GetTick>
 8021fb8:	60f8      	str	r0, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8021fba:	687b      	ldr	r3, [r7, #4]
 8021fbc:	681b      	ldr	r3, [r3, #0]
 8021fbe:	681b      	ldr	r3, [r3, #0]
 8021fc0:	f003 0308 	and.w	r3, r3, #8
 8021fc4:	2b08      	cmp	r3, #8
 8021fc6:	d10e      	bne.n	8021fe6 <UART_CheckIdleState+0x42>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8021fc8:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8021fcc:	9300      	str	r3, [sp, #0]
 8021fce:	68fb      	ldr	r3, [r7, #12]
 8021fd0:	2200      	movs	r2, #0
 8021fd2:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8021fd6:	6878      	ldr	r0, [r7, #4]
 8021fd8:	f000 f817 	bl	802200a <UART_WaitOnFlagUntilTimeout>
 8021fdc:	4603      	mov	r3, r0
 8021fde:	2b00      	cmp	r3, #0
 8021fe0:	d001      	beq.n	8021fe6 <UART_CheckIdleState+0x42>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 8021fe2:	2303      	movs	r3, #3
 8021fe4:	e00d      	b.n	8022002 <UART_CheckIdleState+0x5e>
    }
  }
#endif

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 8021fe6:	687b      	ldr	r3, [r7, #4]
 8021fe8:	2220      	movs	r2, #32
 8021fea:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 8021fec:	687b      	ldr	r3, [r7, #4]
 8021fee:	2220      	movs	r2, #32
 8021ff0:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8021ff2:	687b      	ldr	r3, [r7, #4]
 8021ff4:	2200      	movs	r2, #0
 8021ff6:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 8021ff8:	687b      	ldr	r3, [r7, #4]
 8021ffa:	2200      	movs	r2, #0
 8021ffc:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

  return HAL_OK;
 8022000:	2300      	movs	r3, #0
}
 8022002:	4618      	mov	r0, r3
 8022004:	3710      	adds	r7, #16
 8022006:	46bd      	mov	sp, r7
 8022008:	bd80      	pop	{r7, pc}

0802200a <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 802200a:	b580      	push	{r7, lr}
 802200c:	b084      	sub	sp, #16
 802200e:	af00      	add	r7, sp, #0
 8022010:	60f8      	str	r0, [r7, #12]
 8022012:	60b9      	str	r1, [r7, #8]
 8022014:	603b      	str	r3, [r7, #0]
 8022016:	4613      	mov	r3, r2
 8022018:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 802201a:	e05e      	b.n	80220da <UART_WaitOnFlagUntilTimeout+0xd0>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 802201c:	69bb      	ldr	r3, [r7, #24]
 802201e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8022022:	d05a      	beq.n	80220da <UART_WaitOnFlagUntilTimeout+0xd0>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8022024:	f7fd fc86 	bl	801f934 <HAL_GetTick>
 8022028:	4602      	mov	r2, r0
 802202a:	683b      	ldr	r3, [r7, #0]
 802202c:	1ad3      	subs	r3, r2, r3
 802202e:	69ba      	ldr	r2, [r7, #24]
 8022030:	429a      	cmp	r2, r3
 8022032:	d302      	bcc.n	802203a <UART_WaitOnFlagUntilTimeout+0x30>
 8022034:	69bb      	ldr	r3, [r7, #24]
 8022036:	2b00      	cmp	r3, #0
 8022038:	d11b      	bne.n	8022072 <UART_WaitOnFlagUntilTimeout+0x68>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
           interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 802203a:	68fb      	ldr	r3, [r7, #12]
 802203c:	681b      	ldr	r3, [r3, #0]
 802203e:	681a      	ldr	r2, [r3, #0]
 8022040:	68fb      	ldr	r3, [r7, #12]
 8022042:	681b      	ldr	r3, [r3, #0]
 8022044:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8022048:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802204a:	68fb      	ldr	r3, [r7, #12]
 802204c:	681b      	ldr	r3, [r3, #0]
 802204e:	689a      	ldr	r2, [r3, #8]
 8022050:	68fb      	ldr	r3, [r7, #12]
 8022052:	681b      	ldr	r3, [r3, #0]
 8022054:	f022 0201 	bic.w	r2, r2, #1
 8022058:	609a      	str	r2, [r3, #8]

        huart->gState = HAL_UART_STATE_READY;
 802205a:	68fb      	ldr	r3, [r7, #12]
 802205c:	2220      	movs	r2, #32
 802205e:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 8022060:	68fb      	ldr	r3, [r7, #12]
 8022062:	2220      	movs	r2, #32
 8022064:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 8022066:	68fb      	ldr	r3, [r7, #12]
 8022068:	2200      	movs	r2, #0
 802206a:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

        return HAL_TIMEOUT;
 802206e:	2303      	movs	r3, #3
 8022070:	e043      	b.n	80220fa <UART_WaitOnFlagUntilTimeout+0xf0>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8022072:	68fb      	ldr	r3, [r7, #12]
 8022074:	681b      	ldr	r3, [r3, #0]
 8022076:	681b      	ldr	r3, [r3, #0]
 8022078:	f003 0304 	and.w	r3, r3, #4
 802207c:	2b00      	cmp	r3, #0
 802207e:	d02c      	beq.n	80220da <UART_WaitOnFlagUntilTimeout+0xd0>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8022080:	68fb      	ldr	r3, [r7, #12]
 8022082:	681b      	ldr	r3, [r3, #0]
 8022084:	69db      	ldr	r3, [r3, #28]
 8022086:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 802208a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802208e:	d124      	bne.n	80220da <UART_WaitOnFlagUntilTimeout+0xd0>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8022090:	68fb      	ldr	r3, [r7, #12]
 8022092:	681b      	ldr	r3, [r3, #0]
 8022094:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8022098:	621a      	str	r2, [r3, #32]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 802209a:	68fb      	ldr	r3, [r7, #12]
 802209c:	681b      	ldr	r3, [r3, #0]
 802209e:	681a      	ldr	r2, [r3, #0]
 80220a0:	68fb      	ldr	r3, [r7, #12]
 80220a2:	681b      	ldr	r3, [r3, #0]
 80220a4:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80220a8:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80220aa:	68fb      	ldr	r3, [r7, #12]
 80220ac:	681b      	ldr	r3, [r3, #0]
 80220ae:	689a      	ldr	r2, [r3, #8]
 80220b0:	68fb      	ldr	r3, [r7, #12]
 80220b2:	681b      	ldr	r3, [r3, #0]
 80220b4:	f022 0201 	bic.w	r2, r2, #1
 80220b8:	609a      	str	r2, [r3, #8]

          huart->gState = HAL_UART_STATE_READY;
 80220ba:	68fb      	ldr	r3, [r7, #12]
 80220bc:	2220      	movs	r2, #32
 80220be:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 80220c0:	68fb      	ldr	r3, [r7, #12]
 80220c2:	2220      	movs	r2, #32
 80220c4:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 80220c6:	68fb      	ldr	r3, [r7, #12]
 80220c8:	2220      	movs	r2, #32
 80220ca:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 80220ce:	68fb      	ldr	r3, [r7, #12]
 80220d0:	2200      	movs	r2, #0
 80220d2:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

          return HAL_TIMEOUT;
 80220d6:	2303      	movs	r3, #3
 80220d8:	e00f      	b.n	80220fa <UART_WaitOnFlagUntilTimeout+0xf0>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80220da:	68fb      	ldr	r3, [r7, #12]
 80220dc:	681b      	ldr	r3, [r3, #0]
 80220de:	69da      	ldr	r2, [r3, #28]
 80220e0:	68bb      	ldr	r3, [r7, #8]
 80220e2:	4013      	ands	r3, r2
 80220e4:	68ba      	ldr	r2, [r7, #8]
 80220e6:	429a      	cmp	r2, r3
 80220e8:	bf0c      	ite	eq
 80220ea:	2301      	moveq	r3, #1
 80220ec:	2300      	movne	r3, #0
 80220ee:	b2db      	uxtb	r3, r3
 80220f0:	461a      	mov	r2, r3
 80220f2:	79fb      	ldrb	r3, [r7, #7]
 80220f4:	429a      	cmp	r2, r3
 80220f6:	d091      	beq.n	802201c <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 80220f8:	2300      	movs	r3, #0
}
 80220fa:	4618      	mov	r0, r3
 80220fc:	3710      	adds	r7, #16
 80220fe:	46bd      	mov	sp, r7
 8022100:	bd80      	pop	{r7, pc}
	...

08022104 <UART_Start_Receive_IT>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8022104:	b480      	push	{r7}
 8022106:	b085      	sub	sp, #20
 8022108:	af00      	add	r7, sp, #0
 802210a:	60f8      	str	r0, [r7, #12]
 802210c:	60b9      	str	r1, [r7, #8]
 802210e:	4613      	mov	r3, r2
 8022110:	80fb      	strh	r3, [r7, #6]
  huart->pRxBuffPtr  = pData;
 8022112:	68fb      	ldr	r3, [r7, #12]
 8022114:	68ba      	ldr	r2, [r7, #8]
 8022116:	655a      	str	r2, [r3, #84]	; 0x54
  huart->RxXferSize  = Size;
 8022118:	68fb      	ldr	r3, [r7, #12]
 802211a:	88fa      	ldrh	r2, [r7, #6]
 802211c:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
  huart->RxXferCount = Size;
 8022120:	68fb      	ldr	r3, [r7, #12]
 8022122:	88fa      	ldrh	r2, [r7, #6]
 8022124:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
  huart->RxISR       = NULL;
 8022128:	68fb      	ldr	r3, [r7, #12]
 802212a:	2200      	movs	r2, #0
 802212c:	665a      	str	r2, [r3, #100]	; 0x64

  /* Computation of UART mask to apply to RDR register */
  UART_MASK_COMPUTATION(huart);
 802212e:	68fb      	ldr	r3, [r7, #12]
 8022130:	689b      	ldr	r3, [r3, #8]
 8022132:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8022136:	d10e      	bne.n	8022156 <UART_Start_Receive_IT+0x52>
 8022138:	68fb      	ldr	r3, [r7, #12]
 802213a:	691b      	ldr	r3, [r3, #16]
 802213c:	2b00      	cmp	r3, #0
 802213e:	d105      	bne.n	802214c <UART_Start_Receive_IT+0x48>
 8022140:	68fb      	ldr	r3, [r7, #12]
 8022142:	f240 12ff 	movw	r2, #511	; 0x1ff
 8022146:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 802214a:	e02d      	b.n	80221a8 <UART_Start_Receive_IT+0xa4>
 802214c:	68fb      	ldr	r3, [r7, #12]
 802214e:	22ff      	movs	r2, #255	; 0xff
 8022150:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022154:	e028      	b.n	80221a8 <UART_Start_Receive_IT+0xa4>
 8022156:	68fb      	ldr	r3, [r7, #12]
 8022158:	689b      	ldr	r3, [r3, #8]
 802215a:	2b00      	cmp	r3, #0
 802215c:	d10d      	bne.n	802217a <UART_Start_Receive_IT+0x76>
 802215e:	68fb      	ldr	r3, [r7, #12]
 8022160:	691b      	ldr	r3, [r3, #16]
 8022162:	2b00      	cmp	r3, #0
 8022164:	d104      	bne.n	8022170 <UART_Start_Receive_IT+0x6c>
 8022166:	68fb      	ldr	r3, [r7, #12]
 8022168:	22ff      	movs	r2, #255	; 0xff
 802216a:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 802216e:	e01b      	b.n	80221a8 <UART_Start_Receive_IT+0xa4>
 8022170:	68fb      	ldr	r3, [r7, #12]
 8022172:	227f      	movs	r2, #127	; 0x7f
 8022174:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022178:	e016      	b.n	80221a8 <UART_Start_Receive_IT+0xa4>
 802217a:	68fb      	ldr	r3, [r7, #12]
 802217c:	689b      	ldr	r3, [r3, #8]
 802217e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8022182:	d10d      	bne.n	80221a0 <UART_Start_Receive_IT+0x9c>
 8022184:	68fb      	ldr	r3, [r7, #12]
 8022186:	691b      	ldr	r3, [r3, #16]
 8022188:	2b00      	cmp	r3, #0
 802218a:	d104      	bne.n	8022196 <UART_Start_Receive_IT+0x92>
 802218c:	68fb      	ldr	r3, [r7, #12]
 802218e:	227f      	movs	r2, #127	; 0x7f
 8022190:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022194:	e008      	b.n	80221a8 <UART_Start_Receive_IT+0xa4>
 8022196:	68fb      	ldr	r3, [r7, #12]
 8022198:	223f      	movs	r2, #63	; 0x3f
 802219a:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 802219e:	e003      	b.n	80221a8 <UART_Start_Receive_IT+0xa4>
 80221a0:	68fb      	ldr	r3, [r7, #12]
 80221a2:	2200      	movs	r2, #0
 80221a4:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c

  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80221a8:	68fb      	ldr	r3, [r7, #12]
 80221aa:	2200      	movs	r2, #0
 80221ac:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 80221b0:	68fb      	ldr	r3, [r7, #12]
 80221b2:	2222      	movs	r2, #34	; 0x22
 80221b4:	67da      	str	r2, [r3, #124]	; 0x7c

  /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
  SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80221b6:	68fb      	ldr	r3, [r7, #12]
 80221b8:	681b      	ldr	r3, [r3, #0]
 80221ba:	689a      	ldr	r2, [r3, #8]
 80221bc:	68fb      	ldr	r3, [r7, #12]
 80221be:	681b      	ldr	r3, [r3, #0]
 80221c0:	f042 0201 	orr.w	r2, r2, #1
 80221c4:	609a      	str	r2, [r3, #8]

  /* Set the Rx ISR function pointer according to the data word length */
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80221c6:	68fb      	ldr	r3, [r7, #12]
 80221c8:	689b      	ldr	r3, [r3, #8]
 80221ca:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80221ce:	d107      	bne.n	80221e0 <UART_Start_Receive_IT+0xdc>
 80221d0:	68fb      	ldr	r3, [r7, #12]
 80221d2:	691b      	ldr	r3, [r3, #16]
 80221d4:	2b00      	cmp	r3, #0
 80221d6:	d103      	bne.n	80221e0 <UART_Start_Receive_IT+0xdc>
  {
    huart->RxISR = UART_RxISR_16BIT;
 80221d8:	68fb      	ldr	r3, [r7, #12]
 80221da:	4a0c      	ldr	r2, [pc, #48]	; (802220c <UART_Start_Receive_IT+0x108>)
 80221dc:	665a      	str	r2, [r3, #100]	; 0x64
 80221de:	e002      	b.n	80221e6 <UART_Start_Receive_IT+0xe2>
  }
  else
  {
    huart->RxISR = UART_RxISR_8BIT;
 80221e0:	68fb      	ldr	r3, [r7, #12]
 80221e2:	4a0b      	ldr	r2, [pc, #44]	; (8022210 <UART_Start_Receive_IT+0x10c>)
 80221e4:	665a      	str	r2, [r3, #100]	; 0x64
  }

  __HAL_UNLOCK(huart);
 80221e6:	68fb      	ldr	r3, [r7, #12]
 80221e8:	2200      	movs	r2, #0
 80221ea:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

  /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
  SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 80221ee:	68fb      	ldr	r3, [r7, #12]
 80221f0:	681b      	ldr	r3, [r3, #0]
 80221f2:	681a      	ldr	r2, [r3, #0]
 80221f4:	68fb      	ldr	r3, [r7, #12]
 80221f6:	681b      	ldr	r3, [r3, #0]
 80221f8:	f442 7290 	orr.w	r2, r2, #288	; 0x120
 80221fc:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 80221fe:	2300      	movs	r3, #0
}
 8022200:	4618      	mov	r0, r3
 8022202:	3714      	adds	r7, #20
 8022204:	46bd      	mov	sp, r7
 8022206:	f85d 7b04 	ldr.w	r7, [sp], #4
 802220a:	4770      	bx	lr
 802220c:	080223a5 	.word	0x080223a5
 8022210:	080222d1 	.word	0x080222d1

08022214 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8022214:	b480      	push	{r7}
 8022216:	b083      	sub	sp, #12
 8022218:	af00      	add	r7, sp, #0
 802221a:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 802221c:	687b      	ldr	r3, [r7, #4]
 802221e:	681b      	ldr	r3, [r3, #0]
 8022220:	681a      	ldr	r2, [r3, #0]
 8022222:	687b      	ldr	r3, [r7, #4]
 8022224:	681b      	ldr	r3, [r3, #0]
 8022226:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 802222a:	601a      	str	r2, [r3, #0]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802222c:	687b      	ldr	r3, [r7, #4]
 802222e:	681b      	ldr	r3, [r3, #0]
 8022230:	689a      	ldr	r2, [r3, #8]
 8022232:	687b      	ldr	r3, [r7, #4]
 8022234:	681b      	ldr	r3, [r3, #0]
 8022236:	f022 0201 	bic.w	r2, r2, #1
 802223a:	609a      	str	r2, [r3, #8]

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 802223c:	687b      	ldr	r3, [r7, #4]
 802223e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8022240:	2b01      	cmp	r3, #1
 8022242:	d107      	bne.n	8022254 <UART_EndRxTransfer+0x40>
  {
    CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8022244:	687b      	ldr	r3, [r7, #4]
 8022246:	681b      	ldr	r3, [r3, #0]
 8022248:	681a      	ldr	r2, [r3, #0]
 802224a:	687b      	ldr	r3, [r7, #4]
 802224c:	681b      	ldr	r3, [r3, #0]
 802224e:	f022 0210 	bic.w	r2, r2, #16
 8022252:	601a      	str	r2, [r3, #0]
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8022254:	687b      	ldr	r3, [r7, #4]
 8022256:	2220      	movs	r2, #32
 8022258:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802225a:	687b      	ldr	r3, [r7, #4]
 802225c:	2200      	movs	r2, #0
 802225e:	661a      	str	r2, [r3, #96]	; 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 8022260:	687b      	ldr	r3, [r7, #4]
 8022262:	2200      	movs	r2, #0
 8022264:	665a      	str	r2, [r3, #100]	; 0x64
}
 8022266:	bf00      	nop
 8022268:	370c      	adds	r7, #12
 802226a:	46bd      	mov	sp, r7
 802226c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8022270:	4770      	bx	lr

08022272 <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8022272:	b580      	push	{r7, lr}
 8022274:	b084      	sub	sp, #16
 8022276:	af00      	add	r7, sp, #0
 8022278:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 802227a:	687b      	ldr	r3, [r7, #4]
 802227c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802227e:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0U;
 8022280:	68fb      	ldr	r3, [r7, #12]
 8022282:	2200      	movs	r2, #0
 8022284:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
  huart->TxXferCount = 0U;
 8022288:	68fb      	ldr	r3, [r7, #12]
 802228a:	2200      	movs	r2, #0
 802228c:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 8022290:	68f8      	ldr	r0, [r7, #12]
 8022292:	f7ff fb6d 	bl	8021970 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8022296:	bf00      	nop
 8022298:	3710      	adds	r7, #16
 802229a:	46bd      	mov	sp, r7
 802229c:	bd80      	pop	{r7, pc}

0802229e <UART_EndTransmit_IT>:
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 802229e:	b580      	push	{r7, lr}
 80222a0:	b082      	sub	sp, #8
 80222a2:	af00      	add	r7, sp, #0
 80222a4:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 80222a6:	687b      	ldr	r3, [r7, #4]
 80222a8:	681b      	ldr	r3, [r3, #0]
 80222aa:	681a      	ldr	r2, [r3, #0]
 80222ac:	687b      	ldr	r3, [r7, #4]
 80222ae:	681b      	ldr	r3, [r3, #0]
 80222b0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80222b4:	601a      	str	r2, [r3, #0]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 80222b6:	687b      	ldr	r3, [r7, #4]
 80222b8:	2220      	movs	r2, #32
 80222ba:	679a      	str	r2, [r3, #120]	; 0x78

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 80222bc:	687b      	ldr	r3, [r7, #4]
 80222be:	2200      	movs	r2, #0
 80222c0:	669a      	str	r2, [r3, #104]	; 0x68
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 80222c2:	6878      	ldr	r0, [r7, #4]
 80222c4:	f7ff fb4a 	bl	802195c <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80222c8:	bf00      	nop
 80222ca:	3708      	adds	r7, #8
 80222cc:	46bd      	mov	sp, r7
 80222ce:	bd80      	pop	{r7, pc}

080222d0 <UART_RxISR_8BIT>:
  * @brief RX interrupt handler for 7 or 8 bits data word length .
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
{
 80222d0:	b580      	push	{r7, lr}
 80222d2:	b084      	sub	sp, #16
 80222d4:	af00      	add	r7, sp, #0
 80222d6:	6078      	str	r0, [r7, #4]
  uint16_t uhMask = huart->Mask;
 80222d8:	687b      	ldr	r3, [r7, #4]
 80222da:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 80222de:	81fb      	strh	r3, [r7, #14]
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80222e0:	687b      	ldr	r3, [r7, #4]
 80222e2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80222e4:	2b22      	cmp	r3, #34	; 0x22
 80222e6:	d151      	bne.n	802238c <UART_RxISR_8BIT+0xbc>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80222e8:	687b      	ldr	r3, [r7, #4]
 80222ea:	681b      	ldr	r3, [r3, #0]
 80222ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80222ee:	81bb      	strh	r3, [r7, #12]
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 80222f0:	89bb      	ldrh	r3, [r7, #12]
 80222f2:	b2d9      	uxtb	r1, r3
 80222f4:	89fb      	ldrh	r3, [r7, #14]
 80222f6:	b2da      	uxtb	r2, r3
 80222f8:	687b      	ldr	r3, [r7, #4]
 80222fa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80222fc:	400a      	ands	r2, r1
 80222fe:	b2d2      	uxtb	r2, r2
 8022300:	701a      	strb	r2, [r3, #0]
    huart->pRxBuffPtr++;
 8022302:	687b      	ldr	r3, [r7, #4]
 8022304:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8022306:	1c5a      	adds	r2, r3, #1
 8022308:	687b      	ldr	r3, [r7, #4]
 802230a:	655a      	str	r2, [r3, #84]	; 0x54
    huart->RxXferCount--;
 802230c:	687b      	ldr	r3, [r7, #4]
 802230e:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8022312:	b29b      	uxth	r3, r3
 8022314:	3b01      	subs	r3, #1
 8022316:	b29a      	uxth	r2, r3
 8022318:	687b      	ldr	r3, [r7, #4]
 802231a:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    if (huart->RxXferCount == 0U)
 802231e:	687b      	ldr	r3, [r7, #4]
 8022320:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8022324:	b29b      	uxth	r3, r3
 8022326:	2b00      	cmp	r3, #0
 8022328:	d138      	bne.n	802239c <UART_RxISR_8BIT+0xcc>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 802232a:	687b      	ldr	r3, [r7, #4]
 802232c:	681b      	ldr	r3, [r3, #0]
 802232e:	681a      	ldr	r2, [r3, #0]
 8022330:	687b      	ldr	r3, [r7, #4]
 8022332:	681b      	ldr	r3, [r3, #0]
 8022334:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8022338:	601a      	str	r2, [r3, #0]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802233a:	687b      	ldr	r3, [r7, #4]
 802233c:	681b      	ldr	r3, [r3, #0]
 802233e:	689a      	ldr	r2, [r3, #8]
 8022340:	687b      	ldr	r3, [r7, #4]
 8022342:	681b      	ldr	r3, [r3, #0]
 8022344:	f022 0201 	bic.w	r2, r2, #1
 8022348:	609a      	str	r2, [r3, #8]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 802234a:	687b      	ldr	r3, [r7, #4]
 802234c:	2220      	movs	r2, #32
 802234e:	67da      	str	r2, [r3, #124]	; 0x7c

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 8022350:	687b      	ldr	r3, [r7, #4]
 8022352:	2200      	movs	r2, #0
 8022354:	665a      	str	r2, [r3, #100]	; 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8022356:	687b      	ldr	r3, [r7, #4]
 8022358:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802235a:	2b01      	cmp	r3, #1
 802235c:	d10f      	bne.n	802237e <UART_RxISR_8BIT+0xae>
      {
        /* Disable IDLE interrupt */
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 802235e:	687b      	ldr	r3, [r7, #4]
 8022360:	681b      	ldr	r3, [r3, #0]
 8022362:	681a      	ldr	r2, [r3, #0]
 8022364:	687b      	ldr	r3, [r7, #4]
 8022366:	681b      	ldr	r3, [r3, #0]
 8022368:	f022 0210 	bic.w	r2, r2, #16
 802236c:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 802236e:	687b      	ldr	r3, [r7, #4]
 8022370:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8022374:	4619      	mov	r1, r3
 8022376:	6878      	ldr	r0, [r7, #4]
 8022378:	f7ff fb04 	bl	8021984 <HAL_UARTEx_RxEventCallback>
 802237c:	e002      	b.n	8022384 <UART_RxISR_8BIT+0xb4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxCpltCallback(huart);
#else
        /*Call legacy weak Rx complete callback*/
        HAL_UART_RxCpltCallback(huart);
 802237e:	6878      	ldr	r0, [r7, #4]
 8022380:	f7f6 fa2e 	bl	80187e0 <HAL_UART_RxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8022384:	687b      	ldr	r3, [r7, #4]
 8022386:	2200      	movs	r2, #0
 8022388:	661a      	str	r2, [r3, #96]	; 0x60
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 802238a:	e007      	b.n	802239c <UART_RxISR_8BIT+0xcc>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 802238c:	687b      	ldr	r3, [r7, #4]
 802238e:	681b      	ldr	r3, [r3, #0]
 8022390:	699a      	ldr	r2, [r3, #24]
 8022392:	687b      	ldr	r3, [r7, #4]
 8022394:	681b      	ldr	r3, [r3, #0]
 8022396:	f042 0208 	orr.w	r2, r2, #8
 802239a:	619a      	str	r2, [r3, #24]
}
 802239c:	bf00      	nop
 802239e:	3710      	adds	r7, #16
 80223a0:	46bd      	mov	sp, r7
 80223a2:	bd80      	pop	{r7, pc}

080223a4 <UART_RxISR_16BIT>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
{
 80223a4:	b580      	push	{r7, lr}
 80223a6:	b084      	sub	sp, #16
 80223a8:	af00      	add	r7, sp, #0
 80223aa:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
 80223ac:	687b      	ldr	r3, [r7, #4]
 80223ae:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 80223b2:	81fb      	strh	r3, [r7, #14]
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80223b4:	687b      	ldr	r3, [r7, #4]
 80223b6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80223b8:	2b22      	cmp	r3, #34	; 0x22
 80223ba:	d151      	bne.n	8022460 <UART_RxISR_16BIT+0xbc>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80223bc:	687b      	ldr	r3, [r7, #4]
 80223be:	681b      	ldr	r3, [r3, #0]
 80223c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80223c2:	81bb      	strh	r3, [r7, #12]
    tmp = (uint16_t *) huart->pRxBuffPtr ;
 80223c4:	687b      	ldr	r3, [r7, #4]
 80223c6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80223c8:	60bb      	str	r3, [r7, #8]
    *tmp = (uint16_t)(uhdata & uhMask);
 80223ca:	89ba      	ldrh	r2, [r7, #12]
 80223cc:	89fb      	ldrh	r3, [r7, #14]
 80223ce:	4013      	ands	r3, r2
 80223d0:	b29a      	uxth	r2, r3
 80223d2:	68bb      	ldr	r3, [r7, #8]
 80223d4:	801a      	strh	r2, [r3, #0]
    huart->pRxBuffPtr += 2U;
 80223d6:	687b      	ldr	r3, [r7, #4]
 80223d8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80223da:	1c9a      	adds	r2, r3, #2
 80223dc:	687b      	ldr	r3, [r7, #4]
 80223de:	655a      	str	r2, [r3, #84]	; 0x54
    huart->RxXferCount--;
 80223e0:	687b      	ldr	r3, [r7, #4]
 80223e2:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80223e6:	b29b      	uxth	r3, r3
 80223e8:	3b01      	subs	r3, #1
 80223ea:	b29a      	uxth	r2, r3
 80223ec:	687b      	ldr	r3, [r7, #4]
 80223ee:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    if (huart->RxXferCount == 0U)
 80223f2:	687b      	ldr	r3, [r7, #4]
 80223f4:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80223f8:	b29b      	uxth	r3, r3
 80223fa:	2b00      	cmp	r3, #0
 80223fc:	d138      	bne.n	8022470 <UART_RxISR_16BIT+0xcc>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
      CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80223fe:	687b      	ldr	r3, [r7, #4]
 8022400:	681b      	ldr	r3, [r3, #0]
 8022402:	681a      	ldr	r2, [r3, #0]
 8022404:	687b      	ldr	r3, [r7, #4]
 8022406:	681b      	ldr	r3, [r3, #0]
 8022408:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 802240c:	601a      	str	r2, [r3, #0]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802240e:	687b      	ldr	r3, [r7, #4]
 8022410:	681b      	ldr	r3, [r3, #0]
 8022412:	689a      	ldr	r2, [r3, #8]
 8022414:	687b      	ldr	r3, [r7, #4]
 8022416:	681b      	ldr	r3, [r3, #0]
 8022418:	f022 0201 	bic.w	r2, r2, #1
 802241c:	609a      	str	r2, [r3, #8]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 802241e:	687b      	ldr	r3, [r7, #4]
 8022420:	2220      	movs	r2, #32
 8022422:	67da      	str	r2, [r3, #124]	; 0x7c

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 8022424:	687b      	ldr	r3, [r7, #4]
 8022426:	2200      	movs	r2, #0
 8022428:	665a      	str	r2, [r3, #100]	; 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 802242a:	687b      	ldr	r3, [r7, #4]
 802242c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802242e:	2b01      	cmp	r3, #1
 8022430:	d10f      	bne.n	8022452 <UART_RxISR_16BIT+0xae>
      {
        /* Disable IDLE interrupt */
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8022432:	687b      	ldr	r3, [r7, #4]
 8022434:	681b      	ldr	r3, [r3, #0]
 8022436:	681a      	ldr	r2, [r3, #0]
 8022438:	687b      	ldr	r3, [r7, #4]
 802243a:	681b      	ldr	r3, [r3, #0]
 802243c:	f022 0210 	bic.w	r2, r2, #16
 8022440:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8022442:	687b      	ldr	r3, [r7, #4]
 8022444:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8022448:	4619      	mov	r1, r3
 802244a:	6878      	ldr	r0, [r7, #4]
 802244c:	f7ff fa9a 	bl	8021984 <HAL_UARTEx_RxEventCallback>
 8022450:	e002      	b.n	8022458 <UART_RxISR_16BIT+0xb4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxCpltCallback(huart);
#else
        /*Call legacy weak Rx complete callback*/
        HAL_UART_RxCpltCallback(huart);
 8022452:	6878      	ldr	r0, [r7, #4]
 8022454:	f7f6 f9c4 	bl	80187e0 <HAL_UART_RxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8022458:	687b      	ldr	r3, [r7, #4]
 802245a:	2200      	movs	r2, #0
 802245c:	661a      	str	r2, [r3, #96]	; 0x60
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 802245e:	e007      	b.n	8022470 <UART_RxISR_16BIT+0xcc>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8022460:	687b      	ldr	r3, [r7, #4]
 8022462:	681b      	ldr	r3, [r3, #0]
 8022464:	699a      	ldr	r2, [r3, #24]
 8022466:	687b      	ldr	r3, [r7, #4]
 8022468:	681b      	ldr	r3, [r3, #0]
 802246a:	f042 0208 	orr.w	r2, r2, #8
 802246e:	619a      	str	r2, [r3, #24]
}
 8022470:	bf00      	nop
 8022472:	3710      	adds	r7, #16
 8022474:	46bd      	mov	sp, r7
 8022476:	bd80      	pop	{r7, pc}

08022478 <_ZdlPv>:
 8022478:	f001 bcb6 	b.w	8023de8 <free>

0802247c <_ZdlPvj>:
 802247c:	f7ff bffc 	b.w	8022478 <_ZdlPv>

08022480 <__cxa_guard_acquire>:
 8022480:	6803      	ldr	r3, [r0, #0]
 8022482:	07db      	lsls	r3, r3, #31
 8022484:	d406      	bmi.n	8022494 <__cxa_guard_acquire+0x14>
 8022486:	7843      	ldrb	r3, [r0, #1]
 8022488:	b103      	cbz	r3, 802248c <__cxa_guard_acquire+0xc>
 802248a:	deff      	udf	#255	; 0xff
 802248c:	2301      	movs	r3, #1
 802248e:	7043      	strb	r3, [r0, #1]
 8022490:	4618      	mov	r0, r3
 8022492:	4770      	bx	lr
 8022494:	2000      	movs	r0, #0
 8022496:	4770      	bx	lr

08022498 <__cxa_guard_release>:
 8022498:	2301      	movs	r3, #1
 802249a:	6003      	str	r3, [r0, #0]
 802249c:	4770      	bx	lr

0802249e <_Znwj>:
 802249e:	2801      	cmp	r0, #1
 80224a0:	bf38      	it	cc
 80224a2:	2001      	movcc	r0, #1
 80224a4:	b510      	push	{r4, lr}
 80224a6:	4604      	mov	r4, r0
 80224a8:	4620      	mov	r0, r4
 80224aa:	f001 fc95 	bl	8023dd8 <malloc>
 80224ae:	b930      	cbnz	r0, 80224be <_Znwj+0x20>
 80224b0:	f000 fc6c 	bl	8022d8c <_ZSt15get_new_handlerv>
 80224b4:	b908      	cbnz	r0, 80224ba <_Znwj+0x1c>
 80224b6:	f001 fc25 	bl	8023d04 <abort>
 80224ba:	4780      	blx	r0
 80224bc:	e7f4      	b.n	80224a8 <_Znwj+0xa>
 80224be:	bd10      	pop	{r4, pc}

080224c0 <_ZNSaIcEC1Ev>:
 80224c0:	4770      	bx	lr

080224c2 <_ZNSaIcED1Ev>:
 80224c2:	4770      	bx	lr

080224c4 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>:
 80224c4:	68c3      	ldr	r3, [r0, #12]
 80224c6:	689a      	ldr	r2, [r3, #8]
 80224c8:	60c2      	str	r2, [r0, #12]
 80224ca:	b510      	push	{r4, lr}
 80224cc:	b102      	cbz	r2, 80224d0 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0xc>
 80224ce:	6050      	str	r0, [r2, #4]
 80224d0:	6842      	ldr	r2, [r0, #4]
 80224d2:	605a      	str	r2, [r3, #4]
 80224d4:	680c      	ldr	r4, [r1, #0]
 80224d6:	4284      	cmp	r4, r0
 80224d8:	d103      	bne.n	80224e2 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x1e>
 80224da:	600b      	str	r3, [r1, #0]
 80224dc:	6098      	str	r0, [r3, #8]
 80224de:	6043      	str	r3, [r0, #4]
 80224e0:	bd10      	pop	{r4, pc}
 80224e2:	6891      	ldr	r1, [r2, #8]
 80224e4:	4281      	cmp	r1, r0
 80224e6:	bf0c      	ite	eq
 80224e8:	6093      	streq	r3, [r2, #8]
 80224ea:	60d3      	strne	r3, [r2, #12]
 80224ec:	e7f6      	b.n	80224dc <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x18>

080224ee <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>:
 80224ee:	6883      	ldr	r3, [r0, #8]
 80224f0:	68da      	ldr	r2, [r3, #12]
 80224f2:	6082      	str	r2, [r0, #8]
 80224f4:	b510      	push	{r4, lr}
 80224f6:	b102      	cbz	r2, 80224fa <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0xc>
 80224f8:	6050      	str	r0, [r2, #4]
 80224fa:	6842      	ldr	r2, [r0, #4]
 80224fc:	605a      	str	r2, [r3, #4]
 80224fe:	680c      	ldr	r4, [r1, #0]
 8022500:	4284      	cmp	r4, r0
 8022502:	d103      	bne.n	802250c <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x1e>
 8022504:	600b      	str	r3, [r1, #0]
 8022506:	60d8      	str	r0, [r3, #12]
 8022508:	6043      	str	r3, [r0, #4]
 802250a:	bd10      	pop	{r4, pc}
 802250c:	68d1      	ldr	r1, [r2, #12]
 802250e:	4281      	cmp	r1, r0
 8022510:	bf0c      	ite	eq
 8022512:	60d3      	streq	r3, [r2, #12]
 8022514:	6093      	strne	r3, [r2, #8]
 8022516:	e7f6      	b.n	8022506 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x18>

08022518 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 8022518:	7803      	ldrb	r3, [r0, #0]
 802251a:	b933      	cbnz	r3, 802252a <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 802251c:	6843      	ldr	r3, [r0, #4]
 802251e:	685b      	ldr	r3, [r3, #4]
 8022520:	4283      	cmp	r3, r0
 8022522:	d102      	bne.n	802252a <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 8022524:	68db      	ldr	r3, [r3, #12]
 8022526:	4618      	mov	r0, r3
 8022528:	4770      	bx	lr
 802252a:	6882      	ldr	r2, [r0, #8]
 802252c:	b122      	cbz	r2, 8022538 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x20>
 802252e:	4613      	mov	r3, r2
 8022530:	68d2      	ldr	r2, [r2, #12]
 8022532:	2a00      	cmp	r2, #0
 8022534:	d1fb      	bne.n	802252e <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x16>
 8022536:	e7f6      	b.n	8022526 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0xe>
 8022538:	6843      	ldr	r3, [r0, #4]
 802253a:	689a      	ldr	r2, [r3, #8]
 802253c:	4282      	cmp	r2, r0
 802253e:	d1f2      	bne.n	8022526 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0xe>
 8022540:	4618      	mov	r0, r3
 8022542:	685b      	ldr	r3, [r3, #4]
 8022544:	e7f9      	b.n	802253a <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x22>

08022546 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>:
 8022546:	68c3      	ldr	r3, [r0, #12]
 8022548:	b123      	cbz	r3, 8022554 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0xe>
 802254a:	4618      	mov	r0, r3
 802254c:	689b      	ldr	r3, [r3, #8]
 802254e:	2b00      	cmp	r3, #0
 8022550:	d1fb      	bne.n	802254a <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x4>
 8022552:	4770      	bx	lr
 8022554:	6843      	ldr	r3, [r0, #4]
 8022556:	68da      	ldr	r2, [r3, #12]
 8022558:	4282      	cmp	r2, r0
 802255a:	d102      	bne.n	8022562 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x1c>
 802255c:	4618      	mov	r0, r3
 802255e:	685b      	ldr	r3, [r3, #4]
 8022560:	e7f9      	b.n	8022556 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x10>
 8022562:	68c2      	ldr	r2, [r0, #12]
 8022564:	4293      	cmp	r3, r2
 8022566:	bf18      	it	ne
 8022568:	4618      	movne	r0, r3
 802256a:	4770      	bx	lr

0802256c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 802256c:	f7ff bfd4 	b.w	8022518 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>

08022570 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>:
 8022570:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022574:	461e      	mov	r6, r3
 8022576:	f103 0804 	add.w	r8, r3, #4
 802257a:	2300      	movs	r3, #0
 802257c:	e9c1 3302 	strd	r3, r3, [r1, #8]
 8022580:	460c      	mov	r4, r1
 8022582:	604a      	str	r2, [r1, #4]
 8022584:	700b      	strb	r3, [r1, #0]
 8022586:	b300      	cbz	r0, 80225ca <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x5a>
 8022588:	4296      	cmp	r6, r2
 802258a:	6091      	str	r1, [r2, #8]
 802258c:	d118      	bne.n	80225c0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x50>
 802258e:	6071      	str	r1, [r6, #4]
 8022590:	60f4      	str	r4, [r6, #12]
 8022592:	2701      	movs	r7, #1
 8022594:	f04f 0900 	mov.w	r9, #0
 8022598:	6873      	ldr	r3, [r6, #4]
 802259a:	42a3      	cmp	r3, r4
 802259c:	d03f      	beq.n	802261e <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xae>
 802259e:	6860      	ldr	r0, [r4, #4]
 80225a0:	7802      	ldrb	r2, [r0, #0]
 80225a2:	2a00      	cmp	r2, #0
 80225a4:	d13c      	bne.n	8022620 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xb0>
 80225a6:	6845      	ldr	r5, [r0, #4]
 80225a8:	68ab      	ldr	r3, [r5, #8]
 80225aa:	4298      	cmp	r0, r3
 80225ac:	d123      	bne.n	80225f6 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x86>
 80225ae:	68eb      	ldr	r3, [r5, #12]
 80225b0:	b183      	cbz	r3, 80225d4 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x64>
 80225b2:	781a      	ldrb	r2, [r3, #0]
 80225b4:	b972      	cbnz	r2, 80225d4 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x64>
 80225b6:	7007      	strb	r7, [r0, #0]
 80225b8:	701f      	strb	r7, [r3, #0]
 80225ba:	702a      	strb	r2, [r5, #0]
 80225bc:	462c      	mov	r4, r5
 80225be:	e7eb      	b.n	8022598 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x28>
 80225c0:	68b3      	ldr	r3, [r6, #8]
 80225c2:	4293      	cmp	r3, r2
 80225c4:	d1e5      	bne.n	8022592 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 80225c6:	60b1      	str	r1, [r6, #8]
 80225c8:	e7e3      	b.n	8022592 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 80225ca:	60d1      	str	r1, [r2, #12]
 80225cc:	68f3      	ldr	r3, [r6, #12]
 80225ce:	4293      	cmp	r3, r2
 80225d0:	d1df      	bne.n	8022592 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 80225d2:	e7dd      	b.n	8022590 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x20>
 80225d4:	68c3      	ldr	r3, [r0, #12]
 80225d6:	42a3      	cmp	r3, r4
 80225d8:	d103      	bne.n	80225e2 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x72>
 80225da:	4641      	mov	r1, r8
 80225dc:	f7ff ff72 	bl	80224c4 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 80225e0:	4604      	mov	r4, r0
 80225e2:	6863      	ldr	r3, [r4, #4]
 80225e4:	4641      	mov	r1, r8
 80225e6:	701f      	strb	r7, [r3, #0]
 80225e8:	4628      	mov	r0, r5
 80225ea:	f885 9000 	strb.w	r9, [r5]
 80225ee:	f7ff ff7e 	bl	80224ee <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 80225f2:	4625      	mov	r5, r4
 80225f4:	e7e2      	b.n	80225bc <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x4c>
 80225f6:	b113      	cbz	r3, 80225fe <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x8e>
 80225f8:	781a      	ldrb	r2, [r3, #0]
 80225fa:	2a00      	cmp	r2, #0
 80225fc:	d0db      	beq.n	80225b6 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x46>
 80225fe:	6883      	ldr	r3, [r0, #8]
 8022600:	42a3      	cmp	r3, r4
 8022602:	d103      	bne.n	802260c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x9c>
 8022604:	4641      	mov	r1, r8
 8022606:	f7ff ff72 	bl	80224ee <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 802260a:	4604      	mov	r4, r0
 802260c:	6863      	ldr	r3, [r4, #4]
 802260e:	4641      	mov	r1, r8
 8022610:	701f      	strb	r7, [r3, #0]
 8022612:	4628      	mov	r0, r5
 8022614:	f885 9000 	strb.w	r9, [r5]
 8022618:	f7ff ff54 	bl	80224c4 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 802261c:	e7e9      	b.n	80225f2 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x82>
 802261e:	4623      	mov	r3, r4
 8022620:	2201      	movs	r2, #1
 8022622:	701a      	strb	r2, [r3, #0]
 8022624:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08022628 <_ZSt17__throw_bad_allocv>:
 8022628:	b508      	push	{r3, lr}
 802262a:	f001 fb6b 	bl	8023d04 <abort>

0802262e <_ZSt19__throw_logic_errorPKc>:
 802262e:	b508      	push	{r3, lr}
 8022630:	f001 fb68 	bl	8023d04 <abort>

08022634 <_ZSt24__throw_invalid_argumentPKc>:
 8022634:	b508      	push	{r3, lr}
 8022636:	f001 fb65 	bl	8023d04 <abort>

0802263a <_ZSt20__throw_length_errorPKc>:
 802263a:	b508      	push	{r3, lr}
 802263c:	f001 fb62 	bl	8023d04 <abort>

08022640 <_ZSt20__throw_out_of_rangePKc>:
 8022640:	b508      	push	{r3, lr}
 8022642:	f001 fb5f 	bl	8023d04 <abort>

08022646 <_ZSt24__throw_out_of_range_fmtPKcz>:
 8022646:	b40f      	push	{r0, r1, r2, r3}
 8022648:	b580      	push	{r7, lr}
 802264a:	b084      	sub	sp, #16
 802264c:	af00      	add	r7, sp, #0
 802264e:	f107 0418 	add.w	r4, r7, #24
 8022652:	f854 2b04 	ldr.w	r2, [r4], #4
 8022656:	607a      	str	r2, [r7, #4]
 8022658:	4610      	mov	r0, r2
 802265a:	f7dd fe29 	bl	80002b0 <strlen>
 802265e:	f200 2307 	addw	r3, r0, #519	; 0x207
 8022662:	f023 0307 	bic.w	r3, r3, #7
 8022666:	ebad 0d03 	sub.w	sp, sp, r3
 802266a:	f500 7100 	add.w	r1, r0, #512	; 0x200
 802266e:	687a      	ldr	r2, [r7, #4]
 8022670:	60fc      	str	r4, [r7, #12]
 8022672:	4623      	mov	r3, r4
 8022674:	4668      	mov	r0, sp
 8022676:	f000 f855 	bl	8022724 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list>
 802267a:	f001 fb43 	bl	8023d04 <abort>
	...

08022680 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>:
 8022680:	b580      	push	{r7, lr}
 8022682:	b09c      	sub	sp, #112	; 0x70
 8022684:	4606      	mov	r6, r0
 8022686:	af00      	add	r7, sp, #0
 8022688:	460c      	mov	r4, r1
 802268a:	1ba4      	subs	r4, r4, r6
 802268c:	490e      	ldr	r1, [pc, #56]	; (80226c8 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_+0x48>)
 802268e:	2269      	movs	r2, #105	; 0x69
 8022690:	1d38      	adds	r0, r7, #4
 8022692:	f001 fbbf 	bl	8023e14 <memcpy>
 8022696:	f104 0370 	add.w	r3, r4, #112	; 0x70
 802269a:	f023 0307 	bic.w	r3, r3, #7
 802269e:	ebad 0d03 	sub.w	sp, sp, r3
 80226a2:	466d      	mov	r5, sp
 80226a4:	2268      	movs	r2, #104	; 0x68
 80226a6:	1d39      	adds	r1, r7, #4
 80226a8:	4628      	mov	r0, r5
 80226aa:	f001 fbb3 	bl	8023e14 <memcpy>
 80226ae:	4622      	mov	r2, r4
 80226b0:	4631      	mov	r1, r6
 80226b2:	f105 0068 	add.w	r0, r5, #104	; 0x68
 80226b6:	442c      	add	r4, r5
 80226b8:	f001 fbac 	bl	8023e14 <memcpy>
 80226bc:	2300      	movs	r3, #0
 80226be:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 80226c2:	4628      	mov	r0, r5
 80226c4:	f7ff ffb3 	bl	802262e <_ZSt19__throw_logic_errorPKc>
 80226c8:	08027e94 	.word	0x08027e94

080226cc <_ZN9__gnu_cxx15__concat_size_tEPcjj>:
 80226cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80226d0:	af00      	add	r7, sp, #0
 80226d2:	b084      	sub	sp, #16
 80226d4:	466d      	mov	r5, sp
 80226d6:	f105 040c 	add.w	r4, r5, #12
 80226da:	f8df 8044 	ldr.w	r8, [pc, #68]	; 8022720 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x54>
 80226de:	4623      	mov	r3, r4
 80226e0:	f04f 0c0a 	mov.w	ip, #10
 80226e4:	fbb2 f6fc 	udiv	r6, r2, ip
 80226e8:	fb0c 2e16 	mls	lr, ip, r6, r2
 80226ec:	f818 e00e 	ldrb.w	lr, [r8, lr]
 80226f0:	f803 ed01 	strb.w	lr, [r3, #-1]!
 80226f4:	4696      	mov	lr, r2
 80226f6:	f1be 0f09 	cmp.w	lr, #9
 80226fa:	4632      	mov	r2, r6
 80226fc:	d8f2      	bhi.n	80226e4 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x18>
 80226fe:	1ae4      	subs	r4, r4, r3
 8022700:	428c      	cmp	r4, r1
 8022702:	d809      	bhi.n	8022718 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x4c>
 8022704:	f1c4 010c 	rsb	r1, r4, #12
 8022708:	4622      	mov	r2, r4
 802270a:	4429      	add	r1, r5
 802270c:	f001 fb82 	bl	8023e14 <memcpy>
 8022710:	4620      	mov	r0, r4
 8022712:	46bd      	mov	sp, r7
 8022714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022718:	f04f 34ff 	mov.w	r4, #4294967295
 802271c:	e7f8      	b.n	8022710 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x44>
 802271e:	bf00      	nop
 8022720:	08027efd 	.word	0x08027efd

08022724 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list>:
 8022724:	3901      	subs	r1, #1
 8022726:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802272a:	4607      	mov	r7, r0
 802272c:	4615      	mov	r5, r2
 802272e:	eb00 0801 	add.w	r8, r0, r1
 8022732:	4604      	mov	r4, r0
 8022734:	782a      	ldrb	r2, [r5, #0]
 8022736:	b362      	cbz	r2, 8022792 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x6e>
 8022738:	4544      	cmp	r4, r8
 802273a:	d22e      	bcs.n	802279a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 802273c:	2a25      	cmp	r2, #37	; 0x25
 802273e:	d107      	bne.n	8022750 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 8022740:	786a      	ldrb	r2, [r5, #1]
 8022742:	2a73      	cmp	r2, #115	; 0x73
 8022744:	d009      	beq.n	802275a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x36>
 8022746:	2a7a      	cmp	r2, #122	; 0x7a
 8022748:	d012      	beq.n	8022770 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x4c>
 802274a:	2a25      	cmp	r2, #37	; 0x25
 802274c:	d100      	bne.n	8022750 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 802274e:	3501      	adds	r5, #1
 8022750:	f815 2b01 	ldrb.w	r2, [r5], #1
 8022754:	f804 2b01 	strb.w	r2, [r4], #1
 8022758:	e7ec      	b.n	8022734 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
 802275a:	f853 2b04 	ldr.w	r2, [r3], #4
 802275e:	3a01      	subs	r2, #1
 8022760:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 8022764:	b1e9      	cbz	r1, 80227a2 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x7e>
 8022766:	4544      	cmp	r4, r8
 8022768:	d017      	beq.n	802279a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 802276a:	f804 1b01 	strb.w	r1, [r4], #1
 802276e:	e7f7      	b.n	8022760 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x3c>
 8022770:	78aa      	ldrb	r2, [r5, #2]
 8022772:	2a75      	cmp	r2, #117	; 0x75
 8022774:	d1ec      	bne.n	8022750 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 8022776:	461e      	mov	r6, r3
 8022778:	eba8 0104 	sub.w	r1, r8, r4
 802277c:	f856 2b04 	ldr.w	r2, [r6], #4
 8022780:	4620      	mov	r0, r4
 8022782:	f7ff ffa3 	bl	80226cc <_ZN9__gnu_cxx15__concat_size_tEPcjj>
 8022786:	2800      	cmp	r0, #0
 8022788:	dd07      	ble.n	802279a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 802278a:	4404      	add	r4, r0
 802278c:	3503      	adds	r5, #3
 802278e:	4633      	mov	r3, r6
 8022790:	e7d0      	b.n	8022734 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
 8022792:	7022      	strb	r2, [r4, #0]
 8022794:	1be0      	subs	r0, r4, r7
 8022796:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802279a:	4621      	mov	r1, r4
 802279c:	4638      	mov	r0, r7
 802279e:	f7ff ff6f 	bl	8022680 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>
 80227a2:	3502      	adds	r5, #2
 80227a4:	e7c6      	b.n	8022734 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>

080227a6 <_ZNSt11char_traitsIcE7compareEPKcS2_j>:
 80227a6:	b10a      	cbz	r2, 80227ac <_ZNSt11char_traitsIcE7compareEPKcS2_j+0x6>
 80227a8:	f001 bb26 	b.w	8023df8 <memcmp>
 80227ac:	4610      	mov	r0, r2
 80227ae:	4770      	bx	lr

080227b0 <_ZNSt11char_traitsIcE4copyEPcPKcj>:
 80227b0:	b10a      	cbz	r2, 80227b6 <_ZNSt11char_traitsIcE4copyEPcPKcj+0x6>
 80227b2:	f001 bb2f 	b.w	8023e14 <memcpy>
 80227b6:	4770      	bx	lr

080227b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
 80227b8:	6001      	str	r1, [r0, #0]
 80227ba:	4770      	bx	lr

080227bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
 80227bc:	6800      	ldr	r0, [r0, #0]
 80227be:	4770      	bx	lr

080227c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
 80227c0:	3008      	adds	r0, #8
 80227c2:	4770      	bx	lr

080227c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>:
 80227c4:	6081      	str	r1, [r0, #8]
 80227c6:	4770      	bx	lr

080227c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>:
 80227c8:	6803      	ldr	r3, [r0, #0]
 80227ca:	6041      	str	r1, [r0, #4]
 80227cc:	2200      	movs	r2, #0
 80227ce:	545a      	strb	r2, [r3, r1]
 80227d0:	4770      	bx	lr
	...

080227d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
 80227d4:	b508      	push	{r3, lr}
 80227d6:	680b      	ldr	r3, [r1, #0]
 80227d8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80227dc:	d302      	bcc.n	80227e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x10>
 80227de:	480d      	ldr	r0, [pc, #52]	; (8022814 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x40>)
 80227e0:	f7ff ff2b 	bl	802263a <_ZSt20__throw_length_errorPKc>
 80227e4:	4293      	cmp	r3, r2
 80227e6:	d90b      	bls.n	8022800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 80227e8:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80227ec:	ea4f 0042 	mov.w	r0, r2, lsl #1
 80227f0:	d206      	bcs.n	8022800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 80227f2:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80227f6:	bf2a      	itet	cs
 80227f8:	f06f 4340 	mvncs.w	r3, #3221225472	; 0xc0000000
 80227fc:	6008      	strcc	r0, [r1, #0]
 80227fe:	600b      	strcs	r3, [r1, #0]
 8022800:	6808      	ldr	r0, [r1, #0]
 8022802:	3001      	adds	r0, #1
 8022804:	d501      	bpl.n	802280a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x36>
 8022806:	f7ff ff0f 	bl	8022628 <_ZSt17__throw_bad_allocv>
 802280a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 802280e:	f7ff be46 	b.w	802249e <_Znwj>
 8022812:	bf00      	nop
 8022814:	08027f08 	.word	0x08027f08

08022818 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
 8022818:	f850 3b08 	ldr.w	r3, [r0], #8
 802281c:	4283      	cmp	r3, r0
 802281e:	d002      	beq.n	8022826 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0xe>
 8022820:	4618      	mov	r0, r3
 8022822:	f7ff be29 	b.w	8022478 <_ZdlPv>
 8022826:	4770      	bx	lr

08022828 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc>:
 8022828:	b508      	push	{r3, lr}
 802282a:	4603      	mov	r3, r0
 802282c:	4608      	mov	r0, r1
 802282e:	685b      	ldr	r3, [r3, #4]
 8022830:	4298      	cmp	r0, r3
 8022832:	4611      	mov	r1, r2
 8022834:	d903      	bls.n	802283e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc+0x16>
 8022836:	4602      	mov	r2, r0
 8022838:	4801      	ldr	r0, [pc, #4]	; (8022840 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc+0x18>)
 802283a:	f7ff ff04 	bl	8022646 <_ZSt24__throw_out_of_range_fmtPKcz>
 802283e:	bd08      	pop	{r3, pc}
 8022840:	08027f20 	.word	0x08027f20

08022844 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>:
 8022844:	6840      	ldr	r0, [r0, #4]
 8022846:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802284a:	3901      	subs	r1, #1
 802284c:	1a09      	subs	r1, r1, r0
 802284e:	4291      	cmp	r1, r2
 8022850:	b508      	push	{r3, lr}
 8022852:	d202      	bcs.n	802285a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc+0x16>
 8022854:	4618      	mov	r0, r3
 8022856:	f7ff fef0 	bl	802263a <_ZSt20__throw_length_errorPKc>
 802285a:	bd08      	pop	{r3, pc}

0802285c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
 802285c:	6803      	ldr	r3, [r0, #0]
 802285e:	428b      	cmp	r3, r1
 8022860:	d806      	bhi.n	8022870 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x14>
 8022862:	6840      	ldr	r0, [r0, #4]
 8022864:	4418      	add	r0, r3
 8022866:	4281      	cmp	r1, r0
 8022868:	bf94      	ite	ls
 802286a:	2000      	movls	r0, #0
 802286c:	2001      	movhi	r0, #1
 802286e:	4770      	bx	lr
 8022870:	2001      	movs	r0, #1
 8022872:	4770      	bx	lr

08022874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
 8022874:	2a01      	cmp	r2, #1
 8022876:	b510      	push	{r4, lr}
 8022878:	d102      	bne.n	8022880 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0xc>
 802287a:	780a      	ldrb	r2, [r1, #0]
 802287c:	7002      	strb	r2, [r0, #0]
 802287e:	bd10      	pop	{r4, pc}
 8022880:	f7ff ff96 	bl	80227b0 <_ZNSt11char_traitsIcE4copyEPcPKcj>
 8022884:	e7fb      	b.n	802287e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0xa>

08022886 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>:
 8022886:	2a01      	cmp	r2, #1
 8022888:	b430      	push	{r4, r5}
 802288a:	d103      	bne.n	8022894 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xe>
 802288c:	780b      	ldrb	r3, [r1, #0]
 802288e:	7003      	strb	r3, [r0, #0]
 8022890:	bc30      	pop	{r4, r5}
 8022892:	4770      	bx	lr
 8022894:	2a00      	cmp	r2, #0
 8022896:	d0fb      	beq.n	8022890 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xa>
 8022898:	bc30      	pop	{r4, r5}
 802289a:	f001 bac9 	b.w	8023e30 <memmove>

0802289e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
 802289e:	b508      	push	{r3, lr}
 80228a0:	1a52      	subs	r2, r2, r1
 80228a2:	f7ff ffe7 	bl	8022874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80228a6:	bd08      	pop	{r3, pc}

080228a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
 80228a8:	b508      	push	{r3, lr}
 80228aa:	1a52      	subs	r2, r2, r1
 80228ac:	f7ff ffe2 	bl	8022874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80228b0:	bd08      	pop	{r3, pc}

080228b2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>:
 80228b2:	4288      	cmp	r0, r1
 80228b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80228b6:	4604      	mov	r4, r0
 80228b8:	460e      	mov	r6, r1
 80228ba:	d01e      	beq.n	80228fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x48>
 80228bc:	4603      	mov	r3, r0
 80228be:	684d      	ldr	r5, [r1, #4]
 80228c0:	f853 2b08 	ldr.w	r2, [r3], #8
 80228c4:	429a      	cmp	r2, r3
 80228c6:	bf14      	ite	ne
 80228c8:	6882      	ldrne	r2, [r0, #8]
 80228ca:	220f      	moveq	r2, #15
 80228cc:	42aa      	cmp	r2, r5
 80228ce:	d20a      	bcs.n	80228e6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x34>
 80228d0:	a901      	add	r1, sp, #4
 80228d2:	9501      	str	r5, [sp, #4]
 80228d4:	f7ff ff7e 	bl	80227d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 80228d8:	4607      	mov	r7, r0
 80228da:	4620      	mov	r0, r4
 80228dc:	f7ff ff9c 	bl	8022818 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80228e0:	9b01      	ldr	r3, [sp, #4]
 80228e2:	6027      	str	r7, [r4, #0]
 80228e4:	60a3      	str	r3, [r4, #8]
 80228e6:	b125      	cbz	r5, 80228f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x40>
 80228e8:	6831      	ldr	r1, [r6, #0]
 80228ea:	6820      	ldr	r0, [r4, #0]
 80228ec:	462a      	mov	r2, r5
 80228ee:	f7ff ffc1 	bl	8022874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80228f2:	6823      	ldr	r3, [r4, #0]
 80228f4:	6065      	str	r5, [r4, #4]
 80228f6:	2200      	movs	r2, #0
 80228f8:	555a      	strb	r2, [r3, r5]
 80228fa:	b003      	add	sp, #12
 80228fc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080228fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>:
 80228fe:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8022902:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8022904:	461f      	mov	r7, r3
 8022906:	6843      	ldr	r3, [r0, #4]
 8022908:	eb01 0802 	add.w	r8, r1, r2
 802290c:	1ab2      	subs	r2, r6, r2
 802290e:	441a      	add	r2, r3
 8022910:	eba3 0908 	sub.w	r9, r3, r8
 8022914:	4603      	mov	r3, r0
 8022916:	9201      	str	r2, [sp, #4]
 8022918:	f853 2b08 	ldr.w	r2, [r3], #8
 802291c:	429a      	cmp	r2, r3
 802291e:	bf18      	it	ne
 8022920:	6882      	ldrne	r2, [r0, #8]
 8022922:	460d      	mov	r5, r1
 8022924:	bf08      	it	eq
 8022926:	220f      	moveq	r2, #15
 8022928:	a901      	add	r1, sp, #4
 802292a:	4604      	mov	r4, r0
 802292c:	f7ff ff52 	bl	80227d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8022930:	4682      	mov	sl, r0
 8022932:	b11d      	cbz	r5, 802293c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x3e>
 8022934:	6821      	ldr	r1, [r4, #0]
 8022936:	462a      	mov	r2, r5
 8022938:	f7ff ff9c 	bl	8022874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802293c:	b137      	cbz	r7, 802294c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 802293e:	b12e      	cbz	r6, 802294c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8022940:	4632      	mov	r2, r6
 8022942:	4639      	mov	r1, r7
 8022944:	eb0a 0005 	add.w	r0, sl, r5
 8022948:	f7ff ff94 	bl	8022874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802294c:	f1b9 0f00 	cmp.w	r9, #0
 8022950:	d007      	beq.n	8022962 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x64>
 8022952:	6821      	ldr	r1, [r4, #0]
 8022954:	4435      	add	r5, r6
 8022956:	464a      	mov	r2, r9
 8022958:	4441      	add	r1, r8
 802295a:	eb0a 0005 	add.w	r0, sl, r5
 802295e:	f7ff ff89 	bl	8022874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022962:	4620      	mov	r0, r4
 8022964:	f7ff ff58 	bl	8022818 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8022968:	9b01      	ldr	r3, [sp, #4]
 802296a:	f8c4 a000 	str.w	sl, [r4]
 802296e:	60a3      	str	r3, [r4, #8]
 8022970:	b002      	add	sp, #8
 8022972:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08022976 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>:
 8022976:	b538      	push	{r3, r4, r5, lr}
 8022978:	4604      	mov	r4, r0
 802297a:	4615      	mov	r5, r2
 802297c:	4608      	mov	r0, r1
 802297e:	4411      	add	r1, r2
 8022980:	6862      	ldr	r2, [r4, #4]
 8022982:	1a52      	subs	r2, r2, r1
 8022984:	d005      	beq.n	8022992 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 8022986:	b125      	cbz	r5, 8022992 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 8022988:	6823      	ldr	r3, [r4, #0]
 802298a:	4419      	add	r1, r3
 802298c:	4418      	add	r0, r3
 802298e:	f7ff ff7a 	bl	8022886 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8022992:	6862      	ldr	r2, [r4, #4]
 8022994:	6823      	ldr	r3, [r4, #0]
 8022996:	1b55      	subs	r5, r2, r5
 8022998:	2200      	movs	r2, #0
 802299a:	6065      	str	r5, [r4, #4]
 802299c:	555a      	strb	r2, [r3, r5]
 802299e:	bd38      	pop	{r3, r4, r5, pc}

080229a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
 80229a0:	f100 0208 	add.w	r2, r0, #8
 80229a4:	6002      	str	r2, [r0, #0]
 80229a6:	2200      	movs	r2, #0
 80229a8:	6042      	str	r2, [r0, #4]
 80229aa:	7202      	strb	r2, [r0, #8]
 80229ac:	4770      	bx	lr

080229ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
 80229ae:	b570      	push	{r4, r5, r6, lr}
 80229b0:	4604      	mov	r4, r0
 80229b2:	460e      	mov	r6, r1
 80229b4:	3008      	adds	r0, #8
 80229b6:	6020      	str	r0, [r4, #0]
 80229b8:	f856 3b08 	ldr.w	r3, [r6], #8
 80229bc:	429e      	cmp	r6, r3
 80229be:	460d      	mov	r5, r1
 80229c0:	d10b      	bne.n	80229da <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x2c>
 80229c2:	2210      	movs	r2, #16
 80229c4:	4631      	mov	r1, r6
 80229c6:	f7ff fef3 	bl	80227b0 <_ZNSt11char_traitsIcE4copyEPcPKcj>
 80229ca:	686b      	ldr	r3, [r5, #4]
 80229cc:	6063      	str	r3, [r4, #4]
 80229ce:	2300      	movs	r3, #0
 80229d0:	602e      	str	r6, [r5, #0]
 80229d2:	606b      	str	r3, [r5, #4]
 80229d4:	722b      	strb	r3, [r5, #8]
 80229d6:	4620      	mov	r0, r4
 80229d8:	bd70      	pop	{r4, r5, r6, pc}
 80229da:	6023      	str	r3, [r4, #0]
 80229dc:	688b      	ldr	r3, [r1, #8]
 80229de:	60a3      	str	r3, [r4, #8]
 80229e0:	e7f3      	b.n	80229ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x1c>

080229e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
 80229e2:	b510      	push	{r4, lr}
 80229e4:	4604      	mov	r4, r0
 80229e6:	f7ff ff17 	bl	8022818 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80229ea:	4620      	mov	r0, r4
 80229ec:	bd10      	pop	{r4, pc}

080229ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>:
 80229ee:	b510      	push	{r4, lr}
 80229f0:	4604      	mov	r4, r0
 80229f2:	f7ff ff5e 	bl	80228b2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 80229f6:	4620      	mov	r0, r4
 80229f8:	bd10      	pop	{r4, pc}

080229fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
 80229fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80229fc:	460d      	mov	r5, r1
 80229fe:	f851 3b08 	ldr.w	r3, [r1], #8
 8022a02:	686a      	ldr	r2, [r5, #4]
 8022a04:	4299      	cmp	r1, r3
 8022a06:	4604      	mov	r4, r0
 8022a08:	6800      	ldr	r0, [r0, #0]
 8022a0a:	d10d      	bne.n	8022a28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x2e>
 8022a0c:	b10a      	cbz	r2, 8022a12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x18>
 8022a0e:	f7ff ff31 	bl	8022874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022a12:	686b      	ldr	r3, [r5, #4]
 8022a14:	6822      	ldr	r2, [r4, #0]
 8022a16:	6063      	str	r3, [r4, #4]
 8022a18:	2100      	movs	r1, #0
 8022a1a:	54d1      	strb	r1, [r2, r3]
 8022a1c:	682a      	ldr	r2, [r5, #0]
 8022a1e:	2300      	movs	r3, #0
 8022a20:	606b      	str	r3, [r5, #4]
 8022a22:	7013      	strb	r3, [r2, #0]
 8022a24:	4620      	mov	r0, r4
 8022a26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8022a28:	e9c4 3200 	strd	r3, r2, [r4]
 8022a2c:	f104 0708 	add.w	r7, r4, #8
 8022a30:	42b8      	cmp	r0, r7
 8022a32:	68ab      	ldr	r3, [r5, #8]
 8022a34:	bf18      	it	ne
 8022a36:	68a6      	ldrne	r6, [r4, #8]
 8022a38:	60a3      	str	r3, [r4, #8]
 8022a3a:	bf08      	it	eq
 8022a3c:	2000      	moveq	r0, #0
 8022a3e:	b110      	cbz	r0, 8022a46 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x4c>
 8022a40:	6028      	str	r0, [r5, #0]
 8022a42:	60ae      	str	r6, [r5, #8]
 8022a44:	e7ea      	b.n	8022a1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>
 8022a46:	6029      	str	r1, [r5, #0]
 8022a48:	e7e8      	b.n	8022a1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>

08022a4a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
 8022a4a:	6840      	ldr	r0, [r0, #4]
 8022a4c:	4770      	bx	lr

08022a4e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
 8022a4e:	6840      	ldr	r0, [r0, #4]
 8022a50:	4770      	bx	lr

08022a52 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>:
 8022a52:	4603      	mov	r3, r0
 8022a54:	f853 2b08 	ldr.w	r2, [r3], #8
 8022a58:	429a      	cmp	r2, r3
 8022a5a:	bf14      	ite	ne
 8022a5c:	6880      	ldrne	r0, [r0, #8]
 8022a5e:	200f      	moveq	r0, #15
 8022a60:	4770      	bx	lr

08022a62 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>:
 8022a62:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8022a64:	4605      	mov	r5, r0
 8022a66:	6843      	ldr	r3, [r0, #4]
 8022a68:	4299      	cmp	r1, r3
 8022a6a:	bf2c      	ite	cs
 8022a6c:	9101      	strcs	r1, [sp, #4]
 8022a6e:	9301      	strcc	r3, [sp, #4]
 8022a70:	f855 1b08 	ldr.w	r1, [r5], #8
 8022a74:	428d      	cmp	r5, r1
 8022a76:	bf18      	it	ne
 8022a78:	6882      	ldrne	r2, [r0, #8]
 8022a7a:	4604      	mov	r4, r0
 8022a7c:	9801      	ldr	r0, [sp, #4]
 8022a7e:	bf08      	it	eq
 8022a80:	220f      	moveq	r2, #15
 8022a82:	4290      	cmp	r0, r2
 8022a84:	d012      	beq.n	8022aac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 8022a86:	d801      	bhi.n	8022a8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x2a>
 8022a88:	280f      	cmp	r0, #15
 8022a8a:	d911      	bls.n	8022ab0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4e>
 8022a8c:	a901      	add	r1, sp, #4
 8022a8e:	4620      	mov	r0, r4
 8022a90:	f7ff fea0 	bl	80227d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8022a94:	6862      	ldr	r2, [r4, #4]
 8022a96:	6821      	ldr	r1, [r4, #0]
 8022a98:	3201      	adds	r2, #1
 8022a9a:	4605      	mov	r5, r0
 8022a9c:	f7ff feea 	bl	8022874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022aa0:	4620      	mov	r0, r4
 8022aa2:	f7ff feb9 	bl	8022818 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8022aa6:	9b01      	ldr	r3, [sp, #4]
 8022aa8:	6025      	str	r5, [r4, #0]
 8022aaa:	60a3      	str	r3, [r4, #8]
 8022aac:	b003      	add	sp, #12
 8022aae:	bd30      	pop	{r4, r5, pc}
 8022ab0:	428d      	cmp	r5, r1
 8022ab2:	d0fb      	beq.n	8022aac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 8022ab4:	1c5a      	adds	r2, r3, #1
 8022ab6:	4628      	mov	r0, r5
 8022ab8:	f7ff fedc 	bl	8022874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022abc:	6820      	ldr	r0, [r4, #0]
 8022abe:	f7ff fcdb 	bl	8022478 <_ZdlPv>
 8022ac2:	6025      	str	r5, [r4, #0]
 8022ac4:	e7f2      	b.n	8022aac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>

08022ac6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
 8022ac6:	6843      	ldr	r3, [r0, #4]
 8022ac8:	6800      	ldr	r0, [r0, #0]
 8022aca:	3b01      	subs	r3, #1
 8022acc:	4418      	add	r0, r3
 8022ace:	4770      	bx	lr

08022ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>:
 8022ad0:	4603      	mov	r3, r0
 8022ad2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8022ad4:	f853 2b08 	ldr.w	r2, [r3], #8
 8022ad8:	6846      	ldr	r6, [r0, #4]
 8022ada:	429a      	cmp	r2, r3
 8022adc:	bf18      	it	ne
 8022ade:	6883      	ldrne	r3, [r0, #8]
 8022ae0:	f106 0501 	add.w	r5, r6, #1
 8022ae4:	bf08      	it	eq
 8022ae6:	230f      	moveq	r3, #15
 8022ae8:	429d      	cmp	r5, r3
 8022aea:	4604      	mov	r4, r0
 8022aec:	460f      	mov	r7, r1
 8022aee:	d906      	bls.n	8022afe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x2e>
 8022af0:	2301      	movs	r3, #1
 8022af2:	9300      	str	r3, [sp, #0]
 8022af4:	2300      	movs	r3, #0
 8022af6:	461a      	mov	r2, r3
 8022af8:	4631      	mov	r1, r6
 8022afa:	f7ff ff00 	bl	80228fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8022afe:	6823      	ldr	r3, [r4, #0]
 8022b00:	559f      	strb	r7, [r3, r6]
 8022b02:	6823      	ldr	r3, [r4, #0]
 8022b04:	6065      	str	r5, [r4, #4]
 8022b06:	2200      	movs	r2, #0
 8022b08:	555a      	strb	r2, [r3, r5]
 8022b0a:	b003      	add	sp, #12
 8022b0c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08022b0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>:
 8022b0e:	b508      	push	{r3, lr}
 8022b10:	6841      	ldr	r1, [r0, #4]
 8022b12:	2201      	movs	r2, #1
 8022b14:	3901      	subs	r1, #1
 8022b16:	f7ff ff2e 	bl	8022976 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
 8022b1a:	bd08      	pop	{r3, pc}

08022b1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>:
 8022b1c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b20:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022b22:	4614      	mov	r4, r2
 8022b24:	4680      	mov	r8, r0
 8022b26:	462a      	mov	r2, r5
 8022b28:	4689      	mov	r9, r1
 8022b2a:	461f      	mov	r7, r3
 8022b2c:	4621      	mov	r1, r4
 8022b2e:	4b39      	ldr	r3, [pc, #228]	; (8022c14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xf8>)
 8022b30:	f7ff fe88 	bl	8022844 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8022b34:	4642      	mov	r2, r8
 8022b36:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8022b3a:	f852 6b08 	ldr.w	r6, [r2], #8
 8022b3e:	4296      	cmp	r6, r2
 8022b40:	bf18      	it	ne
 8022b42:	f8d8 2008 	ldrne.w	r2, [r8, #8]
 8022b46:	eba5 0b04 	sub.w	fp, r5, r4
 8022b4a:	eb03 0a0b 	add.w	sl, r3, fp
 8022b4e:	bf08      	it	eq
 8022b50:	220f      	moveq	r2, #15
 8022b52:	4552      	cmp	r2, sl
 8022b54:	d351      	bcc.n	8022bfa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xde>
 8022b56:	444e      	add	r6, r9
 8022b58:	4639      	mov	r1, r7
 8022b5a:	44a1      	add	r9, r4
 8022b5c:	4640      	mov	r0, r8
 8022b5e:	eba3 0909 	sub.w	r9, r3, r9
 8022b62:	f7ff fe7b 	bl	802285c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>
 8022b66:	b180      	cbz	r0, 8022b8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x6e>
 8022b68:	f1b9 0f00 	cmp.w	r9, #0
 8022b6c:	d006      	beq.n	8022b7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 8022b6e:	42ac      	cmp	r4, r5
 8022b70:	d004      	beq.n	8022b7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 8022b72:	464a      	mov	r2, r9
 8022b74:	1931      	adds	r1, r6, r4
 8022b76:	1970      	adds	r0, r6, r5
 8022b78:	f7ff fe85 	bl	8022886 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8022b7c:	b315      	cbz	r5, 8022bc4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8022b7e:	462a      	mov	r2, r5
 8022b80:	4639      	mov	r1, r7
 8022b82:	4630      	mov	r0, r6
 8022b84:	f7ff fe76 	bl	8022874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022b88:	e01c      	b.n	8022bc4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8022b8a:	b135      	cbz	r5, 8022b9a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x7e>
 8022b8c:	42ac      	cmp	r4, r5
 8022b8e:	d33c      	bcc.n	8022c0a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xee>
 8022b90:	462a      	mov	r2, r5
 8022b92:	4639      	mov	r1, r7
 8022b94:	4630      	mov	r0, r6
 8022b96:	f7ff fe76 	bl	8022886 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8022b9a:	f1b9 0f00 	cmp.w	r9, #0
 8022b9e:	d011      	beq.n	8022bc4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8022ba0:	42ac      	cmp	r4, r5
 8022ba2:	d00f      	beq.n	8022bc4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8022ba4:	464a      	mov	r2, r9
 8022ba6:	1931      	adds	r1, r6, r4
 8022ba8:	1970      	adds	r0, r6, r5
 8022baa:	f7ff fe6c 	bl	8022886 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8022bae:	42ac      	cmp	r4, r5
 8022bb0:	d208      	bcs.n	8022bc4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8022bb2:	4434      	add	r4, r6
 8022bb4:	197b      	adds	r3, r7, r5
 8022bb6:	429c      	cmp	r4, r3
 8022bb8:	d30f      	bcc.n	8022bda <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbe>
 8022bba:	462a      	mov	r2, r5
 8022bbc:	4639      	mov	r1, r7
 8022bbe:	4630      	mov	r0, r6
 8022bc0:	f7ff fe61 	bl	8022886 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8022bc4:	f8d8 3000 	ldr.w	r3, [r8]
 8022bc8:	f8c8 a004 	str.w	sl, [r8, #4]
 8022bcc:	2200      	movs	r2, #0
 8022bce:	4640      	mov	r0, r8
 8022bd0:	f803 200a 	strb.w	r2, [r3, sl]
 8022bd4:	b003      	add	sp, #12
 8022bd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022bda:	42bc      	cmp	r4, r7
 8022bdc:	d803      	bhi.n	8022be6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xca>
 8022bde:	462a      	mov	r2, r5
 8022be0:	eb07 010b 	add.w	r1, r7, fp
 8022be4:	e7cd      	b.n	8022b82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x66>
 8022be6:	1be4      	subs	r4, r4, r7
 8022be8:	4622      	mov	r2, r4
 8022bea:	4639      	mov	r1, r7
 8022bec:	4630      	mov	r0, r6
 8022bee:	f7ff fe4a 	bl	8022886 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8022bf2:	1b2a      	subs	r2, r5, r4
 8022bf4:	1971      	adds	r1, r6, r5
 8022bf6:	1930      	adds	r0, r6, r4
 8022bf8:	e7c4      	b.n	8022b84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x68>
 8022bfa:	9500      	str	r5, [sp, #0]
 8022bfc:	463b      	mov	r3, r7
 8022bfe:	4622      	mov	r2, r4
 8022c00:	4649      	mov	r1, r9
 8022c02:	4640      	mov	r0, r8
 8022c04:	f7ff fe7b 	bl	80228fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8022c08:	e7dc      	b.n	8022bc4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8022c0a:	f1b9 0f00 	cmp.w	r9, #0
 8022c0e:	d0d0      	beq.n	8022bb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x96>
 8022c10:	e7c8      	b.n	8022ba4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x88>
 8022c12:	bf00      	nop
 8022c14:	08027f6d 	.word	0x08027f6d

08022c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>:
 8022c18:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8022c1a:	4604      	mov	r4, r0
 8022c1c:	4615      	mov	r5, r2
 8022c1e:	4a09      	ldr	r2, [pc, #36]	; (8022c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj+0x2c>)
 8022c20:	9303      	str	r3, [sp, #12]
 8022c22:	460e      	mov	r6, r1
 8022c24:	f7ff fe00 	bl	8022828 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc>
 8022c28:	6862      	ldr	r2, [r4, #4]
 8022c2a:	9b03      	ldr	r3, [sp, #12]
 8022c2c:	1b92      	subs	r2, r2, r6
 8022c2e:	4601      	mov	r1, r0
 8022c30:	42aa      	cmp	r2, r5
 8022c32:	9808      	ldr	r0, [sp, #32]
 8022c34:	9000      	str	r0, [sp, #0]
 8022c36:	bf28      	it	cs
 8022c38:	462a      	movcs	r2, r5
 8022c3a:	4620      	mov	r0, r4
 8022c3c:	f7ff ff6e 	bl	8022b1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
 8022c40:	b004      	add	sp, #16
 8022c42:	bd70      	pop	{r4, r5, r6, pc}
 8022c44:	08027f57 	.word	0x08027f57

08022c48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_>:
 8022c48:	b507      	push	{r0, r1, r2, lr}
 8022c4a:	6853      	ldr	r3, [r2, #4]
 8022c4c:	9300      	str	r3, [sp, #0]
 8022c4e:	6813      	ldr	r3, [r2, #0]
 8022c50:	2200      	movs	r2, #0
 8022c52:	f7ff ffe1 	bl	8022c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>
 8022c56:	b003      	add	sp, #12
 8022c58:	f85d fb04 	ldr.w	pc, [sp], #4

08022c5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc>:
 8022c5c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8022c5e:	4604      	mov	r4, r0
 8022c60:	4610      	mov	r0, r2
 8022c62:	9103      	str	r1, [sp, #12]
 8022c64:	9202      	str	r2, [sp, #8]
 8022c66:	f7dd fb23 	bl	80002b0 <strlen>
 8022c6a:	9b02      	ldr	r3, [sp, #8]
 8022c6c:	9000      	str	r0, [sp, #0]
 8022c6e:	9903      	ldr	r1, [sp, #12]
 8022c70:	2200      	movs	r2, #0
 8022c72:	4620      	mov	r0, r4
 8022c74:	f7ff ffd0 	bl	8022c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>
 8022c78:	b004      	add	sp, #16
 8022c7a:	bd10      	pop	{r4, pc}

08022c7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>:
 8022c7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8022c7e:	4604      	mov	r4, r0
 8022c80:	4623      	mov	r3, r4
 8022c82:	6840      	ldr	r0, [r0, #4]
 8022c84:	f853 6b08 	ldr.w	r6, [r3], #8
 8022c88:	429e      	cmp	r6, r3
 8022c8a:	bf18      	it	ne
 8022c8c:	68a3      	ldrne	r3, [r4, #8]
 8022c8e:	eb00 0502 	add.w	r5, r0, r2
 8022c92:	bf08      	it	eq
 8022c94:	230f      	moveq	r3, #15
 8022c96:	429d      	cmp	r5, r3
 8022c98:	d80a      	bhi.n	8022cb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x34>
 8022c9a:	b112      	cbz	r2, 8022ca2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>
 8022c9c:	4430      	add	r0, r6
 8022c9e:	f7ff fde9 	bl	8022874 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022ca2:	6823      	ldr	r3, [r4, #0]
 8022ca4:	6065      	str	r5, [r4, #4]
 8022ca6:	2200      	movs	r2, #0
 8022ca8:	4620      	mov	r0, r4
 8022caa:	555a      	strb	r2, [r3, r5]
 8022cac:	b002      	add	sp, #8
 8022cae:	bd70      	pop	{r4, r5, r6, pc}
 8022cb0:	9200      	str	r2, [sp, #0]
 8022cb2:	460b      	mov	r3, r1
 8022cb4:	2200      	movs	r2, #0
 8022cb6:	4601      	mov	r1, r0
 8022cb8:	4620      	mov	r0, r4
 8022cba:	f7ff fe20 	bl	80228fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8022cbe:	e7f0      	b.n	8022ca2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>

08022cc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>:
 8022cc0:	b508      	push	{r3, lr}
 8022cc2:	e9d1 1200 	ldrd	r1, r2, [r1]
 8022cc6:	f7ff ffd9 	bl	8022c7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8022cca:	bd08      	pop	{r3, pc}

08022ccc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>:
 8022ccc:	b508      	push	{r3, lr}
 8022cce:	f7ff fff7 	bl	8022cc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 8022cd2:	bd08      	pop	{r3, pc}

08022cd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>:
 8022cd4:	b570      	push	{r4, r5, r6, lr}
 8022cd6:	4b06      	ldr	r3, [pc, #24]	; (8022cf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj+0x1c>)
 8022cd8:	4604      	mov	r4, r0
 8022cda:	460d      	mov	r5, r1
 8022cdc:	4616      	mov	r6, r2
 8022cde:	2100      	movs	r1, #0
 8022ce0:	f7ff fdb0 	bl	8022844 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8022ce4:	4632      	mov	r2, r6
 8022ce6:	4629      	mov	r1, r5
 8022ce8:	4620      	mov	r0, r4
 8022cea:	f7ff ffc7 	bl	8022c7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8022cee:	bd70      	pop	{r4, r5, r6, pc}
 8022cf0:	08027f86 	.word	0x08027f86

08022cf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
 8022cf4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8022cf6:	4604      	mov	r4, r0
 8022cf8:	4608      	mov	r0, r1
 8022cfa:	460d      	mov	r5, r1
 8022cfc:	f7dd fad8 	bl	80002b0 <strlen>
 8022d00:	4b06      	ldr	r3, [pc, #24]	; (8022d1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc+0x28>)
 8022d02:	9001      	str	r0, [sp, #4]
 8022d04:	4602      	mov	r2, r0
 8022d06:	2100      	movs	r1, #0
 8022d08:	4620      	mov	r0, r4
 8022d0a:	f7ff fd9b 	bl	8022844 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8022d0e:	9a01      	ldr	r2, [sp, #4]
 8022d10:	4629      	mov	r1, r5
 8022d12:	4620      	mov	r0, r4
 8022d14:	f7ff ffb2 	bl	8022c7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8022d18:	b003      	add	sp, #12
 8022d1a:	bd30      	pop	{r4, r5, pc}
 8022d1c:	08027f86 	.word	0x08027f86

08022d20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
 8022d20:	6800      	ldr	r0, [r0, #0]
 8022d22:	4770      	bx	lr

08022d24 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>:
 8022d24:	b538      	push	{r3, r4, r5, lr}
 8022d26:	6845      	ldr	r5, [r0, #4]
 8022d28:	684c      	ldr	r4, [r1, #4]
 8022d2a:	6800      	ldr	r0, [r0, #0]
 8022d2c:	6809      	ldr	r1, [r1, #0]
 8022d2e:	42a5      	cmp	r5, r4
 8022d30:	462a      	mov	r2, r5
 8022d32:	bf28      	it	cs
 8022d34:	4622      	movcs	r2, r4
 8022d36:	f7ff fd36 	bl	80227a6 <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 8022d3a:	b900      	cbnz	r0, 8022d3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x1a>
 8022d3c:	1b28      	subs	r0, r5, r4
 8022d3e:	bd38      	pop	{r3, r4, r5, pc}

08022d40 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>:
 8022d40:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8022d42:	6846      	ldr	r6, [r0, #4]
 8022d44:	9101      	str	r1, [sp, #4]
 8022d46:	4605      	mov	r5, r0
 8022d48:	4608      	mov	r0, r1
 8022d4a:	f7dd fab1 	bl	80002b0 <strlen>
 8022d4e:	4286      	cmp	r6, r0
 8022d50:	4604      	mov	r4, r0
 8022d52:	4632      	mov	r2, r6
 8022d54:	9901      	ldr	r1, [sp, #4]
 8022d56:	bf28      	it	cs
 8022d58:	4602      	movcs	r2, r0
 8022d5a:	6828      	ldr	r0, [r5, #0]
 8022d5c:	f7ff fd23 	bl	80227a6 <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 8022d60:	b900      	cbnz	r0, 8022d64 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x24>
 8022d62:	1b30      	subs	r0, r6, r4
 8022d64:	b002      	add	sp, #8
 8022d66:	bd70      	pop	{r4, r5, r6, pc}

08022d68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>:
 8022d68:	6001      	str	r1, [r0, #0]
 8022d6a:	4770      	bx	lr

08022d6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>:
 8022d6c:	b538      	push	{r3, r4, r5, lr}
 8022d6e:	f100 0308 	add.w	r3, r0, #8
 8022d72:	6003      	str	r3, [r0, #0]
 8022d74:	e9d1 5200 	ldrd	r5, r2, [r1]
 8022d78:	4604      	mov	r4, r0
 8022d7a:	f04f 0300 	mov.w	r3, #0
 8022d7e:	442a      	add	r2, r5
 8022d80:	4629      	mov	r1, r5
 8022d82:	f7ef fd61 	bl	8012848 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
 8022d86:	4620      	mov	r0, r4
 8022d88:	bd38      	pop	{r3, r4, r5, pc}
	...

08022d8c <_ZSt15get_new_handlerv>:
 8022d8c:	4b02      	ldr	r3, [pc, #8]	; (8022d98 <_ZSt15get_new_handlerv+0xc>)
 8022d8e:	6818      	ldr	r0, [r3, #0]
 8022d90:	f3bf 8f5b 	dmb	ish
 8022d94:	4770      	bx	lr
 8022d96:	bf00      	nop
 8022d98:	20000724 	.word	0x20000724

08022d9c <pow>:
 8022d9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022da0:	ec59 8b10 	vmov	r8, r9, d0
 8022da4:	ec57 6b11 	vmov	r6, r7, d1
 8022da8:	f000 f8a6 	bl	8022ef8 <__ieee754_pow>
 8022dac:	4b4e      	ldr	r3, [pc, #312]	; (8022ee8 <pow+0x14c>)
 8022dae:	f993 3000 	ldrsb.w	r3, [r3]
 8022db2:	3301      	adds	r3, #1
 8022db4:	ec55 4b10 	vmov	r4, r5, d0
 8022db8:	d015      	beq.n	8022de6 <pow+0x4a>
 8022dba:	4632      	mov	r2, r6
 8022dbc:	463b      	mov	r3, r7
 8022dbe:	4630      	mov	r0, r6
 8022dc0:	4639      	mov	r1, r7
 8022dc2:	f7dd fed3 	bl	8000b6c <__aeabi_dcmpun>
 8022dc6:	b970      	cbnz	r0, 8022de6 <pow+0x4a>
 8022dc8:	4642      	mov	r2, r8
 8022dca:	464b      	mov	r3, r9
 8022dcc:	4640      	mov	r0, r8
 8022dce:	4649      	mov	r1, r9
 8022dd0:	f7dd fecc 	bl	8000b6c <__aeabi_dcmpun>
 8022dd4:	2200      	movs	r2, #0
 8022dd6:	2300      	movs	r3, #0
 8022dd8:	b148      	cbz	r0, 8022dee <pow+0x52>
 8022dda:	4630      	mov	r0, r6
 8022ddc:	4639      	mov	r1, r7
 8022dde:	f7dd fe93 	bl	8000b08 <__aeabi_dcmpeq>
 8022de2:	2800      	cmp	r0, #0
 8022de4:	d17d      	bne.n	8022ee2 <pow+0x146>
 8022de6:	ec45 4b10 	vmov	d0, r4, r5
 8022dea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022dee:	4640      	mov	r0, r8
 8022df0:	4649      	mov	r1, r9
 8022df2:	f7dd fe89 	bl	8000b08 <__aeabi_dcmpeq>
 8022df6:	b1e0      	cbz	r0, 8022e32 <pow+0x96>
 8022df8:	2200      	movs	r2, #0
 8022dfa:	2300      	movs	r3, #0
 8022dfc:	4630      	mov	r0, r6
 8022dfe:	4639      	mov	r1, r7
 8022e00:	f7dd fe82 	bl	8000b08 <__aeabi_dcmpeq>
 8022e04:	2800      	cmp	r0, #0
 8022e06:	d16c      	bne.n	8022ee2 <pow+0x146>
 8022e08:	ec47 6b10 	vmov	d0, r6, r7
 8022e0c:	f000 fe53 	bl	8023ab6 <finite>
 8022e10:	2800      	cmp	r0, #0
 8022e12:	d0e8      	beq.n	8022de6 <pow+0x4a>
 8022e14:	2200      	movs	r2, #0
 8022e16:	2300      	movs	r3, #0
 8022e18:	4630      	mov	r0, r6
 8022e1a:	4639      	mov	r1, r7
 8022e1c:	f7dd fe7e 	bl	8000b1c <__aeabi_dcmplt>
 8022e20:	2800      	cmp	r0, #0
 8022e22:	d0e0      	beq.n	8022de6 <pow+0x4a>
 8022e24:	f000 ff7c 	bl	8023d20 <__errno>
 8022e28:	2321      	movs	r3, #33	; 0x21
 8022e2a:	6003      	str	r3, [r0, #0]
 8022e2c:	2400      	movs	r4, #0
 8022e2e:	4d2f      	ldr	r5, [pc, #188]	; (8022eec <pow+0x150>)
 8022e30:	e7d9      	b.n	8022de6 <pow+0x4a>
 8022e32:	ec45 4b10 	vmov	d0, r4, r5
 8022e36:	f000 fe3e 	bl	8023ab6 <finite>
 8022e3a:	bbb8      	cbnz	r0, 8022eac <pow+0x110>
 8022e3c:	ec49 8b10 	vmov	d0, r8, r9
 8022e40:	f000 fe39 	bl	8023ab6 <finite>
 8022e44:	b390      	cbz	r0, 8022eac <pow+0x110>
 8022e46:	ec47 6b10 	vmov	d0, r6, r7
 8022e4a:	f000 fe34 	bl	8023ab6 <finite>
 8022e4e:	b368      	cbz	r0, 8022eac <pow+0x110>
 8022e50:	4622      	mov	r2, r4
 8022e52:	462b      	mov	r3, r5
 8022e54:	4620      	mov	r0, r4
 8022e56:	4629      	mov	r1, r5
 8022e58:	f7dd fe88 	bl	8000b6c <__aeabi_dcmpun>
 8022e5c:	b160      	cbz	r0, 8022e78 <pow+0xdc>
 8022e5e:	f000 ff5f 	bl	8023d20 <__errno>
 8022e62:	2321      	movs	r3, #33	; 0x21
 8022e64:	6003      	str	r3, [r0, #0]
 8022e66:	2200      	movs	r2, #0
 8022e68:	2300      	movs	r3, #0
 8022e6a:	4610      	mov	r0, r2
 8022e6c:	4619      	mov	r1, r3
 8022e6e:	f7dd fd0d 	bl	800088c <__aeabi_ddiv>
 8022e72:	4604      	mov	r4, r0
 8022e74:	460d      	mov	r5, r1
 8022e76:	e7b6      	b.n	8022de6 <pow+0x4a>
 8022e78:	f000 ff52 	bl	8023d20 <__errno>
 8022e7c:	2322      	movs	r3, #34	; 0x22
 8022e7e:	6003      	str	r3, [r0, #0]
 8022e80:	2200      	movs	r2, #0
 8022e82:	2300      	movs	r3, #0
 8022e84:	4640      	mov	r0, r8
 8022e86:	4649      	mov	r1, r9
 8022e88:	f7dd fe48 	bl	8000b1c <__aeabi_dcmplt>
 8022e8c:	2400      	movs	r4, #0
 8022e8e:	b158      	cbz	r0, 8022ea8 <pow+0x10c>
 8022e90:	ec47 6b10 	vmov	d0, r6, r7
 8022e94:	f000 fe24 	bl	8023ae0 <rint>
 8022e98:	4632      	mov	r2, r6
 8022e9a:	ec51 0b10 	vmov	r0, r1, d0
 8022e9e:	463b      	mov	r3, r7
 8022ea0:	f7dd fe32 	bl	8000b08 <__aeabi_dcmpeq>
 8022ea4:	2800      	cmp	r0, #0
 8022ea6:	d0c2      	beq.n	8022e2e <pow+0x92>
 8022ea8:	4d11      	ldr	r5, [pc, #68]	; (8022ef0 <pow+0x154>)
 8022eaa:	e79c      	b.n	8022de6 <pow+0x4a>
 8022eac:	2200      	movs	r2, #0
 8022eae:	2300      	movs	r3, #0
 8022eb0:	4620      	mov	r0, r4
 8022eb2:	4629      	mov	r1, r5
 8022eb4:	f7dd fe28 	bl	8000b08 <__aeabi_dcmpeq>
 8022eb8:	2800      	cmp	r0, #0
 8022eba:	d094      	beq.n	8022de6 <pow+0x4a>
 8022ebc:	ec49 8b10 	vmov	d0, r8, r9
 8022ec0:	f000 fdf9 	bl	8023ab6 <finite>
 8022ec4:	2800      	cmp	r0, #0
 8022ec6:	d08e      	beq.n	8022de6 <pow+0x4a>
 8022ec8:	ec47 6b10 	vmov	d0, r6, r7
 8022ecc:	f000 fdf3 	bl	8023ab6 <finite>
 8022ed0:	2800      	cmp	r0, #0
 8022ed2:	d088      	beq.n	8022de6 <pow+0x4a>
 8022ed4:	f000 ff24 	bl	8023d20 <__errno>
 8022ed8:	2322      	movs	r3, #34	; 0x22
 8022eda:	6003      	str	r3, [r0, #0]
 8022edc:	2400      	movs	r4, #0
 8022ede:	2500      	movs	r5, #0
 8022ee0:	e781      	b.n	8022de6 <pow+0x4a>
 8022ee2:	4d04      	ldr	r5, [pc, #16]	; (8022ef4 <pow+0x158>)
 8022ee4:	2400      	movs	r4, #0
 8022ee6:	e77e      	b.n	8022de6 <pow+0x4a>
 8022ee8:	2000000d 	.word	0x2000000d
 8022eec:	fff00000 	.word	0xfff00000
 8022ef0:	7ff00000 	.word	0x7ff00000
 8022ef4:	3ff00000 	.word	0x3ff00000

08022ef8 <__ieee754_pow>:
 8022ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022efc:	ed2d 8b06 	vpush	{d8-d10}
 8022f00:	b08d      	sub	sp, #52	; 0x34
 8022f02:	ed8d 1b02 	vstr	d1, [sp, #8]
 8022f06:	e9dd 0702 	ldrd	r0, r7, [sp, #8]
 8022f0a:	f027 4600 	bic.w	r6, r7, #2147483648	; 0x80000000
 8022f0e:	ea56 0100 	orrs.w	r1, r6, r0
 8022f12:	ec53 2b10 	vmov	r2, r3, d0
 8022f16:	f000 84d1 	beq.w	80238bc <__ieee754_pow+0x9c4>
 8022f1a:	497f      	ldr	r1, [pc, #508]	; (8023118 <__ieee754_pow+0x220>)
 8022f1c:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
 8022f20:	428c      	cmp	r4, r1
 8022f22:	ee10 8a10 	vmov	r8, s0
 8022f26:	4699      	mov	r9, r3
 8022f28:	dc09      	bgt.n	8022f3e <__ieee754_pow+0x46>
 8022f2a:	d103      	bne.n	8022f34 <__ieee754_pow+0x3c>
 8022f2c:	b97a      	cbnz	r2, 8022f4e <__ieee754_pow+0x56>
 8022f2e:	42a6      	cmp	r6, r4
 8022f30:	dd02      	ble.n	8022f38 <__ieee754_pow+0x40>
 8022f32:	e00c      	b.n	8022f4e <__ieee754_pow+0x56>
 8022f34:	428e      	cmp	r6, r1
 8022f36:	dc02      	bgt.n	8022f3e <__ieee754_pow+0x46>
 8022f38:	428e      	cmp	r6, r1
 8022f3a:	d110      	bne.n	8022f5e <__ieee754_pow+0x66>
 8022f3c:	b178      	cbz	r0, 8022f5e <__ieee754_pow+0x66>
 8022f3e:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8022f42:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8022f46:	ea54 0308 	orrs.w	r3, r4, r8
 8022f4a:	f000 84b7 	beq.w	80238bc <__ieee754_pow+0x9c4>
 8022f4e:	4873      	ldr	r0, [pc, #460]	; (802311c <__ieee754_pow+0x224>)
 8022f50:	b00d      	add	sp, #52	; 0x34
 8022f52:	ecbd 8b06 	vpop	{d8-d10}
 8022f56:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f5a:	f000 bdb9 	b.w	8023ad0 <nan>
 8022f5e:	f1b9 0f00 	cmp.w	r9, #0
 8022f62:	da36      	bge.n	8022fd2 <__ieee754_pow+0xda>
 8022f64:	496e      	ldr	r1, [pc, #440]	; (8023120 <__ieee754_pow+0x228>)
 8022f66:	428e      	cmp	r6, r1
 8022f68:	dc51      	bgt.n	802300e <__ieee754_pow+0x116>
 8022f6a:	f1a1 7154 	sub.w	r1, r1, #55574528	; 0x3500000
 8022f6e:	428e      	cmp	r6, r1
 8022f70:	f340 84af 	ble.w	80238d2 <__ieee754_pow+0x9da>
 8022f74:	1531      	asrs	r1, r6, #20
 8022f76:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 8022f7a:	2914      	cmp	r1, #20
 8022f7c:	dd0f      	ble.n	8022f9e <__ieee754_pow+0xa6>
 8022f7e:	f1c1 0134 	rsb	r1, r1, #52	; 0x34
 8022f82:	fa20 fc01 	lsr.w	ip, r0, r1
 8022f86:	fa0c f101 	lsl.w	r1, ip, r1
 8022f8a:	4281      	cmp	r1, r0
 8022f8c:	f040 84a1 	bne.w	80238d2 <__ieee754_pow+0x9da>
 8022f90:	f00c 0c01 	and.w	ip, ip, #1
 8022f94:	f1cc 0102 	rsb	r1, ip, #2
 8022f98:	9100      	str	r1, [sp, #0]
 8022f9a:	b180      	cbz	r0, 8022fbe <__ieee754_pow+0xc6>
 8022f9c:	e059      	b.n	8023052 <__ieee754_pow+0x15a>
 8022f9e:	2800      	cmp	r0, #0
 8022fa0:	d155      	bne.n	802304e <__ieee754_pow+0x156>
 8022fa2:	f1c1 0114 	rsb	r1, r1, #20
 8022fa6:	fa46 fc01 	asr.w	ip, r6, r1
 8022faa:	fa0c f101 	lsl.w	r1, ip, r1
 8022fae:	42b1      	cmp	r1, r6
 8022fb0:	f040 848c 	bne.w	80238cc <__ieee754_pow+0x9d4>
 8022fb4:	f00c 0c01 	and.w	ip, ip, #1
 8022fb8:	f1cc 0102 	rsb	r1, ip, #2
 8022fbc:	9100      	str	r1, [sp, #0]
 8022fbe:	4959      	ldr	r1, [pc, #356]	; (8023124 <__ieee754_pow+0x22c>)
 8022fc0:	428e      	cmp	r6, r1
 8022fc2:	d12d      	bne.n	8023020 <__ieee754_pow+0x128>
 8022fc4:	2f00      	cmp	r7, #0
 8022fc6:	da79      	bge.n	80230bc <__ieee754_pow+0x1c4>
 8022fc8:	4956      	ldr	r1, [pc, #344]	; (8023124 <__ieee754_pow+0x22c>)
 8022fca:	2000      	movs	r0, #0
 8022fcc:	f7dd fc5e 	bl	800088c <__aeabi_ddiv>
 8022fd0:	e016      	b.n	8023000 <__ieee754_pow+0x108>
 8022fd2:	2100      	movs	r1, #0
 8022fd4:	9100      	str	r1, [sp, #0]
 8022fd6:	2800      	cmp	r0, #0
 8022fd8:	d13b      	bne.n	8023052 <__ieee754_pow+0x15a>
 8022fda:	494f      	ldr	r1, [pc, #316]	; (8023118 <__ieee754_pow+0x220>)
 8022fdc:	428e      	cmp	r6, r1
 8022fde:	d1ee      	bne.n	8022fbe <__ieee754_pow+0xc6>
 8022fe0:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8022fe4:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8022fe8:	ea53 0308 	orrs.w	r3, r3, r8
 8022fec:	f000 8466 	beq.w	80238bc <__ieee754_pow+0x9c4>
 8022ff0:	4b4d      	ldr	r3, [pc, #308]	; (8023128 <__ieee754_pow+0x230>)
 8022ff2:	429c      	cmp	r4, r3
 8022ff4:	dd0d      	ble.n	8023012 <__ieee754_pow+0x11a>
 8022ff6:	2f00      	cmp	r7, #0
 8022ff8:	f280 8464 	bge.w	80238c4 <__ieee754_pow+0x9cc>
 8022ffc:	2000      	movs	r0, #0
 8022ffe:	2100      	movs	r1, #0
 8023000:	ec41 0b10 	vmov	d0, r0, r1
 8023004:	b00d      	add	sp, #52	; 0x34
 8023006:	ecbd 8b06 	vpop	{d8-d10}
 802300a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802300e:	2102      	movs	r1, #2
 8023010:	e7e0      	b.n	8022fd4 <__ieee754_pow+0xdc>
 8023012:	2f00      	cmp	r7, #0
 8023014:	daf2      	bge.n	8022ffc <__ieee754_pow+0x104>
 8023016:	e9dd 0302 	ldrd	r0, r3, [sp, #8]
 802301a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 802301e:	e7ef      	b.n	8023000 <__ieee754_pow+0x108>
 8023020:	f1b7 4f80 	cmp.w	r7, #1073741824	; 0x40000000
 8023024:	d104      	bne.n	8023030 <__ieee754_pow+0x138>
 8023026:	4610      	mov	r0, r2
 8023028:	4619      	mov	r1, r3
 802302a:	f7dd fb05 	bl	8000638 <__aeabi_dmul>
 802302e:	e7e7      	b.n	8023000 <__ieee754_pow+0x108>
 8023030:	493e      	ldr	r1, [pc, #248]	; (802312c <__ieee754_pow+0x234>)
 8023032:	428f      	cmp	r7, r1
 8023034:	d10d      	bne.n	8023052 <__ieee754_pow+0x15a>
 8023036:	f1b9 0f00 	cmp.w	r9, #0
 802303a:	db0a      	blt.n	8023052 <__ieee754_pow+0x15a>
 802303c:	ec43 2b10 	vmov	d0, r2, r3
 8023040:	b00d      	add	sp, #52	; 0x34
 8023042:	ecbd 8b06 	vpop	{d8-d10}
 8023046:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802304a:	f000 bc77 	b.w	802393c <__ieee754_sqrt>
 802304e:	2100      	movs	r1, #0
 8023050:	9100      	str	r1, [sp, #0]
 8023052:	ec43 2b10 	vmov	d0, r2, r3
 8023056:	e9cd 2304 	strd	r2, r3, [sp, #16]
 802305a:	f000 fd23 	bl	8023aa4 <fabs>
 802305e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8023062:	ec51 0b10 	vmov	r0, r1, d0
 8023066:	f1b8 0f00 	cmp.w	r8, #0
 802306a:	d12a      	bne.n	80230c2 <__ieee754_pow+0x1ca>
 802306c:	b12c      	cbz	r4, 802307a <__ieee754_pow+0x182>
 802306e:	f8df c0b4 	ldr.w	ip, [pc, #180]	; 8023124 <__ieee754_pow+0x22c>
 8023072:	f029 4e40 	bic.w	lr, r9, #3221225472	; 0xc0000000
 8023076:	45e6      	cmp	lr, ip
 8023078:	d123      	bne.n	80230c2 <__ieee754_pow+0x1ca>
 802307a:	2f00      	cmp	r7, #0
 802307c:	da05      	bge.n	802308a <__ieee754_pow+0x192>
 802307e:	4602      	mov	r2, r0
 8023080:	460b      	mov	r3, r1
 8023082:	2000      	movs	r0, #0
 8023084:	4927      	ldr	r1, [pc, #156]	; (8023124 <__ieee754_pow+0x22c>)
 8023086:	f7dd fc01 	bl	800088c <__aeabi_ddiv>
 802308a:	f1b9 0f00 	cmp.w	r9, #0
 802308e:	dab7      	bge.n	8023000 <__ieee754_pow+0x108>
 8023090:	9b00      	ldr	r3, [sp, #0]
 8023092:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8023096:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 802309a:	4323      	orrs	r3, r4
 802309c:	d108      	bne.n	80230b0 <__ieee754_pow+0x1b8>
 802309e:	4602      	mov	r2, r0
 80230a0:	460b      	mov	r3, r1
 80230a2:	4610      	mov	r0, r2
 80230a4:	4619      	mov	r1, r3
 80230a6:	f7dd f90f 	bl	80002c8 <__aeabi_dsub>
 80230aa:	4602      	mov	r2, r0
 80230ac:	460b      	mov	r3, r1
 80230ae:	e78d      	b.n	8022fcc <__ieee754_pow+0xd4>
 80230b0:	9b00      	ldr	r3, [sp, #0]
 80230b2:	2b01      	cmp	r3, #1
 80230b4:	d1a4      	bne.n	8023000 <__ieee754_pow+0x108>
 80230b6:	4602      	mov	r2, r0
 80230b8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80230bc:	4610      	mov	r0, r2
 80230be:	4619      	mov	r1, r3
 80230c0:	e79e      	b.n	8023000 <__ieee754_pow+0x108>
 80230c2:	ea4f 7cd9 	mov.w	ip, r9, lsr #31
 80230c6:	f10c 35ff 	add.w	r5, ip, #4294967295
 80230ca:	950a      	str	r5, [sp, #40]	; 0x28
 80230cc:	9d00      	ldr	r5, [sp, #0]
 80230ce:	46ac      	mov	ip, r5
 80230d0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80230d2:	ea5c 0505 	orrs.w	r5, ip, r5
 80230d6:	d0e4      	beq.n	80230a2 <__ieee754_pow+0x1aa>
 80230d8:	4b15      	ldr	r3, [pc, #84]	; (8023130 <__ieee754_pow+0x238>)
 80230da:	429e      	cmp	r6, r3
 80230dc:	f340 80fc 	ble.w	80232d8 <__ieee754_pow+0x3e0>
 80230e0:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 80230e4:	429e      	cmp	r6, r3
 80230e6:	4b10      	ldr	r3, [pc, #64]	; (8023128 <__ieee754_pow+0x230>)
 80230e8:	dd07      	ble.n	80230fa <__ieee754_pow+0x202>
 80230ea:	429c      	cmp	r4, r3
 80230ec:	dc0a      	bgt.n	8023104 <__ieee754_pow+0x20c>
 80230ee:	2f00      	cmp	r7, #0
 80230f0:	da84      	bge.n	8022ffc <__ieee754_pow+0x104>
 80230f2:	a307      	add	r3, pc, #28	; (adr r3, 8023110 <__ieee754_pow+0x218>)
 80230f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80230f8:	e795      	b.n	8023026 <__ieee754_pow+0x12e>
 80230fa:	429c      	cmp	r4, r3
 80230fc:	dbf7      	blt.n	80230ee <__ieee754_pow+0x1f6>
 80230fe:	4b09      	ldr	r3, [pc, #36]	; (8023124 <__ieee754_pow+0x22c>)
 8023100:	429c      	cmp	r4, r3
 8023102:	dd17      	ble.n	8023134 <__ieee754_pow+0x23c>
 8023104:	2f00      	cmp	r7, #0
 8023106:	dcf4      	bgt.n	80230f2 <__ieee754_pow+0x1fa>
 8023108:	e778      	b.n	8022ffc <__ieee754_pow+0x104>
 802310a:	bf00      	nop
 802310c:	f3af 8000 	nop.w
 8023110:	8800759c 	.word	0x8800759c
 8023114:	7e37e43c 	.word	0x7e37e43c
 8023118:	7ff00000 	.word	0x7ff00000
 802311c:	080283da 	.word	0x080283da
 8023120:	433fffff 	.word	0x433fffff
 8023124:	3ff00000 	.word	0x3ff00000
 8023128:	3fefffff 	.word	0x3fefffff
 802312c:	3fe00000 	.word	0x3fe00000
 8023130:	41e00000 	.word	0x41e00000
 8023134:	4b64      	ldr	r3, [pc, #400]	; (80232c8 <__ieee754_pow+0x3d0>)
 8023136:	2200      	movs	r2, #0
 8023138:	f7dd f8c6 	bl	80002c8 <__aeabi_dsub>
 802313c:	a356      	add	r3, pc, #344	; (adr r3, 8023298 <__ieee754_pow+0x3a0>)
 802313e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023142:	4604      	mov	r4, r0
 8023144:	460d      	mov	r5, r1
 8023146:	f7dd fa77 	bl	8000638 <__aeabi_dmul>
 802314a:	a355      	add	r3, pc, #340	; (adr r3, 80232a0 <__ieee754_pow+0x3a8>)
 802314c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023150:	4606      	mov	r6, r0
 8023152:	460f      	mov	r7, r1
 8023154:	4620      	mov	r0, r4
 8023156:	4629      	mov	r1, r5
 8023158:	f7dd fa6e 	bl	8000638 <__aeabi_dmul>
 802315c:	4b5b      	ldr	r3, [pc, #364]	; (80232cc <__ieee754_pow+0x3d4>)
 802315e:	4682      	mov	sl, r0
 8023160:	468b      	mov	fp, r1
 8023162:	2200      	movs	r2, #0
 8023164:	4620      	mov	r0, r4
 8023166:	4629      	mov	r1, r5
 8023168:	f7dd fa66 	bl	8000638 <__aeabi_dmul>
 802316c:	4602      	mov	r2, r0
 802316e:	460b      	mov	r3, r1
 8023170:	a14d      	add	r1, pc, #308	; (adr r1, 80232a8 <__ieee754_pow+0x3b0>)
 8023172:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023176:	f7dd f8a7 	bl	80002c8 <__aeabi_dsub>
 802317a:	4622      	mov	r2, r4
 802317c:	462b      	mov	r3, r5
 802317e:	f7dd fa5b 	bl	8000638 <__aeabi_dmul>
 8023182:	4602      	mov	r2, r0
 8023184:	460b      	mov	r3, r1
 8023186:	2000      	movs	r0, #0
 8023188:	4951      	ldr	r1, [pc, #324]	; (80232d0 <__ieee754_pow+0x3d8>)
 802318a:	f7dd f89d 	bl	80002c8 <__aeabi_dsub>
 802318e:	4622      	mov	r2, r4
 8023190:	4680      	mov	r8, r0
 8023192:	4689      	mov	r9, r1
 8023194:	462b      	mov	r3, r5
 8023196:	4620      	mov	r0, r4
 8023198:	4629      	mov	r1, r5
 802319a:	f7dd fa4d 	bl	8000638 <__aeabi_dmul>
 802319e:	4602      	mov	r2, r0
 80231a0:	460b      	mov	r3, r1
 80231a2:	4640      	mov	r0, r8
 80231a4:	4649      	mov	r1, r9
 80231a6:	f7dd fa47 	bl	8000638 <__aeabi_dmul>
 80231aa:	a341      	add	r3, pc, #260	; (adr r3, 80232b0 <__ieee754_pow+0x3b8>)
 80231ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80231b0:	f7dd fa42 	bl	8000638 <__aeabi_dmul>
 80231b4:	4602      	mov	r2, r0
 80231b6:	460b      	mov	r3, r1
 80231b8:	4650      	mov	r0, sl
 80231ba:	4659      	mov	r1, fp
 80231bc:	f7dd f884 	bl	80002c8 <__aeabi_dsub>
 80231c0:	4602      	mov	r2, r0
 80231c2:	460b      	mov	r3, r1
 80231c4:	4680      	mov	r8, r0
 80231c6:	4689      	mov	r9, r1
 80231c8:	4630      	mov	r0, r6
 80231ca:	4639      	mov	r1, r7
 80231cc:	f7dd f87e 	bl	80002cc <__adddf3>
 80231d0:	2400      	movs	r4, #0
 80231d2:	4632      	mov	r2, r6
 80231d4:	463b      	mov	r3, r7
 80231d6:	4620      	mov	r0, r4
 80231d8:	460d      	mov	r5, r1
 80231da:	f7dd f875 	bl	80002c8 <__aeabi_dsub>
 80231de:	4602      	mov	r2, r0
 80231e0:	460b      	mov	r3, r1
 80231e2:	4640      	mov	r0, r8
 80231e4:	4649      	mov	r1, r9
 80231e6:	f7dd f86f 	bl	80002c8 <__aeabi_dsub>
 80231ea:	9b00      	ldr	r3, [sp, #0]
 80231ec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80231ee:	3b01      	subs	r3, #1
 80231f0:	4313      	orrs	r3, r2
 80231f2:	4682      	mov	sl, r0
 80231f4:	468b      	mov	fp, r1
 80231f6:	f040 81f1 	bne.w	80235dc <__ieee754_pow+0x6e4>
 80231fa:	ed9f 7b2f 	vldr	d7, [pc, #188]	; 80232b8 <__ieee754_pow+0x3c0>
 80231fe:	eeb0 8a47 	vmov.f32	s16, s14
 8023202:	eef0 8a67 	vmov.f32	s17, s15
 8023206:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 802320a:	2600      	movs	r6, #0
 802320c:	4632      	mov	r2, r6
 802320e:	463b      	mov	r3, r7
 8023210:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023214:	f7dd f858 	bl	80002c8 <__aeabi_dsub>
 8023218:	4622      	mov	r2, r4
 802321a:	462b      	mov	r3, r5
 802321c:	f7dd fa0c 	bl	8000638 <__aeabi_dmul>
 8023220:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8023224:	4680      	mov	r8, r0
 8023226:	4689      	mov	r9, r1
 8023228:	4650      	mov	r0, sl
 802322a:	4659      	mov	r1, fp
 802322c:	f7dd fa04 	bl	8000638 <__aeabi_dmul>
 8023230:	4602      	mov	r2, r0
 8023232:	460b      	mov	r3, r1
 8023234:	4640      	mov	r0, r8
 8023236:	4649      	mov	r1, r9
 8023238:	f7dd f848 	bl	80002cc <__adddf3>
 802323c:	4632      	mov	r2, r6
 802323e:	463b      	mov	r3, r7
 8023240:	4680      	mov	r8, r0
 8023242:	4689      	mov	r9, r1
 8023244:	4620      	mov	r0, r4
 8023246:	4629      	mov	r1, r5
 8023248:	f7dd f9f6 	bl	8000638 <__aeabi_dmul>
 802324c:	460b      	mov	r3, r1
 802324e:	4604      	mov	r4, r0
 8023250:	460d      	mov	r5, r1
 8023252:	4602      	mov	r2, r0
 8023254:	4649      	mov	r1, r9
 8023256:	4640      	mov	r0, r8
 8023258:	f7dd f838 	bl	80002cc <__adddf3>
 802325c:	4b1d      	ldr	r3, [pc, #116]	; (80232d4 <__ieee754_pow+0x3dc>)
 802325e:	4299      	cmp	r1, r3
 8023260:	ec45 4b19 	vmov	d9, r4, r5
 8023264:	4606      	mov	r6, r0
 8023266:	460f      	mov	r7, r1
 8023268:	468b      	mov	fp, r1
 802326a:	f340 82fe 	ble.w	802386a <__ieee754_pow+0x972>
 802326e:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 8023272:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 8023276:	4303      	orrs	r3, r0
 8023278:	f000 81f0 	beq.w	802365c <__ieee754_pow+0x764>
 802327c:	a310      	add	r3, pc, #64	; (adr r3, 80232c0 <__ieee754_pow+0x3c8>)
 802327e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023282:	ec51 0b18 	vmov	r0, r1, d8
 8023286:	f7dd f9d7 	bl	8000638 <__aeabi_dmul>
 802328a:	a30d      	add	r3, pc, #52	; (adr r3, 80232c0 <__ieee754_pow+0x3c8>)
 802328c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023290:	e6cb      	b.n	802302a <__ieee754_pow+0x132>
 8023292:	bf00      	nop
 8023294:	f3af 8000 	nop.w
 8023298:	60000000 	.word	0x60000000
 802329c:	3ff71547 	.word	0x3ff71547
 80232a0:	f85ddf44 	.word	0xf85ddf44
 80232a4:	3e54ae0b 	.word	0x3e54ae0b
 80232a8:	55555555 	.word	0x55555555
 80232ac:	3fd55555 	.word	0x3fd55555
 80232b0:	652b82fe 	.word	0x652b82fe
 80232b4:	3ff71547 	.word	0x3ff71547
 80232b8:	00000000 	.word	0x00000000
 80232bc:	bff00000 	.word	0xbff00000
 80232c0:	8800759c 	.word	0x8800759c
 80232c4:	7e37e43c 	.word	0x7e37e43c
 80232c8:	3ff00000 	.word	0x3ff00000
 80232cc:	3fd00000 	.word	0x3fd00000
 80232d0:	3fe00000 	.word	0x3fe00000
 80232d4:	408fffff 	.word	0x408fffff
 80232d8:	4bd7      	ldr	r3, [pc, #860]	; (8023638 <__ieee754_pow+0x740>)
 80232da:	ea03 0309 	and.w	r3, r3, r9
 80232de:	2200      	movs	r2, #0
 80232e0:	b92b      	cbnz	r3, 80232ee <__ieee754_pow+0x3f6>
 80232e2:	4bd6      	ldr	r3, [pc, #856]	; (802363c <__ieee754_pow+0x744>)
 80232e4:	f7dd f9a8 	bl	8000638 <__aeabi_dmul>
 80232e8:	f06f 0234 	mvn.w	r2, #52	; 0x34
 80232ec:	460c      	mov	r4, r1
 80232ee:	1523      	asrs	r3, r4, #20
 80232f0:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 80232f4:	4413      	add	r3, r2
 80232f6:	9309      	str	r3, [sp, #36]	; 0x24
 80232f8:	4bd1      	ldr	r3, [pc, #836]	; (8023640 <__ieee754_pow+0x748>)
 80232fa:	f3c4 0413 	ubfx	r4, r4, #0, #20
 80232fe:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 8023302:	429c      	cmp	r4, r3
 8023304:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8023308:	dd08      	ble.n	802331c <__ieee754_pow+0x424>
 802330a:	4bce      	ldr	r3, [pc, #824]	; (8023644 <__ieee754_pow+0x74c>)
 802330c:	429c      	cmp	r4, r3
 802330e:	f340 8163 	ble.w	80235d8 <__ieee754_pow+0x6e0>
 8023312:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023314:	3301      	adds	r3, #1
 8023316:	9309      	str	r3, [sp, #36]	; 0x24
 8023318:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 802331c:	2400      	movs	r4, #0
 802331e:	00e3      	lsls	r3, r4, #3
 8023320:	930b      	str	r3, [sp, #44]	; 0x2c
 8023322:	4bc9      	ldr	r3, [pc, #804]	; (8023648 <__ieee754_pow+0x750>)
 8023324:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8023328:	ed93 7b00 	vldr	d7, [r3]
 802332c:	4629      	mov	r1, r5
 802332e:	ec53 2b17 	vmov	r2, r3, d7
 8023332:	eeb0 8a47 	vmov.f32	s16, s14
 8023336:	eef0 8a67 	vmov.f32	s17, s15
 802333a:	4682      	mov	sl, r0
 802333c:	f7dc ffc4 	bl	80002c8 <__aeabi_dsub>
 8023340:	4652      	mov	r2, sl
 8023342:	4606      	mov	r6, r0
 8023344:	460f      	mov	r7, r1
 8023346:	462b      	mov	r3, r5
 8023348:	ec51 0b18 	vmov	r0, r1, d8
 802334c:	f7dc ffbe 	bl	80002cc <__adddf3>
 8023350:	4602      	mov	r2, r0
 8023352:	460b      	mov	r3, r1
 8023354:	2000      	movs	r0, #0
 8023356:	49bd      	ldr	r1, [pc, #756]	; (802364c <__ieee754_pow+0x754>)
 8023358:	f7dd fa98 	bl	800088c <__aeabi_ddiv>
 802335c:	ec41 0b19 	vmov	d9, r0, r1
 8023360:	4602      	mov	r2, r0
 8023362:	460b      	mov	r3, r1
 8023364:	4630      	mov	r0, r6
 8023366:	4639      	mov	r1, r7
 8023368:	f7dd f966 	bl	8000638 <__aeabi_dmul>
 802336c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8023370:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8023374:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8023378:	2300      	movs	r3, #0
 802337a:	9304      	str	r3, [sp, #16]
 802337c:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8023380:	46ab      	mov	fp, r5
 8023382:	106d      	asrs	r5, r5, #1
 8023384:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 8023388:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 802338c:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 8023390:	2200      	movs	r2, #0
 8023392:	4640      	mov	r0, r8
 8023394:	4649      	mov	r1, r9
 8023396:	4614      	mov	r4, r2
 8023398:	461d      	mov	r5, r3
 802339a:	f7dd f94d 	bl	8000638 <__aeabi_dmul>
 802339e:	4602      	mov	r2, r0
 80233a0:	460b      	mov	r3, r1
 80233a2:	4630      	mov	r0, r6
 80233a4:	4639      	mov	r1, r7
 80233a6:	f7dc ff8f 	bl	80002c8 <__aeabi_dsub>
 80233aa:	ec53 2b18 	vmov	r2, r3, d8
 80233ae:	4606      	mov	r6, r0
 80233b0:	460f      	mov	r7, r1
 80233b2:	4620      	mov	r0, r4
 80233b4:	4629      	mov	r1, r5
 80233b6:	f7dc ff87 	bl	80002c8 <__aeabi_dsub>
 80233ba:	4602      	mov	r2, r0
 80233bc:	460b      	mov	r3, r1
 80233be:	4650      	mov	r0, sl
 80233c0:	4659      	mov	r1, fp
 80233c2:	f7dc ff81 	bl	80002c8 <__aeabi_dsub>
 80233c6:	4642      	mov	r2, r8
 80233c8:	464b      	mov	r3, r9
 80233ca:	f7dd f935 	bl	8000638 <__aeabi_dmul>
 80233ce:	4602      	mov	r2, r0
 80233d0:	460b      	mov	r3, r1
 80233d2:	4630      	mov	r0, r6
 80233d4:	4639      	mov	r1, r7
 80233d6:	f7dc ff77 	bl	80002c8 <__aeabi_dsub>
 80233da:	ec53 2b19 	vmov	r2, r3, d9
 80233de:	f7dd f92b 	bl	8000638 <__aeabi_dmul>
 80233e2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80233e6:	ec41 0b18 	vmov	d8, r0, r1
 80233ea:	4610      	mov	r0, r2
 80233ec:	4619      	mov	r1, r3
 80233ee:	f7dd f923 	bl	8000638 <__aeabi_dmul>
 80233f2:	a37d      	add	r3, pc, #500	; (adr r3, 80235e8 <__ieee754_pow+0x6f0>)
 80233f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80233f8:	4604      	mov	r4, r0
 80233fa:	460d      	mov	r5, r1
 80233fc:	f7dd f91c 	bl	8000638 <__aeabi_dmul>
 8023400:	a37b      	add	r3, pc, #492	; (adr r3, 80235f0 <__ieee754_pow+0x6f8>)
 8023402:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023406:	f7dc ff61 	bl	80002cc <__adddf3>
 802340a:	4622      	mov	r2, r4
 802340c:	462b      	mov	r3, r5
 802340e:	f7dd f913 	bl	8000638 <__aeabi_dmul>
 8023412:	a379      	add	r3, pc, #484	; (adr r3, 80235f8 <__ieee754_pow+0x700>)
 8023414:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023418:	f7dc ff58 	bl	80002cc <__adddf3>
 802341c:	4622      	mov	r2, r4
 802341e:	462b      	mov	r3, r5
 8023420:	f7dd f90a 	bl	8000638 <__aeabi_dmul>
 8023424:	a376      	add	r3, pc, #472	; (adr r3, 8023600 <__ieee754_pow+0x708>)
 8023426:	e9d3 2300 	ldrd	r2, r3, [r3]
 802342a:	f7dc ff4f 	bl	80002cc <__adddf3>
 802342e:	4622      	mov	r2, r4
 8023430:	462b      	mov	r3, r5
 8023432:	f7dd f901 	bl	8000638 <__aeabi_dmul>
 8023436:	a374      	add	r3, pc, #464	; (adr r3, 8023608 <__ieee754_pow+0x710>)
 8023438:	e9d3 2300 	ldrd	r2, r3, [r3]
 802343c:	f7dc ff46 	bl	80002cc <__adddf3>
 8023440:	4622      	mov	r2, r4
 8023442:	462b      	mov	r3, r5
 8023444:	f7dd f8f8 	bl	8000638 <__aeabi_dmul>
 8023448:	a371      	add	r3, pc, #452	; (adr r3, 8023610 <__ieee754_pow+0x718>)
 802344a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802344e:	f7dc ff3d 	bl	80002cc <__adddf3>
 8023452:	4622      	mov	r2, r4
 8023454:	4606      	mov	r6, r0
 8023456:	460f      	mov	r7, r1
 8023458:	462b      	mov	r3, r5
 802345a:	4620      	mov	r0, r4
 802345c:	4629      	mov	r1, r5
 802345e:	f7dd f8eb 	bl	8000638 <__aeabi_dmul>
 8023462:	4602      	mov	r2, r0
 8023464:	460b      	mov	r3, r1
 8023466:	4630      	mov	r0, r6
 8023468:	4639      	mov	r1, r7
 802346a:	f7dd f8e5 	bl	8000638 <__aeabi_dmul>
 802346e:	4642      	mov	r2, r8
 8023470:	4604      	mov	r4, r0
 8023472:	460d      	mov	r5, r1
 8023474:	464b      	mov	r3, r9
 8023476:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802347a:	f7dc ff27 	bl	80002cc <__adddf3>
 802347e:	ec53 2b18 	vmov	r2, r3, d8
 8023482:	f7dd f8d9 	bl	8000638 <__aeabi_dmul>
 8023486:	4622      	mov	r2, r4
 8023488:	462b      	mov	r3, r5
 802348a:	f7dc ff1f 	bl	80002cc <__adddf3>
 802348e:	4642      	mov	r2, r8
 8023490:	4682      	mov	sl, r0
 8023492:	468b      	mov	fp, r1
 8023494:	464b      	mov	r3, r9
 8023496:	4640      	mov	r0, r8
 8023498:	4649      	mov	r1, r9
 802349a:	f7dd f8cd 	bl	8000638 <__aeabi_dmul>
 802349e:	4b6c      	ldr	r3, [pc, #432]	; (8023650 <__ieee754_pow+0x758>)
 80234a0:	2200      	movs	r2, #0
 80234a2:	4606      	mov	r6, r0
 80234a4:	460f      	mov	r7, r1
 80234a6:	f7dc ff11 	bl	80002cc <__adddf3>
 80234aa:	4652      	mov	r2, sl
 80234ac:	465b      	mov	r3, fp
 80234ae:	f7dc ff0d 	bl	80002cc <__adddf3>
 80234b2:	9c04      	ldr	r4, [sp, #16]
 80234b4:	460d      	mov	r5, r1
 80234b6:	4622      	mov	r2, r4
 80234b8:	460b      	mov	r3, r1
 80234ba:	4640      	mov	r0, r8
 80234bc:	4649      	mov	r1, r9
 80234be:	f7dd f8bb 	bl	8000638 <__aeabi_dmul>
 80234c2:	4b63      	ldr	r3, [pc, #396]	; (8023650 <__ieee754_pow+0x758>)
 80234c4:	4680      	mov	r8, r0
 80234c6:	4689      	mov	r9, r1
 80234c8:	2200      	movs	r2, #0
 80234ca:	4620      	mov	r0, r4
 80234cc:	4629      	mov	r1, r5
 80234ce:	f7dc fefb 	bl	80002c8 <__aeabi_dsub>
 80234d2:	4632      	mov	r2, r6
 80234d4:	463b      	mov	r3, r7
 80234d6:	f7dc fef7 	bl	80002c8 <__aeabi_dsub>
 80234da:	4602      	mov	r2, r0
 80234dc:	460b      	mov	r3, r1
 80234de:	4650      	mov	r0, sl
 80234e0:	4659      	mov	r1, fp
 80234e2:	f7dc fef1 	bl	80002c8 <__aeabi_dsub>
 80234e6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80234ea:	f7dd f8a5 	bl	8000638 <__aeabi_dmul>
 80234ee:	4622      	mov	r2, r4
 80234f0:	4606      	mov	r6, r0
 80234f2:	460f      	mov	r7, r1
 80234f4:	462b      	mov	r3, r5
 80234f6:	ec51 0b18 	vmov	r0, r1, d8
 80234fa:	f7dd f89d 	bl	8000638 <__aeabi_dmul>
 80234fe:	4602      	mov	r2, r0
 8023500:	460b      	mov	r3, r1
 8023502:	4630      	mov	r0, r6
 8023504:	4639      	mov	r1, r7
 8023506:	f7dc fee1 	bl	80002cc <__adddf3>
 802350a:	4606      	mov	r6, r0
 802350c:	460f      	mov	r7, r1
 802350e:	4602      	mov	r2, r0
 8023510:	460b      	mov	r3, r1
 8023512:	4640      	mov	r0, r8
 8023514:	4649      	mov	r1, r9
 8023516:	f7dc fed9 	bl	80002cc <__adddf3>
 802351a:	9c04      	ldr	r4, [sp, #16]
 802351c:	a33e      	add	r3, pc, #248	; (adr r3, 8023618 <__ieee754_pow+0x720>)
 802351e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023522:	4620      	mov	r0, r4
 8023524:	460d      	mov	r5, r1
 8023526:	f7dd f887 	bl	8000638 <__aeabi_dmul>
 802352a:	4642      	mov	r2, r8
 802352c:	ec41 0b18 	vmov	d8, r0, r1
 8023530:	464b      	mov	r3, r9
 8023532:	4620      	mov	r0, r4
 8023534:	4629      	mov	r1, r5
 8023536:	f7dc fec7 	bl	80002c8 <__aeabi_dsub>
 802353a:	4602      	mov	r2, r0
 802353c:	460b      	mov	r3, r1
 802353e:	4630      	mov	r0, r6
 8023540:	4639      	mov	r1, r7
 8023542:	f7dc fec1 	bl	80002c8 <__aeabi_dsub>
 8023546:	a336      	add	r3, pc, #216	; (adr r3, 8023620 <__ieee754_pow+0x728>)
 8023548:	e9d3 2300 	ldrd	r2, r3, [r3]
 802354c:	f7dd f874 	bl	8000638 <__aeabi_dmul>
 8023550:	a335      	add	r3, pc, #212	; (adr r3, 8023628 <__ieee754_pow+0x730>)
 8023552:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023556:	4606      	mov	r6, r0
 8023558:	460f      	mov	r7, r1
 802355a:	4620      	mov	r0, r4
 802355c:	4629      	mov	r1, r5
 802355e:	f7dd f86b 	bl	8000638 <__aeabi_dmul>
 8023562:	4602      	mov	r2, r0
 8023564:	460b      	mov	r3, r1
 8023566:	4630      	mov	r0, r6
 8023568:	4639      	mov	r1, r7
 802356a:	f7dc feaf 	bl	80002cc <__adddf3>
 802356e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023570:	4b38      	ldr	r3, [pc, #224]	; (8023654 <__ieee754_pow+0x75c>)
 8023572:	4413      	add	r3, r2
 8023574:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023578:	f7dc fea8 	bl	80002cc <__adddf3>
 802357c:	4682      	mov	sl, r0
 802357e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023580:	468b      	mov	fp, r1
 8023582:	f7dc ffef 	bl	8000564 <__aeabi_i2d>
 8023586:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023588:	4b33      	ldr	r3, [pc, #204]	; (8023658 <__ieee754_pow+0x760>)
 802358a:	4413      	add	r3, r2
 802358c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8023590:	4606      	mov	r6, r0
 8023592:	460f      	mov	r7, r1
 8023594:	4652      	mov	r2, sl
 8023596:	465b      	mov	r3, fp
 8023598:	ec51 0b18 	vmov	r0, r1, d8
 802359c:	f7dc fe96 	bl	80002cc <__adddf3>
 80235a0:	4642      	mov	r2, r8
 80235a2:	464b      	mov	r3, r9
 80235a4:	f7dc fe92 	bl	80002cc <__adddf3>
 80235a8:	4632      	mov	r2, r6
 80235aa:	463b      	mov	r3, r7
 80235ac:	f7dc fe8e 	bl	80002cc <__adddf3>
 80235b0:	9c04      	ldr	r4, [sp, #16]
 80235b2:	4632      	mov	r2, r6
 80235b4:	463b      	mov	r3, r7
 80235b6:	4620      	mov	r0, r4
 80235b8:	460d      	mov	r5, r1
 80235ba:	f7dc fe85 	bl	80002c8 <__aeabi_dsub>
 80235be:	4642      	mov	r2, r8
 80235c0:	464b      	mov	r3, r9
 80235c2:	f7dc fe81 	bl	80002c8 <__aeabi_dsub>
 80235c6:	ec53 2b18 	vmov	r2, r3, d8
 80235ca:	f7dc fe7d 	bl	80002c8 <__aeabi_dsub>
 80235ce:	4602      	mov	r2, r0
 80235d0:	460b      	mov	r3, r1
 80235d2:	4650      	mov	r0, sl
 80235d4:	4659      	mov	r1, fp
 80235d6:	e606      	b.n	80231e6 <__ieee754_pow+0x2ee>
 80235d8:	2401      	movs	r4, #1
 80235da:	e6a0      	b.n	802331e <__ieee754_pow+0x426>
 80235dc:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8023630 <__ieee754_pow+0x738>
 80235e0:	e60d      	b.n	80231fe <__ieee754_pow+0x306>
 80235e2:	bf00      	nop
 80235e4:	f3af 8000 	nop.w
 80235e8:	4a454eef 	.word	0x4a454eef
 80235ec:	3fca7e28 	.word	0x3fca7e28
 80235f0:	93c9db65 	.word	0x93c9db65
 80235f4:	3fcd864a 	.word	0x3fcd864a
 80235f8:	a91d4101 	.word	0xa91d4101
 80235fc:	3fd17460 	.word	0x3fd17460
 8023600:	518f264d 	.word	0x518f264d
 8023604:	3fd55555 	.word	0x3fd55555
 8023608:	db6fabff 	.word	0xdb6fabff
 802360c:	3fdb6db6 	.word	0x3fdb6db6
 8023610:	33333303 	.word	0x33333303
 8023614:	3fe33333 	.word	0x3fe33333
 8023618:	e0000000 	.word	0xe0000000
 802361c:	3feec709 	.word	0x3feec709
 8023620:	dc3a03fd 	.word	0xdc3a03fd
 8023624:	3feec709 	.word	0x3feec709
 8023628:	145b01f5 	.word	0x145b01f5
 802362c:	be3e2fe0 	.word	0xbe3e2fe0
 8023630:	00000000 	.word	0x00000000
 8023634:	3ff00000 	.word	0x3ff00000
 8023638:	7ff00000 	.word	0x7ff00000
 802363c:	43400000 	.word	0x43400000
 8023640:	0003988e 	.word	0x0003988e
 8023644:	000bb679 	.word	0x000bb679
 8023648:	08027fa0 	.word	0x08027fa0
 802364c:	3ff00000 	.word	0x3ff00000
 8023650:	40080000 	.word	0x40080000
 8023654:	08027fc0 	.word	0x08027fc0
 8023658:	08027fb0 	.word	0x08027fb0
 802365c:	a3b5      	add	r3, pc, #724	; (adr r3, 8023934 <__ieee754_pow+0xa3c>)
 802365e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023662:	4640      	mov	r0, r8
 8023664:	4649      	mov	r1, r9
 8023666:	f7dc fe31 	bl	80002cc <__adddf3>
 802366a:	4622      	mov	r2, r4
 802366c:	ec41 0b1a 	vmov	d10, r0, r1
 8023670:	462b      	mov	r3, r5
 8023672:	4630      	mov	r0, r6
 8023674:	4639      	mov	r1, r7
 8023676:	f7dc fe27 	bl	80002c8 <__aeabi_dsub>
 802367a:	4602      	mov	r2, r0
 802367c:	460b      	mov	r3, r1
 802367e:	ec51 0b1a 	vmov	r0, r1, d10
 8023682:	f7dd fa69 	bl	8000b58 <__aeabi_dcmpgt>
 8023686:	2800      	cmp	r0, #0
 8023688:	f47f adf8 	bne.w	802327c <__ieee754_pow+0x384>
 802368c:	4aa4      	ldr	r2, [pc, #656]	; (8023920 <__ieee754_pow+0xa28>)
 802368e:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8023692:	4293      	cmp	r3, r2
 8023694:	f340 810b 	ble.w	80238ae <__ieee754_pow+0x9b6>
 8023698:	151b      	asrs	r3, r3, #20
 802369a:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 802369e:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 80236a2:	fa4a f303 	asr.w	r3, sl, r3
 80236a6:	445b      	add	r3, fp
 80236a8:	f3c3 520a 	ubfx	r2, r3, #20, #11
 80236ac:	4e9d      	ldr	r6, [pc, #628]	; (8023924 <__ieee754_pow+0xa2c>)
 80236ae:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 80236b2:	4116      	asrs	r6, r2
 80236b4:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 80236b8:	2000      	movs	r0, #0
 80236ba:	ea23 0106 	bic.w	r1, r3, r6
 80236be:	f1c2 0214 	rsb	r2, r2, #20
 80236c2:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 80236c6:	fa4a fa02 	asr.w	sl, sl, r2
 80236ca:	f1bb 0f00 	cmp.w	fp, #0
 80236ce:	4602      	mov	r2, r0
 80236d0:	460b      	mov	r3, r1
 80236d2:	4620      	mov	r0, r4
 80236d4:	4629      	mov	r1, r5
 80236d6:	bfb8      	it	lt
 80236d8:	f1ca 0a00 	rsblt	sl, sl, #0
 80236dc:	f7dc fdf4 	bl	80002c8 <__aeabi_dsub>
 80236e0:	ec41 0b19 	vmov	d9, r0, r1
 80236e4:	4642      	mov	r2, r8
 80236e6:	464b      	mov	r3, r9
 80236e8:	ec51 0b19 	vmov	r0, r1, d9
 80236ec:	f7dc fdee 	bl	80002cc <__adddf3>
 80236f0:	2400      	movs	r4, #0
 80236f2:	a379      	add	r3, pc, #484	; (adr r3, 80238d8 <__ieee754_pow+0x9e0>)
 80236f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80236f8:	4620      	mov	r0, r4
 80236fa:	460d      	mov	r5, r1
 80236fc:	f7dc ff9c 	bl	8000638 <__aeabi_dmul>
 8023700:	ec53 2b19 	vmov	r2, r3, d9
 8023704:	4606      	mov	r6, r0
 8023706:	460f      	mov	r7, r1
 8023708:	4620      	mov	r0, r4
 802370a:	4629      	mov	r1, r5
 802370c:	f7dc fddc 	bl	80002c8 <__aeabi_dsub>
 8023710:	4602      	mov	r2, r0
 8023712:	460b      	mov	r3, r1
 8023714:	4640      	mov	r0, r8
 8023716:	4649      	mov	r1, r9
 8023718:	f7dc fdd6 	bl	80002c8 <__aeabi_dsub>
 802371c:	a370      	add	r3, pc, #448	; (adr r3, 80238e0 <__ieee754_pow+0x9e8>)
 802371e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023722:	f7dc ff89 	bl	8000638 <__aeabi_dmul>
 8023726:	a370      	add	r3, pc, #448	; (adr r3, 80238e8 <__ieee754_pow+0x9f0>)
 8023728:	e9d3 2300 	ldrd	r2, r3, [r3]
 802372c:	4680      	mov	r8, r0
 802372e:	4689      	mov	r9, r1
 8023730:	4620      	mov	r0, r4
 8023732:	4629      	mov	r1, r5
 8023734:	f7dc ff80 	bl	8000638 <__aeabi_dmul>
 8023738:	4602      	mov	r2, r0
 802373a:	460b      	mov	r3, r1
 802373c:	4640      	mov	r0, r8
 802373e:	4649      	mov	r1, r9
 8023740:	f7dc fdc4 	bl	80002cc <__adddf3>
 8023744:	4604      	mov	r4, r0
 8023746:	460d      	mov	r5, r1
 8023748:	4602      	mov	r2, r0
 802374a:	460b      	mov	r3, r1
 802374c:	4630      	mov	r0, r6
 802374e:	4639      	mov	r1, r7
 8023750:	f7dc fdbc 	bl	80002cc <__adddf3>
 8023754:	4632      	mov	r2, r6
 8023756:	463b      	mov	r3, r7
 8023758:	4680      	mov	r8, r0
 802375a:	4689      	mov	r9, r1
 802375c:	f7dc fdb4 	bl	80002c8 <__aeabi_dsub>
 8023760:	4602      	mov	r2, r0
 8023762:	460b      	mov	r3, r1
 8023764:	4620      	mov	r0, r4
 8023766:	4629      	mov	r1, r5
 8023768:	f7dc fdae 	bl	80002c8 <__aeabi_dsub>
 802376c:	4642      	mov	r2, r8
 802376e:	4606      	mov	r6, r0
 8023770:	460f      	mov	r7, r1
 8023772:	464b      	mov	r3, r9
 8023774:	4640      	mov	r0, r8
 8023776:	4649      	mov	r1, r9
 8023778:	f7dc ff5e 	bl	8000638 <__aeabi_dmul>
 802377c:	a35c      	add	r3, pc, #368	; (adr r3, 80238f0 <__ieee754_pow+0x9f8>)
 802377e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023782:	4604      	mov	r4, r0
 8023784:	460d      	mov	r5, r1
 8023786:	f7dc ff57 	bl	8000638 <__aeabi_dmul>
 802378a:	a35b      	add	r3, pc, #364	; (adr r3, 80238f8 <__ieee754_pow+0xa00>)
 802378c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023790:	f7dc fd9a 	bl	80002c8 <__aeabi_dsub>
 8023794:	4622      	mov	r2, r4
 8023796:	462b      	mov	r3, r5
 8023798:	f7dc ff4e 	bl	8000638 <__aeabi_dmul>
 802379c:	a358      	add	r3, pc, #352	; (adr r3, 8023900 <__ieee754_pow+0xa08>)
 802379e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80237a2:	f7dc fd93 	bl	80002cc <__adddf3>
 80237a6:	4622      	mov	r2, r4
 80237a8:	462b      	mov	r3, r5
 80237aa:	f7dc ff45 	bl	8000638 <__aeabi_dmul>
 80237ae:	a356      	add	r3, pc, #344	; (adr r3, 8023908 <__ieee754_pow+0xa10>)
 80237b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80237b4:	f7dc fd88 	bl	80002c8 <__aeabi_dsub>
 80237b8:	4622      	mov	r2, r4
 80237ba:	462b      	mov	r3, r5
 80237bc:	f7dc ff3c 	bl	8000638 <__aeabi_dmul>
 80237c0:	a353      	add	r3, pc, #332	; (adr r3, 8023910 <__ieee754_pow+0xa18>)
 80237c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80237c6:	f7dc fd81 	bl	80002cc <__adddf3>
 80237ca:	4622      	mov	r2, r4
 80237cc:	462b      	mov	r3, r5
 80237ce:	f7dc ff33 	bl	8000638 <__aeabi_dmul>
 80237d2:	4602      	mov	r2, r0
 80237d4:	460b      	mov	r3, r1
 80237d6:	4640      	mov	r0, r8
 80237d8:	4649      	mov	r1, r9
 80237da:	f7dc fd75 	bl	80002c8 <__aeabi_dsub>
 80237de:	4604      	mov	r4, r0
 80237e0:	460d      	mov	r5, r1
 80237e2:	4602      	mov	r2, r0
 80237e4:	460b      	mov	r3, r1
 80237e6:	4640      	mov	r0, r8
 80237e8:	4649      	mov	r1, r9
 80237ea:	f7dc ff25 	bl	8000638 <__aeabi_dmul>
 80237ee:	2200      	movs	r2, #0
 80237f0:	ec41 0b19 	vmov	d9, r0, r1
 80237f4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80237f8:	4620      	mov	r0, r4
 80237fa:	4629      	mov	r1, r5
 80237fc:	f7dc fd64 	bl	80002c8 <__aeabi_dsub>
 8023800:	4602      	mov	r2, r0
 8023802:	460b      	mov	r3, r1
 8023804:	ec51 0b19 	vmov	r0, r1, d9
 8023808:	f7dd f840 	bl	800088c <__aeabi_ddiv>
 802380c:	4632      	mov	r2, r6
 802380e:	4604      	mov	r4, r0
 8023810:	460d      	mov	r5, r1
 8023812:	463b      	mov	r3, r7
 8023814:	4640      	mov	r0, r8
 8023816:	4649      	mov	r1, r9
 8023818:	f7dc ff0e 	bl	8000638 <__aeabi_dmul>
 802381c:	4632      	mov	r2, r6
 802381e:	463b      	mov	r3, r7
 8023820:	f7dc fd54 	bl	80002cc <__adddf3>
 8023824:	4602      	mov	r2, r0
 8023826:	460b      	mov	r3, r1
 8023828:	4620      	mov	r0, r4
 802382a:	4629      	mov	r1, r5
 802382c:	f7dc fd4c 	bl	80002c8 <__aeabi_dsub>
 8023830:	4642      	mov	r2, r8
 8023832:	464b      	mov	r3, r9
 8023834:	f7dc fd48 	bl	80002c8 <__aeabi_dsub>
 8023838:	460b      	mov	r3, r1
 802383a:	4602      	mov	r2, r0
 802383c:	493a      	ldr	r1, [pc, #232]	; (8023928 <__ieee754_pow+0xa30>)
 802383e:	2000      	movs	r0, #0
 8023840:	f7dc fd42 	bl	80002c8 <__aeabi_dsub>
 8023844:	e9cd 0100 	strd	r0, r1, [sp]
 8023848:	9b01      	ldr	r3, [sp, #4]
 802384a:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 802384e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8023852:	da2f      	bge.n	80238b4 <__ieee754_pow+0x9bc>
 8023854:	4650      	mov	r0, sl
 8023856:	ed9d 0b00 	vldr	d0, [sp]
 802385a:	f000 f9cd 	bl	8023bf8 <scalbn>
 802385e:	ec51 0b10 	vmov	r0, r1, d0
 8023862:	ec53 2b18 	vmov	r2, r3, d8
 8023866:	f7ff bbe0 	b.w	802302a <__ieee754_pow+0x132>
 802386a:	4b30      	ldr	r3, [pc, #192]	; (802392c <__ieee754_pow+0xa34>)
 802386c:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8023870:	429e      	cmp	r6, r3
 8023872:	f77f af0b 	ble.w	802368c <__ieee754_pow+0x794>
 8023876:	4b2e      	ldr	r3, [pc, #184]	; (8023930 <__ieee754_pow+0xa38>)
 8023878:	440b      	add	r3, r1
 802387a:	4303      	orrs	r3, r0
 802387c:	d00b      	beq.n	8023896 <__ieee754_pow+0x99e>
 802387e:	a326      	add	r3, pc, #152	; (adr r3, 8023918 <__ieee754_pow+0xa20>)
 8023880:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023884:	ec51 0b18 	vmov	r0, r1, d8
 8023888:	f7dc fed6 	bl	8000638 <__aeabi_dmul>
 802388c:	a322      	add	r3, pc, #136	; (adr r3, 8023918 <__ieee754_pow+0xa20>)
 802388e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023892:	f7ff bbca 	b.w	802302a <__ieee754_pow+0x132>
 8023896:	4622      	mov	r2, r4
 8023898:	462b      	mov	r3, r5
 802389a:	f7dc fd15 	bl	80002c8 <__aeabi_dsub>
 802389e:	4642      	mov	r2, r8
 80238a0:	464b      	mov	r3, r9
 80238a2:	f7dd f94f 	bl	8000b44 <__aeabi_dcmpge>
 80238a6:	2800      	cmp	r0, #0
 80238a8:	f43f aef0 	beq.w	802368c <__ieee754_pow+0x794>
 80238ac:	e7e7      	b.n	802387e <__ieee754_pow+0x986>
 80238ae:	f04f 0a00 	mov.w	sl, #0
 80238b2:	e717      	b.n	80236e4 <__ieee754_pow+0x7ec>
 80238b4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80238b8:	4619      	mov	r1, r3
 80238ba:	e7d2      	b.n	8023862 <__ieee754_pow+0x96a>
 80238bc:	491a      	ldr	r1, [pc, #104]	; (8023928 <__ieee754_pow+0xa30>)
 80238be:	2000      	movs	r0, #0
 80238c0:	f7ff bb9e 	b.w	8023000 <__ieee754_pow+0x108>
 80238c4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80238c8:	f7ff bb9a 	b.w	8023000 <__ieee754_pow+0x108>
 80238cc:	9000      	str	r0, [sp, #0]
 80238ce:	f7ff bb76 	b.w	8022fbe <__ieee754_pow+0xc6>
 80238d2:	2100      	movs	r1, #0
 80238d4:	f7ff bb60 	b.w	8022f98 <__ieee754_pow+0xa0>
 80238d8:	00000000 	.word	0x00000000
 80238dc:	3fe62e43 	.word	0x3fe62e43
 80238e0:	fefa39ef 	.word	0xfefa39ef
 80238e4:	3fe62e42 	.word	0x3fe62e42
 80238e8:	0ca86c39 	.word	0x0ca86c39
 80238ec:	be205c61 	.word	0xbe205c61
 80238f0:	72bea4d0 	.word	0x72bea4d0
 80238f4:	3e663769 	.word	0x3e663769
 80238f8:	c5d26bf1 	.word	0xc5d26bf1
 80238fc:	3ebbbd41 	.word	0x3ebbbd41
 8023900:	af25de2c 	.word	0xaf25de2c
 8023904:	3f11566a 	.word	0x3f11566a
 8023908:	16bebd93 	.word	0x16bebd93
 802390c:	3f66c16c 	.word	0x3f66c16c
 8023910:	5555553e 	.word	0x5555553e
 8023914:	3fc55555 	.word	0x3fc55555
 8023918:	c2f8f359 	.word	0xc2f8f359
 802391c:	01a56e1f 	.word	0x01a56e1f
 8023920:	3fe00000 	.word	0x3fe00000
 8023924:	000fffff 	.word	0x000fffff
 8023928:	3ff00000 	.word	0x3ff00000
 802392c:	4090cbff 	.word	0x4090cbff
 8023930:	3f6f3400 	.word	0x3f6f3400
 8023934:	652b82fe 	.word	0x652b82fe
 8023938:	3c971547 	.word	0x3c971547

0802393c <__ieee754_sqrt>:
 802393c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023940:	ec55 4b10 	vmov	r4, r5, d0
 8023944:	4e56      	ldr	r6, [pc, #344]	; (8023aa0 <__ieee754_sqrt+0x164>)
 8023946:	43ae      	bics	r6, r5
 8023948:	ee10 0a10 	vmov	r0, s0
 802394c:	ee10 3a10 	vmov	r3, s0
 8023950:	4629      	mov	r1, r5
 8023952:	462a      	mov	r2, r5
 8023954:	d110      	bne.n	8023978 <__ieee754_sqrt+0x3c>
 8023956:	ee10 2a10 	vmov	r2, s0
 802395a:	462b      	mov	r3, r5
 802395c:	f7dc fe6c 	bl	8000638 <__aeabi_dmul>
 8023960:	4602      	mov	r2, r0
 8023962:	460b      	mov	r3, r1
 8023964:	4620      	mov	r0, r4
 8023966:	4629      	mov	r1, r5
 8023968:	f7dc fcb0 	bl	80002cc <__adddf3>
 802396c:	4604      	mov	r4, r0
 802396e:	460d      	mov	r5, r1
 8023970:	ec45 4b10 	vmov	d0, r4, r5
 8023974:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023978:	2d00      	cmp	r5, #0
 802397a:	dc10      	bgt.n	802399e <__ieee754_sqrt+0x62>
 802397c:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8023980:	4330      	orrs	r0, r6
 8023982:	d0f5      	beq.n	8023970 <__ieee754_sqrt+0x34>
 8023984:	b15d      	cbz	r5, 802399e <__ieee754_sqrt+0x62>
 8023986:	ee10 2a10 	vmov	r2, s0
 802398a:	462b      	mov	r3, r5
 802398c:	ee10 0a10 	vmov	r0, s0
 8023990:	f7dc fc9a 	bl	80002c8 <__aeabi_dsub>
 8023994:	4602      	mov	r2, r0
 8023996:	460b      	mov	r3, r1
 8023998:	f7dc ff78 	bl	800088c <__aeabi_ddiv>
 802399c:	e7e6      	b.n	802396c <__ieee754_sqrt+0x30>
 802399e:	1509      	asrs	r1, r1, #20
 80239a0:	d076      	beq.n	8023a90 <__ieee754_sqrt+0x154>
 80239a2:	f3c2 0213 	ubfx	r2, r2, #0, #20
 80239a6:	07ce      	lsls	r6, r1, #31
 80239a8:	f442 1080 	orr.w	r0, r2, #1048576	; 0x100000
 80239ac:	bf5e      	ittt	pl
 80239ae:	0fda      	lsrpl	r2, r3, #31
 80239b0:	005b      	lslpl	r3, r3, #1
 80239b2:	eb02 0040 	addpl.w	r0, r2, r0, lsl #1
 80239b6:	0fda      	lsrs	r2, r3, #31
 80239b8:	f2a1 35ff 	subw	r5, r1, #1023	; 0x3ff
 80239bc:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80239c0:	2000      	movs	r0, #0
 80239c2:	106d      	asrs	r5, r5, #1
 80239c4:	005b      	lsls	r3, r3, #1
 80239c6:	f04f 0e16 	mov.w	lr, #22
 80239ca:	4684      	mov	ip, r0
 80239cc:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80239d0:	eb0c 0401 	add.w	r4, ip, r1
 80239d4:	4294      	cmp	r4, r2
 80239d6:	bfde      	ittt	le
 80239d8:	1b12      	suble	r2, r2, r4
 80239da:	eb04 0c01 	addle.w	ip, r4, r1
 80239de:	1840      	addle	r0, r0, r1
 80239e0:	0052      	lsls	r2, r2, #1
 80239e2:	f1be 0e01 	subs.w	lr, lr, #1
 80239e6:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 80239ea:	ea4f 0151 	mov.w	r1, r1, lsr #1
 80239ee:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80239f2:	d1ed      	bne.n	80239d0 <__ieee754_sqrt+0x94>
 80239f4:	4671      	mov	r1, lr
 80239f6:	2720      	movs	r7, #32
 80239f8:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 80239fc:	4562      	cmp	r2, ip
 80239fe:	eb04 060e 	add.w	r6, r4, lr
 8023a02:	dc02      	bgt.n	8023a0a <__ieee754_sqrt+0xce>
 8023a04:	d113      	bne.n	8023a2e <__ieee754_sqrt+0xf2>
 8023a06:	429e      	cmp	r6, r3
 8023a08:	d811      	bhi.n	8023a2e <__ieee754_sqrt+0xf2>
 8023a0a:	2e00      	cmp	r6, #0
 8023a0c:	eb06 0e04 	add.w	lr, r6, r4
 8023a10:	da43      	bge.n	8023a9a <__ieee754_sqrt+0x15e>
 8023a12:	f1be 0f00 	cmp.w	lr, #0
 8023a16:	db40      	blt.n	8023a9a <__ieee754_sqrt+0x15e>
 8023a18:	f10c 0801 	add.w	r8, ip, #1
 8023a1c:	eba2 020c 	sub.w	r2, r2, ip
 8023a20:	429e      	cmp	r6, r3
 8023a22:	bf88      	it	hi
 8023a24:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8023a28:	1b9b      	subs	r3, r3, r6
 8023a2a:	4421      	add	r1, r4
 8023a2c:	46c4      	mov	ip, r8
 8023a2e:	0052      	lsls	r2, r2, #1
 8023a30:	3f01      	subs	r7, #1
 8023a32:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 8023a36:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8023a3a:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8023a3e:	d1dd      	bne.n	80239fc <__ieee754_sqrt+0xc0>
 8023a40:	4313      	orrs	r3, r2
 8023a42:	d006      	beq.n	8023a52 <__ieee754_sqrt+0x116>
 8023a44:	1c4c      	adds	r4, r1, #1
 8023a46:	bf13      	iteet	ne
 8023a48:	3101      	addne	r1, #1
 8023a4a:	3001      	addeq	r0, #1
 8023a4c:	4639      	moveq	r1, r7
 8023a4e:	f021 0101 	bicne.w	r1, r1, #1
 8023a52:	1043      	asrs	r3, r0, #1
 8023a54:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8023a58:	0849      	lsrs	r1, r1, #1
 8023a5a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8023a5e:	07c2      	lsls	r2, r0, #31
 8023a60:	bf48      	it	mi
 8023a62:	f041 4100 	orrmi.w	r1, r1, #2147483648	; 0x80000000
 8023a66:	eb03 5705 	add.w	r7, r3, r5, lsl #20
 8023a6a:	460c      	mov	r4, r1
 8023a6c:	463d      	mov	r5, r7
 8023a6e:	e77f      	b.n	8023970 <__ieee754_sqrt+0x34>
 8023a70:	0ada      	lsrs	r2, r3, #11
 8023a72:	3815      	subs	r0, #21
 8023a74:	055b      	lsls	r3, r3, #21
 8023a76:	2a00      	cmp	r2, #0
 8023a78:	d0fa      	beq.n	8023a70 <__ieee754_sqrt+0x134>
 8023a7a:	02d7      	lsls	r7, r2, #11
 8023a7c:	d50a      	bpl.n	8023a94 <__ieee754_sqrt+0x158>
 8023a7e:	f1c1 0420 	rsb	r4, r1, #32
 8023a82:	fa23 f404 	lsr.w	r4, r3, r4
 8023a86:	1e4d      	subs	r5, r1, #1
 8023a88:	408b      	lsls	r3, r1
 8023a8a:	4322      	orrs	r2, r4
 8023a8c:	1b41      	subs	r1, r0, r5
 8023a8e:	e788      	b.n	80239a2 <__ieee754_sqrt+0x66>
 8023a90:	4608      	mov	r0, r1
 8023a92:	e7f0      	b.n	8023a76 <__ieee754_sqrt+0x13a>
 8023a94:	0052      	lsls	r2, r2, #1
 8023a96:	3101      	adds	r1, #1
 8023a98:	e7ef      	b.n	8023a7a <__ieee754_sqrt+0x13e>
 8023a9a:	46e0      	mov	r8, ip
 8023a9c:	e7be      	b.n	8023a1c <__ieee754_sqrt+0xe0>
 8023a9e:	bf00      	nop
 8023aa0:	7ff00000 	.word	0x7ff00000

08023aa4 <fabs>:
 8023aa4:	ec51 0b10 	vmov	r0, r1, d0
 8023aa8:	ee10 2a10 	vmov	r2, s0
 8023aac:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8023ab0:	ec43 2b10 	vmov	d0, r2, r3
 8023ab4:	4770      	bx	lr

08023ab6 <finite>:
 8023ab6:	b082      	sub	sp, #8
 8023ab8:	ed8d 0b00 	vstr	d0, [sp]
 8023abc:	9801      	ldr	r0, [sp, #4]
 8023abe:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 8023ac2:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8023ac6:	0fc0      	lsrs	r0, r0, #31
 8023ac8:	b002      	add	sp, #8
 8023aca:	4770      	bx	lr
 8023acc:	0000      	movs	r0, r0
	...

08023ad0 <nan>:
 8023ad0:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8023ad8 <nan+0x8>
 8023ad4:	4770      	bx	lr
 8023ad6:	bf00      	nop
 8023ad8:	00000000 	.word	0x00000000
 8023adc:	7ff80000 	.word	0x7ff80000

08023ae0 <rint>:
 8023ae0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8023ae2:	ec51 0b10 	vmov	r0, r1, d0
 8023ae6:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8023aea:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8023aee:	2e13      	cmp	r6, #19
 8023af0:	ee10 4a10 	vmov	r4, s0
 8023af4:	460b      	mov	r3, r1
 8023af6:	ea4f 75d1 	mov.w	r5, r1, lsr #31
 8023afa:	dc58      	bgt.n	8023bae <rint+0xce>
 8023afc:	2e00      	cmp	r6, #0
 8023afe:	da2b      	bge.n	8023b58 <rint+0x78>
 8023b00:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 8023b04:	4302      	orrs	r2, r0
 8023b06:	d023      	beq.n	8023b50 <rint+0x70>
 8023b08:	f3c1 0213 	ubfx	r2, r1, #0, #20
 8023b0c:	4302      	orrs	r2, r0
 8023b0e:	4254      	negs	r4, r2
 8023b10:	4314      	orrs	r4, r2
 8023b12:	0c4b      	lsrs	r3, r1, #17
 8023b14:	0b24      	lsrs	r4, r4, #12
 8023b16:	045b      	lsls	r3, r3, #17
 8023b18:	f404 2400 	and.w	r4, r4, #524288	; 0x80000
 8023b1c:	ea44 0103 	orr.w	r1, r4, r3
 8023b20:	4b32      	ldr	r3, [pc, #200]	; (8023bec <rint+0x10c>)
 8023b22:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8023b26:	e9d3 6700 	ldrd	r6, r7, [r3]
 8023b2a:	4602      	mov	r2, r0
 8023b2c:	460b      	mov	r3, r1
 8023b2e:	4630      	mov	r0, r6
 8023b30:	4639      	mov	r1, r7
 8023b32:	f7dc fbcb 	bl	80002cc <__adddf3>
 8023b36:	e9cd 0100 	strd	r0, r1, [sp]
 8023b3a:	463b      	mov	r3, r7
 8023b3c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8023b40:	4632      	mov	r2, r6
 8023b42:	f7dc fbc1 	bl	80002c8 <__aeabi_dsub>
 8023b46:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8023b4a:	ea43 77c5 	orr.w	r7, r3, r5, lsl #31
 8023b4e:	4639      	mov	r1, r7
 8023b50:	ec41 0b10 	vmov	d0, r0, r1
 8023b54:	b003      	add	sp, #12
 8023b56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023b58:	4a25      	ldr	r2, [pc, #148]	; (8023bf0 <rint+0x110>)
 8023b5a:	4132      	asrs	r2, r6
 8023b5c:	ea01 0702 	and.w	r7, r1, r2
 8023b60:	4307      	orrs	r7, r0
 8023b62:	d0f5      	beq.n	8023b50 <rint+0x70>
 8023b64:	0851      	lsrs	r1, r2, #1
 8023b66:	ea03 0252 	and.w	r2, r3, r2, lsr #1
 8023b6a:	4314      	orrs	r4, r2
 8023b6c:	d00c      	beq.n	8023b88 <rint+0xa8>
 8023b6e:	ea23 0201 	bic.w	r2, r3, r1
 8023b72:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8023b76:	2e13      	cmp	r6, #19
 8023b78:	fa43 f606 	asr.w	r6, r3, r6
 8023b7c:	bf0c      	ite	eq
 8023b7e:	f04f 4400 	moveq.w	r4, #2147483648	; 0x80000000
 8023b82:	2400      	movne	r4, #0
 8023b84:	ea42 0306 	orr.w	r3, r2, r6
 8023b88:	4918      	ldr	r1, [pc, #96]	; (8023bec <rint+0x10c>)
 8023b8a:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 8023b8e:	4622      	mov	r2, r4
 8023b90:	e9d5 4500 	ldrd	r4, r5, [r5]
 8023b94:	4620      	mov	r0, r4
 8023b96:	4629      	mov	r1, r5
 8023b98:	f7dc fb98 	bl	80002cc <__adddf3>
 8023b9c:	e9cd 0100 	strd	r0, r1, [sp]
 8023ba0:	e9dd 0100 	ldrd	r0, r1, [sp]
 8023ba4:	4622      	mov	r2, r4
 8023ba6:	462b      	mov	r3, r5
 8023ba8:	f7dc fb8e 	bl	80002c8 <__aeabi_dsub>
 8023bac:	e7d0      	b.n	8023b50 <rint+0x70>
 8023bae:	2e33      	cmp	r6, #51	; 0x33
 8023bb0:	dd07      	ble.n	8023bc2 <rint+0xe2>
 8023bb2:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8023bb6:	d1cb      	bne.n	8023b50 <rint+0x70>
 8023bb8:	ee10 2a10 	vmov	r2, s0
 8023bbc:	f7dc fb86 	bl	80002cc <__adddf3>
 8023bc0:	e7c6      	b.n	8023b50 <rint+0x70>
 8023bc2:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
 8023bc6:	f04f 36ff 	mov.w	r6, #4294967295
 8023bca:	40d6      	lsrs	r6, r2
 8023bcc:	4230      	tst	r0, r6
 8023bce:	d0bf      	beq.n	8023b50 <rint+0x70>
 8023bd0:	ea14 0056 	ands.w	r0, r4, r6, lsr #1
 8023bd4:	ea4f 0156 	mov.w	r1, r6, lsr #1
 8023bd8:	bf1f      	itttt	ne
 8023bda:	ea24 0101 	bicne.w	r1, r4, r1
 8023bde:	f04f 4480 	movne.w	r4, #1073741824	; 0x40000000
 8023be2:	fa44 f202 	asrne.w	r2, r4, r2
 8023be6:	ea41 0402 	orrne.w	r4, r1, r2
 8023bea:	e7cd      	b.n	8023b88 <rint+0xa8>
 8023bec:	08027fd0 	.word	0x08027fd0
 8023bf0:	000fffff 	.word	0x000fffff
 8023bf4:	00000000 	.word	0x00000000

08023bf8 <scalbn>:
 8023bf8:	b570      	push	{r4, r5, r6, lr}
 8023bfa:	ec55 4b10 	vmov	r4, r5, d0
 8023bfe:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8023c02:	4606      	mov	r6, r0
 8023c04:	462b      	mov	r3, r5
 8023c06:	b99a      	cbnz	r2, 8023c30 <scalbn+0x38>
 8023c08:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8023c0c:	4323      	orrs	r3, r4
 8023c0e:	d036      	beq.n	8023c7e <scalbn+0x86>
 8023c10:	4b39      	ldr	r3, [pc, #228]	; (8023cf8 <scalbn+0x100>)
 8023c12:	4629      	mov	r1, r5
 8023c14:	ee10 0a10 	vmov	r0, s0
 8023c18:	2200      	movs	r2, #0
 8023c1a:	f7dc fd0d 	bl	8000638 <__aeabi_dmul>
 8023c1e:	4b37      	ldr	r3, [pc, #220]	; (8023cfc <scalbn+0x104>)
 8023c20:	429e      	cmp	r6, r3
 8023c22:	4604      	mov	r4, r0
 8023c24:	460d      	mov	r5, r1
 8023c26:	da10      	bge.n	8023c4a <scalbn+0x52>
 8023c28:	a32b      	add	r3, pc, #172	; (adr r3, 8023cd8 <scalbn+0xe0>)
 8023c2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023c2e:	e03a      	b.n	8023ca6 <scalbn+0xae>
 8023c30:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8023c34:	428a      	cmp	r2, r1
 8023c36:	d10c      	bne.n	8023c52 <scalbn+0x5a>
 8023c38:	ee10 2a10 	vmov	r2, s0
 8023c3c:	4620      	mov	r0, r4
 8023c3e:	4629      	mov	r1, r5
 8023c40:	f7dc fb44 	bl	80002cc <__adddf3>
 8023c44:	4604      	mov	r4, r0
 8023c46:	460d      	mov	r5, r1
 8023c48:	e019      	b.n	8023c7e <scalbn+0x86>
 8023c4a:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8023c4e:	460b      	mov	r3, r1
 8023c50:	3a36      	subs	r2, #54	; 0x36
 8023c52:	4432      	add	r2, r6
 8023c54:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8023c58:	428a      	cmp	r2, r1
 8023c5a:	dd08      	ble.n	8023c6e <scalbn+0x76>
 8023c5c:	2d00      	cmp	r5, #0
 8023c5e:	a120      	add	r1, pc, #128	; (adr r1, 8023ce0 <scalbn+0xe8>)
 8023c60:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023c64:	da1c      	bge.n	8023ca0 <scalbn+0xa8>
 8023c66:	a120      	add	r1, pc, #128	; (adr r1, 8023ce8 <scalbn+0xf0>)
 8023c68:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023c6c:	e018      	b.n	8023ca0 <scalbn+0xa8>
 8023c6e:	2a00      	cmp	r2, #0
 8023c70:	dd08      	ble.n	8023c84 <scalbn+0x8c>
 8023c72:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8023c76:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8023c7a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8023c7e:	ec45 4b10 	vmov	d0, r4, r5
 8023c82:	bd70      	pop	{r4, r5, r6, pc}
 8023c84:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8023c88:	da19      	bge.n	8023cbe <scalbn+0xc6>
 8023c8a:	f24c 3350 	movw	r3, #50000	; 0xc350
 8023c8e:	429e      	cmp	r6, r3
 8023c90:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 8023c94:	dd0a      	ble.n	8023cac <scalbn+0xb4>
 8023c96:	a112      	add	r1, pc, #72	; (adr r1, 8023ce0 <scalbn+0xe8>)
 8023c98:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023c9c:	2b00      	cmp	r3, #0
 8023c9e:	d1e2      	bne.n	8023c66 <scalbn+0x6e>
 8023ca0:	a30f      	add	r3, pc, #60	; (adr r3, 8023ce0 <scalbn+0xe8>)
 8023ca2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023ca6:	f7dc fcc7 	bl	8000638 <__aeabi_dmul>
 8023caa:	e7cb      	b.n	8023c44 <scalbn+0x4c>
 8023cac:	a10a      	add	r1, pc, #40	; (adr r1, 8023cd8 <scalbn+0xe0>)
 8023cae:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023cb2:	2b00      	cmp	r3, #0
 8023cb4:	d0b8      	beq.n	8023c28 <scalbn+0x30>
 8023cb6:	a10e      	add	r1, pc, #56	; (adr r1, 8023cf0 <scalbn+0xf8>)
 8023cb8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023cbc:	e7b4      	b.n	8023c28 <scalbn+0x30>
 8023cbe:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8023cc2:	3236      	adds	r2, #54	; 0x36
 8023cc4:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8023cc8:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8023ccc:	4620      	mov	r0, r4
 8023cce:	4b0c      	ldr	r3, [pc, #48]	; (8023d00 <scalbn+0x108>)
 8023cd0:	2200      	movs	r2, #0
 8023cd2:	e7e8      	b.n	8023ca6 <scalbn+0xae>
 8023cd4:	f3af 8000 	nop.w
 8023cd8:	c2f8f359 	.word	0xc2f8f359
 8023cdc:	01a56e1f 	.word	0x01a56e1f
 8023ce0:	8800759c 	.word	0x8800759c
 8023ce4:	7e37e43c 	.word	0x7e37e43c
 8023ce8:	8800759c 	.word	0x8800759c
 8023cec:	fe37e43c 	.word	0xfe37e43c
 8023cf0:	c2f8f359 	.word	0xc2f8f359
 8023cf4:	81a56e1f 	.word	0x81a56e1f
 8023cf8:	43500000 	.word	0x43500000
 8023cfc:	ffff3cb0 	.word	0xffff3cb0
 8023d00:	3c900000 	.word	0x3c900000

08023d04 <abort>:
 8023d04:	b508      	push	{r3, lr}
 8023d06:	2006      	movs	r0, #6
 8023d08:	f000 f996 	bl	8024038 <raise>
 8023d0c:	2001      	movs	r0, #1
 8023d0e:	f7fa fadd 	bl	801e2cc <_exit>

08023d12 <atexit>:
 8023d12:	2300      	movs	r3, #0
 8023d14:	4601      	mov	r1, r0
 8023d16:	461a      	mov	r2, r3
 8023d18:	4618      	mov	r0, r3
 8023d1a:	f001 b933 	b.w	8024f84 <__register_exitproc>
	...

08023d20 <__errno>:
 8023d20:	4b01      	ldr	r3, [pc, #4]	; (8023d28 <__errno+0x8>)
 8023d22:	6818      	ldr	r0, [r3, #0]
 8023d24:	4770      	bx	lr
 8023d26:	bf00      	nop
 8023d28:	20000010 	.word	0x20000010

08023d2c <__libc_init_array>:
 8023d2c:	b570      	push	{r4, r5, r6, lr}
 8023d2e:	4d0d      	ldr	r5, [pc, #52]	; (8023d64 <__libc_init_array+0x38>)
 8023d30:	4c0d      	ldr	r4, [pc, #52]	; (8023d68 <__libc_init_array+0x3c>)
 8023d32:	1b64      	subs	r4, r4, r5
 8023d34:	10a4      	asrs	r4, r4, #2
 8023d36:	2600      	movs	r6, #0
 8023d38:	42a6      	cmp	r6, r4
 8023d3a:	d109      	bne.n	8023d50 <__libc_init_array+0x24>
 8023d3c:	4d0b      	ldr	r5, [pc, #44]	; (8023d6c <__libc_init_array+0x40>)
 8023d3e:	4c0c      	ldr	r4, [pc, #48]	; (8023d70 <__libc_init_array+0x44>)
 8023d40:	f003 fa34 	bl	80271ac <_init>
 8023d44:	1b64      	subs	r4, r4, r5
 8023d46:	10a4      	asrs	r4, r4, #2
 8023d48:	2600      	movs	r6, #0
 8023d4a:	42a6      	cmp	r6, r4
 8023d4c:	d105      	bne.n	8023d5a <__libc_init_array+0x2e>
 8023d4e:	bd70      	pop	{r4, r5, r6, pc}
 8023d50:	f855 3b04 	ldr.w	r3, [r5], #4
 8023d54:	4798      	blx	r3
 8023d56:	3601      	adds	r6, #1
 8023d58:	e7ee      	b.n	8023d38 <__libc_init_array+0xc>
 8023d5a:	f855 3b04 	ldr.w	r3, [r5], #4
 8023d5e:	4798      	blx	r3
 8023d60:	3601      	adds	r6, #1
 8023d62:	e7f2      	b.n	8023d4a <__libc_init_array+0x1e>
 8023d64:	08028444 	.word	0x08028444
 8023d68:	08028444 	.word	0x08028444
 8023d6c:	08028444 	.word	0x08028444
 8023d70:	0802847c 	.word	0x0802847c

08023d74 <isalnum>:
 8023d74:	4b02      	ldr	r3, [pc, #8]	; (8023d80 <isalnum+0xc>)
 8023d76:	4418      	add	r0, r3
 8023d78:	7840      	ldrb	r0, [r0, #1]
 8023d7a:	f000 0007 	and.w	r0, r0, #7
 8023d7e:	4770      	bx	lr
 8023d80:	08028065 	.word	0x08028065

08023d84 <isalpha>:
 8023d84:	4b02      	ldr	r3, [pc, #8]	; (8023d90 <isalpha+0xc>)
 8023d86:	4418      	add	r0, r3
 8023d88:	7840      	ldrb	r0, [r0, #1]
 8023d8a:	f000 0003 	and.w	r0, r0, #3
 8023d8e:	4770      	bx	lr
 8023d90:	08028065 	.word	0x08028065

08023d94 <isspace>:
 8023d94:	4b02      	ldr	r3, [pc, #8]	; (8023da0 <isspace+0xc>)
 8023d96:	4418      	add	r0, r3
 8023d98:	7840      	ldrb	r0, [r0, #1]
 8023d9a:	f000 0008 	and.w	r0, r0, #8
 8023d9e:	4770      	bx	lr
 8023da0:	08028065 	.word	0x08028065

08023da4 <__itoa>:
 8023da4:	1e93      	subs	r3, r2, #2
 8023da6:	2b22      	cmp	r3, #34	; 0x22
 8023da8:	b510      	push	{r4, lr}
 8023daa:	460c      	mov	r4, r1
 8023dac:	d904      	bls.n	8023db8 <__itoa+0x14>
 8023dae:	2300      	movs	r3, #0
 8023db0:	700b      	strb	r3, [r1, #0]
 8023db2:	461c      	mov	r4, r3
 8023db4:	4620      	mov	r0, r4
 8023db6:	bd10      	pop	{r4, pc}
 8023db8:	2a0a      	cmp	r2, #10
 8023dba:	d109      	bne.n	8023dd0 <__itoa+0x2c>
 8023dbc:	2800      	cmp	r0, #0
 8023dbe:	da07      	bge.n	8023dd0 <__itoa+0x2c>
 8023dc0:	232d      	movs	r3, #45	; 0x2d
 8023dc2:	700b      	strb	r3, [r1, #0]
 8023dc4:	4240      	negs	r0, r0
 8023dc6:	2101      	movs	r1, #1
 8023dc8:	4421      	add	r1, r4
 8023dca:	f001 f85f 	bl	8024e8c <__utoa>
 8023dce:	e7f1      	b.n	8023db4 <__itoa+0x10>
 8023dd0:	2100      	movs	r1, #0
 8023dd2:	e7f9      	b.n	8023dc8 <__itoa+0x24>

08023dd4 <itoa>:
 8023dd4:	f7ff bfe6 	b.w	8023da4 <__itoa>

08023dd8 <malloc>:
 8023dd8:	4b02      	ldr	r3, [pc, #8]	; (8023de4 <malloc+0xc>)
 8023dda:	4601      	mov	r1, r0
 8023ddc:	6818      	ldr	r0, [r3, #0]
 8023dde:	f000 b899 	b.w	8023f14 <_malloc_r>
 8023de2:	bf00      	nop
 8023de4:	20000010 	.word	0x20000010

08023de8 <free>:
 8023de8:	4b02      	ldr	r3, [pc, #8]	; (8023df4 <free+0xc>)
 8023dea:	4601      	mov	r1, r0
 8023dec:	6818      	ldr	r0, [r3, #0]
 8023dee:	f000 b841 	b.w	8023e74 <_free_r>
 8023df2:	bf00      	nop
 8023df4:	20000010 	.word	0x20000010

08023df8 <memcmp>:
 8023df8:	b530      	push	{r4, r5, lr}
 8023dfa:	3901      	subs	r1, #1
 8023dfc:	2400      	movs	r4, #0
 8023dfe:	42a2      	cmp	r2, r4
 8023e00:	d101      	bne.n	8023e06 <memcmp+0xe>
 8023e02:	2000      	movs	r0, #0
 8023e04:	e005      	b.n	8023e12 <memcmp+0x1a>
 8023e06:	5d03      	ldrb	r3, [r0, r4]
 8023e08:	3401      	adds	r4, #1
 8023e0a:	5d0d      	ldrb	r5, [r1, r4]
 8023e0c:	42ab      	cmp	r3, r5
 8023e0e:	d0f6      	beq.n	8023dfe <memcmp+0x6>
 8023e10:	1b58      	subs	r0, r3, r5
 8023e12:	bd30      	pop	{r4, r5, pc}

08023e14 <memcpy>:
 8023e14:	440a      	add	r2, r1
 8023e16:	4291      	cmp	r1, r2
 8023e18:	f100 33ff 	add.w	r3, r0, #4294967295
 8023e1c:	d100      	bne.n	8023e20 <memcpy+0xc>
 8023e1e:	4770      	bx	lr
 8023e20:	b510      	push	{r4, lr}
 8023e22:	f811 4b01 	ldrb.w	r4, [r1], #1
 8023e26:	f803 4f01 	strb.w	r4, [r3, #1]!
 8023e2a:	4291      	cmp	r1, r2
 8023e2c:	d1f9      	bne.n	8023e22 <memcpy+0xe>
 8023e2e:	bd10      	pop	{r4, pc}

08023e30 <memmove>:
 8023e30:	4288      	cmp	r0, r1
 8023e32:	b510      	push	{r4, lr}
 8023e34:	eb01 0402 	add.w	r4, r1, r2
 8023e38:	d902      	bls.n	8023e40 <memmove+0x10>
 8023e3a:	4284      	cmp	r4, r0
 8023e3c:	4623      	mov	r3, r4
 8023e3e:	d807      	bhi.n	8023e50 <memmove+0x20>
 8023e40:	1e43      	subs	r3, r0, #1
 8023e42:	42a1      	cmp	r1, r4
 8023e44:	d008      	beq.n	8023e58 <memmove+0x28>
 8023e46:	f811 2b01 	ldrb.w	r2, [r1], #1
 8023e4a:	f803 2f01 	strb.w	r2, [r3, #1]!
 8023e4e:	e7f8      	b.n	8023e42 <memmove+0x12>
 8023e50:	4402      	add	r2, r0
 8023e52:	4601      	mov	r1, r0
 8023e54:	428a      	cmp	r2, r1
 8023e56:	d100      	bne.n	8023e5a <memmove+0x2a>
 8023e58:	bd10      	pop	{r4, pc}
 8023e5a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8023e5e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8023e62:	e7f7      	b.n	8023e54 <memmove+0x24>

08023e64 <memset>:
 8023e64:	4402      	add	r2, r0
 8023e66:	4603      	mov	r3, r0
 8023e68:	4293      	cmp	r3, r2
 8023e6a:	d100      	bne.n	8023e6e <memset+0xa>
 8023e6c:	4770      	bx	lr
 8023e6e:	f803 1b01 	strb.w	r1, [r3], #1
 8023e72:	e7f9      	b.n	8023e68 <memset+0x4>

08023e74 <_free_r>:
 8023e74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8023e76:	2900      	cmp	r1, #0
 8023e78:	d048      	beq.n	8023f0c <_free_r+0x98>
 8023e7a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8023e7e:	9001      	str	r0, [sp, #4]
 8023e80:	2b00      	cmp	r3, #0
 8023e82:	f1a1 0404 	sub.w	r4, r1, #4
 8023e86:	bfb8      	it	lt
 8023e88:	18e4      	addlt	r4, r4, r3
 8023e8a:	f001 fc63 	bl	8025754 <__malloc_lock>
 8023e8e:	4a20      	ldr	r2, [pc, #128]	; (8023f10 <_free_r+0x9c>)
 8023e90:	9801      	ldr	r0, [sp, #4]
 8023e92:	6813      	ldr	r3, [r2, #0]
 8023e94:	4615      	mov	r5, r2
 8023e96:	b933      	cbnz	r3, 8023ea6 <_free_r+0x32>
 8023e98:	6063      	str	r3, [r4, #4]
 8023e9a:	6014      	str	r4, [r2, #0]
 8023e9c:	b003      	add	sp, #12
 8023e9e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8023ea2:	f001 bc5d 	b.w	8025760 <__malloc_unlock>
 8023ea6:	42a3      	cmp	r3, r4
 8023ea8:	d90b      	bls.n	8023ec2 <_free_r+0x4e>
 8023eaa:	6821      	ldr	r1, [r4, #0]
 8023eac:	1862      	adds	r2, r4, r1
 8023eae:	4293      	cmp	r3, r2
 8023eb0:	bf04      	itt	eq
 8023eb2:	681a      	ldreq	r2, [r3, #0]
 8023eb4:	685b      	ldreq	r3, [r3, #4]
 8023eb6:	6063      	str	r3, [r4, #4]
 8023eb8:	bf04      	itt	eq
 8023eba:	1852      	addeq	r2, r2, r1
 8023ebc:	6022      	streq	r2, [r4, #0]
 8023ebe:	602c      	str	r4, [r5, #0]
 8023ec0:	e7ec      	b.n	8023e9c <_free_r+0x28>
 8023ec2:	461a      	mov	r2, r3
 8023ec4:	685b      	ldr	r3, [r3, #4]
 8023ec6:	b10b      	cbz	r3, 8023ecc <_free_r+0x58>
 8023ec8:	42a3      	cmp	r3, r4
 8023eca:	d9fa      	bls.n	8023ec2 <_free_r+0x4e>
 8023ecc:	6811      	ldr	r1, [r2, #0]
 8023ece:	1855      	adds	r5, r2, r1
 8023ed0:	42a5      	cmp	r5, r4
 8023ed2:	d10b      	bne.n	8023eec <_free_r+0x78>
 8023ed4:	6824      	ldr	r4, [r4, #0]
 8023ed6:	4421      	add	r1, r4
 8023ed8:	1854      	adds	r4, r2, r1
 8023eda:	42a3      	cmp	r3, r4
 8023edc:	6011      	str	r1, [r2, #0]
 8023ede:	d1dd      	bne.n	8023e9c <_free_r+0x28>
 8023ee0:	681c      	ldr	r4, [r3, #0]
 8023ee2:	685b      	ldr	r3, [r3, #4]
 8023ee4:	6053      	str	r3, [r2, #4]
 8023ee6:	4421      	add	r1, r4
 8023ee8:	6011      	str	r1, [r2, #0]
 8023eea:	e7d7      	b.n	8023e9c <_free_r+0x28>
 8023eec:	d902      	bls.n	8023ef4 <_free_r+0x80>
 8023eee:	230c      	movs	r3, #12
 8023ef0:	6003      	str	r3, [r0, #0]
 8023ef2:	e7d3      	b.n	8023e9c <_free_r+0x28>
 8023ef4:	6825      	ldr	r5, [r4, #0]
 8023ef6:	1961      	adds	r1, r4, r5
 8023ef8:	428b      	cmp	r3, r1
 8023efa:	bf04      	itt	eq
 8023efc:	6819      	ldreq	r1, [r3, #0]
 8023efe:	685b      	ldreq	r3, [r3, #4]
 8023f00:	6063      	str	r3, [r4, #4]
 8023f02:	bf04      	itt	eq
 8023f04:	1949      	addeq	r1, r1, r5
 8023f06:	6021      	streq	r1, [r4, #0]
 8023f08:	6054      	str	r4, [r2, #4]
 8023f0a:	e7c7      	b.n	8023e9c <_free_r+0x28>
 8023f0c:	b003      	add	sp, #12
 8023f0e:	bd30      	pop	{r4, r5, pc}
 8023f10:	20000728 	.word	0x20000728

08023f14 <_malloc_r>:
 8023f14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023f16:	1ccd      	adds	r5, r1, #3
 8023f18:	f025 0503 	bic.w	r5, r5, #3
 8023f1c:	3508      	adds	r5, #8
 8023f1e:	2d0c      	cmp	r5, #12
 8023f20:	bf38      	it	cc
 8023f22:	250c      	movcc	r5, #12
 8023f24:	2d00      	cmp	r5, #0
 8023f26:	4606      	mov	r6, r0
 8023f28:	db01      	blt.n	8023f2e <_malloc_r+0x1a>
 8023f2a:	42a9      	cmp	r1, r5
 8023f2c:	d903      	bls.n	8023f36 <_malloc_r+0x22>
 8023f2e:	230c      	movs	r3, #12
 8023f30:	6033      	str	r3, [r6, #0]
 8023f32:	2000      	movs	r0, #0
 8023f34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023f36:	f001 fc0d 	bl	8025754 <__malloc_lock>
 8023f3a:	4921      	ldr	r1, [pc, #132]	; (8023fc0 <_malloc_r+0xac>)
 8023f3c:	680a      	ldr	r2, [r1, #0]
 8023f3e:	4614      	mov	r4, r2
 8023f40:	b99c      	cbnz	r4, 8023f6a <_malloc_r+0x56>
 8023f42:	4f20      	ldr	r7, [pc, #128]	; (8023fc4 <_malloc_r+0xb0>)
 8023f44:	683b      	ldr	r3, [r7, #0]
 8023f46:	b923      	cbnz	r3, 8023f52 <_malloc_r+0x3e>
 8023f48:	4621      	mov	r1, r4
 8023f4a:	4630      	mov	r0, r6
 8023f4c:	f000 f83c 	bl	8023fc8 <_sbrk_r>
 8023f50:	6038      	str	r0, [r7, #0]
 8023f52:	4629      	mov	r1, r5
 8023f54:	4630      	mov	r0, r6
 8023f56:	f000 f837 	bl	8023fc8 <_sbrk_r>
 8023f5a:	1c43      	adds	r3, r0, #1
 8023f5c:	d123      	bne.n	8023fa6 <_malloc_r+0x92>
 8023f5e:	230c      	movs	r3, #12
 8023f60:	6033      	str	r3, [r6, #0]
 8023f62:	4630      	mov	r0, r6
 8023f64:	f001 fbfc 	bl	8025760 <__malloc_unlock>
 8023f68:	e7e3      	b.n	8023f32 <_malloc_r+0x1e>
 8023f6a:	6823      	ldr	r3, [r4, #0]
 8023f6c:	1b5b      	subs	r3, r3, r5
 8023f6e:	d417      	bmi.n	8023fa0 <_malloc_r+0x8c>
 8023f70:	2b0b      	cmp	r3, #11
 8023f72:	d903      	bls.n	8023f7c <_malloc_r+0x68>
 8023f74:	6023      	str	r3, [r4, #0]
 8023f76:	441c      	add	r4, r3
 8023f78:	6025      	str	r5, [r4, #0]
 8023f7a:	e004      	b.n	8023f86 <_malloc_r+0x72>
 8023f7c:	6863      	ldr	r3, [r4, #4]
 8023f7e:	42a2      	cmp	r2, r4
 8023f80:	bf0c      	ite	eq
 8023f82:	600b      	streq	r3, [r1, #0]
 8023f84:	6053      	strne	r3, [r2, #4]
 8023f86:	4630      	mov	r0, r6
 8023f88:	f001 fbea 	bl	8025760 <__malloc_unlock>
 8023f8c:	f104 000b 	add.w	r0, r4, #11
 8023f90:	1d23      	adds	r3, r4, #4
 8023f92:	f020 0007 	bic.w	r0, r0, #7
 8023f96:	1ac2      	subs	r2, r0, r3
 8023f98:	d0cc      	beq.n	8023f34 <_malloc_r+0x20>
 8023f9a:	1a1b      	subs	r3, r3, r0
 8023f9c:	50a3      	str	r3, [r4, r2]
 8023f9e:	e7c9      	b.n	8023f34 <_malloc_r+0x20>
 8023fa0:	4622      	mov	r2, r4
 8023fa2:	6864      	ldr	r4, [r4, #4]
 8023fa4:	e7cc      	b.n	8023f40 <_malloc_r+0x2c>
 8023fa6:	1cc4      	adds	r4, r0, #3
 8023fa8:	f024 0403 	bic.w	r4, r4, #3
 8023fac:	42a0      	cmp	r0, r4
 8023fae:	d0e3      	beq.n	8023f78 <_malloc_r+0x64>
 8023fb0:	1a21      	subs	r1, r4, r0
 8023fb2:	4630      	mov	r0, r6
 8023fb4:	f000 f808 	bl	8023fc8 <_sbrk_r>
 8023fb8:	3001      	adds	r0, #1
 8023fba:	d1dd      	bne.n	8023f78 <_malloc_r+0x64>
 8023fbc:	e7cf      	b.n	8023f5e <_malloc_r+0x4a>
 8023fbe:	bf00      	nop
 8023fc0:	20000728 	.word	0x20000728
 8023fc4:	2000072c 	.word	0x2000072c

08023fc8 <_sbrk_r>:
 8023fc8:	b538      	push	{r3, r4, r5, lr}
 8023fca:	4d06      	ldr	r5, [pc, #24]	; (8023fe4 <_sbrk_r+0x1c>)
 8023fcc:	2300      	movs	r3, #0
 8023fce:	4604      	mov	r4, r0
 8023fd0:	4608      	mov	r0, r1
 8023fd2:	602b      	str	r3, [r5, #0]
 8023fd4:	f7fa f9f2 	bl	801e3bc <_sbrk>
 8023fd8:	1c43      	adds	r3, r0, #1
 8023fda:	d102      	bne.n	8023fe2 <_sbrk_r+0x1a>
 8023fdc:	682b      	ldr	r3, [r5, #0]
 8023fde:	b103      	cbz	r3, 8023fe2 <_sbrk_r+0x1a>
 8023fe0:	6023      	str	r3, [r4, #0]
 8023fe2:	bd38      	pop	{r3, r4, r5, pc}
 8023fe4:	200007d0 	.word	0x200007d0

08023fe8 <_raise_r>:
 8023fe8:	291f      	cmp	r1, #31
 8023fea:	b538      	push	{r3, r4, r5, lr}
 8023fec:	4604      	mov	r4, r0
 8023fee:	460d      	mov	r5, r1
 8023ff0:	d904      	bls.n	8023ffc <_raise_r+0x14>
 8023ff2:	2316      	movs	r3, #22
 8023ff4:	6003      	str	r3, [r0, #0]
 8023ff6:	f04f 30ff 	mov.w	r0, #4294967295
 8023ffa:	bd38      	pop	{r3, r4, r5, pc}
 8023ffc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8023ffe:	b112      	cbz	r2, 8024006 <_raise_r+0x1e>
 8024000:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8024004:	b94b      	cbnz	r3, 802401a <_raise_r+0x32>
 8024006:	4620      	mov	r0, r4
 8024008:	f000 f830 	bl	802406c <_getpid_r>
 802400c:	462a      	mov	r2, r5
 802400e:	4601      	mov	r1, r0
 8024010:	4620      	mov	r0, r4
 8024012:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8024016:	f000 b817 	b.w	8024048 <_kill_r>
 802401a:	2b01      	cmp	r3, #1
 802401c:	d00a      	beq.n	8024034 <_raise_r+0x4c>
 802401e:	1c59      	adds	r1, r3, #1
 8024020:	d103      	bne.n	802402a <_raise_r+0x42>
 8024022:	2316      	movs	r3, #22
 8024024:	6003      	str	r3, [r0, #0]
 8024026:	2001      	movs	r0, #1
 8024028:	e7e7      	b.n	8023ffa <_raise_r+0x12>
 802402a:	2400      	movs	r4, #0
 802402c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8024030:	4628      	mov	r0, r5
 8024032:	4798      	blx	r3
 8024034:	2000      	movs	r0, #0
 8024036:	e7e0      	b.n	8023ffa <_raise_r+0x12>

08024038 <raise>:
 8024038:	4b02      	ldr	r3, [pc, #8]	; (8024044 <raise+0xc>)
 802403a:	4601      	mov	r1, r0
 802403c:	6818      	ldr	r0, [r3, #0]
 802403e:	f7ff bfd3 	b.w	8023fe8 <_raise_r>
 8024042:	bf00      	nop
 8024044:	20000010 	.word	0x20000010

08024048 <_kill_r>:
 8024048:	b538      	push	{r3, r4, r5, lr}
 802404a:	4d07      	ldr	r5, [pc, #28]	; (8024068 <_kill_r+0x20>)
 802404c:	2300      	movs	r3, #0
 802404e:	4604      	mov	r4, r0
 8024050:	4608      	mov	r0, r1
 8024052:	4611      	mov	r1, r2
 8024054:	602b      	str	r3, [r5, #0]
 8024056:	f7fa f929 	bl	801e2ac <_kill>
 802405a:	1c43      	adds	r3, r0, #1
 802405c:	d102      	bne.n	8024064 <_kill_r+0x1c>
 802405e:	682b      	ldr	r3, [r5, #0]
 8024060:	b103      	cbz	r3, 8024064 <_kill_r+0x1c>
 8024062:	6023      	str	r3, [r4, #0]
 8024064:	bd38      	pop	{r3, r4, r5, pc}
 8024066:	bf00      	nop
 8024068:	200007d0 	.word	0x200007d0

0802406c <_getpid_r>:
 802406c:	f7fa b916 	b.w	801e29c <_getpid>

08024070 <sulp>:
 8024070:	b570      	push	{r4, r5, r6, lr}
 8024072:	4604      	mov	r4, r0
 8024074:	460d      	mov	r5, r1
 8024076:	ec45 4b10 	vmov	d0, r4, r5
 802407a:	4616      	mov	r6, r2
 802407c:	f001 fee2 	bl	8025e44 <__ulp>
 8024080:	ec51 0b10 	vmov	r0, r1, d0
 8024084:	b17e      	cbz	r6, 80240a6 <sulp+0x36>
 8024086:	f3c5 530a 	ubfx	r3, r5, #20, #11
 802408a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 802408e:	2b00      	cmp	r3, #0
 8024090:	dd09      	ble.n	80240a6 <sulp+0x36>
 8024092:	051b      	lsls	r3, r3, #20
 8024094:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8024098:	2400      	movs	r4, #0
 802409a:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 802409e:	4622      	mov	r2, r4
 80240a0:	462b      	mov	r3, r5
 80240a2:	f7dc fac9 	bl	8000638 <__aeabi_dmul>
 80240a6:	bd70      	pop	{r4, r5, r6, pc}

080240a8 <_strtod_l>:
 80240a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80240ac:	b0a3      	sub	sp, #140	; 0x8c
 80240ae:	461f      	mov	r7, r3
 80240b0:	2300      	movs	r3, #0
 80240b2:	931e      	str	r3, [sp, #120]	; 0x78
 80240b4:	4ba4      	ldr	r3, [pc, #656]	; (8024348 <_strtod_l+0x2a0>)
 80240b6:	9219      	str	r2, [sp, #100]	; 0x64
 80240b8:	681b      	ldr	r3, [r3, #0]
 80240ba:	9307      	str	r3, [sp, #28]
 80240bc:	4604      	mov	r4, r0
 80240be:	4618      	mov	r0, r3
 80240c0:	4688      	mov	r8, r1
 80240c2:	f7dc f8f5 	bl	80002b0 <strlen>
 80240c6:	f04f 0a00 	mov.w	sl, #0
 80240ca:	4605      	mov	r5, r0
 80240cc:	f04f 0b00 	mov.w	fp, #0
 80240d0:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 80240d4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80240d6:	781a      	ldrb	r2, [r3, #0]
 80240d8:	2a2b      	cmp	r2, #43	; 0x2b
 80240da:	d04c      	beq.n	8024176 <_strtod_l+0xce>
 80240dc:	d839      	bhi.n	8024152 <_strtod_l+0xaa>
 80240de:	2a0d      	cmp	r2, #13
 80240e0:	d832      	bhi.n	8024148 <_strtod_l+0xa0>
 80240e2:	2a08      	cmp	r2, #8
 80240e4:	d832      	bhi.n	802414c <_strtod_l+0xa4>
 80240e6:	2a00      	cmp	r2, #0
 80240e8:	d03c      	beq.n	8024164 <_strtod_l+0xbc>
 80240ea:	2300      	movs	r3, #0
 80240ec:	930e      	str	r3, [sp, #56]	; 0x38
 80240ee:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80240f0:	7833      	ldrb	r3, [r6, #0]
 80240f2:	2b30      	cmp	r3, #48	; 0x30
 80240f4:	f040 80b4 	bne.w	8024260 <_strtod_l+0x1b8>
 80240f8:	7873      	ldrb	r3, [r6, #1]
 80240fa:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80240fe:	2b58      	cmp	r3, #88	; 0x58
 8024100:	d16c      	bne.n	80241dc <_strtod_l+0x134>
 8024102:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024104:	9301      	str	r3, [sp, #4]
 8024106:	ab1e      	add	r3, sp, #120	; 0x78
 8024108:	9702      	str	r7, [sp, #8]
 802410a:	9300      	str	r3, [sp, #0]
 802410c:	4a8f      	ldr	r2, [pc, #572]	; (802434c <_strtod_l+0x2a4>)
 802410e:	ab1f      	add	r3, sp, #124	; 0x7c
 8024110:	a91d      	add	r1, sp, #116	; 0x74
 8024112:	4620      	mov	r0, r4
 8024114:	f001 f800 	bl	8025118 <__gethex>
 8024118:	f010 0707 	ands.w	r7, r0, #7
 802411c:	4605      	mov	r5, r0
 802411e:	d005      	beq.n	802412c <_strtod_l+0x84>
 8024120:	2f06      	cmp	r7, #6
 8024122:	d12a      	bne.n	802417a <_strtod_l+0xd2>
 8024124:	3601      	adds	r6, #1
 8024126:	2300      	movs	r3, #0
 8024128:	961d      	str	r6, [sp, #116]	; 0x74
 802412a:	930e      	str	r3, [sp, #56]	; 0x38
 802412c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802412e:	2b00      	cmp	r3, #0
 8024130:	f040 8596 	bne.w	8024c60 <_strtod_l+0xbb8>
 8024134:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024136:	b1db      	cbz	r3, 8024170 <_strtod_l+0xc8>
 8024138:	4652      	mov	r2, sl
 802413a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 802413e:	ec43 2b10 	vmov	d0, r2, r3
 8024142:	b023      	add	sp, #140	; 0x8c
 8024144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024148:	2a20      	cmp	r2, #32
 802414a:	d1ce      	bne.n	80240ea <_strtod_l+0x42>
 802414c:	3301      	adds	r3, #1
 802414e:	931d      	str	r3, [sp, #116]	; 0x74
 8024150:	e7c0      	b.n	80240d4 <_strtod_l+0x2c>
 8024152:	2a2d      	cmp	r2, #45	; 0x2d
 8024154:	d1c9      	bne.n	80240ea <_strtod_l+0x42>
 8024156:	2201      	movs	r2, #1
 8024158:	920e      	str	r2, [sp, #56]	; 0x38
 802415a:	1c5a      	adds	r2, r3, #1
 802415c:	921d      	str	r2, [sp, #116]	; 0x74
 802415e:	785b      	ldrb	r3, [r3, #1]
 8024160:	2b00      	cmp	r3, #0
 8024162:	d1c4      	bne.n	80240ee <_strtod_l+0x46>
 8024164:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024166:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 802416a:	2b00      	cmp	r3, #0
 802416c:	f040 8576 	bne.w	8024c5c <_strtod_l+0xbb4>
 8024170:	4652      	mov	r2, sl
 8024172:	465b      	mov	r3, fp
 8024174:	e7e3      	b.n	802413e <_strtod_l+0x96>
 8024176:	2200      	movs	r2, #0
 8024178:	e7ee      	b.n	8024158 <_strtod_l+0xb0>
 802417a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802417c:	b13a      	cbz	r2, 802418e <_strtod_l+0xe6>
 802417e:	2135      	movs	r1, #53	; 0x35
 8024180:	a820      	add	r0, sp, #128	; 0x80
 8024182:	f001 ff6a 	bl	802605a <__copybits>
 8024186:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024188:	4620      	mov	r0, r4
 802418a:	f001 fb2f 	bl	80257ec <_Bfree>
 802418e:	3f01      	subs	r7, #1
 8024190:	2f05      	cmp	r7, #5
 8024192:	d807      	bhi.n	80241a4 <_strtod_l+0xfc>
 8024194:	e8df f007 	tbb	[pc, r7]
 8024198:	1d180b0e 	.word	0x1d180b0e
 802419c:	030e      	.short	0x030e
 802419e:	f04f 0b00 	mov.w	fp, #0
 80241a2:	46da      	mov	sl, fp
 80241a4:	0728      	lsls	r0, r5, #28
 80241a6:	d5c1      	bpl.n	802412c <_strtod_l+0x84>
 80241a8:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 80241ac:	e7be      	b.n	802412c <_strtod_l+0x84>
 80241ae:	e9dd ab20 	ldrd	sl, fp, [sp, #128]	; 0x80
 80241b2:	e7f7      	b.n	80241a4 <_strtod_l+0xfc>
 80241b4:	e9dd a320 	ldrd	sl, r3, [sp, #128]	; 0x80
 80241b8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80241ba:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80241be:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80241c2:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 80241c6:	e7ed      	b.n	80241a4 <_strtod_l+0xfc>
 80241c8:	f8df b184 	ldr.w	fp, [pc, #388]	; 8024350 <_strtod_l+0x2a8>
 80241cc:	f04f 0a00 	mov.w	sl, #0
 80241d0:	e7e8      	b.n	80241a4 <_strtod_l+0xfc>
 80241d2:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 80241d6:	f04f 3aff 	mov.w	sl, #4294967295
 80241da:	e7e3      	b.n	80241a4 <_strtod_l+0xfc>
 80241dc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80241de:	1c5a      	adds	r2, r3, #1
 80241e0:	921d      	str	r2, [sp, #116]	; 0x74
 80241e2:	785b      	ldrb	r3, [r3, #1]
 80241e4:	2b30      	cmp	r3, #48	; 0x30
 80241e6:	d0f9      	beq.n	80241dc <_strtod_l+0x134>
 80241e8:	2b00      	cmp	r3, #0
 80241ea:	d09f      	beq.n	802412c <_strtod_l+0x84>
 80241ec:	2301      	movs	r3, #1
 80241ee:	f04f 0900 	mov.w	r9, #0
 80241f2:	9304      	str	r3, [sp, #16]
 80241f4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80241f6:	930a      	str	r3, [sp, #40]	; 0x28
 80241f8:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 80241fc:	464f      	mov	r7, r9
 80241fe:	220a      	movs	r2, #10
 8024200:	981d      	ldr	r0, [sp, #116]	; 0x74
 8024202:	7806      	ldrb	r6, [r0, #0]
 8024204:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8024208:	b2d9      	uxtb	r1, r3
 802420a:	2909      	cmp	r1, #9
 802420c:	d92a      	bls.n	8024264 <_strtod_l+0x1bc>
 802420e:	9907      	ldr	r1, [sp, #28]
 8024210:	462a      	mov	r2, r5
 8024212:	f002 fa6b 	bl	80266ec <strncmp>
 8024216:	b398      	cbz	r0, 8024280 <_strtod_l+0x1d8>
 8024218:	2000      	movs	r0, #0
 802421a:	4633      	mov	r3, r6
 802421c:	463d      	mov	r5, r7
 802421e:	9007      	str	r0, [sp, #28]
 8024220:	4602      	mov	r2, r0
 8024222:	2b65      	cmp	r3, #101	; 0x65
 8024224:	d001      	beq.n	802422a <_strtod_l+0x182>
 8024226:	2b45      	cmp	r3, #69	; 0x45
 8024228:	d118      	bne.n	802425c <_strtod_l+0x1b4>
 802422a:	b91d      	cbnz	r5, 8024234 <_strtod_l+0x18c>
 802422c:	9b04      	ldr	r3, [sp, #16]
 802422e:	4303      	orrs	r3, r0
 8024230:	d098      	beq.n	8024164 <_strtod_l+0xbc>
 8024232:	2500      	movs	r5, #0
 8024234:	f8dd 8074 	ldr.w	r8, [sp, #116]	; 0x74
 8024238:	f108 0301 	add.w	r3, r8, #1
 802423c:	931d      	str	r3, [sp, #116]	; 0x74
 802423e:	f898 3001 	ldrb.w	r3, [r8, #1]
 8024242:	2b2b      	cmp	r3, #43	; 0x2b
 8024244:	d075      	beq.n	8024332 <_strtod_l+0x28a>
 8024246:	2b2d      	cmp	r3, #45	; 0x2d
 8024248:	d07b      	beq.n	8024342 <_strtod_l+0x29a>
 802424a:	f04f 0c00 	mov.w	ip, #0
 802424e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8024252:	2909      	cmp	r1, #9
 8024254:	f240 8082 	bls.w	802435c <_strtod_l+0x2b4>
 8024258:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 802425c:	2600      	movs	r6, #0
 802425e:	e09d      	b.n	802439c <_strtod_l+0x2f4>
 8024260:	2300      	movs	r3, #0
 8024262:	e7c4      	b.n	80241ee <_strtod_l+0x146>
 8024264:	2f08      	cmp	r7, #8
 8024266:	bfd8      	it	le
 8024268:	9909      	ldrle	r1, [sp, #36]	; 0x24
 802426a:	f100 0001 	add.w	r0, r0, #1
 802426e:	bfda      	itte	le
 8024270:	fb02 3301 	mlale	r3, r2, r1, r3
 8024274:	9309      	strle	r3, [sp, #36]	; 0x24
 8024276:	fb02 3909 	mlagt	r9, r2, r9, r3
 802427a:	3701      	adds	r7, #1
 802427c:	901d      	str	r0, [sp, #116]	; 0x74
 802427e:	e7bf      	b.n	8024200 <_strtod_l+0x158>
 8024280:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024282:	195a      	adds	r2, r3, r5
 8024284:	921d      	str	r2, [sp, #116]	; 0x74
 8024286:	5d5b      	ldrb	r3, [r3, r5]
 8024288:	2f00      	cmp	r7, #0
 802428a:	d037      	beq.n	80242fc <_strtod_l+0x254>
 802428c:	9007      	str	r0, [sp, #28]
 802428e:	463d      	mov	r5, r7
 8024290:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8024294:	2a09      	cmp	r2, #9
 8024296:	d912      	bls.n	80242be <_strtod_l+0x216>
 8024298:	2201      	movs	r2, #1
 802429a:	e7c2      	b.n	8024222 <_strtod_l+0x17a>
 802429c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802429e:	1c5a      	adds	r2, r3, #1
 80242a0:	921d      	str	r2, [sp, #116]	; 0x74
 80242a2:	785b      	ldrb	r3, [r3, #1]
 80242a4:	3001      	adds	r0, #1
 80242a6:	2b30      	cmp	r3, #48	; 0x30
 80242a8:	d0f8      	beq.n	802429c <_strtod_l+0x1f4>
 80242aa:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 80242ae:	2a08      	cmp	r2, #8
 80242b0:	f200 84db 	bhi.w	8024c6a <_strtod_l+0xbc2>
 80242b4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80242b6:	9007      	str	r0, [sp, #28]
 80242b8:	2000      	movs	r0, #0
 80242ba:	920a      	str	r2, [sp, #40]	; 0x28
 80242bc:	4605      	mov	r5, r0
 80242be:	3b30      	subs	r3, #48	; 0x30
 80242c0:	f100 0201 	add.w	r2, r0, #1
 80242c4:	d014      	beq.n	80242f0 <_strtod_l+0x248>
 80242c6:	9907      	ldr	r1, [sp, #28]
 80242c8:	4411      	add	r1, r2
 80242ca:	9107      	str	r1, [sp, #28]
 80242cc:	462a      	mov	r2, r5
 80242ce:	eb00 0e05 	add.w	lr, r0, r5
 80242d2:	210a      	movs	r1, #10
 80242d4:	4572      	cmp	r2, lr
 80242d6:	d113      	bne.n	8024300 <_strtod_l+0x258>
 80242d8:	182a      	adds	r2, r5, r0
 80242da:	2a08      	cmp	r2, #8
 80242dc:	f105 0501 	add.w	r5, r5, #1
 80242e0:	4405      	add	r5, r0
 80242e2:	dc1c      	bgt.n	802431e <_strtod_l+0x276>
 80242e4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80242e6:	220a      	movs	r2, #10
 80242e8:	fb02 3301 	mla	r3, r2, r1, r3
 80242ec:	9309      	str	r3, [sp, #36]	; 0x24
 80242ee:	2200      	movs	r2, #0
 80242f0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80242f2:	1c59      	adds	r1, r3, #1
 80242f4:	911d      	str	r1, [sp, #116]	; 0x74
 80242f6:	785b      	ldrb	r3, [r3, #1]
 80242f8:	4610      	mov	r0, r2
 80242fa:	e7c9      	b.n	8024290 <_strtod_l+0x1e8>
 80242fc:	4638      	mov	r0, r7
 80242fe:	e7d2      	b.n	80242a6 <_strtod_l+0x1fe>
 8024300:	2a08      	cmp	r2, #8
 8024302:	dc04      	bgt.n	802430e <_strtod_l+0x266>
 8024304:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8024306:	434e      	muls	r6, r1
 8024308:	9609      	str	r6, [sp, #36]	; 0x24
 802430a:	3201      	adds	r2, #1
 802430c:	e7e2      	b.n	80242d4 <_strtod_l+0x22c>
 802430e:	f102 0c01 	add.w	ip, r2, #1
 8024312:	f1bc 0f10 	cmp.w	ip, #16
 8024316:	bfd8      	it	le
 8024318:	fb01 f909 	mulle.w	r9, r1, r9
 802431c:	e7f5      	b.n	802430a <_strtod_l+0x262>
 802431e:	2d10      	cmp	r5, #16
 8024320:	bfdc      	itt	le
 8024322:	220a      	movle	r2, #10
 8024324:	fb02 3909 	mlale	r9, r2, r9, r3
 8024328:	e7e1      	b.n	80242ee <_strtod_l+0x246>
 802432a:	2300      	movs	r3, #0
 802432c:	9307      	str	r3, [sp, #28]
 802432e:	2201      	movs	r2, #1
 8024330:	e77c      	b.n	802422c <_strtod_l+0x184>
 8024332:	f04f 0c00 	mov.w	ip, #0
 8024336:	f108 0302 	add.w	r3, r8, #2
 802433a:	931d      	str	r3, [sp, #116]	; 0x74
 802433c:	f898 3002 	ldrb.w	r3, [r8, #2]
 8024340:	e785      	b.n	802424e <_strtod_l+0x1a6>
 8024342:	f04f 0c01 	mov.w	ip, #1
 8024346:	e7f6      	b.n	8024336 <_strtod_l+0x28e>
 8024348:	080281e0 	.word	0x080281e0
 802434c:	08027ff0 	.word	0x08027ff0
 8024350:	7ff00000 	.word	0x7ff00000
 8024354:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024356:	1c59      	adds	r1, r3, #1
 8024358:	911d      	str	r1, [sp, #116]	; 0x74
 802435a:	785b      	ldrb	r3, [r3, #1]
 802435c:	2b30      	cmp	r3, #48	; 0x30
 802435e:	d0f9      	beq.n	8024354 <_strtod_l+0x2ac>
 8024360:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 8024364:	2908      	cmp	r1, #8
 8024366:	f63f af79 	bhi.w	802425c <_strtod_l+0x1b4>
 802436a:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 802436e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024370:	9308      	str	r3, [sp, #32]
 8024372:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024374:	1c59      	adds	r1, r3, #1
 8024376:	911d      	str	r1, [sp, #116]	; 0x74
 8024378:	785b      	ldrb	r3, [r3, #1]
 802437a:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
 802437e:	2e09      	cmp	r6, #9
 8024380:	d937      	bls.n	80243f2 <_strtod_l+0x34a>
 8024382:	9e08      	ldr	r6, [sp, #32]
 8024384:	1b89      	subs	r1, r1, r6
 8024386:	2908      	cmp	r1, #8
 8024388:	f644 661f 	movw	r6, #19999	; 0x4e1f
 802438c:	dc02      	bgt.n	8024394 <_strtod_l+0x2ec>
 802438e:	4576      	cmp	r6, lr
 8024390:	bfa8      	it	ge
 8024392:	4676      	movge	r6, lr
 8024394:	f1bc 0f00 	cmp.w	ip, #0
 8024398:	d000      	beq.n	802439c <_strtod_l+0x2f4>
 802439a:	4276      	negs	r6, r6
 802439c:	2d00      	cmp	r5, #0
 802439e:	d14f      	bne.n	8024440 <_strtod_l+0x398>
 80243a0:	9904      	ldr	r1, [sp, #16]
 80243a2:	4301      	orrs	r1, r0
 80243a4:	f47f aec2 	bne.w	802412c <_strtod_l+0x84>
 80243a8:	2a00      	cmp	r2, #0
 80243aa:	f47f aedb 	bne.w	8024164 <_strtod_l+0xbc>
 80243ae:	2b69      	cmp	r3, #105	; 0x69
 80243b0:	d027      	beq.n	8024402 <_strtod_l+0x35a>
 80243b2:	dc24      	bgt.n	80243fe <_strtod_l+0x356>
 80243b4:	2b49      	cmp	r3, #73	; 0x49
 80243b6:	d024      	beq.n	8024402 <_strtod_l+0x35a>
 80243b8:	2b4e      	cmp	r3, #78	; 0x4e
 80243ba:	f47f aed3 	bne.w	8024164 <_strtod_l+0xbc>
 80243be:	499e      	ldr	r1, [pc, #632]	; (8024638 <_strtod_l+0x590>)
 80243c0:	a81d      	add	r0, sp, #116	; 0x74
 80243c2:	f001 f901 	bl	80255c8 <__match>
 80243c6:	2800      	cmp	r0, #0
 80243c8:	f43f aecc 	beq.w	8024164 <_strtod_l+0xbc>
 80243cc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80243ce:	781b      	ldrb	r3, [r3, #0]
 80243d0:	2b28      	cmp	r3, #40	; 0x28
 80243d2:	d12d      	bne.n	8024430 <_strtod_l+0x388>
 80243d4:	4999      	ldr	r1, [pc, #612]	; (802463c <_strtod_l+0x594>)
 80243d6:	aa20      	add	r2, sp, #128	; 0x80
 80243d8:	a81d      	add	r0, sp, #116	; 0x74
 80243da:	f001 f909 	bl	80255f0 <__hexnan>
 80243de:	2805      	cmp	r0, #5
 80243e0:	d126      	bne.n	8024430 <_strtod_l+0x388>
 80243e2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80243e4:	f8dd a080 	ldr.w	sl, [sp, #128]	; 0x80
 80243e8:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 80243ec:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 80243f0:	e69c      	b.n	802412c <_strtod_l+0x84>
 80243f2:	210a      	movs	r1, #10
 80243f4:	fb01 3e0e 	mla	lr, r1, lr, r3
 80243f8:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 80243fc:	e7b9      	b.n	8024372 <_strtod_l+0x2ca>
 80243fe:	2b6e      	cmp	r3, #110	; 0x6e
 8024400:	e7db      	b.n	80243ba <_strtod_l+0x312>
 8024402:	498f      	ldr	r1, [pc, #572]	; (8024640 <_strtod_l+0x598>)
 8024404:	a81d      	add	r0, sp, #116	; 0x74
 8024406:	f001 f8df 	bl	80255c8 <__match>
 802440a:	2800      	cmp	r0, #0
 802440c:	f43f aeaa 	beq.w	8024164 <_strtod_l+0xbc>
 8024410:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024412:	498c      	ldr	r1, [pc, #560]	; (8024644 <_strtod_l+0x59c>)
 8024414:	3b01      	subs	r3, #1
 8024416:	a81d      	add	r0, sp, #116	; 0x74
 8024418:	931d      	str	r3, [sp, #116]	; 0x74
 802441a:	f001 f8d5 	bl	80255c8 <__match>
 802441e:	b910      	cbnz	r0, 8024426 <_strtod_l+0x37e>
 8024420:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024422:	3301      	adds	r3, #1
 8024424:	931d      	str	r3, [sp, #116]	; 0x74
 8024426:	f8df b22c 	ldr.w	fp, [pc, #556]	; 8024654 <_strtod_l+0x5ac>
 802442a:	f04f 0a00 	mov.w	sl, #0
 802442e:	e67d      	b.n	802412c <_strtod_l+0x84>
 8024430:	4885      	ldr	r0, [pc, #532]	; (8024648 <_strtod_l+0x5a0>)
 8024432:	f7ff fb4d 	bl	8023ad0 <nan>
 8024436:	ed8d 0b04 	vstr	d0, [sp, #16]
 802443a:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
 802443e:	e675      	b.n	802412c <_strtod_l+0x84>
 8024440:	9b07      	ldr	r3, [sp, #28]
 8024442:	9809      	ldr	r0, [sp, #36]	; 0x24
 8024444:	1af3      	subs	r3, r6, r3
 8024446:	2f00      	cmp	r7, #0
 8024448:	bf08      	it	eq
 802444a:	462f      	moveq	r7, r5
 802444c:	2d10      	cmp	r5, #16
 802444e:	9308      	str	r3, [sp, #32]
 8024450:	46a8      	mov	r8, r5
 8024452:	bfa8      	it	ge
 8024454:	f04f 0810 	movge.w	r8, #16
 8024458:	f7dc f874 	bl	8000544 <__aeabi_ui2d>
 802445c:	2d09      	cmp	r5, #9
 802445e:	4682      	mov	sl, r0
 8024460:	468b      	mov	fp, r1
 8024462:	dd13      	ble.n	802448c <_strtod_l+0x3e4>
 8024464:	4b79      	ldr	r3, [pc, #484]	; (802464c <_strtod_l+0x5a4>)
 8024466:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 802446a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 802446e:	f7dc f8e3 	bl	8000638 <__aeabi_dmul>
 8024472:	4682      	mov	sl, r0
 8024474:	4648      	mov	r0, r9
 8024476:	468b      	mov	fp, r1
 8024478:	f7dc f864 	bl	8000544 <__aeabi_ui2d>
 802447c:	4602      	mov	r2, r0
 802447e:	460b      	mov	r3, r1
 8024480:	4650      	mov	r0, sl
 8024482:	4659      	mov	r1, fp
 8024484:	f7db ff22 	bl	80002cc <__adddf3>
 8024488:	4682      	mov	sl, r0
 802448a:	468b      	mov	fp, r1
 802448c:	2d0f      	cmp	r5, #15
 802448e:	dc38      	bgt.n	8024502 <_strtod_l+0x45a>
 8024490:	9b08      	ldr	r3, [sp, #32]
 8024492:	2b00      	cmp	r3, #0
 8024494:	f43f ae4a 	beq.w	802412c <_strtod_l+0x84>
 8024498:	dd24      	ble.n	80244e4 <_strtod_l+0x43c>
 802449a:	2b16      	cmp	r3, #22
 802449c:	dc0b      	bgt.n	80244b6 <_strtod_l+0x40e>
 802449e:	4d6b      	ldr	r5, [pc, #428]	; (802464c <_strtod_l+0x5a4>)
 80244a0:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 80244a4:	e9d5 0100 	ldrd	r0, r1, [r5]
 80244a8:	4652      	mov	r2, sl
 80244aa:	465b      	mov	r3, fp
 80244ac:	f7dc f8c4 	bl	8000638 <__aeabi_dmul>
 80244b0:	4682      	mov	sl, r0
 80244b2:	468b      	mov	fp, r1
 80244b4:	e63a      	b.n	802412c <_strtod_l+0x84>
 80244b6:	9a08      	ldr	r2, [sp, #32]
 80244b8:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 80244bc:	4293      	cmp	r3, r2
 80244be:	db20      	blt.n	8024502 <_strtod_l+0x45a>
 80244c0:	4c62      	ldr	r4, [pc, #392]	; (802464c <_strtod_l+0x5a4>)
 80244c2:	f1c5 050f 	rsb	r5, r5, #15
 80244c6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80244ca:	4652      	mov	r2, sl
 80244cc:	465b      	mov	r3, fp
 80244ce:	e9d1 0100 	ldrd	r0, r1, [r1]
 80244d2:	f7dc f8b1 	bl	8000638 <__aeabi_dmul>
 80244d6:	9b08      	ldr	r3, [sp, #32]
 80244d8:	1b5d      	subs	r5, r3, r5
 80244da:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80244de:	e9d4 2300 	ldrd	r2, r3, [r4]
 80244e2:	e7e3      	b.n	80244ac <_strtod_l+0x404>
 80244e4:	9b08      	ldr	r3, [sp, #32]
 80244e6:	3316      	adds	r3, #22
 80244e8:	db0b      	blt.n	8024502 <_strtod_l+0x45a>
 80244ea:	9b07      	ldr	r3, [sp, #28]
 80244ec:	4a57      	ldr	r2, [pc, #348]	; (802464c <_strtod_l+0x5a4>)
 80244ee:	1b9e      	subs	r6, r3, r6
 80244f0:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
 80244f4:	e9d6 2300 	ldrd	r2, r3, [r6]
 80244f8:	4650      	mov	r0, sl
 80244fa:	4659      	mov	r1, fp
 80244fc:	f7dc f9c6 	bl	800088c <__aeabi_ddiv>
 8024500:	e7d6      	b.n	80244b0 <_strtod_l+0x408>
 8024502:	9b08      	ldr	r3, [sp, #32]
 8024504:	eba5 0808 	sub.w	r8, r5, r8
 8024508:	4498      	add	r8, r3
 802450a:	f1b8 0f00 	cmp.w	r8, #0
 802450e:	dd71      	ble.n	80245f4 <_strtod_l+0x54c>
 8024510:	f018 030f 	ands.w	r3, r8, #15
 8024514:	d00a      	beq.n	802452c <_strtod_l+0x484>
 8024516:	494d      	ldr	r1, [pc, #308]	; (802464c <_strtod_l+0x5a4>)
 8024518:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 802451c:	4652      	mov	r2, sl
 802451e:	465b      	mov	r3, fp
 8024520:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024524:	f7dc f888 	bl	8000638 <__aeabi_dmul>
 8024528:	4682      	mov	sl, r0
 802452a:	468b      	mov	fp, r1
 802452c:	f038 080f 	bics.w	r8, r8, #15
 8024530:	d04d      	beq.n	80245ce <_strtod_l+0x526>
 8024532:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8024536:	dd22      	ble.n	802457e <_strtod_l+0x4d6>
 8024538:	2500      	movs	r5, #0
 802453a:	462e      	mov	r6, r5
 802453c:	9509      	str	r5, [sp, #36]	; 0x24
 802453e:	9507      	str	r5, [sp, #28]
 8024540:	2322      	movs	r3, #34	; 0x22
 8024542:	f8df b110 	ldr.w	fp, [pc, #272]	; 8024654 <_strtod_l+0x5ac>
 8024546:	6023      	str	r3, [r4, #0]
 8024548:	f04f 0a00 	mov.w	sl, #0
 802454c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802454e:	2b00      	cmp	r3, #0
 8024550:	f43f adec 	beq.w	802412c <_strtod_l+0x84>
 8024554:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024556:	4620      	mov	r0, r4
 8024558:	f001 f948 	bl	80257ec <_Bfree>
 802455c:	9907      	ldr	r1, [sp, #28]
 802455e:	4620      	mov	r0, r4
 8024560:	f001 f944 	bl	80257ec <_Bfree>
 8024564:	4631      	mov	r1, r6
 8024566:	4620      	mov	r0, r4
 8024568:	f001 f940 	bl	80257ec <_Bfree>
 802456c:	9909      	ldr	r1, [sp, #36]	; 0x24
 802456e:	4620      	mov	r0, r4
 8024570:	f001 f93c 	bl	80257ec <_Bfree>
 8024574:	4629      	mov	r1, r5
 8024576:	4620      	mov	r0, r4
 8024578:	f001 f938 	bl	80257ec <_Bfree>
 802457c:	e5d6      	b.n	802412c <_strtod_l+0x84>
 802457e:	2300      	movs	r3, #0
 8024580:	ea4f 1828 	mov.w	r8, r8, asr #4
 8024584:	4650      	mov	r0, sl
 8024586:	4659      	mov	r1, fp
 8024588:	4699      	mov	r9, r3
 802458a:	f1b8 0f01 	cmp.w	r8, #1
 802458e:	dc21      	bgt.n	80245d4 <_strtod_l+0x52c>
 8024590:	b10b      	cbz	r3, 8024596 <_strtod_l+0x4ee>
 8024592:	4682      	mov	sl, r0
 8024594:	468b      	mov	fp, r1
 8024596:	4b2e      	ldr	r3, [pc, #184]	; (8024650 <_strtod_l+0x5a8>)
 8024598:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 802459c:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 80245a0:	4652      	mov	r2, sl
 80245a2:	465b      	mov	r3, fp
 80245a4:	e9d9 0100 	ldrd	r0, r1, [r9]
 80245a8:	f7dc f846 	bl	8000638 <__aeabi_dmul>
 80245ac:	4b29      	ldr	r3, [pc, #164]	; (8024654 <_strtod_l+0x5ac>)
 80245ae:	460a      	mov	r2, r1
 80245b0:	400b      	ands	r3, r1
 80245b2:	4929      	ldr	r1, [pc, #164]	; (8024658 <_strtod_l+0x5b0>)
 80245b4:	428b      	cmp	r3, r1
 80245b6:	4682      	mov	sl, r0
 80245b8:	d8be      	bhi.n	8024538 <_strtod_l+0x490>
 80245ba:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 80245be:	428b      	cmp	r3, r1
 80245c0:	bf86      	itte	hi
 80245c2:	f8df b098 	ldrhi.w	fp, [pc, #152]	; 802465c <_strtod_l+0x5b4>
 80245c6:	f04f 3aff 	movhi.w	sl, #4294967295
 80245ca:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 80245ce:	2300      	movs	r3, #0
 80245d0:	9304      	str	r3, [sp, #16]
 80245d2:	e081      	b.n	80246d8 <_strtod_l+0x630>
 80245d4:	f018 0f01 	tst.w	r8, #1
 80245d8:	d007      	beq.n	80245ea <_strtod_l+0x542>
 80245da:	4b1d      	ldr	r3, [pc, #116]	; (8024650 <_strtod_l+0x5a8>)
 80245dc:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 80245e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80245e4:	f7dc f828 	bl	8000638 <__aeabi_dmul>
 80245e8:	2301      	movs	r3, #1
 80245ea:	f109 0901 	add.w	r9, r9, #1
 80245ee:	ea4f 0868 	mov.w	r8, r8, asr #1
 80245f2:	e7ca      	b.n	802458a <_strtod_l+0x4e2>
 80245f4:	d0eb      	beq.n	80245ce <_strtod_l+0x526>
 80245f6:	f1c8 0800 	rsb	r8, r8, #0
 80245fa:	f018 020f 	ands.w	r2, r8, #15
 80245fe:	d00a      	beq.n	8024616 <_strtod_l+0x56e>
 8024600:	4b12      	ldr	r3, [pc, #72]	; (802464c <_strtod_l+0x5a4>)
 8024602:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8024606:	4650      	mov	r0, sl
 8024608:	4659      	mov	r1, fp
 802460a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802460e:	f7dc f93d 	bl	800088c <__aeabi_ddiv>
 8024612:	4682      	mov	sl, r0
 8024614:	468b      	mov	fp, r1
 8024616:	ea5f 1828 	movs.w	r8, r8, asr #4
 802461a:	d0d8      	beq.n	80245ce <_strtod_l+0x526>
 802461c:	f1b8 0f1f 	cmp.w	r8, #31
 8024620:	dd1e      	ble.n	8024660 <_strtod_l+0x5b8>
 8024622:	2500      	movs	r5, #0
 8024624:	462e      	mov	r6, r5
 8024626:	9509      	str	r5, [sp, #36]	; 0x24
 8024628:	9507      	str	r5, [sp, #28]
 802462a:	2322      	movs	r3, #34	; 0x22
 802462c:	f04f 0a00 	mov.w	sl, #0
 8024630:	f04f 0b00 	mov.w	fp, #0
 8024634:	6023      	str	r3, [r4, #0]
 8024636:	e789      	b.n	802454c <_strtod_l+0x4a4>
 8024638:	08027fed 	.word	0x08027fed
 802463c:	08028004 	.word	0x08028004
 8024640:	08027fe4 	.word	0x08027fe4
 8024644:	08027fe7 	.word	0x08027fe7
 8024648:	080283da 	.word	0x080283da
 802464c:	08028298 	.word	0x08028298
 8024650:	08028270 	.word	0x08028270
 8024654:	7ff00000 	.word	0x7ff00000
 8024658:	7ca00000 	.word	0x7ca00000
 802465c:	7fefffff 	.word	0x7fefffff
 8024660:	f018 0310 	ands.w	r3, r8, #16
 8024664:	bf18      	it	ne
 8024666:	236a      	movne	r3, #106	; 0x6a
 8024668:	f8df 93b4 	ldr.w	r9, [pc, #948]	; 8024a20 <_strtod_l+0x978>
 802466c:	9304      	str	r3, [sp, #16]
 802466e:	4650      	mov	r0, sl
 8024670:	4659      	mov	r1, fp
 8024672:	2300      	movs	r3, #0
 8024674:	f018 0f01 	tst.w	r8, #1
 8024678:	d004      	beq.n	8024684 <_strtod_l+0x5dc>
 802467a:	e9d9 2300 	ldrd	r2, r3, [r9]
 802467e:	f7db ffdb 	bl	8000638 <__aeabi_dmul>
 8024682:	2301      	movs	r3, #1
 8024684:	ea5f 0868 	movs.w	r8, r8, asr #1
 8024688:	f109 0908 	add.w	r9, r9, #8
 802468c:	d1f2      	bne.n	8024674 <_strtod_l+0x5cc>
 802468e:	b10b      	cbz	r3, 8024694 <_strtod_l+0x5ec>
 8024690:	4682      	mov	sl, r0
 8024692:	468b      	mov	fp, r1
 8024694:	9b04      	ldr	r3, [sp, #16]
 8024696:	b1bb      	cbz	r3, 80246c8 <_strtod_l+0x620>
 8024698:	f3cb 530a 	ubfx	r3, fp, #20, #11
 802469c:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80246a0:	2b00      	cmp	r3, #0
 80246a2:	4659      	mov	r1, fp
 80246a4:	dd10      	ble.n	80246c8 <_strtod_l+0x620>
 80246a6:	2b1f      	cmp	r3, #31
 80246a8:	f340 8128 	ble.w	80248fc <_strtod_l+0x854>
 80246ac:	2b34      	cmp	r3, #52	; 0x34
 80246ae:	bfde      	ittt	le
 80246b0:	3b20      	suble	r3, #32
 80246b2:	f04f 32ff 	movle.w	r2, #4294967295
 80246b6:	fa02 f303 	lslle.w	r3, r2, r3
 80246ba:	f04f 0a00 	mov.w	sl, #0
 80246be:	bfcc      	ite	gt
 80246c0:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 80246c4:	ea03 0b01 	andle.w	fp, r3, r1
 80246c8:	2200      	movs	r2, #0
 80246ca:	2300      	movs	r3, #0
 80246cc:	4650      	mov	r0, sl
 80246ce:	4659      	mov	r1, fp
 80246d0:	f7dc fa1a 	bl	8000b08 <__aeabi_dcmpeq>
 80246d4:	2800      	cmp	r0, #0
 80246d6:	d1a4      	bne.n	8024622 <_strtod_l+0x57a>
 80246d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80246da:	9300      	str	r3, [sp, #0]
 80246dc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80246de:	462b      	mov	r3, r5
 80246e0:	463a      	mov	r2, r7
 80246e2:	4620      	mov	r0, r4
 80246e4:	f001 f8ee 	bl	80258c4 <__s2b>
 80246e8:	9009      	str	r0, [sp, #36]	; 0x24
 80246ea:	2800      	cmp	r0, #0
 80246ec:	f43f af24 	beq.w	8024538 <_strtod_l+0x490>
 80246f0:	9b07      	ldr	r3, [sp, #28]
 80246f2:	1b9e      	subs	r6, r3, r6
 80246f4:	9b08      	ldr	r3, [sp, #32]
 80246f6:	2b00      	cmp	r3, #0
 80246f8:	bfb4      	ite	lt
 80246fa:	4633      	movlt	r3, r6
 80246fc:	2300      	movge	r3, #0
 80246fe:	9310      	str	r3, [sp, #64]	; 0x40
 8024700:	9b08      	ldr	r3, [sp, #32]
 8024702:	2500      	movs	r5, #0
 8024704:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8024708:	9318      	str	r3, [sp, #96]	; 0x60
 802470a:	462e      	mov	r6, r5
 802470c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802470e:	4620      	mov	r0, r4
 8024710:	6859      	ldr	r1, [r3, #4]
 8024712:	f001 f82b 	bl	802576c <_Balloc>
 8024716:	9007      	str	r0, [sp, #28]
 8024718:	2800      	cmp	r0, #0
 802471a:	f43f af11 	beq.w	8024540 <_strtod_l+0x498>
 802471e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024720:	691a      	ldr	r2, [r3, #16]
 8024722:	3202      	adds	r2, #2
 8024724:	f103 010c 	add.w	r1, r3, #12
 8024728:	0092      	lsls	r2, r2, #2
 802472a:	300c      	adds	r0, #12
 802472c:	f7ff fb72 	bl	8023e14 <memcpy>
 8024730:	ec4b ab10 	vmov	d0, sl, fp
 8024734:	aa20      	add	r2, sp, #128	; 0x80
 8024736:	a91f      	add	r1, sp, #124	; 0x7c
 8024738:	4620      	mov	r0, r4
 802473a:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 802473e:	f001 fbfd 	bl	8025f3c <__d2b>
 8024742:	901e      	str	r0, [sp, #120]	; 0x78
 8024744:	2800      	cmp	r0, #0
 8024746:	f43f aefb 	beq.w	8024540 <_strtod_l+0x498>
 802474a:	2101      	movs	r1, #1
 802474c:	4620      	mov	r0, r4
 802474e:	f001 f953 	bl	80259f8 <__i2b>
 8024752:	4606      	mov	r6, r0
 8024754:	2800      	cmp	r0, #0
 8024756:	f43f aef3 	beq.w	8024540 <_strtod_l+0x498>
 802475a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802475c:	9904      	ldr	r1, [sp, #16]
 802475e:	2b00      	cmp	r3, #0
 8024760:	bfab      	itete	ge
 8024762:	9a10      	ldrge	r2, [sp, #64]	; 0x40
 8024764:	9a18      	ldrlt	r2, [sp, #96]	; 0x60
 8024766:	9f18      	ldrge	r7, [sp, #96]	; 0x60
 8024768:	f8dd 9040 	ldrlt.w	r9, [sp, #64]	; 0x40
 802476c:	bfac      	ite	ge
 802476e:	eb03 0902 	addge.w	r9, r3, r2
 8024772:	1ad7      	sublt	r7, r2, r3
 8024774:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8024776:	eba3 0801 	sub.w	r8, r3, r1
 802477a:	4490      	add	r8, r2
 802477c:	4ba3      	ldr	r3, [pc, #652]	; (8024a0c <_strtod_l+0x964>)
 802477e:	f108 38ff 	add.w	r8, r8, #4294967295
 8024782:	4598      	cmp	r8, r3
 8024784:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8024788:	f280 80cc 	bge.w	8024924 <_strtod_l+0x87c>
 802478c:	eba3 0308 	sub.w	r3, r3, r8
 8024790:	2b1f      	cmp	r3, #31
 8024792:	eba2 0203 	sub.w	r2, r2, r3
 8024796:	f04f 0101 	mov.w	r1, #1
 802479a:	f300 80b6 	bgt.w	802490a <_strtod_l+0x862>
 802479e:	fa01 f303 	lsl.w	r3, r1, r3
 80247a2:	9311      	str	r3, [sp, #68]	; 0x44
 80247a4:	2300      	movs	r3, #0
 80247a6:	930c      	str	r3, [sp, #48]	; 0x30
 80247a8:	eb09 0802 	add.w	r8, r9, r2
 80247ac:	9b04      	ldr	r3, [sp, #16]
 80247ae:	45c1      	cmp	r9, r8
 80247b0:	4417      	add	r7, r2
 80247b2:	441f      	add	r7, r3
 80247b4:	464b      	mov	r3, r9
 80247b6:	bfa8      	it	ge
 80247b8:	4643      	movge	r3, r8
 80247ba:	42bb      	cmp	r3, r7
 80247bc:	bfa8      	it	ge
 80247be:	463b      	movge	r3, r7
 80247c0:	2b00      	cmp	r3, #0
 80247c2:	bfc2      	ittt	gt
 80247c4:	eba8 0803 	subgt.w	r8, r8, r3
 80247c8:	1aff      	subgt	r7, r7, r3
 80247ca:	eba9 0903 	subgt.w	r9, r9, r3
 80247ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80247d0:	2b00      	cmp	r3, #0
 80247d2:	dd17      	ble.n	8024804 <_strtod_l+0x75c>
 80247d4:	4631      	mov	r1, r6
 80247d6:	461a      	mov	r2, r3
 80247d8:	4620      	mov	r0, r4
 80247da:	f001 f9c9 	bl	8025b70 <__pow5mult>
 80247de:	4606      	mov	r6, r0
 80247e0:	2800      	cmp	r0, #0
 80247e2:	f43f aead 	beq.w	8024540 <_strtod_l+0x498>
 80247e6:	4601      	mov	r1, r0
 80247e8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80247ea:	4620      	mov	r0, r4
 80247ec:	f001 f91a 	bl	8025a24 <__multiply>
 80247f0:	900f      	str	r0, [sp, #60]	; 0x3c
 80247f2:	2800      	cmp	r0, #0
 80247f4:	f43f aea4 	beq.w	8024540 <_strtod_l+0x498>
 80247f8:	991e      	ldr	r1, [sp, #120]	; 0x78
 80247fa:	4620      	mov	r0, r4
 80247fc:	f000 fff6 	bl	80257ec <_Bfree>
 8024800:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024802:	931e      	str	r3, [sp, #120]	; 0x78
 8024804:	f1b8 0f00 	cmp.w	r8, #0
 8024808:	f300 8091 	bgt.w	802492e <_strtod_l+0x886>
 802480c:	9b08      	ldr	r3, [sp, #32]
 802480e:	2b00      	cmp	r3, #0
 8024810:	dd08      	ble.n	8024824 <_strtod_l+0x77c>
 8024812:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024814:	9907      	ldr	r1, [sp, #28]
 8024816:	4620      	mov	r0, r4
 8024818:	f001 f9aa 	bl	8025b70 <__pow5mult>
 802481c:	9007      	str	r0, [sp, #28]
 802481e:	2800      	cmp	r0, #0
 8024820:	f43f ae8e 	beq.w	8024540 <_strtod_l+0x498>
 8024824:	2f00      	cmp	r7, #0
 8024826:	dd08      	ble.n	802483a <_strtod_l+0x792>
 8024828:	9907      	ldr	r1, [sp, #28]
 802482a:	463a      	mov	r2, r7
 802482c:	4620      	mov	r0, r4
 802482e:	f001 f9f9 	bl	8025c24 <__lshift>
 8024832:	9007      	str	r0, [sp, #28]
 8024834:	2800      	cmp	r0, #0
 8024836:	f43f ae83 	beq.w	8024540 <_strtod_l+0x498>
 802483a:	f1b9 0f00 	cmp.w	r9, #0
 802483e:	dd08      	ble.n	8024852 <_strtod_l+0x7aa>
 8024840:	4631      	mov	r1, r6
 8024842:	464a      	mov	r2, r9
 8024844:	4620      	mov	r0, r4
 8024846:	f001 f9ed 	bl	8025c24 <__lshift>
 802484a:	4606      	mov	r6, r0
 802484c:	2800      	cmp	r0, #0
 802484e:	f43f ae77 	beq.w	8024540 <_strtod_l+0x498>
 8024852:	9a07      	ldr	r2, [sp, #28]
 8024854:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024856:	4620      	mov	r0, r4
 8024858:	f001 fa6c 	bl	8025d34 <__mdiff>
 802485c:	4605      	mov	r5, r0
 802485e:	2800      	cmp	r0, #0
 8024860:	f43f ae6e 	beq.w	8024540 <_strtod_l+0x498>
 8024864:	68c3      	ldr	r3, [r0, #12]
 8024866:	930f      	str	r3, [sp, #60]	; 0x3c
 8024868:	2300      	movs	r3, #0
 802486a:	60c3      	str	r3, [r0, #12]
 802486c:	4631      	mov	r1, r6
 802486e:	f001 fa45 	bl	8025cfc <__mcmp>
 8024872:	2800      	cmp	r0, #0
 8024874:	da65      	bge.n	8024942 <_strtod_l+0x89a>
 8024876:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024878:	ea53 030a 	orrs.w	r3, r3, sl
 802487c:	f040 8087 	bne.w	802498e <_strtod_l+0x8e6>
 8024880:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8024884:	2b00      	cmp	r3, #0
 8024886:	f040 8082 	bne.w	802498e <_strtod_l+0x8e6>
 802488a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 802488e:	0d1b      	lsrs	r3, r3, #20
 8024890:	051b      	lsls	r3, r3, #20
 8024892:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8024896:	d97a      	bls.n	802498e <_strtod_l+0x8e6>
 8024898:	696b      	ldr	r3, [r5, #20]
 802489a:	b913      	cbnz	r3, 80248a2 <_strtod_l+0x7fa>
 802489c:	692b      	ldr	r3, [r5, #16]
 802489e:	2b01      	cmp	r3, #1
 80248a0:	dd75      	ble.n	802498e <_strtod_l+0x8e6>
 80248a2:	4629      	mov	r1, r5
 80248a4:	2201      	movs	r2, #1
 80248a6:	4620      	mov	r0, r4
 80248a8:	f001 f9bc 	bl	8025c24 <__lshift>
 80248ac:	4631      	mov	r1, r6
 80248ae:	4605      	mov	r5, r0
 80248b0:	f001 fa24 	bl	8025cfc <__mcmp>
 80248b4:	2800      	cmp	r0, #0
 80248b6:	dd6a      	ble.n	802498e <_strtod_l+0x8e6>
 80248b8:	9904      	ldr	r1, [sp, #16]
 80248ba:	4a55      	ldr	r2, [pc, #340]	; (8024a10 <_strtod_l+0x968>)
 80248bc:	465b      	mov	r3, fp
 80248be:	2900      	cmp	r1, #0
 80248c0:	f000 8085 	beq.w	80249ce <_strtod_l+0x926>
 80248c4:	ea02 010b 	and.w	r1, r2, fp
 80248c8:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 80248cc:	dc7f      	bgt.n	80249ce <_strtod_l+0x926>
 80248ce:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 80248d2:	f77f aeaa 	ble.w	802462a <_strtod_l+0x582>
 80248d6:	4a4f      	ldr	r2, [pc, #316]	; (8024a14 <_strtod_l+0x96c>)
 80248d8:	2300      	movs	r3, #0
 80248da:	e9cd 3216 	strd	r3, r2, [sp, #88]	; 0x58
 80248de:	4650      	mov	r0, sl
 80248e0:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
 80248e4:	4659      	mov	r1, fp
 80248e6:	f7db fea7 	bl	8000638 <__aeabi_dmul>
 80248ea:	460b      	mov	r3, r1
 80248ec:	4303      	orrs	r3, r0
 80248ee:	bf08      	it	eq
 80248f0:	2322      	moveq	r3, #34	; 0x22
 80248f2:	4682      	mov	sl, r0
 80248f4:	468b      	mov	fp, r1
 80248f6:	bf08      	it	eq
 80248f8:	6023      	streq	r3, [r4, #0]
 80248fa:	e62b      	b.n	8024554 <_strtod_l+0x4ac>
 80248fc:	f04f 32ff 	mov.w	r2, #4294967295
 8024900:	fa02 f303 	lsl.w	r3, r2, r3
 8024904:	ea03 0a0a 	and.w	sl, r3, sl
 8024908:	e6de      	b.n	80246c8 <_strtod_l+0x620>
 802490a:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 802490e:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 8024912:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 8024916:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 802491a:	fa01 f308 	lsl.w	r3, r1, r8
 802491e:	930c      	str	r3, [sp, #48]	; 0x30
 8024920:	9111      	str	r1, [sp, #68]	; 0x44
 8024922:	e741      	b.n	80247a8 <_strtod_l+0x700>
 8024924:	2300      	movs	r3, #0
 8024926:	930c      	str	r3, [sp, #48]	; 0x30
 8024928:	2301      	movs	r3, #1
 802492a:	9311      	str	r3, [sp, #68]	; 0x44
 802492c:	e73c      	b.n	80247a8 <_strtod_l+0x700>
 802492e:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024930:	4642      	mov	r2, r8
 8024932:	4620      	mov	r0, r4
 8024934:	f001 f976 	bl	8025c24 <__lshift>
 8024938:	901e      	str	r0, [sp, #120]	; 0x78
 802493a:	2800      	cmp	r0, #0
 802493c:	f47f af66 	bne.w	802480c <_strtod_l+0x764>
 8024940:	e5fe      	b.n	8024540 <_strtod_l+0x498>
 8024942:	465f      	mov	r7, fp
 8024944:	d16e      	bne.n	8024a24 <_strtod_l+0x97c>
 8024946:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024948:	f3cb 0313 	ubfx	r3, fp, #0, #20
 802494c:	b342      	cbz	r2, 80249a0 <_strtod_l+0x8f8>
 802494e:	4a32      	ldr	r2, [pc, #200]	; (8024a18 <_strtod_l+0x970>)
 8024950:	4293      	cmp	r3, r2
 8024952:	d128      	bne.n	80249a6 <_strtod_l+0x8fe>
 8024954:	9b04      	ldr	r3, [sp, #16]
 8024956:	4650      	mov	r0, sl
 8024958:	b1eb      	cbz	r3, 8024996 <_strtod_l+0x8ee>
 802495a:	4a2d      	ldr	r2, [pc, #180]	; (8024a10 <_strtod_l+0x968>)
 802495c:	403a      	ands	r2, r7
 802495e:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8024962:	f04f 31ff 	mov.w	r1, #4294967295
 8024966:	d819      	bhi.n	802499c <_strtod_l+0x8f4>
 8024968:	0d12      	lsrs	r2, r2, #20
 802496a:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 802496e:	fa01 f303 	lsl.w	r3, r1, r3
 8024972:	4298      	cmp	r0, r3
 8024974:	d117      	bne.n	80249a6 <_strtod_l+0x8fe>
 8024976:	4b29      	ldr	r3, [pc, #164]	; (8024a1c <_strtod_l+0x974>)
 8024978:	429f      	cmp	r7, r3
 802497a:	d102      	bne.n	8024982 <_strtod_l+0x8da>
 802497c:	3001      	adds	r0, #1
 802497e:	f43f addf 	beq.w	8024540 <_strtod_l+0x498>
 8024982:	4b23      	ldr	r3, [pc, #140]	; (8024a10 <_strtod_l+0x968>)
 8024984:	403b      	ands	r3, r7
 8024986:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 802498a:	f04f 0a00 	mov.w	sl, #0
 802498e:	9b04      	ldr	r3, [sp, #16]
 8024990:	2b00      	cmp	r3, #0
 8024992:	d1a0      	bne.n	80248d6 <_strtod_l+0x82e>
 8024994:	e5de      	b.n	8024554 <_strtod_l+0x4ac>
 8024996:	f04f 33ff 	mov.w	r3, #4294967295
 802499a:	e7ea      	b.n	8024972 <_strtod_l+0x8ca>
 802499c:	460b      	mov	r3, r1
 802499e:	e7e8      	b.n	8024972 <_strtod_l+0x8ca>
 80249a0:	ea53 030a 	orrs.w	r3, r3, sl
 80249a4:	d088      	beq.n	80248b8 <_strtod_l+0x810>
 80249a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80249a8:	b1db      	cbz	r3, 80249e2 <_strtod_l+0x93a>
 80249aa:	423b      	tst	r3, r7
 80249ac:	d0ef      	beq.n	802498e <_strtod_l+0x8e6>
 80249ae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80249b0:	9a04      	ldr	r2, [sp, #16]
 80249b2:	4650      	mov	r0, sl
 80249b4:	4659      	mov	r1, fp
 80249b6:	b1c3      	cbz	r3, 80249ea <_strtod_l+0x942>
 80249b8:	f7ff fb5a 	bl	8024070 <sulp>
 80249bc:	4602      	mov	r2, r0
 80249be:	460b      	mov	r3, r1
 80249c0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80249c4:	f7db fc82 	bl	80002cc <__adddf3>
 80249c8:	4682      	mov	sl, r0
 80249ca:	468b      	mov	fp, r1
 80249cc:	e7df      	b.n	802498e <_strtod_l+0x8e6>
 80249ce:	4013      	ands	r3, r2
 80249d0:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 80249d4:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 80249d8:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 80249dc:	f04f 3aff 	mov.w	sl, #4294967295
 80249e0:	e7d5      	b.n	802498e <_strtod_l+0x8e6>
 80249e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80249e4:	ea13 0f0a 	tst.w	r3, sl
 80249e8:	e7e0      	b.n	80249ac <_strtod_l+0x904>
 80249ea:	f7ff fb41 	bl	8024070 <sulp>
 80249ee:	4602      	mov	r2, r0
 80249f0:	460b      	mov	r3, r1
 80249f2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80249f6:	f7db fc67 	bl	80002c8 <__aeabi_dsub>
 80249fa:	2200      	movs	r2, #0
 80249fc:	2300      	movs	r3, #0
 80249fe:	4682      	mov	sl, r0
 8024a00:	468b      	mov	fp, r1
 8024a02:	f7dc f881 	bl	8000b08 <__aeabi_dcmpeq>
 8024a06:	2800      	cmp	r0, #0
 8024a08:	d0c1      	beq.n	802498e <_strtod_l+0x8e6>
 8024a0a:	e60e      	b.n	802462a <_strtod_l+0x582>
 8024a0c:	fffffc02 	.word	0xfffffc02
 8024a10:	7ff00000 	.word	0x7ff00000
 8024a14:	39500000 	.word	0x39500000
 8024a18:	000fffff 	.word	0x000fffff
 8024a1c:	7fefffff 	.word	0x7fefffff
 8024a20:	08028018 	.word	0x08028018
 8024a24:	4631      	mov	r1, r6
 8024a26:	4628      	mov	r0, r5
 8024a28:	f001 fae4 	bl	8025ff4 <__ratio>
 8024a2c:	ec59 8b10 	vmov	r8, r9, d0
 8024a30:	ee10 0a10 	vmov	r0, s0
 8024a34:	2200      	movs	r2, #0
 8024a36:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8024a3a:	4649      	mov	r1, r9
 8024a3c:	f7dc f878 	bl	8000b30 <__aeabi_dcmple>
 8024a40:	2800      	cmp	r0, #0
 8024a42:	d07c      	beq.n	8024b3e <_strtod_l+0xa96>
 8024a44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024a46:	2b00      	cmp	r3, #0
 8024a48:	d04c      	beq.n	8024ae4 <_strtod_l+0xa3c>
 8024a4a:	4b95      	ldr	r3, [pc, #596]	; (8024ca0 <_strtod_l+0xbf8>)
 8024a4c:	2200      	movs	r2, #0
 8024a4e:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8024a52:	f8df 924c 	ldr.w	r9, [pc, #588]	; 8024ca0 <_strtod_l+0xbf8>
 8024a56:	f04f 0800 	mov.w	r8, #0
 8024a5a:	4b92      	ldr	r3, [pc, #584]	; (8024ca4 <_strtod_l+0xbfc>)
 8024a5c:	403b      	ands	r3, r7
 8024a5e:	9311      	str	r3, [sp, #68]	; 0x44
 8024a60:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024a62:	4b91      	ldr	r3, [pc, #580]	; (8024ca8 <_strtod_l+0xc00>)
 8024a64:	429a      	cmp	r2, r3
 8024a66:	f040 80b2 	bne.w	8024bce <_strtod_l+0xb26>
 8024a6a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8024a6e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8024a72:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 8024a76:	ec4b ab10 	vmov	d0, sl, fp
 8024a7a:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
 8024a7e:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8024a82:	f001 f9df 	bl	8025e44 <__ulp>
 8024a86:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8024a8a:	ec53 2b10 	vmov	r2, r3, d0
 8024a8e:	f7db fdd3 	bl	8000638 <__aeabi_dmul>
 8024a92:	4652      	mov	r2, sl
 8024a94:	465b      	mov	r3, fp
 8024a96:	f7db fc19 	bl	80002cc <__adddf3>
 8024a9a:	460b      	mov	r3, r1
 8024a9c:	4981      	ldr	r1, [pc, #516]	; (8024ca4 <_strtod_l+0xbfc>)
 8024a9e:	4a83      	ldr	r2, [pc, #524]	; (8024cac <_strtod_l+0xc04>)
 8024aa0:	4019      	ands	r1, r3
 8024aa2:	4291      	cmp	r1, r2
 8024aa4:	4682      	mov	sl, r0
 8024aa6:	d95e      	bls.n	8024b66 <_strtod_l+0xabe>
 8024aa8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024aaa:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8024aae:	4293      	cmp	r3, r2
 8024ab0:	d103      	bne.n	8024aba <_strtod_l+0xa12>
 8024ab2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024ab4:	3301      	adds	r3, #1
 8024ab6:	f43f ad43 	beq.w	8024540 <_strtod_l+0x498>
 8024aba:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 8024cb8 <_strtod_l+0xc10>
 8024abe:	f04f 3aff 	mov.w	sl, #4294967295
 8024ac2:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024ac4:	4620      	mov	r0, r4
 8024ac6:	f000 fe91 	bl	80257ec <_Bfree>
 8024aca:	9907      	ldr	r1, [sp, #28]
 8024acc:	4620      	mov	r0, r4
 8024ace:	f000 fe8d 	bl	80257ec <_Bfree>
 8024ad2:	4631      	mov	r1, r6
 8024ad4:	4620      	mov	r0, r4
 8024ad6:	f000 fe89 	bl	80257ec <_Bfree>
 8024ada:	4629      	mov	r1, r5
 8024adc:	4620      	mov	r0, r4
 8024ade:	f000 fe85 	bl	80257ec <_Bfree>
 8024ae2:	e613      	b.n	802470c <_strtod_l+0x664>
 8024ae4:	f1ba 0f00 	cmp.w	sl, #0
 8024ae8:	d11b      	bne.n	8024b22 <_strtod_l+0xa7a>
 8024aea:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8024aee:	b9f3      	cbnz	r3, 8024b2e <_strtod_l+0xa86>
 8024af0:	4b6b      	ldr	r3, [pc, #428]	; (8024ca0 <_strtod_l+0xbf8>)
 8024af2:	2200      	movs	r2, #0
 8024af4:	4640      	mov	r0, r8
 8024af6:	4649      	mov	r1, r9
 8024af8:	f7dc f810 	bl	8000b1c <__aeabi_dcmplt>
 8024afc:	b9d0      	cbnz	r0, 8024b34 <_strtod_l+0xa8c>
 8024afe:	4640      	mov	r0, r8
 8024b00:	4649      	mov	r1, r9
 8024b02:	4b6b      	ldr	r3, [pc, #428]	; (8024cb0 <_strtod_l+0xc08>)
 8024b04:	2200      	movs	r2, #0
 8024b06:	f7db fd97 	bl	8000638 <__aeabi_dmul>
 8024b0a:	4680      	mov	r8, r0
 8024b0c:	4689      	mov	r9, r1
 8024b0e:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8024b12:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 8024b16:	931b      	str	r3, [sp, #108]	; 0x6c
 8024b18:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
 8024b1c:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8024b20:	e79b      	b.n	8024a5a <_strtod_l+0x9b2>
 8024b22:	f1ba 0f01 	cmp.w	sl, #1
 8024b26:	d102      	bne.n	8024b2e <_strtod_l+0xa86>
 8024b28:	2f00      	cmp	r7, #0
 8024b2a:	f43f ad7e 	beq.w	802462a <_strtod_l+0x582>
 8024b2e:	4b61      	ldr	r3, [pc, #388]	; (8024cb4 <_strtod_l+0xc0c>)
 8024b30:	2200      	movs	r2, #0
 8024b32:	e78c      	b.n	8024a4e <_strtod_l+0x9a6>
 8024b34:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8024cb0 <_strtod_l+0xc08>
 8024b38:	f04f 0800 	mov.w	r8, #0
 8024b3c:	e7e7      	b.n	8024b0e <_strtod_l+0xa66>
 8024b3e:	4b5c      	ldr	r3, [pc, #368]	; (8024cb0 <_strtod_l+0xc08>)
 8024b40:	4640      	mov	r0, r8
 8024b42:	4649      	mov	r1, r9
 8024b44:	2200      	movs	r2, #0
 8024b46:	f7db fd77 	bl	8000638 <__aeabi_dmul>
 8024b4a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024b4c:	4680      	mov	r8, r0
 8024b4e:	4689      	mov	r9, r1
 8024b50:	b933      	cbnz	r3, 8024b60 <_strtod_l+0xab8>
 8024b52:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8024b56:	9012      	str	r0, [sp, #72]	; 0x48
 8024b58:	9313      	str	r3, [sp, #76]	; 0x4c
 8024b5a:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
 8024b5e:	e7dd      	b.n	8024b1c <_strtod_l+0xa74>
 8024b60:	e9cd 8912 	strd	r8, r9, [sp, #72]	; 0x48
 8024b64:	e7f9      	b.n	8024b5a <_strtod_l+0xab2>
 8024b66:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 8024b6a:	9b04      	ldr	r3, [sp, #16]
 8024b6c:	2b00      	cmp	r3, #0
 8024b6e:	d1a8      	bne.n	8024ac2 <_strtod_l+0xa1a>
 8024b70:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8024b74:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024b76:	0d1b      	lsrs	r3, r3, #20
 8024b78:	051b      	lsls	r3, r3, #20
 8024b7a:	429a      	cmp	r2, r3
 8024b7c:	d1a1      	bne.n	8024ac2 <_strtod_l+0xa1a>
 8024b7e:	4640      	mov	r0, r8
 8024b80:	4649      	mov	r1, r9
 8024b82:	f7dc f8b9 	bl	8000cf8 <__aeabi_d2lz>
 8024b86:	f7db fd29 	bl	80005dc <__aeabi_l2d>
 8024b8a:	4602      	mov	r2, r0
 8024b8c:	460b      	mov	r3, r1
 8024b8e:	4640      	mov	r0, r8
 8024b90:	4649      	mov	r1, r9
 8024b92:	f7db fb99 	bl	80002c8 <__aeabi_dsub>
 8024b96:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024b98:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8024b9c:	ea43 030a 	orr.w	r3, r3, sl
 8024ba0:	4313      	orrs	r3, r2
 8024ba2:	4680      	mov	r8, r0
 8024ba4:	4689      	mov	r9, r1
 8024ba6:	d053      	beq.n	8024c50 <_strtod_l+0xba8>
 8024ba8:	a335      	add	r3, pc, #212	; (adr r3, 8024c80 <_strtod_l+0xbd8>)
 8024baa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024bae:	f7db ffb5 	bl	8000b1c <__aeabi_dcmplt>
 8024bb2:	2800      	cmp	r0, #0
 8024bb4:	f47f acce 	bne.w	8024554 <_strtod_l+0x4ac>
 8024bb8:	a333      	add	r3, pc, #204	; (adr r3, 8024c88 <_strtod_l+0xbe0>)
 8024bba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024bbe:	4640      	mov	r0, r8
 8024bc0:	4649      	mov	r1, r9
 8024bc2:	f7db ffc9 	bl	8000b58 <__aeabi_dcmpgt>
 8024bc6:	2800      	cmp	r0, #0
 8024bc8:	f43f af7b 	beq.w	8024ac2 <_strtod_l+0xa1a>
 8024bcc:	e4c2      	b.n	8024554 <_strtod_l+0x4ac>
 8024bce:	9b04      	ldr	r3, [sp, #16]
 8024bd0:	b333      	cbz	r3, 8024c20 <_strtod_l+0xb78>
 8024bd2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8024bd4:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8024bd8:	d822      	bhi.n	8024c20 <_strtod_l+0xb78>
 8024bda:	a32d      	add	r3, pc, #180	; (adr r3, 8024c90 <_strtod_l+0xbe8>)
 8024bdc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024be0:	4640      	mov	r0, r8
 8024be2:	4649      	mov	r1, r9
 8024be4:	f7db ffa4 	bl	8000b30 <__aeabi_dcmple>
 8024be8:	b1a0      	cbz	r0, 8024c14 <_strtod_l+0xb6c>
 8024bea:	4649      	mov	r1, r9
 8024bec:	4640      	mov	r0, r8
 8024bee:	f7db fffb 	bl	8000be8 <__aeabi_d2uiz>
 8024bf2:	2801      	cmp	r0, #1
 8024bf4:	bf38      	it	cc
 8024bf6:	2001      	movcc	r0, #1
 8024bf8:	f7db fca4 	bl	8000544 <__aeabi_ui2d>
 8024bfc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024bfe:	4680      	mov	r8, r0
 8024c00:	4689      	mov	r9, r1
 8024c02:	bb13      	cbnz	r3, 8024c4a <_strtod_l+0xba2>
 8024c04:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8024c08:	9014      	str	r0, [sp, #80]	; 0x50
 8024c0a:	9315      	str	r3, [sp, #84]	; 0x54
 8024c0c:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8024c10:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8024c14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024c16:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024c18:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8024c1c:	1a9b      	subs	r3, r3, r2
 8024c1e:	930d      	str	r3, [sp, #52]	; 0x34
 8024c20:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8024c24:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 8024c28:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8024c2c:	f001 f90a 	bl	8025e44 <__ulp>
 8024c30:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8024c34:	ec53 2b10 	vmov	r2, r3, d0
 8024c38:	f7db fcfe 	bl	8000638 <__aeabi_dmul>
 8024c3c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8024c40:	f7db fb44 	bl	80002cc <__adddf3>
 8024c44:	4682      	mov	sl, r0
 8024c46:	468b      	mov	fp, r1
 8024c48:	e78f      	b.n	8024b6a <_strtod_l+0xac2>
 8024c4a:	e9cd 8914 	strd	r8, r9, [sp, #80]	; 0x50
 8024c4e:	e7dd      	b.n	8024c0c <_strtod_l+0xb64>
 8024c50:	a311      	add	r3, pc, #68	; (adr r3, 8024c98 <_strtod_l+0xbf0>)
 8024c52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024c56:	f7db ff61 	bl	8000b1c <__aeabi_dcmplt>
 8024c5a:	e7b4      	b.n	8024bc6 <_strtod_l+0xb1e>
 8024c5c:	2300      	movs	r3, #0
 8024c5e:	930e      	str	r3, [sp, #56]	; 0x38
 8024c60:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8024c62:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024c64:	6013      	str	r3, [r2, #0]
 8024c66:	f7ff ba65 	b.w	8024134 <_strtod_l+0x8c>
 8024c6a:	2b65      	cmp	r3, #101	; 0x65
 8024c6c:	f43f ab5d 	beq.w	802432a <_strtod_l+0x282>
 8024c70:	2b45      	cmp	r3, #69	; 0x45
 8024c72:	f43f ab5a 	beq.w	802432a <_strtod_l+0x282>
 8024c76:	2201      	movs	r2, #1
 8024c78:	f7ff bb92 	b.w	80243a0 <_strtod_l+0x2f8>
 8024c7c:	f3af 8000 	nop.w
 8024c80:	94a03595 	.word	0x94a03595
 8024c84:	3fdfffff 	.word	0x3fdfffff
 8024c88:	35afe535 	.word	0x35afe535
 8024c8c:	3fe00000 	.word	0x3fe00000
 8024c90:	ffc00000 	.word	0xffc00000
 8024c94:	41dfffff 	.word	0x41dfffff
 8024c98:	94a03595 	.word	0x94a03595
 8024c9c:	3fcfffff 	.word	0x3fcfffff
 8024ca0:	3ff00000 	.word	0x3ff00000
 8024ca4:	7ff00000 	.word	0x7ff00000
 8024ca8:	7fe00000 	.word	0x7fe00000
 8024cac:	7c9fffff 	.word	0x7c9fffff
 8024cb0:	3fe00000 	.word	0x3fe00000
 8024cb4:	bff00000 	.word	0xbff00000
 8024cb8:	7fefffff 	.word	0x7fefffff

08024cbc <strtof>:
 8024cbc:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
 8024cc0:	4e26      	ldr	r6, [pc, #152]	; (8024d5c <strtof+0xa0>)
 8024cc2:	4b27      	ldr	r3, [pc, #156]	; (8024d60 <strtof+0xa4>)
 8024cc4:	460a      	mov	r2, r1
 8024cc6:	ed2d 8b02 	vpush	{d8}
 8024cca:	4601      	mov	r1, r0
 8024ccc:	6830      	ldr	r0, [r6, #0]
 8024cce:	f7ff f9eb 	bl	80240a8 <_strtod_l>
 8024cd2:	ec55 4b10 	vmov	r4, r5, d0
 8024cd6:	ee10 2a10 	vmov	r2, s0
 8024cda:	ee10 0a10 	vmov	r0, s0
 8024cde:	462b      	mov	r3, r5
 8024ce0:	4629      	mov	r1, r5
 8024ce2:	f7db ff43 	bl	8000b6c <__aeabi_dcmpun>
 8024ce6:	b190      	cbz	r0, 8024d0e <strtof+0x52>
 8024ce8:	2d00      	cmp	r5, #0
 8024cea:	481e      	ldr	r0, [pc, #120]	; (8024d64 <strtof+0xa8>)
 8024cec:	da09      	bge.n	8024d02 <strtof+0x46>
 8024cee:	f001 fcf7 	bl	80266e0 <nanf>
 8024cf2:	eeb1 8a40 	vneg.f32	s16, s0
 8024cf6:	eeb0 0a48 	vmov.f32	s0, s16
 8024cfa:	ecbd 8b02 	vpop	{d8}
 8024cfe:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8024d02:	ecbd 8b02 	vpop	{d8}
 8024d06:	e8bd 4370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, lr}
 8024d0a:	f001 bce9 	b.w	80266e0 <nanf>
 8024d0e:	4620      	mov	r0, r4
 8024d10:	4629      	mov	r1, r5
 8024d12:	f7db ff89 	bl	8000c28 <__aeabi_d2f>
 8024d16:	ee08 0a10 	vmov	s16, r0
 8024d1a:	eddf 7a13 	vldr	s15, [pc, #76]	; 8024d68 <strtof+0xac>
 8024d1e:	eeb0 7ac8 	vabs.f32	s14, s16
 8024d22:	eeb4 7a67 	vcmp.f32	s14, s15
 8024d26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024d2a:	dde4      	ble.n	8024cf6 <strtof+0x3a>
 8024d2c:	f025 4900 	bic.w	r9, r5, #2147483648	; 0x80000000
 8024d30:	4b0e      	ldr	r3, [pc, #56]	; (8024d6c <strtof+0xb0>)
 8024d32:	f04f 32ff 	mov.w	r2, #4294967295
 8024d36:	4620      	mov	r0, r4
 8024d38:	4649      	mov	r1, r9
 8024d3a:	f7db ff17 	bl	8000b6c <__aeabi_dcmpun>
 8024d3e:	b940      	cbnz	r0, 8024d52 <strtof+0x96>
 8024d40:	4b0a      	ldr	r3, [pc, #40]	; (8024d6c <strtof+0xb0>)
 8024d42:	f04f 32ff 	mov.w	r2, #4294967295
 8024d46:	4620      	mov	r0, r4
 8024d48:	4649      	mov	r1, r9
 8024d4a:	f7db fef1 	bl	8000b30 <__aeabi_dcmple>
 8024d4e:	2800      	cmp	r0, #0
 8024d50:	d0d1      	beq.n	8024cf6 <strtof+0x3a>
 8024d52:	6833      	ldr	r3, [r6, #0]
 8024d54:	2222      	movs	r2, #34	; 0x22
 8024d56:	601a      	str	r2, [r3, #0]
 8024d58:	e7cd      	b.n	8024cf6 <strtof+0x3a>
 8024d5a:	bf00      	nop
 8024d5c:	20000010 	.word	0x20000010
 8024d60:	2000007c 	.word	0x2000007c
 8024d64:	080283da 	.word	0x080283da
 8024d68:	7f7fffff 	.word	0x7f7fffff
 8024d6c:	7fefffff 	.word	0x7fefffff

08024d70 <_strtol_l.isra.0>:
 8024d70:	2b01      	cmp	r3, #1
 8024d72:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024d76:	d001      	beq.n	8024d7c <_strtol_l.isra.0+0xc>
 8024d78:	2b24      	cmp	r3, #36	; 0x24
 8024d7a:	d906      	bls.n	8024d8a <_strtol_l.isra.0+0x1a>
 8024d7c:	f7fe ffd0 	bl	8023d20 <__errno>
 8024d80:	2316      	movs	r3, #22
 8024d82:	6003      	str	r3, [r0, #0]
 8024d84:	2000      	movs	r0, #0
 8024d86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024d8a:	4f3a      	ldr	r7, [pc, #232]	; (8024e74 <_strtol_l.isra.0+0x104>)
 8024d8c:	468e      	mov	lr, r1
 8024d8e:	4676      	mov	r6, lr
 8024d90:	f81e 4b01 	ldrb.w	r4, [lr], #1
 8024d94:	5de5      	ldrb	r5, [r4, r7]
 8024d96:	f015 0508 	ands.w	r5, r5, #8
 8024d9a:	d1f8      	bne.n	8024d8e <_strtol_l.isra.0+0x1e>
 8024d9c:	2c2d      	cmp	r4, #45	; 0x2d
 8024d9e:	d134      	bne.n	8024e0a <_strtol_l.isra.0+0x9a>
 8024da0:	f89e 4000 	ldrb.w	r4, [lr]
 8024da4:	f04f 0801 	mov.w	r8, #1
 8024da8:	f106 0e02 	add.w	lr, r6, #2
 8024dac:	2b00      	cmp	r3, #0
 8024dae:	d05c      	beq.n	8024e6a <_strtol_l.isra.0+0xfa>
 8024db0:	2b10      	cmp	r3, #16
 8024db2:	d10c      	bne.n	8024dce <_strtol_l.isra.0+0x5e>
 8024db4:	2c30      	cmp	r4, #48	; 0x30
 8024db6:	d10a      	bne.n	8024dce <_strtol_l.isra.0+0x5e>
 8024db8:	f89e 4000 	ldrb.w	r4, [lr]
 8024dbc:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8024dc0:	2c58      	cmp	r4, #88	; 0x58
 8024dc2:	d14d      	bne.n	8024e60 <_strtol_l.isra.0+0xf0>
 8024dc4:	f89e 4001 	ldrb.w	r4, [lr, #1]
 8024dc8:	2310      	movs	r3, #16
 8024dca:	f10e 0e02 	add.w	lr, lr, #2
 8024dce:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
 8024dd2:	f10c 3cff 	add.w	ip, ip, #4294967295
 8024dd6:	2600      	movs	r6, #0
 8024dd8:	fbbc f9f3 	udiv	r9, ip, r3
 8024ddc:	4635      	mov	r5, r6
 8024dde:	fb03 ca19 	mls	sl, r3, r9, ip
 8024de2:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 8024de6:	2f09      	cmp	r7, #9
 8024de8:	d818      	bhi.n	8024e1c <_strtol_l.isra.0+0xac>
 8024dea:	463c      	mov	r4, r7
 8024dec:	42a3      	cmp	r3, r4
 8024dee:	dd24      	ble.n	8024e3a <_strtol_l.isra.0+0xca>
 8024df0:	2e00      	cmp	r6, #0
 8024df2:	db1f      	blt.n	8024e34 <_strtol_l.isra.0+0xc4>
 8024df4:	45a9      	cmp	r9, r5
 8024df6:	d31d      	bcc.n	8024e34 <_strtol_l.isra.0+0xc4>
 8024df8:	d101      	bne.n	8024dfe <_strtol_l.isra.0+0x8e>
 8024dfa:	45a2      	cmp	sl, r4
 8024dfc:	db1a      	blt.n	8024e34 <_strtol_l.isra.0+0xc4>
 8024dfe:	fb05 4503 	mla	r5, r5, r3, r4
 8024e02:	2601      	movs	r6, #1
 8024e04:	f81e 4b01 	ldrb.w	r4, [lr], #1
 8024e08:	e7eb      	b.n	8024de2 <_strtol_l.isra.0+0x72>
 8024e0a:	2c2b      	cmp	r4, #43	; 0x2b
 8024e0c:	bf08      	it	eq
 8024e0e:	f89e 4000 	ldrbeq.w	r4, [lr]
 8024e12:	46a8      	mov	r8, r5
 8024e14:	bf08      	it	eq
 8024e16:	f106 0e02 	addeq.w	lr, r6, #2
 8024e1a:	e7c7      	b.n	8024dac <_strtol_l.isra.0+0x3c>
 8024e1c:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 8024e20:	2f19      	cmp	r7, #25
 8024e22:	d801      	bhi.n	8024e28 <_strtol_l.isra.0+0xb8>
 8024e24:	3c37      	subs	r4, #55	; 0x37
 8024e26:	e7e1      	b.n	8024dec <_strtol_l.isra.0+0x7c>
 8024e28:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 8024e2c:	2f19      	cmp	r7, #25
 8024e2e:	d804      	bhi.n	8024e3a <_strtol_l.isra.0+0xca>
 8024e30:	3c57      	subs	r4, #87	; 0x57
 8024e32:	e7db      	b.n	8024dec <_strtol_l.isra.0+0x7c>
 8024e34:	f04f 36ff 	mov.w	r6, #4294967295
 8024e38:	e7e4      	b.n	8024e04 <_strtol_l.isra.0+0x94>
 8024e3a:	2e00      	cmp	r6, #0
 8024e3c:	da05      	bge.n	8024e4a <_strtol_l.isra.0+0xda>
 8024e3e:	2322      	movs	r3, #34	; 0x22
 8024e40:	6003      	str	r3, [r0, #0]
 8024e42:	4665      	mov	r5, ip
 8024e44:	b942      	cbnz	r2, 8024e58 <_strtol_l.isra.0+0xe8>
 8024e46:	4628      	mov	r0, r5
 8024e48:	e79d      	b.n	8024d86 <_strtol_l.isra.0+0x16>
 8024e4a:	f1b8 0f00 	cmp.w	r8, #0
 8024e4e:	d000      	beq.n	8024e52 <_strtol_l.isra.0+0xe2>
 8024e50:	426d      	negs	r5, r5
 8024e52:	2a00      	cmp	r2, #0
 8024e54:	d0f7      	beq.n	8024e46 <_strtol_l.isra.0+0xd6>
 8024e56:	b10e      	cbz	r6, 8024e5c <_strtol_l.isra.0+0xec>
 8024e58:	f10e 31ff 	add.w	r1, lr, #4294967295
 8024e5c:	6011      	str	r1, [r2, #0]
 8024e5e:	e7f2      	b.n	8024e46 <_strtol_l.isra.0+0xd6>
 8024e60:	2430      	movs	r4, #48	; 0x30
 8024e62:	2b00      	cmp	r3, #0
 8024e64:	d1b3      	bne.n	8024dce <_strtol_l.isra.0+0x5e>
 8024e66:	2308      	movs	r3, #8
 8024e68:	e7b1      	b.n	8024dce <_strtol_l.isra.0+0x5e>
 8024e6a:	2c30      	cmp	r4, #48	; 0x30
 8024e6c:	d0a4      	beq.n	8024db8 <_strtol_l.isra.0+0x48>
 8024e6e:	230a      	movs	r3, #10
 8024e70:	e7ad      	b.n	8024dce <_strtol_l.isra.0+0x5e>
 8024e72:	bf00      	nop
 8024e74:	08028066 	.word	0x08028066

08024e78 <strtol>:
 8024e78:	4613      	mov	r3, r2
 8024e7a:	460a      	mov	r2, r1
 8024e7c:	4601      	mov	r1, r0
 8024e7e:	4802      	ldr	r0, [pc, #8]	; (8024e88 <strtol+0x10>)
 8024e80:	6800      	ldr	r0, [r0, #0]
 8024e82:	f7ff bf75 	b.w	8024d70 <_strtol_l.isra.0>
 8024e86:	bf00      	nop
 8024e88:	20000010 	.word	0x20000010

08024e8c <__utoa>:
 8024e8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8024e8e:	4c1f      	ldr	r4, [pc, #124]	; (8024f0c <__utoa+0x80>)
 8024e90:	b08b      	sub	sp, #44	; 0x2c
 8024e92:	4605      	mov	r5, r0
 8024e94:	460b      	mov	r3, r1
 8024e96:	466e      	mov	r6, sp
 8024e98:	f104 0c20 	add.w	ip, r4, #32
 8024e9c:	6820      	ldr	r0, [r4, #0]
 8024e9e:	6861      	ldr	r1, [r4, #4]
 8024ea0:	4637      	mov	r7, r6
 8024ea2:	c703      	stmia	r7!, {r0, r1}
 8024ea4:	3408      	adds	r4, #8
 8024ea6:	4564      	cmp	r4, ip
 8024ea8:	463e      	mov	r6, r7
 8024eaa:	d1f7      	bne.n	8024e9c <__utoa+0x10>
 8024eac:	7921      	ldrb	r1, [r4, #4]
 8024eae:	7139      	strb	r1, [r7, #4]
 8024eb0:	1e91      	subs	r1, r2, #2
 8024eb2:	6820      	ldr	r0, [r4, #0]
 8024eb4:	6038      	str	r0, [r7, #0]
 8024eb6:	2922      	cmp	r1, #34	; 0x22
 8024eb8:	f04f 0100 	mov.w	r1, #0
 8024ebc:	d904      	bls.n	8024ec8 <__utoa+0x3c>
 8024ebe:	7019      	strb	r1, [r3, #0]
 8024ec0:	460b      	mov	r3, r1
 8024ec2:	4618      	mov	r0, r3
 8024ec4:	b00b      	add	sp, #44	; 0x2c
 8024ec6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024ec8:	1e58      	subs	r0, r3, #1
 8024eca:	4684      	mov	ip, r0
 8024ecc:	fbb5 f7f2 	udiv	r7, r5, r2
 8024ed0:	f10d 0e28 	add.w	lr, sp, #40	; 0x28
 8024ed4:	fb02 5617 	mls	r6, r2, r7, r5
 8024ed8:	4476      	add	r6, lr
 8024eda:	460c      	mov	r4, r1
 8024edc:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 8024ee0:	f80c 6f01 	strb.w	r6, [ip, #1]!
 8024ee4:	462e      	mov	r6, r5
 8024ee6:	42b2      	cmp	r2, r6
 8024ee8:	f101 0101 	add.w	r1, r1, #1
 8024eec:	463d      	mov	r5, r7
 8024eee:	d9ed      	bls.n	8024ecc <__utoa+0x40>
 8024ef0:	2200      	movs	r2, #0
 8024ef2:	545a      	strb	r2, [r3, r1]
 8024ef4:	1919      	adds	r1, r3, r4
 8024ef6:	1aa5      	subs	r5, r4, r2
 8024ef8:	42aa      	cmp	r2, r5
 8024efa:	dae2      	bge.n	8024ec2 <__utoa+0x36>
 8024efc:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8024f00:	780e      	ldrb	r6, [r1, #0]
 8024f02:	7006      	strb	r6, [r0, #0]
 8024f04:	3201      	adds	r2, #1
 8024f06:	f801 5901 	strb.w	r5, [r1], #-1
 8024f0a:	e7f4      	b.n	8024ef6 <__utoa+0x6a>
 8024f0c:	08028040 	.word	0x08028040

08024f10 <_vsniprintf_r>:
 8024f10:	b530      	push	{r4, r5, lr}
 8024f12:	1e14      	subs	r4, r2, #0
 8024f14:	4605      	mov	r5, r0
 8024f16:	b09b      	sub	sp, #108	; 0x6c
 8024f18:	4618      	mov	r0, r3
 8024f1a:	da05      	bge.n	8024f28 <_vsniprintf_r+0x18>
 8024f1c:	238b      	movs	r3, #139	; 0x8b
 8024f1e:	602b      	str	r3, [r5, #0]
 8024f20:	f04f 30ff 	mov.w	r0, #4294967295
 8024f24:	b01b      	add	sp, #108	; 0x6c
 8024f26:	bd30      	pop	{r4, r5, pc}
 8024f28:	f44f 7302 	mov.w	r3, #520	; 0x208
 8024f2c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8024f30:	bf14      	ite	ne
 8024f32:	f104 33ff 	addne.w	r3, r4, #4294967295
 8024f36:	4623      	moveq	r3, r4
 8024f38:	9302      	str	r3, [sp, #8]
 8024f3a:	9305      	str	r3, [sp, #20]
 8024f3c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8024f40:	9100      	str	r1, [sp, #0]
 8024f42:	9104      	str	r1, [sp, #16]
 8024f44:	f8ad 300e 	strh.w	r3, [sp, #14]
 8024f48:	4602      	mov	r2, r0
 8024f4a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024f4c:	4669      	mov	r1, sp
 8024f4e:	4628      	mov	r0, r5
 8024f50:	f001 f932 	bl	80261b8 <_svfiprintf_r>
 8024f54:	1c43      	adds	r3, r0, #1
 8024f56:	bfbc      	itt	lt
 8024f58:	238b      	movlt	r3, #139	; 0x8b
 8024f5a:	602b      	strlt	r3, [r5, #0]
 8024f5c:	2c00      	cmp	r4, #0
 8024f5e:	d0e1      	beq.n	8024f24 <_vsniprintf_r+0x14>
 8024f60:	9b00      	ldr	r3, [sp, #0]
 8024f62:	2200      	movs	r2, #0
 8024f64:	701a      	strb	r2, [r3, #0]
 8024f66:	e7dd      	b.n	8024f24 <_vsniprintf_r+0x14>

08024f68 <vsniprintf>:
 8024f68:	b507      	push	{r0, r1, r2, lr}
 8024f6a:	9300      	str	r3, [sp, #0]
 8024f6c:	4613      	mov	r3, r2
 8024f6e:	460a      	mov	r2, r1
 8024f70:	4601      	mov	r1, r0
 8024f72:	4803      	ldr	r0, [pc, #12]	; (8024f80 <vsniprintf+0x18>)
 8024f74:	6800      	ldr	r0, [r0, #0]
 8024f76:	f7ff ffcb 	bl	8024f10 <_vsniprintf_r>
 8024f7a:	b003      	add	sp, #12
 8024f7c:	f85d fb04 	ldr.w	pc, [sp], #4
 8024f80:	20000010 	.word	0x20000010

08024f84 <__register_exitproc>:
 8024f84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024f88:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8025044 <__register_exitproc+0xc0>
 8024f8c:	4606      	mov	r6, r0
 8024f8e:	f8d8 0000 	ldr.w	r0, [r8]
 8024f92:	461f      	mov	r7, r3
 8024f94:	460d      	mov	r5, r1
 8024f96:	4691      	mov	r9, r2
 8024f98:	f000 fbc7 	bl	802572a <__retarget_lock_acquire_recursive>
 8024f9c:	4b25      	ldr	r3, [pc, #148]	; (8025034 <__register_exitproc+0xb0>)
 8024f9e:	681c      	ldr	r4, [r3, #0]
 8024fa0:	b934      	cbnz	r4, 8024fb0 <__register_exitproc+0x2c>
 8024fa2:	4c25      	ldr	r4, [pc, #148]	; (8025038 <__register_exitproc+0xb4>)
 8024fa4:	601c      	str	r4, [r3, #0]
 8024fa6:	4b25      	ldr	r3, [pc, #148]	; (802503c <__register_exitproc+0xb8>)
 8024fa8:	b113      	cbz	r3, 8024fb0 <__register_exitproc+0x2c>
 8024faa:	681b      	ldr	r3, [r3, #0]
 8024fac:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8024fb0:	6863      	ldr	r3, [r4, #4]
 8024fb2:	2b1f      	cmp	r3, #31
 8024fb4:	dd07      	ble.n	8024fc6 <__register_exitproc+0x42>
 8024fb6:	f8d8 0000 	ldr.w	r0, [r8]
 8024fba:	f000 fbb8 	bl	802572e <__retarget_lock_release_recursive>
 8024fbe:	f04f 30ff 	mov.w	r0, #4294967295
 8024fc2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8024fc6:	b34e      	cbz	r6, 802501c <__register_exitproc+0x98>
 8024fc8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8024fcc:	b988      	cbnz	r0, 8024ff2 <__register_exitproc+0x6e>
 8024fce:	4b1c      	ldr	r3, [pc, #112]	; (8025040 <__register_exitproc+0xbc>)
 8024fd0:	b923      	cbnz	r3, 8024fdc <__register_exitproc+0x58>
 8024fd2:	f8d8 0000 	ldr.w	r0, [r8]
 8024fd6:	f000 fba9 	bl	802572c <__retarget_lock_release>
 8024fda:	e7f0      	b.n	8024fbe <__register_exitproc+0x3a>
 8024fdc:	f44f 7084 	mov.w	r0, #264	; 0x108
 8024fe0:	f7fe fefa 	bl	8023dd8 <malloc>
 8024fe4:	2800      	cmp	r0, #0
 8024fe6:	d0f4      	beq.n	8024fd2 <__register_exitproc+0x4e>
 8024fe8:	2300      	movs	r3, #0
 8024fea:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8024fee:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8024ff2:	6863      	ldr	r3, [r4, #4]
 8024ff4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8024ff8:	2201      	movs	r2, #1
 8024ffa:	409a      	lsls	r2, r3
 8024ffc:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8025000:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8025004:	4313      	orrs	r3, r2
 8025006:	2e02      	cmp	r6, #2
 8025008:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802500c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8025010:	bf02      	ittt	eq
 8025012:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8025016:	431a      	orreq	r2, r3
 8025018:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 802501c:	6863      	ldr	r3, [r4, #4]
 802501e:	f8d8 0000 	ldr.w	r0, [r8]
 8025022:	1c5a      	adds	r2, r3, #1
 8025024:	3302      	adds	r3, #2
 8025026:	6062      	str	r2, [r4, #4]
 8025028:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802502c:	f000 fb7f 	bl	802572e <__retarget_lock_release_recursive>
 8025030:	2000      	movs	r0, #0
 8025032:	e7c6      	b.n	8024fc2 <__register_exitproc+0x3e>
 8025034:	200007bc 	.word	0x200007bc
 8025038:	20000730 	.word	0x20000730
 802503c:	00000000 	.word	0x00000000
 8025040:	08023dd9 	.word	0x08023dd9
 8025044:	20000074 	.word	0x20000074

08025048 <rshift>:
 8025048:	6903      	ldr	r3, [r0, #16]
 802504a:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 802504e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8025052:	ea4f 1261 	mov.w	r2, r1, asr #5
 8025056:	f100 0414 	add.w	r4, r0, #20
 802505a:	dd45      	ble.n	80250e8 <rshift+0xa0>
 802505c:	f011 011f 	ands.w	r1, r1, #31
 8025060:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8025064:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8025068:	d10c      	bne.n	8025084 <rshift+0x3c>
 802506a:	f100 0710 	add.w	r7, r0, #16
 802506e:	4629      	mov	r1, r5
 8025070:	42b1      	cmp	r1, r6
 8025072:	d334      	bcc.n	80250de <rshift+0x96>
 8025074:	1a9b      	subs	r3, r3, r2
 8025076:	009b      	lsls	r3, r3, #2
 8025078:	1eea      	subs	r2, r5, #3
 802507a:	4296      	cmp	r6, r2
 802507c:	bf38      	it	cc
 802507e:	2300      	movcc	r3, #0
 8025080:	4423      	add	r3, r4
 8025082:	e015      	b.n	80250b0 <rshift+0x68>
 8025084:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8025088:	f1c1 0820 	rsb	r8, r1, #32
 802508c:	40cf      	lsrs	r7, r1
 802508e:	f105 0e04 	add.w	lr, r5, #4
 8025092:	46a1      	mov	r9, r4
 8025094:	4576      	cmp	r6, lr
 8025096:	46f4      	mov	ip, lr
 8025098:	d815      	bhi.n	80250c6 <rshift+0x7e>
 802509a:	1a9b      	subs	r3, r3, r2
 802509c:	009a      	lsls	r2, r3, #2
 802509e:	3a04      	subs	r2, #4
 80250a0:	3501      	adds	r5, #1
 80250a2:	42ae      	cmp	r6, r5
 80250a4:	bf38      	it	cc
 80250a6:	2200      	movcc	r2, #0
 80250a8:	18a3      	adds	r3, r4, r2
 80250aa:	50a7      	str	r7, [r4, r2]
 80250ac:	b107      	cbz	r7, 80250b0 <rshift+0x68>
 80250ae:	3304      	adds	r3, #4
 80250b0:	1b1a      	subs	r2, r3, r4
 80250b2:	42a3      	cmp	r3, r4
 80250b4:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80250b8:	bf08      	it	eq
 80250ba:	2300      	moveq	r3, #0
 80250bc:	6102      	str	r2, [r0, #16]
 80250be:	bf08      	it	eq
 80250c0:	6143      	streq	r3, [r0, #20]
 80250c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80250c6:	f8dc c000 	ldr.w	ip, [ip]
 80250ca:	fa0c fc08 	lsl.w	ip, ip, r8
 80250ce:	ea4c 0707 	orr.w	r7, ip, r7
 80250d2:	f849 7b04 	str.w	r7, [r9], #4
 80250d6:	f85e 7b04 	ldr.w	r7, [lr], #4
 80250da:	40cf      	lsrs	r7, r1
 80250dc:	e7da      	b.n	8025094 <rshift+0x4c>
 80250de:	f851 cb04 	ldr.w	ip, [r1], #4
 80250e2:	f847 cf04 	str.w	ip, [r7, #4]!
 80250e6:	e7c3      	b.n	8025070 <rshift+0x28>
 80250e8:	4623      	mov	r3, r4
 80250ea:	e7e1      	b.n	80250b0 <rshift+0x68>

080250ec <__hexdig_fun>:
 80250ec:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80250f0:	2b09      	cmp	r3, #9
 80250f2:	d802      	bhi.n	80250fa <__hexdig_fun+0xe>
 80250f4:	3820      	subs	r0, #32
 80250f6:	b2c0      	uxtb	r0, r0
 80250f8:	4770      	bx	lr
 80250fa:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80250fe:	2b05      	cmp	r3, #5
 8025100:	d801      	bhi.n	8025106 <__hexdig_fun+0x1a>
 8025102:	3847      	subs	r0, #71	; 0x47
 8025104:	e7f7      	b.n	80250f6 <__hexdig_fun+0xa>
 8025106:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 802510a:	2b05      	cmp	r3, #5
 802510c:	d801      	bhi.n	8025112 <__hexdig_fun+0x26>
 802510e:	3827      	subs	r0, #39	; 0x27
 8025110:	e7f1      	b.n	80250f6 <__hexdig_fun+0xa>
 8025112:	2000      	movs	r0, #0
 8025114:	4770      	bx	lr
	...

08025118 <__gethex>:
 8025118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802511c:	ed2d 8b02 	vpush	{d8}
 8025120:	b089      	sub	sp, #36	; 0x24
 8025122:	ee08 0a10 	vmov	s16, r0
 8025126:	9304      	str	r3, [sp, #16]
 8025128:	4bbc      	ldr	r3, [pc, #752]	; (802541c <__gethex+0x304>)
 802512a:	681b      	ldr	r3, [r3, #0]
 802512c:	9301      	str	r3, [sp, #4]
 802512e:	4618      	mov	r0, r3
 8025130:	468b      	mov	fp, r1
 8025132:	4690      	mov	r8, r2
 8025134:	f7db f8bc 	bl	80002b0 <strlen>
 8025138:	9b01      	ldr	r3, [sp, #4]
 802513a:	f8db 2000 	ldr.w	r2, [fp]
 802513e:	4403      	add	r3, r0
 8025140:	4682      	mov	sl, r0
 8025142:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8025146:	9305      	str	r3, [sp, #20]
 8025148:	1c93      	adds	r3, r2, #2
 802514a:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 802514e:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8025152:	32fe      	adds	r2, #254	; 0xfe
 8025154:	18d1      	adds	r1, r2, r3
 8025156:	461f      	mov	r7, r3
 8025158:	f813 0b01 	ldrb.w	r0, [r3], #1
 802515c:	9100      	str	r1, [sp, #0]
 802515e:	2830      	cmp	r0, #48	; 0x30
 8025160:	d0f8      	beq.n	8025154 <__gethex+0x3c>
 8025162:	f7ff ffc3 	bl	80250ec <__hexdig_fun>
 8025166:	4604      	mov	r4, r0
 8025168:	2800      	cmp	r0, #0
 802516a:	d13a      	bne.n	80251e2 <__gethex+0xca>
 802516c:	9901      	ldr	r1, [sp, #4]
 802516e:	4652      	mov	r2, sl
 8025170:	4638      	mov	r0, r7
 8025172:	f001 fabb 	bl	80266ec <strncmp>
 8025176:	4605      	mov	r5, r0
 8025178:	2800      	cmp	r0, #0
 802517a:	d168      	bne.n	802524e <__gethex+0x136>
 802517c:	f817 000a 	ldrb.w	r0, [r7, sl]
 8025180:	eb07 060a 	add.w	r6, r7, sl
 8025184:	f7ff ffb2 	bl	80250ec <__hexdig_fun>
 8025188:	2800      	cmp	r0, #0
 802518a:	d062      	beq.n	8025252 <__gethex+0x13a>
 802518c:	4633      	mov	r3, r6
 802518e:	7818      	ldrb	r0, [r3, #0]
 8025190:	2830      	cmp	r0, #48	; 0x30
 8025192:	461f      	mov	r7, r3
 8025194:	f103 0301 	add.w	r3, r3, #1
 8025198:	d0f9      	beq.n	802518e <__gethex+0x76>
 802519a:	f7ff ffa7 	bl	80250ec <__hexdig_fun>
 802519e:	2301      	movs	r3, #1
 80251a0:	fab0 f480 	clz	r4, r0
 80251a4:	0964      	lsrs	r4, r4, #5
 80251a6:	4635      	mov	r5, r6
 80251a8:	9300      	str	r3, [sp, #0]
 80251aa:	463a      	mov	r2, r7
 80251ac:	4616      	mov	r6, r2
 80251ae:	3201      	adds	r2, #1
 80251b0:	7830      	ldrb	r0, [r6, #0]
 80251b2:	f7ff ff9b 	bl	80250ec <__hexdig_fun>
 80251b6:	2800      	cmp	r0, #0
 80251b8:	d1f8      	bne.n	80251ac <__gethex+0x94>
 80251ba:	9901      	ldr	r1, [sp, #4]
 80251bc:	4652      	mov	r2, sl
 80251be:	4630      	mov	r0, r6
 80251c0:	f001 fa94 	bl	80266ec <strncmp>
 80251c4:	b980      	cbnz	r0, 80251e8 <__gethex+0xd0>
 80251c6:	b94d      	cbnz	r5, 80251dc <__gethex+0xc4>
 80251c8:	eb06 050a 	add.w	r5, r6, sl
 80251cc:	462a      	mov	r2, r5
 80251ce:	4616      	mov	r6, r2
 80251d0:	3201      	adds	r2, #1
 80251d2:	7830      	ldrb	r0, [r6, #0]
 80251d4:	f7ff ff8a 	bl	80250ec <__hexdig_fun>
 80251d8:	2800      	cmp	r0, #0
 80251da:	d1f8      	bne.n	80251ce <__gethex+0xb6>
 80251dc:	1bad      	subs	r5, r5, r6
 80251de:	00ad      	lsls	r5, r5, #2
 80251e0:	e004      	b.n	80251ec <__gethex+0xd4>
 80251e2:	2400      	movs	r4, #0
 80251e4:	4625      	mov	r5, r4
 80251e6:	e7e0      	b.n	80251aa <__gethex+0x92>
 80251e8:	2d00      	cmp	r5, #0
 80251ea:	d1f7      	bne.n	80251dc <__gethex+0xc4>
 80251ec:	7833      	ldrb	r3, [r6, #0]
 80251ee:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80251f2:	2b50      	cmp	r3, #80	; 0x50
 80251f4:	d13b      	bne.n	802526e <__gethex+0x156>
 80251f6:	7873      	ldrb	r3, [r6, #1]
 80251f8:	2b2b      	cmp	r3, #43	; 0x2b
 80251fa:	d02c      	beq.n	8025256 <__gethex+0x13e>
 80251fc:	2b2d      	cmp	r3, #45	; 0x2d
 80251fe:	d02e      	beq.n	802525e <__gethex+0x146>
 8025200:	1c71      	adds	r1, r6, #1
 8025202:	f04f 0900 	mov.w	r9, #0
 8025206:	7808      	ldrb	r0, [r1, #0]
 8025208:	f7ff ff70 	bl	80250ec <__hexdig_fun>
 802520c:	1e43      	subs	r3, r0, #1
 802520e:	b2db      	uxtb	r3, r3
 8025210:	2b18      	cmp	r3, #24
 8025212:	d82c      	bhi.n	802526e <__gethex+0x156>
 8025214:	f1a0 0210 	sub.w	r2, r0, #16
 8025218:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 802521c:	f7ff ff66 	bl	80250ec <__hexdig_fun>
 8025220:	1e43      	subs	r3, r0, #1
 8025222:	b2db      	uxtb	r3, r3
 8025224:	2b18      	cmp	r3, #24
 8025226:	d91d      	bls.n	8025264 <__gethex+0x14c>
 8025228:	f1b9 0f00 	cmp.w	r9, #0
 802522c:	d000      	beq.n	8025230 <__gethex+0x118>
 802522e:	4252      	negs	r2, r2
 8025230:	4415      	add	r5, r2
 8025232:	f8cb 1000 	str.w	r1, [fp]
 8025236:	b1e4      	cbz	r4, 8025272 <__gethex+0x15a>
 8025238:	9b00      	ldr	r3, [sp, #0]
 802523a:	2b00      	cmp	r3, #0
 802523c:	bf14      	ite	ne
 802523e:	2700      	movne	r7, #0
 8025240:	2706      	moveq	r7, #6
 8025242:	4638      	mov	r0, r7
 8025244:	b009      	add	sp, #36	; 0x24
 8025246:	ecbd 8b02 	vpop	{d8}
 802524a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802524e:	463e      	mov	r6, r7
 8025250:	4625      	mov	r5, r4
 8025252:	2401      	movs	r4, #1
 8025254:	e7ca      	b.n	80251ec <__gethex+0xd4>
 8025256:	f04f 0900 	mov.w	r9, #0
 802525a:	1cb1      	adds	r1, r6, #2
 802525c:	e7d3      	b.n	8025206 <__gethex+0xee>
 802525e:	f04f 0901 	mov.w	r9, #1
 8025262:	e7fa      	b.n	802525a <__gethex+0x142>
 8025264:	230a      	movs	r3, #10
 8025266:	fb03 0202 	mla	r2, r3, r2, r0
 802526a:	3a10      	subs	r2, #16
 802526c:	e7d4      	b.n	8025218 <__gethex+0x100>
 802526e:	4631      	mov	r1, r6
 8025270:	e7df      	b.n	8025232 <__gethex+0x11a>
 8025272:	1bf3      	subs	r3, r6, r7
 8025274:	3b01      	subs	r3, #1
 8025276:	4621      	mov	r1, r4
 8025278:	2b07      	cmp	r3, #7
 802527a:	dc0b      	bgt.n	8025294 <__gethex+0x17c>
 802527c:	ee18 0a10 	vmov	r0, s16
 8025280:	f000 fa74 	bl	802576c <_Balloc>
 8025284:	4604      	mov	r4, r0
 8025286:	b940      	cbnz	r0, 802529a <__gethex+0x182>
 8025288:	4b65      	ldr	r3, [pc, #404]	; (8025420 <__gethex+0x308>)
 802528a:	4602      	mov	r2, r0
 802528c:	21de      	movs	r1, #222	; 0xde
 802528e:	4865      	ldr	r0, [pc, #404]	; (8025424 <__gethex+0x30c>)
 8025290:	f001 fa4c 	bl	802672c <__assert_func>
 8025294:	3101      	adds	r1, #1
 8025296:	105b      	asrs	r3, r3, #1
 8025298:	e7ee      	b.n	8025278 <__gethex+0x160>
 802529a:	f100 0914 	add.w	r9, r0, #20
 802529e:	f04f 0b00 	mov.w	fp, #0
 80252a2:	f1ca 0301 	rsb	r3, sl, #1
 80252a6:	f8cd 9008 	str.w	r9, [sp, #8]
 80252aa:	f8cd b000 	str.w	fp, [sp]
 80252ae:	9306      	str	r3, [sp, #24]
 80252b0:	42b7      	cmp	r7, r6
 80252b2:	d340      	bcc.n	8025336 <__gethex+0x21e>
 80252b4:	9802      	ldr	r0, [sp, #8]
 80252b6:	9b00      	ldr	r3, [sp, #0]
 80252b8:	f840 3b04 	str.w	r3, [r0], #4
 80252bc:	eba0 0009 	sub.w	r0, r0, r9
 80252c0:	1080      	asrs	r0, r0, #2
 80252c2:	0146      	lsls	r6, r0, #5
 80252c4:	6120      	str	r0, [r4, #16]
 80252c6:	4618      	mov	r0, r3
 80252c8:	f000 fb46 	bl	8025958 <__hi0bits>
 80252cc:	1a30      	subs	r0, r6, r0
 80252ce:	f8d8 6000 	ldr.w	r6, [r8]
 80252d2:	42b0      	cmp	r0, r6
 80252d4:	dd63      	ble.n	802539e <__gethex+0x286>
 80252d6:	1b87      	subs	r7, r0, r6
 80252d8:	4639      	mov	r1, r7
 80252da:	4620      	mov	r0, r4
 80252dc:	f000 fee0 	bl	80260a0 <__any_on>
 80252e0:	4682      	mov	sl, r0
 80252e2:	b1a8      	cbz	r0, 8025310 <__gethex+0x1f8>
 80252e4:	1e7b      	subs	r3, r7, #1
 80252e6:	1159      	asrs	r1, r3, #5
 80252e8:	f003 021f 	and.w	r2, r3, #31
 80252ec:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 80252f0:	f04f 0a01 	mov.w	sl, #1
 80252f4:	fa0a f202 	lsl.w	r2, sl, r2
 80252f8:	420a      	tst	r2, r1
 80252fa:	d009      	beq.n	8025310 <__gethex+0x1f8>
 80252fc:	4553      	cmp	r3, sl
 80252fe:	dd05      	ble.n	802530c <__gethex+0x1f4>
 8025300:	1eb9      	subs	r1, r7, #2
 8025302:	4620      	mov	r0, r4
 8025304:	f000 fecc 	bl	80260a0 <__any_on>
 8025308:	2800      	cmp	r0, #0
 802530a:	d145      	bne.n	8025398 <__gethex+0x280>
 802530c:	f04f 0a02 	mov.w	sl, #2
 8025310:	4639      	mov	r1, r7
 8025312:	4620      	mov	r0, r4
 8025314:	f7ff fe98 	bl	8025048 <rshift>
 8025318:	443d      	add	r5, r7
 802531a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 802531e:	42ab      	cmp	r3, r5
 8025320:	da4c      	bge.n	80253bc <__gethex+0x2a4>
 8025322:	ee18 0a10 	vmov	r0, s16
 8025326:	4621      	mov	r1, r4
 8025328:	f000 fa60 	bl	80257ec <_Bfree>
 802532c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802532e:	2300      	movs	r3, #0
 8025330:	6013      	str	r3, [r2, #0]
 8025332:	27a3      	movs	r7, #163	; 0xa3
 8025334:	e785      	b.n	8025242 <__gethex+0x12a>
 8025336:	1e73      	subs	r3, r6, #1
 8025338:	9a05      	ldr	r2, [sp, #20]
 802533a:	9303      	str	r3, [sp, #12]
 802533c:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8025340:	4293      	cmp	r3, r2
 8025342:	d019      	beq.n	8025378 <__gethex+0x260>
 8025344:	f1bb 0f20 	cmp.w	fp, #32
 8025348:	d107      	bne.n	802535a <__gethex+0x242>
 802534a:	9b02      	ldr	r3, [sp, #8]
 802534c:	9a00      	ldr	r2, [sp, #0]
 802534e:	f843 2b04 	str.w	r2, [r3], #4
 8025352:	9302      	str	r3, [sp, #8]
 8025354:	2300      	movs	r3, #0
 8025356:	9300      	str	r3, [sp, #0]
 8025358:	469b      	mov	fp, r3
 802535a:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 802535e:	f7ff fec5 	bl	80250ec <__hexdig_fun>
 8025362:	9b00      	ldr	r3, [sp, #0]
 8025364:	f000 000f 	and.w	r0, r0, #15
 8025368:	fa00 f00b 	lsl.w	r0, r0, fp
 802536c:	4303      	orrs	r3, r0
 802536e:	9300      	str	r3, [sp, #0]
 8025370:	f10b 0b04 	add.w	fp, fp, #4
 8025374:	9b03      	ldr	r3, [sp, #12]
 8025376:	e00d      	b.n	8025394 <__gethex+0x27c>
 8025378:	9b03      	ldr	r3, [sp, #12]
 802537a:	9a06      	ldr	r2, [sp, #24]
 802537c:	4413      	add	r3, r2
 802537e:	42bb      	cmp	r3, r7
 8025380:	d3e0      	bcc.n	8025344 <__gethex+0x22c>
 8025382:	4618      	mov	r0, r3
 8025384:	9901      	ldr	r1, [sp, #4]
 8025386:	9307      	str	r3, [sp, #28]
 8025388:	4652      	mov	r2, sl
 802538a:	f001 f9af 	bl	80266ec <strncmp>
 802538e:	9b07      	ldr	r3, [sp, #28]
 8025390:	2800      	cmp	r0, #0
 8025392:	d1d7      	bne.n	8025344 <__gethex+0x22c>
 8025394:	461e      	mov	r6, r3
 8025396:	e78b      	b.n	80252b0 <__gethex+0x198>
 8025398:	f04f 0a03 	mov.w	sl, #3
 802539c:	e7b8      	b.n	8025310 <__gethex+0x1f8>
 802539e:	da0a      	bge.n	80253b6 <__gethex+0x29e>
 80253a0:	1a37      	subs	r7, r6, r0
 80253a2:	4621      	mov	r1, r4
 80253a4:	ee18 0a10 	vmov	r0, s16
 80253a8:	463a      	mov	r2, r7
 80253aa:	f000 fc3b 	bl	8025c24 <__lshift>
 80253ae:	1bed      	subs	r5, r5, r7
 80253b0:	4604      	mov	r4, r0
 80253b2:	f100 0914 	add.w	r9, r0, #20
 80253b6:	f04f 0a00 	mov.w	sl, #0
 80253ba:	e7ae      	b.n	802531a <__gethex+0x202>
 80253bc:	f8d8 0004 	ldr.w	r0, [r8, #4]
 80253c0:	42a8      	cmp	r0, r5
 80253c2:	dd72      	ble.n	80254aa <__gethex+0x392>
 80253c4:	1b45      	subs	r5, r0, r5
 80253c6:	42ae      	cmp	r6, r5
 80253c8:	dc36      	bgt.n	8025438 <__gethex+0x320>
 80253ca:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80253ce:	2b02      	cmp	r3, #2
 80253d0:	d02a      	beq.n	8025428 <__gethex+0x310>
 80253d2:	2b03      	cmp	r3, #3
 80253d4:	d02c      	beq.n	8025430 <__gethex+0x318>
 80253d6:	2b01      	cmp	r3, #1
 80253d8:	d115      	bne.n	8025406 <__gethex+0x2ee>
 80253da:	42ae      	cmp	r6, r5
 80253dc:	d113      	bne.n	8025406 <__gethex+0x2ee>
 80253de:	2e01      	cmp	r6, #1
 80253e0:	d10b      	bne.n	80253fa <__gethex+0x2e2>
 80253e2:	9a04      	ldr	r2, [sp, #16]
 80253e4:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80253e8:	6013      	str	r3, [r2, #0]
 80253ea:	2301      	movs	r3, #1
 80253ec:	6123      	str	r3, [r4, #16]
 80253ee:	f8c9 3000 	str.w	r3, [r9]
 80253f2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80253f4:	2762      	movs	r7, #98	; 0x62
 80253f6:	601c      	str	r4, [r3, #0]
 80253f8:	e723      	b.n	8025242 <__gethex+0x12a>
 80253fa:	1e71      	subs	r1, r6, #1
 80253fc:	4620      	mov	r0, r4
 80253fe:	f000 fe4f 	bl	80260a0 <__any_on>
 8025402:	2800      	cmp	r0, #0
 8025404:	d1ed      	bne.n	80253e2 <__gethex+0x2ca>
 8025406:	ee18 0a10 	vmov	r0, s16
 802540a:	4621      	mov	r1, r4
 802540c:	f000 f9ee 	bl	80257ec <_Bfree>
 8025410:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025412:	2300      	movs	r3, #0
 8025414:	6013      	str	r3, [r2, #0]
 8025416:	2750      	movs	r7, #80	; 0x50
 8025418:	e713      	b.n	8025242 <__gethex+0x12a>
 802541a:	bf00      	nop
 802541c:	080281e0 	.word	0x080281e0
 8025420:	08028166 	.word	0x08028166
 8025424:	08028177 	.word	0x08028177
 8025428:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802542a:	2b00      	cmp	r3, #0
 802542c:	d1eb      	bne.n	8025406 <__gethex+0x2ee>
 802542e:	e7d8      	b.n	80253e2 <__gethex+0x2ca>
 8025430:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8025432:	2b00      	cmp	r3, #0
 8025434:	d1d5      	bne.n	80253e2 <__gethex+0x2ca>
 8025436:	e7e6      	b.n	8025406 <__gethex+0x2ee>
 8025438:	1e6f      	subs	r7, r5, #1
 802543a:	f1ba 0f00 	cmp.w	sl, #0
 802543e:	d131      	bne.n	80254a4 <__gethex+0x38c>
 8025440:	b127      	cbz	r7, 802544c <__gethex+0x334>
 8025442:	4639      	mov	r1, r7
 8025444:	4620      	mov	r0, r4
 8025446:	f000 fe2b 	bl	80260a0 <__any_on>
 802544a:	4682      	mov	sl, r0
 802544c:	117b      	asrs	r3, r7, #5
 802544e:	2101      	movs	r1, #1
 8025450:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8025454:	f007 071f 	and.w	r7, r7, #31
 8025458:	fa01 f707 	lsl.w	r7, r1, r7
 802545c:	421f      	tst	r7, r3
 802545e:	4629      	mov	r1, r5
 8025460:	4620      	mov	r0, r4
 8025462:	bf18      	it	ne
 8025464:	f04a 0a02 	orrne.w	sl, sl, #2
 8025468:	1b76      	subs	r6, r6, r5
 802546a:	f7ff fded 	bl	8025048 <rshift>
 802546e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8025472:	2702      	movs	r7, #2
 8025474:	f1ba 0f00 	cmp.w	sl, #0
 8025478:	d048      	beq.n	802550c <__gethex+0x3f4>
 802547a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 802547e:	2b02      	cmp	r3, #2
 8025480:	d015      	beq.n	80254ae <__gethex+0x396>
 8025482:	2b03      	cmp	r3, #3
 8025484:	d017      	beq.n	80254b6 <__gethex+0x39e>
 8025486:	2b01      	cmp	r3, #1
 8025488:	d109      	bne.n	802549e <__gethex+0x386>
 802548a:	f01a 0f02 	tst.w	sl, #2
 802548e:	d006      	beq.n	802549e <__gethex+0x386>
 8025490:	f8d9 0000 	ldr.w	r0, [r9]
 8025494:	ea4a 0a00 	orr.w	sl, sl, r0
 8025498:	f01a 0f01 	tst.w	sl, #1
 802549c:	d10e      	bne.n	80254bc <__gethex+0x3a4>
 802549e:	f047 0710 	orr.w	r7, r7, #16
 80254a2:	e033      	b.n	802550c <__gethex+0x3f4>
 80254a4:	f04f 0a01 	mov.w	sl, #1
 80254a8:	e7d0      	b.n	802544c <__gethex+0x334>
 80254aa:	2701      	movs	r7, #1
 80254ac:	e7e2      	b.n	8025474 <__gethex+0x35c>
 80254ae:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80254b0:	f1c3 0301 	rsb	r3, r3, #1
 80254b4:	9315      	str	r3, [sp, #84]	; 0x54
 80254b6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80254b8:	2b00      	cmp	r3, #0
 80254ba:	d0f0      	beq.n	802549e <__gethex+0x386>
 80254bc:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80254c0:	f104 0314 	add.w	r3, r4, #20
 80254c4:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80254c8:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80254cc:	f04f 0c00 	mov.w	ip, #0
 80254d0:	4618      	mov	r0, r3
 80254d2:	f853 2b04 	ldr.w	r2, [r3], #4
 80254d6:	f1b2 3fff 	cmp.w	r2, #4294967295
 80254da:	d01c      	beq.n	8025516 <__gethex+0x3fe>
 80254dc:	3201      	adds	r2, #1
 80254de:	6002      	str	r2, [r0, #0]
 80254e0:	2f02      	cmp	r7, #2
 80254e2:	f104 0314 	add.w	r3, r4, #20
 80254e6:	d13f      	bne.n	8025568 <__gethex+0x450>
 80254e8:	f8d8 2000 	ldr.w	r2, [r8]
 80254ec:	3a01      	subs	r2, #1
 80254ee:	42b2      	cmp	r2, r6
 80254f0:	d10a      	bne.n	8025508 <__gethex+0x3f0>
 80254f2:	1171      	asrs	r1, r6, #5
 80254f4:	2201      	movs	r2, #1
 80254f6:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80254fa:	f006 061f 	and.w	r6, r6, #31
 80254fe:	fa02 f606 	lsl.w	r6, r2, r6
 8025502:	421e      	tst	r6, r3
 8025504:	bf18      	it	ne
 8025506:	4617      	movne	r7, r2
 8025508:	f047 0720 	orr.w	r7, r7, #32
 802550c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802550e:	601c      	str	r4, [r3, #0]
 8025510:	9b04      	ldr	r3, [sp, #16]
 8025512:	601d      	str	r5, [r3, #0]
 8025514:	e695      	b.n	8025242 <__gethex+0x12a>
 8025516:	4299      	cmp	r1, r3
 8025518:	f843 cc04 	str.w	ip, [r3, #-4]
 802551c:	d8d8      	bhi.n	80254d0 <__gethex+0x3b8>
 802551e:	68a3      	ldr	r3, [r4, #8]
 8025520:	459b      	cmp	fp, r3
 8025522:	db19      	blt.n	8025558 <__gethex+0x440>
 8025524:	6861      	ldr	r1, [r4, #4]
 8025526:	ee18 0a10 	vmov	r0, s16
 802552a:	3101      	adds	r1, #1
 802552c:	f000 f91e 	bl	802576c <_Balloc>
 8025530:	4681      	mov	r9, r0
 8025532:	b918      	cbnz	r0, 802553c <__gethex+0x424>
 8025534:	4b1a      	ldr	r3, [pc, #104]	; (80255a0 <__gethex+0x488>)
 8025536:	4602      	mov	r2, r0
 8025538:	2184      	movs	r1, #132	; 0x84
 802553a:	e6a8      	b.n	802528e <__gethex+0x176>
 802553c:	6922      	ldr	r2, [r4, #16]
 802553e:	3202      	adds	r2, #2
 8025540:	f104 010c 	add.w	r1, r4, #12
 8025544:	0092      	lsls	r2, r2, #2
 8025546:	300c      	adds	r0, #12
 8025548:	f7fe fc64 	bl	8023e14 <memcpy>
 802554c:	4621      	mov	r1, r4
 802554e:	ee18 0a10 	vmov	r0, s16
 8025552:	f000 f94b 	bl	80257ec <_Bfree>
 8025556:	464c      	mov	r4, r9
 8025558:	6923      	ldr	r3, [r4, #16]
 802555a:	1c5a      	adds	r2, r3, #1
 802555c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8025560:	6122      	str	r2, [r4, #16]
 8025562:	2201      	movs	r2, #1
 8025564:	615a      	str	r2, [r3, #20]
 8025566:	e7bb      	b.n	80254e0 <__gethex+0x3c8>
 8025568:	6922      	ldr	r2, [r4, #16]
 802556a:	455a      	cmp	r2, fp
 802556c:	dd0b      	ble.n	8025586 <__gethex+0x46e>
 802556e:	2101      	movs	r1, #1
 8025570:	4620      	mov	r0, r4
 8025572:	f7ff fd69 	bl	8025048 <rshift>
 8025576:	f8d8 3008 	ldr.w	r3, [r8, #8]
 802557a:	3501      	adds	r5, #1
 802557c:	42ab      	cmp	r3, r5
 802557e:	f6ff aed0 	blt.w	8025322 <__gethex+0x20a>
 8025582:	2701      	movs	r7, #1
 8025584:	e7c0      	b.n	8025508 <__gethex+0x3f0>
 8025586:	f016 061f 	ands.w	r6, r6, #31
 802558a:	d0fa      	beq.n	8025582 <__gethex+0x46a>
 802558c:	449a      	add	sl, r3
 802558e:	f1c6 0620 	rsb	r6, r6, #32
 8025592:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 8025596:	f000 f9df 	bl	8025958 <__hi0bits>
 802559a:	42b0      	cmp	r0, r6
 802559c:	dbe7      	blt.n	802556e <__gethex+0x456>
 802559e:	e7f0      	b.n	8025582 <__gethex+0x46a>
 80255a0:	08028166 	.word	0x08028166

080255a4 <L_shift>:
 80255a4:	f1c2 0208 	rsb	r2, r2, #8
 80255a8:	0092      	lsls	r2, r2, #2
 80255aa:	b570      	push	{r4, r5, r6, lr}
 80255ac:	f1c2 0620 	rsb	r6, r2, #32
 80255b0:	6843      	ldr	r3, [r0, #4]
 80255b2:	6804      	ldr	r4, [r0, #0]
 80255b4:	fa03 f506 	lsl.w	r5, r3, r6
 80255b8:	432c      	orrs	r4, r5
 80255ba:	40d3      	lsrs	r3, r2
 80255bc:	6004      	str	r4, [r0, #0]
 80255be:	f840 3f04 	str.w	r3, [r0, #4]!
 80255c2:	4288      	cmp	r0, r1
 80255c4:	d3f4      	bcc.n	80255b0 <L_shift+0xc>
 80255c6:	bd70      	pop	{r4, r5, r6, pc}

080255c8 <__match>:
 80255c8:	b530      	push	{r4, r5, lr}
 80255ca:	6803      	ldr	r3, [r0, #0]
 80255cc:	3301      	adds	r3, #1
 80255ce:	f811 4b01 	ldrb.w	r4, [r1], #1
 80255d2:	b914      	cbnz	r4, 80255da <__match+0x12>
 80255d4:	6003      	str	r3, [r0, #0]
 80255d6:	2001      	movs	r0, #1
 80255d8:	bd30      	pop	{r4, r5, pc}
 80255da:	f813 2b01 	ldrb.w	r2, [r3], #1
 80255de:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 80255e2:	2d19      	cmp	r5, #25
 80255e4:	bf98      	it	ls
 80255e6:	3220      	addls	r2, #32
 80255e8:	42a2      	cmp	r2, r4
 80255ea:	d0f0      	beq.n	80255ce <__match+0x6>
 80255ec:	2000      	movs	r0, #0
 80255ee:	e7f3      	b.n	80255d8 <__match+0x10>

080255f0 <__hexnan>:
 80255f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80255f4:	680b      	ldr	r3, [r1, #0]
 80255f6:	6801      	ldr	r1, [r0, #0]
 80255f8:	115e      	asrs	r6, r3, #5
 80255fa:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80255fe:	f013 031f 	ands.w	r3, r3, #31
 8025602:	b087      	sub	sp, #28
 8025604:	bf18      	it	ne
 8025606:	3604      	addne	r6, #4
 8025608:	2500      	movs	r5, #0
 802560a:	1f37      	subs	r7, r6, #4
 802560c:	4682      	mov	sl, r0
 802560e:	4690      	mov	r8, r2
 8025610:	9301      	str	r3, [sp, #4]
 8025612:	f846 5c04 	str.w	r5, [r6, #-4]
 8025616:	46b9      	mov	r9, r7
 8025618:	463c      	mov	r4, r7
 802561a:	9502      	str	r5, [sp, #8]
 802561c:	46ab      	mov	fp, r5
 802561e:	784a      	ldrb	r2, [r1, #1]
 8025620:	1c4b      	adds	r3, r1, #1
 8025622:	9303      	str	r3, [sp, #12]
 8025624:	b342      	cbz	r2, 8025678 <__hexnan+0x88>
 8025626:	4610      	mov	r0, r2
 8025628:	9105      	str	r1, [sp, #20]
 802562a:	9204      	str	r2, [sp, #16]
 802562c:	f7ff fd5e 	bl	80250ec <__hexdig_fun>
 8025630:	2800      	cmp	r0, #0
 8025632:	d14f      	bne.n	80256d4 <__hexnan+0xe4>
 8025634:	9a04      	ldr	r2, [sp, #16]
 8025636:	9905      	ldr	r1, [sp, #20]
 8025638:	2a20      	cmp	r2, #32
 802563a:	d818      	bhi.n	802566e <__hexnan+0x7e>
 802563c:	9b02      	ldr	r3, [sp, #8]
 802563e:	459b      	cmp	fp, r3
 8025640:	dd13      	ble.n	802566a <__hexnan+0x7a>
 8025642:	454c      	cmp	r4, r9
 8025644:	d206      	bcs.n	8025654 <__hexnan+0x64>
 8025646:	2d07      	cmp	r5, #7
 8025648:	dc04      	bgt.n	8025654 <__hexnan+0x64>
 802564a:	462a      	mov	r2, r5
 802564c:	4649      	mov	r1, r9
 802564e:	4620      	mov	r0, r4
 8025650:	f7ff ffa8 	bl	80255a4 <L_shift>
 8025654:	4544      	cmp	r4, r8
 8025656:	d950      	bls.n	80256fa <__hexnan+0x10a>
 8025658:	2300      	movs	r3, #0
 802565a:	f1a4 0904 	sub.w	r9, r4, #4
 802565e:	f844 3c04 	str.w	r3, [r4, #-4]
 8025662:	f8cd b008 	str.w	fp, [sp, #8]
 8025666:	464c      	mov	r4, r9
 8025668:	461d      	mov	r5, r3
 802566a:	9903      	ldr	r1, [sp, #12]
 802566c:	e7d7      	b.n	802561e <__hexnan+0x2e>
 802566e:	2a29      	cmp	r2, #41	; 0x29
 8025670:	d156      	bne.n	8025720 <__hexnan+0x130>
 8025672:	3102      	adds	r1, #2
 8025674:	f8ca 1000 	str.w	r1, [sl]
 8025678:	f1bb 0f00 	cmp.w	fp, #0
 802567c:	d050      	beq.n	8025720 <__hexnan+0x130>
 802567e:	454c      	cmp	r4, r9
 8025680:	d206      	bcs.n	8025690 <__hexnan+0xa0>
 8025682:	2d07      	cmp	r5, #7
 8025684:	dc04      	bgt.n	8025690 <__hexnan+0xa0>
 8025686:	462a      	mov	r2, r5
 8025688:	4649      	mov	r1, r9
 802568a:	4620      	mov	r0, r4
 802568c:	f7ff ff8a 	bl	80255a4 <L_shift>
 8025690:	4544      	cmp	r4, r8
 8025692:	d934      	bls.n	80256fe <__hexnan+0x10e>
 8025694:	f1a8 0204 	sub.w	r2, r8, #4
 8025698:	4623      	mov	r3, r4
 802569a:	f853 1b04 	ldr.w	r1, [r3], #4
 802569e:	f842 1f04 	str.w	r1, [r2, #4]!
 80256a2:	429f      	cmp	r7, r3
 80256a4:	d2f9      	bcs.n	802569a <__hexnan+0xaa>
 80256a6:	1b3b      	subs	r3, r7, r4
 80256a8:	f023 0303 	bic.w	r3, r3, #3
 80256ac:	3304      	adds	r3, #4
 80256ae:	3401      	adds	r4, #1
 80256b0:	3e03      	subs	r6, #3
 80256b2:	42b4      	cmp	r4, r6
 80256b4:	bf88      	it	hi
 80256b6:	2304      	movhi	r3, #4
 80256b8:	4443      	add	r3, r8
 80256ba:	2200      	movs	r2, #0
 80256bc:	f843 2b04 	str.w	r2, [r3], #4
 80256c0:	429f      	cmp	r7, r3
 80256c2:	d2fb      	bcs.n	80256bc <__hexnan+0xcc>
 80256c4:	683b      	ldr	r3, [r7, #0]
 80256c6:	b91b      	cbnz	r3, 80256d0 <__hexnan+0xe0>
 80256c8:	4547      	cmp	r7, r8
 80256ca:	d127      	bne.n	802571c <__hexnan+0x12c>
 80256cc:	2301      	movs	r3, #1
 80256ce:	603b      	str	r3, [r7, #0]
 80256d0:	2005      	movs	r0, #5
 80256d2:	e026      	b.n	8025722 <__hexnan+0x132>
 80256d4:	3501      	adds	r5, #1
 80256d6:	2d08      	cmp	r5, #8
 80256d8:	f10b 0b01 	add.w	fp, fp, #1
 80256dc:	dd06      	ble.n	80256ec <__hexnan+0xfc>
 80256de:	4544      	cmp	r4, r8
 80256e0:	d9c3      	bls.n	802566a <__hexnan+0x7a>
 80256e2:	2300      	movs	r3, #0
 80256e4:	f844 3c04 	str.w	r3, [r4, #-4]
 80256e8:	2501      	movs	r5, #1
 80256ea:	3c04      	subs	r4, #4
 80256ec:	6822      	ldr	r2, [r4, #0]
 80256ee:	f000 000f 	and.w	r0, r0, #15
 80256f2:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 80256f6:	6022      	str	r2, [r4, #0]
 80256f8:	e7b7      	b.n	802566a <__hexnan+0x7a>
 80256fa:	2508      	movs	r5, #8
 80256fc:	e7b5      	b.n	802566a <__hexnan+0x7a>
 80256fe:	9b01      	ldr	r3, [sp, #4]
 8025700:	2b00      	cmp	r3, #0
 8025702:	d0df      	beq.n	80256c4 <__hexnan+0xd4>
 8025704:	f04f 32ff 	mov.w	r2, #4294967295
 8025708:	f1c3 0320 	rsb	r3, r3, #32
 802570c:	fa22 f303 	lsr.w	r3, r2, r3
 8025710:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8025714:	401a      	ands	r2, r3
 8025716:	f846 2c04 	str.w	r2, [r6, #-4]
 802571a:	e7d3      	b.n	80256c4 <__hexnan+0xd4>
 802571c:	3f04      	subs	r7, #4
 802571e:	e7d1      	b.n	80256c4 <__hexnan+0xd4>
 8025720:	2004      	movs	r0, #4
 8025722:	b007      	add	sp, #28
 8025724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025728 <__retarget_lock_init_recursive>:
 8025728:	4770      	bx	lr

0802572a <__retarget_lock_acquire_recursive>:
 802572a:	4770      	bx	lr

0802572c <__retarget_lock_release>:
 802572c:	4770      	bx	lr

0802572e <__retarget_lock_release_recursive>:
 802572e:	4770      	bx	lr

08025730 <__ascii_mbtowc>:
 8025730:	b082      	sub	sp, #8
 8025732:	b901      	cbnz	r1, 8025736 <__ascii_mbtowc+0x6>
 8025734:	a901      	add	r1, sp, #4
 8025736:	b142      	cbz	r2, 802574a <__ascii_mbtowc+0x1a>
 8025738:	b14b      	cbz	r3, 802574e <__ascii_mbtowc+0x1e>
 802573a:	7813      	ldrb	r3, [r2, #0]
 802573c:	600b      	str	r3, [r1, #0]
 802573e:	7812      	ldrb	r2, [r2, #0]
 8025740:	1e10      	subs	r0, r2, #0
 8025742:	bf18      	it	ne
 8025744:	2001      	movne	r0, #1
 8025746:	b002      	add	sp, #8
 8025748:	4770      	bx	lr
 802574a:	4610      	mov	r0, r2
 802574c:	e7fb      	b.n	8025746 <__ascii_mbtowc+0x16>
 802574e:	f06f 0001 	mvn.w	r0, #1
 8025752:	e7f8      	b.n	8025746 <__ascii_mbtowc+0x16>

08025754 <__malloc_lock>:
 8025754:	4801      	ldr	r0, [pc, #4]	; (802575c <__malloc_lock+0x8>)
 8025756:	f7ff bfe8 	b.w	802572a <__retarget_lock_acquire_recursive>
 802575a:	bf00      	nop
 802575c:	200007c4 	.word	0x200007c4

08025760 <__malloc_unlock>:
 8025760:	4801      	ldr	r0, [pc, #4]	; (8025768 <__malloc_unlock+0x8>)
 8025762:	f7ff bfe4 	b.w	802572e <__retarget_lock_release_recursive>
 8025766:	bf00      	nop
 8025768:	200007c4 	.word	0x200007c4

0802576c <_Balloc>:
 802576c:	b570      	push	{r4, r5, r6, lr}
 802576e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8025770:	4604      	mov	r4, r0
 8025772:	460d      	mov	r5, r1
 8025774:	b976      	cbnz	r6, 8025794 <_Balloc+0x28>
 8025776:	2010      	movs	r0, #16
 8025778:	f7fe fb2e 	bl	8023dd8 <malloc>
 802577c:	4602      	mov	r2, r0
 802577e:	6260      	str	r0, [r4, #36]	; 0x24
 8025780:	b920      	cbnz	r0, 802578c <_Balloc+0x20>
 8025782:	4b18      	ldr	r3, [pc, #96]	; (80257e4 <_Balloc+0x78>)
 8025784:	4818      	ldr	r0, [pc, #96]	; (80257e8 <_Balloc+0x7c>)
 8025786:	2166      	movs	r1, #102	; 0x66
 8025788:	f000 ffd0 	bl	802672c <__assert_func>
 802578c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8025790:	6006      	str	r6, [r0, #0]
 8025792:	60c6      	str	r6, [r0, #12]
 8025794:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8025796:	68f3      	ldr	r3, [r6, #12]
 8025798:	b183      	cbz	r3, 80257bc <_Balloc+0x50>
 802579a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802579c:	68db      	ldr	r3, [r3, #12]
 802579e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80257a2:	b9b8      	cbnz	r0, 80257d4 <_Balloc+0x68>
 80257a4:	2101      	movs	r1, #1
 80257a6:	fa01 f605 	lsl.w	r6, r1, r5
 80257aa:	1d72      	adds	r2, r6, #5
 80257ac:	0092      	lsls	r2, r2, #2
 80257ae:	4620      	mov	r0, r4
 80257b0:	f000 fc97 	bl	80260e2 <_calloc_r>
 80257b4:	b160      	cbz	r0, 80257d0 <_Balloc+0x64>
 80257b6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80257ba:	e00e      	b.n	80257da <_Balloc+0x6e>
 80257bc:	2221      	movs	r2, #33	; 0x21
 80257be:	2104      	movs	r1, #4
 80257c0:	4620      	mov	r0, r4
 80257c2:	f000 fc8e 	bl	80260e2 <_calloc_r>
 80257c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80257c8:	60f0      	str	r0, [r6, #12]
 80257ca:	68db      	ldr	r3, [r3, #12]
 80257cc:	2b00      	cmp	r3, #0
 80257ce:	d1e4      	bne.n	802579a <_Balloc+0x2e>
 80257d0:	2000      	movs	r0, #0
 80257d2:	bd70      	pop	{r4, r5, r6, pc}
 80257d4:	6802      	ldr	r2, [r0, #0]
 80257d6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80257da:	2300      	movs	r3, #0
 80257dc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80257e0:	e7f7      	b.n	80257d2 <_Balloc+0x66>
 80257e2:	bf00      	nop
 80257e4:	080281f4 	.word	0x080281f4
 80257e8:	0802820b 	.word	0x0802820b

080257ec <_Bfree>:
 80257ec:	b570      	push	{r4, r5, r6, lr}
 80257ee:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80257f0:	4605      	mov	r5, r0
 80257f2:	460c      	mov	r4, r1
 80257f4:	b976      	cbnz	r6, 8025814 <_Bfree+0x28>
 80257f6:	2010      	movs	r0, #16
 80257f8:	f7fe faee 	bl	8023dd8 <malloc>
 80257fc:	4602      	mov	r2, r0
 80257fe:	6268      	str	r0, [r5, #36]	; 0x24
 8025800:	b920      	cbnz	r0, 802580c <_Bfree+0x20>
 8025802:	4b09      	ldr	r3, [pc, #36]	; (8025828 <_Bfree+0x3c>)
 8025804:	4809      	ldr	r0, [pc, #36]	; (802582c <_Bfree+0x40>)
 8025806:	218a      	movs	r1, #138	; 0x8a
 8025808:	f000 ff90 	bl	802672c <__assert_func>
 802580c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8025810:	6006      	str	r6, [r0, #0]
 8025812:	60c6      	str	r6, [r0, #12]
 8025814:	b13c      	cbz	r4, 8025826 <_Bfree+0x3a>
 8025816:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8025818:	6862      	ldr	r2, [r4, #4]
 802581a:	68db      	ldr	r3, [r3, #12]
 802581c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8025820:	6021      	str	r1, [r4, #0]
 8025822:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8025826:	bd70      	pop	{r4, r5, r6, pc}
 8025828:	080281f4 	.word	0x080281f4
 802582c:	0802820b 	.word	0x0802820b

08025830 <__multadd>:
 8025830:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025834:	690e      	ldr	r6, [r1, #16]
 8025836:	4607      	mov	r7, r0
 8025838:	4698      	mov	r8, r3
 802583a:	460c      	mov	r4, r1
 802583c:	f101 0014 	add.w	r0, r1, #20
 8025840:	2300      	movs	r3, #0
 8025842:	6805      	ldr	r5, [r0, #0]
 8025844:	b2a9      	uxth	r1, r5
 8025846:	fb02 8101 	mla	r1, r2, r1, r8
 802584a:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 802584e:	0c2d      	lsrs	r5, r5, #16
 8025850:	fb02 c505 	mla	r5, r2, r5, ip
 8025854:	b289      	uxth	r1, r1
 8025856:	3301      	adds	r3, #1
 8025858:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 802585c:	429e      	cmp	r6, r3
 802585e:	f840 1b04 	str.w	r1, [r0], #4
 8025862:	ea4f 4815 	mov.w	r8, r5, lsr #16
 8025866:	dcec      	bgt.n	8025842 <__multadd+0x12>
 8025868:	f1b8 0f00 	cmp.w	r8, #0
 802586c:	d022      	beq.n	80258b4 <__multadd+0x84>
 802586e:	68a3      	ldr	r3, [r4, #8]
 8025870:	42b3      	cmp	r3, r6
 8025872:	dc19      	bgt.n	80258a8 <__multadd+0x78>
 8025874:	6861      	ldr	r1, [r4, #4]
 8025876:	4638      	mov	r0, r7
 8025878:	3101      	adds	r1, #1
 802587a:	f7ff ff77 	bl	802576c <_Balloc>
 802587e:	4605      	mov	r5, r0
 8025880:	b928      	cbnz	r0, 802588e <__multadd+0x5e>
 8025882:	4602      	mov	r2, r0
 8025884:	4b0d      	ldr	r3, [pc, #52]	; (80258bc <__multadd+0x8c>)
 8025886:	480e      	ldr	r0, [pc, #56]	; (80258c0 <__multadd+0x90>)
 8025888:	21b5      	movs	r1, #181	; 0xb5
 802588a:	f000 ff4f 	bl	802672c <__assert_func>
 802588e:	6922      	ldr	r2, [r4, #16]
 8025890:	3202      	adds	r2, #2
 8025892:	f104 010c 	add.w	r1, r4, #12
 8025896:	0092      	lsls	r2, r2, #2
 8025898:	300c      	adds	r0, #12
 802589a:	f7fe fabb 	bl	8023e14 <memcpy>
 802589e:	4621      	mov	r1, r4
 80258a0:	4638      	mov	r0, r7
 80258a2:	f7ff ffa3 	bl	80257ec <_Bfree>
 80258a6:	462c      	mov	r4, r5
 80258a8:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 80258ac:	3601      	adds	r6, #1
 80258ae:	f8c3 8014 	str.w	r8, [r3, #20]
 80258b2:	6126      	str	r6, [r4, #16]
 80258b4:	4620      	mov	r0, r4
 80258b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80258ba:	bf00      	nop
 80258bc:	08028166 	.word	0x08028166
 80258c0:	0802820b 	.word	0x0802820b

080258c4 <__s2b>:
 80258c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80258c8:	460c      	mov	r4, r1
 80258ca:	4615      	mov	r5, r2
 80258cc:	461f      	mov	r7, r3
 80258ce:	2209      	movs	r2, #9
 80258d0:	3308      	adds	r3, #8
 80258d2:	4606      	mov	r6, r0
 80258d4:	fb93 f3f2 	sdiv	r3, r3, r2
 80258d8:	2100      	movs	r1, #0
 80258da:	2201      	movs	r2, #1
 80258dc:	429a      	cmp	r2, r3
 80258de:	db09      	blt.n	80258f4 <__s2b+0x30>
 80258e0:	4630      	mov	r0, r6
 80258e2:	f7ff ff43 	bl	802576c <_Balloc>
 80258e6:	b940      	cbnz	r0, 80258fa <__s2b+0x36>
 80258e8:	4602      	mov	r2, r0
 80258ea:	4b19      	ldr	r3, [pc, #100]	; (8025950 <__s2b+0x8c>)
 80258ec:	4819      	ldr	r0, [pc, #100]	; (8025954 <__s2b+0x90>)
 80258ee:	21ce      	movs	r1, #206	; 0xce
 80258f0:	f000 ff1c 	bl	802672c <__assert_func>
 80258f4:	0052      	lsls	r2, r2, #1
 80258f6:	3101      	adds	r1, #1
 80258f8:	e7f0      	b.n	80258dc <__s2b+0x18>
 80258fa:	9b08      	ldr	r3, [sp, #32]
 80258fc:	6143      	str	r3, [r0, #20]
 80258fe:	2d09      	cmp	r5, #9
 8025900:	f04f 0301 	mov.w	r3, #1
 8025904:	6103      	str	r3, [r0, #16]
 8025906:	dd16      	ble.n	8025936 <__s2b+0x72>
 8025908:	f104 0909 	add.w	r9, r4, #9
 802590c:	46c8      	mov	r8, r9
 802590e:	442c      	add	r4, r5
 8025910:	f818 3b01 	ldrb.w	r3, [r8], #1
 8025914:	4601      	mov	r1, r0
 8025916:	3b30      	subs	r3, #48	; 0x30
 8025918:	220a      	movs	r2, #10
 802591a:	4630      	mov	r0, r6
 802591c:	f7ff ff88 	bl	8025830 <__multadd>
 8025920:	45a0      	cmp	r8, r4
 8025922:	d1f5      	bne.n	8025910 <__s2b+0x4c>
 8025924:	f1a5 0408 	sub.w	r4, r5, #8
 8025928:	444c      	add	r4, r9
 802592a:	1b2d      	subs	r5, r5, r4
 802592c:	1963      	adds	r3, r4, r5
 802592e:	42bb      	cmp	r3, r7
 8025930:	db04      	blt.n	802593c <__s2b+0x78>
 8025932:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025936:	340a      	adds	r4, #10
 8025938:	2509      	movs	r5, #9
 802593a:	e7f6      	b.n	802592a <__s2b+0x66>
 802593c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8025940:	4601      	mov	r1, r0
 8025942:	3b30      	subs	r3, #48	; 0x30
 8025944:	220a      	movs	r2, #10
 8025946:	4630      	mov	r0, r6
 8025948:	f7ff ff72 	bl	8025830 <__multadd>
 802594c:	e7ee      	b.n	802592c <__s2b+0x68>
 802594e:	bf00      	nop
 8025950:	08028166 	.word	0x08028166
 8025954:	0802820b 	.word	0x0802820b

08025958 <__hi0bits>:
 8025958:	0c03      	lsrs	r3, r0, #16
 802595a:	041b      	lsls	r3, r3, #16
 802595c:	b9d3      	cbnz	r3, 8025994 <__hi0bits+0x3c>
 802595e:	0400      	lsls	r0, r0, #16
 8025960:	2310      	movs	r3, #16
 8025962:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8025966:	bf04      	itt	eq
 8025968:	0200      	lsleq	r0, r0, #8
 802596a:	3308      	addeq	r3, #8
 802596c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8025970:	bf04      	itt	eq
 8025972:	0100      	lsleq	r0, r0, #4
 8025974:	3304      	addeq	r3, #4
 8025976:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 802597a:	bf04      	itt	eq
 802597c:	0080      	lsleq	r0, r0, #2
 802597e:	3302      	addeq	r3, #2
 8025980:	2800      	cmp	r0, #0
 8025982:	db05      	blt.n	8025990 <__hi0bits+0x38>
 8025984:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8025988:	f103 0301 	add.w	r3, r3, #1
 802598c:	bf08      	it	eq
 802598e:	2320      	moveq	r3, #32
 8025990:	4618      	mov	r0, r3
 8025992:	4770      	bx	lr
 8025994:	2300      	movs	r3, #0
 8025996:	e7e4      	b.n	8025962 <__hi0bits+0xa>

08025998 <__lo0bits>:
 8025998:	6803      	ldr	r3, [r0, #0]
 802599a:	f013 0207 	ands.w	r2, r3, #7
 802599e:	4601      	mov	r1, r0
 80259a0:	d00b      	beq.n	80259ba <__lo0bits+0x22>
 80259a2:	07da      	lsls	r2, r3, #31
 80259a4:	d424      	bmi.n	80259f0 <__lo0bits+0x58>
 80259a6:	0798      	lsls	r0, r3, #30
 80259a8:	bf49      	itett	mi
 80259aa:	085b      	lsrmi	r3, r3, #1
 80259ac:	089b      	lsrpl	r3, r3, #2
 80259ae:	2001      	movmi	r0, #1
 80259b0:	600b      	strmi	r3, [r1, #0]
 80259b2:	bf5c      	itt	pl
 80259b4:	600b      	strpl	r3, [r1, #0]
 80259b6:	2002      	movpl	r0, #2
 80259b8:	4770      	bx	lr
 80259ba:	b298      	uxth	r0, r3
 80259bc:	b9b0      	cbnz	r0, 80259ec <__lo0bits+0x54>
 80259be:	0c1b      	lsrs	r3, r3, #16
 80259c0:	2010      	movs	r0, #16
 80259c2:	f013 0fff 	tst.w	r3, #255	; 0xff
 80259c6:	bf04      	itt	eq
 80259c8:	0a1b      	lsreq	r3, r3, #8
 80259ca:	3008      	addeq	r0, #8
 80259cc:	071a      	lsls	r2, r3, #28
 80259ce:	bf04      	itt	eq
 80259d0:	091b      	lsreq	r3, r3, #4
 80259d2:	3004      	addeq	r0, #4
 80259d4:	079a      	lsls	r2, r3, #30
 80259d6:	bf04      	itt	eq
 80259d8:	089b      	lsreq	r3, r3, #2
 80259da:	3002      	addeq	r0, #2
 80259dc:	07da      	lsls	r2, r3, #31
 80259de:	d403      	bmi.n	80259e8 <__lo0bits+0x50>
 80259e0:	085b      	lsrs	r3, r3, #1
 80259e2:	f100 0001 	add.w	r0, r0, #1
 80259e6:	d005      	beq.n	80259f4 <__lo0bits+0x5c>
 80259e8:	600b      	str	r3, [r1, #0]
 80259ea:	4770      	bx	lr
 80259ec:	4610      	mov	r0, r2
 80259ee:	e7e8      	b.n	80259c2 <__lo0bits+0x2a>
 80259f0:	2000      	movs	r0, #0
 80259f2:	4770      	bx	lr
 80259f4:	2020      	movs	r0, #32
 80259f6:	4770      	bx	lr

080259f8 <__i2b>:
 80259f8:	b510      	push	{r4, lr}
 80259fa:	460c      	mov	r4, r1
 80259fc:	2101      	movs	r1, #1
 80259fe:	f7ff feb5 	bl	802576c <_Balloc>
 8025a02:	4602      	mov	r2, r0
 8025a04:	b928      	cbnz	r0, 8025a12 <__i2b+0x1a>
 8025a06:	4b05      	ldr	r3, [pc, #20]	; (8025a1c <__i2b+0x24>)
 8025a08:	4805      	ldr	r0, [pc, #20]	; (8025a20 <__i2b+0x28>)
 8025a0a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8025a0e:	f000 fe8d 	bl	802672c <__assert_func>
 8025a12:	2301      	movs	r3, #1
 8025a14:	6144      	str	r4, [r0, #20]
 8025a16:	6103      	str	r3, [r0, #16]
 8025a18:	bd10      	pop	{r4, pc}
 8025a1a:	bf00      	nop
 8025a1c:	08028166 	.word	0x08028166
 8025a20:	0802820b 	.word	0x0802820b

08025a24 <__multiply>:
 8025a24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025a28:	4614      	mov	r4, r2
 8025a2a:	690a      	ldr	r2, [r1, #16]
 8025a2c:	6923      	ldr	r3, [r4, #16]
 8025a2e:	429a      	cmp	r2, r3
 8025a30:	bfb8      	it	lt
 8025a32:	460b      	movlt	r3, r1
 8025a34:	460d      	mov	r5, r1
 8025a36:	bfbc      	itt	lt
 8025a38:	4625      	movlt	r5, r4
 8025a3a:	461c      	movlt	r4, r3
 8025a3c:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8025a40:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8025a44:	68ab      	ldr	r3, [r5, #8]
 8025a46:	6869      	ldr	r1, [r5, #4]
 8025a48:	eb0a 0709 	add.w	r7, sl, r9
 8025a4c:	42bb      	cmp	r3, r7
 8025a4e:	b085      	sub	sp, #20
 8025a50:	bfb8      	it	lt
 8025a52:	3101      	addlt	r1, #1
 8025a54:	f7ff fe8a 	bl	802576c <_Balloc>
 8025a58:	b930      	cbnz	r0, 8025a68 <__multiply+0x44>
 8025a5a:	4602      	mov	r2, r0
 8025a5c:	4b42      	ldr	r3, [pc, #264]	; (8025b68 <__multiply+0x144>)
 8025a5e:	4843      	ldr	r0, [pc, #268]	; (8025b6c <__multiply+0x148>)
 8025a60:	f240 115d 	movw	r1, #349	; 0x15d
 8025a64:	f000 fe62 	bl	802672c <__assert_func>
 8025a68:	f100 0614 	add.w	r6, r0, #20
 8025a6c:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8025a70:	4633      	mov	r3, r6
 8025a72:	2200      	movs	r2, #0
 8025a74:	4543      	cmp	r3, r8
 8025a76:	d31e      	bcc.n	8025ab6 <__multiply+0x92>
 8025a78:	f105 0c14 	add.w	ip, r5, #20
 8025a7c:	f104 0314 	add.w	r3, r4, #20
 8025a80:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8025a84:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8025a88:	9202      	str	r2, [sp, #8]
 8025a8a:	ebac 0205 	sub.w	r2, ip, r5
 8025a8e:	3a15      	subs	r2, #21
 8025a90:	f022 0203 	bic.w	r2, r2, #3
 8025a94:	3204      	adds	r2, #4
 8025a96:	f105 0115 	add.w	r1, r5, #21
 8025a9a:	458c      	cmp	ip, r1
 8025a9c:	bf38      	it	cc
 8025a9e:	2204      	movcc	r2, #4
 8025aa0:	9201      	str	r2, [sp, #4]
 8025aa2:	9a02      	ldr	r2, [sp, #8]
 8025aa4:	9303      	str	r3, [sp, #12]
 8025aa6:	429a      	cmp	r2, r3
 8025aa8:	d808      	bhi.n	8025abc <__multiply+0x98>
 8025aaa:	2f00      	cmp	r7, #0
 8025aac:	dc55      	bgt.n	8025b5a <__multiply+0x136>
 8025aae:	6107      	str	r7, [r0, #16]
 8025ab0:	b005      	add	sp, #20
 8025ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025ab6:	f843 2b04 	str.w	r2, [r3], #4
 8025aba:	e7db      	b.n	8025a74 <__multiply+0x50>
 8025abc:	f8b3 a000 	ldrh.w	sl, [r3]
 8025ac0:	f1ba 0f00 	cmp.w	sl, #0
 8025ac4:	d020      	beq.n	8025b08 <__multiply+0xe4>
 8025ac6:	f105 0e14 	add.w	lr, r5, #20
 8025aca:	46b1      	mov	r9, r6
 8025acc:	2200      	movs	r2, #0
 8025ace:	f85e 4b04 	ldr.w	r4, [lr], #4
 8025ad2:	f8d9 b000 	ldr.w	fp, [r9]
 8025ad6:	b2a1      	uxth	r1, r4
 8025ad8:	fa1f fb8b 	uxth.w	fp, fp
 8025adc:	fb0a b101 	mla	r1, sl, r1, fp
 8025ae0:	4411      	add	r1, r2
 8025ae2:	f8d9 2000 	ldr.w	r2, [r9]
 8025ae6:	0c24      	lsrs	r4, r4, #16
 8025ae8:	0c12      	lsrs	r2, r2, #16
 8025aea:	fb0a 2404 	mla	r4, sl, r4, r2
 8025aee:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 8025af2:	b289      	uxth	r1, r1
 8025af4:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8025af8:	45f4      	cmp	ip, lr
 8025afa:	f849 1b04 	str.w	r1, [r9], #4
 8025afe:	ea4f 4214 	mov.w	r2, r4, lsr #16
 8025b02:	d8e4      	bhi.n	8025ace <__multiply+0xaa>
 8025b04:	9901      	ldr	r1, [sp, #4]
 8025b06:	5072      	str	r2, [r6, r1]
 8025b08:	9a03      	ldr	r2, [sp, #12]
 8025b0a:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8025b0e:	3304      	adds	r3, #4
 8025b10:	f1b9 0f00 	cmp.w	r9, #0
 8025b14:	d01f      	beq.n	8025b56 <__multiply+0x132>
 8025b16:	6834      	ldr	r4, [r6, #0]
 8025b18:	f105 0114 	add.w	r1, r5, #20
 8025b1c:	46b6      	mov	lr, r6
 8025b1e:	f04f 0a00 	mov.w	sl, #0
 8025b22:	880a      	ldrh	r2, [r1, #0]
 8025b24:	f8be b002 	ldrh.w	fp, [lr, #2]
 8025b28:	fb09 b202 	mla	r2, r9, r2, fp
 8025b2c:	4492      	add	sl, r2
 8025b2e:	b2a4      	uxth	r4, r4
 8025b30:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8025b34:	f84e 4b04 	str.w	r4, [lr], #4
 8025b38:	f851 4b04 	ldr.w	r4, [r1], #4
 8025b3c:	f8be 2000 	ldrh.w	r2, [lr]
 8025b40:	0c24      	lsrs	r4, r4, #16
 8025b42:	fb09 2404 	mla	r4, r9, r4, r2
 8025b46:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 8025b4a:	458c      	cmp	ip, r1
 8025b4c:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8025b50:	d8e7      	bhi.n	8025b22 <__multiply+0xfe>
 8025b52:	9a01      	ldr	r2, [sp, #4]
 8025b54:	50b4      	str	r4, [r6, r2]
 8025b56:	3604      	adds	r6, #4
 8025b58:	e7a3      	b.n	8025aa2 <__multiply+0x7e>
 8025b5a:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8025b5e:	2b00      	cmp	r3, #0
 8025b60:	d1a5      	bne.n	8025aae <__multiply+0x8a>
 8025b62:	3f01      	subs	r7, #1
 8025b64:	e7a1      	b.n	8025aaa <__multiply+0x86>
 8025b66:	bf00      	nop
 8025b68:	08028166 	.word	0x08028166
 8025b6c:	0802820b 	.word	0x0802820b

08025b70 <__pow5mult>:
 8025b70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025b74:	4615      	mov	r5, r2
 8025b76:	f012 0203 	ands.w	r2, r2, #3
 8025b7a:	4606      	mov	r6, r0
 8025b7c:	460f      	mov	r7, r1
 8025b7e:	d007      	beq.n	8025b90 <__pow5mult+0x20>
 8025b80:	4c25      	ldr	r4, [pc, #148]	; (8025c18 <__pow5mult+0xa8>)
 8025b82:	3a01      	subs	r2, #1
 8025b84:	2300      	movs	r3, #0
 8025b86:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8025b8a:	f7ff fe51 	bl	8025830 <__multadd>
 8025b8e:	4607      	mov	r7, r0
 8025b90:	10ad      	asrs	r5, r5, #2
 8025b92:	d03d      	beq.n	8025c10 <__pow5mult+0xa0>
 8025b94:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8025b96:	b97c      	cbnz	r4, 8025bb8 <__pow5mult+0x48>
 8025b98:	2010      	movs	r0, #16
 8025b9a:	f7fe f91d 	bl	8023dd8 <malloc>
 8025b9e:	4602      	mov	r2, r0
 8025ba0:	6270      	str	r0, [r6, #36]	; 0x24
 8025ba2:	b928      	cbnz	r0, 8025bb0 <__pow5mult+0x40>
 8025ba4:	4b1d      	ldr	r3, [pc, #116]	; (8025c1c <__pow5mult+0xac>)
 8025ba6:	481e      	ldr	r0, [pc, #120]	; (8025c20 <__pow5mult+0xb0>)
 8025ba8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8025bac:	f000 fdbe 	bl	802672c <__assert_func>
 8025bb0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8025bb4:	6004      	str	r4, [r0, #0]
 8025bb6:	60c4      	str	r4, [r0, #12]
 8025bb8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8025bbc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8025bc0:	b94c      	cbnz	r4, 8025bd6 <__pow5mult+0x66>
 8025bc2:	f240 2171 	movw	r1, #625	; 0x271
 8025bc6:	4630      	mov	r0, r6
 8025bc8:	f7ff ff16 	bl	80259f8 <__i2b>
 8025bcc:	2300      	movs	r3, #0
 8025bce:	f8c8 0008 	str.w	r0, [r8, #8]
 8025bd2:	4604      	mov	r4, r0
 8025bd4:	6003      	str	r3, [r0, #0]
 8025bd6:	f04f 0900 	mov.w	r9, #0
 8025bda:	07eb      	lsls	r3, r5, #31
 8025bdc:	d50a      	bpl.n	8025bf4 <__pow5mult+0x84>
 8025bde:	4639      	mov	r1, r7
 8025be0:	4622      	mov	r2, r4
 8025be2:	4630      	mov	r0, r6
 8025be4:	f7ff ff1e 	bl	8025a24 <__multiply>
 8025be8:	4639      	mov	r1, r7
 8025bea:	4680      	mov	r8, r0
 8025bec:	4630      	mov	r0, r6
 8025bee:	f7ff fdfd 	bl	80257ec <_Bfree>
 8025bf2:	4647      	mov	r7, r8
 8025bf4:	106d      	asrs	r5, r5, #1
 8025bf6:	d00b      	beq.n	8025c10 <__pow5mult+0xa0>
 8025bf8:	6820      	ldr	r0, [r4, #0]
 8025bfa:	b938      	cbnz	r0, 8025c0c <__pow5mult+0x9c>
 8025bfc:	4622      	mov	r2, r4
 8025bfe:	4621      	mov	r1, r4
 8025c00:	4630      	mov	r0, r6
 8025c02:	f7ff ff0f 	bl	8025a24 <__multiply>
 8025c06:	6020      	str	r0, [r4, #0]
 8025c08:	f8c0 9000 	str.w	r9, [r0]
 8025c0c:	4604      	mov	r4, r0
 8025c0e:	e7e4      	b.n	8025bda <__pow5mult+0x6a>
 8025c10:	4638      	mov	r0, r7
 8025c12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025c16:	bf00      	nop
 8025c18:	08028360 	.word	0x08028360
 8025c1c:	080281f4 	.word	0x080281f4
 8025c20:	0802820b 	.word	0x0802820b

08025c24 <__lshift>:
 8025c24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025c28:	460c      	mov	r4, r1
 8025c2a:	6849      	ldr	r1, [r1, #4]
 8025c2c:	6923      	ldr	r3, [r4, #16]
 8025c2e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8025c32:	68a3      	ldr	r3, [r4, #8]
 8025c34:	4607      	mov	r7, r0
 8025c36:	4691      	mov	r9, r2
 8025c38:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8025c3c:	f108 0601 	add.w	r6, r8, #1
 8025c40:	42b3      	cmp	r3, r6
 8025c42:	db0b      	blt.n	8025c5c <__lshift+0x38>
 8025c44:	4638      	mov	r0, r7
 8025c46:	f7ff fd91 	bl	802576c <_Balloc>
 8025c4a:	4605      	mov	r5, r0
 8025c4c:	b948      	cbnz	r0, 8025c62 <__lshift+0x3e>
 8025c4e:	4602      	mov	r2, r0
 8025c50:	4b28      	ldr	r3, [pc, #160]	; (8025cf4 <__lshift+0xd0>)
 8025c52:	4829      	ldr	r0, [pc, #164]	; (8025cf8 <__lshift+0xd4>)
 8025c54:	f240 11d9 	movw	r1, #473	; 0x1d9
 8025c58:	f000 fd68 	bl	802672c <__assert_func>
 8025c5c:	3101      	adds	r1, #1
 8025c5e:	005b      	lsls	r3, r3, #1
 8025c60:	e7ee      	b.n	8025c40 <__lshift+0x1c>
 8025c62:	2300      	movs	r3, #0
 8025c64:	f100 0114 	add.w	r1, r0, #20
 8025c68:	f100 0210 	add.w	r2, r0, #16
 8025c6c:	4618      	mov	r0, r3
 8025c6e:	4553      	cmp	r3, sl
 8025c70:	db33      	blt.n	8025cda <__lshift+0xb6>
 8025c72:	6920      	ldr	r0, [r4, #16]
 8025c74:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8025c78:	f104 0314 	add.w	r3, r4, #20
 8025c7c:	f019 091f 	ands.w	r9, r9, #31
 8025c80:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8025c84:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8025c88:	d02b      	beq.n	8025ce2 <__lshift+0xbe>
 8025c8a:	f1c9 0e20 	rsb	lr, r9, #32
 8025c8e:	468a      	mov	sl, r1
 8025c90:	2200      	movs	r2, #0
 8025c92:	6818      	ldr	r0, [r3, #0]
 8025c94:	fa00 f009 	lsl.w	r0, r0, r9
 8025c98:	4302      	orrs	r2, r0
 8025c9a:	f84a 2b04 	str.w	r2, [sl], #4
 8025c9e:	f853 2b04 	ldr.w	r2, [r3], #4
 8025ca2:	459c      	cmp	ip, r3
 8025ca4:	fa22 f20e 	lsr.w	r2, r2, lr
 8025ca8:	d8f3      	bhi.n	8025c92 <__lshift+0x6e>
 8025caa:	ebac 0304 	sub.w	r3, ip, r4
 8025cae:	3b15      	subs	r3, #21
 8025cb0:	f023 0303 	bic.w	r3, r3, #3
 8025cb4:	3304      	adds	r3, #4
 8025cb6:	f104 0015 	add.w	r0, r4, #21
 8025cba:	4584      	cmp	ip, r0
 8025cbc:	bf38      	it	cc
 8025cbe:	2304      	movcc	r3, #4
 8025cc0:	50ca      	str	r2, [r1, r3]
 8025cc2:	b10a      	cbz	r2, 8025cc8 <__lshift+0xa4>
 8025cc4:	f108 0602 	add.w	r6, r8, #2
 8025cc8:	3e01      	subs	r6, #1
 8025cca:	4638      	mov	r0, r7
 8025ccc:	612e      	str	r6, [r5, #16]
 8025cce:	4621      	mov	r1, r4
 8025cd0:	f7ff fd8c 	bl	80257ec <_Bfree>
 8025cd4:	4628      	mov	r0, r5
 8025cd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025cda:	f842 0f04 	str.w	r0, [r2, #4]!
 8025cde:	3301      	adds	r3, #1
 8025ce0:	e7c5      	b.n	8025c6e <__lshift+0x4a>
 8025ce2:	3904      	subs	r1, #4
 8025ce4:	f853 2b04 	ldr.w	r2, [r3], #4
 8025ce8:	f841 2f04 	str.w	r2, [r1, #4]!
 8025cec:	459c      	cmp	ip, r3
 8025cee:	d8f9      	bhi.n	8025ce4 <__lshift+0xc0>
 8025cf0:	e7ea      	b.n	8025cc8 <__lshift+0xa4>
 8025cf2:	bf00      	nop
 8025cf4:	08028166 	.word	0x08028166
 8025cf8:	0802820b 	.word	0x0802820b

08025cfc <__mcmp>:
 8025cfc:	b530      	push	{r4, r5, lr}
 8025cfe:	6902      	ldr	r2, [r0, #16]
 8025d00:	690c      	ldr	r4, [r1, #16]
 8025d02:	1b12      	subs	r2, r2, r4
 8025d04:	d10e      	bne.n	8025d24 <__mcmp+0x28>
 8025d06:	f100 0314 	add.w	r3, r0, #20
 8025d0a:	3114      	adds	r1, #20
 8025d0c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8025d10:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8025d14:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8025d18:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8025d1c:	42a5      	cmp	r5, r4
 8025d1e:	d003      	beq.n	8025d28 <__mcmp+0x2c>
 8025d20:	d305      	bcc.n	8025d2e <__mcmp+0x32>
 8025d22:	2201      	movs	r2, #1
 8025d24:	4610      	mov	r0, r2
 8025d26:	bd30      	pop	{r4, r5, pc}
 8025d28:	4283      	cmp	r3, r0
 8025d2a:	d3f3      	bcc.n	8025d14 <__mcmp+0x18>
 8025d2c:	e7fa      	b.n	8025d24 <__mcmp+0x28>
 8025d2e:	f04f 32ff 	mov.w	r2, #4294967295
 8025d32:	e7f7      	b.n	8025d24 <__mcmp+0x28>

08025d34 <__mdiff>:
 8025d34:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025d38:	460c      	mov	r4, r1
 8025d3a:	4606      	mov	r6, r0
 8025d3c:	4611      	mov	r1, r2
 8025d3e:	4620      	mov	r0, r4
 8025d40:	4617      	mov	r7, r2
 8025d42:	f7ff ffdb 	bl	8025cfc <__mcmp>
 8025d46:	1e05      	subs	r5, r0, #0
 8025d48:	d110      	bne.n	8025d6c <__mdiff+0x38>
 8025d4a:	4629      	mov	r1, r5
 8025d4c:	4630      	mov	r0, r6
 8025d4e:	f7ff fd0d 	bl	802576c <_Balloc>
 8025d52:	b930      	cbnz	r0, 8025d62 <__mdiff+0x2e>
 8025d54:	4b39      	ldr	r3, [pc, #228]	; (8025e3c <__mdiff+0x108>)
 8025d56:	4602      	mov	r2, r0
 8025d58:	f240 2132 	movw	r1, #562	; 0x232
 8025d5c:	4838      	ldr	r0, [pc, #224]	; (8025e40 <__mdiff+0x10c>)
 8025d5e:	f000 fce5 	bl	802672c <__assert_func>
 8025d62:	2301      	movs	r3, #1
 8025d64:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8025d68:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d6c:	bfa4      	itt	ge
 8025d6e:	463b      	movge	r3, r7
 8025d70:	4627      	movge	r7, r4
 8025d72:	4630      	mov	r0, r6
 8025d74:	6879      	ldr	r1, [r7, #4]
 8025d76:	bfa6      	itte	ge
 8025d78:	461c      	movge	r4, r3
 8025d7a:	2500      	movge	r5, #0
 8025d7c:	2501      	movlt	r5, #1
 8025d7e:	f7ff fcf5 	bl	802576c <_Balloc>
 8025d82:	b920      	cbnz	r0, 8025d8e <__mdiff+0x5a>
 8025d84:	4b2d      	ldr	r3, [pc, #180]	; (8025e3c <__mdiff+0x108>)
 8025d86:	4602      	mov	r2, r0
 8025d88:	f44f 7110 	mov.w	r1, #576	; 0x240
 8025d8c:	e7e6      	b.n	8025d5c <__mdiff+0x28>
 8025d8e:	693e      	ldr	r6, [r7, #16]
 8025d90:	60c5      	str	r5, [r0, #12]
 8025d92:	6925      	ldr	r5, [r4, #16]
 8025d94:	f107 0114 	add.w	r1, r7, #20
 8025d98:	f104 0914 	add.w	r9, r4, #20
 8025d9c:	f100 0e14 	add.w	lr, r0, #20
 8025da0:	f107 0210 	add.w	r2, r7, #16
 8025da4:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 8025da8:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 8025dac:	46f2      	mov	sl, lr
 8025dae:	2700      	movs	r7, #0
 8025db0:	f859 3b04 	ldr.w	r3, [r9], #4
 8025db4:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8025db8:	fa1f f883 	uxth.w	r8, r3
 8025dbc:	fa17 f78b 	uxtah	r7, r7, fp
 8025dc0:	0c1b      	lsrs	r3, r3, #16
 8025dc2:	eba7 0808 	sub.w	r8, r7, r8
 8025dc6:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8025dca:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8025dce:	fa1f f888 	uxth.w	r8, r8
 8025dd2:	141f      	asrs	r7, r3, #16
 8025dd4:	454d      	cmp	r5, r9
 8025dd6:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8025dda:	f84a 3b04 	str.w	r3, [sl], #4
 8025dde:	d8e7      	bhi.n	8025db0 <__mdiff+0x7c>
 8025de0:	1b2b      	subs	r3, r5, r4
 8025de2:	3b15      	subs	r3, #21
 8025de4:	f023 0303 	bic.w	r3, r3, #3
 8025de8:	3304      	adds	r3, #4
 8025dea:	3415      	adds	r4, #21
 8025dec:	42a5      	cmp	r5, r4
 8025dee:	bf38      	it	cc
 8025df0:	2304      	movcc	r3, #4
 8025df2:	4419      	add	r1, r3
 8025df4:	4473      	add	r3, lr
 8025df6:	469e      	mov	lr, r3
 8025df8:	460d      	mov	r5, r1
 8025dfa:	4565      	cmp	r5, ip
 8025dfc:	d30e      	bcc.n	8025e1c <__mdiff+0xe8>
 8025dfe:	f10c 0203 	add.w	r2, ip, #3
 8025e02:	1a52      	subs	r2, r2, r1
 8025e04:	f022 0203 	bic.w	r2, r2, #3
 8025e08:	3903      	subs	r1, #3
 8025e0a:	458c      	cmp	ip, r1
 8025e0c:	bf38      	it	cc
 8025e0e:	2200      	movcc	r2, #0
 8025e10:	441a      	add	r2, r3
 8025e12:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8025e16:	b17b      	cbz	r3, 8025e38 <__mdiff+0x104>
 8025e18:	6106      	str	r6, [r0, #16]
 8025e1a:	e7a5      	b.n	8025d68 <__mdiff+0x34>
 8025e1c:	f855 8b04 	ldr.w	r8, [r5], #4
 8025e20:	fa17 f488 	uxtah	r4, r7, r8
 8025e24:	1422      	asrs	r2, r4, #16
 8025e26:	eb02 4218 	add.w	r2, r2, r8, lsr #16
 8025e2a:	b2a4      	uxth	r4, r4
 8025e2c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8025e30:	f84e 4b04 	str.w	r4, [lr], #4
 8025e34:	1417      	asrs	r7, r2, #16
 8025e36:	e7e0      	b.n	8025dfa <__mdiff+0xc6>
 8025e38:	3e01      	subs	r6, #1
 8025e3a:	e7ea      	b.n	8025e12 <__mdiff+0xde>
 8025e3c:	08028166 	.word	0x08028166
 8025e40:	0802820b 	.word	0x0802820b

08025e44 <__ulp>:
 8025e44:	b082      	sub	sp, #8
 8025e46:	ed8d 0b00 	vstr	d0, [sp]
 8025e4a:	9b01      	ldr	r3, [sp, #4]
 8025e4c:	4912      	ldr	r1, [pc, #72]	; (8025e98 <__ulp+0x54>)
 8025e4e:	4019      	ands	r1, r3
 8025e50:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 8025e54:	2900      	cmp	r1, #0
 8025e56:	dd05      	ble.n	8025e64 <__ulp+0x20>
 8025e58:	2200      	movs	r2, #0
 8025e5a:	460b      	mov	r3, r1
 8025e5c:	ec43 2b10 	vmov	d0, r2, r3
 8025e60:	b002      	add	sp, #8
 8025e62:	4770      	bx	lr
 8025e64:	4249      	negs	r1, r1
 8025e66:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 8025e6a:	ea4f 5021 	mov.w	r0, r1, asr #20
 8025e6e:	f04f 0200 	mov.w	r2, #0
 8025e72:	f04f 0300 	mov.w	r3, #0
 8025e76:	da04      	bge.n	8025e82 <__ulp+0x3e>
 8025e78:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8025e7c:	fa41 f300 	asr.w	r3, r1, r0
 8025e80:	e7ec      	b.n	8025e5c <__ulp+0x18>
 8025e82:	f1a0 0114 	sub.w	r1, r0, #20
 8025e86:	291e      	cmp	r1, #30
 8025e88:	bfda      	itte	le
 8025e8a:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 8025e8e:	fa20 f101 	lsrle.w	r1, r0, r1
 8025e92:	2101      	movgt	r1, #1
 8025e94:	460a      	mov	r2, r1
 8025e96:	e7e1      	b.n	8025e5c <__ulp+0x18>
 8025e98:	7ff00000 	.word	0x7ff00000

08025e9c <__b2d>:
 8025e9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025e9e:	6905      	ldr	r5, [r0, #16]
 8025ea0:	f100 0714 	add.w	r7, r0, #20
 8025ea4:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8025ea8:	1f2e      	subs	r6, r5, #4
 8025eaa:	f855 4c04 	ldr.w	r4, [r5, #-4]
 8025eae:	4620      	mov	r0, r4
 8025eb0:	f7ff fd52 	bl	8025958 <__hi0bits>
 8025eb4:	f1c0 0320 	rsb	r3, r0, #32
 8025eb8:	280a      	cmp	r0, #10
 8025eba:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8025f38 <__b2d+0x9c>
 8025ebe:	600b      	str	r3, [r1, #0]
 8025ec0:	dc14      	bgt.n	8025eec <__b2d+0x50>
 8025ec2:	f1c0 0e0b 	rsb	lr, r0, #11
 8025ec6:	fa24 f10e 	lsr.w	r1, r4, lr
 8025eca:	42b7      	cmp	r7, r6
 8025ecc:	ea41 030c 	orr.w	r3, r1, ip
 8025ed0:	bf34      	ite	cc
 8025ed2:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8025ed6:	2100      	movcs	r1, #0
 8025ed8:	3015      	adds	r0, #21
 8025eda:	fa04 f000 	lsl.w	r0, r4, r0
 8025ede:	fa21 f10e 	lsr.w	r1, r1, lr
 8025ee2:	ea40 0201 	orr.w	r2, r0, r1
 8025ee6:	ec43 2b10 	vmov	d0, r2, r3
 8025eea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025eec:	42b7      	cmp	r7, r6
 8025eee:	bf3a      	itte	cc
 8025ef0:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8025ef4:	f1a5 0608 	subcc.w	r6, r5, #8
 8025ef8:	2100      	movcs	r1, #0
 8025efa:	380b      	subs	r0, #11
 8025efc:	d017      	beq.n	8025f2e <__b2d+0x92>
 8025efe:	f1c0 0c20 	rsb	ip, r0, #32
 8025f02:	fa04 f500 	lsl.w	r5, r4, r0
 8025f06:	42be      	cmp	r6, r7
 8025f08:	fa21 f40c 	lsr.w	r4, r1, ip
 8025f0c:	ea45 0504 	orr.w	r5, r5, r4
 8025f10:	bf8c      	ite	hi
 8025f12:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8025f16:	2400      	movls	r4, #0
 8025f18:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8025f1c:	fa01 f000 	lsl.w	r0, r1, r0
 8025f20:	fa24 f40c 	lsr.w	r4, r4, ip
 8025f24:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8025f28:	ea40 0204 	orr.w	r2, r0, r4
 8025f2c:	e7db      	b.n	8025ee6 <__b2d+0x4a>
 8025f2e:	ea44 030c 	orr.w	r3, r4, ip
 8025f32:	460a      	mov	r2, r1
 8025f34:	e7d7      	b.n	8025ee6 <__b2d+0x4a>
 8025f36:	bf00      	nop
 8025f38:	3ff00000 	.word	0x3ff00000

08025f3c <__d2b>:
 8025f3c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8025f40:	4689      	mov	r9, r1
 8025f42:	2101      	movs	r1, #1
 8025f44:	ec57 6b10 	vmov	r6, r7, d0
 8025f48:	4690      	mov	r8, r2
 8025f4a:	f7ff fc0f 	bl	802576c <_Balloc>
 8025f4e:	4604      	mov	r4, r0
 8025f50:	b930      	cbnz	r0, 8025f60 <__d2b+0x24>
 8025f52:	4602      	mov	r2, r0
 8025f54:	4b25      	ldr	r3, [pc, #148]	; (8025fec <__d2b+0xb0>)
 8025f56:	4826      	ldr	r0, [pc, #152]	; (8025ff0 <__d2b+0xb4>)
 8025f58:	f240 310a 	movw	r1, #778	; 0x30a
 8025f5c:	f000 fbe6 	bl	802672c <__assert_func>
 8025f60:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8025f64:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8025f68:	bb35      	cbnz	r5, 8025fb8 <__d2b+0x7c>
 8025f6a:	2e00      	cmp	r6, #0
 8025f6c:	9301      	str	r3, [sp, #4]
 8025f6e:	d028      	beq.n	8025fc2 <__d2b+0x86>
 8025f70:	4668      	mov	r0, sp
 8025f72:	9600      	str	r6, [sp, #0]
 8025f74:	f7ff fd10 	bl	8025998 <__lo0bits>
 8025f78:	9900      	ldr	r1, [sp, #0]
 8025f7a:	b300      	cbz	r0, 8025fbe <__d2b+0x82>
 8025f7c:	9a01      	ldr	r2, [sp, #4]
 8025f7e:	f1c0 0320 	rsb	r3, r0, #32
 8025f82:	fa02 f303 	lsl.w	r3, r2, r3
 8025f86:	430b      	orrs	r3, r1
 8025f88:	40c2      	lsrs	r2, r0
 8025f8a:	6163      	str	r3, [r4, #20]
 8025f8c:	9201      	str	r2, [sp, #4]
 8025f8e:	9b01      	ldr	r3, [sp, #4]
 8025f90:	61a3      	str	r3, [r4, #24]
 8025f92:	2b00      	cmp	r3, #0
 8025f94:	bf14      	ite	ne
 8025f96:	2202      	movne	r2, #2
 8025f98:	2201      	moveq	r2, #1
 8025f9a:	6122      	str	r2, [r4, #16]
 8025f9c:	b1d5      	cbz	r5, 8025fd4 <__d2b+0x98>
 8025f9e:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8025fa2:	4405      	add	r5, r0
 8025fa4:	f8c9 5000 	str.w	r5, [r9]
 8025fa8:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8025fac:	f8c8 0000 	str.w	r0, [r8]
 8025fb0:	4620      	mov	r0, r4
 8025fb2:	b003      	add	sp, #12
 8025fb4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8025fb8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8025fbc:	e7d5      	b.n	8025f6a <__d2b+0x2e>
 8025fbe:	6161      	str	r1, [r4, #20]
 8025fc0:	e7e5      	b.n	8025f8e <__d2b+0x52>
 8025fc2:	a801      	add	r0, sp, #4
 8025fc4:	f7ff fce8 	bl	8025998 <__lo0bits>
 8025fc8:	9b01      	ldr	r3, [sp, #4]
 8025fca:	6163      	str	r3, [r4, #20]
 8025fcc:	2201      	movs	r2, #1
 8025fce:	6122      	str	r2, [r4, #16]
 8025fd0:	3020      	adds	r0, #32
 8025fd2:	e7e3      	b.n	8025f9c <__d2b+0x60>
 8025fd4:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8025fd8:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8025fdc:	f8c9 0000 	str.w	r0, [r9]
 8025fe0:	6918      	ldr	r0, [r3, #16]
 8025fe2:	f7ff fcb9 	bl	8025958 <__hi0bits>
 8025fe6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8025fea:	e7df      	b.n	8025fac <__d2b+0x70>
 8025fec:	08028166 	.word	0x08028166
 8025ff0:	0802820b 	.word	0x0802820b

08025ff4 <__ratio>:
 8025ff4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025ff8:	4688      	mov	r8, r1
 8025ffa:	4669      	mov	r1, sp
 8025ffc:	4681      	mov	r9, r0
 8025ffe:	f7ff ff4d 	bl	8025e9c <__b2d>
 8026002:	a901      	add	r1, sp, #4
 8026004:	4640      	mov	r0, r8
 8026006:	ec55 4b10 	vmov	r4, r5, d0
 802600a:	f7ff ff47 	bl	8025e9c <__b2d>
 802600e:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8026012:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8026016:	eba3 0c02 	sub.w	ip, r3, r2
 802601a:	e9dd 3200 	ldrd	r3, r2, [sp]
 802601e:	1a9b      	subs	r3, r3, r2
 8026020:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8026024:	ec51 0b10 	vmov	r0, r1, d0
 8026028:	2b00      	cmp	r3, #0
 802602a:	bfd6      	itet	le
 802602c:	460a      	movle	r2, r1
 802602e:	462a      	movgt	r2, r5
 8026030:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8026034:	468b      	mov	fp, r1
 8026036:	462f      	mov	r7, r5
 8026038:	bfd4      	ite	le
 802603a:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 802603e:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8026042:	4620      	mov	r0, r4
 8026044:	ee10 2a10 	vmov	r2, s0
 8026048:	465b      	mov	r3, fp
 802604a:	4639      	mov	r1, r7
 802604c:	f7da fc1e 	bl	800088c <__aeabi_ddiv>
 8026050:	ec41 0b10 	vmov	d0, r0, r1
 8026054:	b003      	add	sp, #12
 8026056:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802605a <__copybits>:
 802605a:	3901      	subs	r1, #1
 802605c:	b570      	push	{r4, r5, r6, lr}
 802605e:	1149      	asrs	r1, r1, #5
 8026060:	6914      	ldr	r4, [r2, #16]
 8026062:	3101      	adds	r1, #1
 8026064:	f102 0314 	add.w	r3, r2, #20
 8026068:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 802606c:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8026070:	1f05      	subs	r5, r0, #4
 8026072:	42a3      	cmp	r3, r4
 8026074:	d30c      	bcc.n	8026090 <__copybits+0x36>
 8026076:	1aa3      	subs	r3, r4, r2
 8026078:	3b11      	subs	r3, #17
 802607a:	f023 0303 	bic.w	r3, r3, #3
 802607e:	3211      	adds	r2, #17
 8026080:	42a2      	cmp	r2, r4
 8026082:	bf88      	it	hi
 8026084:	2300      	movhi	r3, #0
 8026086:	4418      	add	r0, r3
 8026088:	2300      	movs	r3, #0
 802608a:	4288      	cmp	r0, r1
 802608c:	d305      	bcc.n	802609a <__copybits+0x40>
 802608e:	bd70      	pop	{r4, r5, r6, pc}
 8026090:	f853 6b04 	ldr.w	r6, [r3], #4
 8026094:	f845 6f04 	str.w	r6, [r5, #4]!
 8026098:	e7eb      	b.n	8026072 <__copybits+0x18>
 802609a:	f840 3b04 	str.w	r3, [r0], #4
 802609e:	e7f4      	b.n	802608a <__copybits+0x30>

080260a0 <__any_on>:
 80260a0:	f100 0214 	add.w	r2, r0, #20
 80260a4:	6900      	ldr	r0, [r0, #16]
 80260a6:	114b      	asrs	r3, r1, #5
 80260a8:	4298      	cmp	r0, r3
 80260aa:	b510      	push	{r4, lr}
 80260ac:	db11      	blt.n	80260d2 <__any_on+0x32>
 80260ae:	dd0a      	ble.n	80260c6 <__any_on+0x26>
 80260b0:	f011 011f 	ands.w	r1, r1, #31
 80260b4:	d007      	beq.n	80260c6 <__any_on+0x26>
 80260b6:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80260ba:	fa24 f001 	lsr.w	r0, r4, r1
 80260be:	fa00 f101 	lsl.w	r1, r0, r1
 80260c2:	428c      	cmp	r4, r1
 80260c4:	d10b      	bne.n	80260de <__any_on+0x3e>
 80260c6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80260ca:	4293      	cmp	r3, r2
 80260cc:	d803      	bhi.n	80260d6 <__any_on+0x36>
 80260ce:	2000      	movs	r0, #0
 80260d0:	bd10      	pop	{r4, pc}
 80260d2:	4603      	mov	r3, r0
 80260d4:	e7f7      	b.n	80260c6 <__any_on+0x26>
 80260d6:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80260da:	2900      	cmp	r1, #0
 80260dc:	d0f5      	beq.n	80260ca <__any_on+0x2a>
 80260de:	2001      	movs	r0, #1
 80260e0:	e7f6      	b.n	80260d0 <__any_on+0x30>

080260e2 <_calloc_r>:
 80260e2:	b513      	push	{r0, r1, r4, lr}
 80260e4:	434a      	muls	r2, r1
 80260e6:	4611      	mov	r1, r2
 80260e8:	9201      	str	r2, [sp, #4]
 80260ea:	f7fd ff13 	bl	8023f14 <_malloc_r>
 80260ee:	4604      	mov	r4, r0
 80260f0:	b118      	cbz	r0, 80260fa <_calloc_r+0x18>
 80260f2:	9a01      	ldr	r2, [sp, #4]
 80260f4:	2100      	movs	r1, #0
 80260f6:	f7fd feb5 	bl	8023e64 <memset>
 80260fa:	4620      	mov	r0, r4
 80260fc:	b002      	add	sp, #8
 80260fe:	bd10      	pop	{r4, pc}

08026100 <__ssputs_r>:
 8026100:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026104:	688e      	ldr	r6, [r1, #8]
 8026106:	429e      	cmp	r6, r3
 8026108:	4682      	mov	sl, r0
 802610a:	460c      	mov	r4, r1
 802610c:	4690      	mov	r8, r2
 802610e:	461f      	mov	r7, r3
 8026110:	d838      	bhi.n	8026184 <__ssputs_r+0x84>
 8026112:	898a      	ldrh	r2, [r1, #12]
 8026114:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8026118:	d032      	beq.n	8026180 <__ssputs_r+0x80>
 802611a:	6825      	ldr	r5, [r4, #0]
 802611c:	6909      	ldr	r1, [r1, #16]
 802611e:	eba5 0901 	sub.w	r9, r5, r1
 8026122:	6965      	ldr	r5, [r4, #20]
 8026124:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8026128:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 802612c:	3301      	adds	r3, #1
 802612e:	444b      	add	r3, r9
 8026130:	106d      	asrs	r5, r5, #1
 8026132:	429d      	cmp	r5, r3
 8026134:	bf38      	it	cc
 8026136:	461d      	movcc	r5, r3
 8026138:	0553      	lsls	r3, r2, #21
 802613a:	d531      	bpl.n	80261a0 <__ssputs_r+0xa0>
 802613c:	4629      	mov	r1, r5
 802613e:	f7fd fee9 	bl	8023f14 <_malloc_r>
 8026142:	4606      	mov	r6, r0
 8026144:	b950      	cbnz	r0, 802615c <__ssputs_r+0x5c>
 8026146:	230c      	movs	r3, #12
 8026148:	f8ca 3000 	str.w	r3, [sl]
 802614c:	89a3      	ldrh	r3, [r4, #12]
 802614e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8026152:	81a3      	strh	r3, [r4, #12]
 8026154:	f04f 30ff 	mov.w	r0, #4294967295
 8026158:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802615c:	6921      	ldr	r1, [r4, #16]
 802615e:	464a      	mov	r2, r9
 8026160:	f7fd fe58 	bl	8023e14 <memcpy>
 8026164:	89a3      	ldrh	r3, [r4, #12]
 8026166:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 802616a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802616e:	81a3      	strh	r3, [r4, #12]
 8026170:	6126      	str	r6, [r4, #16]
 8026172:	6165      	str	r5, [r4, #20]
 8026174:	444e      	add	r6, r9
 8026176:	eba5 0509 	sub.w	r5, r5, r9
 802617a:	6026      	str	r6, [r4, #0]
 802617c:	60a5      	str	r5, [r4, #8]
 802617e:	463e      	mov	r6, r7
 8026180:	42be      	cmp	r6, r7
 8026182:	d900      	bls.n	8026186 <__ssputs_r+0x86>
 8026184:	463e      	mov	r6, r7
 8026186:	4632      	mov	r2, r6
 8026188:	6820      	ldr	r0, [r4, #0]
 802618a:	4641      	mov	r1, r8
 802618c:	f7fd fe50 	bl	8023e30 <memmove>
 8026190:	68a3      	ldr	r3, [r4, #8]
 8026192:	6822      	ldr	r2, [r4, #0]
 8026194:	1b9b      	subs	r3, r3, r6
 8026196:	4432      	add	r2, r6
 8026198:	60a3      	str	r3, [r4, #8]
 802619a:	6022      	str	r2, [r4, #0]
 802619c:	2000      	movs	r0, #0
 802619e:	e7db      	b.n	8026158 <__ssputs_r+0x58>
 80261a0:	462a      	mov	r2, r5
 80261a2:	f000 faf3 	bl	802678c <_realloc_r>
 80261a6:	4606      	mov	r6, r0
 80261a8:	2800      	cmp	r0, #0
 80261aa:	d1e1      	bne.n	8026170 <__ssputs_r+0x70>
 80261ac:	6921      	ldr	r1, [r4, #16]
 80261ae:	4650      	mov	r0, sl
 80261b0:	f7fd fe60 	bl	8023e74 <_free_r>
 80261b4:	e7c7      	b.n	8026146 <__ssputs_r+0x46>
	...

080261b8 <_svfiprintf_r>:
 80261b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80261bc:	4698      	mov	r8, r3
 80261be:	898b      	ldrh	r3, [r1, #12]
 80261c0:	061b      	lsls	r3, r3, #24
 80261c2:	b09d      	sub	sp, #116	; 0x74
 80261c4:	4607      	mov	r7, r0
 80261c6:	460d      	mov	r5, r1
 80261c8:	4614      	mov	r4, r2
 80261ca:	d50e      	bpl.n	80261ea <_svfiprintf_r+0x32>
 80261cc:	690b      	ldr	r3, [r1, #16]
 80261ce:	b963      	cbnz	r3, 80261ea <_svfiprintf_r+0x32>
 80261d0:	2140      	movs	r1, #64	; 0x40
 80261d2:	f7fd fe9f 	bl	8023f14 <_malloc_r>
 80261d6:	6028      	str	r0, [r5, #0]
 80261d8:	6128      	str	r0, [r5, #16]
 80261da:	b920      	cbnz	r0, 80261e6 <_svfiprintf_r+0x2e>
 80261dc:	230c      	movs	r3, #12
 80261de:	603b      	str	r3, [r7, #0]
 80261e0:	f04f 30ff 	mov.w	r0, #4294967295
 80261e4:	e0d1      	b.n	802638a <_svfiprintf_r+0x1d2>
 80261e6:	2340      	movs	r3, #64	; 0x40
 80261e8:	616b      	str	r3, [r5, #20]
 80261ea:	2300      	movs	r3, #0
 80261ec:	9309      	str	r3, [sp, #36]	; 0x24
 80261ee:	2320      	movs	r3, #32
 80261f0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80261f4:	f8cd 800c 	str.w	r8, [sp, #12]
 80261f8:	2330      	movs	r3, #48	; 0x30
 80261fa:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 80263a4 <_svfiprintf_r+0x1ec>
 80261fe:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8026202:	f04f 0901 	mov.w	r9, #1
 8026206:	4623      	mov	r3, r4
 8026208:	469a      	mov	sl, r3
 802620a:	f813 2b01 	ldrb.w	r2, [r3], #1
 802620e:	b10a      	cbz	r2, 8026214 <_svfiprintf_r+0x5c>
 8026210:	2a25      	cmp	r2, #37	; 0x25
 8026212:	d1f9      	bne.n	8026208 <_svfiprintf_r+0x50>
 8026214:	ebba 0b04 	subs.w	fp, sl, r4
 8026218:	d00b      	beq.n	8026232 <_svfiprintf_r+0x7a>
 802621a:	465b      	mov	r3, fp
 802621c:	4622      	mov	r2, r4
 802621e:	4629      	mov	r1, r5
 8026220:	4638      	mov	r0, r7
 8026222:	f7ff ff6d 	bl	8026100 <__ssputs_r>
 8026226:	3001      	adds	r0, #1
 8026228:	f000 80aa 	beq.w	8026380 <_svfiprintf_r+0x1c8>
 802622c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802622e:	445a      	add	r2, fp
 8026230:	9209      	str	r2, [sp, #36]	; 0x24
 8026232:	f89a 3000 	ldrb.w	r3, [sl]
 8026236:	2b00      	cmp	r3, #0
 8026238:	f000 80a2 	beq.w	8026380 <_svfiprintf_r+0x1c8>
 802623c:	2300      	movs	r3, #0
 802623e:	f04f 32ff 	mov.w	r2, #4294967295
 8026242:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8026246:	f10a 0a01 	add.w	sl, sl, #1
 802624a:	9304      	str	r3, [sp, #16]
 802624c:	9307      	str	r3, [sp, #28]
 802624e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8026252:	931a      	str	r3, [sp, #104]	; 0x68
 8026254:	4654      	mov	r4, sl
 8026256:	2205      	movs	r2, #5
 8026258:	f814 1b01 	ldrb.w	r1, [r4], #1
 802625c:	4851      	ldr	r0, [pc, #324]	; (80263a4 <_svfiprintf_r+0x1ec>)
 802625e:	f7d9 ffd7 	bl	8000210 <memchr>
 8026262:	9a04      	ldr	r2, [sp, #16]
 8026264:	b9d8      	cbnz	r0, 802629e <_svfiprintf_r+0xe6>
 8026266:	06d0      	lsls	r0, r2, #27
 8026268:	bf44      	itt	mi
 802626a:	2320      	movmi	r3, #32
 802626c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8026270:	0711      	lsls	r1, r2, #28
 8026272:	bf44      	itt	mi
 8026274:	232b      	movmi	r3, #43	; 0x2b
 8026276:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802627a:	f89a 3000 	ldrb.w	r3, [sl]
 802627e:	2b2a      	cmp	r3, #42	; 0x2a
 8026280:	d015      	beq.n	80262ae <_svfiprintf_r+0xf6>
 8026282:	9a07      	ldr	r2, [sp, #28]
 8026284:	4654      	mov	r4, sl
 8026286:	2000      	movs	r0, #0
 8026288:	f04f 0c0a 	mov.w	ip, #10
 802628c:	4621      	mov	r1, r4
 802628e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8026292:	3b30      	subs	r3, #48	; 0x30
 8026294:	2b09      	cmp	r3, #9
 8026296:	d94e      	bls.n	8026336 <_svfiprintf_r+0x17e>
 8026298:	b1b0      	cbz	r0, 80262c8 <_svfiprintf_r+0x110>
 802629a:	9207      	str	r2, [sp, #28]
 802629c:	e014      	b.n	80262c8 <_svfiprintf_r+0x110>
 802629e:	eba0 0308 	sub.w	r3, r0, r8
 80262a2:	fa09 f303 	lsl.w	r3, r9, r3
 80262a6:	4313      	orrs	r3, r2
 80262a8:	9304      	str	r3, [sp, #16]
 80262aa:	46a2      	mov	sl, r4
 80262ac:	e7d2      	b.n	8026254 <_svfiprintf_r+0x9c>
 80262ae:	9b03      	ldr	r3, [sp, #12]
 80262b0:	1d19      	adds	r1, r3, #4
 80262b2:	681b      	ldr	r3, [r3, #0]
 80262b4:	9103      	str	r1, [sp, #12]
 80262b6:	2b00      	cmp	r3, #0
 80262b8:	bfbb      	ittet	lt
 80262ba:	425b      	neglt	r3, r3
 80262bc:	f042 0202 	orrlt.w	r2, r2, #2
 80262c0:	9307      	strge	r3, [sp, #28]
 80262c2:	9307      	strlt	r3, [sp, #28]
 80262c4:	bfb8      	it	lt
 80262c6:	9204      	strlt	r2, [sp, #16]
 80262c8:	7823      	ldrb	r3, [r4, #0]
 80262ca:	2b2e      	cmp	r3, #46	; 0x2e
 80262cc:	d10c      	bne.n	80262e8 <_svfiprintf_r+0x130>
 80262ce:	7863      	ldrb	r3, [r4, #1]
 80262d0:	2b2a      	cmp	r3, #42	; 0x2a
 80262d2:	d135      	bne.n	8026340 <_svfiprintf_r+0x188>
 80262d4:	9b03      	ldr	r3, [sp, #12]
 80262d6:	1d1a      	adds	r2, r3, #4
 80262d8:	681b      	ldr	r3, [r3, #0]
 80262da:	9203      	str	r2, [sp, #12]
 80262dc:	2b00      	cmp	r3, #0
 80262de:	bfb8      	it	lt
 80262e0:	f04f 33ff 	movlt.w	r3, #4294967295
 80262e4:	3402      	adds	r4, #2
 80262e6:	9305      	str	r3, [sp, #20]
 80262e8:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 80263b4 <_svfiprintf_r+0x1fc>
 80262ec:	7821      	ldrb	r1, [r4, #0]
 80262ee:	2203      	movs	r2, #3
 80262f0:	4650      	mov	r0, sl
 80262f2:	f7d9 ff8d 	bl	8000210 <memchr>
 80262f6:	b140      	cbz	r0, 802630a <_svfiprintf_r+0x152>
 80262f8:	2340      	movs	r3, #64	; 0x40
 80262fa:	eba0 000a 	sub.w	r0, r0, sl
 80262fe:	fa03 f000 	lsl.w	r0, r3, r0
 8026302:	9b04      	ldr	r3, [sp, #16]
 8026304:	4303      	orrs	r3, r0
 8026306:	3401      	adds	r4, #1
 8026308:	9304      	str	r3, [sp, #16]
 802630a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802630e:	4826      	ldr	r0, [pc, #152]	; (80263a8 <_svfiprintf_r+0x1f0>)
 8026310:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8026314:	2206      	movs	r2, #6
 8026316:	f7d9 ff7b 	bl	8000210 <memchr>
 802631a:	2800      	cmp	r0, #0
 802631c:	d038      	beq.n	8026390 <_svfiprintf_r+0x1d8>
 802631e:	4b23      	ldr	r3, [pc, #140]	; (80263ac <_svfiprintf_r+0x1f4>)
 8026320:	bb1b      	cbnz	r3, 802636a <_svfiprintf_r+0x1b2>
 8026322:	9b03      	ldr	r3, [sp, #12]
 8026324:	3307      	adds	r3, #7
 8026326:	f023 0307 	bic.w	r3, r3, #7
 802632a:	3308      	adds	r3, #8
 802632c:	9303      	str	r3, [sp, #12]
 802632e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026330:	4433      	add	r3, r6
 8026332:	9309      	str	r3, [sp, #36]	; 0x24
 8026334:	e767      	b.n	8026206 <_svfiprintf_r+0x4e>
 8026336:	fb0c 3202 	mla	r2, ip, r2, r3
 802633a:	460c      	mov	r4, r1
 802633c:	2001      	movs	r0, #1
 802633e:	e7a5      	b.n	802628c <_svfiprintf_r+0xd4>
 8026340:	2300      	movs	r3, #0
 8026342:	3401      	adds	r4, #1
 8026344:	9305      	str	r3, [sp, #20]
 8026346:	4619      	mov	r1, r3
 8026348:	f04f 0c0a 	mov.w	ip, #10
 802634c:	4620      	mov	r0, r4
 802634e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8026352:	3a30      	subs	r2, #48	; 0x30
 8026354:	2a09      	cmp	r2, #9
 8026356:	d903      	bls.n	8026360 <_svfiprintf_r+0x1a8>
 8026358:	2b00      	cmp	r3, #0
 802635a:	d0c5      	beq.n	80262e8 <_svfiprintf_r+0x130>
 802635c:	9105      	str	r1, [sp, #20]
 802635e:	e7c3      	b.n	80262e8 <_svfiprintf_r+0x130>
 8026360:	fb0c 2101 	mla	r1, ip, r1, r2
 8026364:	4604      	mov	r4, r0
 8026366:	2301      	movs	r3, #1
 8026368:	e7f0      	b.n	802634c <_svfiprintf_r+0x194>
 802636a:	ab03      	add	r3, sp, #12
 802636c:	9300      	str	r3, [sp, #0]
 802636e:	462a      	mov	r2, r5
 8026370:	4b0f      	ldr	r3, [pc, #60]	; (80263b0 <_svfiprintf_r+0x1f8>)
 8026372:	a904      	add	r1, sp, #16
 8026374:	4638      	mov	r0, r7
 8026376:	f3af 8000 	nop.w
 802637a:	1c42      	adds	r2, r0, #1
 802637c:	4606      	mov	r6, r0
 802637e:	d1d6      	bne.n	802632e <_svfiprintf_r+0x176>
 8026380:	89ab      	ldrh	r3, [r5, #12]
 8026382:	065b      	lsls	r3, r3, #25
 8026384:	f53f af2c 	bmi.w	80261e0 <_svfiprintf_r+0x28>
 8026388:	9809      	ldr	r0, [sp, #36]	; 0x24
 802638a:	b01d      	add	sp, #116	; 0x74
 802638c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026390:	ab03      	add	r3, sp, #12
 8026392:	9300      	str	r3, [sp, #0]
 8026394:	462a      	mov	r2, r5
 8026396:	4b06      	ldr	r3, [pc, #24]	; (80263b0 <_svfiprintf_r+0x1f8>)
 8026398:	a904      	add	r1, sp, #16
 802639a:	4638      	mov	r0, r7
 802639c:	f000 f87a 	bl	8026494 <_printf_i>
 80263a0:	e7eb      	b.n	802637a <_svfiprintf_r+0x1c2>
 80263a2:	bf00      	nop
 80263a4:	0802836c 	.word	0x0802836c
 80263a8:	08028376 	.word	0x08028376
 80263ac:	00000000 	.word	0x00000000
 80263b0:	08026101 	.word	0x08026101
 80263b4:	08028372 	.word	0x08028372

080263b8 <_printf_common>:
 80263b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80263bc:	4616      	mov	r6, r2
 80263be:	4699      	mov	r9, r3
 80263c0:	688a      	ldr	r2, [r1, #8]
 80263c2:	690b      	ldr	r3, [r1, #16]
 80263c4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80263c8:	4293      	cmp	r3, r2
 80263ca:	bfb8      	it	lt
 80263cc:	4613      	movlt	r3, r2
 80263ce:	6033      	str	r3, [r6, #0]
 80263d0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80263d4:	4607      	mov	r7, r0
 80263d6:	460c      	mov	r4, r1
 80263d8:	b10a      	cbz	r2, 80263de <_printf_common+0x26>
 80263da:	3301      	adds	r3, #1
 80263dc:	6033      	str	r3, [r6, #0]
 80263de:	6823      	ldr	r3, [r4, #0]
 80263e0:	0699      	lsls	r1, r3, #26
 80263e2:	bf42      	ittt	mi
 80263e4:	6833      	ldrmi	r3, [r6, #0]
 80263e6:	3302      	addmi	r3, #2
 80263e8:	6033      	strmi	r3, [r6, #0]
 80263ea:	6825      	ldr	r5, [r4, #0]
 80263ec:	f015 0506 	ands.w	r5, r5, #6
 80263f0:	d106      	bne.n	8026400 <_printf_common+0x48>
 80263f2:	f104 0a19 	add.w	sl, r4, #25
 80263f6:	68e3      	ldr	r3, [r4, #12]
 80263f8:	6832      	ldr	r2, [r6, #0]
 80263fa:	1a9b      	subs	r3, r3, r2
 80263fc:	42ab      	cmp	r3, r5
 80263fe:	dc26      	bgt.n	802644e <_printf_common+0x96>
 8026400:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8026404:	1e13      	subs	r3, r2, #0
 8026406:	6822      	ldr	r2, [r4, #0]
 8026408:	bf18      	it	ne
 802640a:	2301      	movne	r3, #1
 802640c:	0692      	lsls	r2, r2, #26
 802640e:	d42b      	bmi.n	8026468 <_printf_common+0xb0>
 8026410:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8026414:	4649      	mov	r1, r9
 8026416:	4638      	mov	r0, r7
 8026418:	47c0      	blx	r8
 802641a:	3001      	adds	r0, #1
 802641c:	d01e      	beq.n	802645c <_printf_common+0xa4>
 802641e:	6823      	ldr	r3, [r4, #0]
 8026420:	68e5      	ldr	r5, [r4, #12]
 8026422:	6832      	ldr	r2, [r6, #0]
 8026424:	f003 0306 	and.w	r3, r3, #6
 8026428:	2b04      	cmp	r3, #4
 802642a:	bf08      	it	eq
 802642c:	1aad      	subeq	r5, r5, r2
 802642e:	68a3      	ldr	r3, [r4, #8]
 8026430:	6922      	ldr	r2, [r4, #16]
 8026432:	bf0c      	ite	eq
 8026434:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8026438:	2500      	movne	r5, #0
 802643a:	4293      	cmp	r3, r2
 802643c:	bfc4      	itt	gt
 802643e:	1a9b      	subgt	r3, r3, r2
 8026440:	18ed      	addgt	r5, r5, r3
 8026442:	2600      	movs	r6, #0
 8026444:	341a      	adds	r4, #26
 8026446:	42b5      	cmp	r5, r6
 8026448:	d11a      	bne.n	8026480 <_printf_common+0xc8>
 802644a:	2000      	movs	r0, #0
 802644c:	e008      	b.n	8026460 <_printf_common+0xa8>
 802644e:	2301      	movs	r3, #1
 8026450:	4652      	mov	r2, sl
 8026452:	4649      	mov	r1, r9
 8026454:	4638      	mov	r0, r7
 8026456:	47c0      	blx	r8
 8026458:	3001      	adds	r0, #1
 802645a:	d103      	bne.n	8026464 <_printf_common+0xac>
 802645c:	f04f 30ff 	mov.w	r0, #4294967295
 8026460:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026464:	3501      	adds	r5, #1
 8026466:	e7c6      	b.n	80263f6 <_printf_common+0x3e>
 8026468:	18e1      	adds	r1, r4, r3
 802646a:	1c5a      	adds	r2, r3, #1
 802646c:	2030      	movs	r0, #48	; 0x30
 802646e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8026472:	4422      	add	r2, r4
 8026474:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8026478:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802647c:	3302      	adds	r3, #2
 802647e:	e7c7      	b.n	8026410 <_printf_common+0x58>
 8026480:	2301      	movs	r3, #1
 8026482:	4622      	mov	r2, r4
 8026484:	4649      	mov	r1, r9
 8026486:	4638      	mov	r0, r7
 8026488:	47c0      	blx	r8
 802648a:	3001      	adds	r0, #1
 802648c:	d0e6      	beq.n	802645c <_printf_common+0xa4>
 802648e:	3601      	adds	r6, #1
 8026490:	e7d9      	b.n	8026446 <_printf_common+0x8e>
	...

08026494 <_printf_i>:
 8026494:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8026498:	460c      	mov	r4, r1
 802649a:	4691      	mov	r9, r2
 802649c:	7e27      	ldrb	r7, [r4, #24]
 802649e:	990c      	ldr	r1, [sp, #48]	; 0x30
 80264a0:	2f78      	cmp	r7, #120	; 0x78
 80264a2:	4680      	mov	r8, r0
 80264a4:	469a      	mov	sl, r3
 80264a6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80264aa:	d807      	bhi.n	80264bc <_printf_i+0x28>
 80264ac:	2f62      	cmp	r7, #98	; 0x62
 80264ae:	d80a      	bhi.n	80264c6 <_printf_i+0x32>
 80264b0:	2f00      	cmp	r7, #0
 80264b2:	f000 80d8 	beq.w	8026666 <_printf_i+0x1d2>
 80264b6:	2f58      	cmp	r7, #88	; 0x58
 80264b8:	f000 80a3 	beq.w	8026602 <_printf_i+0x16e>
 80264bc:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80264c0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80264c4:	e03a      	b.n	802653c <_printf_i+0xa8>
 80264c6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80264ca:	2b15      	cmp	r3, #21
 80264cc:	d8f6      	bhi.n	80264bc <_printf_i+0x28>
 80264ce:	a001      	add	r0, pc, #4	; (adr r0, 80264d4 <_printf_i+0x40>)
 80264d0:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80264d4:	0802652d 	.word	0x0802652d
 80264d8:	08026541 	.word	0x08026541
 80264dc:	080264bd 	.word	0x080264bd
 80264e0:	080264bd 	.word	0x080264bd
 80264e4:	080264bd 	.word	0x080264bd
 80264e8:	080264bd 	.word	0x080264bd
 80264ec:	08026541 	.word	0x08026541
 80264f0:	080264bd 	.word	0x080264bd
 80264f4:	080264bd 	.word	0x080264bd
 80264f8:	080264bd 	.word	0x080264bd
 80264fc:	080264bd 	.word	0x080264bd
 8026500:	0802664d 	.word	0x0802664d
 8026504:	08026571 	.word	0x08026571
 8026508:	0802662f 	.word	0x0802662f
 802650c:	080264bd 	.word	0x080264bd
 8026510:	080264bd 	.word	0x080264bd
 8026514:	0802666f 	.word	0x0802666f
 8026518:	080264bd 	.word	0x080264bd
 802651c:	08026571 	.word	0x08026571
 8026520:	080264bd 	.word	0x080264bd
 8026524:	080264bd 	.word	0x080264bd
 8026528:	08026637 	.word	0x08026637
 802652c:	680b      	ldr	r3, [r1, #0]
 802652e:	1d1a      	adds	r2, r3, #4
 8026530:	681b      	ldr	r3, [r3, #0]
 8026532:	600a      	str	r2, [r1, #0]
 8026534:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8026538:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802653c:	2301      	movs	r3, #1
 802653e:	e0a3      	b.n	8026688 <_printf_i+0x1f4>
 8026540:	6825      	ldr	r5, [r4, #0]
 8026542:	6808      	ldr	r0, [r1, #0]
 8026544:	062e      	lsls	r6, r5, #24
 8026546:	f100 0304 	add.w	r3, r0, #4
 802654a:	d50a      	bpl.n	8026562 <_printf_i+0xce>
 802654c:	6805      	ldr	r5, [r0, #0]
 802654e:	600b      	str	r3, [r1, #0]
 8026550:	2d00      	cmp	r5, #0
 8026552:	da03      	bge.n	802655c <_printf_i+0xc8>
 8026554:	232d      	movs	r3, #45	; 0x2d
 8026556:	426d      	negs	r5, r5
 8026558:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802655c:	485e      	ldr	r0, [pc, #376]	; (80266d8 <_printf_i+0x244>)
 802655e:	230a      	movs	r3, #10
 8026560:	e019      	b.n	8026596 <_printf_i+0x102>
 8026562:	f015 0f40 	tst.w	r5, #64	; 0x40
 8026566:	6805      	ldr	r5, [r0, #0]
 8026568:	600b      	str	r3, [r1, #0]
 802656a:	bf18      	it	ne
 802656c:	b22d      	sxthne	r5, r5
 802656e:	e7ef      	b.n	8026550 <_printf_i+0xbc>
 8026570:	680b      	ldr	r3, [r1, #0]
 8026572:	6825      	ldr	r5, [r4, #0]
 8026574:	1d18      	adds	r0, r3, #4
 8026576:	6008      	str	r0, [r1, #0]
 8026578:	0628      	lsls	r0, r5, #24
 802657a:	d501      	bpl.n	8026580 <_printf_i+0xec>
 802657c:	681d      	ldr	r5, [r3, #0]
 802657e:	e002      	b.n	8026586 <_printf_i+0xf2>
 8026580:	0669      	lsls	r1, r5, #25
 8026582:	d5fb      	bpl.n	802657c <_printf_i+0xe8>
 8026584:	881d      	ldrh	r5, [r3, #0]
 8026586:	4854      	ldr	r0, [pc, #336]	; (80266d8 <_printf_i+0x244>)
 8026588:	2f6f      	cmp	r7, #111	; 0x6f
 802658a:	bf0c      	ite	eq
 802658c:	2308      	moveq	r3, #8
 802658e:	230a      	movne	r3, #10
 8026590:	2100      	movs	r1, #0
 8026592:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8026596:	6866      	ldr	r6, [r4, #4]
 8026598:	60a6      	str	r6, [r4, #8]
 802659a:	2e00      	cmp	r6, #0
 802659c:	bfa2      	ittt	ge
 802659e:	6821      	ldrge	r1, [r4, #0]
 80265a0:	f021 0104 	bicge.w	r1, r1, #4
 80265a4:	6021      	strge	r1, [r4, #0]
 80265a6:	b90d      	cbnz	r5, 80265ac <_printf_i+0x118>
 80265a8:	2e00      	cmp	r6, #0
 80265aa:	d04d      	beq.n	8026648 <_printf_i+0x1b4>
 80265ac:	4616      	mov	r6, r2
 80265ae:	fbb5 f1f3 	udiv	r1, r5, r3
 80265b2:	fb03 5711 	mls	r7, r3, r1, r5
 80265b6:	5dc7      	ldrb	r7, [r0, r7]
 80265b8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80265bc:	462f      	mov	r7, r5
 80265be:	42bb      	cmp	r3, r7
 80265c0:	460d      	mov	r5, r1
 80265c2:	d9f4      	bls.n	80265ae <_printf_i+0x11a>
 80265c4:	2b08      	cmp	r3, #8
 80265c6:	d10b      	bne.n	80265e0 <_printf_i+0x14c>
 80265c8:	6823      	ldr	r3, [r4, #0]
 80265ca:	07df      	lsls	r7, r3, #31
 80265cc:	d508      	bpl.n	80265e0 <_printf_i+0x14c>
 80265ce:	6923      	ldr	r3, [r4, #16]
 80265d0:	6861      	ldr	r1, [r4, #4]
 80265d2:	4299      	cmp	r1, r3
 80265d4:	bfde      	ittt	le
 80265d6:	2330      	movle	r3, #48	; 0x30
 80265d8:	f806 3c01 	strble.w	r3, [r6, #-1]
 80265dc:	f106 36ff 	addle.w	r6, r6, #4294967295
 80265e0:	1b92      	subs	r2, r2, r6
 80265e2:	6122      	str	r2, [r4, #16]
 80265e4:	f8cd a000 	str.w	sl, [sp]
 80265e8:	464b      	mov	r3, r9
 80265ea:	aa03      	add	r2, sp, #12
 80265ec:	4621      	mov	r1, r4
 80265ee:	4640      	mov	r0, r8
 80265f0:	f7ff fee2 	bl	80263b8 <_printf_common>
 80265f4:	3001      	adds	r0, #1
 80265f6:	d14c      	bne.n	8026692 <_printf_i+0x1fe>
 80265f8:	f04f 30ff 	mov.w	r0, #4294967295
 80265fc:	b004      	add	sp, #16
 80265fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026602:	4835      	ldr	r0, [pc, #212]	; (80266d8 <_printf_i+0x244>)
 8026604:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8026608:	6823      	ldr	r3, [r4, #0]
 802660a:	680e      	ldr	r6, [r1, #0]
 802660c:	061f      	lsls	r7, r3, #24
 802660e:	f856 5b04 	ldr.w	r5, [r6], #4
 8026612:	600e      	str	r6, [r1, #0]
 8026614:	d514      	bpl.n	8026640 <_printf_i+0x1ac>
 8026616:	07d9      	lsls	r1, r3, #31
 8026618:	bf44      	itt	mi
 802661a:	f043 0320 	orrmi.w	r3, r3, #32
 802661e:	6023      	strmi	r3, [r4, #0]
 8026620:	b91d      	cbnz	r5, 802662a <_printf_i+0x196>
 8026622:	6823      	ldr	r3, [r4, #0]
 8026624:	f023 0320 	bic.w	r3, r3, #32
 8026628:	6023      	str	r3, [r4, #0]
 802662a:	2310      	movs	r3, #16
 802662c:	e7b0      	b.n	8026590 <_printf_i+0xfc>
 802662e:	6823      	ldr	r3, [r4, #0]
 8026630:	f043 0320 	orr.w	r3, r3, #32
 8026634:	6023      	str	r3, [r4, #0]
 8026636:	2378      	movs	r3, #120	; 0x78
 8026638:	4828      	ldr	r0, [pc, #160]	; (80266dc <_printf_i+0x248>)
 802663a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 802663e:	e7e3      	b.n	8026608 <_printf_i+0x174>
 8026640:	065e      	lsls	r6, r3, #25
 8026642:	bf48      	it	mi
 8026644:	b2ad      	uxthmi	r5, r5
 8026646:	e7e6      	b.n	8026616 <_printf_i+0x182>
 8026648:	4616      	mov	r6, r2
 802664a:	e7bb      	b.n	80265c4 <_printf_i+0x130>
 802664c:	680b      	ldr	r3, [r1, #0]
 802664e:	6826      	ldr	r6, [r4, #0]
 8026650:	6960      	ldr	r0, [r4, #20]
 8026652:	1d1d      	adds	r5, r3, #4
 8026654:	600d      	str	r5, [r1, #0]
 8026656:	0635      	lsls	r5, r6, #24
 8026658:	681b      	ldr	r3, [r3, #0]
 802665a:	d501      	bpl.n	8026660 <_printf_i+0x1cc>
 802665c:	6018      	str	r0, [r3, #0]
 802665e:	e002      	b.n	8026666 <_printf_i+0x1d2>
 8026660:	0671      	lsls	r1, r6, #25
 8026662:	d5fb      	bpl.n	802665c <_printf_i+0x1c8>
 8026664:	8018      	strh	r0, [r3, #0]
 8026666:	2300      	movs	r3, #0
 8026668:	6123      	str	r3, [r4, #16]
 802666a:	4616      	mov	r6, r2
 802666c:	e7ba      	b.n	80265e4 <_printf_i+0x150>
 802666e:	680b      	ldr	r3, [r1, #0]
 8026670:	1d1a      	adds	r2, r3, #4
 8026672:	600a      	str	r2, [r1, #0]
 8026674:	681e      	ldr	r6, [r3, #0]
 8026676:	6862      	ldr	r2, [r4, #4]
 8026678:	2100      	movs	r1, #0
 802667a:	4630      	mov	r0, r6
 802667c:	f7d9 fdc8 	bl	8000210 <memchr>
 8026680:	b108      	cbz	r0, 8026686 <_printf_i+0x1f2>
 8026682:	1b80      	subs	r0, r0, r6
 8026684:	6060      	str	r0, [r4, #4]
 8026686:	6863      	ldr	r3, [r4, #4]
 8026688:	6123      	str	r3, [r4, #16]
 802668a:	2300      	movs	r3, #0
 802668c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026690:	e7a8      	b.n	80265e4 <_printf_i+0x150>
 8026692:	6923      	ldr	r3, [r4, #16]
 8026694:	4632      	mov	r2, r6
 8026696:	4649      	mov	r1, r9
 8026698:	4640      	mov	r0, r8
 802669a:	47d0      	blx	sl
 802669c:	3001      	adds	r0, #1
 802669e:	d0ab      	beq.n	80265f8 <_printf_i+0x164>
 80266a0:	6823      	ldr	r3, [r4, #0]
 80266a2:	079b      	lsls	r3, r3, #30
 80266a4:	d413      	bmi.n	80266ce <_printf_i+0x23a>
 80266a6:	68e0      	ldr	r0, [r4, #12]
 80266a8:	9b03      	ldr	r3, [sp, #12]
 80266aa:	4298      	cmp	r0, r3
 80266ac:	bfb8      	it	lt
 80266ae:	4618      	movlt	r0, r3
 80266b0:	e7a4      	b.n	80265fc <_printf_i+0x168>
 80266b2:	2301      	movs	r3, #1
 80266b4:	4632      	mov	r2, r6
 80266b6:	4649      	mov	r1, r9
 80266b8:	4640      	mov	r0, r8
 80266ba:	47d0      	blx	sl
 80266bc:	3001      	adds	r0, #1
 80266be:	d09b      	beq.n	80265f8 <_printf_i+0x164>
 80266c0:	3501      	adds	r5, #1
 80266c2:	68e3      	ldr	r3, [r4, #12]
 80266c4:	9903      	ldr	r1, [sp, #12]
 80266c6:	1a5b      	subs	r3, r3, r1
 80266c8:	42ab      	cmp	r3, r5
 80266ca:	dcf2      	bgt.n	80266b2 <_printf_i+0x21e>
 80266cc:	e7eb      	b.n	80266a6 <_printf_i+0x212>
 80266ce:	2500      	movs	r5, #0
 80266d0:	f104 0619 	add.w	r6, r4, #25
 80266d4:	e7f5      	b.n	80266c2 <_printf_i+0x22e>
 80266d6:	bf00      	nop
 80266d8:	0802837d 	.word	0x0802837d
 80266dc:	0802838e 	.word	0x0802838e

080266e0 <nanf>:
 80266e0:	ed9f 0a01 	vldr	s0, [pc, #4]	; 80266e8 <nanf+0x8>
 80266e4:	4770      	bx	lr
 80266e6:	bf00      	nop
 80266e8:	7fc00000 	.word	0x7fc00000

080266ec <strncmp>:
 80266ec:	b510      	push	{r4, lr}
 80266ee:	b16a      	cbz	r2, 802670c <strncmp+0x20>
 80266f0:	3901      	subs	r1, #1
 80266f2:	1884      	adds	r4, r0, r2
 80266f4:	f810 3b01 	ldrb.w	r3, [r0], #1
 80266f8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80266fc:	4293      	cmp	r3, r2
 80266fe:	d103      	bne.n	8026708 <strncmp+0x1c>
 8026700:	42a0      	cmp	r0, r4
 8026702:	d001      	beq.n	8026708 <strncmp+0x1c>
 8026704:	2b00      	cmp	r3, #0
 8026706:	d1f5      	bne.n	80266f4 <strncmp+0x8>
 8026708:	1a98      	subs	r0, r3, r2
 802670a:	bd10      	pop	{r4, pc}
 802670c:	4610      	mov	r0, r2
 802670e:	e7fc      	b.n	802670a <strncmp+0x1e>

08026710 <__ascii_wctomb>:
 8026710:	b149      	cbz	r1, 8026726 <__ascii_wctomb+0x16>
 8026712:	2aff      	cmp	r2, #255	; 0xff
 8026714:	bf85      	ittet	hi
 8026716:	238a      	movhi	r3, #138	; 0x8a
 8026718:	6003      	strhi	r3, [r0, #0]
 802671a:	700a      	strbls	r2, [r1, #0]
 802671c:	f04f 30ff 	movhi.w	r0, #4294967295
 8026720:	bf98      	it	ls
 8026722:	2001      	movls	r0, #1
 8026724:	4770      	bx	lr
 8026726:	4608      	mov	r0, r1
 8026728:	4770      	bx	lr
	...

0802672c <__assert_func>:
 802672c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802672e:	4614      	mov	r4, r2
 8026730:	461a      	mov	r2, r3
 8026732:	4b09      	ldr	r3, [pc, #36]	; (8026758 <__assert_func+0x2c>)
 8026734:	681b      	ldr	r3, [r3, #0]
 8026736:	4605      	mov	r5, r0
 8026738:	68d8      	ldr	r0, [r3, #12]
 802673a:	b14c      	cbz	r4, 8026750 <__assert_func+0x24>
 802673c:	4b07      	ldr	r3, [pc, #28]	; (802675c <__assert_func+0x30>)
 802673e:	9100      	str	r1, [sp, #0]
 8026740:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8026744:	4906      	ldr	r1, [pc, #24]	; (8026760 <__assert_func+0x34>)
 8026746:	462b      	mov	r3, r5
 8026748:	f000 f80e 	bl	8026768 <fiprintf>
 802674c:	f7fd fada 	bl	8023d04 <abort>
 8026750:	4b04      	ldr	r3, [pc, #16]	; (8026764 <__assert_func+0x38>)
 8026752:	461c      	mov	r4, r3
 8026754:	e7f3      	b.n	802673e <__assert_func+0x12>
 8026756:	bf00      	nop
 8026758:	20000010 	.word	0x20000010
 802675c:	0802839f 	.word	0x0802839f
 8026760:	080283ac 	.word	0x080283ac
 8026764:	080283da 	.word	0x080283da

08026768 <fiprintf>:
 8026768:	b40e      	push	{r1, r2, r3}
 802676a:	b503      	push	{r0, r1, lr}
 802676c:	4601      	mov	r1, r0
 802676e:	ab03      	add	r3, sp, #12
 8026770:	4805      	ldr	r0, [pc, #20]	; (8026788 <fiprintf+0x20>)
 8026772:	f853 2b04 	ldr.w	r2, [r3], #4
 8026776:	6800      	ldr	r0, [r0, #0]
 8026778:	9301      	str	r3, [sp, #4]
 802677a:	f000 f857 	bl	802682c <_vfiprintf_r>
 802677e:	b002      	add	sp, #8
 8026780:	f85d eb04 	ldr.w	lr, [sp], #4
 8026784:	b003      	add	sp, #12
 8026786:	4770      	bx	lr
 8026788:	20000010 	.word	0x20000010

0802678c <_realloc_r>:
 802678c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802678e:	4607      	mov	r7, r0
 8026790:	4614      	mov	r4, r2
 8026792:	460e      	mov	r6, r1
 8026794:	b921      	cbnz	r1, 80267a0 <_realloc_r+0x14>
 8026796:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 802679a:	4611      	mov	r1, r2
 802679c:	f7fd bbba 	b.w	8023f14 <_malloc_r>
 80267a0:	b922      	cbnz	r2, 80267ac <_realloc_r+0x20>
 80267a2:	f7fd fb67 	bl	8023e74 <_free_r>
 80267a6:	4625      	mov	r5, r4
 80267a8:	4628      	mov	r0, r5
 80267aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80267ac:	f000 fc4a 	bl	8027044 <_malloc_usable_size_r>
 80267b0:	42a0      	cmp	r0, r4
 80267b2:	d20f      	bcs.n	80267d4 <_realloc_r+0x48>
 80267b4:	4621      	mov	r1, r4
 80267b6:	4638      	mov	r0, r7
 80267b8:	f7fd fbac 	bl	8023f14 <_malloc_r>
 80267bc:	4605      	mov	r5, r0
 80267be:	2800      	cmp	r0, #0
 80267c0:	d0f2      	beq.n	80267a8 <_realloc_r+0x1c>
 80267c2:	4631      	mov	r1, r6
 80267c4:	4622      	mov	r2, r4
 80267c6:	f7fd fb25 	bl	8023e14 <memcpy>
 80267ca:	4631      	mov	r1, r6
 80267cc:	4638      	mov	r0, r7
 80267ce:	f7fd fb51 	bl	8023e74 <_free_r>
 80267d2:	e7e9      	b.n	80267a8 <_realloc_r+0x1c>
 80267d4:	4635      	mov	r5, r6
 80267d6:	e7e7      	b.n	80267a8 <_realloc_r+0x1c>

080267d8 <__sfputc_r>:
 80267d8:	6893      	ldr	r3, [r2, #8]
 80267da:	3b01      	subs	r3, #1
 80267dc:	2b00      	cmp	r3, #0
 80267de:	b410      	push	{r4}
 80267e0:	6093      	str	r3, [r2, #8]
 80267e2:	da08      	bge.n	80267f6 <__sfputc_r+0x1e>
 80267e4:	6994      	ldr	r4, [r2, #24]
 80267e6:	42a3      	cmp	r3, r4
 80267e8:	db01      	blt.n	80267ee <__sfputc_r+0x16>
 80267ea:	290a      	cmp	r1, #10
 80267ec:	d103      	bne.n	80267f6 <__sfputc_r+0x1e>
 80267ee:	f85d 4b04 	ldr.w	r4, [sp], #4
 80267f2:	f000 b94b 	b.w	8026a8c <__swbuf_r>
 80267f6:	6813      	ldr	r3, [r2, #0]
 80267f8:	1c58      	adds	r0, r3, #1
 80267fa:	6010      	str	r0, [r2, #0]
 80267fc:	7019      	strb	r1, [r3, #0]
 80267fe:	4608      	mov	r0, r1
 8026800:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026804:	4770      	bx	lr

08026806 <__sfputs_r>:
 8026806:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026808:	4606      	mov	r6, r0
 802680a:	460f      	mov	r7, r1
 802680c:	4614      	mov	r4, r2
 802680e:	18d5      	adds	r5, r2, r3
 8026810:	42ac      	cmp	r4, r5
 8026812:	d101      	bne.n	8026818 <__sfputs_r+0x12>
 8026814:	2000      	movs	r0, #0
 8026816:	e007      	b.n	8026828 <__sfputs_r+0x22>
 8026818:	f814 1b01 	ldrb.w	r1, [r4], #1
 802681c:	463a      	mov	r2, r7
 802681e:	4630      	mov	r0, r6
 8026820:	f7ff ffda 	bl	80267d8 <__sfputc_r>
 8026824:	1c43      	adds	r3, r0, #1
 8026826:	d1f3      	bne.n	8026810 <__sfputs_r+0xa>
 8026828:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802682c <_vfiprintf_r>:
 802682c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026830:	460d      	mov	r5, r1
 8026832:	b09d      	sub	sp, #116	; 0x74
 8026834:	4614      	mov	r4, r2
 8026836:	4698      	mov	r8, r3
 8026838:	4606      	mov	r6, r0
 802683a:	b118      	cbz	r0, 8026844 <_vfiprintf_r+0x18>
 802683c:	6983      	ldr	r3, [r0, #24]
 802683e:	b90b      	cbnz	r3, 8026844 <_vfiprintf_r+0x18>
 8026840:	f000 fafe 	bl	8026e40 <__sinit>
 8026844:	4b89      	ldr	r3, [pc, #548]	; (8026a6c <_vfiprintf_r+0x240>)
 8026846:	429d      	cmp	r5, r3
 8026848:	d11b      	bne.n	8026882 <_vfiprintf_r+0x56>
 802684a:	6875      	ldr	r5, [r6, #4]
 802684c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802684e:	07d9      	lsls	r1, r3, #31
 8026850:	d405      	bmi.n	802685e <_vfiprintf_r+0x32>
 8026852:	89ab      	ldrh	r3, [r5, #12]
 8026854:	059a      	lsls	r2, r3, #22
 8026856:	d402      	bmi.n	802685e <_vfiprintf_r+0x32>
 8026858:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802685a:	f7fe ff66 	bl	802572a <__retarget_lock_acquire_recursive>
 802685e:	89ab      	ldrh	r3, [r5, #12]
 8026860:	071b      	lsls	r3, r3, #28
 8026862:	d501      	bpl.n	8026868 <_vfiprintf_r+0x3c>
 8026864:	692b      	ldr	r3, [r5, #16]
 8026866:	b9eb      	cbnz	r3, 80268a4 <_vfiprintf_r+0x78>
 8026868:	4629      	mov	r1, r5
 802686a:	4630      	mov	r0, r6
 802686c:	f000 f960 	bl	8026b30 <__swsetup_r>
 8026870:	b1c0      	cbz	r0, 80268a4 <_vfiprintf_r+0x78>
 8026872:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8026874:	07dc      	lsls	r4, r3, #31
 8026876:	d50e      	bpl.n	8026896 <_vfiprintf_r+0x6a>
 8026878:	f04f 30ff 	mov.w	r0, #4294967295
 802687c:	b01d      	add	sp, #116	; 0x74
 802687e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026882:	4b7b      	ldr	r3, [pc, #492]	; (8026a70 <_vfiprintf_r+0x244>)
 8026884:	429d      	cmp	r5, r3
 8026886:	d101      	bne.n	802688c <_vfiprintf_r+0x60>
 8026888:	68b5      	ldr	r5, [r6, #8]
 802688a:	e7df      	b.n	802684c <_vfiprintf_r+0x20>
 802688c:	4b79      	ldr	r3, [pc, #484]	; (8026a74 <_vfiprintf_r+0x248>)
 802688e:	429d      	cmp	r5, r3
 8026890:	bf08      	it	eq
 8026892:	68f5      	ldreq	r5, [r6, #12]
 8026894:	e7da      	b.n	802684c <_vfiprintf_r+0x20>
 8026896:	89ab      	ldrh	r3, [r5, #12]
 8026898:	0598      	lsls	r0, r3, #22
 802689a:	d4ed      	bmi.n	8026878 <_vfiprintf_r+0x4c>
 802689c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802689e:	f7fe ff46 	bl	802572e <__retarget_lock_release_recursive>
 80268a2:	e7e9      	b.n	8026878 <_vfiprintf_r+0x4c>
 80268a4:	2300      	movs	r3, #0
 80268a6:	9309      	str	r3, [sp, #36]	; 0x24
 80268a8:	2320      	movs	r3, #32
 80268aa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80268ae:	f8cd 800c 	str.w	r8, [sp, #12]
 80268b2:	2330      	movs	r3, #48	; 0x30
 80268b4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8026a78 <_vfiprintf_r+0x24c>
 80268b8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80268bc:	f04f 0901 	mov.w	r9, #1
 80268c0:	4623      	mov	r3, r4
 80268c2:	469a      	mov	sl, r3
 80268c4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80268c8:	b10a      	cbz	r2, 80268ce <_vfiprintf_r+0xa2>
 80268ca:	2a25      	cmp	r2, #37	; 0x25
 80268cc:	d1f9      	bne.n	80268c2 <_vfiprintf_r+0x96>
 80268ce:	ebba 0b04 	subs.w	fp, sl, r4
 80268d2:	d00b      	beq.n	80268ec <_vfiprintf_r+0xc0>
 80268d4:	465b      	mov	r3, fp
 80268d6:	4622      	mov	r2, r4
 80268d8:	4629      	mov	r1, r5
 80268da:	4630      	mov	r0, r6
 80268dc:	f7ff ff93 	bl	8026806 <__sfputs_r>
 80268e0:	3001      	adds	r0, #1
 80268e2:	f000 80aa 	beq.w	8026a3a <_vfiprintf_r+0x20e>
 80268e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80268e8:	445a      	add	r2, fp
 80268ea:	9209      	str	r2, [sp, #36]	; 0x24
 80268ec:	f89a 3000 	ldrb.w	r3, [sl]
 80268f0:	2b00      	cmp	r3, #0
 80268f2:	f000 80a2 	beq.w	8026a3a <_vfiprintf_r+0x20e>
 80268f6:	2300      	movs	r3, #0
 80268f8:	f04f 32ff 	mov.w	r2, #4294967295
 80268fc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8026900:	f10a 0a01 	add.w	sl, sl, #1
 8026904:	9304      	str	r3, [sp, #16]
 8026906:	9307      	str	r3, [sp, #28]
 8026908:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802690c:	931a      	str	r3, [sp, #104]	; 0x68
 802690e:	4654      	mov	r4, sl
 8026910:	2205      	movs	r2, #5
 8026912:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026916:	4858      	ldr	r0, [pc, #352]	; (8026a78 <_vfiprintf_r+0x24c>)
 8026918:	f7d9 fc7a 	bl	8000210 <memchr>
 802691c:	9a04      	ldr	r2, [sp, #16]
 802691e:	b9d8      	cbnz	r0, 8026958 <_vfiprintf_r+0x12c>
 8026920:	06d1      	lsls	r1, r2, #27
 8026922:	bf44      	itt	mi
 8026924:	2320      	movmi	r3, #32
 8026926:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802692a:	0713      	lsls	r3, r2, #28
 802692c:	bf44      	itt	mi
 802692e:	232b      	movmi	r3, #43	; 0x2b
 8026930:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8026934:	f89a 3000 	ldrb.w	r3, [sl]
 8026938:	2b2a      	cmp	r3, #42	; 0x2a
 802693a:	d015      	beq.n	8026968 <_vfiprintf_r+0x13c>
 802693c:	9a07      	ldr	r2, [sp, #28]
 802693e:	4654      	mov	r4, sl
 8026940:	2000      	movs	r0, #0
 8026942:	f04f 0c0a 	mov.w	ip, #10
 8026946:	4621      	mov	r1, r4
 8026948:	f811 3b01 	ldrb.w	r3, [r1], #1
 802694c:	3b30      	subs	r3, #48	; 0x30
 802694e:	2b09      	cmp	r3, #9
 8026950:	d94e      	bls.n	80269f0 <_vfiprintf_r+0x1c4>
 8026952:	b1b0      	cbz	r0, 8026982 <_vfiprintf_r+0x156>
 8026954:	9207      	str	r2, [sp, #28]
 8026956:	e014      	b.n	8026982 <_vfiprintf_r+0x156>
 8026958:	eba0 0308 	sub.w	r3, r0, r8
 802695c:	fa09 f303 	lsl.w	r3, r9, r3
 8026960:	4313      	orrs	r3, r2
 8026962:	9304      	str	r3, [sp, #16]
 8026964:	46a2      	mov	sl, r4
 8026966:	e7d2      	b.n	802690e <_vfiprintf_r+0xe2>
 8026968:	9b03      	ldr	r3, [sp, #12]
 802696a:	1d19      	adds	r1, r3, #4
 802696c:	681b      	ldr	r3, [r3, #0]
 802696e:	9103      	str	r1, [sp, #12]
 8026970:	2b00      	cmp	r3, #0
 8026972:	bfbb      	ittet	lt
 8026974:	425b      	neglt	r3, r3
 8026976:	f042 0202 	orrlt.w	r2, r2, #2
 802697a:	9307      	strge	r3, [sp, #28]
 802697c:	9307      	strlt	r3, [sp, #28]
 802697e:	bfb8      	it	lt
 8026980:	9204      	strlt	r2, [sp, #16]
 8026982:	7823      	ldrb	r3, [r4, #0]
 8026984:	2b2e      	cmp	r3, #46	; 0x2e
 8026986:	d10c      	bne.n	80269a2 <_vfiprintf_r+0x176>
 8026988:	7863      	ldrb	r3, [r4, #1]
 802698a:	2b2a      	cmp	r3, #42	; 0x2a
 802698c:	d135      	bne.n	80269fa <_vfiprintf_r+0x1ce>
 802698e:	9b03      	ldr	r3, [sp, #12]
 8026990:	1d1a      	adds	r2, r3, #4
 8026992:	681b      	ldr	r3, [r3, #0]
 8026994:	9203      	str	r2, [sp, #12]
 8026996:	2b00      	cmp	r3, #0
 8026998:	bfb8      	it	lt
 802699a:	f04f 33ff 	movlt.w	r3, #4294967295
 802699e:	3402      	adds	r4, #2
 80269a0:	9305      	str	r3, [sp, #20]
 80269a2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8026a88 <_vfiprintf_r+0x25c>
 80269a6:	7821      	ldrb	r1, [r4, #0]
 80269a8:	2203      	movs	r2, #3
 80269aa:	4650      	mov	r0, sl
 80269ac:	f7d9 fc30 	bl	8000210 <memchr>
 80269b0:	b140      	cbz	r0, 80269c4 <_vfiprintf_r+0x198>
 80269b2:	2340      	movs	r3, #64	; 0x40
 80269b4:	eba0 000a 	sub.w	r0, r0, sl
 80269b8:	fa03 f000 	lsl.w	r0, r3, r0
 80269bc:	9b04      	ldr	r3, [sp, #16]
 80269be:	4303      	orrs	r3, r0
 80269c0:	3401      	adds	r4, #1
 80269c2:	9304      	str	r3, [sp, #16]
 80269c4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80269c8:	482c      	ldr	r0, [pc, #176]	; (8026a7c <_vfiprintf_r+0x250>)
 80269ca:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80269ce:	2206      	movs	r2, #6
 80269d0:	f7d9 fc1e 	bl	8000210 <memchr>
 80269d4:	2800      	cmp	r0, #0
 80269d6:	d03f      	beq.n	8026a58 <_vfiprintf_r+0x22c>
 80269d8:	4b29      	ldr	r3, [pc, #164]	; (8026a80 <_vfiprintf_r+0x254>)
 80269da:	bb1b      	cbnz	r3, 8026a24 <_vfiprintf_r+0x1f8>
 80269dc:	9b03      	ldr	r3, [sp, #12]
 80269de:	3307      	adds	r3, #7
 80269e0:	f023 0307 	bic.w	r3, r3, #7
 80269e4:	3308      	adds	r3, #8
 80269e6:	9303      	str	r3, [sp, #12]
 80269e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80269ea:	443b      	add	r3, r7
 80269ec:	9309      	str	r3, [sp, #36]	; 0x24
 80269ee:	e767      	b.n	80268c0 <_vfiprintf_r+0x94>
 80269f0:	fb0c 3202 	mla	r2, ip, r2, r3
 80269f4:	460c      	mov	r4, r1
 80269f6:	2001      	movs	r0, #1
 80269f8:	e7a5      	b.n	8026946 <_vfiprintf_r+0x11a>
 80269fa:	2300      	movs	r3, #0
 80269fc:	3401      	adds	r4, #1
 80269fe:	9305      	str	r3, [sp, #20]
 8026a00:	4619      	mov	r1, r3
 8026a02:	f04f 0c0a 	mov.w	ip, #10
 8026a06:	4620      	mov	r0, r4
 8026a08:	f810 2b01 	ldrb.w	r2, [r0], #1
 8026a0c:	3a30      	subs	r2, #48	; 0x30
 8026a0e:	2a09      	cmp	r2, #9
 8026a10:	d903      	bls.n	8026a1a <_vfiprintf_r+0x1ee>
 8026a12:	2b00      	cmp	r3, #0
 8026a14:	d0c5      	beq.n	80269a2 <_vfiprintf_r+0x176>
 8026a16:	9105      	str	r1, [sp, #20]
 8026a18:	e7c3      	b.n	80269a2 <_vfiprintf_r+0x176>
 8026a1a:	fb0c 2101 	mla	r1, ip, r1, r2
 8026a1e:	4604      	mov	r4, r0
 8026a20:	2301      	movs	r3, #1
 8026a22:	e7f0      	b.n	8026a06 <_vfiprintf_r+0x1da>
 8026a24:	ab03      	add	r3, sp, #12
 8026a26:	9300      	str	r3, [sp, #0]
 8026a28:	462a      	mov	r2, r5
 8026a2a:	4b16      	ldr	r3, [pc, #88]	; (8026a84 <_vfiprintf_r+0x258>)
 8026a2c:	a904      	add	r1, sp, #16
 8026a2e:	4630      	mov	r0, r6
 8026a30:	f3af 8000 	nop.w
 8026a34:	4607      	mov	r7, r0
 8026a36:	1c78      	adds	r0, r7, #1
 8026a38:	d1d6      	bne.n	80269e8 <_vfiprintf_r+0x1bc>
 8026a3a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8026a3c:	07d9      	lsls	r1, r3, #31
 8026a3e:	d405      	bmi.n	8026a4c <_vfiprintf_r+0x220>
 8026a40:	89ab      	ldrh	r3, [r5, #12]
 8026a42:	059a      	lsls	r2, r3, #22
 8026a44:	d402      	bmi.n	8026a4c <_vfiprintf_r+0x220>
 8026a46:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8026a48:	f7fe fe71 	bl	802572e <__retarget_lock_release_recursive>
 8026a4c:	89ab      	ldrh	r3, [r5, #12]
 8026a4e:	065b      	lsls	r3, r3, #25
 8026a50:	f53f af12 	bmi.w	8026878 <_vfiprintf_r+0x4c>
 8026a54:	9809      	ldr	r0, [sp, #36]	; 0x24
 8026a56:	e711      	b.n	802687c <_vfiprintf_r+0x50>
 8026a58:	ab03      	add	r3, sp, #12
 8026a5a:	9300      	str	r3, [sp, #0]
 8026a5c:	462a      	mov	r2, r5
 8026a5e:	4b09      	ldr	r3, [pc, #36]	; (8026a84 <_vfiprintf_r+0x258>)
 8026a60:	a904      	add	r1, sp, #16
 8026a62:	4630      	mov	r0, r6
 8026a64:	f7ff fd16 	bl	8026494 <_printf_i>
 8026a68:	e7e4      	b.n	8026a34 <_vfiprintf_r+0x208>
 8026a6a:	bf00      	nop
 8026a6c:	080283fc 	.word	0x080283fc
 8026a70:	0802841c 	.word	0x0802841c
 8026a74:	080283dc 	.word	0x080283dc
 8026a78:	0802836c 	.word	0x0802836c
 8026a7c:	08028376 	.word	0x08028376
 8026a80:	00000000 	.word	0x00000000
 8026a84:	08026807 	.word	0x08026807
 8026a88:	08028372 	.word	0x08028372

08026a8c <__swbuf_r>:
 8026a8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026a8e:	460e      	mov	r6, r1
 8026a90:	4614      	mov	r4, r2
 8026a92:	4605      	mov	r5, r0
 8026a94:	b118      	cbz	r0, 8026a9e <__swbuf_r+0x12>
 8026a96:	6983      	ldr	r3, [r0, #24]
 8026a98:	b90b      	cbnz	r3, 8026a9e <__swbuf_r+0x12>
 8026a9a:	f000 f9d1 	bl	8026e40 <__sinit>
 8026a9e:	4b21      	ldr	r3, [pc, #132]	; (8026b24 <__swbuf_r+0x98>)
 8026aa0:	429c      	cmp	r4, r3
 8026aa2:	d12b      	bne.n	8026afc <__swbuf_r+0x70>
 8026aa4:	686c      	ldr	r4, [r5, #4]
 8026aa6:	69a3      	ldr	r3, [r4, #24]
 8026aa8:	60a3      	str	r3, [r4, #8]
 8026aaa:	89a3      	ldrh	r3, [r4, #12]
 8026aac:	071a      	lsls	r2, r3, #28
 8026aae:	d52f      	bpl.n	8026b10 <__swbuf_r+0x84>
 8026ab0:	6923      	ldr	r3, [r4, #16]
 8026ab2:	b36b      	cbz	r3, 8026b10 <__swbuf_r+0x84>
 8026ab4:	6923      	ldr	r3, [r4, #16]
 8026ab6:	6820      	ldr	r0, [r4, #0]
 8026ab8:	1ac0      	subs	r0, r0, r3
 8026aba:	6963      	ldr	r3, [r4, #20]
 8026abc:	b2f6      	uxtb	r6, r6
 8026abe:	4283      	cmp	r3, r0
 8026ac0:	4637      	mov	r7, r6
 8026ac2:	dc04      	bgt.n	8026ace <__swbuf_r+0x42>
 8026ac4:	4621      	mov	r1, r4
 8026ac6:	4628      	mov	r0, r5
 8026ac8:	f000 f926 	bl	8026d18 <_fflush_r>
 8026acc:	bb30      	cbnz	r0, 8026b1c <__swbuf_r+0x90>
 8026ace:	68a3      	ldr	r3, [r4, #8]
 8026ad0:	3b01      	subs	r3, #1
 8026ad2:	60a3      	str	r3, [r4, #8]
 8026ad4:	6823      	ldr	r3, [r4, #0]
 8026ad6:	1c5a      	adds	r2, r3, #1
 8026ad8:	6022      	str	r2, [r4, #0]
 8026ada:	701e      	strb	r6, [r3, #0]
 8026adc:	6963      	ldr	r3, [r4, #20]
 8026ade:	3001      	adds	r0, #1
 8026ae0:	4283      	cmp	r3, r0
 8026ae2:	d004      	beq.n	8026aee <__swbuf_r+0x62>
 8026ae4:	89a3      	ldrh	r3, [r4, #12]
 8026ae6:	07db      	lsls	r3, r3, #31
 8026ae8:	d506      	bpl.n	8026af8 <__swbuf_r+0x6c>
 8026aea:	2e0a      	cmp	r6, #10
 8026aec:	d104      	bne.n	8026af8 <__swbuf_r+0x6c>
 8026aee:	4621      	mov	r1, r4
 8026af0:	4628      	mov	r0, r5
 8026af2:	f000 f911 	bl	8026d18 <_fflush_r>
 8026af6:	b988      	cbnz	r0, 8026b1c <__swbuf_r+0x90>
 8026af8:	4638      	mov	r0, r7
 8026afa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026afc:	4b0a      	ldr	r3, [pc, #40]	; (8026b28 <__swbuf_r+0x9c>)
 8026afe:	429c      	cmp	r4, r3
 8026b00:	d101      	bne.n	8026b06 <__swbuf_r+0x7a>
 8026b02:	68ac      	ldr	r4, [r5, #8]
 8026b04:	e7cf      	b.n	8026aa6 <__swbuf_r+0x1a>
 8026b06:	4b09      	ldr	r3, [pc, #36]	; (8026b2c <__swbuf_r+0xa0>)
 8026b08:	429c      	cmp	r4, r3
 8026b0a:	bf08      	it	eq
 8026b0c:	68ec      	ldreq	r4, [r5, #12]
 8026b0e:	e7ca      	b.n	8026aa6 <__swbuf_r+0x1a>
 8026b10:	4621      	mov	r1, r4
 8026b12:	4628      	mov	r0, r5
 8026b14:	f000 f80c 	bl	8026b30 <__swsetup_r>
 8026b18:	2800      	cmp	r0, #0
 8026b1a:	d0cb      	beq.n	8026ab4 <__swbuf_r+0x28>
 8026b1c:	f04f 37ff 	mov.w	r7, #4294967295
 8026b20:	e7ea      	b.n	8026af8 <__swbuf_r+0x6c>
 8026b22:	bf00      	nop
 8026b24:	080283fc 	.word	0x080283fc
 8026b28:	0802841c 	.word	0x0802841c
 8026b2c:	080283dc 	.word	0x080283dc

08026b30 <__swsetup_r>:
 8026b30:	4b32      	ldr	r3, [pc, #200]	; (8026bfc <__swsetup_r+0xcc>)
 8026b32:	b570      	push	{r4, r5, r6, lr}
 8026b34:	681d      	ldr	r5, [r3, #0]
 8026b36:	4606      	mov	r6, r0
 8026b38:	460c      	mov	r4, r1
 8026b3a:	b125      	cbz	r5, 8026b46 <__swsetup_r+0x16>
 8026b3c:	69ab      	ldr	r3, [r5, #24]
 8026b3e:	b913      	cbnz	r3, 8026b46 <__swsetup_r+0x16>
 8026b40:	4628      	mov	r0, r5
 8026b42:	f000 f97d 	bl	8026e40 <__sinit>
 8026b46:	4b2e      	ldr	r3, [pc, #184]	; (8026c00 <__swsetup_r+0xd0>)
 8026b48:	429c      	cmp	r4, r3
 8026b4a:	d10f      	bne.n	8026b6c <__swsetup_r+0x3c>
 8026b4c:	686c      	ldr	r4, [r5, #4]
 8026b4e:	89a3      	ldrh	r3, [r4, #12]
 8026b50:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026b54:	0719      	lsls	r1, r3, #28
 8026b56:	d42c      	bmi.n	8026bb2 <__swsetup_r+0x82>
 8026b58:	06dd      	lsls	r5, r3, #27
 8026b5a:	d411      	bmi.n	8026b80 <__swsetup_r+0x50>
 8026b5c:	2309      	movs	r3, #9
 8026b5e:	6033      	str	r3, [r6, #0]
 8026b60:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8026b64:	81a3      	strh	r3, [r4, #12]
 8026b66:	f04f 30ff 	mov.w	r0, #4294967295
 8026b6a:	e03e      	b.n	8026bea <__swsetup_r+0xba>
 8026b6c:	4b25      	ldr	r3, [pc, #148]	; (8026c04 <__swsetup_r+0xd4>)
 8026b6e:	429c      	cmp	r4, r3
 8026b70:	d101      	bne.n	8026b76 <__swsetup_r+0x46>
 8026b72:	68ac      	ldr	r4, [r5, #8]
 8026b74:	e7eb      	b.n	8026b4e <__swsetup_r+0x1e>
 8026b76:	4b24      	ldr	r3, [pc, #144]	; (8026c08 <__swsetup_r+0xd8>)
 8026b78:	429c      	cmp	r4, r3
 8026b7a:	bf08      	it	eq
 8026b7c:	68ec      	ldreq	r4, [r5, #12]
 8026b7e:	e7e6      	b.n	8026b4e <__swsetup_r+0x1e>
 8026b80:	0758      	lsls	r0, r3, #29
 8026b82:	d512      	bpl.n	8026baa <__swsetup_r+0x7a>
 8026b84:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8026b86:	b141      	cbz	r1, 8026b9a <__swsetup_r+0x6a>
 8026b88:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026b8c:	4299      	cmp	r1, r3
 8026b8e:	d002      	beq.n	8026b96 <__swsetup_r+0x66>
 8026b90:	4630      	mov	r0, r6
 8026b92:	f7fd f96f 	bl	8023e74 <_free_r>
 8026b96:	2300      	movs	r3, #0
 8026b98:	6363      	str	r3, [r4, #52]	; 0x34
 8026b9a:	89a3      	ldrh	r3, [r4, #12]
 8026b9c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8026ba0:	81a3      	strh	r3, [r4, #12]
 8026ba2:	2300      	movs	r3, #0
 8026ba4:	6063      	str	r3, [r4, #4]
 8026ba6:	6923      	ldr	r3, [r4, #16]
 8026ba8:	6023      	str	r3, [r4, #0]
 8026baa:	89a3      	ldrh	r3, [r4, #12]
 8026bac:	f043 0308 	orr.w	r3, r3, #8
 8026bb0:	81a3      	strh	r3, [r4, #12]
 8026bb2:	6923      	ldr	r3, [r4, #16]
 8026bb4:	b94b      	cbnz	r3, 8026bca <__swsetup_r+0x9a>
 8026bb6:	89a3      	ldrh	r3, [r4, #12]
 8026bb8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8026bbc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8026bc0:	d003      	beq.n	8026bca <__swsetup_r+0x9a>
 8026bc2:	4621      	mov	r1, r4
 8026bc4:	4630      	mov	r0, r6
 8026bc6:	f000 f9fd 	bl	8026fc4 <__smakebuf_r>
 8026bca:	89a0      	ldrh	r0, [r4, #12]
 8026bcc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026bd0:	f010 0301 	ands.w	r3, r0, #1
 8026bd4:	d00a      	beq.n	8026bec <__swsetup_r+0xbc>
 8026bd6:	2300      	movs	r3, #0
 8026bd8:	60a3      	str	r3, [r4, #8]
 8026bda:	6963      	ldr	r3, [r4, #20]
 8026bdc:	425b      	negs	r3, r3
 8026bde:	61a3      	str	r3, [r4, #24]
 8026be0:	6923      	ldr	r3, [r4, #16]
 8026be2:	b943      	cbnz	r3, 8026bf6 <__swsetup_r+0xc6>
 8026be4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8026be8:	d1ba      	bne.n	8026b60 <__swsetup_r+0x30>
 8026bea:	bd70      	pop	{r4, r5, r6, pc}
 8026bec:	0781      	lsls	r1, r0, #30
 8026bee:	bf58      	it	pl
 8026bf0:	6963      	ldrpl	r3, [r4, #20]
 8026bf2:	60a3      	str	r3, [r4, #8]
 8026bf4:	e7f4      	b.n	8026be0 <__swsetup_r+0xb0>
 8026bf6:	2000      	movs	r0, #0
 8026bf8:	e7f7      	b.n	8026bea <__swsetup_r+0xba>
 8026bfa:	bf00      	nop
 8026bfc:	20000010 	.word	0x20000010
 8026c00:	080283fc 	.word	0x080283fc
 8026c04:	0802841c 	.word	0x0802841c
 8026c08:	080283dc 	.word	0x080283dc

08026c0c <__sflush_r>:
 8026c0c:	898a      	ldrh	r2, [r1, #12]
 8026c0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026c12:	4605      	mov	r5, r0
 8026c14:	0710      	lsls	r0, r2, #28
 8026c16:	460c      	mov	r4, r1
 8026c18:	d458      	bmi.n	8026ccc <__sflush_r+0xc0>
 8026c1a:	684b      	ldr	r3, [r1, #4]
 8026c1c:	2b00      	cmp	r3, #0
 8026c1e:	dc05      	bgt.n	8026c2c <__sflush_r+0x20>
 8026c20:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8026c22:	2b00      	cmp	r3, #0
 8026c24:	dc02      	bgt.n	8026c2c <__sflush_r+0x20>
 8026c26:	2000      	movs	r0, #0
 8026c28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026c2c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8026c2e:	2e00      	cmp	r6, #0
 8026c30:	d0f9      	beq.n	8026c26 <__sflush_r+0x1a>
 8026c32:	2300      	movs	r3, #0
 8026c34:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8026c38:	682f      	ldr	r7, [r5, #0]
 8026c3a:	602b      	str	r3, [r5, #0]
 8026c3c:	d032      	beq.n	8026ca4 <__sflush_r+0x98>
 8026c3e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8026c40:	89a3      	ldrh	r3, [r4, #12]
 8026c42:	075a      	lsls	r2, r3, #29
 8026c44:	d505      	bpl.n	8026c52 <__sflush_r+0x46>
 8026c46:	6863      	ldr	r3, [r4, #4]
 8026c48:	1ac0      	subs	r0, r0, r3
 8026c4a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8026c4c:	b10b      	cbz	r3, 8026c52 <__sflush_r+0x46>
 8026c4e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8026c50:	1ac0      	subs	r0, r0, r3
 8026c52:	2300      	movs	r3, #0
 8026c54:	4602      	mov	r2, r0
 8026c56:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8026c58:	6a21      	ldr	r1, [r4, #32]
 8026c5a:	4628      	mov	r0, r5
 8026c5c:	47b0      	blx	r6
 8026c5e:	1c43      	adds	r3, r0, #1
 8026c60:	89a3      	ldrh	r3, [r4, #12]
 8026c62:	d106      	bne.n	8026c72 <__sflush_r+0x66>
 8026c64:	6829      	ldr	r1, [r5, #0]
 8026c66:	291d      	cmp	r1, #29
 8026c68:	d82c      	bhi.n	8026cc4 <__sflush_r+0xb8>
 8026c6a:	4a2a      	ldr	r2, [pc, #168]	; (8026d14 <__sflush_r+0x108>)
 8026c6c:	40ca      	lsrs	r2, r1
 8026c6e:	07d6      	lsls	r6, r2, #31
 8026c70:	d528      	bpl.n	8026cc4 <__sflush_r+0xb8>
 8026c72:	2200      	movs	r2, #0
 8026c74:	6062      	str	r2, [r4, #4]
 8026c76:	04d9      	lsls	r1, r3, #19
 8026c78:	6922      	ldr	r2, [r4, #16]
 8026c7a:	6022      	str	r2, [r4, #0]
 8026c7c:	d504      	bpl.n	8026c88 <__sflush_r+0x7c>
 8026c7e:	1c42      	adds	r2, r0, #1
 8026c80:	d101      	bne.n	8026c86 <__sflush_r+0x7a>
 8026c82:	682b      	ldr	r3, [r5, #0]
 8026c84:	b903      	cbnz	r3, 8026c88 <__sflush_r+0x7c>
 8026c86:	6560      	str	r0, [r4, #84]	; 0x54
 8026c88:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8026c8a:	602f      	str	r7, [r5, #0]
 8026c8c:	2900      	cmp	r1, #0
 8026c8e:	d0ca      	beq.n	8026c26 <__sflush_r+0x1a>
 8026c90:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026c94:	4299      	cmp	r1, r3
 8026c96:	d002      	beq.n	8026c9e <__sflush_r+0x92>
 8026c98:	4628      	mov	r0, r5
 8026c9a:	f7fd f8eb 	bl	8023e74 <_free_r>
 8026c9e:	2000      	movs	r0, #0
 8026ca0:	6360      	str	r0, [r4, #52]	; 0x34
 8026ca2:	e7c1      	b.n	8026c28 <__sflush_r+0x1c>
 8026ca4:	6a21      	ldr	r1, [r4, #32]
 8026ca6:	2301      	movs	r3, #1
 8026ca8:	4628      	mov	r0, r5
 8026caa:	47b0      	blx	r6
 8026cac:	1c41      	adds	r1, r0, #1
 8026cae:	d1c7      	bne.n	8026c40 <__sflush_r+0x34>
 8026cb0:	682b      	ldr	r3, [r5, #0]
 8026cb2:	2b00      	cmp	r3, #0
 8026cb4:	d0c4      	beq.n	8026c40 <__sflush_r+0x34>
 8026cb6:	2b1d      	cmp	r3, #29
 8026cb8:	d001      	beq.n	8026cbe <__sflush_r+0xb2>
 8026cba:	2b16      	cmp	r3, #22
 8026cbc:	d101      	bne.n	8026cc2 <__sflush_r+0xb6>
 8026cbe:	602f      	str	r7, [r5, #0]
 8026cc0:	e7b1      	b.n	8026c26 <__sflush_r+0x1a>
 8026cc2:	89a3      	ldrh	r3, [r4, #12]
 8026cc4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8026cc8:	81a3      	strh	r3, [r4, #12]
 8026cca:	e7ad      	b.n	8026c28 <__sflush_r+0x1c>
 8026ccc:	690f      	ldr	r7, [r1, #16]
 8026cce:	2f00      	cmp	r7, #0
 8026cd0:	d0a9      	beq.n	8026c26 <__sflush_r+0x1a>
 8026cd2:	0793      	lsls	r3, r2, #30
 8026cd4:	680e      	ldr	r6, [r1, #0]
 8026cd6:	bf08      	it	eq
 8026cd8:	694b      	ldreq	r3, [r1, #20]
 8026cda:	600f      	str	r7, [r1, #0]
 8026cdc:	bf18      	it	ne
 8026cde:	2300      	movne	r3, #0
 8026ce0:	eba6 0807 	sub.w	r8, r6, r7
 8026ce4:	608b      	str	r3, [r1, #8]
 8026ce6:	f1b8 0f00 	cmp.w	r8, #0
 8026cea:	dd9c      	ble.n	8026c26 <__sflush_r+0x1a>
 8026cec:	6a21      	ldr	r1, [r4, #32]
 8026cee:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8026cf0:	4643      	mov	r3, r8
 8026cf2:	463a      	mov	r2, r7
 8026cf4:	4628      	mov	r0, r5
 8026cf6:	47b0      	blx	r6
 8026cf8:	2800      	cmp	r0, #0
 8026cfa:	dc06      	bgt.n	8026d0a <__sflush_r+0xfe>
 8026cfc:	89a3      	ldrh	r3, [r4, #12]
 8026cfe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8026d02:	81a3      	strh	r3, [r4, #12]
 8026d04:	f04f 30ff 	mov.w	r0, #4294967295
 8026d08:	e78e      	b.n	8026c28 <__sflush_r+0x1c>
 8026d0a:	4407      	add	r7, r0
 8026d0c:	eba8 0800 	sub.w	r8, r8, r0
 8026d10:	e7e9      	b.n	8026ce6 <__sflush_r+0xda>
 8026d12:	bf00      	nop
 8026d14:	20400001 	.word	0x20400001

08026d18 <_fflush_r>:
 8026d18:	b538      	push	{r3, r4, r5, lr}
 8026d1a:	690b      	ldr	r3, [r1, #16]
 8026d1c:	4605      	mov	r5, r0
 8026d1e:	460c      	mov	r4, r1
 8026d20:	b913      	cbnz	r3, 8026d28 <_fflush_r+0x10>
 8026d22:	2500      	movs	r5, #0
 8026d24:	4628      	mov	r0, r5
 8026d26:	bd38      	pop	{r3, r4, r5, pc}
 8026d28:	b118      	cbz	r0, 8026d32 <_fflush_r+0x1a>
 8026d2a:	6983      	ldr	r3, [r0, #24]
 8026d2c:	b90b      	cbnz	r3, 8026d32 <_fflush_r+0x1a>
 8026d2e:	f000 f887 	bl	8026e40 <__sinit>
 8026d32:	4b14      	ldr	r3, [pc, #80]	; (8026d84 <_fflush_r+0x6c>)
 8026d34:	429c      	cmp	r4, r3
 8026d36:	d11b      	bne.n	8026d70 <_fflush_r+0x58>
 8026d38:	686c      	ldr	r4, [r5, #4]
 8026d3a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026d3e:	2b00      	cmp	r3, #0
 8026d40:	d0ef      	beq.n	8026d22 <_fflush_r+0xa>
 8026d42:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8026d44:	07d0      	lsls	r0, r2, #31
 8026d46:	d404      	bmi.n	8026d52 <_fflush_r+0x3a>
 8026d48:	0599      	lsls	r1, r3, #22
 8026d4a:	d402      	bmi.n	8026d52 <_fflush_r+0x3a>
 8026d4c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8026d4e:	f7fe fcec 	bl	802572a <__retarget_lock_acquire_recursive>
 8026d52:	4628      	mov	r0, r5
 8026d54:	4621      	mov	r1, r4
 8026d56:	f7ff ff59 	bl	8026c0c <__sflush_r>
 8026d5a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8026d5c:	07da      	lsls	r2, r3, #31
 8026d5e:	4605      	mov	r5, r0
 8026d60:	d4e0      	bmi.n	8026d24 <_fflush_r+0xc>
 8026d62:	89a3      	ldrh	r3, [r4, #12]
 8026d64:	059b      	lsls	r3, r3, #22
 8026d66:	d4dd      	bmi.n	8026d24 <_fflush_r+0xc>
 8026d68:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8026d6a:	f7fe fce0 	bl	802572e <__retarget_lock_release_recursive>
 8026d6e:	e7d9      	b.n	8026d24 <_fflush_r+0xc>
 8026d70:	4b05      	ldr	r3, [pc, #20]	; (8026d88 <_fflush_r+0x70>)
 8026d72:	429c      	cmp	r4, r3
 8026d74:	d101      	bne.n	8026d7a <_fflush_r+0x62>
 8026d76:	68ac      	ldr	r4, [r5, #8]
 8026d78:	e7df      	b.n	8026d3a <_fflush_r+0x22>
 8026d7a:	4b04      	ldr	r3, [pc, #16]	; (8026d8c <_fflush_r+0x74>)
 8026d7c:	429c      	cmp	r4, r3
 8026d7e:	bf08      	it	eq
 8026d80:	68ec      	ldreq	r4, [r5, #12]
 8026d82:	e7da      	b.n	8026d3a <_fflush_r+0x22>
 8026d84:	080283fc 	.word	0x080283fc
 8026d88:	0802841c 	.word	0x0802841c
 8026d8c:	080283dc 	.word	0x080283dc

08026d90 <std>:
 8026d90:	2300      	movs	r3, #0
 8026d92:	b510      	push	{r4, lr}
 8026d94:	4604      	mov	r4, r0
 8026d96:	e9c0 3300 	strd	r3, r3, [r0]
 8026d9a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8026d9e:	6083      	str	r3, [r0, #8]
 8026da0:	8181      	strh	r1, [r0, #12]
 8026da2:	6643      	str	r3, [r0, #100]	; 0x64
 8026da4:	81c2      	strh	r2, [r0, #14]
 8026da6:	6183      	str	r3, [r0, #24]
 8026da8:	4619      	mov	r1, r3
 8026daa:	2208      	movs	r2, #8
 8026dac:	305c      	adds	r0, #92	; 0x5c
 8026dae:	f7fd f859 	bl	8023e64 <memset>
 8026db2:	4b05      	ldr	r3, [pc, #20]	; (8026dc8 <std+0x38>)
 8026db4:	6263      	str	r3, [r4, #36]	; 0x24
 8026db6:	4b05      	ldr	r3, [pc, #20]	; (8026dcc <std+0x3c>)
 8026db8:	62a3      	str	r3, [r4, #40]	; 0x28
 8026dba:	4b05      	ldr	r3, [pc, #20]	; (8026dd0 <std+0x40>)
 8026dbc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8026dbe:	4b05      	ldr	r3, [pc, #20]	; (8026dd4 <std+0x44>)
 8026dc0:	6224      	str	r4, [r4, #32]
 8026dc2:	6323      	str	r3, [r4, #48]	; 0x30
 8026dc4:	bd10      	pop	{r4, pc}
 8026dc6:	bf00      	nop
 8026dc8:	08027055 	.word	0x08027055
 8026dcc:	08027077 	.word	0x08027077
 8026dd0:	080270af 	.word	0x080270af
 8026dd4:	080270d3 	.word	0x080270d3

08026dd8 <_cleanup_r>:
 8026dd8:	4901      	ldr	r1, [pc, #4]	; (8026de0 <_cleanup_r+0x8>)
 8026dda:	f000 b8af 	b.w	8026f3c <_fwalk_reent>
 8026dde:	bf00      	nop
 8026de0:	08026d19 	.word	0x08026d19

08026de4 <__sfmoreglue>:
 8026de4:	b570      	push	{r4, r5, r6, lr}
 8026de6:	1e4a      	subs	r2, r1, #1
 8026de8:	2568      	movs	r5, #104	; 0x68
 8026dea:	4355      	muls	r5, r2
 8026dec:	460e      	mov	r6, r1
 8026dee:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8026df2:	f7fd f88f 	bl	8023f14 <_malloc_r>
 8026df6:	4604      	mov	r4, r0
 8026df8:	b140      	cbz	r0, 8026e0c <__sfmoreglue+0x28>
 8026dfa:	2100      	movs	r1, #0
 8026dfc:	e9c0 1600 	strd	r1, r6, [r0]
 8026e00:	300c      	adds	r0, #12
 8026e02:	60a0      	str	r0, [r4, #8]
 8026e04:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8026e08:	f7fd f82c 	bl	8023e64 <memset>
 8026e0c:	4620      	mov	r0, r4
 8026e0e:	bd70      	pop	{r4, r5, r6, pc}

08026e10 <__sfp_lock_acquire>:
 8026e10:	4801      	ldr	r0, [pc, #4]	; (8026e18 <__sfp_lock_acquire+0x8>)
 8026e12:	f7fe bc8a 	b.w	802572a <__retarget_lock_acquire_recursive>
 8026e16:	bf00      	nop
 8026e18:	200007c8 	.word	0x200007c8

08026e1c <__sfp_lock_release>:
 8026e1c:	4801      	ldr	r0, [pc, #4]	; (8026e24 <__sfp_lock_release+0x8>)
 8026e1e:	f7fe bc86 	b.w	802572e <__retarget_lock_release_recursive>
 8026e22:	bf00      	nop
 8026e24:	200007c8 	.word	0x200007c8

08026e28 <__sinit_lock_acquire>:
 8026e28:	4801      	ldr	r0, [pc, #4]	; (8026e30 <__sinit_lock_acquire+0x8>)
 8026e2a:	f7fe bc7e 	b.w	802572a <__retarget_lock_acquire_recursive>
 8026e2e:	bf00      	nop
 8026e30:	200007c7 	.word	0x200007c7

08026e34 <__sinit_lock_release>:
 8026e34:	4801      	ldr	r0, [pc, #4]	; (8026e3c <__sinit_lock_release+0x8>)
 8026e36:	f7fe bc7a 	b.w	802572e <__retarget_lock_release_recursive>
 8026e3a:	bf00      	nop
 8026e3c:	200007c7 	.word	0x200007c7

08026e40 <__sinit>:
 8026e40:	b510      	push	{r4, lr}
 8026e42:	4604      	mov	r4, r0
 8026e44:	f7ff fff0 	bl	8026e28 <__sinit_lock_acquire>
 8026e48:	69a3      	ldr	r3, [r4, #24]
 8026e4a:	b11b      	cbz	r3, 8026e54 <__sinit+0x14>
 8026e4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026e50:	f7ff bff0 	b.w	8026e34 <__sinit_lock_release>
 8026e54:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8026e58:	6523      	str	r3, [r4, #80]	; 0x50
 8026e5a:	4b13      	ldr	r3, [pc, #76]	; (8026ea8 <__sinit+0x68>)
 8026e5c:	4a13      	ldr	r2, [pc, #76]	; (8026eac <__sinit+0x6c>)
 8026e5e:	681b      	ldr	r3, [r3, #0]
 8026e60:	62a2      	str	r2, [r4, #40]	; 0x28
 8026e62:	42a3      	cmp	r3, r4
 8026e64:	bf04      	itt	eq
 8026e66:	2301      	moveq	r3, #1
 8026e68:	61a3      	streq	r3, [r4, #24]
 8026e6a:	4620      	mov	r0, r4
 8026e6c:	f000 f820 	bl	8026eb0 <__sfp>
 8026e70:	6060      	str	r0, [r4, #4]
 8026e72:	4620      	mov	r0, r4
 8026e74:	f000 f81c 	bl	8026eb0 <__sfp>
 8026e78:	60a0      	str	r0, [r4, #8]
 8026e7a:	4620      	mov	r0, r4
 8026e7c:	f000 f818 	bl	8026eb0 <__sfp>
 8026e80:	2200      	movs	r2, #0
 8026e82:	60e0      	str	r0, [r4, #12]
 8026e84:	2104      	movs	r1, #4
 8026e86:	6860      	ldr	r0, [r4, #4]
 8026e88:	f7ff ff82 	bl	8026d90 <std>
 8026e8c:	68a0      	ldr	r0, [r4, #8]
 8026e8e:	2201      	movs	r2, #1
 8026e90:	2109      	movs	r1, #9
 8026e92:	f7ff ff7d 	bl	8026d90 <std>
 8026e96:	68e0      	ldr	r0, [r4, #12]
 8026e98:	2202      	movs	r2, #2
 8026e9a:	2112      	movs	r1, #18
 8026e9c:	f7ff ff78 	bl	8026d90 <std>
 8026ea0:	2301      	movs	r3, #1
 8026ea2:	61a3      	str	r3, [r4, #24]
 8026ea4:	e7d2      	b.n	8026e4c <__sinit+0xc>
 8026ea6:	bf00      	nop
 8026ea8:	08027fe0 	.word	0x08027fe0
 8026eac:	08026dd9 	.word	0x08026dd9

08026eb0 <__sfp>:
 8026eb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026eb2:	4607      	mov	r7, r0
 8026eb4:	f7ff ffac 	bl	8026e10 <__sfp_lock_acquire>
 8026eb8:	4b1e      	ldr	r3, [pc, #120]	; (8026f34 <__sfp+0x84>)
 8026eba:	681e      	ldr	r6, [r3, #0]
 8026ebc:	69b3      	ldr	r3, [r6, #24]
 8026ebe:	b913      	cbnz	r3, 8026ec6 <__sfp+0x16>
 8026ec0:	4630      	mov	r0, r6
 8026ec2:	f7ff ffbd 	bl	8026e40 <__sinit>
 8026ec6:	3648      	adds	r6, #72	; 0x48
 8026ec8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8026ecc:	3b01      	subs	r3, #1
 8026ece:	d503      	bpl.n	8026ed8 <__sfp+0x28>
 8026ed0:	6833      	ldr	r3, [r6, #0]
 8026ed2:	b30b      	cbz	r3, 8026f18 <__sfp+0x68>
 8026ed4:	6836      	ldr	r6, [r6, #0]
 8026ed6:	e7f7      	b.n	8026ec8 <__sfp+0x18>
 8026ed8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8026edc:	b9d5      	cbnz	r5, 8026f14 <__sfp+0x64>
 8026ede:	4b16      	ldr	r3, [pc, #88]	; (8026f38 <__sfp+0x88>)
 8026ee0:	60e3      	str	r3, [r4, #12]
 8026ee2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8026ee6:	6665      	str	r5, [r4, #100]	; 0x64
 8026ee8:	f7fe fc1e 	bl	8025728 <__retarget_lock_init_recursive>
 8026eec:	f7ff ff96 	bl	8026e1c <__sfp_lock_release>
 8026ef0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8026ef4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8026ef8:	6025      	str	r5, [r4, #0]
 8026efa:	61a5      	str	r5, [r4, #24]
 8026efc:	2208      	movs	r2, #8
 8026efe:	4629      	mov	r1, r5
 8026f00:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8026f04:	f7fc ffae 	bl	8023e64 <memset>
 8026f08:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8026f0c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8026f10:	4620      	mov	r0, r4
 8026f12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026f14:	3468      	adds	r4, #104	; 0x68
 8026f16:	e7d9      	b.n	8026ecc <__sfp+0x1c>
 8026f18:	2104      	movs	r1, #4
 8026f1a:	4638      	mov	r0, r7
 8026f1c:	f7ff ff62 	bl	8026de4 <__sfmoreglue>
 8026f20:	4604      	mov	r4, r0
 8026f22:	6030      	str	r0, [r6, #0]
 8026f24:	2800      	cmp	r0, #0
 8026f26:	d1d5      	bne.n	8026ed4 <__sfp+0x24>
 8026f28:	f7ff ff78 	bl	8026e1c <__sfp_lock_release>
 8026f2c:	230c      	movs	r3, #12
 8026f2e:	603b      	str	r3, [r7, #0]
 8026f30:	e7ee      	b.n	8026f10 <__sfp+0x60>
 8026f32:	bf00      	nop
 8026f34:	08027fe0 	.word	0x08027fe0
 8026f38:	ffff0001 	.word	0xffff0001

08026f3c <_fwalk_reent>:
 8026f3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026f40:	4606      	mov	r6, r0
 8026f42:	4688      	mov	r8, r1
 8026f44:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8026f48:	2700      	movs	r7, #0
 8026f4a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8026f4e:	f1b9 0901 	subs.w	r9, r9, #1
 8026f52:	d505      	bpl.n	8026f60 <_fwalk_reent+0x24>
 8026f54:	6824      	ldr	r4, [r4, #0]
 8026f56:	2c00      	cmp	r4, #0
 8026f58:	d1f7      	bne.n	8026f4a <_fwalk_reent+0xe>
 8026f5a:	4638      	mov	r0, r7
 8026f5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8026f60:	89ab      	ldrh	r3, [r5, #12]
 8026f62:	2b01      	cmp	r3, #1
 8026f64:	d907      	bls.n	8026f76 <_fwalk_reent+0x3a>
 8026f66:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8026f6a:	3301      	adds	r3, #1
 8026f6c:	d003      	beq.n	8026f76 <_fwalk_reent+0x3a>
 8026f6e:	4629      	mov	r1, r5
 8026f70:	4630      	mov	r0, r6
 8026f72:	47c0      	blx	r8
 8026f74:	4307      	orrs	r7, r0
 8026f76:	3568      	adds	r5, #104	; 0x68
 8026f78:	e7e9      	b.n	8026f4e <_fwalk_reent+0x12>

08026f7a <__swhatbuf_r>:
 8026f7a:	b570      	push	{r4, r5, r6, lr}
 8026f7c:	460e      	mov	r6, r1
 8026f7e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026f82:	2900      	cmp	r1, #0
 8026f84:	b096      	sub	sp, #88	; 0x58
 8026f86:	4614      	mov	r4, r2
 8026f88:	461d      	mov	r5, r3
 8026f8a:	da07      	bge.n	8026f9c <__swhatbuf_r+0x22>
 8026f8c:	2300      	movs	r3, #0
 8026f8e:	602b      	str	r3, [r5, #0]
 8026f90:	89b3      	ldrh	r3, [r6, #12]
 8026f92:	061a      	lsls	r2, r3, #24
 8026f94:	d410      	bmi.n	8026fb8 <__swhatbuf_r+0x3e>
 8026f96:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8026f9a:	e00e      	b.n	8026fba <__swhatbuf_r+0x40>
 8026f9c:	466a      	mov	r2, sp
 8026f9e:	f000 f8bf 	bl	8027120 <_fstat_r>
 8026fa2:	2800      	cmp	r0, #0
 8026fa4:	dbf2      	blt.n	8026f8c <__swhatbuf_r+0x12>
 8026fa6:	9a01      	ldr	r2, [sp, #4]
 8026fa8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8026fac:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8026fb0:	425a      	negs	r2, r3
 8026fb2:	415a      	adcs	r2, r3
 8026fb4:	602a      	str	r2, [r5, #0]
 8026fb6:	e7ee      	b.n	8026f96 <__swhatbuf_r+0x1c>
 8026fb8:	2340      	movs	r3, #64	; 0x40
 8026fba:	2000      	movs	r0, #0
 8026fbc:	6023      	str	r3, [r4, #0]
 8026fbe:	b016      	add	sp, #88	; 0x58
 8026fc0:	bd70      	pop	{r4, r5, r6, pc}
	...

08026fc4 <__smakebuf_r>:
 8026fc4:	898b      	ldrh	r3, [r1, #12]
 8026fc6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8026fc8:	079d      	lsls	r5, r3, #30
 8026fca:	4606      	mov	r6, r0
 8026fcc:	460c      	mov	r4, r1
 8026fce:	d507      	bpl.n	8026fe0 <__smakebuf_r+0x1c>
 8026fd0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8026fd4:	6023      	str	r3, [r4, #0]
 8026fd6:	6123      	str	r3, [r4, #16]
 8026fd8:	2301      	movs	r3, #1
 8026fda:	6163      	str	r3, [r4, #20]
 8026fdc:	b002      	add	sp, #8
 8026fde:	bd70      	pop	{r4, r5, r6, pc}
 8026fe0:	ab01      	add	r3, sp, #4
 8026fe2:	466a      	mov	r2, sp
 8026fe4:	f7ff ffc9 	bl	8026f7a <__swhatbuf_r>
 8026fe8:	9900      	ldr	r1, [sp, #0]
 8026fea:	4605      	mov	r5, r0
 8026fec:	4630      	mov	r0, r6
 8026fee:	f7fc ff91 	bl	8023f14 <_malloc_r>
 8026ff2:	b948      	cbnz	r0, 8027008 <__smakebuf_r+0x44>
 8026ff4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026ff8:	059a      	lsls	r2, r3, #22
 8026ffa:	d4ef      	bmi.n	8026fdc <__smakebuf_r+0x18>
 8026ffc:	f023 0303 	bic.w	r3, r3, #3
 8027000:	f043 0302 	orr.w	r3, r3, #2
 8027004:	81a3      	strh	r3, [r4, #12]
 8027006:	e7e3      	b.n	8026fd0 <__smakebuf_r+0xc>
 8027008:	4b0d      	ldr	r3, [pc, #52]	; (8027040 <__smakebuf_r+0x7c>)
 802700a:	62b3      	str	r3, [r6, #40]	; 0x28
 802700c:	89a3      	ldrh	r3, [r4, #12]
 802700e:	6020      	str	r0, [r4, #0]
 8027010:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8027014:	81a3      	strh	r3, [r4, #12]
 8027016:	9b00      	ldr	r3, [sp, #0]
 8027018:	6163      	str	r3, [r4, #20]
 802701a:	9b01      	ldr	r3, [sp, #4]
 802701c:	6120      	str	r0, [r4, #16]
 802701e:	b15b      	cbz	r3, 8027038 <__smakebuf_r+0x74>
 8027020:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8027024:	4630      	mov	r0, r6
 8027026:	f000 f88d 	bl	8027144 <_isatty_r>
 802702a:	b128      	cbz	r0, 8027038 <__smakebuf_r+0x74>
 802702c:	89a3      	ldrh	r3, [r4, #12]
 802702e:	f023 0303 	bic.w	r3, r3, #3
 8027032:	f043 0301 	orr.w	r3, r3, #1
 8027036:	81a3      	strh	r3, [r4, #12]
 8027038:	89a0      	ldrh	r0, [r4, #12]
 802703a:	4305      	orrs	r5, r0
 802703c:	81a5      	strh	r5, [r4, #12]
 802703e:	e7cd      	b.n	8026fdc <__smakebuf_r+0x18>
 8027040:	08026dd9 	.word	0x08026dd9

08027044 <_malloc_usable_size_r>:
 8027044:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8027048:	1f18      	subs	r0, r3, #4
 802704a:	2b00      	cmp	r3, #0
 802704c:	bfbc      	itt	lt
 802704e:	580b      	ldrlt	r3, [r1, r0]
 8027050:	18c0      	addlt	r0, r0, r3
 8027052:	4770      	bx	lr

08027054 <__sread>:
 8027054:	b510      	push	{r4, lr}
 8027056:	460c      	mov	r4, r1
 8027058:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802705c:	f000 f894 	bl	8027188 <_read_r>
 8027060:	2800      	cmp	r0, #0
 8027062:	bfab      	itete	ge
 8027064:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8027066:	89a3      	ldrhlt	r3, [r4, #12]
 8027068:	181b      	addge	r3, r3, r0
 802706a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802706e:	bfac      	ite	ge
 8027070:	6563      	strge	r3, [r4, #84]	; 0x54
 8027072:	81a3      	strhlt	r3, [r4, #12]
 8027074:	bd10      	pop	{r4, pc}

08027076 <__swrite>:
 8027076:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802707a:	461f      	mov	r7, r3
 802707c:	898b      	ldrh	r3, [r1, #12]
 802707e:	05db      	lsls	r3, r3, #23
 8027080:	4605      	mov	r5, r0
 8027082:	460c      	mov	r4, r1
 8027084:	4616      	mov	r6, r2
 8027086:	d505      	bpl.n	8027094 <__swrite+0x1e>
 8027088:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802708c:	2302      	movs	r3, #2
 802708e:	2200      	movs	r2, #0
 8027090:	f000 f868 	bl	8027164 <_lseek_r>
 8027094:	89a3      	ldrh	r3, [r4, #12]
 8027096:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802709a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802709e:	81a3      	strh	r3, [r4, #12]
 80270a0:	4632      	mov	r2, r6
 80270a2:	463b      	mov	r3, r7
 80270a4:	4628      	mov	r0, r5
 80270a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80270aa:	f000 b817 	b.w	80270dc <_write_r>

080270ae <__sseek>:
 80270ae:	b510      	push	{r4, lr}
 80270b0:	460c      	mov	r4, r1
 80270b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80270b6:	f000 f855 	bl	8027164 <_lseek_r>
 80270ba:	1c43      	adds	r3, r0, #1
 80270bc:	89a3      	ldrh	r3, [r4, #12]
 80270be:	bf15      	itete	ne
 80270c0:	6560      	strne	r0, [r4, #84]	; 0x54
 80270c2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80270c6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80270ca:	81a3      	strheq	r3, [r4, #12]
 80270cc:	bf18      	it	ne
 80270ce:	81a3      	strhne	r3, [r4, #12]
 80270d0:	bd10      	pop	{r4, pc}

080270d2 <__sclose>:
 80270d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80270d6:	f000 b813 	b.w	8027100 <_close_r>
	...

080270dc <_write_r>:
 80270dc:	b538      	push	{r3, r4, r5, lr}
 80270de:	4d07      	ldr	r5, [pc, #28]	; (80270fc <_write_r+0x20>)
 80270e0:	4604      	mov	r4, r0
 80270e2:	4608      	mov	r0, r1
 80270e4:	4611      	mov	r1, r2
 80270e6:	2200      	movs	r2, #0
 80270e8:	602a      	str	r2, [r5, #0]
 80270ea:	461a      	mov	r2, r3
 80270ec:	f7f7 f915 	bl	801e31a <_write>
 80270f0:	1c43      	adds	r3, r0, #1
 80270f2:	d102      	bne.n	80270fa <_write_r+0x1e>
 80270f4:	682b      	ldr	r3, [r5, #0]
 80270f6:	b103      	cbz	r3, 80270fa <_write_r+0x1e>
 80270f8:	6023      	str	r3, [r4, #0]
 80270fa:	bd38      	pop	{r3, r4, r5, pc}
 80270fc:	200007d0 	.word	0x200007d0

08027100 <_close_r>:
 8027100:	b538      	push	{r3, r4, r5, lr}
 8027102:	4d06      	ldr	r5, [pc, #24]	; (802711c <_close_r+0x1c>)
 8027104:	2300      	movs	r3, #0
 8027106:	4604      	mov	r4, r0
 8027108:	4608      	mov	r0, r1
 802710a:	602b      	str	r3, [r5, #0]
 802710c:	f7f7 f921 	bl	801e352 <_close>
 8027110:	1c43      	adds	r3, r0, #1
 8027112:	d102      	bne.n	802711a <_close_r+0x1a>
 8027114:	682b      	ldr	r3, [r5, #0]
 8027116:	b103      	cbz	r3, 802711a <_close_r+0x1a>
 8027118:	6023      	str	r3, [r4, #0]
 802711a:	bd38      	pop	{r3, r4, r5, pc}
 802711c:	200007d0 	.word	0x200007d0

08027120 <_fstat_r>:
 8027120:	b538      	push	{r3, r4, r5, lr}
 8027122:	4d07      	ldr	r5, [pc, #28]	; (8027140 <_fstat_r+0x20>)
 8027124:	2300      	movs	r3, #0
 8027126:	4604      	mov	r4, r0
 8027128:	4608      	mov	r0, r1
 802712a:	4611      	mov	r1, r2
 802712c:	602b      	str	r3, [r5, #0]
 802712e:	f7f7 f91c 	bl	801e36a <_fstat>
 8027132:	1c43      	adds	r3, r0, #1
 8027134:	d102      	bne.n	802713c <_fstat_r+0x1c>
 8027136:	682b      	ldr	r3, [r5, #0]
 8027138:	b103      	cbz	r3, 802713c <_fstat_r+0x1c>
 802713a:	6023      	str	r3, [r4, #0]
 802713c:	bd38      	pop	{r3, r4, r5, pc}
 802713e:	bf00      	nop
 8027140:	200007d0 	.word	0x200007d0

08027144 <_isatty_r>:
 8027144:	b538      	push	{r3, r4, r5, lr}
 8027146:	4d06      	ldr	r5, [pc, #24]	; (8027160 <_isatty_r+0x1c>)
 8027148:	2300      	movs	r3, #0
 802714a:	4604      	mov	r4, r0
 802714c:	4608      	mov	r0, r1
 802714e:	602b      	str	r3, [r5, #0]
 8027150:	f7f7 f91b 	bl	801e38a <_isatty>
 8027154:	1c43      	adds	r3, r0, #1
 8027156:	d102      	bne.n	802715e <_isatty_r+0x1a>
 8027158:	682b      	ldr	r3, [r5, #0]
 802715a:	b103      	cbz	r3, 802715e <_isatty_r+0x1a>
 802715c:	6023      	str	r3, [r4, #0]
 802715e:	bd38      	pop	{r3, r4, r5, pc}
 8027160:	200007d0 	.word	0x200007d0

08027164 <_lseek_r>:
 8027164:	b538      	push	{r3, r4, r5, lr}
 8027166:	4d07      	ldr	r5, [pc, #28]	; (8027184 <_lseek_r+0x20>)
 8027168:	4604      	mov	r4, r0
 802716a:	4608      	mov	r0, r1
 802716c:	4611      	mov	r1, r2
 802716e:	2200      	movs	r2, #0
 8027170:	602a      	str	r2, [r5, #0]
 8027172:	461a      	mov	r2, r3
 8027174:	f7f7 f914 	bl	801e3a0 <_lseek>
 8027178:	1c43      	adds	r3, r0, #1
 802717a:	d102      	bne.n	8027182 <_lseek_r+0x1e>
 802717c:	682b      	ldr	r3, [r5, #0]
 802717e:	b103      	cbz	r3, 8027182 <_lseek_r+0x1e>
 8027180:	6023      	str	r3, [r4, #0]
 8027182:	bd38      	pop	{r3, r4, r5, pc}
 8027184:	200007d0 	.word	0x200007d0

08027188 <_read_r>:
 8027188:	b538      	push	{r3, r4, r5, lr}
 802718a:	4d07      	ldr	r5, [pc, #28]	; (80271a8 <_read_r+0x20>)
 802718c:	4604      	mov	r4, r0
 802718e:	4608      	mov	r0, r1
 8027190:	4611      	mov	r1, r2
 8027192:	2200      	movs	r2, #0
 8027194:	602a      	str	r2, [r5, #0]
 8027196:	461a      	mov	r2, r3
 8027198:	f7f7 f8a2 	bl	801e2e0 <_read>
 802719c:	1c43      	adds	r3, r0, #1
 802719e:	d102      	bne.n	80271a6 <_read_r+0x1e>
 80271a0:	682b      	ldr	r3, [r5, #0]
 80271a2:	b103      	cbz	r3, 80271a6 <_read_r+0x1e>
 80271a4:	6023      	str	r3, [r4, #0]
 80271a6:	bd38      	pop	{r3, r4, r5, pc}
 80271a8:	200007d0 	.word	0x200007d0

080271ac <_init>:
 80271ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80271ae:	bf00      	nop
 80271b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80271b2:	bc08      	pop	{r3}
 80271b4:	469e      	mov	lr, r3
 80271b6:	4770      	bx	lr

080271b8 <_fini>:
 80271b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80271ba:	bf00      	nop
 80271bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80271be:	bc08      	pop	{r3}
 80271c0:	469e      	mov	lr, r3
 80271c2:	4770      	bx	lr
